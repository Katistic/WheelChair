! function(c) {
  var d = {};

  function e(f) {
    if (d[f]) return d[f]['exports'];
    var g = d[f] = {
      'i': f,
      'l': !0x1,
      'exports': {}
    };
    return c[f]['call'](g['exports'], g, g['exports'], e), g['l'] = !0x0, g['exports'];
  }
  e['m'] = c, e['c'] = d, e['d'] = function(c, d, j) {
    e['o'](c, d) || Object['defineProperty'](c, d, {
      'enumerable': !0x0,
      'get': j
    });
  }, e['r'] = function(c) {
    'undefined' != typeof Symbol && Symbol['toStringTag'] && Object['defineProperty'](c, Symbol['toStringTag'], {
      'value': 'Module'
    }), Object['defineProperty'](c, '__esModule', {
      'value': !0x0
    });
  }, e['t'] = function(c, d) {
    if (0x1 & d && (c = e(c)), 0x8 & d) return c;
    if (0x4 & d && 'object' == typeof c && c && c['__esModule']) return c;
    var n = Object['create'](null);
    if (e['r'](n), Object['defineProperty'](n, 'default', {
        'enumerable': !0x0,
        'value': c
      }), 0x2 & d && 'string' != typeof c)
      for (var o in c) e['d'](n, o, function(d) {
        return c[d];
      } ['bind'](null, o));
    return n;
  }, e['n'] = function(c) {
    var d = c && c['__esModule'] ? function() {
      return c['default'];
    } : function() {
      return c;
    };
    return e['d'](d, 'a', d), d;
  }, e['o'] = function(c, d) {
    return Object['prototype']['hasOwnProperty']['call'](c, d);
  }, e['p'] = '', e(e['s'] = 0x5d);
}([function(u, v, w) {
  'use strict';
  w['d'](v, 'b', function() {
    return F;
  }), w['d'](v, 'a', function() {
    return J;
  }), w['d'](v, 'c', function() {
    return P;
  }), w['d'](v, 'd', function() {
    return Y;
  });
  var x = function(u, v) {
    return (x = Object['setPrototypeOf'] || {
        '__proto__': []
      }
      instanceof Array && function(u, v) {
        u['__proto__'] = v;
      } || function(u, v) {
        for (var w in v) v['hasOwnProperty'](w) && (u[w] = v[w]);
      })(u, v);
  };

  function F(u, v) {
    function w() {
      this['constructor'] = u;
    }
    x(u, v), u['prototype'] = null === v ? Object['create'](v) : (w['prototype'] = v['prototype'], new w());
  }
  var J = function() {
    return (J = Object['assign'] || function(u) {
      for (var v, w = 0x1, x = arguments['length']; w < x; w++)
        for (var F in v = arguments[w]) Object['prototype']['hasOwnProperty']['call'](v, F) && (u[F] = v[F]);
      return u;
    })['apply'](this, arguments);
  };

  function P(u, v) {
    var w = 'function' == typeof Symbol && u[Symbol['iterator']];
    if (!w) return u;
    var x, F, J = w['call'](u),
      P = [];
    try {
      for (;
        (void 0x0 === v || 0x0 < v--) && !(x = J['next']())['done'];) P['push'](x['value']);
    } catch (X) {
      F = {
        'error': X
      };
    } finally {
      try {
        x && !x['done'] && (w = J['return']) && w['call'](J);
      } finally {
        if (F) throw F['error'];
      }
    }
    return P;
  }

  function Y() {
    for (var u = [], v = 0x0; v < arguments['length']; v++) u = u['concat'](P(arguments[v]));
    return u;
  }
}, , function(a1, a2, a3) {
  'use strict';
  (function(a1, a5) {
    function a6(a1, a2) {
      return a1['require'](a2);
    }
    a3['d'](a2, 'c', function() {
      return a6;
    }), a3['d'](a2, 'e', function() {
      return aa;
    }), a3['d'](a2, 'g', function() {
      return ab;
    }), a3['d'](a2, 'f', function() {
      return ak;
    }), a3['d'](a2, 'd', function() {
      return ap;
    }), a3['d'](a2, 'b', function() {
      return as;
    }), a3['d'](a2, 'a', function() {
      return aA;
    });
    var a9 = {};

    function aa() {
      return '[object\x20process]' === Object['prototype']['toString']['call'](void 0x0 === a1 ? 0x0 : a1) ? a5 : 'undefined' == typeof window ? 'undefined' == typeof self ? a9 : self : window;
    }

    function ab() {
      var a1 = aa(),
        a2 = a1['crypto'] || a1['msCrypto'];
      if (void 0x0 !== a2 && a2['getRandomValues']) {
        var a3 = new Uint16Array(0x8);
        a2['getRandomValues'](a3), a3[0x3] = 0x4000 | 0xfff & a3[0x3], a3[0x4] = 0x8000 | 0x3fff & a3[0x4];
        var a5 = function(a1) {
          for (var a2 = a1['toString'](0x10); 0x4 > a2['length'];) a2 = '0' + a2;
          return a2;
        };
        return a5(a3[0x0]) + a5(a3[0x1]) + a5(a3[0x2]) + a5(a3[0x3]) + a5(a3[0x4]) + a5(a3[0x5]) + a5(a3[0x6]) + a5(a3[0x7]);
      }
      return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx' ['replace'](/[xy]/g, function(a1) {
        var a2 = 0x0 | 0x10 * Math['random']();
        return ('x' === a1 ? a2 : 0x8 | 0x3 & a2)['toString'](0x10);
      });
    }

    function ak(a1) {
      if (!a1) return {};
      var a2 = a1['match'](/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
      if (!a2) return {};
      var a3 = a2[0x6] || '',
        a5 = a2[0x8] || '';
      return {
        'host': a2[0x4],
        'path': a2[0x5],
        'protocol': a2[0x2],
        'relative': a2[0x5] + a3 + a5
      };
    }

    function ap(a1) {
      if (a1['message']) return a1['message'];
      if (a1['exception'] && a1['exception']['values'] && a1['exception']['values'][0x0]) {
        var a2 = a1['exception']['values'][0x0];
        return a2['type'] && a2['value'] ? a2['type'] + ':\x20' + a2['value'] : a2['type'] || a2['value'] || a1['event_id'] || '<unknown>';
      }
      return a1['event_id'] || '<unknown>';
    }

    function as(a1) {
      var a2 = aa();
      if (!('console' in a2)) return a1();
      var a3 = a2['console'],
        a5 = {};
      ['debug', 'info', 'warn', 'error', 'log', 'assert']['forEach'](function(a1) {
        a1 in a2['console'] && a3[a1]['__sentry__'] && (a5[a1] = a3[a1]['__sentry_wrapped__'], a3[a1] = a3[a1]['__sentry_original__']);
      });
      var a6 = a1();
      return Object['keys'](a5)['forEach'](function(a1) {
        a3[a1] = a5[a1];
      }), a6;
    }

    function aA(a1, a2, a3, a5) {
      void 0x0 === a5 && (a5 = {
        'handled': !0x0,
        'type': 'generic'
      }), a1['exception'] = a1['exception'] || {}, a1['exception']['values'] = a1['exception']['values'] || [], a1['exception']['values'][0x0] = a1['exception']['values'][0x0] || {}, a1['exception']['values'][0x0]['value'] = a1['exception']['values'][0x0]['value'] || a2 || '', a1['exception']['values'][0x0]['type'] = a1['exception']['values'][0x0]['type'] || a3 || 'Error', a1['exception']['values'][0x0]['mechanism'] = a1['exception']['values'][0x0]['mechanism'] || a5;
    }
  } ['call'](this, a3(0xe), a3(0x16)));
}, function(aF, aG, aH) {
  var aI = aG['global'] = aH(0x28),
    aJ = aG['hasBuffer'] = aI && !!aI['isBuffer'],
    aK = aG['hasArrayBuffer'] = 'undefined' != typeof ArrayBuffer,
    aL = aG['isArray'] = aH(0xb);
  aG['isArrayBuffer'] = aK ? function(aF) {
    return aF instanceof ArrayBuffer || b7(aF);
  } : ba;
  var aN = aG['isBuffer'] = aJ ? aI['isBuffer'] : ba,
    aO = aG['isView'] = aK ? ArrayBuffer['isView'] || bb('ArrayBuffer', 'buffer') : ba;
  aG['alloc'] = b5, aG['concat'] = function(aF, aH) {
    aH || (aH = 0x0, Array['prototype']['forEach']['call'](aF, function(aF) {
      aH += aF['length'];
    }));
    var aI = this !== aG && this || aF[0x0],
      aJ = b5['call'](aI, aH),
      aK = 0x0;
    return Array['prototype']['forEach']['call'](aF, function(aF) {
      aK += b4['copy']['call'](aF, aJ, aK);
    }), aJ;
  }, aG['from'] = function(aF) {
    return 'string' == typeof aF ? function(aF) {
      var aG = 0x3 * aF['length'],
        aH = b5['call'](this, aG),
        aI = b4['write']['call'](aH, aF);
      return aG !== aI && (aH = b4['slice']['call'](aH, 0x0, aI)), aH;
    } ['call'](this, aF) : b8(this)['from'](aF);
  };
  var b1 = aG['Array'] = aH(0x2a),
    b2 = aG['Buffer'] = aH(0x2b),
    b3 = aG['Uint8Array'] = aH(0x2c),
    b4 = aG['prototype'] = aH(0x12);

  function b5(aF) {
    return b8(this)['alloc'](aF);
  }
  var b7 = bb('ArrayBuffer');

  function b8(aF) {
    return aN(aF) ? b2 : aO(aF) ? b3 : aL(aF) ? b1 : aJ ? b2 : aK ? b3 : b1;
  }

  function ba() {
    return !0x1;
  }

  function bb(aF, aG) {
    return aF = '[object\x20' + aF + ']',
      function(aH) {
        return null != aH && {} ['toString']['call'](aG ? aH[aG] : aH) === aF;
      };
  }
}, function(bf, bg, bh) {
  'use strict';

  function bi() {}
  bh['r'](bg), bh['d'](bg, 'ACESFilmicToneMapping', function() {
    return cD;
  }), bh['d'](bg, 'AddEquation', function() {
    return c7;
  }), bh['d'](bg, 'AddOperation', function() {
    return cx;
  }), bh['d'](bg, 'AdditiveBlending', function() {
    return c3;
  }), bh['d'](bg, 'AlphaFormat', function() {
    return d7;
  }), bh['d'](bg, 'AlwaysDepth', function() {
    return co;
  }), bh['d'](bg, 'AmbientLight', function() {
    return aJY;
  }), bh['d'](bg, 'AmbientLightProbe', function() {
    return aSr;
  }), bh['d'](bg, 'AnimationClip', function() {
    return ayK;
  }), bh['d'](bg, 'AnimationLoader', function() {
    return aCx;
  }), bh['d'](bg, 'AnimationMixer', function() {
    return aWh;
  }), bh['d'](bg, 'AnimationObjectGroup', function() {
    return aW2;
  }), bh['d'](bg, 'AnimationUtils', function() {
    return axj;
  }), bh['d'](bg, 'ArcCurve', function() {
    return aCT;
  }), bh['d'](bg, 'ArrayCamera', function() {
    return a6d;
  }), bh['d'](bg, 'ArrowHelper', function() {
    return aZu;
  }), bh['d'](bg, 'Audio', function() {
    return aU3;
  }), bh['d'](bg, 'AudioAnalyser', function() {
    return aU7;
  }), bh['d'](bg, 'AudioContext', function() {
    return aS8;
  }), bh['d'](bg, 'AudioListener', function() {
    return aU2;
  }), bh['d'](bg, 'AudioLoader', function() {
    return aSa;
  }), bh['d'](bg, 'AxesHelper', function() {
    return aZB;
  }), bh['d'](bg, 'AxisHelper', function() {
    return ba8;
  }), bh['d'](bg, 'BackSide', function() {
    return bU;
  }), bh['d'](bg, 'BasicDepthPacking', function() {
    return dY;
  }), bh['d'](bg, 'BasicShadowMap', function() {
    return bQ;
  }), bh['d'](bg, 'BinaryTextureLoader', function() {
    return bal;
  }), bh['d'](bg, 'Bone', function() {
    return aex;
  }), bh['d'](bg, 'BooleanKeyframeTrack', function() {
    return ayc;
  }), bh['d'](bg, 'BoundingBoxHelper', function() {
    return baa;
  }), bh['d'](bg, 'Box2', function() {
    return aWN;
  }), bh['d'](bg, 'Box3', function() {
    return mB;
  }), bh['d'](bg, 'Box3Helper', function() {
    return aZh;
  }), bh['d'](bg, 'BoxBufferGeometry', function() {
    return Gn;
  }), bh['d'](bg, 'BoxGeometry', function() {
    return Gg;
  }), bh['d'](bg, 'BoxHelper', function() {
    return aZb;
  }), bh['d'](bg, 'BufferAttribute', function() {
    return AI;
  }), bh['d'](bg, 'BufferGeometry', function() {
    return Gf;
  }), bh['d'](bg, 'BufferGeometryLoader', function() {
    return aNb;
  }), bh['d'](bg, 'ByteType', function() {
    return cW;
  }), bh['d'](bg, 'Cache', function() {
    return aCa;
  }), bh['d'](bg, 'Camera', function() {
    return a67;
  }), bh['d'](bg, 'CameraHelper', function() {
    return aYS;
  }), bh['d'](bg, 'CanvasRenderer', function() {
    return bcx;
  }), bh['d'](bg, 'CanvasTexture', function() {
    return afc;
  }), bh['d'](bg, 'CatmullRomCurve3', function() {
    return aGw;
  }), bh['d'](bg, 'CineonToneMapping', function() {
    return cC;
  }), bh['d'](bg, 'CircleBufferGeometry', function() {
    return awy;
  }), bh['d'](bg, 'CircleGeometry', function() {
    return awt;
  }), bh['d'](bg, 'ClampToEdgeWrapping', function() {
    return cN;
  }), bh['d'](bg, 'Clock', function() {
    return aU0;
  }), bh['d'](bg, 'ClosedSplineCurve3', function() {
    return ba2;
  }), bh['d'](bg, 'Color', function() {
    return w7;
  }), bh['d'](bg, 'ColorKeyframeTrack', function() {
    return ayg;
  }), bh['d'](bg, 'CompressedTexture', function() {
    return aeZ;
  }), bh['d'](bg, 'CompressedTextureLoader', function() {
    return aCz;
  }), bh['d'](bg, 'ConeBufferGeometry', function() {
    return awl;
  }), bh['d'](bg, 'ConeGeometry', function() {
    return awd;
  }), bh['d'](bg, 'CubeCamera', function() {
    return aTD;
  }), bh['d'](bg, 'CubeGeometry', function() {
    return Gg;
  }), bh['d'](bg, 'CubeReflectionMapping', function() {
    return cF;
  }), bh['d'](bg, 'CubeRefractionMapping', function() {
    return cG;
  }), bh['d'](bg, 'CubeTexture', function() {
    return O3;
  }), bh['d'](bg, 'CubeTextureLoader', function() {
    return aCF;
  }), bh['d'](bg, 'CubeUVReflectionMapping', function() {
    return cK;
  }), bh['d'](bg, 'CubeUVRefractionMapping', function() {
    return cL;
  }), bh['d'](bg, 'CubicBezierCurve', function() {
    return aHc;
  }), bh['d'](bg, 'CubicBezierCurve3', function() {
    return aHh;
  }), bh['d'](bg, 'CubicInterpolant', function() {
    return axS;
  }), bh['d'](bg, 'CullFaceBack', function() {
    return bL;
  }), bh['d'](bg, 'CullFaceFront', function() {
    return bM;
  }), bh['d'](bg, 'CullFaceFrontBack', function() {
    return bN;
  }), bh['d'](bg, 'CullFaceNone', function() {
    return bK;
  }), bh['d'](bg, 'Curve', function() {
    return aCJ;
  }), bh['d'](bg, 'CurvePath', function() {
    return aJk;
  }), bh['d'](bg, 'CustomBlending', function() {
    return c6;
  }), bh['d'](bg, 'CylinderBufferGeometry', function() {
    return avp;
  }), bh['d'](bg, 'CylinderGeometry', function() {
    return avg;
  }), bh['d'](bg, 'Cylindrical', function() {
    return aWJ;
  }), bh['d'](bg, 'DataTexture', function() {
    return mo;
  }), bh['d'](bg, 'DataTexture2DArray', function() {
    return Oe;
  }), bh['d'](bg, 'DataTexture3D', function() {
    return Oj;
  }), bh['d'](bg, 'DataTextureLoader', function() {
    return aCB;
  }), bh['d'](bg, 'DefaultLoadingManager', function() {
    return aCt;
  }), bh['d'](bg, 'DepthFormat', function() {
    return dd;
  }), bh['d'](bg, 'DepthStencilFormat', function() {
    return de;
  }), bh['d'](bg, 'DepthTexture', function() {
    return afm;
  }), bh['d'](bg, 'DirectionalLight', function() {
    return aJV;
  }), bh['d'](bg, 'DirectionalLightHelper', function() {
    return aYM;
  }), bh['d'](bg, 'DirectionalLightShadow', function() {
    return aJU;
  }), bh['d'](bg, 'DiscreteInterpolant', function() {
    return ay2;
  }), bh['d'](bg, 'DodecahedronBufferGeometry', function() {
    return ahO;
  }), bh['d'](bg, 'DodecahedronGeometry', function() {
    return ahL;
  }), bh['d'](bg, 'DoubleSide', function() {
    return bV;
  }), bh['d'](bg, 'DstAlphaFactor', function() {
    return ci;
  }), bh['d'](bg, 'DstColorFactor', function() {
    return ck;
  }), bh['d'](bg, 'DynamicBufferAttribute', function() {
    return b9y;
  }), bh['d'](bg, 'EdgesGeometry', function() {
    return auW;
  }), bh['d'](bg, 'EdgesHelper', function() {
    return bad;
  }), bh['d'](bg, 'EllipseCurve', function() {
    return aCK;
  }), bh['d'](bg, 'EqualDepth', function() {
    return cr;
  }), bh['d'](bg, 'EquirectangularReflectionMapping', function() {
    return cH;
  }), bh['d'](bg, 'EquirectangularRefractionMapping', function() {
    return cI;
  }), bh['d'](bg, 'Euler', function() {
    return xZ;
  }), bh['d'](bg, 'EventDispatcher', function() {
    return bi;
  }), bh['d'](bg, 'ExtrudeBufferGeometry', function() {
    return aqj;
  }), bh['d'](bg, 'ExtrudeGeometry', function() {
    return aqg;
  }), bh['d'](bg, 'Face3', function() {
    return xS;
  }), bh['d'](bg, 'Face4', function() {
    return aZG;
  }), bh['d'](bg, 'FaceColors', function() {
    return bZ;
  }), bh['d'](bg, 'FaceNormalsHelper', function() {
    return aYB;
  }), bh['d'](bg, 'FileLoader', function() {
    return aCv;
  }), bh['d'](bg, 'FlatShading', function() {
    return bW;
  }), bh['d'](bg, 'Float32Attribute', function() {
    return b9W;
  }), bh['d'](bg, 'Float32BufferAttribute', function() {
    return Be;
  }), bh['d'](bg, 'Float64Attribute', function() {
    return b9Z;
  }), bh['d'](bg, 'Float64BufferAttribute', function() {
    return Bi;
  }), bh['d'](bg, 'FloatType', function() {
    return d1;
  }), bh['d'](bg, 'Fog', function() {
    return ae6;
  }), bh['d'](bg, 'FogExp2', function() {
    return ae3;
  }), bh['d'](bg, 'Font', function() {
    return aPz;
  }), bh['d'](bg, 'FontLoader', function() {
    return aPU;
  }), bh['d'](bg, 'FrontFaceDirectionCCW', function() {
    return bP;
  }), bh['d'](bg, 'FrontFaceDirectionCW', function() {
    return bO;
  }), bh['d'](bg, 'FrontSide', function() {
    return bT;
  }), bh['d'](bg, 'Frustum', function() {
    return mK;
  }), bh['d'](bg, 'GammaEncoding', function() {
    return dS;
  }), bh['d'](bg, 'Geometry', function() {
    return AH;
  }), bh['d'](bg, 'GeometryUtils', function() {
    return bcr;
  }), bh['d'](bg, 'GreaterDepth', function() {
    return ct;
  }), bh['d'](bg, 'GreaterEqualDepth', function() {
    return cs;
  }), bh['d'](bg, 'GridHelper', function() {
    return aXT;
  }), bh['d'](bg, 'Group', function() {
    return a66;
  }), bh['d'](bg, 'HalfFloatType', function() {
    return d2;
  }), bh['d'](bg, 'HemisphereLight', function() {
    return aJs;
  }), bh['d'](bg, 'HemisphereLightHelper', function() {
    return aXG;
  }), bh['d'](bg, 'HemisphereLightProbe', function() {
    return aSh;
  }), bh['d'](bg, 'IcosahedronBufferGeometry', function() {
    return ahG;
  }), bh['d'](bg, 'IcosahedronGeometry', function() {
    return ahD;
  }), bh['d'](bg, 'ImageBitmapLoader', function() {
    return aPw;
  }), bh['d'](bg, 'ImageLoader', function() {
    return aCD;
  }), bh['d'](bg, 'ImageUtils', function() {
    return lR;
  }), bh['d'](bg, 'ImmediateRenderObject', function() {
    return aWT;
  }), bh['d'](bg, 'InstancedBufferAttribute', function() {
    return aN6;
  }), bh['d'](bg, 'InstancedBufferGeometry', function() {
    return aN5;
  }), bh['d'](bg, 'InstancedInterleavedBuffer', function() {
    return aWl;
  }), bh['d'](bg, 'Int16Attribute', function() {
    return b9K;
  }), bh['d'](bg, 'Int16BufferAttribute', function() {
    return AY;
  }), bh['d'](bg, 'Int32Attribute', function() {
    return b9Q;
  }), bh['d'](bg, 'Int32BufferAttribute', function() {
    return B6;
  }), bh['d'](bg, 'Int8Attribute', function() {
    return b9B;
  }), bh['d'](bg, 'Int8BufferAttribute', function() {
    return AM;
  }), bh['d'](bg, 'IntType', function() {
    return cZ;
  }), bh['d'](bg, 'InterleavedBuffer', function() {
    return aeb;
  }), bh['d'](bg, 'InterleavedBufferAttribute', function() {
    return aee;
  }), bh['d'](bg, 'Interpolant', function() {
    return axN;
  }), bh['d'](bg, 'InterpolateDiscrete', function() {
    return dH;
  }), bh['d'](bg, 'InterpolateLinear', function() {
    return dI;
  }), bh['d'](bg, 'InterpolateSmooth', function() {
    return dJ;
  }), bh['d'](bg, 'JSONLoader', function() {
    return bcy;
  }), bh['d'](bg, 'KeyframeTrack', function() {
    return ay7;
  }), bh['d'](bg, 'LOD', function() {
    return aeo;
  }), bh['d'](bg, 'LatheBufferGeometry', function() {
    return atZ;
  }), bh['d'](bg, 'LatheGeometry', function() {
    return atU;
  }), bh['d'](bg, 'Layers', function() {
    return y4;
  }), bh['d'](bg, 'LensFlare', function() {
    return bcM;
  }), bh['d'](bg, 'LessDepth', function() {
    return cp;
  }), bh['d'](bg, 'LessEqualDepth', function() {
    return cq;
  }), bh['d'](bg, 'Light', function() {
    return aJp;
  }), bh['d'](bg, 'LightProbe', function() {
    return aSe;
  }), bh['d'](bg, 'LightProbeHelper', function() {
    return aXN;
  }), bh['d'](bg, 'LightShadow', function() {
    return aJw;
  }), bh['d'](bg, 'Line', function() {
    return aeA;
  }), bh['d'](bg, 'Line3', function() {
    return aWQ;
  }), bh['d'](bg, 'LineBasicMaterial', function() {
    return aey;
  }), bh['d'](bg, 'LineCurve', function() {
    return aHm;
  }), bh['d'](bg, 'LineCurve3', function() {
    return aHp;
  }), bh['d'](bg, 'LineDashedMaterial', function() {
    return ax7;
  }), bh['d'](bg, 'LineLoop', function() {
    return aeH;
  }), bh['d'](bg, 'LinePieces', function() {
    return b9b;
  }), bh['d'](bg, 'LineSegments', function() {
    return aeE;
  }), bh['d'](bg, 'LineStrip', function() {
    return b9a;
  }), bh['d'](bg, 'LinearEncoding', function() {
    return dQ;
  }), bh['d'](bg, 'LinearFilter', function() {
    return cS;
  }), bh['d'](bg, 'LinearInterpolant', function() {
    return axX;
  }), bh['d'](bg, 'LinearMipMapLinearFilter', function() {
    return cU;
  }), bh['d'](bg, 'LinearMipMapNearestFilter', function() {
    return cT;
  }), bh['d'](bg, 'LinearToneMapping', function() {
    return cz;
  }), bh['d'](bg, 'Loader', function() {
    return aPW;
  }), bh['d'](bg, 'LoaderUtils', function() {
    return aMX;
  }), bh['d'](bg, 'LoadingManager', function() {
    return aCf;
  }), bh['d'](bg, 'LogLuvEncoding', function() {
    return dU;
  }), bh['d'](bg, 'LoopOnce', function() {
    return dE;
  }), bh['d'](bg, 'LoopPingPong', function() {
    return dG;
  }), bh['d'](bg, 'LoopRepeat', function() {
    return dF;
  }), bh['d'](bg, 'LuminanceAlphaFormat', function() {
    return db;
  }), bh['d'](bg, 'LuminanceFormat', function() {
    return da;
  }), bh['d'](bg, 'MOUSE', function() {
    return bJ;
  }), bh['d'](bg, 'Material', function() {
    return Kf;
  }), bh['d'](bg, 'MaterialLoader', function() {
    return aK6;
  }), bh['d'](bg, 'Math', function() {
    return e2;
  }), bh['d'](bg, 'Matrix3', function() {
    return eO;
  }), bh['d'](bg, 'Matrix4', function() {
    return mR;
  }), bh['d'](bg, 'MaxEquation', function() {
    return cb;
  }), bh['d'](bg, 'Mesh', function() {
    return KY;
  }), bh['d'](bg, 'MeshBasicMaterial', function() {
    return KW;
  }), bh['d'](bg, 'MeshDepthMaterial', function() {
    return ZV;
  }), bh['d'](bg, 'MeshDistanceMaterial', function() {
    return ZX;
  }), bh['d'](bg, 'MeshFaceMaterial', function() {
    return b9c;
  }), bh['d'](bg, 'MeshLambertMaterial', function() {
    return ax3;
  }), bh['d'](bg, 'MeshMatcapMaterial', function() {
    return ax5;
  }), bh['d'](bg, 'MeshNormalMaterial', function() {
    return ax1;
  }), bh['d'](bg, 'MeshPhongMaterial', function() {
    return awX;
  }), bh['d'](bg, 'MeshPhysicalMaterial', function() {
    return awV;
  }), bh['d'](bg, 'MeshStandardMaterial', function() {
    return awT;
  }), bh['d'](bg, 'MeshToonMaterial', function() {
    return awZ;
  }), bh['d'](bg, 'MinEquation', function() {
    return ca;
  }), bh['d'](bg, 'MirroredRepeatWrapping', function() {
    return cO;
  }), bh['d'](bg, 'MixOperation', function() {
    return cw;
  }), bh['d'](bg, 'MultiMaterial', function() {
    return b9e;
  }), bh['d'](bg, 'MultiplyBlending', function() {
    return c5;
  }), bh['d'](bg, 'MultiplyOperation', function() {
    return cv;
  }), bh['d'](bg, 'NearestFilter', function() {
    return cP;
  }), bh['d'](bg, 'NearestMipMapLinearFilter', function() {
    return cR;
  }), bh['d'](bg, 'NearestMipMapNearestFilter', function() {
    return cQ;
  }), bh['d'](bg, 'NeverDepth', function() {
    return cn;
  }), bh['d'](bg, 'NoBlending', function() {
    return c1;
  }), bh['d'](bg, 'NoColors', function() {
    return bY;
  }), bh['d'](bg, 'NoToneMapping', function() {
    return cy;
  }), bh['d'](bg, 'NormalBlending', function() {
    return c2;
  }), bh['d'](bg, 'NotEqualDepth', function() {
    return cu;
  }), bh['d'](bg, 'NumberKeyframeTrack', function() {
    return ayl;
  }), bh['d'](bg, 'Object3D', function() {
    return yT;
  }), bh['d'](bg, 'ObjectLoader', function() {
    return aNJ;
  }), bh['d'](bg, 'ObjectSpaceNormalMap', function() {
    return e1;
  }), bh['d'](bg, 'OctahedronBufferGeometry', function() {
    return ahA;
  }), bh['d'](bg, 'OctahedronGeometry', function() {
    return ahx;
  }), bh['d'](bg, 'OneFactor', function() {
    return cd;
  }), bh['d'](bg, 'OneMinusDstAlphaFactor', function() {
    return cj;
  }), bh['d'](bg, 'OneMinusDstColorFactor', function() {
    return cl;
  }), bh['d'](bg, 'OneMinusSrcAlphaFactor', function() {
    return ch;
  }), bh['d'](bg, 'OneMinusSrcColorFactor', function() {
    return cf;
  }), bh['d'](bg, 'OrthographicCamera', function() {
    return aJN;
  }), bh['d'](bg, 'PCFShadowMap', function() {
    return bR;
  }), bh['d'](bg, 'PCFSoftShadowMap', function() {
    return bS;
  }), bh['d'](bg, 'ParametricBufferGeometry', function() {
    return ag0;
  }), bh['d'](bg, 'ParametricGeometry', function() {
    return afW;
  }), bh['d'](bg, 'Particle', function() {
    return b9j;
  }), bh['d'](bg, 'ParticleBasicMaterial', function() {
    return b9q;
  }), bh['d'](bg, 'ParticleSystem', function() {
    return b9l;
  }), bh['d'](bg, 'ParticleSystemMaterial', function() {
    return b9s;
  }), bh['d'](bg, 'Path', function() {
    return aJl;
  }), bh['d'](bg, 'PerspectiveCamera', function() {
    return a68;
  }), bh['d'](bg, 'Plane', function() {
    return mH;
  }), bh['d'](bg, 'PlaneBufferGeometry', function() {
    return Ha;
  }), bh['d'](bg, 'PlaneGeometry', function() {
    return H5;
  }), bh['d'](bg, 'PlaneHelper', function() {
    return aZn;
  }), bh['d'](bg, 'PointCloud', function() {
    return b9g;
  }), bh['d'](bg, 'PointCloudMaterial', function() {
    return b9o;
  }), bh['d'](bg, 'PointLight', function() {
    return aJH;
  }), bh['d'](bg, 'PointLightHelper', function() {
    return aXu;
  }), bh['d'](bg, 'Points', function() {
    return aeM;
  }), bh['d'](bg, 'PointsMaterial', function() {
    return aeK;
  }), bh['d'](bg, 'PolarGridHelper', function() {
    return aY9;
  }), bh['d'](bg, 'PolyhedronBufferGeometry', function() {
    return agr;
  }), bh['d'](bg, 'PolyhedronGeometry', function() {
    return agm;
  }), bh['d'](bg, 'PositionalAudio', function() {
    return aU5;
  }), bh['d'](bg, 'PositionalAudioHelper', function() {
    return aYr;
  }), bh['d'](bg, 'PropertyBinding', function() {
    return aVY;
  }), bh['d'](bg, 'PropertyMixer', function() {
    return aUa;
  }), bh['d'](bg, 'QuadraticBezierCurve', function() {
    return aHs;
  }), bh['d'](bg, 'QuadraticBezierCurve3', function() {
    return aHw;
  }), bh['d'](bg, 'Quaternion', function() {
    return eF;
  }), bh['d'](bg, 'QuaternionKeyframeTrack', function() {
    return ayv;
  }), bh['d'](bg, 'QuaternionLinearInterpolant', function() {
    return ayq;
  }), bh['d'](bg, 'REVISION', function() {
    return bI;
  }), bh['d'](bg, 'RGBADepthPacking', function() {
    return dZ;
  }), bh['d'](bg, 'RGBAFormat', function() {
    return d9;
  }), bh['d'](bg, 'RGBA_ASTC_10x10_Format', function() {
    return dB;
  }), bh['d'](bg, 'RGBA_ASTC_10x5_Format', function() {
    return dy;
  }), bh['d'](bg, 'RGBA_ASTC_10x6_Format', function() {
    return dz;
  }), bh['d'](bg, 'RGBA_ASTC_10x8_Format', function() {
    return dA;
  }), bh['d'](bg, 'RGBA_ASTC_12x10_Format', function() {
    return dC;
  }), bh['d'](bg, 'RGBA_ASTC_12x12_Format', function() {
    return dD;
  }), bh['d'](bg, 'RGBA_ASTC_4x4_Format', function() {
    return dq;
  }), bh['d'](bg, 'RGBA_ASTC_5x4_Format', function() {
    return dr;
  }), bh['d'](bg, 'RGBA_ASTC_5x5_Format', function() {
    return ds;
  }), bh['d'](bg, 'RGBA_ASTC_6x5_Format', function() {
    return dt;
  }), bh['d'](bg, 'RGBA_ASTC_6x6_Format', function() {
    return du;
  }), bh['d'](bg, 'RGBA_ASTC_8x5_Format', function() {
    return dv;
  }), bh['d'](bg, 'RGBA_ASTC_8x6_Format', function() {
    return dw;
  }), bh['d'](bg, 'RGBA_ASTC_8x8_Format', function() {
    return dx;
  }), bh['d'](bg, 'RGBA_PVRTC_2BPPV1_Format', function() {
    return dn;
  }), bh['d'](bg, 'RGBA_PVRTC_4BPPV1_Format', function() {
    return dm;
  }), bh['d'](bg, 'RGBA_S3TC_DXT1_Format', function() {
    return dh;
  }), bh['d'](bg, 'RGBA_S3TC_DXT3_Format', function() {
    return di;
  }), bh['d'](bg, 'RGBA_S3TC_DXT5_Format', function() {
    return dj;
  }), bh['d'](bg, 'RGBDEncoding', function() {
    return dX;
  }), bh['d'](bg, 'RGBEEncoding', function() {
    return dT;
  }), bh['d'](bg, 'RGBEFormat', function() {
    return dc;
  }), bh['d'](bg, 'RGBFormat', function() {
    return d8;
  }), bh['d'](bg, 'RGBM16Encoding', function() {
    return dW;
  }), bh['d'](bg, 'RGBM7Encoding', function() {
    return dV;
  }), bh['d'](bg, 'RGB_ETC1_Format', function() {
    return dp;
  }), bh['d'](bg, 'RGB_PVRTC_2BPPV1_Format', function() {
    return dl;
  }), bh['d'](bg, 'RGB_PVRTC_4BPPV1_Format', function() {
    return dk;
  }), bh['d'](bg, 'RGB_S3TC_DXT1_Format', function() {
    return dg;
  }), bh['d'](bg, 'RawShaderMaterial', function() {
    return awR;
  }), bh['d'](bg, 'Ray', function() {
    return KP;
  }), bh['d'](bg, 'Raycaster', function() {
    return aWp;
  }), bh['d'](bg, 'RectAreaLight', function() {
    return aK1;
  }), bh['d'](bg, 'RectAreaLightHelper', function() {
    return aXA;
  }), bh['d'](bg, 'RedFormat', function() {
    return df;
  }), bh['d'](bg, 'ReinhardToneMapping', function() {
    return cA;
  }), bh['d'](bg, 'RepeatWrapping', function() {
    return cM;
  }), bh['d'](bg, 'ReverseSubtractEquation', function() {
    return c9;
  }), bh['d'](bg, 'RingBufferGeometry', function() {
    return atx;
  }), bh['d'](bg, 'RingGeometry', function() {
    return atq;
  }), bh['d'](bg, 'Scene', function() {
    return aea;
  }), bh['d'](bg, 'SceneUtils', function() {
    return bcL;
  }), bh['d'](bg, 'ShaderChunk', function() {
    return vP;
  }), bh['d'](bg, 'ShaderLib', function() {
    return xo;
  }), bh['d'](bg, 'ShaderMaterial', function() {
    return KN;
  }), bh['d'](bg, 'ShadowMaterial', function() {
    return awP;
  }), bh['d'](bg, 'Shape', function() {
    return aJn;
  }), bh['d'](bg, 'ShapeBufferGeometry', function() {
    return aur;
  }), bh['d'](bg, 'ShapeGeometry', function() {
    return auo;
  }), bh['d'](bg, 'ShapePath', function() {
    return aPy;
  }), bh['d'](bg, 'ShapeUtils', function() {
    return apU;
  }), bh['d'](bg, 'ShortType', function() {
    return cX;
  }), bh['d'](bg, 'Skeleton', function() {
    return aes;
  }), bh['d'](bg, 'SkeletonHelper', function() {
    return aXg;
  }), bh['d'](bg, 'SkinnedMesh', function() {
    return aep;
  }), bh['d'](bg, 'SmoothShading', function() {
    return bX;
  }), bh['d'](bg, 'Sphere', function() {
    return mE;
  }), bh['d'](bg, 'SphereBufferGeometry', function() {
    return asZ;
  }), bh['d'](bg, 'SphereGeometry', function() {
    return asR;
  }), bh['d'](bg, 'Spherical', function() {
    return aWF;
  }), bh['d'](bg, 'SphericalHarmonics3', function() {
    return aSc;
  }), bh['d'](bg, 'SphericalReflectionMapping', function() {
    return cJ;
  }), bh['d'](bg, 'Spline', function() {
    return ba6;
  }), bh['d'](bg, 'SplineCurve', function() {
    return aHA;
  }), bh['d'](bg, 'SplineCurve3', function() {
    return ba4;
  }), bh['d'](bg, 'SpotLight', function() {
    return aJz;
  }), bh['d'](bg, 'SpotLightHelper', function() {
    return aX6;
  }), bh['d'](bg, 'SpotLightShadow', function() {
    return aJy;
  }), bh['d'](bg, 'Sprite', function() {
    return ael;
  }), bh['d'](bg, 'SpriteMaterial', function() {
    return aej;
  }), bh['d'](bg, 'SrcAlphaFactor', function() {
    return cg;
  }), bh['d'](bg, 'SrcAlphaSaturateFactor', function() {
    return cm;
  }), bh['d'](bg, 'SrcColorFactor', function() {
    return ce;
  }), bh['d'](bg, 'StereoCamera', function() {
    return aSv;
  }), bh['d'](bg, 'StringKeyframeTrack', function() {
    return ayA;
  }), bh['d'](bg, 'SubtractEquation', function() {
    return c8;
  }), bh['d'](bg, 'SubtractiveBlending', function() {
    return c4;
  }), bh['d'](bg, 'TangentSpaceNormalMap', function() {
    return e0;
  }), bh['d'](bg, 'TetrahedronBufferGeometry', function() {
    return ahu;
  }), bh['d'](bg, 'TetrahedronGeometry', function() {
    return ahr;
  }), bh['d'](bg, 'TextBufferGeometry', function() {
    return asM;
  }), bh['d'](bg, 'TextGeometry', function() {
    return asJ;
  }), bh['d'](bg, 'Texture', function() {
    return lW;
  }), bh['d'](bg, 'TextureLoader', function() {
    return aCH;
  }), bh['d'](bg, 'TorusBufferGeometry', function() {
    return ajk;
  }), bh['d'](bg, 'TorusGeometry', function() {
    return aje;
  }), bh['d'](bg, 'TorusKnotBufferGeometry', function() {
    return aiC;
  }), bh['d'](bg, 'TorusKnotGeometry', function() {
    return aiu;
  }), bh['d'](bg, 'Triangle', function() {
    return KS;
  }), bh['d'](bg, 'TriangleFanDrawMode', function() {
    return dP;
  }), bh['d'](bg, 'TriangleStripDrawMode', function() {
    return dO;
  }), bh['d'](bg, 'TrianglesDrawMode', function() {
    return dN;
  }), bh['d'](bg, 'TubeBufferGeometry', function() {
    return ai2;
  }), bh['d'](bg, 'TubeGeometry', function() {
    return ahU;
  }), bh['d'](bg, 'UVMapping', function() {
    return cE;
  }), bh['d'](bg, 'Uint16Attribute', function() {
    return b9N;
  }), bh['d'](bg, 'Uint16BufferAttribute', function() {
    return B2;
  }), bh['d'](bg, 'Uint32Attribute', function() {
    return b9T;
  }), bh['d'](bg, 'Uint32BufferAttribute', function() {
    return Ba;
  }), bh['d'](bg, 'Uint8Attribute', function() {
    return b9E;
  }), bh['d'](bg, 'Uint8BufferAttribute', function() {
    return AQ;
  }), bh['d'](bg, 'Uint8ClampedAttribute', function() {
    return b9H;
  }), bh['d'](bg, 'Uint8ClampedBufferAttribute', function() {
    return AU;
  }), bh['d'](bg, 'Uncharted2ToneMapping', function() {
    return cB;
  }), bh['d'](bg, 'Uniform', function() {
    return aWj;
  }), bh['d'](bg, 'UniformsLib', function() {
    return xn;
  }), bh['d'](bg, 'UniformsUtils', function() {
    return w5;
  }), bh['d'](bg, 'UnsignedByteType', function() {
    return cV;
  }), bh['d'](bg, 'UnsignedInt248Type', function() {
    return d6;
  }), bh['d'](bg, 'UnsignedIntType', function() {
    return d0;
  }), bh['d'](bg, 'UnsignedShort4444Type', function() {
    return d3;
  }), bh['d'](bg, 'UnsignedShort5551Type', function() {
    return d4;
  }), bh['d'](bg, 'UnsignedShort565Type', function() {
    return d5;
  }), bh['d'](bg, 'UnsignedShortType', function() {
    return cY;
  }), bh['d'](bg, 'Vector2', function() {
    return eC;
  }), bh['d'](bg, 'Vector3', function() {
    return eK;
  }), bh['d'](bg, 'Vector4', function() {
    return m7;
  }), bh['d'](bg, 'VectorKeyframeTrack', function() {
    return ayF;
  }), bh['d'](bg, 'Vertex', function() {
    return b9u;
  }), bh['d'](bg, 'VertexColors', function() {
    return c0;
  }), bh['d'](bg, 'VertexNormalsHelper', function() {
    return aWV;
  }), bh['d'](bg, 'VideoTexture', function() {
    return aeP;
  }), bh['d'](bg, 'WebGLMultisampleRenderTarget', function() {
    return mg;
  }), bh['d'](bg, 'WebGLRenderTarget', function() {
    return mc;
  }), bh['d'](bg, 'WebGLRenderTargetCube', function() {
    return mk;
  }), bh['d'](bg, 'WebGLRenderer', function() {
    return a8U;
  }), bh['d'](bg, 'WebGLUtils', function() {
    return a60;
  }), bh['d'](bg, 'WireframeGeometry', function() {
    return afx;
  }), bh['d'](bg, 'WireframeHelper', function() {
    return bag;
  }), bh['d'](bg, 'WrapAroundEnding', function() {
    return dM;
  }), bh['d'](bg, 'XHRLoader', function() {
    return baj;
  }), bh['d'](bg, 'ZeroCurvatureEnding', function() {
    return dK;
  }), bh['d'](bg, 'ZeroFactor', function() {
    return cc;
  }), bh['d'](bg, 'ZeroSlopeEnding', function() {
    return dL;
  }), bh['d'](bg, 'sRGBEncoding', function() {
    return dR;
  }), void 0x0 === Number['EPSILON'] && (Number['EPSILON'] = Math['pow'](0x2, -0x34)), void 0x0 === Number['isInteger'] && (Number['isInteger'] = function(bf) {
    return 'number' == typeof bf && isFinite(bf) && Math['floor'](bf) === bf;
  }), void 0x0 === Math['sign'] && (Math['sign'] = function(bf) {
    return bf < 0x0 ? -0x1 : bf > 0x0 ? 0x1 : +bf;
  }), 'name' in Function['prototype'] == !0x1 && Object['defineProperty'](Function['prototype'], 'name', {
    'get': function() {
      return this['toString']()['match'](/^\s*function\s*([^\(\s]*)/)[0x1];
    }
  }), void 0x0 === Object['assign'] && (Object['assign'] = function(bf) {
    if (null == bf) throw new TypeError('Cannot\x20convert\x20undefined\x20or\x20null\x20to\x20object');
    for (var bg = Object(bf), bh = 0x1; bh < arguments['length']; bh++) {
      var bi = arguments[bh];
      if (null != bi)
        for (var bp in bi) Object['prototype']['hasOwnProperty']['call'](bi, bp) && (bg[bp] = bi[bp]);
    }
    return bg;
  }), Object['assign'](bi['prototype'], {
    'addEventListener': function(bf, bg) {
      void 0x0 === this['_listeners'] && (this['_listeners'] = {});
      var bh = this['_listeners'];
      void 0x0 === bh[bf] && (bh[bf] = []), -0x1 === bh[bf]['indexOf'](bg) && bh[bf]['push'](bg);
    },
    'hasEventListener': function(bf, bg) {
      if (void 0x0 === this['_listeners']) return !0x1;
      var bh = this['_listeners'];
      return void 0x0 !== bh[bf] && -0x1 !== bh[bf]['indexOf'](bg);
    },
    'removeEventListener': function(bf, bg) {
      if (void 0x0 !== this['_listeners']) {
        var bh = this['_listeners'][bf];
        if (void 0x0 !== bh) {
          var bi = bh['indexOf'](bg); - 0x1 !== bi && bh['splice'](bi, 0x1);
        }
      }
    },
    'dispatchEvent': function(bf) {
      if (void 0x0 !== this['_listeners']) {
        var bg = this['_listeners'][bf['type']];
        if (void 0x0 !== bg) {
          bf['target'] = this;
          for (var bh = bg['slice'](0x0), bi = 0x0, bE = bh['length']; bi < bE; bi++) bh[bi]['call'](this, bf);
        }
      }
    }
  });
  var bF, bG, bH, bI = '105',
    bJ = {
      'LEFT': 0x0,
      'MIDDLE': 0x1,
      'RIGHT': 0x2
    },
    bK = 0x0,
    bL = 0x1,
    bM = 0x2,
    bN = 0x3,
    bO = 0x0,
    bP = 0x1,
    bQ = 0x0,
    bR = 0x1,
    bS = 0x2,
    bT = 0x0,
    bU = 0x1,
    bV = 0x2,
    bW = 0x1,
    bX = 0x2,
    bY = 0x0,
    bZ = 0x1,
    c0 = 0x2,
    c1 = 0x0,
    c2 = 0x1,
    c3 = 0x2,
    c4 = 0x3,
    c5 = 0x4,
    c6 = 0x5,
    c7 = 0x64,
    c8 = 0x65,
    c9 = 0x66,
    ca = 0x67,
    cb = 0x68,
    cc = 0xc8,
    cd = 0xc9,
    ce = 0xca,
    cf = 0xcb,
    cg = 0xcc,
    ch = 0xcd,
    ci = 0xce,
    cj = 0xcf,
    ck = 0xd0,
    cl = 0xd1,
    cm = 0xd2,
    cn = 0x0,
    co = 0x1,
    cp = 0x2,
    cq = 0x3,
    cr = 0x4,
    cs = 0x5,
    ct = 0x6,
    cu = 0x7,
    cv = 0x0,
    cw = 0x1,
    cx = 0x2,
    cy = 0x0,
    cz = 0x1,
    cA = 0x2,
    cB = 0x3,
    cC = 0x4,
    cD = 0x5,
    cE = 0x12c,
    cF = 0x12d,
    cG = 0x12e,
    cH = 0x12f,
    cI = 0x130,
    cJ = 0x131,
    cK = 0x132,
    cL = 0x133,
    cM = 0x3e8,
    cN = 0x3e9,
    cO = 0x3ea,
    cP = 0x3eb,
    cQ = 0x3ec,
    cR = 0x3ed,
    cS = 0x3ee,
    cT = 0x3ef,
    cU = 0x3f0,
    cV = 0x3f1,
    cW = 0x3f2,
    cX = 0x3f3,
    cY = 0x3f4,
    cZ = 0x3f5,
    d0 = 0x3f6,
    d1 = 0x3f7,
    d2 = 0x3f8,
    d3 = 0x3f9,
    d4 = 0x3fa,
    d5 = 0x3fb,
    d6 = 0x3fc,
    d7 = 0x3fd,
    d8 = 0x3fe,
    d9 = 0x3ff,
    da = 0x400,
    db = 0x401,
    dc = d9,
    dd = 0x402,
    de = 0x403,
    df = 0x404,
    dg = 0x83f0,
    dh = 0x83f1,
    di = 0x83f2,
    dj = 0x83f3,
    dk = 0x8c00,
    dl = 0x8c01,
    dm = 0x8c02,
    dn = 0x8c03,
    dp = 0x8d64,
    dq = 0x93b0,
    dr = 0x93b1,
    ds = 0x93b2,
    dt = 0x93b3,
    du = 0x93b4,
    dv = 0x93b5,
    dw = 0x93b6,
    dx = 0x93b7,
    dy = 0x93b8,
    dz = 0x93b9,
    dA = 0x93ba,
    dB = 0x93bb,
    dC = 0x93bc,
    dD = 0x93bd,
    dE = 0x898,
    dF = 0x899,
    dG = 0x89a,
    dH = 0x8fc,
    dI = 0x8fd,
    dJ = 0x8fe,
    dK = 0x960,
    dL = 0x961,
    dM = 0x962,
    dN = 0x0,
    dO = 0x1,
    dP = 0x2,
    dQ = 0xbb8,
    dR = 0xbb9,
    dS = 0xbbf,
    dT = 0xbba,
    dU = 0xbbb,
    dV = 0xbbc,
    dW = 0xbbd,
    dX = 0xbbe,
    dY = 0xc80,
    dZ = 0xc81,
    e0 = 0x0,
    e1 = 0x1,
    e2 = {
      'DEG2RAD': Math['PI'] / 0xb4,
      'RAD2DEG': 0xb4 / Math['PI'],
      'generateUUID': function() {
        for (var bf = [], bg = 0x0; bg < 0x100; bg++) bf[bg] = (bg < 0x10 ? '0' : '') + bg['toString'](0x10);
        return function() {
          var bg = 0xffffffff * Math['random']() | 0x0,
            bh = 0xffffffff * Math['random']() | 0x0,
            bi = 0xffffffff * Math['random']() | 0x0,
            bF = 0xffffffff * Math['random']() | 0x0;
          return (bf[0xff & bg] + bf[bg >> 0x8 & 0xff] + bf[bg >> 0x10 & 0xff] + bf[bg >> 0x18 & 0xff] + '-' + bf[0xff & bh] + bf[bh >> 0x8 & 0xff] + '-' + bf[bh >> 0x10 & 0xf | 0x40] + bf[bh >> 0x18 & 0xff] + '-' + bf[0x3f & bi | 0x80] + bf[bi >> 0x8 & 0xff] + '-' + bf[bi >> 0x10 & 0xff] + bf[bi >> 0x18 & 0xff] + bf[0xff & bF] + bf[bF >> 0x8 & 0xff] + bf[bF >> 0x10 & 0xff] + bf[bF >> 0x18 & 0xff])['toUpperCase']();
        };
      }(),
      'clamp': function(bf, bg, bh) {
        return Math['max'](bg, Math['min'](bh, bf));
      },
      'euclideanModulo': function(bf, bg) {
        return (bf % bg + bg) % bg;
      },
      'mapLinear': function(bf, bg, bh, bi, bF) {
        return bi + (bf - bg) * (bF - bi) / (bh - bg);
      },
      'lerp': function(bf, bg, bh) {
        return (0x1 - bh) * bf + bh * bg;
      },
      'smoothstep': function(bf, bg, bh) {
        return bf <= bg ? 0x0 : bf >= bh ? 0x1 : (bf = (bf - bg) / (bh - bg)) * bf * (0x3 - 0x2 * bf);
      },
      'smootherstep': function(bf, bg, bh) {
        return bf <= bg ? 0x0 : bf >= bh ? 0x1 : (bf = (bf - bg) / (bh - bg)) * bf * bf * (bf * (0x6 * bf - 0xf) + 0xa);
      },
      'randInt': function(bf, bg) {
        return bf + Math['floor'](Math['random']() * (bg - bf + 0x1));
      },
      'randFloat': function(bf, bg) {
        return bf + Math['random']() * (bg - bf);
      },
      'randFloatSpread': function(bf) {
        return bf * (0.5 - Math['random']());
      },
      'degToRad': function(bf) {
        return bf * e2['DEG2RAD'];
      },
      'radToDeg': function(bf) {
        return bf * e2['RAD2DEG'];
      },
      'isPowerOfTwo': function(bf) {
        return 0x0 == (bf & bf - 0x1) && 0x0 !== bf;
      },
      'ceilPowerOfTwo': function(bf) {
        return Math['pow'](0x2, Math['ceil'](Math['log'](bf) / Math['LN2']));
      },
      'floorPowerOfTwo': function(bf) {
        return Math['pow'](0x2, Math['floor'](Math['log'](bf) / Math['LN2']));
      }
    };

  function eC(bf, bg) {
    this['x'] = bf || 0x0, this['y'] = bg || 0x0;
  }

  function eF(bf, bg, bh, bi) {
    this['_x'] = bf || 0x0, this['_y'] = bg || 0x0, this['_z'] = bh || 0x0, this['_w'] = void 0x0 !== bi ? bi : 0x1;
  }

  function eK(bf, bg, bh) {
    this['x'] = bf || 0x0, this['y'] = bg || 0x0, this['z'] = bh || 0x0;
  }

  function eO() {
    this['elements'] = [0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1], arguments['length'] > 0x0 && console['error']('THREE.Matrix3:\x20the\x20constructor\x20no\x20longer\x20reads\x20arguments.\x20use\x20.set()\x20instead.');
  }
  Object['defineProperties'](eC['prototype'], {
    'width': {
      'get': function() {
        return this['x'];
      },
      'set': function(bf) {
        this['x'] = bf;
      }
    },
    'height': {
      'get': function() {
        return this['y'];
      },
      'set': function(bf) {
        this['y'] = bf;
      }
    }
  }), Object['assign'](eC['prototype'], {
    'isVector2': !0x0,
    'set': function(bf, bg) {
      return this['x'] = bf, this['y'] = bg, this;
    },
    'setScalar': function(bf) {
      return this['x'] = bf, this['y'] = bf, this;
    },
    'setX': function(bf) {
      return this['x'] = bf, this;
    },
    'setY': function(bf) {
      return this['y'] = bf, this;
    },
    'setComponent': function(bf, bg) {
      switch (bf) {
        case 0x0:
          this['x'] = bg;
          break;
        case 0x1:
          this['y'] = bg;
          break;
        default:
          throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
      }
      return this;
    },
    'getComponent': function(bf) {
      switch (bf) {
        case 0x0:
          return this['x'];
        case 0x1:
          return this['y'];
        default:
          throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
      }
    },
    'clone': function() {
      return new this['constructor'](this['x'], this['y']);
    },
    'copy': function(bf) {
      return this['x'] = bf['x'], this['y'] = bf['y'], this;
    },
    'add': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Vector2:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'), this['addVectors'](bf, bg)) : (this['x'] += bf['x'], this['y'] += bf['y'], this);
    },
    'addScalar': function(bf) {
      return this['x'] += bf, this['y'] += bf, this;
    },
    'addVectors': function(bf, bg) {
      return this['x'] = bf['x'] + bg['x'], this['y'] = bf['y'] + bg['y'], this;
    },
    'addScaledVector': function(bf, bg) {
      return this['x'] += bf['x'] * bg, this['y'] += bf['y'] * bg, this;
    },
    'sub': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Vector2:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'), this['subVectors'](bf, bg)) : (this['x'] -= bf['x'], this['y'] -= bf['y'], this);
    },
    'subScalar': function(bf) {
      return this['x'] -= bf, this['y'] -= bf, this;
    },
    'subVectors': function(bf, bg) {
      return this['x'] = bf['x'] - bg['x'], this['y'] = bf['y'] - bg['y'], this;
    },
    'multiply': function(bf) {
      return this['x'] *= bf['x'], this['y'] *= bf['y'], this;
    },
    'multiplyScalar': function(bf) {
      return this['x'] *= bf, this['y'] *= bf, this;
    },
    'divide': function(bf) {
      return this['x'] /= bf['x'], this['y'] /= bf['y'], this;
    },
    'divideScalar': function(bf) {
      return this['multiplyScalar'](0x1 / bf);
    },
    'applyMatrix3': function(bf) {
      var bg = this['x'],
        bh = this['y'],
        bi = bf['elements'];
      return this['x'] = bi[0x0] * bg + bi[0x3] * bh + bi[0x6], this['y'] = bi[0x1] * bg + bi[0x4] * bh + bi[0x7], this;
    },
    'min': function(bf) {
      return this['x'] = Math['min'](this['x'], bf['x']), this['y'] = Math['min'](this['y'], bf['y']), this;
    },
    'max': function(bf) {
      return this['x'] = Math['max'](this['x'], bf['x']), this['y'] = Math['max'](this['y'], bf['y']), this;
    },
    'clamp': function(bf, bg) {
      return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])), this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])), this;
    },
    'clampScalar': function(bf, bg) {
      return this['x'] = Math['max'](bf, Math['min'](bg, this['x'])), this['y'] = Math['max'](bf, Math['min'](bg, this['y'])), this;
    },
    'clampLength': function(bf, bg) {
      var bh = this['length']();
      return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
    },
    'floor': function() {
      return this['x'] = Math['floor'](this['x']), this['y'] = Math['floor'](this['y']), this;
    },
    'ceil': function() {
      return this['x'] = Math['ceil'](this['x']), this['y'] = Math['ceil'](this['y']), this;
    },
    'round': function() {
      return this['x'] = Math['round'](this['x']), this['y'] = Math['round'](this['y']), this;
    },
    'roundToZero': function() {
      return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']), this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']), this;
    },
    'negate': function() {
      return this['x'] = -this['x'], this['y'] = -this['y'], this;
    },
    'dot': function(bf) {
      return this['x'] * bf['x'] + this['y'] * bf['y'];
    },
    'cross': function(bf) {
      return this['x'] * bf['y'] - this['y'] * bf['x'];
    },
    'lengthSq': function() {
      return this['x'] * this['x'] + this['y'] * this['y'];
    },
    'length': function() {
      return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y']);
    },
    'manhattanLength': function() {
      return Math['abs'](this['x']) + Math['abs'](this['y']);
    },
    'normalize': function() {
      return this['divideScalar'](this['length']() || 0x1);
    },
    'angle': function() {
      var bf = Math['atan2'](this['y'], this['x']);
      return bf < 0x0 && (bf += 0x2 * Math['PI']), bf;
    },
    'distanceTo': function(bf) {
      return Math['sqrt'](this['distanceToSquared'](bf));
    },
    'distanceToSquared': function(bf) {
      var bg = this['x'] - bf['x'],
        bh = this['y'] - bf['y'];
      return bg * bg + bh * bh;
    },
    'manhattanDistanceTo': function(bf) {
      return Math['abs'](this['x'] - bf['x']) + Math['abs'](this['y'] - bf['y']);
    },
    'setLength': function(bf) {
      return this['normalize']()['multiplyScalar'](bf);
    },
    'lerp': function(bf, bg) {
      return this['x'] += (bf['x'] - this['x']) * bg, this['y'] += (bf['y'] - this['y']) * bg, this;
    },
    'lerpVectors': function(bf, bg, bh) {
      return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
    },
    'equals': function(bf) {
      return bf['x'] === this['x'] && bf['y'] === this['y'];
    },
    'fromArray': function(bf, bg) {
      return void 0x0 === bg && (bg = 0x0), this['x'] = bf[bg], this['y'] = bf[bg + 0x1], this;
    },
    'toArray': function(bf, bg) {
      return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['x'], bf[bg + 0x1] = this['y'], bf;
    },
    'fromBufferAttribute': function(bf, bg, bh) {
      return void 0x0 !== bh && console['warn']('THREE.Vector2:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'), this['x'] = bf['getX'](bg), this['y'] = bf['getY'](bg), this;
    },
    'rotateAround': function(bf, bg) {
      var bh = Math['cos'](bg),
        bi = Math['sin'](bg),
        bF = this['x'] - bf['x'],
        bG = this['y'] - bf['y'];
      return this['x'] = bF * bh - bG * bi + bf['x'], this['y'] = bF * bi + bG * bh + bf['y'], this;
    }
  }), Object['assign'](eF, {
    'slerp': function(bf, bg, bh, bi) {
      return bh['copy'](bf)['slerp'](bg, bi);
    },
    'slerpFlat': function(bf, bg, bh, bi, bF, bG, bH) {
      var bI = bh[bi + 0x0],
        bJ = bh[bi + 0x1],
        bK = bh[bi + 0x2],
        bL = bh[bi + 0x3],
        bM = bF[bG + 0x0],
        bN = bF[bG + 0x1],
        bO = bF[bG + 0x2],
        bP = bF[bG + 0x3];
      if (bL !== bP || bI !== bM || bJ !== bN || bK !== bO) {
        var bQ = 0x1 - bH,
          bR = bI * bM + bJ * bN + bK * bO + bL * bP,
          bS = bR >= 0x0 ? 0x1 : -0x1,
          bT = 0x1 - bR * bR;
        if (bT > Number['EPSILON']) {
          var bU = Math['sqrt'](bT),
            bV = Math['atan2'](bU, bR * bS);
          bQ = Math['sin'](bQ * bV) / bU, bH = Math['sin'](bH * bV) / bU;
        }
        var bW = bH * bS;
        if (bI = bI * bQ + bM * bW, bJ = bJ * bQ + bN * bW, bK = bK * bQ + bO * bW, bL = bL * bQ + bP * bW, bQ === 0x1 - bH) {
          var bX = 0x1 / Math['sqrt'](bI * bI + bJ * bJ + bK * bK + bL * bL);
          bI *= bX, bJ *= bX, bK *= bX, bL *= bX;
        }
      }
      bf[bg] = bI, bf[bg + 0x1] = bJ, bf[bg + 0x2] = bK, bf[bg + 0x3] = bL;
    }
  }), Object['defineProperties'](eF['prototype'], {
    'x': {
      'get': function() {
        return this['_x'];
      },
      'set': function(bf) {
        this['_x'] = bf, this['onChangeCallback']();
      }
    },
    'y': {
      'get': function() {
        return this['_y'];
      },
      'set': function(bf) {
        this['_y'] = bf, this['onChangeCallback']();
      }
    },
    'z': {
      'get': function() {
        return this['_z'];
      },
      'set': function(bf) {
        this['_z'] = bf, this['onChangeCallback']();
      }
    },
    'w': {
      'get': function() {
        return this['_w'];
      },
      'set': function(bf) {
        this['_w'] = bf, this['onChangeCallback']();
      }
    }
  }), Object['assign'](eF['prototype'], {
    'isQuaternion': !0x0,
    'set': function(bf, bg, bh, bi) {
      return this['_x'] = bf, this['_y'] = bg, this['_z'] = bh, this['_w'] = bi, this['onChangeCallback'](), this;
    },
    'clone': function() {
      return new this['constructor'](this['_x'], this['_y'], this['_z'], this['_w']);
    },
    'copy': function(bf) {
      return this['_x'] = bf['x'], this['_y'] = bf['y'], this['_z'] = bf['z'], this['_w'] = bf['w'], this['onChangeCallback'](), this;
    },
    'setFromEuler': function(bf, bg) {
      if (!bf || !bf['isEuler']) throw new Error('THREE.Quaternion:\x20.setFromEuler()\x20now\x20expects\x20an\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.');
      var bh = bf['_x'],
        bi = bf['_y'],
        bF = bf['_z'],
        bG = bf['order'],
        bH = Math['cos'],
        bI = Math['sin'],
        bJ = bH(bh / 0x2),
        bK = bH(bi / 0x2),
        bL = bH(bF / 0x2),
        bM = bI(bh / 0x2),
        bN = bI(bi / 0x2),
        bO = bI(bF / 0x2);
      return 'XYZ' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO, this['_y'] = bJ * bN * bL - bM * bK * bO, this['_z'] = bJ * bK * bO + bM * bN * bL, this['_w'] = bJ * bK * bL - bM * bN * bO) : 'YXZ' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO, this['_y'] = bJ * bN * bL - bM * bK * bO, this['_z'] = bJ * bK * bO - bM * bN * bL, this['_w'] = bJ * bK * bL + bM * bN * bO) : 'ZXY' === bG ? (this['_x'] = bM * bK * bL - bJ * bN * bO, this['_y'] = bJ * bN * bL + bM * bK * bO, this['_z'] = bJ * bK * bO + bM * bN * bL, this['_w'] = bJ * bK * bL - bM * bN * bO) : 'ZYX' === bG ? (this['_x'] = bM * bK * bL - bJ * bN * bO, this['_y'] = bJ * bN * bL + bM * bK * bO, this['_z'] = bJ * bK * bO - bM * bN * bL, this['_w'] = bJ * bK * bL + bM * bN * bO) : 'YZX' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO, this['_y'] = bJ * bN * bL + bM * bK * bO, this['_z'] = bJ * bK * bO - bM * bN * bL, this['_w'] = bJ * bK * bL - bM * bN * bO) : 'XZY' === bG && (this['_x'] = bM * bK * bL - bJ * bN * bO, this['_y'] = bJ * bN * bL - bM * bK * bO, this['_z'] = bJ * bK * bO + bM * bN * bL, this['_w'] = bJ * bK * bL + bM * bN * bO), !0x1 !== bg && this['onChangeCallback'](), this;
    },
    'setFromAxisAngle': function(bf, bg) {
      var bh = bg / 0x2,
        bi = Math['sin'](bh);
      return this['_x'] = bf['x'] * bi, this['_y'] = bf['y'] * bi, this['_z'] = bf['z'] * bi, this['_w'] = Math['cos'](bh), this['onChangeCallback'](), this;
    },
    'setFromRotationMatrix': function(bf) {
      var bg, bh = bf['elements'],
        bi = bh[0x0],
        bF = bh[0x4],
        bG = bh[0x8],
        bH = bh[0x1],
        bI = bh[0x5],
        bJ = bh[0x9],
        bK = bh[0x2],
        bL = bh[0x6],
        bM = bh[0xa],
        bN = bi + bI + bM;
      return bN > 0x0 ? (bg = 0.5 / Math['sqrt'](bN + 0x1), this['_w'] = 0.25 / bg, this['_x'] = (bL - bJ) * bg, this['_y'] = (bG - bK) * bg, this['_z'] = (bH - bF) * bg) : bi > bI && bi > bM ? (bg = 0x2 * Math['sqrt'](0x1 + bi - bI - bM), this['_w'] = (bL - bJ) / bg, this['_x'] = 0.25 * bg, this['_y'] = (bF + bH) / bg, this['_z'] = (bG + bK) / bg) : bI > bM ? (bg = 0x2 * Math['sqrt'](0x1 + bI - bi - bM), this['_w'] = (bG - bK) / bg, this['_x'] = (bF + bH) / bg, this['_y'] = 0.25 * bg, this['_z'] = (bJ + bL) / bg) : (bg = 0x2 * Math['sqrt'](0x1 + bM - bi - bI), this['_w'] = (bH - bF) / bg, this['_x'] = (bG + bK) / bg, this['_y'] = (bJ + bL) / bg, this['_z'] = 0.25 * bg), this['onChangeCallback'](), this;
    },
    'setFromUnitVectors': function(bf, bg) {
      var bh = bf['dot'](bg) + 0x1;
      return bh < 0.000001 ? (bh = 0x0, Math['abs'](bf['x']) > Math['abs'](bf['z']) ? (this['_x'] = -bf['y'], this['_y'] = bf['x'], this['_z'] = 0x0, this['_w'] = bh) : (this['_x'] = 0x0, this['_y'] = -bf['z'], this['_z'] = bf['y'], this['_w'] = bh)) : (this['_x'] = bf['y'] * bg['z'] - bf['z'] * bg['y'], this['_y'] = bf['z'] * bg['x'] - bf['x'] * bg['z'], this['_z'] = bf['x'] * bg['y'] - bf['y'] * bg['x'], this['_w'] = bh), this['normalize']();
    },
    'angleTo': function(bf) {
      return 0x2 * Math['acos'](Math['abs'](e2['clamp'](this['dot'](bf), -0x1, 0x1)));
    },
    'rotateTowards': function(bf, bg) {
      var bh = this['angleTo'](bf);
      if (0x0 === bh) return this;
      var bi = Math['min'](0x1, bg / bh);
      return this['slerp'](bf, bi), this;
    },
    'inverse': function() {
      return this['conjugate']();
    },
    'conjugate': function() {
      return this['_x'] *= -0x1, this['_y'] *= -0x1, this['_z'] *= -0x1, this['onChangeCallback'](), this;
    },
    'dot': function(bf) {
      return this['_x'] * bf['_x'] + this['_y'] * bf['_y'] + this['_z'] * bf['_z'] + this['_w'] * bf['_w'];
    },
    'lengthSq': function() {
      return this['_x'] * this['_x'] + this['_y'] * this['_y'] + this['_z'] * this['_z'] + this['_w'] * this['_w'];
    },
    'length': function() {
      return Math['sqrt'](this['_x'] * this['_x'] + this['_y'] * this['_y'] + this['_z'] * this['_z'] + this['_w'] * this['_w']);
    },
    'normalize': function() {
      var bf = this['length']();
      return 0x0 === bf ? (this['_x'] = 0x0, this['_y'] = 0x0, this['_z'] = 0x0, this['_w'] = 0x1) : (bf = 0x1 / bf, this['_x'] = this['_x'] * bf, this['_y'] = this['_y'] * bf, this['_z'] = this['_z'] * bf, this['_w'] = this['_w'] * bf), this['onChangeCallback'](), this;
    },
    'multiply': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Quaternion:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyQuaternions(\x20a,\x20b\x20)\x20instead.'), this['multiplyQuaternions'](bf, bg)) : this['multiplyQuaternions'](this, bf);
    },
    'premultiply': function(bf) {
      return this['multiplyQuaternions'](bf, this);
    },
    'multiplyQuaternions': function(bf, bg) {
      var bh = bf['_x'],
        bi = bf['_y'],
        bF = bf['_z'],
        bG = bf['_w'],
        bH = bg['_x'],
        bI = bg['_y'],
        bJ = bg['_z'],
        bK = bg['_w'];
      return this['_x'] = bh * bK + bG * bH + bi * bJ - bF * bI, this['_y'] = bi * bK + bG * bI + bF * bH - bh * bJ, this['_z'] = bF * bK + bG * bJ + bh * bI - bi * bH, this['_w'] = bG * bK - bh * bH - bi * bI - bF * bJ, this['onChangeCallback'](), this;
    },
    'slerp': function(bf, bg) {
      if (0x0 === bg) return this;
      if (0x1 === bg) return this['copy'](bf);
      var bh = this['_x'],
        bi = this['_y'],
        bF = this['_z'],
        bG = this['_w'],
        bH = bG * bf['_w'] + bh * bf['_x'] + bi * bf['_y'] + bF * bf['_z'];
      if (bH < 0x0 ? (this['_w'] = -bf['_w'], this['_x'] = -bf['_x'], this['_y'] = -bf['_y'], this['_z'] = -bf['_z'], bH = -bH) : this['copy'](bf), bH >= 0x1) return this['_w'] = bG, this['_x'] = bh, this['_y'] = bi, this['_z'] = bF, this;
      var bI = 0x1 - bH * bH;
      if (bI <= Number['EPSILON']) {
        var bJ = 0x1 - bg;
        return this['_w'] = bJ * bG + bg * this['_w'], this['_x'] = bJ * bh + bg * this['_x'], this['_y'] = bJ * bi + bg * this['_y'], this['_z'] = bJ * bF + bg * this['_z'], this['normalize']();
      }
      var bK = Math['sqrt'](bI),
        bL = Math['atan2'](bK, bH),
        bM = Math['sin']((0x1 - bg) * bL) / bK,
        bN = Math['sin'](bg * bL) / bK;
      return this['_w'] = bG * bM + this['_w'] * bN, this['_x'] = bh * bM + this['_x'] * bN, this['_y'] = bi * bM + this['_y'] * bN, this['_z'] = bF * bM + this['_z'] * bN, this['onChangeCallback'](), this;
    },
    'equals': function(bf) {
      return bf['_x'] === this['_x'] && bf['_y'] === this['_y'] && bf['_z'] === this['_z'] && bf['_w'] === this['_w'];
    },
    'fromArray': function(bf, bg) {
      return void 0x0 === bg && (bg = 0x0), this['_x'] = bf[bg], this['_y'] = bf[bg + 0x1], this['_z'] = bf[bg + 0x2], this['_w'] = bf[bg + 0x3], this['onChangeCallback'](), this;
    },
    'toArray': function(bf, bg) {
      return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['_x'], bf[bg + 0x1] = this['_y'], bf[bg + 0x2] = this['_z'], bf[bg + 0x3] = this['_w'], bf;
    },
    'onChange': function(bf) {
      return this['onChangeCallback'] = bf, this;
    },
    'onChangeCallback': function() {}
  }), Object['assign'](eK['prototype'], {
    'isVector3': !0x0,
    'set': function(bf, bg, bh) {
      return this['x'] = bf, this['y'] = bg, this['z'] = bh, this;
    },
    'setScalar': function(bf) {
      return this['x'] = bf, this['y'] = bf, this['z'] = bf, this;
    },
    'setX': function(bf) {
      return this['x'] = bf, this;
    },
    'setY': function(bf) {
      return this['y'] = bf, this;
    },
    'setZ': function(bf) {
      return this['z'] = bf, this;
    },
    'setComponent': function(bf, bg) {
      switch (bf) {
        case 0x0:
          this['x'] = bg;
          break;
        case 0x1:
          this['y'] = bg;
          break;
        case 0x2:
          this['z'] = bg;
          break;
        default:
          throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
      }
      return this;
    },
    'getComponent': function(bf) {
      switch (bf) {
        case 0x0:
          return this['x'];
        case 0x1:
          return this['y'];
        case 0x2:
          return this['z'];
        default:
          throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
      }
    },
    'clone': function() {
      return new this['constructor'](this['x'], this['y'], this['z']);
    },
    'copy': function(bf) {
      return this['x'] = bf['x'], this['y'] = bf['y'], this['z'] = bf['z'], this;
    },
    'add': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'), this['addVectors'](bf, bg)) : (this['x'] += bf['x'], this['y'] += bf['y'], this['z'] += bf['z'], this);
    },
    'addScalar': function(bf) {
      return this['x'] += bf, this['y'] += bf, this['z'] += bf, this;
    },
    'addVectors': function(bf, bg) {
      return this['x'] = bf['x'] + bg['x'], this['y'] = bf['y'] + bg['y'], this['z'] = bf['z'] + bg['z'], this;
    },
    'addScaledVector': function(bf, bg) {
      return this['x'] += bf['x'] * bg, this['y'] += bf['y'] * bg, this['z'] += bf['z'] * bg, this;
    },
    'sub': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'), this['subVectors'](bf, bg)) : (this['x'] -= bf['x'], this['y'] -= bf['y'], this['z'] -= bf['z'], this);
    },
    'subScalar': function(bf) {
      return this['x'] -= bf, this['y'] -= bf, this['z'] -= bf, this;
    },
    'subVectors': function(bf, bg) {
      return this['x'] = bf['x'] - bg['x'], this['y'] = bf['y'] - bg['y'], this['z'] = bf['z'] - bg['z'], this;
    },
    'multiply': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyVectors(\x20a,\x20b\x20)\x20instead.'), this['multiplyVectors'](bf, bg)) : (this['x'] *= bf['x'], this['y'] *= bf['y'], this['z'] *= bf['z'], this);
    },
    'multiplyScalar': function(bf) {
      return this['x'] *= bf, this['y'] *= bf, this['z'] *= bf, this;
    },
    'multiplyVectors': function(bf, bg) {
      return this['x'] = bf['x'] * bg['x'], this['y'] = bf['y'] * bg['y'], this['z'] = bf['z'] * bg['z'], this;
    },
    'applyEuler': (bG = new eF(), function(bf) {
      return bf && bf['isEuler'] || console['error']('THREE.Vector3:\x20.applyEuler()\x20now\x20expects\x20an\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.'), this['applyQuaternion'](bG['setFromEuler'](bf));
    }),
    'applyAxisAngle': function() {
      var bf = new eF();
      return function(bg, bh) {
        return this['applyQuaternion'](bf['setFromAxisAngle'](bg, bh));
      };
    }(),
    'applyMatrix3': function(bf) {
      var bg = this['x'],
        bh = this['y'],
        bi = this['z'],
        bF = bf['elements'];
      return this['x'] = bF[0x0] * bg + bF[0x3] * bh + bF[0x6] * bi, this['y'] = bF[0x1] * bg + bF[0x4] * bh + bF[0x7] * bi, this['z'] = bF[0x2] * bg + bF[0x5] * bh + bF[0x8] * bi, this;
    },
    'applyMatrix4': function(bf) {
      var bg = this['x'],
        bh = this['y'],
        bi = this['z'],
        bF = bf['elements'],
        bG = 0x1 / (bF[0x3] * bg + bF[0x7] * bh + bF[0xb] * bi + bF[0xf]);
      return this['x'] = (bF[0x0] * bg + bF[0x4] * bh + bF[0x8] * bi + bF[0xc]) * bG, this['y'] = (bF[0x1] * bg + bF[0x5] * bh + bF[0x9] * bi + bF[0xd]) * bG, this['z'] = (bF[0x2] * bg + bF[0x6] * bh + bF[0xa] * bi + bF[0xe]) * bG, this;
    },
    'applyQuaternion': function(bf) {
      var bg = this['x'],
        bh = this['y'],
        bi = this['z'],
        bF = bf['x'],
        bG = bf['y'],
        bH = bf['z'],
        bI = bf['w'],
        bJ = bI * bg + bG * bi - bH * bh,
        bK = bI * bh + bH * bg - bF * bi,
        bL = bI * bi + bF * bh - bG * bg,
        bM = -bF * bg - bG * bh - bH * bi;
      return this['x'] = bJ * bI + bM * -bF + bK * -bH - bL * -bG, this['y'] = bK * bI + bM * -bG + bL * -bF - bJ * -bH, this['z'] = bL * bI + bM * -bH + bJ * -bG - bK * -bF, this;
    },
    'project': function(bf) {
      return this['applyMatrix4'](bf['matrixWorldInverse'])['applyMatrix4'](bf['projectionMatrix']);
    },
    'unproject': function(bf) {
      return this['applyMatrix4'](bf['projectionMatrixInverse'])['applyMatrix4'](bf['matrixWorld']);
    },
    'transformDirection': function(bf) {
      var bg = this['x'],
        bh = this['y'],
        bi = this['z'],
        bF = bf['elements'];
      return this['x'] = bF[0x0] * bg + bF[0x4] * bh + bF[0x8] * bi, this['y'] = bF[0x1] * bg + bF[0x5] * bh + bF[0x9] * bi, this['z'] = bF[0x2] * bg + bF[0x6] * bh + bF[0xa] * bi, this['normalize']();
    },
    'divide': function(bf) {
      return this['x'] /= bf['x'], this['y'] /= bf['y'], this['z'] /= bf['z'], this;
    },
    'divideScalar': function(bf) {
      return this['multiplyScalar'](0x1 / bf);
    },
    'min': function(bf) {
      return this['x'] = Math['min'](this['x'], bf['x']), this['y'] = Math['min'](this['y'], bf['y']), this['z'] = Math['min'](this['z'], bf['z']), this;
    },
    'max': function(bf) {
      return this['x'] = Math['max'](this['x'], bf['x']), this['y'] = Math['max'](this['y'], bf['y']), this['z'] = Math['max'](this['z'], bf['z']), this;
    },
    'clamp': function(bf, bg) {
      return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])), this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])), this['z'] = Math['max'](bf['z'], Math['min'](bg['z'], this['z'])), this;
    },
    'clampScalar': function(bf, bg) {
      return this['x'] = Math['max'](bf, Math['min'](bg, this['x'])), this['y'] = Math['max'](bf, Math['min'](bg, this['y'])), this['z'] = Math['max'](bf, Math['min'](bg, this['z'])), this;
    },
    'clampLength': function(bf, bg) {
      var bh = this['length']();
      return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
    },
    'floor': function() {
      return this['x'] = Math['floor'](this['x']), this['y'] = Math['floor'](this['y']), this['z'] = Math['floor'](this['z']), this;
    },
    'ceil': function() {
      return this['x'] = Math['ceil'](this['x']), this['y'] = Math['ceil'](this['y']), this['z'] = Math['ceil'](this['z']), this;
    },
    'round': function() {
      return this['x'] = Math['round'](this['x']), this['y'] = Math['round'](this['y']), this['z'] = Math['round'](this['z']), this;
    },
    'roundToZero': function() {
      return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']), this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']), this['z'] = this['z'] < 0x0 ? Math['ceil'](this['z']) : Math['floor'](this['z']), this;
    },
    'negate': function() {
      return this['x'] = -this['x'], this['y'] = -this['y'], this['z'] = -this['z'], this;
    },
    'dot': function(bf) {
      return this['x'] * bf['x'] + this['y'] * bf['y'] + this['z'] * bf['z'];
    },
    'lengthSq': function() {
      return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'];
    },
    'length': function() {
      return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z']);
    },
    'manhattanLength': function() {
      return Math['abs'](this['x']) + Math['abs'](this['y']) + Math['abs'](this['z']);
    },
    'normalize': function() {
      return this['divideScalar'](this['length']() || 0x1);
    },
    'setLength': function(bf) {
      return this['normalize']()['multiplyScalar'](bf);
    },
    'lerp': function(bf, bg) {
      return this['x'] += (bf['x'] - this['x']) * bg, this['y'] += (bf['y'] - this['y']) * bg, this['z'] += (bf['z'] - this['z']) * bg, this;
    },
    'lerpVectors': function(bf, bg, bh) {
      return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
    },
    'cross': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.cross()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.crossVectors(\x20a,\x20b\x20)\x20instead.'), this['crossVectors'](bf, bg)) : this['crossVectors'](this, bf);
    },
    'crossVectors': function(bf, bg) {
      var bh = bf['x'],
        bi = bf['y'],
        bF = bf['z'],
        bG = bg['x'],
        bH = bg['y'],
        bI = bg['z'];
      return this['x'] = bi * bI - bF * bH, this['y'] = bF * bG - bh * bI, this['z'] = bh * bH - bi * bG, this;
    },
    'projectOnVector': function(bf) {
      var bg = bf['dot'](this) / bf['lengthSq']();
      return this['copy'](bf)['multiplyScalar'](bg);
    },
    'projectOnPlane': (bF = new eK(), function(bf) {
      return bF['copy'](this)['projectOnVector'](bf), this['sub'](bF);
    }),
    'reflect': function() {
      var bf = new eK();
      return function(bg) {
        return this['sub'](bf['copy'](bg)['multiplyScalar'](0x2 * this['dot'](bg)));
      };
    }(),
    'angleTo': function(bf) {
      var bg = this['dot'](bf) / Math['sqrt'](this['lengthSq']() * bf['lengthSq']());
      return Math['acos'](e2['clamp'](bg, -0x1, 0x1));
    },
    'distanceTo': function(bf) {
      return Math['sqrt'](this['distanceToSquared'](bf));
    },
    'distanceToSquared': function(bf) {
      var bg = this['x'] - bf['x'],
        bh = this['y'] - bf['y'],
        bi = this['z'] - bf['z'];
      return bg * bg + bh * bh + bi * bi;
    },
    'manhattanDistanceTo': function(bf) {
      return Math['abs'](this['x'] - bf['x']) + Math['abs'](this['y'] - bf['y']) + Math['abs'](this['z'] - bf['z']);
    },
    'setFromSpherical': function(bf) {
      return this['setFromSphericalCoords'](bf['radius'], bf['phi'], bf['theta']);
    },
    'setFromSphericalCoords': function(bf, bg, bh) {
      var bi = Math['sin'](bg) * bf;
      return this['x'] = bi * Math['sin'](bh), this['y'] = Math['cos'](bg) * bf, this['z'] = bi * Math['cos'](bh), this;
    },
    'setFromCylindrical': function(bf) {
      return this['setFromCylindricalCoords'](bf['radius'], bf['theta'], bf['y']);
    },
    'setFromCylindricalCoords': function(bf, bg, bh) {
      return this['x'] = bf * Math['sin'](bg), this['y'] = bh, this['z'] = bf * Math['cos'](bg), this;
    },
    'setFromMatrixPosition': function(bf) {
      var bg = bf['elements'];
      return this['x'] = bg[0xc], this['y'] = bg[0xd], this['z'] = bg[0xe], this;
    },
    'setFromMatrixScale': function(bf) {
      var bg = this['setFromMatrixColumn'](bf, 0x0)['length'](),
        bh = this['setFromMatrixColumn'](bf, 0x1)['length'](),
        bi = this['setFromMatrixColumn'](bf, 0x2)['length']();
      return this['x'] = bg, this['y'] = bh, this['z'] = bi, this;
    },
    'setFromMatrixColumn': function(bf, bg) {
      return this['fromArray'](bf['elements'], 0x4 * bg);
    },
    'equals': function(bf) {
      return bf['x'] === this['x'] && bf['y'] === this['y'] && bf['z'] === this['z'];
    },
    'fromArray': function(bf, bg) {
      return void 0x0 === bg && (bg = 0x0), this['x'] = bf[bg], this['y'] = bf[bg + 0x1], this['z'] = bf[bg + 0x2], this;
    },
    'toArray': function(bf, bg) {
      return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['x'], bf[bg + 0x1] = this['y'], bf[bg + 0x2] = this['z'], bf;
    },
    'fromBufferAttribute': function(bf, bg, bh) {
      return void 0x0 !== bh && console['warn']('THREE.Vector3:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'), this['x'] = bf['getX'](bg), this['y'] = bf['getY'](bg), this['z'] = bf['getZ'](bg), this;
    }
  }), Object['assign'](eO['prototype'], {
    'isMatrix3': !0x0,
    'set': function(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
      var bK = this['elements'];
      return bK[0x0] = bf, bK[0x1] = bi, bK[0x2] = bH, bK[0x3] = bg, bK[0x4] = bF, bK[0x5] = bI, bK[0x6] = bh, bK[0x7] = bG, bK[0x8] = bJ, this;
    },
    'identity': function() {
      return this['set'](0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1), this;
    },
    'clone': function() {
      return new this['constructor']()['fromArray'](this['elements']);
    },
    'copy': function(bf) {
      var bg = this['elements'],
        bh = bf['elements'];
      return bg[0x0] = bh[0x0], bg[0x1] = bh[0x1], bg[0x2] = bh[0x2], bg[0x3] = bh[0x3], bg[0x4] = bh[0x4], bg[0x5] = bh[0x5], bg[0x6] = bh[0x6], bg[0x7] = bh[0x7], bg[0x8] = bh[0x8], this;
    },
    'setFromMatrix4': function(bf) {
      var bg = bf['elements'];
      return this['set'](bg[0x0], bg[0x4], bg[0x8], bg[0x1], bg[0x5], bg[0x9], bg[0x2], bg[0x6], bg[0xa]), this;
    },
    'applyToBufferAttribute': function() {
      var bf = new eK();
      return function(bg) {
        for (var bh = 0x0, bi = bg['count']; bh < bi; bh++) bf['x'] = bg['getX'](bh), bf['y'] = bg['getY'](bh), bf['z'] = bg['getZ'](bh), bf['applyMatrix3'](this), bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
        return bg;
      };
    }(),
    'multiply': function(bf) {
      return this['multiplyMatrices'](this, bf);
    },
    'premultiply': function(bf) {
      return this['multiplyMatrices'](bf, this);
    },
    'multiplyMatrices': function(bf, bg) {
      var bh = bf['elements'],
        bi = bg['elements'],
        bF = this['elements'],
        bG = bh[0x0],
        bH = bh[0x3],
        bI = bh[0x6],
        bJ = bh[0x1],
        bK = bh[0x4],
        bL = bh[0x7],
        bM = bh[0x2],
        bN = bh[0x5],
        bO = bh[0x8],
        bP = bi[0x0],
        bQ = bi[0x3],
        bR = bi[0x6],
        bS = bi[0x1],
        bT = bi[0x4],
        bU = bi[0x7],
        bV = bi[0x2],
        bW = bi[0x5],
        bX = bi[0x8];
      return bF[0x0] = bG * bP + bH * bS + bI * bV, bF[0x3] = bG * bQ + bH * bT + bI * bW, bF[0x6] = bG * bR + bH * bU + bI * bX, bF[0x1] = bJ * bP + bK * bS + bL * bV, bF[0x4] = bJ * bQ + bK * bT + bL * bW, bF[0x7] = bJ * bR + bK * bU + bL * bX, bF[0x2] = bM * bP + bN * bS + bO * bV, bF[0x5] = bM * bQ + bN * bT + bO * bW, bF[0x8] = bM * bR + bN * bU + bO * bX, this;
    },
    'multiplyScalar': function(bf) {
      var bg = this['elements'];
      return bg[0x0] *= bf, bg[0x3] *= bf, bg[0x6] *= bf, bg[0x1] *= bf, bg[0x4] *= bf, bg[0x7] *= bf, bg[0x2] *= bf, bg[0x5] *= bf, bg[0x8] *= bf, this;
    },
    'determinant': function() {
      var bf = this['elements'],
        bg = bf[0x0],
        bh = bf[0x1],
        bi = bf[0x2],
        bF = bf[0x3],
        bG = bf[0x4],
        bH = bf[0x5],
        bI = bf[0x6],
        bJ = bf[0x7],
        bK = bf[0x8];
      return bg * bG * bK - bg * bH * bJ - bh * bF * bK + bh * bH * bI + bi * bF * bJ - bi * bG * bI;
    },
    'getInverse': function(bf, bg) {
      bf && bf['isMatrix4'] && console['error']('THREE.Matrix3:\x20.getInverse()\x20no\x20longer\x20takes\x20a\x20Matrix4\x20argument.');
      var bh = bf['elements'],
        bi = this['elements'],
        bF = bh[0x0],
        bG = bh[0x1],
        bH = bh[0x2],
        bI = bh[0x3],
        bJ = bh[0x4],
        bK = bh[0x5],
        bL = bh[0x6],
        bM = bh[0x7],
        bN = bh[0x8],
        bO = bN * bJ - bK * bM,
        bP = bK * bL - bN * bI,
        bQ = bM * bI - bJ * bL,
        bR = bF * bO + bG * bP + bH * bQ;
      if (0x0 === bR) {
        var bS = 'THREE.Matrix3:\x20.getInverse()\x20can\x27t\x20invert\x20matrix,\x20determinant\x20is\x200';
        if (!0x0 === bg) throw new Error(bS);
        return console['warn'](bS), this['identity']();
      }
      var bT = 0x1 / bR;
      return bi[0x0] = bO * bT, bi[0x1] = (bH * bM - bN * bG) * bT, bi[0x2] = (bK * bG - bH * bJ) * bT, bi[0x3] = bP * bT, bi[0x4] = (bN * bF - bH * bL) * bT, bi[0x5] = (bH * bI - bK * bF) * bT, bi[0x6] = bQ * bT, bi[0x7] = (bG * bL - bM * bF) * bT, bi[0x8] = (bJ * bF - bG * bI) * bT, this;
    },
    'transpose': function() {
      var bf, bg = this['elements'];
      return bf = bg[0x1], bg[0x1] = bg[0x3], bg[0x3] = bf, bf = bg[0x2], bg[0x2] = bg[0x6], bg[0x6] = bf, bf = bg[0x5], bg[0x5] = bg[0x7], bg[0x7] = bf, this;
    },
    'getNormalMatrix': function(bf) {
      return this['setFromMatrix4'](bf)['getInverse'](this)['transpose']();
    },
    'transposeIntoArray': function(bf) {
      var bg = this['elements'];
      return bf[0x0] = bg[0x0], bf[0x1] = bg[0x3], bf[0x2] = bg[0x6], bf[0x3] = bg[0x1], bf[0x4] = bg[0x4], bf[0x5] = bg[0x7], bf[0x6] = bg[0x2], bf[0x7] = bg[0x5], bf[0x8] = bg[0x8], this;
    },
    'setUvTransform': function(bf, bg, bh, bi, bF, bG, bH) {
      var bI = Math['cos'](bF),
        bJ = Math['sin'](bF);
      this['set'](bh * bI, bh * bJ, -bh * (bI * bG + bJ * bH) + bG + bf, -bi * bJ, bi * bI, -bi * (-bJ * bG + bI * bH) + bH + bg, 0x0, 0x0, 0x1);
    },
    'scale': function(bf, bg) {
      var bh = this['elements'];
      return bh[0x0] *= bf, bh[0x3] *= bf, bh[0x6] *= bf, bh[0x1] *= bg, bh[0x4] *= bg, bh[0x7] *= bg, this;
    },
    'rotate': function(bf) {
      var bg = Math['cos'](bf),
        bh = Math['sin'](bf),
        bi = this['elements'],
        bF = bi[0x0],
        bG = bi[0x3],
        bH = bi[0x6],
        bI = bi[0x1],
        bJ = bi[0x4],
        bK = bi[0x7];
      return bi[0x0] = bg * bF + bh * bI, bi[0x3] = bg * bG + bh * bJ, bi[0x6] = bg * bH + bh * bK, bi[0x1] = -bh * bF + bg * bI, bi[0x4] = -bh * bG + bg * bJ, bi[0x7] = -bh * bH + bg * bK, this;
    },
    'translate': function(bf, bg) {
      var bh = this['elements'];
      return bh[0x0] += bf * bh[0x2], bh[0x3] += bf * bh[0x5], bh[0x6] += bf * bh[0x8], bh[0x1] += bg * bh[0x2], bh[0x4] += bg * bh[0x5], bh[0x7] += bg * bh[0x8], this;
    },
    'equals': function(bf) {
      for (var bg = this['elements'], bh = bf['elements'], bi = 0x0; bi < 0x9; bi++)
        if (bg[bi] !== bh[bi]) return !0x1;
      return !0x0;
    },
    'fromArray': function(bf, bg) {
      void 0x0 === bg && (bg = 0x0);
      for (var bh = 0x0; bh < 0x9; bh++) this['elements'][bh] = bf[bh + bg];
      return this;
    },
    'toArray': function(bf, bg) {
      void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0);
      var bh = this['elements'];
      return bf[bg] = bh[0x0], bf[bg + 0x1] = bh[0x1], bf[bg + 0x2] = bh[0x2], bf[bg + 0x3] = bh[0x3], bf[bg + 0x4] = bh[0x4], bf[bg + 0x5] = bh[0x5], bf[bg + 0x6] = bh[0x6], bf[bg + 0x7] = bh[0x7], bf[bg + 0x8] = bh[0x8], bf;
    }
  });
  var lD, lE, lF, lG, lH, lI, lJ, lK, lL, lM, lN, lO, lP, lQ, lR = {
      'getDataURL': function(bf) {
        var bg;
        if ('undefined' == typeof HTMLCanvasElement) return bf['src'];
        if (bf instanceof HTMLCanvasElement) bg = bf;
        else {
          void 0x0 === bH && (bH = document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas')), bH['width'] = bf['width'], bH['height'] = bf['height'];
          var bh = bH['getContext']('2d');
          bf instanceof ImageData ? bh['putImageData'](bf, 0x0, 0x0) : bh['drawImage'](bf, 0x0, 0x0, bf['width'], bf['height']), bg = bH;
        }
        return bg['width'] > 0x800 || bg['height'] > 0x800 ? bg['toDataURL']('image/jpeg', 0.6) : bg['toDataURL']('image/png');
      }
    },
    lS = 0x0;

  function lW(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
    Object['defineProperty'](this, 'id', {
      'value': lS++
    }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['image'] = void 0x0 !== bf ? bf : lW['DEFAULT_IMAGE'], this['mipmaps'] = [], this['mapping'] = void 0x0 !== bg ? bg : lW['DEFAULT_MAPPING'], this['wrapS'] = void 0x0 !== bh ? bh : cN, this['wrapT'] = void 0x0 !== bi ? bi : cN, this['magFilter'] = void 0x0 !== bF ? bF : cS, this['minFilter'] = void 0x0 !== bG ? bG : cU, this['anisotropy'] = void 0x0 !== bJ ? bJ : 0x1, this['format'] = void 0x0 !== bH ? bH : d9, this['type'] = void 0x0 !== bI ? bI : cV, this['offset'] = new eC(0x0, 0x0), this['repeat'] = new eC(0x1, 0x1), this['center'] = new eC(0x0, 0x0), this['rotation'] = 0x0, this['matrixAutoUpdate'] = !0x0, this['matrix'] = new eO(), this['generateMipmaps'] = !0x0, this['premultiplyAlpha'] = !0x1, this['flipY'] = !0x0, this['unpackAlignment'] = 0x4, this['encoding'] = void 0x0 !== bK ? bK : dQ, this['version'] = 0x0, this['onUpdate'] = null;
  }

  function m7(bf, bg, bh, bi) {
    this['x'] = bf || 0x0, this['y'] = bg || 0x0, this['z'] = bh || 0x0, this['w'] = void 0x0 !== bi ? bi : 0x1;
  }

  function mc(bf, bg, bh) {
    this['width'] = bf, this['height'] = bg, this['scissor'] = new m7(0x0, 0x0, bf, bg), this['scissorTest'] = !0x1, this['viewport'] = new m7(0x0, 0x0, bf, bg), bh = bh || {}, this['texture'] = new lW(void 0x0, void 0x0, bh['wrapS'], bh['wrapT'], bh['magFilter'], bh['minFilter'], bh['format'], bh['type'], bh['anisotropy'], bh['encoding']), this['texture']['generateMipmaps'] = void 0x0 !== bh['generateMipmaps'] && bh['generateMipmaps'], this['texture']['minFilter'] = void 0x0 !== bh['minFilter'] ? bh['minFilter'] : cS, this['depthBuffer'] = void 0x0 === bh['depthBuffer'] || bh['depthBuffer'], this['stencilBuffer'] = void 0x0 === bh['stencilBuffer'] || bh['stencilBuffer'], this['depthTexture'] = void 0x0 !== bh['depthTexture'] ? bh['depthTexture'] : null;
  }

  function mg(bf, bg, bh) {
    mc['call'](this, bf, bg, bh), this['samples'] = 0x4;
  }

  function mk(bf, bg, bh) {
    mc['call'](this, bf, bg, bh);
  }

  function mo(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM) {
    lW['call'](this, null, bG, bH, bI, bJ, bK, bi, bF, bL, bM), this['image'] = {
      'data': bf,
      'width': bg,
      'height': bh
    }, this['magFilter'] = void 0x0 !== bJ ? bJ : cP, this['minFilter'] = void 0x0 !== bK ? bK : cP, this['generateMipmaps'] = !0x1, this['flipY'] = !0x1, this['unpackAlignment'] = 0x1;
  }

  function mB(bf, bg) {
    this['min'] = void 0x0 !== bf ? bf : new eK(0x1 / 0x0, 0x1 / 0x0, 0x1 / 0x0), this['max'] = void 0x0 !== bg ? bg : new eK(-0x1 / 0x0, -0x1 / 0x0, -0x1 / 0x0);
  }

  function mE(bf, bg) {
    this['center'] = void 0x0 !== bf ? bf : new eK(), this['radius'] = void 0x0 !== bg ? bg : 0x0;
  }

  function mH(bf, bg) {
    this['normal'] = void 0x0 !== bf ? bf : new eK(0x1, 0x0, 0x0), this['constant'] = void 0x0 !== bg ? bg : 0x0;
  }

  function mK(bf, bg, bh, bi, bF, bG) {
    this['planes'] = [void 0x0 !== bf ? bf : new mH(), void 0x0 !== bg ? bg : new mH(), void 0x0 !== bh ? bh : new mH(), void 0x0 !== bi ? bi : new mH(), void 0x0 !== bF ? bF : new mH(), void 0x0 !== bG ? bG : new mH()];
  }

  function mR() {
    this['elements'] = [0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1], arguments['length'] > 0x0 && console['error']('THREE.Matrix4:\x20the\x20constructor\x20no\x20longer\x20reads\x20arguments.\x20use\x20.set()\x20instead.');
  }
  lW['DEFAULT_IMAGE'] = void 0x0, lW['DEFAULT_MAPPING'] = cE, lW['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
    'constructor': lW,
    'isTexture': !0x0,
    'updateMatrix': function() {
      this['matrix']['setUvTransform'](this['offset']['x'], this['offset']['y'], this['repeat']['x'], this['repeat']['y'], this['rotation'], this['center']['x'], this['center']['y']);
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['name'] = bf['name'], this['image'] = bf['image'], this['mipmaps'] = bf['mipmaps']['slice'](0x0), this['mapping'] = bf['mapping'], this['wrapS'] = bf['wrapS'], this['wrapT'] = bf['wrapT'], this['magFilter'] = bf['magFilter'], this['minFilter'] = bf['minFilter'], this['anisotropy'] = bf['anisotropy'], this['format'] = bf['format'], this['type'] = bf['type'], this['offset']['copy'](bf['offset']), this['repeat']['copy'](bf['repeat']), this['center']['copy'](bf['center']), this['rotation'] = bf['rotation'], this['matrixAutoUpdate'] = bf['matrixAutoUpdate'], this['matrix']['copy'](bf['matrix']), this['generateMipmaps'] = bf['generateMipmaps'], this['premultiplyAlpha'] = bf['premultiplyAlpha'], this['flipY'] = bf['flipY'], this['unpackAlignment'] = bf['unpackAlignment'], this['encoding'] = bf['encoding'], this;
    },
    'toJSON': function(bf) {
      var bg = void 0x0 === bf || 'string' == typeof bf;
      if (!bg && void 0x0 !== bf['textures'][this['uuid']]) return bf['textures'][this['uuid']];
      var bh = {
        'metadata': {
          'version': 4.5,
          'type': 'Texture',
          'generator': 'Texture.toJSON'
        },
        'uuid': this['uuid'],
        'name': this['name'],
        'mapping': this['mapping'],
        'repeat': [this['repeat']['x'], this['repeat']['y']],
        'offset': [this['offset']['x'], this['offset']['y']],
        'center': [this['center']['x'], this['center']['y']],
        'rotation': this['rotation'],
        'wrap': [this['wrapS'], this['wrapT']],
        'format': this['format'],
        'type': this['type'],
        'encoding': this['encoding'],
        'minFilter': this['minFilter'],
        'magFilter': this['magFilter'],
        'anisotropy': this['anisotropy'],
        'flipY': this['flipY'],
        'premultiplyAlpha': this['premultiplyAlpha'],
        'unpackAlignment': this['unpackAlignment']
      };
      if (void 0x0 !== this['image']) {
        var bi = this['image'];
        if (void 0x0 === bi['uuid'] && (bi['uuid'] = e2['generateUUID']()), !bg && void 0x0 === bf['images'][bi['uuid']]) {
          var bF;
          if (Array['isArray'](bi)) {
            bF = [];
            for (var bG = 0x0, bH = bi['length']; bG < bH; bG++) bF['push'](lR['getDataURL'](bi[bG]));
          } else bF = lR['getDataURL'](bi);
          bf['images'][bi['uuid']] = {
            'uuid': bi['uuid'],
            'url': bF
          };
        }
        bh['image'] = bi['uuid'];
      }
      return bg || (bf['textures'][this['uuid']] = bh), bh;
    },
    'dispose': function() {
      this['dispatchEvent']({
        'type': 'dispose'
      });
    },
    'transformUv': function(bf) {
      if (this['mapping'] !== cE) return bf;
      if (bf['applyMatrix3'](this['matrix']), bf['x'] < 0x0 || bf['x'] > 0x1) switch (this['wrapS']) {
        case cM:
          bf['x'] = bf['x'] - Math['floor'](bf['x']);
          break;
        case cN:
          bf['x'] = bf['x'] < 0x0 ? 0x0 : 0x1;
          break;
        case cO:
          0x1 === Math['abs'](Math['floor'](bf['x']) % 0x2) ? bf['x'] = Math['ceil'](bf['x']) - bf['x'] : bf['x'] = bf['x'] - Math['floor'](bf['x']);
      }
      if (bf['y'] < 0x0 || bf['y'] > 0x1) switch (this['wrapT']) {
        case cM:
          bf['y'] = bf['y'] - Math['floor'](bf['y']);
          break;
        case cN:
          bf['y'] = bf['y'] < 0x0 ? 0x0 : 0x1;
          break;
        case cO:
          0x1 === Math['abs'](Math['floor'](bf['y']) % 0x2) ? bf['y'] = Math['ceil'](bf['y']) - bf['y'] : bf['y'] = bf['y'] - Math['floor'](bf['y']);
      }
      return this['flipY'] && (bf['y'] = 0x1 - bf['y']), bf;
    }
  }), Object['defineProperty'](lW['prototype'], 'needsUpdate', {
    'set': function(bf) {
      !0x0 === bf && this['version']++;
    }
  }), Object['assign'](m7['prototype'], {
    'isVector4': !0x0,
    'set': function(bf, bg, bh, bi) {
      return this['x'] = bf, this['y'] = bg, this['z'] = bh, this['w'] = bi, this;
    },
    'setScalar': function(bf) {
      return this['x'] = bf, this['y'] = bf, this['z'] = bf, this['w'] = bf, this;
    },
    'setX': function(bf) {
      return this['x'] = bf, this;
    },
    'setY': function(bf) {
      return this['y'] = bf, this;
    },
    'setZ': function(bf) {
      return this['z'] = bf, this;
    },
    'setW': function(bf) {
      return this['w'] = bf, this;
    },
    'setComponent': function(bf, bg) {
      switch (bf) {
        case 0x0:
          this['x'] = bg;
          break;
        case 0x1:
          this['y'] = bg;
          break;
        case 0x2:
          this['z'] = bg;
          break;
        case 0x3:
          this['w'] = bg;
          break;
        default:
          throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
      }
      return this;
    },
    'getComponent': function(bf) {
      switch (bf) {
        case 0x0:
          return this['x'];
        case 0x1:
          return this['y'];
        case 0x2:
          return this['z'];
        case 0x3:
          return this['w'];
        default:
          throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
      }
    },
    'clone': function() {
      return new this['constructor'](this['x'], this['y'], this['z'], this['w']);
    },
    'copy': function(bf) {
      return this['x'] = bf['x'], this['y'] = bf['y'], this['z'] = bf['z'], this['w'] = void 0x0 !== bf['w'] ? bf['w'] : 0x1, this;
    },
    'add': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Vector4:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'), this['addVectors'](bf, bg)) : (this['x'] += bf['x'], this['y'] += bf['y'], this['z'] += bf['z'], this['w'] += bf['w'], this);
    },
    'addScalar': function(bf) {
      return this['x'] += bf, this['y'] += bf, this['z'] += bf, this['w'] += bf, this;
    },
    'addVectors': function(bf, bg) {
      return this['x'] = bf['x'] + bg['x'], this['y'] = bf['y'] + bg['y'], this['z'] = bf['z'] + bg['z'], this['w'] = bf['w'] + bg['w'], this;
    },
    'addScaledVector': function(bf, bg) {
      return this['x'] += bf['x'] * bg, this['y'] += bf['y'] * bg, this['z'] += bf['z'] * bg, this['w'] += bf['w'] * bg, this;
    },
    'sub': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Vector4:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'), this['subVectors'](bf, bg)) : (this['x'] -= bf['x'], this['y'] -= bf['y'], this['z'] -= bf['z'], this['w'] -= bf['w'], this);
    },
    'subScalar': function(bf) {
      return this['x'] -= bf, this['y'] -= bf, this['z'] -= bf, this['w'] -= bf, this;
    },
    'subVectors': function(bf, bg) {
      return this['x'] = bf['x'] - bg['x'], this['y'] = bf['y'] - bg['y'], this['z'] = bf['z'] - bg['z'], this['w'] = bf['w'] - bg['w'], this;
    },
    'multiplyScalar': function(bf) {
      return this['x'] *= bf, this['y'] *= bf, this['z'] *= bf, this['w'] *= bf, this;
    },
    'applyMatrix4': function(bf) {
      var bg = this['x'],
        bh = this['y'],
        bi = this['z'],
        bF = this['w'],
        bG = bf['elements'];
      return this['x'] = bG[0x0] * bg + bG[0x4] * bh + bG[0x8] * bi + bG[0xc] * bF, this['y'] = bG[0x1] * bg + bG[0x5] * bh + bG[0x9] * bi + bG[0xd] * bF, this['z'] = bG[0x2] * bg + bG[0x6] * bh + bG[0xa] * bi + bG[0xe] * bF, this['w'] = bG[0x3] * bg + bG[0x7] * bh + bG[0xb] * bi + bG[0xf] * bF, this;
    },
    'divideScalar': function(bf) {
      return this['multiplyScalar'](0x1 / bf);
    },
    'setAxisAngleFromQuaternion': function(bf) {
      this['w'] = 0x2 * Math['acos'](bf['w']);
      var bg = Math['sqrt'](0x1 - bf['w'] * bf['w']);
      return bg < 0.0001 ? (this['x'] = 0x1, this['y'] = 0x0, this['z'] = 0x0) : (this['x'] = bf['x'] / bg, this['y'] = bf['y'] / bg, this['z'] = bf['z'] / bg), this;
    },
    'setAxisAngleFromRotationMatrix': function(bf) {
      var bg, bh, bi, bF, bG = bf['elements'],
        bH = bG[0x0],
        bI = bG[0x4],
        bJ = bG[0x8],
        bK = bG[0x1],
        bL = bG[0x5],
        bM = bG[0x9],
        bN = bG[0x2],
        bO = bG[0x6],
        bP = bG[0xa];
      if (Math['abs'](bI - bK) < 0.01 && Math['abs'](bJ - bN) < 0.01 && Math['abs'](bM - bO) < 0.01) {
        if (Math['abs'](bI + bK) < 0.1 && Math['abs'](bJ + bN) < 0.1 && Math['abs'](bM + bO) < 0.1 && Math['abs'](bH + bL + bP - 0x3) < 0.1) return this['set'](0x1, 0x0, 0x0, 0x0), this;
        bg = Math['PI'];
        var bQ = (bH + 0x1) / 0x2,
          bR = (bL + 0x1) / 0x2,
          bS = (bP + 0x1) / 0x2,
          bT = (bI + bK) / 0x4,
          bU = (bJ + bN) / 0x4,
          bV = (bM + bO) / 0x4;
        return bQ > bR && bQ > bS ? bQ < 0.01 ? (bh = 0x0, bi = 0.707106781, bF = 0.707106781) : (bi = bT / (bh = Math['sqrt'](bQ)), bF = bU / bh) : bR > bS ? bR < 0.01 ? (bh = 0.707106781, bi = 0x0, bF = 0.707106781) : (bh = bT / (bi = Math['sqrt'](bR)), bF = bV / bi) : bS < 0.01 ? (bh = 0.707106781, bi = 0.707106781, bF = 0x0) : (bh = bU / (bF = Math['sqrt'](bS)), bi = bV / bF), this['set'](bh, bi, bF, bg), this;
      }
      var bW = Math['sqrt']((bO - bM) * (bO - bM) + (bJ - bN) * (bJ - bN) + (bK - bI) * (bK - bI));
      return Math['abs'](bW) < 0.001 && (bW = 0x1), this['x'] = (bO - bM) / bW, this['y'] = (bJ - bN) / bW, this['z'] = (bK - bI) / bW, this['w'] = Math['acos']((bH + bL + bP - 0x1) / 0x2), this;
    },
    'min': function(bf) {
      return this['x'] = Math['min'](this['x'], bf['x']), this['y'] = Math['min'](this['y'], bf['y']), this['z'] = Math['min'](this['z'], bf['z']), this['w'] = Math['min'](this['w'], bf['w']), this;
    },
    'max': function(bf) {
      return this['x'] = Math['max'](this['x'], bf['x']), this['y'] = Math['max'](this['y'], bf['y']), this['z'] = Math['max'](this['z'], bf['z']), this['w'] = Math['max'](this['w'], bf['w']), this;
    },
    'clamp': function(bf, bg) {
      return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])), this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])), this['z'] = Math['max'](bf['z'], Math['min'](bg['z'], this['z'])), this['w'] = Math['max'](bf['w'], Math['min'](bg['w'], this['w'])), this;
    },
    'clampScalar': function(bf, bg) {
      return void 0x0 === lD && (lD = new m7(), lE = new m7()), lD['set'](bf, bf, bf, bf), lE['set'](bg, bg, bg, bg), this['clamp'](lD, lE);
    },
    'clampLength': function(bf, bg) {
      var bh = this['length']();
      return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
    },
    'floor': function() {
      return this['x'] = Math['floor'](this['x']), this['y'] = Math['floor'](this['y']), this['z'] = Math['floor'](this['z']), this['w'] = Math['floor'](this['w']), this;
    },
    'ceil': function() {
      return this['x'] = Math['ceil'](this['x']), this['y'] = Math['ceil'](this['y']), this['z'] = Math['ceil'](this['z']), this['w'] = Math['ceil'](this['w']), this;
    },
    'round': function() {
      return this['x'] = Math['round'](this['x']), this['y'] = Math['round'](this['y']), this['z'] = Math['round'](this['z']), this['w'] = Math['round'](this['w']), this;
    },
    'roundToZero': function() {
      return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']), this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']), this['z'] = this['z'] < 0x0 ? Math['ceil'](this['z']) : Math['floor'](this['z']), this['w'] = this['w'] < 0x0 ? Math['ceil'](this['w']) : Math['floor'](this['w']), this;
    },
    'negate': function() {
      return this['x'] = -this['x'], this['y'] = -this['y'], this['z'] = -this['z'], this['w'] = -this['w'], this;
    },
    'dot': function(bf) {
      return this['x'] * bf['x'] + this['y'] * bf['y'] + this['z'] * bf['z'] + this['w'] * bf['w'];
    },
    'lengthSq': function() {
      return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
    },
    'length': function() {
      return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
    },
    'manhattanLength': function() {
      return Math['abs'](this['x']) + Math['abs'](this['y']) + Math['abs'](this['z']) + Math['abs'](this['w']);
    },
    'normalize': function() {
      return this['divideScalar'](this['length']() || 0x1);
    },
    'setLength': function(bf) {
      return this['normalize']()['multiplyScalar'](bf);
    },
    'lerp': function(bf, bg) {
      return this['x'] += (bf['x'] - this['x']) * bg, this['y'] += (bf['y'] - this['y']) * bg, this['z'] += (bf['z'] - this['z']) * bg, this['w'] += (bf['w'] - this['w']) * bg, this;
    },
    'lerpVectors': function(bf, bg, bh) {
      return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
    },
    'equals': function(bf) {
      return bf['x'] === this['x'] && bf['y'] === this['y'] && bf['z'] === this['z'] && bf['w'] === this['w'];
    },
    'fromArray': function(bf, bg) {
      return void 0x0 === bg && (bg = 0x0), this['x'] = bf[bg], this['y'] = bf[bg + 0x1], this['z'] = bf[bg + 0x2], this['w'] = bf[bg + 0x3], this;
    },
    'toArray': function(bf, bg) {
      return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['x'], bf[bg + 0x1] = this['y'], bf[bg + 0x2] = this['z'], bf[bg + 0x3] = this['w'], bf;
    },
    'fromBufferAttribute': function(bf, bg, bh) {
      return void 0x0 !== bh && console['warn']('THREE.Vector4:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'), this['x'] = bf['getX'](bg), this['y'] = bf['getY'](bg), this['z'] = bf['getZ'](bg), this['w'] = bf['getW'](bg), this;
    }
  }), mc['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
    'constructor': mc,
    'isWebGLRenderTarget': !0x0,
    'setSize': function(bf, bg) {
      this['width'] === bf && this['height'] === bg || (this['width'] = bf, this['height'] = bg, this['dispose']()), this['viewport']['set'](0x0, 0x0, bf, bg), this['scissor']['set'](0x0, 0x0, bf, bg);
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['width'] = bf['width'], this['height'] = bf['height'], this['viewport']['copy'](bf['viewport']), this['texture'] = bf['texture']['clone'](), this['depthBuffer'] = bf['depthBuffer'], this['stencilBuffer'] = bf['stencilBuffer'], this['depthTexture'] = bf['depthTexture'], this;
    },
    'dispose': function() {
      this['dispatchEvent']({
        'type': 'dispose'
      });
    }
  }), mg['prototype'] = Object['assign'](Object['create'](mc['prototype']), {
    'constructor': mg,
    'isWebGLMultisampleRenderTarget': !0x0,
    'copy': function(bf) {
      return mc['prototype']['copy']['call'](this, bf), this['samples'] = bf['samples'], this;
    }
  }), mk['prototype'] = Object['create'](mc['prototype']), mk['prototype']['constructor'] = mk, mk['prototype']['isWebGLRenderTargetCube'] = !0x0, mo['prototype'] = Object['create'](lW['prototype']), mo['prototype']['constructor'] = mo, mo['prototype']['isDataTexture'] = !0x0, Object['assign'](mB['prototype'], {
    'isBox3': !0x0,
    'set': function(bf, bg) {
      return this['min']['copy'](bf), this['max']['copy'](bg), this;
    },
    'setFromArray': function(bf) {
      for (var bg = 0x1 / 0x0, bh = 0x1 / 0x0, bi = 0x1 / 0x0, bF = -0x1 / 0x0, bG = -0x1 / 0x0, bH = -0x1 / 0x0, bI = 0x0, bJ = bf['length']; bI < bJ; bI += 0x3) {
        var bK = bf[bI],
          bL = bf[bI + 0x1],
          bM = bf[bI + 0x2];
        bK < bg && (bg = bK), bL < bh && (bh = bL), bM < bi && (bi = bM), bK > bF && (bF = bK), bL > bG && (bG = bL), bM > bH && (bH = bM);
      }
      return this['min']['set'](bg, bh, bi), this['max']['set'](bF, bG, bH), this;
    },
    'setFromBufferAttribute': function(bf) {
      for (var bg = 0x1 / 0x0, bh = 0x1 / 0x0, bi = 0x1 / 0x0, bF = -0x1 / 0x0, bG = -0x1 / 0x0, bH = -0x1 / 0x0, bI = 0x0, bJ = bf['count']; bI < bJ; bI++) {
        var bK = bf['getX'](bI),
          bL = bf['getY'](bI),
          bM = bf['getZ'](bI);
        bK < bg && (bg = bK), bL < bh && (bh = bL), bM < bi && (bi = bM), bK > bF && (bF = bK), bL > bG && (bG = bL), bM > bH && (bH = bM);
      }
      return this['min']['set'](bg, bh, bi), this['max']['set'](bF, bG, bH), this;
    },
    'setFromPoints': function(bf) {
      this['makeEmpty']();
      for (var bg = 0x0, bh = bf['length']; bg < bh; bg++) this['expandByPoint'](bf[bg]);
      return this;
    },
    'setFromCenterAndSize': function() {
      var bf = new eK();
      return function(bg, bh) {
        var bi = bf['copy'](bh)['multiplyScalar'](0.5);
        return this['min']['copy'](bg)['sub'](bi), this['max']['copy'](bg)['add'](bi), this;
      };
    }(),
    'setFromObject': function(bf) {
      return this['makeEmpty'](), this['expandByObject'](bf);
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['min']['copy'](bf['min']), this['max']['copy'](bf['max']), this;
    },
    'makeEmpty': function() {
      return this['min']['x'] = this['min']['y'] = this['min']['z'] = 0x1 / 0x0, this['max']['x'] = this['max']['y'] = this['max']['z'] = -0x1 / 0x0, this;
    },
    'isEmpty': function() {
      return this['max']['x'] < this['min']['x'] || this['max']['y'] < this['min']['y'] || this['max']['z'] < this['min']['z'];
    },
    'getCenter': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Box3:\x20.getCenter()\x20target\x20is\x20now\x20required'), bf = new eK()), this['isEmpty']() ? bf['set'](0x0, 0x0, 0x0) : bf['addVectors'](this['min'], this['max'])['multiplyScalar'](0.5);
    },
    'getSize': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Box3:\x20.getSize()\x20target\x20is\x20now\x20required'), bf = new eK()), this['isEmpty']() ? bf['set'](0x0, 0x0, 0x0) : bf['subVectors'](this['max'], this['min']);
    },
    'expandByPoint': function(bf) {
      return this['min']['min'](bf), this['max']['max'](bf), this;
    },
    'expandByVector': function(bf) {
      return this['min']['sub'](bf), this['max']['add'](bf), this;
    },
    'expandByScalar': function(bf) {
      return this['min']['addScalar'](-bf), this['max']['addScalar'](bf), this;
    },
    'expandByObject': function() {
      var bf, bg, bh, bi = new eK();

      function bF(bF) {
        var bG = bF['geometry'];
        if (void 0x0 !== bG)
          if (bG['isGeometry']) {
            var bH = bG['vertices'];
            for (bg = 0x0, bh = bH['length']; bg < bh; bg++) bi['copy'](bH[bg]), bi['applyMatrix4'](bF['matrixWorld']), bf['expandByPoint'](bi);
          } else if (bG['isBufferGeometry']) {
          var bI = bG['attributes']['position'];
          if (void 0x0 !== bI)
            for (bg = 0x0, bh = bI['count']; bg < bh; bg++) bi['fromBufferAttribute'](bI, bg)['applyMatrix4'](bF['matrixWorld']), bf['expandByPoint'](bi);
        }
      }
      return function(bg) {
        return bf = this, bg['updateMatrixWorld'](!0x0), bg['traverse'](bF), this;
      };
    }(),
    'containsPoint': function(bf) {
      return !(bf['x'] < this['min']['x'] || bf['x'] > this['max']['x'] || bf['y'] < this['min']['y'] || bf['y'] > this['max']['y'] || bf['z'] < this['min']['z'] || bf['z'] > this['max']['z']);
    },
    'containsBox': function(bf) {
      return this['min']['x'] <= bf['min']['x'] && bf['max']['x'] <= this['max']['x'] && this['min']['y'] <= bf['min']['y'] && bf['max']['y'] <= this['max']['y'] && this['min']['z'] <= bf['min']['z'] && bf['max']['z'] <= this['max']['z'];
    },
    'getParameter': function(bf, bg) {
      return void 0x0 === bg && (console['warn']('THREE.Box3:\x20.getParameter()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['set']((bf['x'] - this['min']['x']) / (this['max']['x'] - this['min']['x']), (bf['y'] - this['min']['y']) / (this['max']['y'] - this['min']['y']), (bf['z'] - this['min']['z']) / (this['max']['z'] - this['min']['z']));
    },
    'intersectsBox': function(bf) {
      return !(bf['max']['x'] < this['min']['x'] || bf['min']['x'] > this['max']['x'] || bf['max']['y'] < this['min']['y'] || bf['min']['y'] > this['max']['y'] || bf['max']['z'] < this['min']['z'] || bf['min']['z'] > this['max']['z']);
    },
    'intersectsSphere': (lG = new eK(), function(bf) {
      return this['clampPoint'](bf['center'], lG), lG['distanceToSquared'](bf['center']) <= bf['radius'] * bf['radius'];
    }),
    'intersectsPlane': function(bf) {
      var bg, bh;
      return bf['normal']['x'] > 0x0 ? (bg = bf['normal']['x'] * this['min']['x'], bh = bf['normal']['x'] * this['max']['x']) : (bg = bf['normal']['x'] * this['max']['x'], bh = bf['normal']['x'] * this['min']['x']), bf['normal']['y'] > 0x0 ? (bg += bf['normal']['y'] * this['min']['y'], bh += bf['normal']['y'] * this['max']['y']) : (bg += bf['normal']['y'] * this['max']['y'], bh += bf['normal']['y'] * this['min']['y']), bf['normal']['z'] > 0x0 ? (bg += bf['normal']['z'] * this['min']['z'], bh += bf['normal']['z'] * this['max']['z']) : (bg += bf['normal']['z'] * this['max']['z'], bh += bf['normal']['z'] * this['min']['z']), bg <= -bf['constant'] && bh >= -bf['constant'];
    },
    'intersectsTriangle': function() {
      var bf = new eK(),
        bg = new eK(),
        bh = new eK(),
        bi = new eK(),
        bF = new eK(),
        bG = new eK(),
        bH = new eK(),
        bI = new eK(),
        bJ = new eK(),
        bK = new eK();

      function bL(bi) {
        var bF, bG;
        for (bF = 0x0, bG = bi['length'] - 0x3; bF <= bG; bF += 0x3) {
          bH['fromArray'](bi, bF);
          var bI = bJ['x'] * Math['abs'](bH['x']) + bJ['y'] * Math['abs'](bH['y']) + bJ['z'] * Math['abs'](bH['z']),
            bK = bf['dot'](bH),
            bL = bg['dot'](bH),
            bM = bh['dot'](bH);
          if (Math['max'](-Math['max'](bK, bL, bM), Math['min'](bK, bL, bM)) > bI) return !0x1;
        }
        return !0x0;
      }
      return function(bH) {
        if (this['isEmpty']()) return !0x1;
        this['getCenter'](bI), bJ['subVectors'](this['max'], bI), bf['subVectors'](bH['a'], bI), bg['subVectors'](bH['b'], bI), bh['subVectors'](bH['c'], bI), bi['subVectors'](bg, bf), bF['subVectors'](bh, bg), bG['subVectors'](bf, bh);
        var bM = [0x0, -bi['z'], bi['y'], 0x0, -bF['z'], bF['y'], 0x0, -bG['z'], bG['y'], bi['z'], 0x0, -bi['x'], bF['z'], 0x0, -bF['x'], bG['z'], 0x0, -bG['x'], -bi['y'], bi['x'], 0x0, -bF['y'], bF['x'], 0x0, -bG['y'], bG['x'], 0x0];
        return !!bL(bM) && (!!bL(bM = [0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1]) && (bK['crossVectors'](bi, bF), bL(bM = [bK['x'], bK['y'], bK['z']])));
      };
    }(),
    'clampPoint': function(bf, bg) {
      return void 0x0 === bg && (console['warn']('THREE.Box3:\x20.clampPoint()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['copy'](bf)['clamp'](this['min'], this['max']);
    },
    'distanceToPoint': function() {
      var bf = new eK();
      return function(bg) {
        return bf['copy'](bg)['clamp'](this['min'], this['max'])['sub'](bg)['length']();
      };
    }(),
    'getBoundingSphere': function() {
      var bf = new eK();
      return function(bg) {
        return void 0x0 === bg && console['error']('THREE.Box3:\x20.getBoundingSphere()\x20target\x20is\x20now\x20required'), this['getCenter'](bg['center']), bg['radius'] = 0.5 * this['getSize'](bf)['length'](), bg;
      };
    }(),
    'intersect': function(bf) {
      return this['min']['max'](bf['min']), this['max']['min'](bf['max']), this['isEmpty']() && this['makeEmpty'](), this;
    },
    'union': function(bf) {
      return this['min']['min'](bf['min']), this['max']['max'](bf['max']), this;
    },
    'applyMatrix4': (lF = [new eK(), new eK(), new eK(), new eK(), new eK(), new eK(), new eK(), new eK()], function(bf) {
      return this['isEmpty']() ? this : (lF[0x0]['set'](this['min']['x'], this['min']['y'], this['min']['z'])['applyMatrix4'](bf), lF[0x1]['set'](this['min']['x'], this['min']['y'], this['max']['z'])['applyMatrix4'](bf), lF[0x2]['set'](this['min']['x'], this['max']['y'], this['min']['z'])['applyMatrix4'](bf), lF[0x3]['set'](this['min']['x'], this['max']['y'], this['max']['z'])['applyMatrix4'](bf), lF[0x4]['set'](this['max']['x'], this['min']['y'], this['min']['z'])['applyMatrix4'](bf), lF[0x5]['set'](this['max']['x'], this['min']['y'], this['max']['z'])['applyMatrix4'](bf), lF[0x6]['set'](this['max']['x'], this['max']['y'], this['min']['z'])['applyMatrix4'](bf), lF[0x7]['set'](this['max']['x'], this['max']['y'], this['max']['z'])['applyMatrix4'](bf), this['setFromPoints'](lF), this);
    }),
    'translate': function(bf) {
      return this['min']['add'](bf), this['max']['add'](bf), this;
    },
    'equals': function(bf) {
      return bf['min']['equals'](this['min']) && bf['max']['equals'](this['max']);
    }
  }), Object['assign'](mE['prototype'], {
    'set': function(bf, bg) {
      return this['center']['copy'](bf), this['radius'] = bg, this;
    },
    'setFromPoints': (lH = new mB(), function(bf, bg) {
      var bh = this['center'];
      void 0x0 !== bg ? bh['copy'](bg) : lH['setFromPoints'](bf)['getCenter'](bh);
      for (var bi = 0x0, bF = 0x0, bG = bf['length']; bF < bG; bF++) bi = Math['max'](bi, bh['distanceToSquared'](bf[bF]));
      return this['radius'] = Math['sqrt'](bi), this;
    }),
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['center']['copy'](bf['center']), this['radius'] = bf['radius'], this;
    },
    'empty': function() {
      return this['radius'] <= 0x0;
    },
    'containsPoint': function(bf) {
      return bf['distanceToSquared'](this['center']) <= this['radius'] * this['radius'];
    },
    'distanceToPoint': function(bf) {
      return bf['distanceTo'](this['center']) - this['radius'];
    },
    'intersectsSphere': function(bf) {
      var bg = this['radius'] + bf['radius'];
      return bf['center']['distanceToSquared'](this['center']) <= bg * bg;
    },
    'intersectsBox': function(bf) {
      return bf['intersectsSphere'](this);
    },
    'intersectsPlane': function(bf) {
      return Math['abs'](bf['distanceToPoint'](this['center'])) <= this['radius'];
    },
    'clampPoint': function(bf, bg) {
      var bh = this['center']['distanceToSquared'](bf);
      return void 0x0 === bg && (console['warn']('THREE.Sphere:\x20.clampPoint()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['copy'](bf), bh > this['radius'] * this['radius'] && (bg['sub'](this['center'])['normalize'](), bg['multiplyScalar'](this['radius'])['add'](this['center'])), bg;
    },
    'getBoundingBox': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Sphere:\x20.getBoundingBox()\x20target\x20is\x20now\x20required'), bf = new mB()), bf['set'](this['center'], this['center']), bf['expandByScalar'](this['radius']), bf;
    },
    'applyMatrix4': function(bf) {
      return this['center']['applyMatrix4'](bf), this['radius'] = this['radius'] * bf['getMaxScaleOnAxis'](), this;
    },
    'translate': function(bf) {
      return this['center']['add'](bf), this;
    },
    'equals': function(bf) {
      return bf['center']['equals'](this['center']) && bf['radius'] === this['radius'];
    }
  }), Object['assign'](mH['prototype'], {
    'set': function(bf, bg) {
      return this['normal']['copy'](bf), this['constant'] = bg, this;
    },
    'setComponents': function(bf, bg, bh, bi) {
      return this['normal']['set'](bf, bg, bh), this['constant'] = bi, this;
    },
    'setFromNormalAndCoplanarPoint': function(bf, bg) {
      return this['normal']['copy'](bf), this['constant'] = -bg['dot'](this['normal']), this;
    },
    'setFromCoplanarPoints': function() {
      var bf = new eK(),
        bg = new eK();
      return function(bh, bi, bF) {
        var bG = bf['subVectors'](bF, bi)['cross'](bg['subVectors'](bh, bi))['normalize']();
        return this['setFromNormalAndCoplanarPoint'](bG, bh), this;
      };
    }(),
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['normal']['copy'](bf['normal']), this['constant'] = bf['constant'], this;
    },
    'normalize': function() {
      var bf = 0x1 / this['normal']['length']();
      return this['normal']['multiplyScalar'](bf), this['constant'] *= bf, this;
    },
    'negate': function() {
      return this['constant'] *= -0x1, this['normal']['negate'](), this;
    },
    'distanceToPoint': function(bf) {
      return this['normal']['dot'](bf) + this['constant'];
    },
    'distanceToSphere': function(bf) {
      return this['distanceToPoint'](bf['center']) - bf['radius'];
    },
    'projectPoint': function(bf, bg) {
      return void 0x0 === bg && (console['warn']('THREE.Plane:\x20.projectPoint()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['copy'](this['normal'])['multiplyScalar'](-this['distanceToPoint'](bf))['add'](bf);
    },
    'intersectLine': function() {
      var bf = new eK();
      return function(bg, bh) {
        void 0x0 === bh && (console['warn']('THREE.Plane:\x20.intersectLine()\x20target\x20is\x20now\x20required'), bh = new eK());
        var bi = bg['delta'](bf),
          bF = this['normal']['dot'](bi);
        if (0x0 === bF) return 0x0 === this['distanceToPoint'](bg['start']) ? bh['copy'](bg['start']) : void 0x0;
        var bG = -(bg['start']['dot'](this['normal']) + this['constant']) / bF;
        return bG < 0x0 || bG > 0x1 ? void 0x0 : bh['copy'](bi)['multiplyScalar'](bG)['add'](bg['start']);
      };
    }(),
    'intersectsLine': function(bf) {
      var bg = this['distanceToPoint'](bf['start']),
        bh = this['distanceToPoint'](bf['end']);
      return bg < 0x0 && bh > 0x0 || bh < 0x0 && bg > 0x0;
    },
    'intersectsBox': function(bf) {
      return bf['intersectsPlane'](this);
    },
    'intersectsSphere': function(bf) {
      return bf['intersectsPlane'](this);
    },
    'coplanarPoint': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Plane:\x20.coplanarPoint()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['copy'](this['normal'])['multiplyScalar'](-this['constant']);
    },
    'applyMatrix4': function() {
      var bf = new eK(),
        bg = new eO();
      return function(bh, bi) {
        var bF = bi || bg['getNormalMatrix'](bh),
          bG = this['coplanarPoint'](bf)['applyMatrix4'](bh),
          bH = this['normal']['applyMatrix3'](bF)['normalize']();
        return this['constant'] = -bG['dot'](bH), this;
      };
    }(),
    'translate': function(bf) {
      return this['constant'] -= bf['dot'](this['normal']), this;
    },
    'equals': function(bf) {
      return bf['normal']['equals'](this['normal']) && bf['constant'] === this['constant'];
    }
  }), Object['assign'](mK['prototype'], {
    'set': function(bf, bg, bh, bi, bF, bG) {
      var bH = this['planes'];
      return bH[0x0]['copy'](bf), bH[0x1]['copy'](bg), bH[0x2]['copy'](bh), bH[0x3]['copy'](bi), bH[0x4]['copy'](bF), bH[0x5]['copy'](bG), this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++) bg[bh]['copy'](bf['planes'][bh]);
      return this;
    },
    'setFromMatrix': function(bf) {
      var bg = this['planes'],
        bh = bf['elements'],
        bi = bh[0x0],
        bF = bh[0x1],
        bG = bh[0x2],
        bH = bh[0x3],
        bI = bh[0x4],
        bJ = bh[0x5],
        bK = bh[0x6],
        bL = bh[0x7],
        bM = bh[0x8],
        bN = bh[0x9],
        bO = bh[0xa],
        bP = bh[0xb],
        bQ = bh[0xc],
        bR = bh[0xd],
        bS = bh[0xe],
        bT = bh[0xf];
      return bg[0x0]['setComponents'](bH - bi, bL - bI, bP - bM, bT - bQ)['normalize'](), bg[0x1]['setComponents'](bH + bi, bL + bI, bP + bM, bT + bQ)['normalize'](), bg[0x2]['setComponents'](bH + bF, bL + bJ, bP + bN, bT + bR)['normalize'](), bg[0x3]['setComponents'](bH - bF, bL - bJ, bP - bN, bT - bR)['normalize'](), bg[0x4]['setComponents'](bH - bG, bL - bK, bP - bO, bT - bS)['normalize'](), bg[0x5]['setComponents'](bH + bG, bL + bK, bP + bO, bT + bS)['normalize'](), this;
    },
    'intersectsObject': (lJ = new mE(), function(bf) {
      var bg = bf['geometry'];
      return null === bg['boundingSphere'] && bg['computeBoundingSphere'](), lJ['copy'](bg['boundingSphere'])['applyMatrix4'](bf['matrixWorld']), this['intersectsSphere'](lJ);
    }),
    'intersectsSprite': function() {
      var bf = new mE();
      return function(bg) {
        return bf['center']['set'](0x0, 0x0, 0x0), bf['radius'] = 0.7071067811865476, bf['applyMatrix4'](bg['matrixWorld']), this['intersectsSphere'](bf);
      };
    }(),
    'intersectsSphere': function(bf) {
      for (var bg = this['planes'], bh = bf['center'], bi = -bf['radius'], bF = 0x0; bF < 0x6; bF++) {
        if (bg[bF]['distanceToPoint'](bh) < bi) return !0x1;
      }
      return !0x0;
    },
    'intersectsBox': (lI = new eK(), function(bf) {
      for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++) {
        var bi = bg[bh];
        if (lI['x'] = bi['normal']['x'] > 0x0 ? bf['max']['x'] : bf['min']['x'], lI['y'] = bi['normal']['y'] > 0x0 ? bf['max']['y'] : bf['min']['y'], lI['z'] = bi['normal']['z'] > 0x0 ? bf['max']['z'] : bf['min']['z'], bi['distanceToPoint'](lI) < 0x0) return !0x1;
      }
      return !0x0;
    }),
    'containsPoint': function(bf) {
      for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++)
        if (bg[bh]['distanceToPoint'](bf) < 0x0) return !0x1;
      return !0x0;
    }
  }), Object['assign'](mR['prototype'], {
    'isMatrix4': !0x0,
    'set': function(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM, bN, bO, bP, bQ) {
      var bR = this['elements'];
      return bR[0x0] = bf, bR[0x4] = bg, bR[0x8] = bh, bR[0xc] = bi, bR[0x1] = bF, bR[0x5] = bG, bR[0x9] = bH, bR[0xd] = bI, bR[0x2] = bJ, bR[0x6] = bK, bR[0xa] = bL, bR[0xe] = bM, bR[0x3] = bN, bR[0x7] = bO, bR[0xb] = bP, bR[0xf] = bQ, this;
    },
    'identity': function() {
      return this['set'](0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), this;
    },
    'clone': function() {
      return new mR()['fromArray'](this['elements']);
    },
    'copy': function(bf) {
      var bg = this['elements'],
        bh = bf['elements'];
      return bg[0x0] = bh[0x0], bg[0x1] = bh[0x1], bg[0x2] = bh[0x2], bg[0x3] = bh[0x3], bg[0x4] = bh[0x4], bg[0x5] = bh[0x5], bg[0x6] = bh[0x6], bg[0x7] = bh[0x7], bg[0x8] = bh[0x8], bg[0x9] = bh[0x9], bg[0xa] = bh[0xa], bg[0xb] = bh[0xb], bg[0xc] = bh[0xc], bg[0xd] = bh[0xd], bg[0xe] = bh[0xe], bg[0xf] = bh[0xf], this;
    },
    'copyPosition': function(bf) {
      var bg = this['elements'],
        bh = bf['elements'];
      return bg[0xc] = bh[0xc], bg[0xd] = bh[0xd], bg[0xe] = bh[0xe], this;
    },
    'extractBasis': function(bf, bg, bh) {
      return bf['setFromMatrixColumn'](this, 0x0), bg['setFromMatrixColumn'](this, 0x1), bh['setFromMatrixColumn'](this, 0x2), this;
    },
    'makeBasis': function(bf, bg, bh) {
      return this['set'](bf['x'], bg['x'], bh['x'], 0x0, bf['y'], bg['y'], bh['y'], 0x0, bf['z'], bg['z'], bh['z'], 0x0, 0x0, 0x0, 0x0, 0x1), this;
    },
    'extractRotation': function() {
      var bf = new eK();
      return function(bg) {
        var bh = this['elements'],
          bi = bg['elements'],
          bF = 0x1 / bf['setFromMatrixColumn'](bg, 0x0)['length'](),
          bG = 0x1 / bf['setFromMatrixColumn'](bg, 0x1)['length'](),
          bH = 0x1 / bf['setFromMatrixColumn'](bg, 0x2)['length']();
        return bh[0x0] = bi[0x0] * bF, bh[0x1] = bi[0x1] * bF, bh[0x2] = bi[0x2] * bF, bh[0x3] = 0x0, bh[0x4] = bi[0x4] * bG, bh[0x5] = bi[0x5] * bG, bh[0x6] = bi[0x6] * bG, bh[0x7] = 0x0, bh[0x8] = bi[0x8] * bH, bh[0x9] = bi[0x9] * bH, bh[0xa] = bi[0xa] * bH, bh[0xb] = 0x0, bh[0xc] = 0x0, bh[0xd] = 0x0, bh[0xe] = 0x0, bh[0xf] = 0x1, this;
      };
    }(),
    'makeRotationFromEuler': function(bf) {
      bf && bf['isEuler'] || console['error']('THREE.Matrix4:\x20.makeRotationFromEuler()\x20now\x20expects\x20a\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.');
      var bg = this['elements'],
        bh = bf['x'],
        bi = bf['y'],
        bF = bf['z'],
        bG = Math['cos'](bh),
        bH = Math['sin'](bh),
        bI = Math['cos'](bi),
        bJ = Math['sin'](bi),
        bK = Math['cos'](bF),
        bL = Math['sin'](bF);
      if ('XYZ' === bf['order']) {
        var bM = bG * bK,
          bN = bG * bL,
          bO = bH * bK,
          bP = bH * bL;
        bg[0x0] = bI * bK, bg[0x4] = -bI * bL, bg[0x8] = bJ, bg[0x1] = bN + bO * bJ, bg[0x5] = bM - bP * bJ, bg[0x9] = -bH * bI, bg[0x2] = bP - bM * bJ, bg[0x6] = bO + bN * bJ, bg[0xa] = bG * bI;
      } else if ('YXZ' === bf['order']) {
        var bQ = bI * bK,
          bR = bI * bL,
          bS = bJ * bK,
          bT = bJ * bL;
        bg[0x0] = bQ + bT * bH, bg[0x4] = bS * bH - bR, bg[0x8] = bG * bJ, bg[0x1] = bG * bL, bg[0x5] = bG * bK, bg[0x9] = -bH, bg[0x2] = bR * bH - bS, bg[0x6] = bT + bQ * bH, bg[0xa] = bG * bI;
      } else if ('ZXY' === bf['order']) {
        bQ = bI * bK, bR = bI * bL, bS = bJ * bK, bT = bJ * bL;
        bg[0x0] = bQ - bT * bH, bg[0x4] = -bG * bL, bg[0x8] = bS + bR * bH, bg[0x1] = bR + bS * bH, bg[0x5] = bG * bK, bg[0x9] = bT - bQ * bH, bg[0x2] = -bG * bJ, bg[0x6] = bH, bg[0xa] = bG * bI;
      } else if ('ZYX' === bf['order']) {
        bM = bG * bK, bN = bG * bL, bO = bH * bK, bP = bH * bL;
        bg[0x0] = bI * bK, bg[0x4] = bO * bJ - bN, bg[0x8] = bM * bJ + bP, bg[0x1] = bI * bL, bg[0x5] = bP * bJ + bM, bg[0x9] = bN * bJ - bO, bg[0x2] = -bJ, bg[0x6] = bH * bI, bg[0xa] = bG * bI;
      } else if ('YZX' === bf['order']) {
        var bU = bG * bI,
          bV = bG * bJ,
          bW = bH * bI,
          bX = bH * bJ;
        bg[0x0] = bI * bK, bg[0x4] = bX - bU * bL, bg[0x8] = bW * bL + bV, bg[0x1] = bL, bg[0x5] = bG * bK, bg[0x9] = -bH * bK, bg[0x2] = -bJ * bK, bg[0x6] = bV * bL + bW, bg[0xa] = bU - bX * bL;
      } else if ('XZY' === bf['order']) {
        bU = bG * bI, bV = bG * bJ, bW = bH * bI, bX = bH * bJ;
        bg[0x0] = bI * bK, bg[0x4] = -bL, bg[0x8] = bJ * bK, bg[0x1] = bU * bL + bX, bg[0x5] = bG * bK, bg[0x9] = bV * bL - bW, bg[0x2] = bW * bL - bV, bg[0x6] = bH * bK, bg[0xa] = bX * bL + bU;
      }
      return bg[0x3] = 0x0, bg[0x7] = 0x0, bg[0xb] = 0x0, bg[0xc] = 0x0, bg[0xd] = 0x0, bg[0xe] = 0x0, bg[0xf] = 0x1, this;
    },
    'makeRotationFromQuaternion': (lP = new eK(0x0, 0x0, 0x0), lQ = new eK(0x1, 0x1, 0x1), function(bf) {
      return this['compose'](lP, bf, lQ);
    }),
    'lookAt': (lM = new eK(), lN = new eK(), lO = new eK(), function(bf, bg, bh) {
      var bi = this['elements'];
      return lO['subVectors'](bf, bg), 0x0 === lO['lengthSq']() && (lO['z'] = 0x1), lO['normalize'](), lM['crossVectors'](bh, lO), 0x0 === lM['lengthSq']() && (0x1 === Math['abs'](bh['z']) ? lO['x'] += 0.0001 : lO['z'] += 0.0001, lO['normalize'](), lM['crossVectors'](bh, lO)), lM['normalize'](), lN['crossVectors'](lO, lM), bi[0x0] = lM['x'], bi[0x4] = lN['x'], bi[0x8] = lO['x'], bi[0x1] = lM['y'], bi[0x5] = lN['y'], bi[0x9] = lO['y'], bi[0x2] = lM['z'], bi[0x6] = lN['z'], bi[0xa] = lO['z'], this;
    }),
    'multiply': function(bf, bg) {
      return void 0x0 !== bg ? (console['warn']('THREE.Matrix4:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyMatrices(\x20a,\x20b\x20)\x20instead.'), this['multiplyMatrices'](bf, bg)) : this['multiplyMatrices'](this, bf);
    },
    'premultiply': function(bf) {
      return this['multiplyMatrices'](bf, this);
    },
    'multiplyMatrices': function(bf, bg) {
      var bh = bf['elements'],
        bi = bg['elements'],
        bF = this['elements'],
        bG = bh[0x0],
        bH = bh[0x4],
        bI = bh[0x8],
        bJ = bh[0xc],
        bK = bh[0x1],
        bL = bh[0x5],
        bM = bh[0x9],
        bN = bh[0xd],
        bO = bh[0x2],
        bP = bh[0x6],
        bQ = bh[0xa],
        bR = bh[0xe],
        bS = bh[0x3],
        bT = bh[0x7],
        bU = bh[0xb],
        bV = bh[0xf],
        bW = bi[0x0],
        bX = bi[0x4],
        bY = bi[0x8],
        bZ = bi[0xc],
        c0 = bi[0x1],
        c1 = bi[0x5],
        c2 = bi[0x9],
        c3 = bi[0xd],
        c4 = bi[0x2],
        c5 = bi[0x6],
        c6 = bi[0xa],
        c7 = bi[0xe],
        c8 = bi[0x3],
        c9 = bi[0x7],
        ca = bi[0xb],
        cb = bi[0xf];
      return bF[0x0] = bG * bW + bH * c0 + bI * c4 + bJ * c8, bF[0x4] = bG * bX + bH * c1 + bI * c5 + bJ * c9, bF[0x8] = bG * bY + bH * c2 + bI * c6 + bJ * ca, bF[0xc] = bG * bZ + bH * c3 + bI * c7 + bJ * cb, bF[0x1] = bK * bW + bL * c0 + bM * c4 + bN * c8, bF[0x5] = bK * bX + bL * c1 + bM * c5 + bN * c9, bF[0x9] = bK * bY + bL * c2 + bM * c6 + bN * ca, bF[0xd] = bK * bZ + bL * c3 + bM * c7 + bN * cb, bF[0x2] = bO * bW + bP * c0 + bQ * c4 + bR * c8, bF[0x6] = bO * bX + bP * c1 + bQ * c5 + bR * c9, bF[0xa] = bO * bY + bP * c2 + bQ * c6 + bR * ca, bF[0xe] = bO * bZ + bP * c3 + bQ * c7 + bR * cb, bF[0x3] = bS * bW + bT * c0 + bU * c4 + bV * c8, bF[0x7] = bS * bX + bT * c1 + bU * c5 + bV * c9, bF[0xb] = bS * bY + bT * c2 + bU * c6 + bV * ca, bF[0xf] = bS * bZ + bT * c3 + bU * c7 + bV * cb, this;
    },
    'multiplyScalar': function(bf) {
      var bg = this['elements'];
      return bg[0x0] *= bf, bg[0x4] *= bf, bg[0x8] *= bf, bg[0xc] *= bf, bg[0x1] *= bf, bg[0x5] *= bf, bg[0x9] *= bf, bg[0xd] *= bf, bg[0x2] *= bf, bg[0x6] *= bf, bg[0xa] *= bf, bg[0xe] *= bf, bg[0x3] *= bf, bg[0x7] *= bf, bg[0xb] *= bf, bg[0xf] *= bf, this;
    },
    'applyToBufferAttribute': function() {
      var bf = new eK();
      return function(bg) {
        for (var bh = 0x0, bi = bg['count']; bh < bi; bh++) bf['x'] = bg['getX'](bh), bf['y'] = bg['getY'](bh), bf['z'] = bg['getZ'](bh), bf['applyMatrix4'](this), bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
        return bg;
      };
    }(),
    'determinant': function() {
      var bf = this['elements'],
        bg = bf[0x0],
        bh = bf[0x4],
        bi = bf[0x8],
        bF = bf[0xc],
        bG = bf[0x1],
        bH = bf[0x5],
        bI = bf[0x9],
        bJ = bf[0xd],
        bK = bf[0x2],
        bL = bf[0x6],
        bM = bf[0xa],
        bN = bf[0xe];
      return bf[0x3] * (+bF * bI * bL - bi * bJ * bL - bF * bH * bM + bh * bJ * bM + bi * bH * bN - bh * bI * bN) + bf[0x7] * (+bg * bI * bN - bg * bJ * bM + bF * bG * bM - bi * bG * bN + bi * bJ * bK - bF * bI * bK) + bf[0xb] * (+bg * bJ * bL - bg * bH * bN - bF * bG * bL + bh * bG * bN + bF * bH * bK - bh * bJ * bK) + bf[0xf] * (-bi * bH * bK - bg * bI * bL + bg * bH * bM + bi * bG * bL - bh * bG * bM + bh * bI * bK);
    },
    'transpose': function() {
      var bf, bg = this['elements'];
      return bf = bg[0x1], bg[0x1] = bg[0x4], bg[0x4] = bf, bf = bg[0x2], bg[0x2] = bg[0x8], bg[0x8] = bf, bf = bg[0x6], bg[0x6] = bg[0x9], bg[0x9] = bf, bf = bg[0x3], bg[0x3] = bg[0xc], bg[0xc] = bf, bf = bg[0x7], bg[0x7] = bg[0xd], bg[0xd] = bf, bf = bg[0xb], bg[0xb] = bg[0xe], bg[0xe] = bf, this;
    },
    'setPosition': function(bf, bg, bh) {
      var bi = this['elements'];
      return bf['isVector3'] ? (bi[0xc] = bf['x'], bi[0xd] = bf['y'], bi[0xe] = bf['z']) : (bi[0xc] = bf, bi[0xd] = bg, bi[0xe] = bh), this;
    },
    'getInverse': function(bf, bg) {
      var bh = this['elements'],
        bi = bf['elements'],
        bF = bi[0x0],
        bG = bi[0x1],
        bH = bi[0x2],
        bI = bi[0x3],
        bJ = bi[0x4],
        bK = bi[0x5],
        bL = bi[0x6],
        bM = bi[0x7],
        bN = bi[0x8],
        bO = bi[0x9],
        bP = bi[0xa],
        bQ = bi[0xb],
        bR = bi[0xc],
        bS = bi[0xd],
        bT = bi[0xe],
        bU = bi[0xf],
        bV = bO * bT * bM - bS * bP * bM + bS * bL * bQ - bK * bT * bQ - bO * bL * bU + bK * bP * bU,
        bW = bR * bP * bM - bN * bT * bM - bR * bL * bQ + bJ * bT * bQ + bN * bL * bU - bJ * bP * bU,
        bX = bN * bS * bM - bR * bO * bM + bR * bK * bQ - bJ * bS * bQ - bN * bK * bU + bJ * bO * bU,
        bY = bR * bO * bL - bN * bS * bL - bR * bK * bP + bJ * bS * bP + bN * bK * bT - bJ * bO * bT,
        bZ = bF * bV + bG * bW + bH * bX + bI * bY;
      if (0x0 === bZ) {
        var c0 = 'THREE.Matrix4:\x20.getInverse()\x20can\x27t\x20invert\x20matrix,\x20determinant\x20is\x200';
        if (!0x0 === bg) throw new Error(c0);
        return console['warn'](c0), this['identity']();
      }
      var c1 = 0x1 / bZ;
      return bh[0x0] = bV * c1, bh[0x1] = (bS * bP * bI - bO * bT * bI - bS * bH * bQ + bG * bT * bQ + bO * bH * bU - bG * bP * bU) * c1, bh[0x2] = (bK * bT * bI - bS * bL * bI + bS * bH * bM - bG * bT * bM - bK * bH * bU + bG * bL * bU) * c1, bh[0x3] = (bO * bL * bI - bK * bP * bI - bO * bH * bM + bG * bP * bM + bK * bH * bQ - bG * bL * bQ) * c1, bh[0x4] = bW * c1, bh[0x5] = (bN * bT * bI - bR * bP * bI + bR * bH * bQ - bF * bT * bQ - bN * bH * bU + bF * bP * bU) * c1, bh[0x6] = (bR * bL * bI - bJ * bT * bI - bR * bH * bM + bF * bT * bM + bJ * bH * bU - bF * bL * bU) * c1, bh[0x7] = (bJ * bP * bI - bN * bL * bI + bN * bH * bM - bF * bP * bM - bJ * bH * bQ + bF * bL * bQ) * c1, bh[0x8] = bX * c1, bh[0x9] = (bR * bO * bI - bN * bS * bI - bR * bG * bQ + bF * bS * bQ + bN * bG * bU - bF * bO * bU) * c1, bh[0xa] = (bJ * bS * bI - bR * bK * bI + bR * bG * bM - bF * bS * bM - bJ * bG * bU + bF * bK * bU) * c1, bh[0xb] = (bN * bK * bI - bJ * bO * bI - bN * bG * bM + bF * bO * bM + bJ * bG * bQ - bF * bK * bQ) * c1, bh[0xc] = bY * c1, bh[0xd] = (bN * bS * bH - bR * bO * bH + bR * bG * bP - bF * bS * bP - bN * bG * bT + bF * bO * bT) * c1, bh[0xe] = (bR * bK * bH - bJ * bS * bH - bR * bG * bL + bF * bS * bL + bJ * bG * bT - bF * bK * bT) * c1, bh[0xf] = (bJ * bO * bH - bN * bK * bH + bN * bG * bL - bF * bO * bL - bJ * bG * bP + bF * bK * bP) * c1, this;
    },
    'scale': function(bf) {
      var bg = this['elements'],
        bh = bf['x'],
        bi = bf['y'],
        bF = bf['z'];
      return bg[0x0] *= bh, bg[0x4] *= bi, bg[0x8] *= bF, bg[0x1] *= bh, bg[0x5] *= bi, bg[0x9] *= bF, bg[0x2] *= bh, bg[0x6] *= bi, bg[0xa] *= bF, bg[0x3] *= bh, bg[0x7] *= bi, bg[0xb] *= bF, this;
    },
    'getMaxScaleOnAxis': function() {
      var bf = this['elements'],
        bg = bf[0x0] * bf[0x0] + bf[0x1] * bf[0x1] + bf[0x2] * bf[0x2],
        bh = bf[0x4] * bf[0x4] + bf[0x5] * bf[0x5] + bf[0x6] * bf[0x6],
        bi = bf[0x8] * bf[0x8] + bf[0x9] * bf[0x9] + bf[0xa] * bf[0xa];
      return Math['sqrt'](Math['max'](bg, bh, bi));
    },
    'makeTranslation': function(bf, bg, bh) {
      return this['set'](0x1, 0x0, 0x0, bf, 0x0, 0x1, 0x0, bg, 0x0, 0x0, 0x1, bh, 0x0, 0x0, 0x0, 0x1), this;
    },
    'makeRotationX': function(bf) {
      var bg = Math['cos'](bf),
        bh = Math['sin'](bf);
      return this['set'](0x1, 0x0, 0x0, 0x0, 0x0, bg, -bh, 0x0, 0x0, bh, bg, 0x0, 0x0, 0x0, 0x0, 0x1), this;
    },
    'makeRotationY': function(bf) {
      var bg = Math['cos'](bf),
        bh = Math['sin'](bf);
      return this['set'](bg, 0x0, bh, 0x0, 0x0, 0x1, 0x0, 0x0, -bh, 0x0, bg, 0x0, 0x0, 0x0, 0x0, 0x1), this;
    },
    'makeRotationZ': function(bf) {
      var bg = Math['cos'](bf),
        bh = Math['sin'](bf);
      return this['set'](bg, -bh, 0x0, 0x0, bh, bg, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), this;
    },
    'makeRotationAxis': function(bf, bg) {
      var bh = Math['cos'](bg),
        bi = Math['sin'](bg),
        bF = 0x1 - bh,
        bG = bf['x'],
        bH = bf['y'],
        bI = bf['z'],
        bJ = bF * bG,
        bK = bF * bH;
      return this['set'](bJ * bG + bh, bJ * bH - bi * bI, bJ * bI + bi * bH, 0x0, bJ * bH + bi * bI, bK * bH + bh, bK * bI - bi * bG, 0x0, bJ * bI - bi * bH, bK * bI + bi * bG, bF * bI * bI + bh, 0x0, 0x0, 0x0, 0x0, 0x1), this;
    },
    'makeScale': function(bf, bg, bh) {
      return this['set'](bf, 0x0, 0x0, 0x0, 0x0, bg, 0x0, 0x0, 0x0, 0x0, bh, 0x0, 0x0, 0x0, 0x0, 0x1), this;
    },
    'makeShear': function(bf, bg, bh) {
      return this['set'](0x1, bg, bh, 0x0, bf, 0x1, bh, 0x0, bf, bg, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1), this;
    },
    'compose': function(bf, bg, bh) {
      var bi = this['elements'],
        bF = bg['_x'],
        bG = bg['_y'],
        bH = bg['_z'],
        bI = bg['_w'],
        bJ = bF + bF,
        bK = bG + bG,
        bL = bH + bH,
        bM = bF * bJ,
        bN = bF * bK,
        bO = bF * bL,
        bP = bG * bK,
        bQ = bG * bL,
        bR = bH * bL,
        bS = bI * bJ,
        bT = bI * bK,
        bU = bI * bL,
        bV = bh['x'],
        bW = bh['y'],
        bX = bh['z'];
      return bi[0x0] = (0x1 - (bP + bR)) * bV, bi[0x1] = (bN + bU) * bV, bi[0x2] = (bO - bT) * bV, bi[0x3] = 0x0, bi[0x4] = (bN - bU) * bW, bi[0x5] = (0x1 - (bM + bR)) * bW, bi[0x6] = (bQ + bS) * bW, bi[0x7] = 0x0, bi[0x8] = (bO + bT) * bX, bi[0x9] = (bQ - bS) * bX, bi[0xa] = (0x1 - (bM + bP)) * bX, bi[0xb] = 0x0, bi[0xc] = bf['x'], bi[0xd] = bf['y'], bi[0xe] = bf['z'], bi[0xf] = 0x1, this;
    },
    'decompose': (lK = new eK(), lL = new mR(), function(bf, bg, bh) {
      var bi = this['elements'],
        bF = lK['set'](bi[0x0], bi[0x1], bi[0x2])['length'](),
        bG = lK['set'](bi[0x4], bi[0x5], bi[0x6])['length'](),
        bH = lK['set'](bi[0x8], bi[0x9], bi[0xa])['length']();
      this['determinant']() < 0x0 && (bF = -bF), bf['x'] = bi[0xc], bf['y'] = bi[0xd], bf['z'] = bi[0xe], lL['copy'](this);
      var bI = 0x1 / bF,
        bJ = 0x1 / bG,
        bK = 0x1 / bH;
      return lL['elements'][0x0] *= bI, lL['elements'][0x1] *= bI, lL['elements'][0x2] *= bI, lL['elements'][0x4] *= bJ, lL['elements'][0x5] *= bJ, lL['elements'][0x6] *= bJ, lL['elements'][0x8] *= bK, lL['elements'][0x9] *= bK, lL['elements'][0xa] *= bK, bg['setFromRotationMatrix'](lL), bh['x'] = bF, bh['y'] = bG, bh['z'] = bH, this;
    }),
    'makePerspective': function(bf, bg, bh, bi, bF, bG) {
      void 0x0 === bG && console['warn']('THREE.Matrix4:\x20.makePerspective()\x20has\x20been\x20redefined\x20and\x20has\x20a\x20new\x20signature.\x20Please\x20check\x20the\x20docs.');
      var bH = this['elements'],
        bI = 0x2 * bF / (bg - bf),
        bJ = 0x2 * bF / (bh - bi),
        bK = (bg + bf) / (bg - bf),
        bL = (bh + bi) / (bh - bi),
        bM = -(bG + bF) / (bG - bF),
        bN = -0x2 * bG * bF / (bG - bF);
      return bH[0x0] = bI, bH[0x4] = 0x0, bH[0x8] = bK, bH[0xc] = 0x0, bH[0x1] = 0x0, bH[0x5] = bJ, bH[0x9] = bL, bH[0xd] = 0x0, bH[0x2] = 0x0, bH[0x6] = 0x0, bH[0xa] = bM, bH[0xe] = bN, bH[0x3] = 0x0, bH[0x7] = 0x0, bH[0xb] = -0x1, bH[0xf] = 0x0, this;
    },
    'makeOrthographic': function(bf, bg, bh, bi, bF, bG) {
      var bH = this['elements'],
        bI = 0x1 / (bg - bf),
        bJ = 0x1 / (bh - bi),
        bK = 0x1 / (bG - bF),
        bL = (bg + bf) * bI,
        bM = (bh + bi) * bJ,
        bN = (bG + bF) * bK;
      return bH[0x0] = 0x2 * bI, bH[0x4] = 0x0, bH[0x8] = 0x0, bH[0xc] = -bL, bH[0x1] = 0x0, bH[0x5] = 0x2 * bJ, bH[0x9] = 0x0, bH[0xd] = -bM, bH[0x2] = 0x0, bH[0x6] = 0x0, bH[0xa] = -0x2 * bK, bH[0xe] = -bN, bH[0x3] = 0x0, bH[0x7] = 0x0, bH[0xb] = 0x0, bH[0xf] = 0x1, this;
    },
    'equals': function(bf) {
      for (var bg = this['elements'], bh = bf['elements'], bi = 0x0; bi < 0x10; bi++)
        if (bg[bi] !== bh[bi]) return !0x1;
      return !0x0;
    },
    'fromArray': function(bf, bg) {
      void 0x0 === bg && (bg = 0x0);
      for (var bh = 0x0; bh < 0x10; bh++) this['elements'][bh] = bf[bh + bg];
      return this;
    },
    'toArray': function(bf, bg) {
      void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0);
      var bh = this['elements'];
      return bf[bg] = bh[0x0], bf[bg + 0x1] = bh[0x1], bf[bg + 0x2] = bh[0x2], bf[bg + 0x3] = bh[0x3], bf[bg + 0x4] = bh[0x4], bf[bg + 0x5] = bh[0x5], bf[bg + 0x6] = bh[0x6], bf[bg + 0x7] = bh[0x7], bf[bg + 0x8] = bh[0x8], bf[bg + 0x9] = bh[0x9], bf[bg + 0xa] = bh[0xa], bf[bg + 0xb] = bh[0xb], bf[bg + 0xc] = bh[0xc], bf[bg + 0xd] = bh[0xd], bf[bg + 0xe] = bh[0xe], bf[bg + 0xf] = bh[0xf], bf;
    }
  });
  var vP = {
    'alphamap_fragment': '#ifdef\x20USE_ALPHAMAP\x0a\x09diffuseColor.a\x20*=\x20texture2D(\x20alphaMap,\x20vUv\x20).g;\x0a#endif',
    'alphamap_pars_fragment': '#ifdef\x20USE_ALPHAMAP\x0a\x09uniform\x20sampler2D\x20alphaMap;\x0a#endif',
    'alphatest_fragment': '#ifdef\x20ALPHATEST\x0a\x09if\x20(\x20diffuseColor.a\x20<\x20ALPHATEST\x20)\x20discard;\x0a#endif',
    'aomap_fragment': '#ifdef\x20USE_AOMAP\x0a\x09float\x20ambientOcclusion\x20=\x20(\x20texture2D(\x20aoMap,\x20vUv2\x20).r\x20-\x201.0\x20)\x20*\x20aoMapIntensity\x20+\x201.0;\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20ambientOcclusion;\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09\x09reflectedLight.indirectSpecular\x20*=\x20computeSpecularOcclusion(\x20dotNV,\x20ambientOcclusion,\x20material.specularRoughness\x20);\x0a\x09#endif\x0a#endif',
    'aomap_pars_fragment': '#ifdef\x20USE_AOMAP\x0a\x09uniform\x20sampler2D\x20aoMap;\x0a\x09uniform\x20float\x20aoMapIntensity;\x0a#endif',
    'begin_vertex': 'vec3\x20transformed\x20=\x20vec3(\x20position\x20);',
    'beginnormal_vertex': 'vec3\x20objectNormal\x20=\x20vec3(\x20normal\x20);\x0a#ifdef\x20USE_TANGENT\x0a\x09vec3\x20objectTangent\x20=\x20vec3(\x20tangent.xyz\x20);\x0a#endif',
    'bsdfs': 'vec2\x20integrateSpecularBRDF(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09const\x20vec4\x20c0\x20=\x20vec4(\x20-\x201,\x20-\x200.0275,\x20-\x200.572,\x200.022\x20);\x0a\x09const\x20vec4\x20c1\x20=\x20vec4(\x201,\x200.0425,\x201.04,\x20-\x200.04\x20);\x0a\x09vec4\x20r\x20=\x20roughness\x20*\x20c0\x20+\x20c1;\x0a\x09float\x20a004\x20=\x20min(\x20r.x\x20*\x20r.x,\x20exp2(\x20-\x209.28\x20*\x20dotNV\x20)\x20)\x20*\x20r.x\x20+\x20r.y;\x0a\x09return\x20vec2(\x20-1.04,\x201.04\x20)\x20*\x20a004\x20+\x20r.zw;\x0a}\x0afloat\x20punctualLightIntensityToIrradianceFactor(\x20const\x20in\x20float\x20lightDistance,\x20const\x20in\x20float\x20cutoffDistance,\x20const\x20in\x20float\x20decayExponent\x20)\x20{\x0a#if\x20defined\x20(\x20PHYSICALLY_CORRECT_LIGHTS\x20)\x0a\x09float\x20distanceFalloff\x20=\x201.0\x20/\x20max(\x20pow(\x20lightDistance,\x20decayExponent\x20),\x200.01\x20);\x0a\x09if(\x20cutoffDistance\x20>\x200.0\x20)\x20{\x0a\x09\x09distanceFalloff\x20*=\x20pow2(\x20saturate(\x201.0\x20-\x20pow4(\x20lightDistance\x20/\x20cutoffDistance\x20)\x20)\x20);\x0a\x09}\x0a\x09return\x20distanceFalloff;\x0a#else\x0a\x09if(\x20cutoffDistance\x20>\x200.0\x20&&\x20decayExponent\x20>\x200.0\x20)\x20{\x0a\x09\x09return\x20pow(\x20saturate(\x20-lightDistance\x20/\x20cutoffDistance\x20+\x201.0\x20),\x20decayExponent\x20);\x0a\x09}\x0a\x09return\x201.0;\x0a#endif\x0a}\x0avec3\x20BRDF_Diffuse_Lambert(\x20const\x20in\x20vec3\x20diffuseColor\x20)\x20{\x0a\x09return\x20RECIPROCAL_PI\x20*\x20diffuseColor;\x0a}\x0avec3\x20F_Schlick(\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20dotLH\x20)\x20{\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-5.55473\x20*\x20dotLH\x20-\x206.98316\x20)\x20*\x20dotLH\x20);\x0a\x09return\x20(\x201.0\x20-\x20specularColor\x20)\x20*\x20fresnel\x20+\x20specularColor;\x0a}\x0avec3\x20F_Schlick_RoughnessDependent(\x20const\x20in\x20vec3\x20F0,\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-5.55473\x20*\x20dotNV\x20-\x206.98316\x20)\x20*\x20dotNV\x20);\x0a\x09vec3\x20Fr\x20=\x20max(\x20vec3(\x201.0\x20-\x20roughness\x20),\x20F0\x20)\x20-\x20F0;\x0a\x09return\x20Fr\x20*\x20fresnel\x20+\x20F0;\x0a}\x0afloat\x20G_GGX_Smith(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20gl\x20=\x20dotNL\x20+\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNL\x20)\x20);\x0a\x09float\x20gv\x20=\x20dotNV\x20+\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNV\x20)\x20);\x0a\x09return\x201.0\x20/\x20(\x20gl\x20*\x20gv\x20);\x0a}\x0afloat\x20G_GGX_SmithCorrelated(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20gv\x20=\x20dotNL\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNV\x20)\x20);\x0a\x09float\x20gl\x20=\x20dotNV\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNL\x20)\x20);\x0a\x09return\x200.5\x20/\x20max(\x20gv\x20+\x20gl,\x20EPSILON\x20);\x0a}\x0afloat\x20D_GGX(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20denom\x20=\x20pow2(\x20dotNH\x20)\x20*\x20(\x20a2\x20-\x201.0\x20)\x20+\x201.0;\x0a\x09return\x20RECIPROCAL_PI\x20*\x20a2\x20/\x20pow2(\x20denom\x20);\x0a}\x0avec3\x20BRDF_Specular_GGX(\x20const\x20in\x20IncidentLight\x20incidentLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20alpha\x20=\x20pow2(\x20roughness\x20);\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20incidentLight.direction\x20+\x20geometry.viewDir\x20);\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20incidentLight.direction\x20)\x20);\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotLH\x20=\x20saturate(\x20dot(\x20incidentLight.direction,\x20halfDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20dotLH\x20);\x0a\x09float\x20G\x20=\x20G_GGX_SmithCorrelated(\x20alpha,\x20dotNL,\x20dotNV\x20);\x0a\x09float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x09return\x20F\x20*\x20(\x20G\x20*\x20D\x20);\x0a}\x0avec2\x20LTC_Uv(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09const\x20float\x20LUT_SIZE\x20\x20=\x2064.0;\x0a\x09const\x20float\x20LUT_SCALE\x20=\x20(\x20LUT_SIZE\x20-\x201.0\x20)\x20/\x20LUT_SIZE;\x0a\x09const\x20float\x20LUT_BIAS\x20\x20=\x200.5\x20/\x20LUT_SIZE;\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20N,\x20V\x20)\x20);\x0a\x09vec2\x20uv\x20=\x20vec2(\x20roughness,\x20sqrt(\x201.0\x20-\x20dotNV\x20)\x20);\x0a\x09uv\x20=\x20uv\x20*\x20LUT_SCALE\x20+\x20LUT_BIAS;\x0a\x09return\x20uv;\x0a}\x0afloat\x20LTC_ClippedSphereFormFactor(\x20const\x20in\x20vec3\x20f\x20)\x20{\x0a\x09float\x20l\x20=\x20length(\x20f\x20);\x0a\x09return\x20max(\x20(\x20l\x20*\x20l\x20+\x20f.z\x20)\x20/\x20(\x20l\x20+\x201.0\x20),\x200.0\x20);\x0a}\x0avec3\x20LTC_EdgeVectorFormFactor(\x20const\x20in\x20vec3\x20v1,\x20const\x20in\x20vec3\x20v2\x20)\x20{\x0a\x09float\x20x\x20=\x20dot(\x20v1,\x20v2\x20);\x0a\x09float\x20y\x20=\x20abs(\x20x\x20);\x0a\x09float\x20a\x20=\x200.8543985\x20+\x20(\x200.4965155\x20+\x200.0145206\x20*\x20y\x20)\x20*\x20y;\x0a\x09float\x20b\x20=\x203.4175940\x20+\x20(\x204.1616724\x20+\x20y\x20)\x20*\x20y;\x0a\x09float\x20v\x20=\x20a\x20/\x20b;\x0a\x09float\x20theta_sintheta\x20=\x20(\x20x\x20>\x200.0\x20)\x20?\x20v\x20:\x200.5\x20*\x20inversesqrt(\x20max(\x201.0\x20-\x20x\x20*\x20x,\x201e-7\x20)\x20)\x20-\x20v;\x0a\x09return\x20cross(\x20v1,\x20v2\x20)\x20*\x20theta_sintheta;\x0a}\x0avec3\x20LTC_Evaluate(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20vec3\x20P,\x20const\x20in\x20mat3\x20mInv,\x20const\x20in\x20vec3\x20rectCoords[\x204\x20]\x20)\x20{\x0a\x09vec3\x20v1\x20=\x20rectCoords[\x201\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20v2\x20=\x20rectCoords[\x203\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20lightNormal\x20=\x20cross(\x20v1,\x20v2\x20);\x0a\x09if(\x20dot(\x20lightNormal,\x20P\x20-\x20rectCoords[\x200\x20]\x20)\x20<\x200.0\x20)\x20return\x20vec3(\x200.0\x20);\x0a\x09vec3\x20T1,\x20T2;\x0a\x09T1\x20=\x20normalize(\x20V\x20-\x20N\x20*\x20dot(\x20V,\x20N\x20)\x20);\x0a\x09T2\x20=\x20-\x20cross(\x20N,\x20T1\x20);\x0a\x09mat3\x20mat\x20=\x20mInv\x20*\x20transposeMat3(\x20mat3(\x20T1,\x20T2,\x20N\x20)\x20);\x0a\x09vec3\x20coords[\x204\x20];\x0a\x09coords[\x200\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x200\x20]\x20-\x20P\x20);\x0a\x09coords[\x201\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x201\x20]\x20-\x20P\x20);\x0a\x09coords[\x202\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x202\x20]\x20-\x20P\x20);\x0a\x09coords[\x203\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x203\x20]\x20-\x20P\x20);\x0a\x09coords[\x200\x20]\x20=\x20normalize(\x20coords[\x200\x20]\x20);\x0a\x09coords[\x201\x20]\x20=\x20normalize(\x20coords[\x201\x20]\x20);\x0a\x09coords[\x202\x20]\x20=\x20normalize(\x20coords[\x202\x20]\x20);\x0a\x09coords[\x203\x20]\x20=\x20normalize(\x20coords[\x203\x20]\x20);\x0a\x09vec3\x20vectorFormFactor\x20=\x20vec3(\x200.0\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x200\x20],\x20coords[\x201\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x201\x20],\x20coords[\x202\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x202\x20],\x20coords[\x203\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x203\x20],\x20coords[\x200\x20]\x20);\x0a\x09float\x20result\x20=\x20LTC_ClippedSphereFormFactor(\x20vectorFormFactor\x20);\x0a\x09return\x20vec3(\x20result\x20);\x0a}\x0avec3\x20BRDF_Specular_GGX_Environment(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09vec2\x20brdf\x20=\x20integrateSpecularBRDF(\x20dotNV,\x20roughness\x20);\x0a\x09return\x20specularColor\x20*\x20brdf.x\x20+\x20brdf.y;\x0a}\x0avoid\x20BRDF_Specular_Multiscattering_Environment(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness,\x20inout\x20vec3\x20singleScatter,\x20inout\x20vec3\x20multiScatter\x20)\x20{\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick_RoughnessDependent(\x20specularColor,\x20dotNV,\x20roughness\x20);\x0a\x09vec2\x20brdf\x20=\x20integrateSpecularBRDF(\x20dotNV,\x20roughness\x20);\x0a\x09vec3\x20FssEss\x20=\x20F\x20*\x20brdf.x\x20+\x20brdf.y;\x0a\x09float\x20Ess\x20=\x20brdf.x\x20+\x20brdf.y;\x0a\x09float\x20Ems\x20=\x201.0\x20-\x20Ess;\x0a\x09vec3\x20Favg\x20=\x20specularColor\x20+\x20(\x201.0\x20-\x20specularColor\x20)\x20*\x200.047619;\x09vec3\x20Fms\x20=\x20FssEss\x20*\x20Favg\x20/\x20(\x201.0\x20-\x20Ems\x20*\x20Favg\x20);\x0a\x09singleScatter\x20+=\x20FssEss;\x0a\x09multiScatter\x20+=\x20Fms\x20*\x20Ems;\x0a}\x0afloat\x20G_BlinnPhong_Implicit(\x20)\x20{\x0a\x09return\x200.25;\x0a}\x0afloat\x20D_BlinnPhong(\x20const\x20in\x20float\x20shininess,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x09return\x20RECIPROCAL_PI\x20*\x20(\x20shininess\x20*\x200.5\x20+\x201.0\x20)\x20*\x20pow(\x20dotNH,\x20shininess\x20);\x0a}\x0avec3\x20BRDF_Specular_BlinnPhong(\x20const\x20in\x20IncidentLight\x20incidentLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20shininess\x20)\x20{\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20incidentLight.direction\x20+\x20geometry.viewDir\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotLH\x20=\x20saturate(\x20dot(\x20incidentLight.direction,\x20halfDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20dotLH\x20);\x0a\x09float\x20G\x20=\x20G_BlinnPhong_Implicit(\x20);\x0a\x09float\x20D\x20=\x20D_BlinnPhong(\x20shininess,\x20dotNH\x20);\x0a\x09return\x20F\x20*\x20(\x20G\x20*\x20D\x20);\x0a}\x0afloat\x20GGXRoughnessToBlinnExponent(\x20const\x20in\x20float\x20ggxRoughness\x20)\x20{\x0a\x09return\x20(\x202.0\x20/\x20pow2(\x20ggxRoughness\x20+\x200.0001\x20)\x20-\x202.0\x20);\x0a}\x0afloat\x20BlinnExponentToGGXRoughness(\x20const\x20in\x20float\x20blinnExponent\x20)\x20{\x0a\x09return\x20sqrt(\x202.0\x20/\x20(\x20blinnExponent\x20+\x202.0\x20)\x20);\x0a}',
    'bumpmap_pars_fragment': '#ifdef\x20USE_BUMPMAP\x0a\x09uniform\x20sampler2D\x20bumpMap;\x0a\x09uniform\x20float\x20bumpScale;\x0a\x09vec2\x20dHdxy_fwd()\x20{\x0a\x09\x09vec2\x20dSTdx\x20=\x20dFdx(\x20vUv\x20);\x0a\x09\x09vec2\x20dSTdy\x20=\x20dFdy(\x20vUv\x20);\x0a\x09\x09float\x20Hll\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20).x;\x0a\x09\x09float\x20dBx\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20+\x20dSTdx\x20).x\x20-\x20Hll;\x0a\x09\x09float\x20dBy\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20+\x20dSTdy\x20).x\x20-\x20Hll;\x0a\x09\x09return\x20vec2(\x20dBx,\x20dBy\x20);\x0a\x09}\x0a\x09vec3\x20perturbNormalArb(\x20vec3\x20surf_pos,\x20vec3\x20surf_norm,\x20vec2\x20dHdxy\x20)\x20{\x0a\x09\x09vec3\x20vSigmaX\x20=\x20vec3(\x20dFdx(\x20surf_pos.x\x20),\x20dFdx(\x20surf_pos.y\x20),\x20dFdx(\x20surf_pos.z\x20)\x20);\x0a\x09\x09vec3\x20vSigmaY\x20=\x20vec3(\x20dFdy(\x20surf_pos.x\x20),\x20dFdy(\x20surf_pos.y\x20),\x20dFdy(\x20surf_pos.z\x20)\x20);\x0a\x09\x09vec3\x20vN\x20=\x20surf_norm;\x0a\x09\x09vec3\x20R1\x20=\x20cross(\x20vSigmaY,\x20vN\x20);\x0a\x09\x09vec3\x20R2\x20=\x20cross(\x20vN,\x20vSigmaX\x20);\x0a\x09\x09float\x20fDet\x20=\x20dot(\x20vSigmaX,\x20R1\x20);\x0a\x09\x09fDet\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09vec3\x20vGrad\x20=\x20sign(\x20fDet\x20)\x20*\x20(\x20dHdxy.x\x20*\x20R1\x20+\x20dHdxy.y\x20*\x20R2\x20);\x0a\x09\x09return\x20normalize(\x20abs(\x20fDet\x20)\x20*\x20surf_norm\x20-\x20vGrad\x20);\x0a\x09}\x0a#endif',
    'clipping_planes_fragment': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x09vec4\x20plane;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20UNION_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09if\x20(\x20dot(\x20vViewPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20discard;\x0a\x09}\x0a\x09#if\x20UNION_CLIPPING_PLANES\x20<\x20NUM_CLIPPING_PLANES\x0a\x09\x09bool\x20clipped\x20=\x20true;\x0a\x09\x09#pragma\x20unroll_loop\x0a\x09\x09for\x20(\x20int\x20i\x20=\x20UNION_CLIPPING_PLANES;\x20i\x20<\x20NUM_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x09\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09\x09clipped\x20=\x20(\x20dot(\x20vViewPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20&&\x20clipped;\x0a\x09\x09}\x0a\x09\x09if\x20(\x20clipped\x20)\x20discard;\x0a\x09#endif\x0a#endif',
    'clipping_planes_pars_fragment': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x09#if\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09\x09varying\x20vec3\x20vViewPosition;\x0a\x09#endif\x0a\x09uniform\x20vec4\x20clippingPlanes[\x20NUM_CLIPPING_PLANES\x20];\x0a#endif',
    'clipping_planes_pars_vertex': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x20&&\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif',
    'clipping_planes_vertex': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x20&&\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a#endif',
    'color_fragment': '#ifdef\x20USE_COLOR\x0a\x09diffuseColor.rgb\x20*=\x20vColor;\x0a#endif',
    'color_pars_fragment': '#ifdef\x20USE_COLOR\x0a\x09varying\x20vec3\x20vColor;\x0a#endif',
    'color_pars_vertex': '#ifdef\x20USE_COLOR\x0a\x09varying\x20vec3\x20vColor;\x0a#endif',
    'color_vertex': '#ifdef\x20USE_COLOR\x0a\x09vColor.xyz\x20=\x20color.xyz;\x0a#endif',
    'common': '#define\x20PI\x203.14159265359\x0a#define\x20PI2\x206.28318530718\x0a#define\x20PI_HALF\x201.5707963267949\x0a#define\x20RECIPROCAL_PI\x200.31830988618\x0a#define\x20RECIPROCAL_PI2\x200.15915494\x0a#define\x20LOG2\x201.442695\x0a#define\x20EPSILON\x201e-6\x0a#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#define\x20whiteCompliment(a)\x20(\x201.0\x20-\x20saturate(\x20a\x20)\x20)\x0afloat\x20pow2(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x;\x20}\x0afloat\x20pow3(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x*x;\x20}\x0afloat\x20pow4(\x20const\x20in\x20float\x20x\x20)\x20{\x20float\x20x2\x20=\x20x*x;\x20return\x20x2*x2;\x20}\x0afloat\x20average(\x20const\x20in\x20vec3\x20color\x20)\x20{\x20return\x20dot(\x20color,\x20vec3(\x200.3333\x20)\x20);\x20}\x0ahighp\x20float\x20rand(\x20const\x20in\x20vec2\x20uv\x20)\x20{\x0a\x09const\x20highp\x20float\x20a\x20=\x2012.9898,\x20b\x20=\x2078.233,\x20c\x20=\x2043758.5453;\x0a\x09highp\x20float\x20dt\x20=\x20dot(\x20uv.xy,\x20vec2(\x20a,b\x20)\x20),\x20sn\x20=\x20mod(\x20dt,\x20PI\x20);\x0a\x09return\x20fract(sin(sn)\x20*\x20c);\x0a}\x0astruct\x20IncidentLight\x20{\x0a\x09vec3\x20color;\x0a\x09vec3\x20direction;\x0a\x09bool\x20visible;\x0a};\x0astruct\x20ReflectedLight\x20{\x0a\x09vec3\x20directDiffuse;\x0a\x09vec3\x20directSpecular;\x0a\x09vec3\x20indirectDiffuse;\x0a\x09vec3\x20indirectSpecular;\x0a};\x0astruct\x20GeometricContext\x20{\x0a\x09vec3\x20position;\x0a\x09vec3\x20normal;\x0a\x09vec3\x20viewDir;\x0a};\x0avec3\x20transformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x09return\x20normalize(\x20(\x20matrix\x20*\x20vec4(\x20dir,\x200.0\x20)\x20).xyz\x20);\x0a}\x0avec3\x20inverseTransformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x09return\x20normalize(\x20(\x20vec4(\x20dir,\x200.0\x20)\x20*\x20matrix\x20).xyz\x20);\x0a}\x0avec3\x20projectOnPlane(in\x20vec3\x20point,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09float\x20distance\x20=\x20dot(\x20planeNormal,\x20point\x20-\x20pointOnPlane\x20);\x0a\x09return\x20-\x20distance\x20*\x20planeNormal\x20+\x20point;\x0a}\x0afloat\x20sideOfPlane(\x20in\x20vec3\x20point,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09return\x20sign(\x20dot(\x20point\x20-\x20pointOnPlane,\x20planeNormal\x20)\x20);\x0a}\x0avec3\x20linePlaneIntersect(\x20in\x20vec3\x20pointOnLine,\x20in\x20vec3\x20lineDirection,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09return\x20lineDirection\x20*\x20(\x20dot(\x20planeNormal,\x20pointOnPlane\x20-\x20pointOnLine\x20)\x20/\x20dot(\x20planeNormal,\x20lineDirection\x20)\x20)\x20+\x20pointOnLine;\x0a}\x0amat3\x20transposeMat3(\x20const\x20in\x20mat3\x20m\x20)\x20{\x0a\x09mat3\x20tmp;\x0a\x09tmp[\x200\x20]\x20=\x20vec3(\x20m[\x200\x20].x,\x20m[\x201\x20].x,\x20m[\x202\x20].x\x20);\x0a\x09tmp[\x201\x20]\x20=\x20vec3(\x20m[\x200\x20].y,\x20m[\x201\x20].y,\x20m[\x202\x20].y\x20);\x0a\x09tmp[\x202\x20]\x20=\x20vec3(\x20m[\x200\x20].z,\x20m[\x201\x20].z,\x20m[\x202\x20].z\x20);\x0a\x09return\x20tmp;\x0a}\x0afloat\x20linearToRelativeLuminance(\x20const\x20in\x20vec3\x20color\x20)\x20{\x0a\x09vec3\x20weights\x20=\x20vec3(\x200.2126,\x200.7152,\x200.0722\x20);\x0a\x09return\x20dot(\x20weights,\x20color.rgb\x20);\x0a}',
    'cube_uv_reflection_fragment': '#ifdef\x20ENVMAP_TYPE_CUBE_UV\x0a#define\x20cubeUV_textureSize\x20(1024.0)\x0aint\x20getFaceFromDirection(vec3\x20direction)\x20{\x0a\x09vec3\x20absDirection\x20=\x20abs(direction);\x0a\x09int\x20face\x20=\x20-1;\x0a\x09if(\x20absDirection.x\x20>\x20absDirection.z\x20)\x20{\x0a\x09\x09if(absDirection.x\x20>\x20absDirection.y\x20)\x0a\x09\x09\x09face\x20=\x20direction.x\x20>\x200.0\x20?\x200\x20:\x203;\x0a\x09\x09else\x0a\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201\x20:\x204;\x0a\x09}\x0a\x09else\x20{\x0a\x09\x09if(absDirection.z\x20>\x20absDirection.y\x20)\x0a\x09\x09\x09face\x20=\x20direction.z\x20>\x200.0\x20?\x202\x20:\x205;\x0a\x09\x09else\x0a\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201\x20:\x204;\x0a\x09}\x0a\x09return\x20face;\x0a}\x0a#define\x20cubeUV_maxLods1\x20\x20(log2(cubeUV_textureSize*0.25)\x20-\x201.0)\x0a#define\x20cubeUV_rangeClamp\x20(exp2((6.0\x20-\x201.0)\x20*\x202.0))\x0avec2\x20MipLevelInfo(\x20vec3\x20vec,\x20float\x20roughnessLevel,\x20float\x20roughness\x20)\x20{\x0a\x09float\x20scale\x20=\x20exp2(cubeUV_maxLods1\x20-\x20roughnessLevel);\x0a\x09float\x20dxRoughness\x20=\x20dFdx(roughness);\x0a\x09float\x20dyRoughness\x20=\x20dFdy(roughness);\x0a\x09vec3\x20dx\x20=\x20dFdx(\x20vec\x20*\x20scale\x20*\x20dxRoughness\x20);\x0a\x09vec3\x20dy\x20=\x20dFdy(\x20vec\x20*\x20scale\x20*\x20dyRoughness\x20);\x0a\x09float\x20d\x20=\x20max(\x20dot(\x20dx,\x20dx\x20),\x20dot(\x20dy,\x20dy\x20)\x20);\x0a\x09d\x20=\x20clamp(d,\x201.0,\x20cubeUV_rangeClamp);\x0a\x09float\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x09return\x20vec2(floor(mipLevel),\x20fract(mipLevel));\x0a}\x0a#define\x20cubeUV_maxLods2\x20(log2(cubeUV_textureSize*0.25)\x20-\x202.0)\x0a#define\x20cubeUV_rcpTextureSize\x20(1.0\x20/\x20cubeUV_textureSize)\x0avec2\x20getCubeUV(vec3\x20direction,\x20float\x20roughnessLevel,\x20float\x20mipLevel)\x20{\x0a\x09mipLevel\x20=\x20roughnessLevel\x20>\x20cubeUV_maxLods2\x20-\x203.0\x20?\x200.0\x20:\x20mipLevel;\x0a\x09float\x20a\x20=\x2016.0\x20*\x20cubeUV_rcpTextureSize;\x0a\x09vec2\x20exp2_packed\x20=\x20exp2(\x20vec2(\x20roughnessLevel,\x20mipLevel\x20)\x20);\x0a\x09vec2\x20rcp_exp2_packed\x20=\x20vec2(\x201.0\x20)\x20/\x20exp2_packed;\x0a\x09float\x20powScale\x20=\x20exp2_packed.x\x20*\x20exp2_packed.y;\x0a\x09float\x20scale\x20=\x20rcp_exp2_packed.x\x20*\x20rcp_exp2_packed.y\x20*\x200.25;\x0a\x09float\x20mipOffset\x20=\x200.75*(1.0\x20-\x20rcp_exp2_packed.y)\x20*\x20rcp_exp2_packed.x;\x0a\x09bool\x20bRes\x20=\x20mipLevel\x20==\x200.0;\x0a\x09scale\x20=\x20\x20bRes\x20&&\x20(scale\x20<\x20a)\x20?\x20a\x20:\x20scale;\x0a\x09vec3\x20r;\x0a\x09vec2\x20offset;\x0a\x09int\x20face\x20=\x20getFaceFromDirection(direction);\x0a\x09float\x20rcpPowScale\x20=\x201.0\x20/\x20powScale;\x0a\x09if(\x20face\x20==\x200)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.x,\x20-direction.z,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(0.0+mipOffset,0.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x201)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.y,\x20direction.x,\x20direction.z);\x0a\x09\x09offset\x20=\x20vec2(scale+mipOffset,\x200.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x202)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.z,\x20direction.x,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(2.0*scale+mipOffset,\x200.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x203)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.x,\x20direction.z,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(0.0+mipOffset,0.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x204)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.y,\x20direction.x,\x20-direction.z);\x0a\x09\x09offset\x20=\x20vec2(scale+mipOffset,\x200.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20{\x0a\x09\x09r\x20=\x20vec3(direction.z,\x20-direction.x,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(2.0*scale+mipOffset,\x200.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09r\x20=\x20normalize(r);\x0a\x09float\x20texelOffset\x20=\x200.5\x20*\x20cubeUV_rcpTextureSize;\x0a\x09vec2\x20s\x20=\x20(\x20r.yz\x20/\x20abs(\x20r.x\x20)\x20+\x20vec2(\x201.0\x20)\x20)\x20*\x200.5;\x0a\x09vec2\x20base\x20=\x20offset\x20+\x20vec2(\x20texelOffset\x20);\x0a\x09return\x20base\x20+\x20s\x20*\x20(\x20scale\x20-\x202.0\x20*\x20texelOffset\x20);\x0a}\x0a#define\x20cubeUV_maxLods3\x20(log2(cubeUV_textureSize*0.25)\x20-\x203.0)\x0avec4\x20textureCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20reflectedDirection,\x20float\x20roughness\x20)\x20{\x0a\x09float\x20roughnessVal\x20=\x20roughness*\x20cubeUV_maxLods3;\x0a\x09float\x20r1\x20=\x20floor(roughnessVal);\x0a\x09float\x20r2\x20=\x20r1\x20+\x201.0;\x0a\x09float\x20t\x20=\x20fract(roughnessVal);\x0a\x09vec2\x20mipInfo\x20=\x20MipLevelInfo(reflectedDirection,\x20r1,\x20roughness);\x0a\x09float\x20s\x20=\x20mipInfo.y;\x0a\x09float\x20level0\x20=\x20mipInfo.x;\x0a\x09float\x20level1\x20=\x20level0\x20+\x201.0;\x0a\x09level1\x20=\x20level1\x20>\x205.0\x20?\x205.0\x20:\x20level1;\x0a\x09level0\x20+=\x20min(\x20floor(\x20s\x20+\x200.5\x20),\x205.0\x20);\x0a\x09vec2\x20uv_10\x20=\x20getCubeUV(reflectedDirection,\x20r1,\x20level0);\x0a\x09vec4\x20color10\x20=\x20envMapTexelToLinear(texture2D(envMap,\x20uv_10));\x0a\x09vec2\x20uv_20\x20=\x20getCubeUV(reflectedDirection,\x20r2,\x20level0);\x0a\x09vec4\x20color20\x20=\x20envMapTexelToLinear(texture2D(envMap,\x20uv_20));\x0a\x09vec4\x20result\x20=\x20mix(color10,\x20color20,\x20t);\x0a\x09return\x20vec4(result.rgb,\x201.0);\x0a}\x0a#endif',
    'defaultnormal_vertex': 'vec3\x20transformedNormal\x20=\x20normalMatrix\x20*\x20objectNormal;\x0a#ifdef\x20FLIP_SIDED\x0a\x09transformedNormal\x20=\x20-\x20transformedNormal;\x0a#endif\x0a#ifdef\x20USE_TANGENT\x0a\x09vec3\x20transformedTangent\x20=\x20normalMatrix\x20*\x20objectTangent;\x0a\x09#ifdef\x20FLIP_SIDED\x0a\x09\x09transformedTangent\x20=\x20-\x20transformedTangent;\x0a\x09#endif\x0a#endif',
    'displacementmap_pars_vertex': '#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09uniform\x20sampler2D\x20displacementMap;\x0a\x09uniform\x20float\x20displacementScale;\x0a\x09uniform\x20float\x20displacementBias;\x0a#endif',
    'displacementmap_vertex': '#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09transformed\x20+=\x20normalize(\x20objectNormal\x20)\x20*\x20(\x20texture2D(\x20displacementMap,\x20uv\x20).x\x20*\x20displacementScale\x20+\x20displacementBias\x20);\x0a#endif',
    'emissivemap_fragment': '#ifdef\x20USE_EMISSIVEMAP\x0a\x09vec4\x20emissiveColor\x20=\x20texture2D(\x20emissiveMap,\x20vUv\x20);\x0a\x09emissiveColor.rgb\x20=\x20emissiveMapTexelToLinear(\x20emissiveColor\x20).rgb;\x0a\x09totalEmissiveRadiance\x20*=\x20emissiveColor.rgb;\x0a#endif',
    'emissivemap_pars_fragment': '#ifdef\x20USE_EMISSIVEMAP\x0a\x09uniform\x20sampler2D\x20emissiveMap;\x0a#endif',
    'encodings_fragment': 'gl_FragColor\x20=\x20linearToOutputTexel(\x20gl_FragColor\x20);',
    'encodings_pars_fragment': '\x0avec4\x20LinearToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20value;\x0a}\x0avec4\x20GammaToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20gammaFactor\x20)\x20{\x0a\x09return\x20vec4(\x20pow(\x20value.rgb,\x20vec3(\x20gammaFactor\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20LinearToGamma(\x20in\x20vec4\x20value,\x20in\x20float\x20gammaFactor\x20)\x20{\x0a\x09return\x20vec4(\x20pow(\x20value.rgb,\x20vec3(\x201.0\x20/\x20gammaFactor\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20sRGBToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20mix(\x20pow(\x20value.rgb\x20*\x200.9478672986\x20+\x20vec3(\x200.0521327014\x20),\x20vec3(\x202.4\x20)\x20),\x20value.rgb\x20*\x200.0773993808,\x20vec3(\x20lessThanEqual(\x20value.rgb,\x20vec3(\x200.04045\x20)\x20)\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20LinearTosRGB(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20mix(\x20pow(\x20value.rgb,\x20vec3(\x200.41666\x20)\x20)\x20*\x201.055\x20-\x20vec3(\x200.055\x20),\x20value.rgb\x20*\x2012.92,\x20vec3(\x20lessThanEqual(\x20value.rgb,\x20vec3(\x200.0031308\x20)\x20)\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20RGBEToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20exp2(\x20value.a\x20*\x20255.0\x20-\x20128.0\x20),\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBE(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09float\x20maxComponent\x20=\x20max(\x20max(\x20value.r,\x20value.g\x20),\x20value.b\x20);\x0a\x09float\x20fExp\x20=\x20clamp(\x20ceil(\x20log2(\x20maxComponent\x20)\x20),\x20-128.0,\x20127.0\x20);\x0a\x09return\x20vec4(\x20value.rgb\x20/\x20exp2(\x20fExp\x20),\x20(\x20fExp\x20+\x20128.0\x20)\x20/\x20255.0\x20);\x0a}\x0avec4\x20RGBMToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20value.a\x20*\x20maxRange,\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBM(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09float\x20maxRGB\x20=\x20max(\x20value.r,\x20max(\x20value.g,\x20value.b\x20)\x20);\x0a\x09float\x20M\x20=\x20clamp(\x20maxRGB\x20/\x20maxRange,\x200.0,\x201.0\x20);\x0a\x09M\x20=\x20ceil(\x20M\x20*\x20255.0\x20)\x20/\x20255.0;\x0a\x09return\x20vec4(\x20value.rgb\x20/\x20(\x20M\x20*\x20maxRange\x20),\x20M\x20);\x0a}\x0avec4\x20RGBDToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20(\x20(\x20maxRange\x20/\x20255.0\x20)\x20/\x20value.a\x20),\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBD(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09float\x20maxRGB\x20=\x20max(\x20value.r,\x20max(\x20value.g,\x20value.b\x20)\x20);\x0a\x09float\x20D\x20=\x20max(\x20maxRange\x20/\x20maxRGB,\x201.0\x20);\x0a\x09D\x20=\x20min(\x20floor(\x20D\x20)\x20/\x20255.0,\x201.0\x20);\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20(\x20D\x20*\x20(\x20255.0\x20/\x20maxRange\x20)\x20),\x20D\x20);\x0a}\x0aconst\x20mat3\x20cLogLuvM\x20=\x20mat3(\x200.2209,\x200.3390,\x200.4184,\x200.1138,\x200.6780,\x200.7319,\x200.0102,\x200.1130,\x200.2969\x20);\x0avec4\x20LinearToLogLuv(\x20in\x20vec4\x20value\x20)\x20\x20{\x0a\x09vec3\x20Xp_Y_XYZp\x20=\x20cLogLuvM\x20*\x20value.rgb;\x0a\x09Xp_Y_XYZp\x20=\x20max(\x20Xp_Y_XYZp,\x20vec3(\x201e-6,\x201e-6,\x201e-6\x20)\x20);\x0a\x09vec4\x20vResult;\x0a\x09vResult.xy\x20=\x20Xp_Y_XYZp.xy\x20/\x20Xp_Y_XYZp.z;\x0a\x09float\x20Le\x20=\x202.0\x20*\x20log2(Xp_Y_XYZp.y)\x20+\x20127.0;\x0a\x09vResult.w\x20=\x20fract(\x20Le\x20);\x0a\x09vResult.z\x20=\x20(\x20Le\x20-\x20(\x20floor(\x20vResult.w\x20*\x20255.0\x20)\x20)\x20/\x20255.0\x20)\x20/\x20255.0;\x0a\x09return\x20vResult;\x0a}\x0aconst\x20mat3\x20cLogLuvInverseM\x20=\x20mat3(\x206.0014,\x20-2.7008,\x20-1.7996,\x20-1.3320,\x203.1029,\x20-5.7721,\x200.3008,\x20-1.0882,\x205.6268\x20);\x0avec4\x20LogLuvToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09float\x20Le\x20=\x20value.z\x20*\x20255.0\x20+\x20value.w;\x0a\x09vec3\x20Xp_Y_XYZp;\x0a\x09Xp_Y_XYZp.y\x20=\x20exp2(\x20(\x20Le\x20-\x20127.0\x20)\x20/\x202.0\x20);\x0a\x09Xp_Y_XYZp.z\x20=\x20Xp_Y_XYZp.y\x20/\x20value.y;\x0a\x09Xp_Y_XYZp.x\x20=\x20value.x\x20*\x20Xp_Y_XYZp.z;\x0a\x09vec3\x20vRGB\x20=\x20cLogLuvInverseM\x20*\x20Xp_Y_XYZp.rgb;\x0a\x09return\x20vec4(\x20max(\x20vRGB,\x200.0\x20),\x201.0\x20);\x0a}',
    'envmap_fragment': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09vec3\x20cameraToVertex\x20=\x20normalize(\x20vWorldPosition\x20-\x20cameraPosition\x20);\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20cameraToVertex,\x20worldNormal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20refract(\x20cameraToVertex,\x20worldNormal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09#else\x0a\x09\x09vec3\x20reflectVec\x20=\x20vReflect;\x0a\x09#endif\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09vec4\x20envColor\x20=\x20textureCube(\x20envMap,\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20)\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_TYPE_EQUIREC\x20)\x0a\x09\x09vec2\x20sampleUV;\x0a\x09\x09reflectVec\x20=\x20normalize(\x20reflectVec\x20);\x0a\x09\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20reflectVec.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09\x09sampleUV.x\x20=\x20atan(\x20reflectVec.z,\x20reflectVec.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09\x09vec4\x20envColor\x20=\x20texture2D(\x20envMap,\x20sampleUV\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_TYPE_SPHERE\x20)\x0a\x09\x09reflectVec\x20=\x20normalize(\x20reflectVec\x20);\x0a\x09\x09vec3\x20reflectView\x20=\x20normalize(\x20(\x20viewMatrix\x20*\x20vec4(\x20reflectVec,\x200.0\x20)\x20).xyz\x20+\x20vec3(\x200.0,\x200.0,\x201.0\x20)\x20);\x0a\x09\x09vec4\x20envColor\x20=\x20texture2D(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5\x20);\x0a\x09#else\x0a\x09\x09vec4\x20envColor\x20=\x20vec4(\x200.0\x20);\x0a\x09#endif\x0a\x09envColor\x20=\x20envMapTexelToLinear(\x20envColor\x20);\x0a\x09#ifdef\x20ENVMAP_BLENDING_MULTIPLY\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20outgoingLight\x20*\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_MIX\x20)\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_ADD\x20)\x0a\x09\x09outgoingLight\x20+=\x20envColor.xyz\x20*\x20specularStrength\x20*\x20reflectivity;\x0a\x09#endif\x0a#endif',
    'envmap_pars_fragment': '#if\x20defined(\x20USE_ENVMAP\x20)\x20||\x20defined(\x20PHYSICAL\x20)\x0a\x09uniform\x20float\x20reflectivity;\x0a\x09uniform\x20float\x20envMapIntensity;\x0a#endif\x0a#ifdef\x20USE_ENVMAP\x0a\x09#if\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20(\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20)\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x09#endif\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09uniform\x20samplerCube\x20envMap;\x0a\x09#else\x0a\x09\x09uniform\x20sampler2D\x20envMap;\x0a\x09#endif\x0a\x09uniform\x20float\x20flipEnvMap;\x0a\x09uniform\x20int\x20maxMipLevel;\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20||\x20defined(\x20PHYSICAL\x20)\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x09#else\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09#endif\x0a#endif',
    'envmap_pars_vertex': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x09#else\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x09#endif\x0a#endif',
    'envmap_physical_pars_fragment': '#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x0a\x09vec3\x20getLightProbeIndirectIrradiance(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20geometry.normal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09\x09vec3\x20queryVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20worldNormal.x,\x20worldNormal.yz\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeLodEXT(\x20envMap,\x20queryVec,\x20float(\x20maxMIPLevel\x20)\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCube(\x20envMap,\x20queryVec,\x20float(\x20maxMIPLevel\x20)\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09\x09vec3\x20queryVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20worldNormal.x,\x20worldNormal.yz\x20);\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20queryVec,\x201.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20vec4(\x200.0\x20);\x0a\x09\x09#endif\x0a\x09\x09return\x20PI\x20*\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x09}\x0a\x09float\x20getSpecularMIPLevel(\x20const\x20in\x20float\x20blinnShininessExponent,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09float\x20maxMIPLevelScalar\x20=\x20float(\x20maxMIPLevel\x20);\x0a\x09\x09float\x20desiredMIPLevel\x20=\x20maxMIPLevelScalar\x20+\x200.79248\x20-\x200.5\x20*\x20log2(\x20pow2(\x20blinnShininessExponent\x20)\x20+\x201.0\x20);\x0a\x09\x09return\x20clamp(\x20desiredMIPLevel,\x200.0,\x20maxMIPLevelScalar\x20);\x0a\x09}\x0a\x09vec3\x20getLightProbeIndirectRadiance(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20float\x20blinnShininessExponent,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20-geometry.viewDir,\x20geometry.normal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20refract(\x20-geometry.viewDir,\x20geometry.normal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09\x09reflectVec\x20=\x20inverseTransformDirection(\x20reflectVec,\x20viewMatrix\x20);\x0a\x09\x09float\x20specularMIPLevel\x20=\x20getSpecularMIPLevel(\x20blinnShininessExponent,\x20maxMIPLevel\x20);\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09\x09vec3\x20queryReflectVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeLodEXT(\x20envMap,\x20queryReflectVec,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCube(\x20envMap,\x20queryReflectVec,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09\x09vec3\x20queryReflectVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20);\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20queryReflectVec,\x20BlinnExponentToGGXRoughness(blinnShininessExponent\x20));\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_EQUIREC\x20)\x0a\x09\x09\x09vec2\x20sampleUV;\x0a\x09\x09\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20reflectVec.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09\x09\x09sampleUV.x\x20=\x20atan(\x20reflectVec.z,\x20reflectVec.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2DLodEXT(\x20envMap,\x20sampleUV,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2D(\x20envMap,\x20sampleUV,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_SPHERE\x20)\x0a\x09\x09\x09vec3\x20reflectView\x20=\x20normalize(\x20(\x20viewMatrix\x20*\x20vec4(\x20reflectVec,\x200.0\x20)\x20).xyz\x20+\x20vec3(\x200.0,0.0,1.0\x20)\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2DLodEXT(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2D(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#endif\x0a\x09\x09return\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x09}\x0a#endif',
    'envmap_vertex': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a\x09#else\x0a\x09\x09vec3\x20cameraToVertex\x20=\x20normalize(\x20worldPosition.xyz\x20-\x20cameraPosition\x20);\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20transformedNormal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vReflect\x20=\x20reflect(\x20cameraToVertex,\x20worldNormal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vReflect\x20=\x20refract(\x20cameraToVertex,\x20worldNormal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#endif',
    'fog_vertex': '#ifdef\x20USE_FOG\x0a\x09fogDepth\x20=\x20-mvPosition.z;\x0a#endif',
    'fog_pars_vertex': '#ifdef\x20USE_FOG\x0a\x09varying\x20float\x20fogDepth;\x0a#endif',
    'fog_fragment': '#ifdef\x20USE_FOG\x0a\x09#ifdef\x20FOG_EXP2\x0a\x09\x09float\x20fogFactor\x20=\x20whiteCompliment(\x20exp2(\x20-\x20fogDensity\x20*\x20fogDensity\x20*\x20fogDepth\x20*\x20fogDepth\x20*\x20LOG2\x20)\x20);\x0a\x09#else\x0a\x09\x09float\x20fogFactor\x20=\x20smoothstep(\x20fogNear,\x20fogFar,\x20fogDepth\x20);\x0a\x09#endif\x0a\x09gl_FragColor.rgb\x20=\x20mix(\x20gl_FragColor.rgb,\x20fogColor,\x20fogFactor\x20);\x0a#endif',
    'fog_pars_fragment': '#ifdef\x20USE_FOG\x0a\x09uniform\x20vec3\x20fogColor;\x0a\x09varying\x20float\x20fogDepth;\x0a\x09#ifdef\x20FOG_EXP2\x0a\x09\x09uniform\x20float\x20fogDensity;\x0a\x09#else\x0a\x09\x09uniform\x20float\x20fogNear;\x0a\x09\x09uniform\x20float\x20fogFar;\x0a\x09#endif\x0a#endif',
    'gradientmap_pars_fragment': '#ifdef\x20TOON\x0a\x09uniform\x20sampler2D\x20gradientMap;\x0a\x09vec3\x20getGradientIrradiance(\x20vec3\x20normal,\x20vec3\x20lightDirection\x20)\x20{\x0a\x09\x09float\x20dotNL\x20=\x20dot(\x20normal,\x20lightDirection\x20);\x0a\x09\x09vec2\x20coord\x20=\x20vec2(\x20dotNL\x20*\x200.5\x20+\x200.5,\x200.0\x20);\x0a\x09\x09#ifdef\x20USE_GRADIENTMAP\x0a\x09\x09\x09return\x20texture2D(\x20gradientMap,\x20coord\x20).rgb;\x0a\x09\x09#else\x0a\x09\x09\x09return\x20(\x20coord.x\x20<\x200.7\x20)\x20?\x20vec3(\x200.7\x20)\x20:\x20vec3(\x201.0\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
    'lightmap_fragment': '#ifdef\x20USE_LIGHTMAP\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20PI\x20*\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a#endif',
    'lightmap_pars_fragment': '#ifdef\x20USE_LIGHTMAP\x0a\x09uniform\x20sampler2D\x20lightMap;\x0a\x09uniform\x20float\x20lightMapIntensity;\x0a#endif',
    'lights_lambert_vertex': 'vec3\x20diffuse\x20=\x20vec3(\x201.0\x20);\x0aGeometricContext\x20geometry;\x0ageometry.position\x20=\x20mvPosition.xyz;\x0ageometry.normal\x20=\x20normalize(\x20transformedNormal\x20);\x0ageometry.viewDir\x20=\x20normalize(\x20-mvPosition.xyz\x20);\x0aGeometricContext\x20backGeometry;\x0abackGeometry.position\x20=\x20geometry.position;\x0abackGeometry.normal\x20=\x20-geometry.normal;\x0abackGeometry.viewDir\x20=\x20geometry.viewDir;\x0avLightFront\x20=\x20vec3(\x200.0\x20);\x0avIndirectFront\x20=\x20vec3(\x200.0\x20);\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09vLightBack\x20=\x20vec3(\x200.0\x20);\x0a\x09vIndirectBack\x20=\x20vec3(\x200.0\x20);\x0a#endif\x0aIncidentLight\x20directLight;\x0afloat\x20dotNL;\x0avec3\x20directLightColor_Diffuse;\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getPointDirectLightIrradiance(\x20pointLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getSpotDirectLightIrradiance(\x20spotLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getDirectionalDirectLightIrradiance(\x20directionalLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_HEMI_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_HEMI_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vIndirectFront\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20geometry\x20);\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vIndirectBack\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20backGeometry\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
    'lights_pars_begin': 'uniform\x20vec3\x20ambientLightColor;\x0auniform\x20vec3\x20lightProbe[\x209\x20];\x0avec3\x20shGetIrradianceAt(\x20in\x20vec3\x20normal,\x20in\x20vec3\x20shCoefficients[\x209\x20]\x20)\x20{\x0a\x09float\x20x\x20=\x20normal.x,\x20y\x20=\x20normal.y,\x20z\x20=\x20normal.z;\x0a\x09vec3\x20result\x20=\x20shCoefficients[\x200\x20]\x20*\x200.886227;\x0a\x09result\x20+=\x20shCoefficients[\x201\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x202\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x203\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20x;\x0a\x09result\x20+=\x20shCoefficients[\x204\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x205\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20y\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x206\x20]\x20*\x20(\x200.743125\x20*\x20z\x20*\x20z\x20-\x200.247708\x20);\x0a\x09result\x20+=\x20shCoefficients[\x207\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x208\x20]\x20*\x200.429043\x20*\x20(\x20x\x20*\x20x\x20-\x20y\x20*\x20y\x20);\x0a\x09return\x20result;\x0a}\x0avec3\x20getLightProbeIrradiance(\x20const\x20in\x20vec3\x20lightProbe[\x209\x20],\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20geometry.normal,\x20viewMatrix\x20);\x0a\x09vec3\x20irradiance\x20=\x20shGetIrradianceAt(\x20worldNormal,\x20lightProbe\x20);\x0a\x09return\x20irradiance;\x0a}\x0avec3\x20getAmbientLightIrradiance(\x20const\x20in\x20vec3\x20ambientLightColor\x20)\x20{\x0a\x09vec3\x20irradiance\x20=\x20ambientLightColor;\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09return\x20irradiance;\x0a}\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09struct\x20DirectionalLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09};\x0a\x09uniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a\x09void\x20getDirectionalDirectLightIrradiance(\x20const\x20in\x20DirectionalLight\x20directionalLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x09\x09directLight.color\x20=\x20directionalLight.color;\x0a\x09\x09directLight.direction\x20=\x20directionalLight.direction;\x0a\x09\x09directLight.visible\x20=\x20true;\x0a\x09}\x0a#endif\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09struct\x20PointLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09float\x20shadowCameraNear;\x0a\x09\x09float\x20shadowCameraFar;\x0a\x09};\x0a\x09uniform\x20PointLight\x20pointLights[\x20NUM_POINT_LIGHTS\x20];\x0a\x09void\x20getPointDirectLightIrradiance(\x20const\x20in\x20PointLight\x20pointLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x09\x09vec3\x20lVector\x20=\x20pointLight.position\x20-\x20geometry.position;\x0a\x09\x09directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x09\x09directLight.color\x20=\x20pointLight.color;\x0a\x09\x09directLight.color\x20*=\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20pointLight.distance,\x20pointLight.decay\x20);\x0a\x09\x09directLight.visible\x20=\x20(\x20directLight.color\x20!=\x20vec3(\x200.0\x20)\x20);\x0a\x09}\x0a#endif\x0a#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09struct\x20SpotLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09\x09float\x20coneCos;\x0a\x09\x09float\x20penumbraCos;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09};\x0a\x09uniform\x20SpotLight\x20spotLights[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09void\x20getSpotDirectLightIrradiance(\x20const\x20in\x20SpotLight\x20spotLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20\x20)\x20{\x0a\x09\x09vec3\x20lVector\x20=\x20spotLight.position\x20-\x20geometry.position;\x0a\x09\x09directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x09\x09float\x20angleCos\x20=\x20dot(\x20directLight.direction,\x20spotLight.direction\x20);\x0a\x09\x09if\x20(\x20angleCos\x20>\x20spotLight.coneCos\x20)\x20{\x0a\x09\x09\x09float\x20spotEffect\x20=\x20smoothstep(\x20spotLight.coneCos,\x20spotLight.penumbraCos,\x20angleCos\x20);\x0a\x09\x09\x09directLight.color\x20=\x20spotLight.color;\x0a\x09\x09\x09directLight.color\x20*=\x20spotEffect\x20*\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20spotLight.distance,\x20spotLight.decay\x20);\x0a\x09\x09\x09directLight.visible\x20=\x20true;\x0a\x09\x09}\x20else\x20{\x0a\x09\x09\x09directLight.color\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09\x09directLight.visible\x20=\x20false;\x0a\x09\x09}\x0a\x09}\x0a#endif\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x09struct\x20RectAreaLight\x20{\x0a\x09\x09vec3\x20color;\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20halfWidth;\x0a\x09\x09vec3\x20halfHeight;\x0a\x09};\x0a\x09uniform\x20sampler2D\x20ltc_1;\x09uniform\x20sampler2D\x20ltc_2;\x0a\x09uniform\x20RectAreaLight\x20rectAreaLights[\x20NUM_RECT_AREA_LIGHTS\x20];\x0a#endif\x0a#if\x20NUM_HEMI_LIGHTS\x20>\x200\x0a\x09struct\x20HemisphereLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20skyColor;\x0a\x09\x09vec3\x20groundColor;\x0a\x09};\x0a\x09uniform\x20HemisphereLight\x20hemisphereLights[\x20NUM_HEMI_LIGHTS\x20];\x0a\x09vec3\x20getHemisphereLightIrradiance(\x20const\x20in\x20HemisphereLight\x20hemiLight,\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x09\x09float\x20dotNL\x20=\x20dot(\x20geometry.normal,\x20hemiLight.direction\x20);\x0a\x09\x09float\x20hemiDiffuseWeight\x20=\x200.5\x20*\x20dotNL\x20+\x200.5;\x0a\x09\x09vec3\x20irradiance\x20=\x20mix(\x20hemiLight.groundColor,\x20hemiLight.skyColor,\x20hemiDiffuseWeight\x20);\x0a\x09\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09\x09irradiance\x20*=\x20PI;\x0a\x09\x09#endif\x0a\x09\x09return\x20irradiance;\x0a\x09}\x0a#endif',
    'lights_phong_fragment': 'BlinnPhongMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb;\x0amaterial.specularColor\x20=\x20specular;\x0amaterial.specularShininess\x20=\x20shininess;\x0amaterial.specularStrength\x20=\x20specularStrength;',
    'lights_phong_pars_fragment': 'varying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0astruct\x20BlinnPhongMaterial\x20{\x0a\x09vec3\x09diffuseColor;\x0a\x09vec3\x09specularColor;\x0a\x09float\x09specularShininess;\x0a\x09float\x09specularStrength;\x0a};\x0avoid\x20RE_Direct_BlinnPhong(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09#ifdef\x20TOON\x0a\x09\x09vec3\x20irradiance\x20=\x20getGradientIrradiance(\x20geometry.normal,\x20directLight.direction\x20)\x20*\x20directLight.color;\x0a\x09#else\x0a\x09\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x09\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x09#endif\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20BRDF_Specular_BlinnPhong(\x20directLight,\x20geometry,\x20material.specularColor,\x20material.specularShininess\x20)\x20*\x20material.specularStrength;\x0a}\x0avoid\x20RE_IndirectDiffuse_BlinnPhong(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a}\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_BlinnPhong\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_BlinnPhong\x0a#define\x20Material_LightProbeLOD(\x20material\x20)\x09(0)',
    'lights_physical_fragment': 'PhysicalMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb\x20*\x20(\x201.0\x20-\x20metalnessFactor\x20);\x0amaterial.specularRoughness\x20=\x20clamp(\x20roughnessFactor,\x200.04,\x201.0\x20);\x0a#ifdef\x20STANDARD\x0a\x09material.specularColor\x20=\x20mix(\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a#else\x0a\x09material.specularColor\x20=\x20mix(\x20vec3(\x20MAXIMUM_SPECULAR_COEFFICIENT\x20*\x20pow2(\x20reflectivity\x20)\x20),\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a\x09material.clearCoat\x20=\x20saturate(\x20clearCoat\x20);\x09material.clearCoatRoughness\x20=\x20clamp(\x20clearCoatRoughness,\x200.04,\x201.0\x20);\x0a#endif',
    'lights_physical_pars_fragment': 'struct\x20PhysicalMaterial\x20{\x0a\x09vec3\x09diffuseColor;\x0a\x09float\x09specularRoughness;\x0a\x09vec3\x09specularColor;\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20clearCoat;\x0a\x09\x09float\x20clearCoatRoughness;\x0a\x09#endif\x0a};\x0a#define\x20MAXIMUM_SPECULAR_COEFFICIENT\x200.16\x0a#define\x20DEFAULT_SPECULAR_COEFFICIENT\x200.04\x0afloat\x20clearCoatDHRApprox(\x20const\x20in\x20float\x20roughness,\x20const\x20in\x20float\x20dotNL\x20)\x20{\x0a\x09return\x20DEFAULT_SPECULAR_COEFFICIENT\x20+\x20(\x201.0\x20-\x20DEFAULT_SPECULAR_COEFFICIENT\x20)\x20*\x20(\x20pow(\x201.0\x20-\x20dotNL,\x205.0\x20)\x20*\x20pow(\x201.0\x20-\x20roughness,\x202.0\x20)\x20);\x0a}\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x09void\x20RE_Direct_RectArea_Physical(\x20const\x20in\x20RectAreaLight\x20rectAreaLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09\x09vec3\x20normal\x20=\x20geometry.normal;\x0a\x09\x09vec3\x20viewDir\x20=\x20geometry.viewDir;\x0a\x09\x09vec3\x20position\x20=\x20geometry.position;\x0a\x09\x09vec3\x20lightPos\x20=\x20rectAreaLight.position;\x0a\x09\x09vec3\x20halfWidth\x20=\x20rectAreaLight.halfWidth;\x0a\x09\x09vec3\x20halfHeight\x20=\x20rectAreaLight.halfHeight;\x0a\x09\x09vec3\x20lightColor\x20=\x20rectAreaLight.color;\x0a\x09\x09float\x20roughness\x20=\x20material.specularRoughness;\x0a\x09\x09vec3\x20rectCoords[\x204\x20];\x0a\x09\x09rectCoords[\x200\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20-\x20halfHeight;\x09\x09rectCoords[\x201\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20-\x20halfHeight;\x0a\x09\x09rectCoords[\x202\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20+\x20halfHeight;\x0a\x09\x09rectCoords[\x203\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20+\x20halfHeight;\x0a\x09\x09vec2\x20uv\x20=\x20LTC_Uv(\x20normal,\x20viewDir,\x20roughness\x20);\x0a\x09\x09vec4\x20t1\x20=\x20texture2D(\x20ltc_1,\x20uv\x20);\x0a\x09\x09vec4\x20t2\x20=\x20texture2D(\x20ltc_2,\x20uv\x20);\x0a\x09\x09mat3\x20mInv\x20=\x20mat3(\x0a\x09\x09\x09vec3(\x20t1.x,\x200,\x20t1.y\x20),\x0a\x09\x09\x09vec3(\x20\x20\x20\x200,\x201,\x20\x20\x20\x200\x20),\x0a\x09\x09\x09vec3(\x20t1.z,\x200,\x20t1.w\x20)\x0a\x09\x09);\x0a\x09\x09vec3\x20fresnel\x20=\x20(\x20material.specularColor\x20*\x20t2.x\x20+\x20(\x20vec3(\x201.0\x20)\x20-\x20material.specularColor\x20)\x20*\x20t2.y\x20);\x0a\x09\x09reflectedLight.directSpecular\x20+=\x20lightColor\x20*\x20fresnel\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mInv,\x20rectCoords\x20);\x0a\x09\x09reflectedLight.directDiffuse\x20+=\x20lightColor\x20*\x20material.diffuseColor\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mat3(\x201.0\x20),\x20rectCoords\x20);\x0a\x09}\x0a#endif\x0avoid\x20RE_Direct_Physical(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20clearCoatDHR\x20=\x20material.clearCoat\x20*\x20clearCoatDHRApprox(\x20material.clearCoatRoughness,\x20dotNL\x20);\x0a\x09#else\x0a\x09\x09float\x20clearCoatDHR\x20=\x200.0;\x0a\x09#endif\x0a\x09reflectedLight.directSpecular\x20+=\x20(\x201.0\x20-\x20clearCoatDHR\x20)\x20*\x20irradiance\x20*\x20BRDF_Specular_GGX(\x20directLight,\x20geometry,\x20material.specularColor,\x20material.specularRoughness\x20);\x0a\x09reflectedLight.directDiffuse\x20+=\x20(\x201.0\x20-\x20clearCoatDHR\x20)\x20*\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20material.clearCoat\x20*\x20BRDF_Specular_GGX(\x20directLight,\x20geometry,\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20material.clearCoatRoughness\x20);\x0a\x09#endif\x0a}\x0avoid\x20RE_IndirectDiffuse_Physical(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09#ifndef\x20ENVMAP_TYPE_CUBE_UV\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09#endif\x0a}\x0avoid\x20RE_IndirectSpecular_Physical(\x20const\x20in\x20vec3\x20radiance,\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20vec3\x20clearCoatRadiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight)\x20{\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09\x09float\x20dotNL\x20=\x20dotNV;\x0a\x09\x09float\x20clearCoatDHR\x20=\x20material.clearCoat\x20*\x20clearCoatDHRApprox(\x20material.clearCoatRoughness,\x20dotNL\x20);\x0a\x09#else\x0a\x09\x09float\x20clearCoatDHR\x20=\x200.0;\x0a\x09#endif\x0a\x09float\x20clearCoatInv\x20=\x201.0\x20-\x20clearCoatDHR;\x0a\x09#if\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09vec3\x20singleScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09vec3\x20multiScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09vec3\x20cosineWeightedIrradiance\x20=\x20irradiance\x20*\x20RECIPROCAL_PI;\x0a\x09\x09BRDF_Specular_Multiscattering_Environment(\x20geometry,\x20material.specularColor,\x20material.specularRoughness,\x20singleScattering,\x20multiScattering\x20);\x0a\x09\x09vec3\x20diffuse\x20=\x20material.diffuseColor\x20*\x20(\x201.0\x20-\x20(\x20singleScattering\x20+\x20multiScattering\x20)\x20);\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatInv\x20*\x20radiance\x20*\x20singleScattering;\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20multiScattering\x20*\x20cosineWeightedIrradiance;\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20diffuse\x20*\x20cosineWeightedIrradiance;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatInv\x20*\x20radiance\x20*\x20BRDF_Specular_GGX_Environment(\x20geometry,\x20material.specularColor,\x20material.specularRoughness\x20);\x0a\x09#endif\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatRadiance\x20*\x20material.clearCoat\x20*\x20BRDF_Specular_GGX_Environment(\x20geometry,\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20material.clearCoatRoughness\x20);\x0a\x09#endif\x0a}\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_Physical\x0a#define\x20RE_Direct_RectArea\x09\x09RE_Direct_RectArea_Physical\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_Physical\x0a#define\x20RE_IndirectSpecular\x09\x09RE_IndirectSpecular_Physical\x0a#define\x20Material_BlinnShininessExponent(\x20material\x20)\x20\x20\x20GGXRoughnessToBlinnExponent(\x20material.specularRoughness\x20)\x0a#define\x20Material_ClearCoat_BlinnShininessExponent(\x20material\x20)\x20\x20\x20GGXRoughnessToBlinnExponent(\x20material.clearCoatRoughness\x20)\x0afloat\x20computeSpecularOcclusion(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20ambientOcclusion,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09return\x20saturate(\x20pow(\x20dotNV\x20+\x20ambientOcclusion,\x20exp2(\x20-\x2016.0\x20*\x20roughness\x20-\x201.0\x20)\x20)\x20-\x201.0\x20+\x20ambientOcclusion\x20);\x0a}',
    'lights_fragment_begin': '\x0aGeometricContext\x20geometry;\x0ageometry.position\x20=\x20-\x20vViewPosition;\x0ageometry.normal\x20=\x20normal;\x0ageometry.viewDir\x20=\x20normalize(\x20vViewPosition\x20);\x0aIncidentLight\x20directLight;\x0a#if\x20(\x20NUM_POINT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09PointLight\x20pointLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09pointLight\x20=\x20pointLights[\x20i\x20];\x0a\x09\x09getPointDirectLightIrradiance(\x20pointLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20pointLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLight.shadowMapSize,\x20pointLight.shadowBias,\x20pointLight.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLight.shadowCameraNear,\x20pointLight.shadowCameraFar\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_SPOT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09SpotLight\x20spotLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09spotLight\x20=\x20spotLights[\x20i\x20];\x0a\x09\x09getSpotDirectLightIrradiance(\x20spotLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20spotLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLight.shadowMapSize,\x20spotLight.shadowBias,\x20spotLight.shadowRadius,\x20vSpotShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_DIR_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09DirectionalLight\x20directionalLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09directionalLight\x20=\x20directionalLights[\x20i\x20];\x0a\x09\x09getDirectionalDirectLightIrradiance(\x20directionalLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20directionalLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLight.shadowMapSize,\x20directionalLight.shadowBias,\x20directionalLight.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct_RectArea\x20)\x0a\x09RectAreaLight\x20rectAreaLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_RECT_AREA_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09rectAreaLight\x20=\x20rectAreaLights[\x20i\x20];\x0a\x09\x09RE_Direct_RectArea(\x20rectAreaLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09vec3\x20irradiance\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x09irradiance\x20+=\x20getLightProbeIrradiance(\x20lightProbe,\x20geometry\x20);\x0a\x09#if\x20(\x20NUM_HEMI_LIGHTS\x20>\x200\x20)\x0a\x09\x09#pragma\x20unroll_loop\x0a\x09\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_HEMI_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09\x09irradiance\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20geometry\x20);\x0a\x09\x09}\x0a\x09#endif\x0a#endif\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09vec3\x20radiance\x20=\x20vec3(\x200.0\x20);\x0a\x09vec3\x20clearCoatRadiance\x20=\x20vec3(\x200.0\x20);\x0a#endif',
    'lights_fragment_maps': '#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x09\x09vec3\x20lightMapIrradiance\x20=\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a\x09\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09\x09lightMapIrradiance\x20*=\x20PI;\x0a\x09\x09#endif\x0a\x09\x09irradiance\x20+=\x20lightMapIrradiance;\x0a\x09#endif\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x20&&\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09irradiance\x20+=\x20getLightProbeIndirectIrradiance(\x20geometry,\x20maxMipLevel\x20);\x0a\x09#endif\x0a#endif\x0a#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09radiance\x20+=\x20getLightProbeIndirectRadiance(\x20geometry,\x20Material_BlinnShininessExponent(\x20material\x20),\x20maxMipLevel\x20);\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09clearCoatRadiance\x20+=\x20getLightProbeIndirectRadiance(\x20geometry,\x20Material_ClearCoat_BlinnShininessExponent(\x20material\x20),\x20maxMipLevel\x20);\x0a\x09#endif\x0a#endif',
    'lights_fragment_end': '#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09RE_IndirectDiffuse(\x20irradiance,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a#endif\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09RE_IndirectSpecular(\x20radiance,\x20irradiance,\x20clearCoatRadiance,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a#endif',
    'logdepthbuf_fragment': '#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x09gl_FragDepthEXT\x20=\x20log2(\x20vFragDepth\x20)\x20*\x20logDepthBufFC\x20*\x200.5;\x0a#endif',
    'logdepthbuf_pars_fragment': '#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x09uniform\x20float\x20logDepthBufFC;\x0a\x09varying\x20float\x20vFragDepth;\x0a#endif',
    'logdepthbuf_pars_vertex': '#ifdef\x20USE_LOGDEPTHBUF\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x09\x09varying\x20float\x20vFragDepth;\x0a\x09#else\x0a\x09\x09uniform\x20float\x20logDepthBufFC;\x0a\x09#endif\x0a#endif',
    'logdepthbuf_vertex': '#ifdef\x20USE_LOGDEPTHBUF\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x09\x09vFragDepth\x20=\x201.0\x20+\x20gl_Position.w;\x0a\x09#else\x0a\x09\x09gl_Position.z\x20=\x20log2(\x20max(\x20EPSILON,\x20gl_Position.w\x20+\x201.0\x20)\x20)\x20*\x20logDepthBufFC\x20-\x201.0;\x0a\x09\x09gl_Position.z\x20*=\x20gl_Position.w;\x0a\x09#endif\x0a#endif',
    'map_fragment': '#ifdef\x20USE_MAP\x0a\x09vec4\x20texelColor\x20=\x20texture2D(\x20map,\x20vUv\x20);\x0a\x09texelColor\x20=\x20mapTexelToLinear(\x20texelColor\x20);\x0a\x09diffuseColor\x20*=\x20texelColor;\x0a#endif',
    'map_pars_fragment': '#ifdef\x20USE_MAP\x0a\x09uniform\x20sampler2D\x20map;\x0a#endif',
    'map_particle_fragment': '#ifdef\x20USE_MAP\x0a\x09vec2\x20uv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20gl_PointCoord.x,\x201.0\x20-\x20gl_PointCoord.y,\x201\x20)\x20).xy;\x0a\x09vec4\x20mapTexel\x20=\x20texture2D(\x20map,\x20uv\x20);\x0a\x09diffuseColor\x20*=\x20mapTexelToLinear(\x20mapTexel\x20);\x0a#endif',
    'map_particle_pars_fragment': '#ifdef\x20USE_MAP\x0a\x09uniform\x20mat3\x20uvTransform;\x0a\x09uniform\x20sampler2D\x20map;\x0a#endif',
    'metalnessmap_fragment': 'float\x20metalnessFactor\x20=\x20metalness;\x0a#ifdef\x20USE_METALNESSMAP\x0a\x09vec4\x20texelMetalness\x20=\x20texture2D(\x20metalnessMap,\x20vUv\x20);\x0a\x09metalnessFactor\x20*=\x20texelMetalness.b;\x0a#endif',
    'metalnessmap_pars_fragment': '#ifdef\x20USE_METALNESSMAP\x0a\x09uniform\x20sampler2D\x20metalnessMap;\x0a#endif',
    'morphnormal_vertex': '#ifdef\x20USE_MORPHNORMALS\x0a\x09objectNormal\x20+=\x20(\x20morphNormal0\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal1\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal2\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal3\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x203\x20];\x0a#endif',
    'morphtarget_pars_vertex': '#ifdef\x20USE_MORPHTARGETS\x0a\x09#ifndef\x20USE_MORPHNORMALS\x0a\x09uniform\x20float\x20morphTargetInfluences[\x208\x20];\x0a\x09#else\x0a\x09uniform\x20float\x20morphTargetInfluences[\x204\x20];\x0a\x09#endif\x0a#endif',
    'morphtarget_vertex': '#ifdef\x20USE_MORPHTARGETS\x0a\x09transformed\x20+=\x20(\x20morphTarget0\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget1\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget2\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget3\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x203\x20];\x0a\x09#ifndef\x20USE_MORPHNORMALS\x0a\x09transformed\x20+=\x20(\x20morphTarget4\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x204\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget5\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x205\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget6\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x206\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget7\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x207\x20];\x0a\x09#endif\x0a#endif',
    'normal_fragment_begin': '#ifdef\x20FLAT_SHADED\x0a\x09vec3\x20fdx\x20=\x20vec3(\x20dFdx(\x20vViewPosition.x\x20),\x20dFdx(\x20vViewPosition.y\x20),\x20dFdx(\x20vViewPosition.z\x20)\x20);\x0a\x09vec3\x20fdy\x20=\x20vec3(\x20dFdy(\x20vViewPosition.x\x20),\x20dFdy(\x20vViewPosition.y\x20),\x20dFdy(\x20vViewPosition.z\x20)\x20);\x0a\x09vec3\x20normal\x20=\x20normalize(\x20cross(\x20fdx,\x20fdy\x20)\x20);\x0a#else\x0a\x09vec3\x20normal\x20=\x20normalize(\x20vNormal\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09normal\x20=\x20normal\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09#endif\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vec3\x20tangent\x20=\x20normalize(\x20vTangent\x20);\x0a\x09\x09vec3\x20bitangent\x20=\x20normalize(\x20vBitangent\x20);\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09tangent\x20=\x20tangent\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09\x09bitangent\x20=\x20bitangent\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#endif',
    'normal_fragment_maps': '#ifdef\x20USE_NORMALMAP\x0a\x09#ifdef\x20OBJECTSPACE_NORMALMAP\x0a\x09\x09normal\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09#ifdef\x20FLIP_SIDED\x0a\x09\x09\x09normal\x20=\x20-\x20normal;\x0a\x09\x09#endif\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09normal\x20=\x20normal\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09#endif\x0a\x09\x09normal\x20=\x20normalize(\x20normalMatrix\x20*\x20normal\x20);\x0a\x09#else\x0a\x09\x09#ifdef\x20USE_TANGENT\x0a\x09\x09\x09mat3\x20vTBN\x20=\x20mat3(\x20tangent,\x20bitangent,\x20normal\x20);\x0a\x09\x09\x09vec3\x20mapN\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09\x09mapN.xy\x20=\x20normalScale\x20*\x20mapN.xy;\x0a\x09\x09\x09normal\x20=\x20normalize(\x20vTBN\x20*\x20mapN\x20);\x0a\x09\x09#else\x0a\x09\x09\x09normal\x20=\x20perturbNormal2Arb(\x20-vViewPosition,\x20normal\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#elif\x20defined(\x20USE_BUMPMAP\x20)\x0a\x09normal\x20=\x20perturbNormalArb(\x20-vViewPosition,\x20normal,\x20dHdxy_fwd()\x20);\x0a#endif',
    'normalmap_pars_fragment': '#ifdef\x20USE_NORMALMAP\x0a\x09uniform\x20sampler2D\x20normalMap;\x0a\x09uniform\x20vec2\x20normalScale;\x0a\x09#ifdef\x20OBJECTSPACE_NORMALMAP\x0a\x09\x09uniform\x20mat3\x20normalMatrix;\x0a\x09#else\x0a\x09\x09vec3\x20perturbNormal2Arb(\x20vec3\x20eye_pos,\x20vec3\x20surf_norm\x20)\x20{\x0a\x09\x09\x09vec3\x20q0\x20=\x20vec3(\x20dFdx(\x20eye_pos.x\x20),\x20dFdx(\x20eye_pos.y\x20),\x20dFdx(\x20eye_pos.z\x20)\x20);\x0a\x09\x09\x09vec3\x20q1\x20=\x20vec3(\x20dFdy(\x20eye_pos.x\x20),\x20dFdy(\x20eye_pos.y\x20),\x20dFdy(\x20eye_pos.z\x20)\x20);\x0a\x09\x09\x09vec2\x20st0\x20=\x20dFdx(\x20vUv.st\x20);\x0a\x09\x09\x09vec2\x20st1\x20=\x20dFdy(\x20vUv.st\x20);\x0a\x09\x09\x09float\x20scale\x20=\x20sign(\x20st1.t\x20*\x20st0.s\x20-\x20st0.t\x20*\x20st1.s\x20);\x0a\x09\x09\x09vec3\x20S\x20=\x20normalize(\x20(\x20q0\x20*\x20st1.t\x20-\x20q1\x20*\x20st0.t\x20)\x20*\x20scale\x20);\x0a\x09\x09\x09vec3\x20T\x20=\x20normalize(\x20(\x20-\x20q0\x20*\x20st1.s\x20+\x20q1\x20*\x20st0.s\x20)\x20*\x20scale\x20);\x0a\x09\x09\x09vec3\x20N\x20=\x20normalize(\x20surf_norm\x20);\x0a\x09\x09\x09mat3\x20tsn\x20=\x20mat3(\x20S,\x20T,\x20N\x20);\x0a\x09\x09\x09vec3\x20mapN\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09\x09mapN.xy\x20*=\x20normalScale;\x0a\x09\x09\x09mapN.xy\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09\x09return\x20normalize(\x20tsn\x20*\x20mapN\x20);\x0a\x09\x09}\x0a\x09#endif\x0a#endif',
    'packing': 'vec3\x20packNormalToRGB(\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a\x09return\x20normalize(\x20normal\x20)\x20*\x200.5\x20+\x200.5;\x0a}\x0avec3\x20unpackRGBToNormal(\x20const\x20in\x20vec3\x20rgb\x20)\x20{\x0a\x09return\x202.0\x20*\x20rgb.xyz\x20-\x201.0;\x0a}\x0aconst\x20float\x20PackUpscale\x20=\x20256.\x20/\x20255.;const\x20float\x20UnpackDownscale\x20=\x20255.\x20/\x20256.;\x0aconst\x20vec3\x20PackFactors\x20=\x20vec3(\x20256.\x20*\x20256.\x20*\x20256.,\x20256.\x20*\x20256.,\x20\x20256.\x20);\x0aconst\x20vec4\x20UnpackFactors\x20=\x20UnpackDownscale\x20/\x20vec4(\x20PackFactors,\x201.\x20);\x0aconst\x20float\x20ShiftRight8\x20=\x201.\x20/\x20256.;\x0avec4\x20packDepthToRGBA(\x20const\x20in\x20float\x20v\x20)\x20{\x0a\x09vec4\x20r\x20=\x20vec4(\x20fract(\x20v\x20*\x20PackFactors\x20),\x20v\x20);\x0a\x09r.yzw\x20-=\x20r.xyz\x20*\x20ShiftRight8;\x09return\x20r\x20*\x20PackUpscale;\x0a}\x0afloat\x20unpackRGBAToDepth(\x20const\x20in\x20vec4\x20v\x20)\x20{\x0a\x09return\x20dot(\x20v,\x20UnpackFactors\x20);\x0a}\x0afloat\x20viewZToOrthographicDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20(\x20viewZ\x20+\x20near\x20)\x20/\x20(\x20near\x20-\x20far\x20);\x0a}\x0afloat\x20orthographicDepthToViewZ(\x20const\x20in\x20float\x20linearClipZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20linearClipZ\x20*\x20(\x20near\x20-\x20far\x20)\x20-\x20near;\x0a}\x0afloat\x20viewZToPerspectiveDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20((\x20near\x20+\x20viewZ\x20)\x20*\x20far\x20)\x20/\x20((\x20far\x20-\x20near\x20)\x20*\x20viewZ\x20);\x0a}\x0afloat\x20perspectiveDepthToViewZ(\x20const\x20in\x20float\x20invClipZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20(\x20near\x20*\x20far\x20)\x20/\x20(\x20(\x20far\x20-\x20near\x20)\x20*\x20invClipZ\x20-\x20far\x20);\x0a}',
    'premultiplied_alpha_fragment': '#ifdef\x20PREMULTIPLIED_ALPHA\x0a\x09gl_FragColor.rgb\x20*=\x20gl_FragColor.a;\x0a#endif',
    'project_vertex': 'vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0agl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;',
    'dithering_fragment': '#if\x20defined(\x20DITHERING\x20)\x0a\x09gl_FragColor.rgb\x20=\x20dithering(\x20gl_FragColor.rgb\x20);\x0a#endif',
    'dithering_pars_fragment': '#if\x20defined(\x20DITHERING\x20)\x0a\x09vec3\x20dithering(\x20vec3\x20color\x20)\x20{\x0a\x09\x09float\x20grid_position\x20=\x20rand(\x20gl_FragCoord.xy\x20);\x0a\x09\x09vec3\x20dither_shift_RGB\x20=\x20vec3(\x200.25\x20/\x20255.0,\x20-0.25\x20/\x20255.0,\x200.25\x20/\x20255.0\x20);\x0a\x09\x09dither_shift_RGB\x20=\x20mix(\x202.0\x20*\x20dither_shift_RGB,\x20-2.0\x20*\x20dither_shift_RGB,\x20grid_position\x20);\x0a\x09\x09return\x20color\x20+\x20dither_shift_RGB;\x0a\x09}\x0a#endif',
    'roughnessmap_fragment': 'float\x20roughnessFactor\x20=\x20roughness;\x0a#ifdef\x20USE_ROUGHNESSMAP\x0a\x09vec4\x20texelRoughness\x20=\x20texture2D(\x20roughnessMap,\x20vUv\x20);\x0a\x09roughnessFactor\x20*=\x20texelRoughness.g;\x0a#endif',
    'roughnessmap_pars_fragment': '#ifdef\x20USE_ROUGHNESSMAP\x0a\x09uniform\x20sampler2D\x20roughnessMap;\x0a#endif',
    'shadowmap_pars_fragment': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20directionalShadowMap[\x20NUM_DIR_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20spotShadowMap[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vSpotShadowCoord[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20pointShadowMap[\x20NUM_POINT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHTS\x20];\x0a\x09#endif\x0a\x09float\x20texture2DCompare(\x20sampler2D\x20depths,\x20vec2\x20uv,\x20float\x20compare\x20)\x20{\x0a\x09\x09return\x20step(\x20compare,\x20unpackRGBAToDepth(\x20texture2D(\x20depths,\x20uv\x20)\x20)\x20);\x0a\x09}\x0a\x09float\x20texture2DShadowLerp(\x20sampler2D\x20depths,\x20vec2\x20size,\x20vec2\x20uv,\x20float\x20compare\x20)\x20{\x0a\x09\x09const\x20vec2\x20offset\x20=\x20vec2(\x200.0,\x201.0\x20);\x0a\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20size;\x0a\x09\x09vec2\x20centroidUV\x20=\x20floor(\x20uv\x20*\x20size\x20+\x200.5\x20)\x20/\x20size;\x0a\x09\x09float\x20lb\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.xx,\x20compare\x20);\x0a\x09\x09float\x20lt\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.xy,\x20compare\x20);\x0a\x09\x09float\x20rb\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.yx,\x20compare\x20);\x0a\x09\x09float\x20rt\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.yy,\x20compare\x20);\x0a\x09\x09vec2\x20f\x20=\x20fract(\x20uv\x20*\x20size\x20+\x200.5\x20);\x0a\x09\x09float\x20a\x20=\x20mix(\x20lb,\x20lt,\x20f.y\x20);\x0a\x09\x09float\x20b\x20=\x20mix(\x20rb,\x20rt,\x20f.y\x20);\x0a\x09\x09float\x20c\x20=\x20mix(\x20a,\x20b,\x20f.x\x20);\x0a\x09\x09return\x20c;\x0a\x09}\x0a\x09float\x20getShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord\x20)\x20{\x0a\x09\x09float\x20shadow\x20=\x201.0;\x0a\x09\x09shadowCoord.xyz\x20/=\x20shadowCoord.w;\x0a\x09\x09shadowCoord.z\x20+=\x20shadowBias;\x0a\x09\x09bvec4\x20inFrustumVec\x20=\x20bvec4\x20(\x20shadowCoord.x\x20>=\x200.0,\x20shadowCoord.x\x20<=\x201.0,\x20shadowCoord.y\x20>=\x200.0,\x20shadowCoord.y\x20<=\x201.0\x20);\x0a\x09\x09bool\x20inFrustum\x20=\x20all(\x20inFrustumVec\x20);\x0a\x09\x09bvec2\x20frustumTestVec\x20=\x20bvec2(\x20inFrustum,\x20shadowCoord.z\x20<=\x201.0\x20);\x0a\x09\x09bool\x20frustumTest\x20=\x20all(\x20frustumTestVec\x20);\x0a\x09\x09if\x20(\x20frustumTest\x20)\x20{\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x09\x09\x09float\x20dx0\x20=\x20-\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy0\x20=\x20-\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx1\x20=\x20+\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy1\x20=\x20+\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy1\x20),\x20shadowCoord.z\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#elif\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x09\x09\x09float\x20dx0\x20=\x20-\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy0\x20=\x20-\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx1\x20=\x20+\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy1\x20=\x20+\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy1\x20),\x20shadowCoord.z\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09shadow\x20=\x20texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20);\x0a\x09\x09#endif\x0a\x09\x09}\x0a\x09\x09return\x20shadow;\x0a\x09}\x0a\x09vec2\x20cubeToUV(\x20vec3\x20v,\x20float\x20texelSizeY\x20)\x20{\x0a\x09\x09vec3\x20absV\x20=\x20abs(\x20v\x20);\x0a\x09\x09float\x20scaleToCube\x20=\x201.0\x20/\x20max(\x20absV.x,\x20max(\x20absV.y,\x20absV.z\x20)\x20);\x0a\x09\x09absV\x20*=\x20scaleToCube;\x0a\x09\x09v\x20*=\x20scaleToCube\x20*\x20(\x201.0\x20-\x202.0\x20*\x20texelSizeY\x20);\x0a\x09\x09vec2\x20planar\x20=\x20v.xy;\x0a\x09\x09float\x20almostATexel\x20=\x201.5\x20*\x20texelSizeY;\x0a\x09\x09float\x20almostOne\x20=\x201.0\x20-\x20almostATexel;\x0a\x09\x09if\x20(\x20absV.z\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09if\x20(\x20v.z\x20>\x200.0\x20)\x0a\x09\x09\x09\x09planar.x\x20=\x204.0\x20-\x20v.x;\x0a\x09\x09}\x20else\x20if\x20(\x20absV.x\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09float\x20signX\x20=\x20sign(\x20v.x\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.z\x20*\x20signX\x20+\x202.0\x20*\x20signX;\x0a\x09\x09}\x20else\x20if\x20(\x20absV.y\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09float\x20signY\x20=\x20sign(\x20v.y\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.x\x20+\x202.0\x20*\x20signY\x20+\x202.0;\x0a\x09\x09\x09planar.y\x20=\x20v.z\x20*\x20signY\x20-\x202.0;\x0a\x09\x09}\x0a\x09\x09return\x20vec2(\x200.125,\x200.25\x20)\x20*\x20planar\x20+\x20vec2(\x200.375,\x200.75\x20);\x0a\x09}\x0a\x09float\x20getPointShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord,\x20float\x20shadowCameraNear,\x20float\x20shadowCameraFar\x20)\x20{\x0a\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20(\x20shadowMapSize\x20*\x20vec2(\x204.0,\x202.0\x20)\x20);\x0a\x09\x09vec3\x20lightToPosition\x20=\x20shadowCoord.xyz;\x0a\x09\x09float\x20dp\x20=\x20(\x20length(\x20lightToPosition\x20)\x20-\x20shadowCameraNear\x20)\x20/\x20(\x20shadowCameraFar\x20-\x20shadowCameraNear\x20);\x09\x09dp\x20+=\x20shadowBias;\x0a\x09\x09vec3\x20bd3D\x20=\x20normalize(\x20lightToPosition\x20);\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x20||\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x0a\x09\x09\x09vec2\x20offset\x20=\x20vec2(\x20-\x201,\x201\x20)\x20*\x20shadowRadius\x20*\x20texelSize.y;\x0a\x09\x09\x09return\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxx,\x20texelSize.y\x20),\x20dp\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09return\x20texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
    'shadowmap_pars_vertex': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20directionalShadowMatrix[\x20NUM_DIR_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20spotShadowMatrix[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vSpotShadowCoord[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20pointShadowMatrix[\x20NUM_POINT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHTS\x20];\x0a\x09#endif\x0a#endif',
    'shadowmap_vertex': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vDirectionalShadowCoord[\x20i\x20]\x20=\x20directionalShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vSpotShadowCoord[\x20i\x20]\x20=\x20spotShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vPointShadowCoord[\x20i\x20]\x20=\x20pointShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a#endif',
    'shadowmask_pars_fragment': 'float\x20getShadowMask()\x20{\x0a\x09float\x20shadow\x20=\x201.0;\x0a\x09#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09DirectionalLight\x20directionalLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09directionalLight\x20=\x20directionalLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20directionalLight.shadow\x20)\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLight.shadowMapSize,\x20directionalLight.shadowBias,\x20directionalLight.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09SpotLight\x20spotLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09spotLight\x20=\x20spotLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20spotLight.shadow\x20)\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLight.shadowMapSize,\x20spotLight.shadowBias,\x20spotLight.shadowRadius,\x20vSpotShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09PointLight\x20pointLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09pointLight\x20=\x20pointLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20pointLight.shadow\x20)\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLight.shadowMapSize,\x20pointLight.shadowBias,\x20pointLight.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLight.shadowCameraNear,\x20pointLight.shadowCameraFar\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#endif\x0a\x09return\x20shadow;\x0a}',
    'skinbase_vertex': '#ifdef\x20USE_SKINNING\x0a\x09mat4\x20boneMatX\x20=\x20getBoneMatrix(\x20skinIndex.x\x20);\x0a\x09mat4\x20boneMatY\x20=\x20getBoneMatrix(\x20skinIndex.y\x20);\x0a\x09mat4\x20boneMatZ\x20=\x20getBoneMatrix(\x20skinIndex.z\x20);\x0a\x09mat4\x20boneMatW\x20=\x20getBoneMatrix(\x20skinIndex.w\x20);\x0a#endif',
    'skinning_pars_vertex': '#ifdef\x20USE_SKINNING\x0a\x09uniform\x20mat4\x20bindMatrix;\x0a\x09uniform\x20mat4\x20bindMatrixInverse;\x0a\x09#ifdef\x20BONE_TEXTURE\x0a\x09\x09uniform\x20sampler2D\x20boneTexture;\x0a\x09\x09uniform\x20int\x20boneTextureSize;\x0a\x09\x09mat4\x20getBoneMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x09\x09\x09float\x20j\x20=\x20i\x20*\x204.0;\x0a\x09\x09\x09float\x20x\x20=\x20mod(\x20j,\x20float(\x20boneTextureSize\x20)\x20);\x0a\x09\x09\x09float\x20y\x20=\x20floor(\x20j\x20/\x20float(\x20boneTextureSize\x20)\x20);\x0a\x09\x09\x09float\x20dx\x20=\x201.0\x20/\x20float(\x20boneTextureSize\x20);\x0a\x09\x09\x09float\x20dy\x20=\x201.0\x20/\x20float(\x20boneTextureSize\x20);\x0a\x09\x09\x09y\x20=\x20dy\x20*\x20(\x20y\x20+\x200.5\x20);\x0a\x09\x09\x09vec4\x20v1\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x200.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v2\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x201.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v3\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x202.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v4\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x203.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09mat4\x20bone\x20=\x20mat4(\x20v1,\x20v2,\x20v3,\x20v4\x20);\x0a\x09\x09\x09return\x20bone;\x0a\x09\x09}\x0a\x09#else\x0a\x09\x09uniform\x20mat4\x20boneMatrices[\x20MAX_BONES\x20];\x0a\x09\x09mat4\x20getBoneMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x09\x09\x09mat4\x20bone\x20=\x20boneMatrices[\x20int(i)\x20];\x0a\x09\x09\x09return\x20bone;\x0a\x09\x09}\x0a\x09#endif\x0a#endif',
    'skinning_vertex': '#ifdef\x20USE_SKINNING\x0a\x09vec4\x20skinVertex\x20=\x20bindMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0a\x09vec4\x20skinned\x20=\x20vec4(\x200.0\x20);\x0a\x09skinned\x20+=\x20boneMatX\x20*\x20skinVertex\x20*\x20skinWeight.x;\x0a\x09skinned\x20+=\x20boneMatY\x20*\x20skinVertex\x20*\x20skinWeight.y;\x0a\x09skinned\x20+=\x20boneMatZ\x20*\x20skinVertex\x20*\x20skinWeight.z;\x0a\x09skinned\x20+=\x20boneMatW\x20*\x20skinVertex\x20*\x20skinWeight.w;\x0a\x09transformed\x20=\x20(\x20bindMatrixInverse\x20*\x20skinned\x20).xyz;\x0a#endif',
    'skinnormal_vertex': '#ifdef\x20USE_SKINNING\x0a\x09mat4\x20skinMatrix\x20=\x20mat4(\x200.0\x20);\x0a\x09skinMatrix\x20+=\x20skinWeight.x\x20*\x20boneMatX;\x0a\x09skinMatrix\x20+=\x20skinWeight.y\x20*\x20boneMatY;\x0a\x09skinMatrix\x20+=\x20skinWeight.z\x20*\x20boneMatZ;\x0a\x09skinMatrix\x20+=\x20skinWeight.w\x20*\x20boneMatW;\x0a\x09skinMatrix\x20\x20=\x20bindMatrixInverse\x20*\x20skinMatrix\x20*\x20bindMatrix;\x0a\x09objectNormal\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectNormal,\x200.0\x20)\x20).xyz;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09objectTangent\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectTangent,\x200.0\x20)\x20).xyz;\x0a\x09#endif\x0a#endif',
    'specularmap_fragment': 'float\x20specularStrength;\x0a#ifdef\x20USE_SPECULARMAP\x0a\x09vec4\x20texelSpecular\x20=\x20texture2D(\x20specularMap,\x20vUv\x20);\x0a\x09specularStrength\x20=\x20texelSpecular.r;\x0a#else\x0a\x09specularStrength\x20=\x201.0;\x0a#endif',
    'specularmap_pars_fragment': '#ifdef\x20USE_SPECULARMAP\x0a\x09uniform\x20sampler2D\x20specularMap;\x0a#endif',
    'tonemapping_fragment': '#if\x20defined(\x20TONE_MAPPING\x20)\x0a\x09gl_FragColor.rgb\x20=\x20toneMapping(\x20gl_FragColor.rgb\x20);\x0a#endif',
    'tonemapping_pars_fragment': '#ifndef\x20saturate\x0a\x09#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#endif\x0auniform\x20float\x20toneMappingExposure;\x0auniform\x20float\x20toneMappingWhitePoint;\x0avec3\x20LinearToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09return\x20toneMappingExposure\x20*\x20color;\x0a}\x0avec3\x20ReinhardToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20color\x20/\x20(\x20vec3(\x201.0\x20)\x20+\x20color\x20)\x20);\x0a}\x0a#define\x20Uncharted2Helper(\x20x\x20)\x20max(\x20(\x20(\x20x\x20*\x20(\x200.15\x20*\x20x\x20+\x200.10\x20*\x200.50\x20)\x20+\x200.20\x20*\x200.02\x20)\x20/\x20(\x20x\x20*\x20(\x200.15\x20*\x20x\x20+\x200.50\x20)\x20+\x200.20\x20*\x200.30\x20)\x20)\x20-\x200.02\x20/\x200.30,\x20vec3(\x200.0\x20)\x20)\x0avec3\x20Uncharted2ToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20Uncharted2Helper(\x20color\x20)\x20/\x20Uncharted2Helper(\x20vec3(\x20toneMappingWhitePoint\x20)\x20)\x20);\x0a}\x0avec3\x20OptimizedCineonToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09color\x20=\x20max(\x20vec3(\x200.0\x20),\x20color\x20-\x200.004\x20);\x0a\x09return\x20pow(\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x200.5\x20)\x20)\x20/\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x201.7\x20)\x20+\x200.06\x20),\x20vec3(\x202.2\x20)\x20);\x0a}\x0avec3\x20ACESFilmicToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20(\x20color\x20*\x20(\x202.51\x20*\x20color\x20+\x200.03\x20)\x20)\x20/\x20(\x20color\x20*\x20(\x202.43\x20*\x20color\x20+\x200.59\x20)\x20+\x200.14\x20)\x20);\x0a}',
    'uv_pars_fragment': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09varying\x20vec2\x20vUv;\x0a#endif',
    'uv_pars_vertex': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09varying\x20vec2\x20vUv;\x0a\x09uniform\x20mat3\x20uvTransform;\x0a#endif',
    'uv_vertex': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a#endif',
    'uv2_pars_fragment': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09varying\x20vec2\x20vUv2;\x0a#endif',
    'uv2_pars_vertex': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09attribute\x20vec2\x20uv2;\x0a\x09varying\x20vec2\x20vUv2;\x0a#endif',
    'uv2_vertex': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09vUv2\x20=\x20uv2;\x0a#endif',
    'worldpos_vertex': '#if\x20defined(\x20USE_ENVMAP\x20)\x20||\x20defined(\x20DISTANCE\x20)\x20||\x20defined\x20(\x20USE_SHADOWMAP\x20)\x0a\x09vec4\x20worldPosition\x20=\x20modelMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0a#endif',
    'background_frag': 'uniform\x20sampler2D\x20t2D;\x0avarying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0a\x09vec4\x20texColor\x20=\x20texture2D(\x20t2D,\x20vUv\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
    'background_vert': 'varying\x20vec2\x20vUv;\x0auniform\x20mat3\x20uvTransform;\x0avoid\x20main()\x20{\x0a\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a\x09gl_Position\x20=\x20vec4(\x20position.xy,\x201.0,\x201.0\x20);\x0a}',
    'cube_frag': 'uniform\x20samplerCube\x20tCube;\x0auniform\x20float\x20tFlip;\x0auniform\x20float\x20opacity;\x0avarying\x20vec3\x20vWorldDirection;\x0avoid\x20main()\x20{\x0a\x09vec4\x20texColor\x20=\x20textureCube(\x20tCube,\x20vec3(\x20tFlip\x20*\x20vWorldDirection.x,\x20vWorldDirection.yz\x20)\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09gl_FragColor.a\x20*=\x20opacity;\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
    'cube_vert': 'varying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09gl_Position.z\x20=\x20gl_Position.w;\x0a}',
    'depth_frag': '#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09uniform\x20float\x20opacity;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09\x09diffuseColor.a\x20=\x20opacity;\x0a\x09#endif\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09\x09gl_FragColor\x20=\x20vec4(\x20vec3(\x201.0\x20-\x20gl_FragCoord.z\x20),\x20opacity\x20);\x0a\x09#elif\x20DEPTH_PACKING\x20==\x203201\x0a\x09\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20gl_FragCoord.z\x20);\x0a\x09#endif\x0a}',
    'depth_vert': '#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a}',
    'distanceRGBA_frag': '#define\x20DISTANCE\x0auniform\x20vec3\x20referencePosition;\x0auniform\x20float\x20nearDistance;\x0auniform\x20float\x20farDistance;\x0avarying\x20vec3\x20vWorldPosition;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main\x20()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09float\x20dist\x20=\x20length(\x20vWorldPosition\x20-\x20referencePosition\x20);\x0a\x09dist\x20=\x20(\x20dist\x20-\x20nearDistance\x20)\x20/\x20(\x20farDistance\x20-\x20nearDistance\x20);\x0a\x09dist\x20=\x20saturate(\x20dist\x20);\x0a\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20dist\x20);\x0a}',
    'distanceRGBA_vert': '#define\x20DISTANCE\x0avarying\x20vec3\x20vWorldPosition;\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a}',
    'equirect_frag': 'uniform\x20sampler2D\x20tEquirect;\x0avarying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vec3\x20direction\x20=\x20normalize(\x20vWorldDirection\x20);\x0a\x09vec2\x20sampleUV;\x0a\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20direction.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09sampleUV.x\x20=\x20atan(\x20direction.z,\x20direction.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09vec4\x20texColor\x20=\x20texture2D(\x20tEquirect,\x20sampleUV\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
    'equirect_vert': 'varying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a}',
    'linedashed_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0auniform\x20float\x20dashSize;\x0auniform\x20float\x20totalSize;\x0avarying\x20float\x20vLineDistance;\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09if\x20(\x20mod(\x20vLineDistance,\x20totalSize\x20)\x20>\x20dashSize\x20)\x20{\x0a\x09\x09discard;\x0a\x09}\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
    'linedashed_vert': 'uniform\x20float\x20scale;\x0aattribute\x20float\x20lineDistance;\x0avarying\x20float\x20vLineDistance;\x0a#include\x20<common>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<color_vertex>\x0a\x09vLineDistance\x20=\x20scale\x20*\x20lineDistance;\x0a\x09vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
    'meshbasic_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20vec3(\x201.0\x20);\x0a\x09#endif\x0a\x09#include\x20<aomap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20diffuseColor.rgb;\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.indirectDiffuse;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
    'meshbasic_vert': '#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_ENVMAP\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
    'meshlambert_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09varying\x20vec3\x20vLightBack;\x0a\x09varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20(\x20gl_FrontFacing\x20)\x20?\x20vIndirectFront\x20:\x20vIndirectBack;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20vIndirectFront;\x0a\x09#endif\x0a\x09#include\x20<lightmap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09reflectedLight.directDiffuse\x20=\x20(\x20gl_FrontFacing\x20)\x20?\x20vLightFront\x20:\x20vLightBack;\x0a\x09#else\x0a\x09\x09reflectedLight.directDiffuse\x20=\x20vLightFront;\x0a\x09#endif\x0a\x09reflectedLight.directDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20)\x20*\x20getShadowMask();\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
    'meshlambert_vert': '#define\x20LAMBERT\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09varying\x20vec3\x20vLightBack;\x0a\x09varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<lights_lambert_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
    'meshmatcap_frag': '#define\x20MATCAP\x0auniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0auniform\x20sampler2D\x20matcap;\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09vec3\x20viewDir\x20=\x20normalize(\x20vViewPosition\x20);\x0a\x09vec3\x20x\x20=\x20normalize(\x20vec3(\x20viewDir.z,\x200.0,\x20-\x20viewDir.x\x20)\x20);\x0a\x09vec3\x20y\x20=\x20cross(\x20viewDir,\x20x\x20);\x0a\x09vec2\x20uv\x20=\x20vec2(\x20dot(\x20x,\x20normal\x20),\x20dot(\x20y,\x20normal\x20)\x20)\x20*\x200.495\x20+\x200.5;\x0a\x09#ifdef\x20USE_MATCAP\x0a\x09\x09vec4\x20matcapColor\x20=\x20texture2D(\x20matcap,\x20uv\x20);\x0a\x09\x09matcapColor\x20=\x20matcapTexelToLinear(\x20matcapColor\x20);\x0a\x09#else\x0a\x09\x09vec4\x20matcapColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#endif\x0a\x09vec3\x20outgoingLight\x20=\x20diffuseColor.rgb\x20*\x20matcapColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
    'meshmatcap_vert': '#define\x20MATCAP\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#ifndef\x20FLAT_SHADED\x0a\x09\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a}',
    'meshphong_frag': '#define\x20PHONG\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20vec3\x20specular;\x0auniform\x20float\x20shininess;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<gradientmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<lights_phong_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09#include\x20<lights_phong_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular\x20+\x20totalEmissiveRadiance;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
    'meshphong_vert': '#define\x20PHONG\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
    'meshphysical_frag': '#define\x20PHYSICAL\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20roughness;\x0auniform\x20float\x20metalness;\x0auniform\x20float\x20opacity;\x0a#ifndef\x20STANDARD\x0a\x09uniform\x20float\x20clearCoat;\x0a\x09uniform\x20float\x20clearCoatRoughness;\x0a#endif\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<cube_uv_reflection_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<envmap_physical_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<lights_physical_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<roughnessmap_pars_fragment>\x0a#include\x20<metalnessmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<roughnessmap_fragment>\x0a\x09#include\x20<metalnessmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09#include\x20<lights_physical_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular\x20+\x20totalEmissiveRadiance;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
    'meshphysical_vert': '#define\x20PHYSICAL\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vTangent\x20=\x20normalize(\x20transformedTangent\x20);\x0a\x09\x09vBitangent\x20=\x20normalize(\x20cross(\x20vNormal,\x20vTangent\x20)\x20*\x20tangent.w\x20);\x0a\x09#endif\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
    'normal_frag': '#define\x20NORMAL\x0auniform\x20float\x20opacity;\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09gl_FragColor\x20=\x20vec4(\x20packNormalToRGB(\x20normal\x20),\x20opacity\x20);\x0a}',
    'normal_vert': '#define\x20NORMAL\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vTangent\x20=\x20normalize(\x20transformedTangent\x20);\x0a\x09\x09vBitangent\x20=\x20normalize(\x20cross(\x20vNormal,\x20vTangent\x20)\x20*\x20tangent.w\x20);\x0a\x09#endif\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a#endif\x0a}',
    'points_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<map_particle_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_particle_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
    'points_vert': 'uniform\x20float\x20size;\x0auniform\x20float\x20scale;\x0a#include\x20<common>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09gl_PointSize\x20=\x20size;\x0a\x09#ifdef\x20USE_SIZEATTENUATION\x0a\x09\x09bool\x20isPerspective\x20=\x20(\x20projectionMatrix[\x202\x20][\x203\x20]\x20==\x20-\x201.0\x20);\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20gl_PointSize\x20*=\x20(\x20scale\x20/\x20-\x20mvPosition.z\x20);\x0a\x09#endif\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
    'shadow_frag': 'uniform\x20vec3\x20color;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09gl_FragColor\x20=\x20vec4(\x20color,\x20opacity\x20*\x20(\x201.0\x20-\x20getShadowMask()\x20)\x20);\x0a\x09#include\x20<fog_fragment>\x0a}',
    'shadow_vert': '#include\x20<fog_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
    'sprite_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
    'sprite_vert': 'uniform\x20float\x20rotation;\x0auniform\x20vec2\x20center;\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x09vec2\x20scale;\x0a\x09scale.x\x20=\x20length(\x20vec3(\x20modelMatrix[\x200\x20].x,\x20modelMatrix[\x200\x20].y,\x20modelMatrix[\x200\x20].z\x20)\x20);\x0a\x09scale.y\x20=\x20length(\x20vec3(\x20modelMatrix[\x201\x20].x,\x20modelMatrix[\x201\x20].y,\x20modelMatrix[\x201\x20].z\x20)\x20);\x0a\x09#ifndef\x20USE_SIZEATTENUATION\x0a\x09\x09bool\x20isPerspective\x20=\x20(\x20projectionMatrix[\x202\x20][\x203\x20]\x20==\x20-\x201.0\x20);\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20scale\x20*=\x20-\x20mvPosition.z;\x0a\x09#endif\x0a\x09vec2\x20alignedPosition\x20=\x20(\x20position.xy\x20-\x20(\x20center\x20-\x20vec2(\x200.5\x20)\x20)\x20)\x20*\x20scale;\x0a\x09vec2\x20rotatedPosition;\x0a\x09rotatedPosition.x\x20=\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.x\x20-\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x09rotatedPosition.y\x20=\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.x\x20+\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x09mvPosition.xy\x20+=\x20rotatedPosition;\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}'
  };

  function vQ(bf) {
    var bg = {};
    for (var bh in bf)
      for (var bi in bg[bh] = {}, bf[bh]) {
        var bF = bf[bh][bi];
        bF && (bF['isColor'] || bF['isMatrix3'] || bF['isMatrix4'] || bF['isVector2'] || bF['isVector3'] || bF['isVector4'] || bF['isTexture']) ? bg[bh][bi] = bF['clone']() : Array['isArray'](bF) ? bg[bh][bi] = bF['slice']() : bg[bh][bi] = bF;
      }
    return bg;
  }

  function vW(bf) {
    for (var bg = {}, bh = 0x0; bh < bf['length']; bh++) {
      var bi = vQ(bf[bh]);
      for (var bF in bi) bg[bF] = bi[bF];
    }
    return bg;
  }
  var w2, w3, w4, w5 = {
      'clone': vQ,
      'merge': vW
    },
    w6 = {
      'aliceblue': 0xf0f8ff,
      'antiquewhite': 0xfaebd7,
      'aqua': 0xffff,
      'aquamarine': 0x7fffd4,
      'azure': 0xf0ffff,
      'beige': 0xf5f5dc,
      'bisque': 0xffe4c4,
      'black': 0x0,
      'blanchedalmond': 0xffebcd,
      'blue': 0xff,
      'blueviolet': 0x8a2be2,
      'brown': 0xa52a2a,
      'burlywood': 0xdeb887,
      'cadetblue': 0x5f9ea0,
      'chartreuse': 0x7fff00,
      'chocolate': 0xd2691e,
      'coral': 0xff7f50,
      'cornflowerblue': 0x6495ed,
      'cornsilk': 0xfff8dc,
      'crimson': 0xdc143c,
      'cyan': 0xffff,
      'darkblue': 0x8b,
      'darkcyan': 0x8b8b,
      'darkgoldenrod': 0xb8860b,
      'darkgray': 0xa9a9a9,
      'darkgreen': 0x6400,
      'darkgrey': 0xa9a9a9,
      'darkkhaki': 0xbdb76b,
      'darkmagenta': 0x8b008b,
      'darkolivegreen': 0x556b2f,
      'darkorange': 0xff8c00,
      'darkorchid': 0x9932cc,
      'darkred': 0x8b0000,
      'darksalmon': 0xe9967a,
      'darkseagreen': 0x8fbc8f,
      'darkslateblue': 0x483d8b,
      'darkslategray': 0x2f4f4f,
      'darkslategrey': 0x2f4f4f,
      'darkturquoise': 0xced1,
      'darkviolet': 0x9400d3,
      'deeppink': 0xff1493,
      'deepskyblue': 0xbfff,
      'dimgray': 0x696969,
      'dimgrey': 0x696969,
      'dodgerblue': 0x1e90ff,
      'firebrick': 0xb22222,
      'floralwhite': 0xfffaf0,
      'forestgreen': 0x228b22,
      'fuchsia': 0xff00ff,
      'gainsboro': 0xdcdcdc,
      'ghostwhite': 0xf8f8ff,
      'gold': 0xffd700,
      'goldenrod': 0xdaa520,
      'gray': 0x808080,
      'green': 0x8000,
      'greenyellow': 0xadff2f,
      'grey': 0x808080,
      'honeydew': 0xf0fff0,
      'hotpink': 0xff69b4,
      'indianred': 0xcd5c5c,
      'indigo': 0x4b0082,
      'ivory': 0xfffff0,
      'khaki': 0xf0e68c,
      'lavender': 0xe6e6fa,
      'lavenderblush': 0xfff0f5,
      'lawngreen': 0x7cfc00,
      'lemonchiffon': 0xfffacd,
      'lightblue': 0xadd8e6,
      'lightcoral': 0xf08080,
      'lightcyan': 0xe0ffff,
      'lightgoldenrodyellow': 0xfafad2,
      'lightgray': 0xd3d3d3,
      'lightgreen': 0x90ee90,
      'lightgrey': 0xd3d3d3,
      'lightpink': 0xffb6c1,
      'lightsalmon': 0xffa07a,
      'lightseagreen': 0x20b2aa,
      'lightskyblue': 0x87cefa,
      'lightslategray': 0x778899,
      'lightslategrey': 0x778899,
      'lightsteelblue': 0xb0c4de,
      'lightyellow': 0xffffe0,
      'lime': 0xff00,
      'limegreen': 0x32cd32,
      'linen': 0xfaf0e6,
      'magenta': 0xff00ff,
      'maroon': 0x800000,
      'mediumaquamarine': 0x66cdaa,
      'mediumblue': 0xcd,
      'mediumorchid': 0xba55d3,
      'mediumpurple': 0x9370db,
      'mediumseagreen': 0x3cb371,
      'mediumslateblue': 0x7b68ee,
      'mediumspringgreen': 0xfa9a,
      'mediumturquoise': 0x48d1cc,
      'mediumvioletred': 0xc71585,
      'midnightblue': 0x191970,
      'mintcream': 0xf5fffa,
      'mistyrose': 0xffe4e1,
      'moccasin': 0xffe4b5,
      'navajowhite': 0xffdead,
      'navy': 0x80,
      'oldlace': 0xfdf5e6,
      'olive': 0x808000,
      'olivedrab': 0x6b8e23,
      'orange': 0xffa500,
      'orangered': 0xff4500,
      'orchid': 0xda70d6,
      'palegoldenrod': 0xeee8aa,
      'palegreen': 0x98fb98,
      'paleturquoise': 0xafeeee,
      'palevioletred': 0xdb7093,
      'papayawhip': 0xffefd5,
      'peachpuff': 0xffdab9,
      'peru': 0xcd853f,
      'pink': 0xffc0cb,
      'plum': 0xdda0dd,
      'powderblue': 0xb0e0e6,
      'purple': 0x800080,
      'rebeccapurple': 0x663399,
      'red': 0xff0000,
      'rosybrown': 0xbc8f8f,
      'royalblue': 0x4169e1,
      'saddlebrown': 0x8b4513,
      'salmon': 0xfa8072,
      'sandybrown': 0xf4a460,
      'seagreen': 0x2e8b57,
      'seashell': 0xfff5ee,
      'sienna': 0xa0522d,
      'silver': 0xc0c0c0,
      'skyblue': 0x87ceeb,
      'slateblue': 0x6a5acd,
      'slategray': 0x708090,
      'slategrey': 0x708090,
      'snow': 0xfffafa,
      'springgreen': 0xff7f,
      'steelblue': 0x4682b4,
      'tan': 0xd2b48c,
      'teal': 0x8080,
      'thistle': 0xd8bfd8,
      'tomato': 0xff6347,
      'turquoise': 0x40e0d0,
      'violet': 0xee82ee,
      'wheat': 0xf5deb3,
      'white': 0xffffff,
      'whitesmoke': 0xf5f5f5,
      'yellow': 0xffff00,
      'yellowgreen': 0x9acd32
    };

  function w7(bf, bg, bh) {
    return void 0x0 === bg && void 0x0 === bh ? this['set'](bf) : this['setRGB'](bf, bg, bh);
  }
  Object['assign'](w7['prototype'], {
    'isColor': !0x0,
    'r': 0x1,
    'g': 0x1,
    'b': 0x1,
    'set': function(bf) {
      return bf && bf['isColor'] ? this['copy'](bf) : 'number' == typeof bf ? this['setHex'](bf) : 'string' == typeof bf && this['setStyle'](bf), this;
    },
    'setScalar': function(bf) {
      return this['r'] = bf, this['g'] = bf, this['b'] = bf, this;
    },
    'setHex': function(bf) {
      return bf = Math['floor'](bf), this['r'] = (bf >> 0x10 & 0xff) / 0xff, this['g'] = (bf >> 0x8 & 0xff) / 0xff, this['b'] = (0xff & bf) / 0xff, this;
    },
    'setRGB': function(bf, bg, bh) {
      return this['r'] = bf, this['g'] = bg, this['b'] = bh, this;
    },
    'setHSL': function() {
      function bf(bf, bg, bh) {
        return bh < 0x0 && (bh += 0x1), bh > 0x1 && (bh -= 0x1), bh < 0x1 / 0x6 ? bf + 0x6 * (bg - bf) * bh : bh < 0.5 ? bg : bh < 0x2 / 0x3 ? bf + 0x6 * (bg - bf) * (0x2 / 0x3 - bh) : bf;
      }
      return function(bg, bh, bi) {
        if (bg = e2['euclideanModulo'](bg, 0x1), bh = e2['clamp'](bh, 0x0, 0x1), bi = e2['clamp'](bi, 0x0, 0x1), 0x0 === bh) this['r'] = this['g'] = this['b'] = bi;
        else {
          var bF = bi <= 0.5 ? bi * (0x1 + bh) : bi + bh - bi * bh,
            bG = 0x2 * bi - bF;
          this['r'] = bf(bG, bF, bg + 0x1 / 0x3), this['g'] = bf(bG, bF, bg), this['b'] = bf(bG, bF, bg - 0x1 / 0x3);
        }
        return this;
      };
    }(),
    'setStyle': function(bf) {
      function bg(bg) {
        void 0x0 !== bg && parseFloat(bg) < 0x1 && console['warn']('THREE.Color:\x20Alpha\x20component\x20of\x20' + bf + '\x20will\x20be\x20ignored.');
      }
      var bh;
      if (bh = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/ ['exec'](bf)) {
        var bi, bF = bh[0x1],
          bG = bh[0x2];
        switch (bF) {
          case 'rgb':
          case 'rgba':
            if (bi = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/ ['exec'](bG)) return this['r'] = Math['min'](0xff, parseInt(bi[0x1], 0xa)) / 0xff, this['g'] = Math['min'](0xff, parseInt(bi[0x2], 0xa)) / 0xff, this['b'] = Math['min'](0xff, parseInt(bi[0x3], 0xa)) / 0xff, bg(bi[0x5]), this;
            if (bi = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/ ['exec'](bG)) return this['r'] = Math['min'](0x64, parseInt(bi[0x1], 0xa)) / 0x64, this['g'] = Math['min'](0x64, parseInt(bi[0x2], 0xa)) / 0x64, this['b'] = Math['min'](0x64, parseInt(bi[0x3], 0xa)) / 0x64, bg(bi[0x5]), this;
            break;
          case 'hsl':
          case 'hsla':
            if (bi = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/ ['exec'](bG)) {
              var bH = parseFloat(bi[0x1]) / 0x168,
                bI = parseInt(bi[0x2], 0xa) / 0x64,
                bJ = parseInt(bi[0x3], 0xa) / 0x64;
              return bg(bi[0x5]), this['setHSL'](bH, bI, bJ);
            }
        }
      } else if (bh = /^\#([A-Fa-f0-9]+)$/ ['exec'](bf)) {
        var bK, bL = (bK = bh[0x1])['length'];
        if (0x3 === bL) return this['r'] = parseInt(bK['charAt'](0x0) + bK['charAt'](0x0), 0x10) / 0xff, this['g'] = parseInt(bK['charAt'](0x1) + bK['charAt'](0x1), 0x10) / 0xff, this['b'] = parseInt(bK['charAt'](0x2) + bK['charAt'](0x2), 0x10) / 0xff, this;
        if (0x6 === bL) return this['r'] = parseInt(bK['charAt'](0x0) + bK['charAt'](0x1), 0x10) / 0xff, this['g'] = parseInt(bK['charAt'](0x2) + bK['charAt'](0x3), 0x10) / 0xff, this['b'] = parseInt(bK['charAt'](0x4) + bK['charAt'](0x5), 0x10) / 0xff, this;
      }
      bf && bf['length'] > 0x0 && (void 0x0 !== (bK = w6[bf]) ? this['setHex'](bK) : console['warn']('THREE.Color:\x20Unknown\x20color\x20' + bf));
      return this;
    },
    'clone': function() {
      return new this['constructor'](this['r'], this['g'], this['b']);
    },
    'copy': function(bf) {
      return this['r'] = bf['r'], this['g'] = bf['g'], this['b'] = bf['b'], this;
    },
    'copyGammaToLinear': function(bf, bg) {
      return void 0x0 === bg && (bg = 0x2), this['r'] = Math['pow'](bf['r'], bg), this['g'] = Math['pow'](bf['g'], bg), this['b'] = Math['pow'](bf['b'], bg), this;
    },
    'copyLinearToGamma': function(bf, bg) {
      void 0x0 === bg && (bg = 0x2);
      var bh = bg > 0x0 ? 0x1 / bg : 0x1;
      return this['r'] = Math['pow'](bf['r'], bh), this['g'] = Math['pow'](bf['g'], bh), this['b'] = Math['pow'](bf['b'], bh), this;
    },
    'convertGammaToLinear': function(bf) {
      return this['copyGammaToLinear'](this, bf), this;
    },
    'convertLinearToGamma': function(bf) {
      return this['copyLinearToGamma'](this, bf), this;
    },
    'copySRGBToLinear': function() {
      function bf(bf) {
        return bf < 0.04045 ? 0.0773993808 * bf : Math['pow'](0.9478672986 * bf + 0.0521327014, 2.4);
      }
      return function(bg) {
        return this['r'] = bf(bg['r']), this['g'] = bf(bg['g']), this['b'] = bf(bg['b']), this;
      };
    }(),
    'copyLinearToSRGB': function() {
      function bf(bf) {
        return bf < 0.0031308 ? 12.92 * bf : 1.055 * Math['pow'](bf, 0.41666) - 0.055;
      }
      return function(bg) {
        return this['r'] = bf(bg['r']), this['g'] = bf(bg['g']), this['b'] = bf(bg['b']), this;
      };
    }(),
    'convertSRGBToLinear': function() {
      return this['copySRGBToLinear'](this), this;
    },
    'convertLinearToSRGB': function() {
      return this['copyLinearToSRGB'](this), this;
    },
    'getHex': function() {
      return 0xff * this['r'] << 0x10 ^ 0xff * this['g'] << 0x8 ^ 0xff * this['b'] << 0x0;
    },
    'getHexString': function() {
      return ('000000' + this['getHex']()['toString'](0x10))['slice'](-0x6);
    },
    'getHSL': function(bf) {
      void 0x0 === bf && (console['warn']('THREE.Color:\x20.getHSL()\x20target\x20is\x20now\x20required'), bf = {
        'h': 0x0,
        's': 0x0,
        'l': 0x0
      });
      var bg, bh, bi = this['r'],
        bF = this['g'],
        bG = this['b'],
        bH = Math['max'](bi, bF, bG),
        bI = Math['min'](bi, bF, bG),
        bJ = (bI + bH) / 0x2;
      if (bI === bH) bg = 0x0, bh = 0x0;
      else {
        var bK = bH - bI;
        switch (bh = bJ <= 0.5 ? bK / (bH + bI) : bK / (0x2 - bH - bI), bH) {
          case bi:
            bg = (bF - bG) / bK + (bF < bG ? 0x6 : 0x0);
            break;
          case bF:
            bg = (bG - bi) / bK + 0x2;
            break;
          case bG:
            bg = (bi - bF) / bK + 0x4;
        }
        bg /= 0x6;
      }
      return bf['h'] = bg, bf['s'] = bh, bf['l'] = bJ, bf;
    },
    'getStyle': function() {
      return 'rgb(' + (0xff * this['r'] | 0x0) + ',' + (0xff * this['g'] | 0x0) + ',' + (0xff * this['b'] | 0x0) + ')';
    },
    'offsetHSL': (w4 = {}, function(bf, bg, bh) {
      return this['getHSL'](w4), w4['h'] += bf, w4['s'] += bg, w4['l'] += bh, this['setHSL'](w4['h'], w4['s'], w4['l']), this;
    }),
    'add': function(bf) {
      return this['r'] += bf['r'], this['g'] += bf['g'], this['b'] += bf['b'], this;
    },
    'addColors': function(bf, bg) {
      return this['r'] = bf['r'] + bg['r'], this['g'] = bf['g'] + bg['g'], this['b'] = bf['b'] + bg['b'], this;
    },
    'addScalar': function(bf) {
      return this['r'] += bf, this['g'] += bf, this['b'] += bf, this;
    },
    'sub': function(bf) {
      return this['r'] = Math['max'](0x0, this['r'] - bf['r']), this['g'] = Math['max'](0x0, this['g'] - bf['g']), this['b'] = Math['max'](0x0, this['b'] - bf['b']), this;
    },
    'multiply': function(bf) {
      return this['r'] *= bf['r'], this['g'] *= bf['g'], this['b'] *= bf['b'], this;
    },
    'multiplyScalar': function(bf) {
      return this['r'] *= bf, this['g'] *= bf, this['b'] *= bf, this;
    },
    'lerp': function(bf, bg) {
      return this['r'] += (bf['r'] - this['r']) * bg, this['g'] += (bf['g'] - this['g']) * bg, this['b'] += (bf['b'] - this['b']) * bg, this;
    },
    'lerpHSL': (w2 = {
      'h': 0x0,
      's': 0x0,
      'l': 0x0
    }, w3 = {
      'h': 0x0,
      's': 0x0,
      'l': 0x0
    }, function(bf, bg) {
      this['getHSL'](w2), bf['getHSL'](w3);
      var bh = e2['lerp'](w2['h'], w3['h'], bg),
        bi = e2['lerp'](w2['s'], w3['s'], bg),
        bF = e2['lerp'](w2['l'], w3['l'], bg);
      return this['setHSL'](bh, bi, bF), this;
    }),
    'equals': function(bf) {
      return bf['r'] === this['r'] && bf['g'] === this['g'] && bf['b'] === this['b'];
    },
    'fromArray': function(bf, bg) {
      return void 0x0 === bg && (bg = 0x0), this['r'] = bf[bg], this['g'] = bf[bg + 0x1], this['b'] = bf[bg + 0x2], this;
    },
    'toArray': function(bf, bg) {
      return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['r'], bf[bg + 0x1] = this['g'], bf[bg + 0x2] = this['b'], bf;
    },
    'toJSON': function() {
      return this['getHex']();
    }
  });
  var xm, xn = {
      'common': {
        'diffuse': {
          'value': new w7(0xeeeeee)
        },
        'opacity': {
          'value': 0x1
        },
        'map': {
          'value': null
        },
        'uvTransform': {
          'value': new eO()
        },
        'alphaMap': {
          'value': null
        }
      },
      'specularmap': {
        'specularMap': {
          'value': null
        }
      },
      'envmap': {
        'envMap': {
          'value': null
        },
        'flipEnvMap': {
          'value': -0x1
        },
        'reflectivity': {
          'value': 0x1
        },
        'refractionRatio': {
          'value': 0.98
        },
        'maxMipLevel': {
          'value': 0x0
        }
      },
      'aomap': {
        'aoMap': {
          'value': null
        },
        'aoMapIntensity': {
          'value': 0x1
        }
      },
      'lightmap': {
        'lightMap': {
          'value': null
        },
        'lightMapIntensity': {
          'value': 0x1
        }
      },
      'emissivemap': {
        'emissiveMap': {
          'value': null
        }
      },
      'bumpmap': {
        'bumpMap': {
          'value': null
        },
        'bumpScale': {
          'value': 0x1
        }
      },
      'normalmap': {
        'normalMap': {
          'value': null
        },
        'normalScale': {
          'value': new eC(0x1, 0x1)
        }
      },
      'displacementmap': {
        'displacementMap': {
          'value': null
        },
        'displacementScale': {
          'value': 0x1
        },
        'displacementBias': {
          'value': 0x0
        }
      },
      'roughnessmap': {
        'roughnessMap': {
          'value': null
        }
      },
      'metalnessmap': {
        'metalnessMap': {
          'value': null
        }
      },
      'gradientmap': {
        'gradientMap': {
          'value': null
        }
      },
      'fog': {
        'fogDensity': {
          'value': 0.00025
        },
        'fogNear': {
          'value': 0x1
        },
        'fogFar': {
          'value': 0x7d0
        },
        'fogColor': {
          'value': new w7(0xffffff)
        }
      },
      'lights': {
        'ambientLightColor': {
          'value': []
        },
        'lightProbe': {
          'value': []
        },
        'directionalLights': {
          'value': [],
          'properties': {
            'direction': {},
            'color': {},
            'shadow': {},
            'shadowBias': {},
            'shadowRadius': {},
            'shadowMapSize': {}
          }
        },
        'directionalShadowMap': {
          'value': []
        },
        'directionalShadowMatrix': {
          'value': []
        },
        'spotLights': {
          'value': [],
          'properties': {
            'color': {},
            'position': {},
            'direction': {},
            'distance': {},
            'coneCos': {},
            'penumbraCos': {},
            'decay': {},
            'shadow': {},
            'shadowBias': {},
            'shadowRadius': {},
            'shadowMapSize': {}
          }
        },
        'spotShadowMap': {
          'value': []
        },
        'spotShadowMatrix': {
          'value': []
        },
        'pointLights': {
          'value': [],
          'properties': {
            'color': {},
            'position': {},
            'decay': {},
            'distance': {},
            'shadow': {},
            'shadowBias': {},
            'shadowRadius': {},
            'shadowMapSize': {},
            'shadowCameraNear': {},
            'shadowCameraFar': {}
          }
        },
        'pointShadowMap': {
          'value': []
        },
        'pointShadowMatrix': {
          'value': []
        },
        'hemisphereLights': {
          'value': [],
          'properties': {
            'direction': {},
            'skyColor': {},
            'groundColor': {}
          }
        },
        'rectAreaLights': {
          'value': [],
          'properties': {
            'color': {},
            'position': {},
            'width': {},
            'height': {}
          }
        }
      },
      'points': {
        'diffuse': {
          'value': new w7(0xeeeeee)
        },
        'opacity': {
          'value': 0x1
        },
        'size': {
          'value': 0x1
        },
        'scale': {
          'value': 0x1
        },
        'map': {
          'value': null
        },
        'uvTransform': {
          'value': new eO()
        }
      },
      'sprite': {
        'diffuse': {
          'value': new w7(0xeeeeee)
        },
        'opacity': {
          'value': 0x1
        },
        'center': {
          'value': new eC(0.5, 0.5)
        },
        'rotation': {
          'value': 0x0
        },
        'map': {
          'value': null
        },
        'uvTransform': {
          'value': new eO()
        }
      }
    },
    xo = {
      'basic': {
        'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['fog']]),
        'vertexShader': vP['meshbasic_vert'],
        'fragmentShader': vP['meshbasic_frag']
      },
      'lambert': {
        'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['fog'], xn['lights'], {
          'emissive': {
            'value': new w7(0x0)
          }
        }]),
        'vertexShader': vP['meshlambert_vert'],
        'fragmentShader': vP['meshlambert_frag']
      },
      'phong': {
        'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['gradientmap'], xn['fog'], xn['lights'], {
          'emissive': {
            'value': new w7(0x0)
          },
          'specular': {
            'value': new w7(0x111111)
          },
          'shininess': {
            'value': 0x1e
          }
        }]),
        'vertexShader': vP['meshphong_vert'],
        'fragmentShader': vP['meshphong_frag']
      },
      'standard': {
        'uniforms': vW([xn['common'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['roughnessmap'], xn['metalnessmap'], xn['fog'], xn['lights'], {
          'emissive': {
            'value': new w7(0x0)
          },
          'roughness': {
            'value': 0.5
          },
          'metalness': {
            'value': 0.5
          },
          'envMapIntensity': {
            'value': 0x1
          }
        }]),
        'vertexShader': vP['meshphysical_vert'],
        'fragmentShader': vP['meshphysical_frag']
      },
      'matcap': {
        'uniforms': vW([xn['common'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['fog'], {
          'matcap': {
            'value': null
          }
        }]),
        'vertexShader': vP['meshmatcap_vert'],
        'fragmentShader': vP['meshmatcap_frag']
      },
      'points': {
        'uniforms': vW([xn['points'], xn['fog']]),
        'vertexShader': vP['points_vert'],
        'fragmentShader': vP['points_frag']
      },
      'dashed': {
        'uniforms': vW([xn['common'], xn['fog'], {
          'scale': {
            'value': 0x1
          },
          'dashSize': {
            'value': 0x1
          },
          'totalSize': {
            'value': 0x2
          }
        }]),
        'vertexShader': vP['linedashed_vert'],
        'fragmentShader': vP['linedashed_frag']
      },
      'depth': {
        'uniforms': vW([xn['common'], xn['displacementmap']]),
        'vertexShader': vP['depth_vert'],
        'fragmentShader': vP['depth_frag']
      },
      'normal': {
        'uniforms': vW([xn['common'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], {
          'opacity': {
            'value': 0x1
          }
        }]),
        'vertexShader': vP['normal_vert'],
        'fragmentShader': vP['normal_frag']
      },
      'sprite': {
        'uniforms': vW([xn['sprite'], xn['fog']]),
        'vertexShader': vP['sprite_vert'],
        'fragmentShader': vP['sprite_frag']
      },
      'background': {
        'uniforms': {
          'uvTransform': {
            'value': new eO()
          },
          't2D': {
            'value': null
          }
        },
        'vertexShader': vP['background_vert'],
        'fragmentShader': vP['background_frag']
      },
      'cube': {
        'uniforms': {
          'tCube': {
            'value': null
          },
          'tFlip': {
            'value': -0x1
          },
          'opacity': {
            'value': 0x1
          }
        },
        'vertexShader': vP['cube_vert'],
        'fragmentShader': vP['cube_frag']
      },
      'equirect': {
        'uniforms': {
          'tEquirect': {
            'value': null
          }
        },
        'vertexShader': vP['equirect_vert'],
        'fragmentShader': vP['equirect_frag']
      },
      'distanceRGBA': {
        'uniforms': vW([xn['common'], xn['displacementmap'], {
          'referencePosition': {
            'value': new eK()
          },
          'nearDistance': {
            'value': 0x1
          },
          'farDistance': {
            'value': 0x3e8
          }
        }]),
        'vertexShader': vP['distanceRGBA_vert'],
        'fragmentShader': vP['distanceRGBA_frag']
      },
      'shadow': {
        'uniforms': vW([xn['lights'], xn['fog'], {
          'color': {
            'value': new w7(0x0)
          },
          'opacity': {
            'value': 0x1
          }
        }]),
        'vertexShader': vP['shadow_vert'],
        'fragmentShader': vP['shadow_frag']
      }
    };

  function xp() {
    var bf = null,
      bg = !0x1,
      bh = null;

    function bi(bF, bG) {
      !0x1 !== bg && (bh(bF, bG), bf['requestAnimationFrame'](bi));
    }
    return {
      'start': function() {
        !0x0 !== bg && null !== bh && (bf['requestAnimationFrame'](bi), bg = !0x0);
      },
      'stop': function() {
        bg = !0x1;
      },
      'setAnimationLoop': function(bf) {
        bh = bf;
      },
      'setContext': function(bg) {
        bf = bg;
      }
    };
  }

  function xy(bf) {
    var bg = new WeakMap();
    return {
      'get': function(bf) {
        return bf['isInterleavedBufferAttribute'] && (bf = bf['data']), bg['get'](bf);
      },
      'remove': function(bh) {
        bh['isInterleavedBufferAttribute'] && (bh = bh['data']);
        var bi = bg['get'](bh);
        bi && (bf['deleteBuffer'](bi['buffer']), bg['delete'](bh));
      },
      'update': function(bh, bi) {
        bh['isInterleavedBufferAttribute'] && (bh = bh['data']);
        var bF = bg['get'](bh);
        void 0x0 === bF ? bg['set'](bh, function(bg, bh) {
          var bi = bg['array'],
            bF = bg['dynamic'] ? 0x88e8 : 0x88e4,
            bG = bf['createBuffer']();
          bf['bindBuffer'](bh, bG), bf['bufferData'](bh, bi, bF), bg['onUploadCallback']();
          var bH = 0x1406;
          return bi instanceof Float32Array ? bH = 0x1406 : bi instanceof Float64Array ? console['warn']('THREE.WebGLAttributes:\x20Unsupported\x20data\x20buffer\x20format:\x20Float64Array.') : bi instanceof Uint16Array ? bH = 0x1403 : bi instanceof Int16Array ? bH = 0x1402 : bi instanceof Uint32Array ? bH = 0x1405 : bi instanceof Int32Array ? bH = 0x1404 : bi instanceof Int8Array ? bH = 0x1400 : bi instanceof Uint8Array && (bH = 0x1401), {
            'buffer': bG,
            'type': bH,
            'bytesPerElement': bi['BYTES_PER_ELEMENT'],
            'version': bg['version']
          };
        }(bh, bi)) : bF['version'] < bh['version'] && (function(bg, bh, bi) {
          var bF = bh['array'],
            bG = bh['updateRange'];
          bf['bindBuffer'](bi, bg), !0x1 === bh['dynamic'] ? bf['bufferData'](bi, bF, 0x88e4) : -0x1 === bG['count'] ? bf['bufferSubData'](bi, 0x0, bF) : 0x0 === bG['count'] ? console['error']('THREE.WebGLObjects.updateBuffer:\x20dynamic\x20THREE.BufferAttribute\x20marked\x20as\x20needsUpdate\x20but\x20updateRange.count\x20is\x200,\x20ensure\x20you\x20are\x20using\x20set\x20methods\x20or\x20updating\x20manually.') : (bf['bufferSubData'](bi, bG['offset'] * bF['BYTES_PER_ELEMENT'], bF['subarray'](bG['offset'], bG['offset'] + bG['count'])), bG['count'] = -0x1);
        }(bF['buffer'], bh, bi), bF['version'] = bh['version']);
      }
    };
  }

  function xS(bf, bg, bh, bi, bF, bG) {
    this['a'] = bf, this['b'] = bg, this['c'] = bh, this['normal'] = bi && bi['isVector3'] ? bi : new eK(), this['vertexNormals'] = Array['isArray'](bi) ? bi : [], this['color'] = bF && bF['isColor'] ? bF : new w7(), this['vertexColors'] = Array['isArray'](bF) ? bF : [], this['materialIndex'] = void 0x0 !== bG ? bG : 0x0;
  }

  function xZ(bf, bg, bh, bi) {
    this['_x'] = bf || 0x0, this['_y'] = bg || 0x0, this['_z'] = bh || 0x0, this['_order'] = bi || xZ['DefaultOrder'];
  }

  function y4() {
    this['mask'] = 0x1;
  }
  xo['physical'] = {
    'uniforms': vW([xo['standard']['uniforms'], {
      'clearCoat': {
        'value': 0x0
      },
      'clearCoatRoughness': {
        'value': 0x0
      }
    }]),
    'vertexShader': vP['meshphysical_vert'],
    'fragmentShader': vP['meshphysical_frag']
  }, Object['assign'](xS['prototype'], {
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      this['a'] = bf['a'], this['b'] = bf['b'], this['c'] = bf['c'], this['normal']['copy'](bf['normal']), this['color']['copy'](bf['color']), this['materialIndex'] = bf['materialIndex'];
      for (var bg = 0x0, bh = bf['vertexNormals']['length']; bg < bh; bg++) this['vertexNormals'][bg] = bf['vertexNormals'][bg]['clone']();
      for (bg = 0x0, bh = bf['vertexColors']['length']; bg < bh; bg++) this['vertexColors'][bg] = bf['vertexColors'][bg]['clone']();
      return this;
    }
  }), xZ['RotationOrders'] = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'], xZ['DefaultOrder'] = 'XYZ', Object['defineProperties'](xZ['prototype'], {
    'x': {
      'get': function() {
        return this['_x'];
      },
      'set': function(bf) {
        this['_x'] = bf, this['onChangeCallback']();
      }
    },
    'y': {
      'get': function() {
        return this['_y'];
      },
      'set': function(bf) {
        this['_y'] = bf, this['onChangeCallback']();
      }
    },
    'z': {
      'get': function() {
        return this['_z'];
      },
      'set': function(bf) {
        this['_z'] = bf, this['onChangeCallback']();
      }
    },
    'order': {
      'get': function() {
        return this['_order'];
      },
      'set': function(bf) {
        this['_order'] = bf, this['onChangeCallback']();
      }
    }
  }), Object['assign'](xZ['prototype'], {
    'isEuler': !0x0,
    'set': function(bf, bg, bh, bi) {
      return this['_x'] = bf, this['_y'] = bg, this['_z'] = bh, this['_order'] = bi || this['_order'], this['onChangeCallback'](), this;
    },
    'clone': function() {
      return new this['constructor'](this['_x'], this['_y'], this['_z'], this['_order']);
    },
    'copy': function(bf) {
      return this['_x'] = bf['_x'], this['_y'] = bf['_y'], this['_z'] = bf['_z'], this['_order'] = bf['_order'], this['onChangeCallback'](), this;
    },
    'setFromRotationMatrix': function(bf, bg, bh) {
      var bi = e2['clamp'],
        bF = bf['elements'],
        bG = bF[0x0],
        bH = bF[0x4],
        bI = bF[0x8],
        bJ = bF[0x1],
        bK = bF[0x5],
        bL = bF[0x9],
        bM = bF[0x2],
        bN = bF[0x6],
        bO = bF[0xa];
      return 'XYZ' === (bg = bg || this['_order']) ? (this['_y'] = Math['asin'](bi(bI, -0x1, 0x1)), Math['abs'](bI) < 0.99999 ? (this['_x'] = Math['atan2'](-bL, bO), this['_z'] = Math['atan2'](-bH, bG)) : (this['_x'] = Math['atan2'](bN, bK), this['_z'] = 0x0)) : 'YXZ' === bg ? (this['_x'] = Math['asin'](-bi(bL, -0x1, 0x1)), Math['abs'](bL) < 0.99999 ? (this['_y'] = Math['atan2'](bI, bO), this['_z'] = Math['atan2'](bJ, bK)) : (this['_y'] = Math['atan2'](-bM, bG), this['_z'] = 0x0)) : 'ZXY' === bg ? (this['_x'] = Math['asin'](bi(bN, -0x1, 0x1)), Math['abs'](bN) < 0.99999 ? (this['_y'] = Math['atan2'](-bM, bO), this['_z'] = Math['atan2'](-bH, bK)) : (this['_y'] = 0x0, this['_z'] = Math['atan2'](bJ, bG))) : 'ZYX' === bg ? (this['_y'] = Math['asin'](-bi(bM, -0x1, 0x1)), Math['abs'](bM) < 0.99999 ? (this['_x'] = Math['atan2'](bN, bO), this['_z'] = Math['atan2'](bJ, bG)) : (this['_x'] = 0x0, this['_z'] = Math['atan2'](-bH, bK))) : 'YZX' === bg ? (this['_z'] = Math['asin'](bi(bJ, -0x1, 0x1)), Math['abs'](bJ) < 0.99999 ? (this['_x'] = Math['atan2'](-bL, bK), this['_y'] = Math['atan2'](-bM, bG)) : (this['_x'] = 0x0, this['_y'] = Math['atan2'](bI, bO))) : 'XZY' === bg ? (this['_z'] = Math['asin'](-bi(bH, -0x1, 0x1)), Math['abs'](bH) < 0.99999 ? (this['_x'] = Math['atan2'](bN, bK), this['_y'] = Math['atan2'](bI, bG)) : (this['_x'] = Math['atan2'](-bL, bO), this['_y'] = 0x0)) : console['warn']('THREE.Euler:\x20.setFromRotationMatrix()\x20given\x20unsupported\x20order:\x20' + bg), this['_order'] = bg, !0x1 !== bh && this['onChangeCallback'](), this;
    },
    'setFromQuaternion': function() {
      var bf = new mR();
      return function(bg, bh, bi) {
        return bf['makeRotationFromQuaternion'](bg), this['setFromRotationMatrix'](bf, bh, bi);
      };
    }(),
    'setFromVector3': function(bf, bg) {
      return this['set'](bf['x'], bf['y'], bf['z'], bg || this['_order']);
    },
    'reorder': (xm = new eF(), function(bf) {
      return xm['setFromEuler'](this), this['setFromQuaternion'](xm, bf);
    }),
    'equals': function(bf) {
      return bf['_x'] === this['_x'] && bf['_y'] === this['_y'] && bf['_z'] === this['_z'] && bf['_order'] === this['_order'];
    },
    'fromArray': function(bf) {
      return this['_x'] = bf[0x0], this['_y'] = bf[0x1], this['_z'] = bf[0x2], void 0x0 !== bf[0x3] && (this['_order'] = bf[0x3]), this['onChangeCallback'](), this;
    },
    'toArray': function(bf, bg) {
      return void 0x0 === bf && (bf = []), void 0x0 === bg && (bg = 0x0), bf[bg] = this['_x'], bf[bg + 0x1] = this['_y'], bf[bg + 0x2] = this['_z'], bf[bg + 0x3] = this['_order'], bf;
    },
    'toVector3': function(bf) {
      return bf ? bf['set'](this['_x'], this['_y'], this['_z']) : new eK(this['_x'], this['_y'], this['_z']);
    },
    'onChange': function(bf) {
      return this['onChangeCallback'] = bf, this;
    },
    'onChangeCallback': function() {}
  }), Object['assign'](y4['prototype'], {
    'set': function(bf) {
      this['mask'] = 0x1 << bf | 0x0;
    },
    'enable': function(bf) {
      this['mask'] |= 0x1 << bf | 0x0;
    },
    'toggle': function(bf) {
      this['mask'] ^= 0x1 << bf | 0x0;
    },
    'disable': function(bf) {
      this['mask'] &= ~(0x1 << bf | 0x0);
    },
    'test': function(bf) {
      return 0x0 != (this['mask'] & bf['mask']);
    }
  });
  var yN, yO, yP, yQ, yR, yS = 0x0;

  function yT() {
    Object['defineProperty'](this, 'id', {
      'value': yS++
    }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['type'] = 'Object3D', this['parent'] = null, this['children'] = [], this['up'] = yT['DefaultUp']['clone']();
    var bf = new eK(),
      bg = new xZ(),
      bh = new eF(),
      bi = new eK(0x1, 0x1, 0x1);
    bg['onChange'](function() {
      bh['setFromEuler'](bg, !0x1);
    }), bh['onChange'](function() {
      bg['setFromQuaternion'](bh, void 0x0, !0x1);
    }), Object['defineProperties'](this, {
      'position': {
        'configurable': !0x0,
        'enumerable': !0x0,
        'value': bf
      },
      'rotation': {
        'configurable': !0x0,
        'enumerable': !0x0,
        'value': bg
      },
      'quaternion': {
        'configurable': !0x0,
        'enumerable': !0x0,
        'value': bh
      },
      'scale': {
        'configurable': !0x0,
        'enumerable': !0x0,
        'value': bi
      },
      'modelViewMatrix': {
        'value': new mR()
      },
      'normalMatrix': {
        'value': new eO()
      }
    }), this['matrix'] = new mR(), this['matrixWorld'] = new mR(), this['matrixAutoUpdate'] = yT['DefaultMatrixAutoUpdate'], this['matrixWorldNeedsUpdate'] = !0x1, this['layers'] = new y4(), this['visible'] = !0x0, this['castShadow'] = !0x1, this['receiveShadow'] = !0x1, this['frustumCulled'] = !0x0, this['renderOrder'] = 0x0, this['userData'] = {};
  }
  yT['DefaultUp'] = new eK(0x0, 0x1, 0x0), yT['DefaultMatrixAutoUpdate'] = !0x0, yT['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
    'constructor': yT,
    'isObject3D': !0x0,
    'onBeforeRender': function() {},
    'onAfterRender': function() {},
    'applyMatrix': function(bf) {
      this['matrixAutoUpdate'] && this['updateMatrix'](), this['matrix']['premultiply'](bf), this['matrix']['decompose'](this['position'], this['quaternion'], this['scale']);
    },
    'applyQuaternion': function(bf) {
      return this['quaternion']['premultiply'](bf), this;
    },
    'setRotationFromAxisAngle': function(bf, bg) {
      this['quaternion']['setFromAxisAngle'](bf, bg);
    },
    'setRotationFromEuler': function(bf) {
      this['quaternion']['setFromEuler'](bf, !0x0);
    },
    'setRotationFromMatrix': function(bf) {
      this['quaternion']['setFromRotationMatrix'](bf);
    },
    'setRotationFromQuaternion': function(bf) {
      this['quaternion']['copy'](bf);
    },
    'rotateOnAxis': (yR = new eF(), function(bf, bg) {
      return yR['setFromAxisAngle'](bf, bg), this['quaternion']['multiply'](yR), this;
    }),
    'rotateOnWorldAxis': function() {
      var bf = new eF();
      return function(bg, bh) {
        return bf['setFromAxisAngle'](bg, bh), this['quaternion']['premultiply'](bf), this;
      };
    }(),
    'rotateX': function() {
      var bf = new eK(0x1, 0x0, 0x0);
      return function(bg) {
        return this['rotateOnAxis'](bf, bg);
      };
    }(),
    'rotateY': function() {
      var bf = new eK(0x0, 0x1, 0x0);
      return function(bg) {
        return this['rotateOnAxis'](bf, bg);
      };
    }(),
    'rotateZ': function() {
      var bf = new eK(0x0, 0x0, 0x1);
      return function(bg) {
        return this['rotateOnAxis'](bf, bg);
      };
    }(),
    'translateOnAxis': function() {
      var bf = new eK();
      return function(bg, bh) {
        return bf['copy'](bg)['applyQuaternion'](this['quaternion']), this['position']['add'](bf['multiplyScalar'](bh)), this;
      };
    }(),
    'translateX': function() {
      var bf = new eK(0x1, 0x0, 0x0);
      return function(bg) {
        return this['translateOnAxis'](bf, bg);
      };
    }(),
    'translateY': function() {
      var bf = new eK(0x0, 0x1, 0x0);
      return function(bg) {
        return this['translateOnAxis'](bf, bg);
      };
    }(),
    'translateZ': function() {
      var bf = new eK(0x0, 0x0, 0x1);
      return function(bg) {
        return this['translateOnAxis'](bf, bg);
      };
    }(),
    'localToWorld': function(bf) {
      return bf['applyMatrix4'](this['matrixWorld']);
    },
    'worldToLocal': (yQ = new mR(), function(bf) {
      return bf['applyMatrix4'](yQ['getInverse'](this['matrixWorld']));
    }),
    'lookAt': function() {
      var bf = new eF(),
        bg = new mR(),
        bh = new eK(),
        bi = new eK();
      return function(bF, bG, bH) {
        bF['isVector3'] ? bh['copy'](bF) : bh['set'](bF, bG, bH);
        var bI = this['parent'];
        this['updateWorldMatrix'](!0x0, !0x1), bi['setFromMatrixPosition'](this['matrixWorld']), this['isCamera'] || this['isLight'] ? bg['lookAt'](bi, bh, this['up']) : bg['lookAt'](bh, bi, this['up']), this['quaternion']['setFromRotationMatrix'](bg), bI && (bg['extractRotation'](bI['matrixWorld']), bf['setFromRotationMatrix'](bg), this['quaternion']['premultiply'](bf['inverse']()));
      };
    }(),
    'add': function(bf) {
      if (arguments['length'] > 0x1) {
        for (var bg = 0x0; bg < arguments['length']; bg++) this['add'](arguments[bg]);
        return this;
      }
      return bf === this ? (console['error']('THREE.Object3D.add:\x20object\x20can\x27t\x20be\x20added\x20as\x20a\x20child\x20of\x20itself.', bf), this) : (bf && bf['isObject3D'] ? (null !== bf['parent'] && bf['parent']['remove'](bf), bf['parent'] = this, bf['dispatchEvent']({
        'type': 'added'
      }), this['children']['push'](bf)) : console['error']('THREE.Object3D.add:\x20object\x20not\x20an\x20instance\x20of\x20THREE.Object3D.', bf), this);
    },
    'remove': function(bf) {
      if (arguments['length'] > 0x1) {
        for (var bg = 0x0; bg < arguments['length']; bg++) this['remove'](arguments[bg]);
        return this;
      }
      var bh = this['children']['indexOf'](bf);
      return -0x1 !== bh && (bf['parent'] = null, bf['dispatchEvent']({
        'type': 'removed'
      }), this['children']['splice'](bh, 0x1)), this;
    },
    'attach': (yP = new mR(), function(bf) {
      return this['updateWorldMatrix'](!0x0, !0x1), yP['getInverse'](this['matrixWorld']), null !== bf['parent'] && (bf['parent']['updateWorldMatrix'](!0x0, !0x1), yP['multiply'](bf['parent']['matrixWorld'])), bf['applyMatrix'](yP), bf['updateWorldMatrix'](!0x1, !0x1), this['add'](bf), this;
    }),
    'getObjectById': function(bf) {
      return this['getObjectByProperty']('id', bf);
    },
    'getObjectByName': function(bf) {
      return this['getObjectByProperty']('name', bf);
    },
    'getObjectByProperty': function(bf, bg) {
      if (this[bf] === bg) return this;
      for (var bh = 0x0, bi = this['children']['length']; bh < bi; bh++) {
        var bF = this['children'][bh]['getObjectByProperty'](bf, bg);
        if (void 0x0 !== bF) return bF;
      }
    },
    'pCrFlzzpYGHaZFbPwRqLxxsSKMxdAdnH': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.pCrFlzzpYGHaZFbPwRqLxxsSKMxdAdnH()\x20target\x20is\x20now\x20required'), bf = new eK()), this['updateMatrixWorld'](!0x0), bf['setFromMatrixPosition'](this['matrixWorld']);
    },
    'getWorldQuaternion': (yN = new eK(), yO = new eK(), function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldQuaternion()\x20target\x20is\x20now\x20required'), bf = new eF()), this['updateMatrixWorld'](!0x0), this['matrixWorld']['decompose'](yN, bf, yO), bf;
    }),
    'getWorldScale': function() {
      var bf = new eK(),
        bg = new eF();
      return function(bh) {
        return void 0x0 === bh && (console['warn']('THREE.Object3D:\x20.getWorldScale()\x20target\x20is\x20now\x20required'), bh = new eK()), this['updateMatrixWorld'](!0x0), this['matrixWorld']['decompose'](bf, bg, bh), bh;
      };
    }(),
    'getWorldDirection': function(bf) {
      void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldDirection()\x20target\x20is\x20now\x20required'), bf = new eK()), this['updateMatrixWorld'](!0x0);
      var bg = this['matrixWorld']['elements'];
      return bf['set'](bg[0x8], bg[0x9], bg[0xa])['normalize']();
    },
    'raycast': function() {},
    'traverse': function(bf) {
      bf(this);
      for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++) bg[bh]['traverse'](bf);
    },
    'traverseVisible': function(bf) {
      if (!0x1 !== this['visible']) {
        bf(this);
        for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++) bg[bh]['traverseVisible'](bf);
      }
    },
    'traverseAncestors': function(bf) {
      var bg = this['parent'];
      null !== bg && (bf(bg), bg['traverseAncestors'](bf));
    },
    'updateMatrix': function() {
      this['matrix']['compose'](this['position'], this['quaternion'], this['scale']), this['matrixWorldNeedsUpdate'] = !0x0;
    },
    'updateMatrixWorld': function(bf) {
      this['matrixAutoUpdate'] && this['updateMatrix'](), (this['matrixWorldNeedsUpdate'] || bf) && (null === this['parent'] ? this['matrixWorld']['copy'](this['matrix']) : this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'], this['matrix']), this['matrixWorldNeedsUpdate'] = !0x1, bf = !0x0);
      for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++) bg[bh]['updateMatrixWorld'](bf);
    },
    'updateWorldMatrix': function(bf, bg) {
      var bh = this['parent'];
      if (!0x0 === bf && null !== bh && bh['updateWorldMatrix'](!0x0, !0x1), this['matrixAutoUpdate'] && this['updateMatrix'](), null === this['parent'] ? this['matrixWorld']['copy'](this['matrix']) : this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'], this['matrix']), !0x0 === bg)
        for (var bi = this['children'], bF = 0x0, bG = bi['length']; bF < bG; bF++) bi[bF]['updateWorldMatrix'](!0x1, !0x0);
    },
    'toJSON': function(bf) {
      var bg = void 0x0 === bf || 'string' == typeof bf,
        bh = {};
      bg && (bf = {
        'geometries': {},
        'materials': {},
        'textures': {},
        'images': {},
        'shapes': {}
      }, bh['metadata'] = {
        'version': 4.5,
        'type': 'Object',
        'generator': 'Object3D.toJSON'
      });
      var bi = {};

      function bF(bg, bh) {
        return void 0x0 === bg[bh['uuid']] && (bg[bh['uuid']] = bh['toJSON'](bf)), bh['uuid'];
      }
      if (bi['uuid'] = this['uuid'], bi['type'] = this['type'], '' !== this['name'] && (bi['name'] = this['name']), !0x0 === this['castShadow'] && (bi['castShadow'] = !0x0), !0x0 === this['receiveShadow'] && (bi['receiveShadow'] = !0x0), !0x1 === this['visible'] && (bi['visible'] = !0x1), !0x1 === this['frustumCulled'] && (bi['frustumCulled'] = !0x1), 0x0 !== this['renderOrder'] && (bi['renderOrder'] = this['renderOrder']), '{}' !== JSON['stringify'](this['userData']) && (bi['userData'] = this['userData']), bi['layers'] = this['layers']['mask'], bi['matrix'] = this['matrix']['toArray'](), !0x1 === this['matrixAutoUpdate'] && (bi['matrixAutoUpdate'] = !0x1), this['isMesh'] && this['drawMode'] !== dN && (bi['drawMode'] = this['drawMode']), this['isMesh'] || this['isLine'] || this['isPoints']) {
        bi['geometry'] = bF(bf['geometries'], this['geometry']);
        var bG = this['geometry']['parameters'];
        if (void 0x0 !== bG && void 0x0 !== bG['shapes']) {
          var bH = bG['shapes'];
          if (Array['isArray'](bH))
            for (var bI = 0x0, bJ = bH['length']; bI < bJ; bI++) {
              var bK = bH[bI];
              bF(bf['shapes'], bK);
            } else bF(bf['shapes'], bH);
        }
      }
      if (void 0x0 !== this['material'])
        if (Array['isArray'](this['material'])) {
          var bL = [];
          for (bI = 0x0, bJ = this['material']['length']; bI < bJ; bI++) bL['push'](bF(bf['materials'], this['material'][bI]));
          bi['material'] = bL;
        } else bi['material'] = bF(bf['materials'], this['material']);
      if (this['children']['length'] > 0x0) {
        bi['children'] = [];
        for (bI = 0x0; bI < this['children']['length']; bI++) bi['children']['push'](this['children'][bI]['toJSON'](bf)['object']);
      }
      if (bg) {
        var bM = bQ(bf['geometries']),
          bN = bQ(bf['materials']),
          bO = bQ(bf['textures']),
          bP = bQ(bf['images']);
        bH = bQ(bf['shapes']);
        bM['length'] > 0x0 && (bh['geometries'] = bM), bN['length'] > 0x0 && (bh['materials'] = bN), bO['length'] > 0x0 && (bh['textures'] = bO), bP['length'] > 0x0 && (bh['images'] = bP), bH['length'] > 0x0 && (bh['shapes'] = bH);
      }
      return bh['object'] = bi, bh;

      function bQ(bf) {
        var bg = [];
        for (var bh in bf) {
          var bi = bf[bh];
          delete bi['metadata'], bg['push'](bi);
        }
        return bg;
      }
    },
    'clone': function(bf) {
      return new this['constructor']()['copy'](this, bf);
    },
    'copy': function(bf, bg) {
      if (void 0x0 === bg && (bg = !0x0), this['name'] = bf['name'], this['up']['copy'](bf['up']), this['position']['copy'](bf['position']), this['quaternion']['copy'](bf['quaternion']), this['scale']['copy'](bf['scale']), this['matrix']['copy'](bf['matrix']), this['matrixWorld']['copy'](bf['matrixWorld']), this['matrixAutoUpdate'] = bf['matrixAutoUpdate'], this['matrixWorldNeedsUpdate'] = bf['matrixWorldNeedsUpdate'], this['layers']['mask'] = bf['layers']['mask'], this['visible'] = bf['visible'], this['castShadow'] = bf['castShadow'], this['receiveShadow'] = bf['receiveShadow'], this['frustumCulled'] = bf['frustumCulled'], this['renderOrder'] = bf['renderOrder'], this['userData'] = JSON['parse'](JSON['stringify'](bf['userData'])), !0x0 === bg)
        for (var bh = 0x0; bh < bf['children']['length']; bh++) {
          var bi = bf['children'][bh];
          this['add'](bi['clone']());
        }
      return this;
    }
  });
  var AE, AF, AG = 0x0;

  function AH() {
    Object['defineProperty'](this, 'id', {
      'value': AG += 0x2
    }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['type'] = 'Geometry', this['vertices'] = [], this['colors'] = [], this['faces'] = [], this['faceVertexUvs'] = [
      []
    ], this['morphTargets'] = [], this['morphNormals'] = [], this['skinWeights'] = [], this['skinIndices'] = [], this['lineDistances'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['elementsNeedUpdate'] = !0x1, this['verticesNeedUpdate'] = !0x1, this['uvsNeedUpdate'] = !0x1, this['normalsNeedUpdate'] = !0x1, this['colorsNeedUpdate'] = !0x1, this['lineDistancesNeedUpdate'] = !0x1, this['groupsNeedUpdate'] = !0x1;
  }

  function AI(bf, bg, bh) {
    if (Array['isArray'](bf)) throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
    this['name'] = '', this['array'] = bf, this['itemSize'] = bg, this['count'] = void 0x0 !== bf ? bf['length'] / bg : 0x0, this['normalized'] = !0x0 === bh, this['dynamic'] = !0x1, this['updateRange'] = {
      'offset': 0x0,
      'count': -0x1
    }, this['version'] = 0x0;
  }

  function AM(bf, bg, bh) {
    AI['call'](this, new Int8Array(bf), bg, bh);
  }

  function AQ(bf, bg, bh) {
    AI['call'](this, new Uint8Array(bf), bg, bh);
  }

  function AU(bf, bg, bh) {
    AI['call'](this, new Uint8ClampedArray(bf), bg, bh);
  }

  function AY(bf, bg, bh) {
    AI['call'](this, new Int16Array(bf), bg, bh);
  }

  function B2(bf, bg, bh) {
    AI['call'](this, new Uint16Array(bf), bg, bh);
  }

  function B6(bf, bg, bh) {
    AI['call'](this, new Int32Array(bf), bg, bh);
  }

  function Ba(bf, bg, bh) {
    AI['call'](this, new Uint32Array(bf), bg, bh);
  }

  function Be(bf, bg, bh) {
    AI['call'](this, new Float32Array(bf), bg, bh);
  }

  function Bi(bf, bg, bh) {
    AI['call'](this, new Float64Array(bf), bg, bh);
  }

  function Bm() {
    this['vertices'] = [], this['normals'] = [], this['colors'] = [], this['uvs'] = [], this['uvs2'] = [], this['groups'] = [], this['morphTargets'] = {}, this['skinWeights'] = [], this['skinIndices'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['verticesNeedUpdate'] = !0x1, this['normalsNeedUpdate'] = !0x1, this['colorsNeedUpdate'] = !0x1, this['uvsNeedUpdate'] = !0x1, this['groupsNeedUpdate'] = !0x1;
  }

  function Bn(bf) {
    if (0x0 === bf['length']) return -0x1 / 0x0;
    for (var bg = bf[0x0], bh = 0x1, bi = bf['length']; bh < bi; ++bh) bf[bh] > bg && (bg = bf[bh]);
    return bg;
  }
  AH['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
    'constructor': AH,
    'isGeometry': !0x0,
    'applyMatrix': function(bf) {
      for (var bg = new eO()['getNormalMatrix'](bf), bh = 0x0, bi = this['vertices']['length']; bh < bi; bh++) {
        this['vertices'][bh]['applyMatrix4'](bf);
      }
      for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) {
        var bF = this['faces'][bh];
        bF['normal']['applyMatrix3'](bg)['normalize']();
        for (var bG = 0x0, bH = bF['vertexNormals']['length']; bG < bH; bG++) bF['vertexNormals'][bG]['applyMatrix3'](bg)['normalize']();
      }
      return null !== this['boundingBox'] && this['computeBoundingBox'](), null !== this['boundingSphere'] && this['computeBoundingSphere'](), this['verticesNeedUpdate'] = !0x0, this['normalsNeedUpdate'] = !0x0, this;
    },
    'rotateX': function() {
      var bf = new mR();
      return function(bg) {
        return bf['makeRotationX'](bg), this['applyMatrix'](bf), this;
      };
    }(),
    'rotateY': function() {
      var bf = new mR();
      return function(bg) {
        return bf['makeRotationY'](bg), this['applyMatrix'](bf), this;
      };
    }(),
    'rotateZ': function() {
      var bf = new mR();
      return function(bg) {
        return bf['makeRotationZ'](bg), this['applyMatrix'](bf), this;
      };
    }(),
    'translate': function() {
      var bf = new mR();
      return function(bg, bh, bi) {
        return bf['makeTranslation'](bg, bh, bi), this['applyMatrix'](bf), this;
      };
    }(),
    'scale': function() {
      var bf = new mR();
      return function(bg, bh, bi) {
        return bf['makeScale'](bg, bh, bi), this['applyMatrix'](bf), this;
      };
    }(),
    'lookAt': (AF = new yT(), function(bf) {
      AF['lookAt'](bf), AF['updateMatrix'](), this['applyMatrix'](AF['matrix']);
    }),
    'fromBufferGeometry': function(bf) {
      var bg = this,
        bh = null !== bf['index'] ? bf['index']['array'] : void 0x0,
        bi = bf['attributes'],
        bF = bi['position']['array'],
        bG = void 0x0 !== bi['normal'] ? bi['normal']['array'] : void 0x0,
        bH = void 0x0 !== bi['color'] ? bi['color']['array'] : void 0x0,
        bI = void 0x0 !== bi['uv'] ? bi['uv']['array'] : void 0x0,
        bJ = void 0x0 !== bi['uv2'] ? bi['uv2']['array'] : void 0x0;
      void 0x0 !== bJ && (this['faceVertexUvs'][0x1] = []);
      for (var bK = 0x0; bK < bF['length']; bK += 0x3) bg['vertices']['push'](new eK()['fromArray'](bF, bK)), void 0x0 !== bH && bg['colors']['push'](new w7()['fromArray'](bH, bK));

      function bL(bf, bh, bi, bF) {
        var bK = void 0x0 === bH ? [] : [bg['colors'][bf]['clone'](), bg['colors'][bh]['clone'](), bg['colors'][bi]['clone']()],
          bL = new xS(bf, bh, bi, void 0x0 === bG ? [] : [new eK()['fromArray'](bG, 0x3 * bf), new eK()['fromArray'](bG, 0x3 * bh), new eK()['fromArray'](bG, 0x3 * bi)], bK, bF);
        bg['faces']['push'](bL), void 0x0 !== bI && bg['faceVertexUvs'][0x0]['push']([new eC()['fromArray'](bI, 0x2 * bf), new eC()['fromArray'](bI, 0x2 * bh), new eC()['fromArray'](bI, 0x2 * bi)]), void 0x0 !== bJ && bg['faceVertexUvs'][0x1]['push']([new eC()['fromArray'](bJ, 0x2 * bf), new eC()['fromArray'](bJ, 0x2 * bh), new eC()['fromArray'](bJ, 0x2 * bi)]);
      }
      var bM = bf['groups'];
      if (bM['length'] > 0x0)
        for (bK = 0x0; bK < bM['length']; bK++)
          for (var bN = bM[bK], bO = bN['start'], bP = bO, bQ = bO + bN['count']; bP < bQ; bP += 0x3) void 0x0 !== bh ? bL(bh[bP], bh[bP + 0x1], bh[bP + 0x2], bN['materialIndex']) : bL(bP, bP + 0x1, bP + 0x2, bN['materialIndex']);
      else if (void 0x0 !== bh)
        for (bK = 0x0; bK < bh['length']; bK += 0x3) bL(bh[bK], bh[bK + 0x1], bh[bK + 0x2]);
      else
        for (bK = 0x0; bK < bF['length'] / 0x3; bK += 0x3) bL(bK, bK + 0x1, bK + 0x2);
      return this['computeFaceNormals'](), null !== bf['boundingBox'] && (this['boundingBox'] = bf['boundingBox']['clone']()), null !== bf['boundingSphere'] && (this['boundingSphere'] = bf['boundingSphere']['clone']()), this;
    },
    'center': (AE = new eK(), function() {
      return this['computeBoundingBox'](), this['boundingBox']['getCenter'](AE)['negate'](), this['translate'](AE['x'], AE['y'], AE['z']), this;
    }),
    'normalize': function() {
      this['computeBoundingSphere']();
      var bf = this['boundingSphere']['center'],
        bg = this['boundingSphere']['radius'],
        bh = 0x0 === bg ? 0x1 : 0x1 / bg,
        bi = new mR();
      return bi['set'](bh, 0x0, 0x0, -bh * bf['x'], 0x0, bh, 0x0, -bh * bf['y'], 0x0, 0x0, bh, -bh * bf['z'], 0x0, 0x0, 0x0, 0x1), this['applyMatrix'](bi), this;
    },
    'computeFaceNormals': function() {
      for (var bf = new eK(), bg = new eK(), bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) {
        var bF = this['faces'][bh],
          bG = this['vertices'][bF['a']],
          bH = this['vertices'][bF['b']],
          bI = this['vertices'][bF['c']];
        bf['subVectors'](bI, bH), bg['subVectors'](bG, bH), bf['cross'](bg), bf['normalize'](), bF['normal']['copy'](bf);
      }
    },
    'computeVertexNormals': function(bf) {
      var bg, bh, bi, bF, bG, bH;
      for (void 0x0 === bf && (bf = !0x0), bH = new Array(this['vertices']['length']), bg = 0x0, bh = this['vertices']['length']; bg < bh; bg++) bH[bg] = new eK();
      if (bf) {
        var bI, bJ, bK, bL = new eK(),
          bM = new eK();
        for (bi = 0x0, bF = this['faces']['length']; bi < bF; bi++) bG = this['faces'][bi], bI = this['vertices'][bG['a']], bJ = this['vertices'][bG['b']], bK = this['vertices'][bG['c']], bL['subVectors'](bK, bJ), bM['subVectors'](bI, bJ), bL['cross'](bM), bH[bG['a']]['add'](bL), bH[bG['b']]['add'](bL), bH[bG['c']]['add'](bL);
      } else
        for (this['computeFaceNormals'](), bi = 0x0, bF = this['faces']['length']; bi < bF; bi++) bH[(bG = this['faces'][bi])['a']]['add'](bG['normal']), bH[bG['b']]['add'](bG['normal']), bH[bG['c']]['add'](bG['normal']);
      for (bg = 0x0, bh = this['vertices']['length']; bg < bh; bg++) bH[bg]['normalize']();
      for (bi = 0x0, bF = this['faces']['length']; bi < bF; bi++) {
        var bN = (bG = this['faces'][bi])['vertexNormals'];
        0x3 === bN['length'] ? (bN[0x0]['copy'](bH[bG['a']]), bN[0x1]['copy'](bH[bG['b']]), bN[0x2]['copy'](bH[bG['c']])) : (bN[0x0] = bH[bG['a']]['clone'](), bN[0x1] = bH[bG['b']]['clone'](), bN[0x2] = bH[bG['c']]['clone']());
      }
      this['faces']['length'] > 0x0 && (this['normalsNeedUpdate'] = !0x0);
    },
    'computeFlatVertexNormals': function() {
      var bf, bg, bh;
      for (this['computeFaceNormals'](), bf = 0x0, bg = this['faces']['length']; bf < bg; bf++) {
        var bi = (bh = this['faces'][bf])['vertexNormals'];
        0x3 === bi['length'] ? (bi[0x0]['copy'](bh['normal']), bi[0x1]['copy'](bh['normal']), bi[0x2]['copy'](bh['normal'])) : (bi[0x0] = bh['normal']['clone'](), bi[0x1] = bh['normal']['clone'](), bi[0x2] = bh['normal']['clone']());
      }
      this['faces']['length'] > 0x0 && (this['normalsNeedUpdate'] = !0x0);
    },
    'computeMorphNormals': function() {
      var bf, bg, bh, bi, bF;
      for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++)
        for ((bF = this['faces'][bh])['__originalFaceNormal'] ? bF['__originalFaceNormal']['copy'](bF['normal']) : bF['__originalFaceNormal'] = bF['normal']['clone'](), bF['__originalVertexNormals'] || (bF['__originalVertexNormals'] = []), bf = 0x0, bg = bF['vertexNormals']['length']; bf < bg; bf++) bF['__originalVertexNormals'][bf] ? bF['__originalVertexNormals'][bf]['copy'](bF['vertexNormals'][bf]) : bF['__originalVertexNormals'][bf] = bF['vertexNormals'][bf]['clone']();
      var bG = new AH();
      for (bG['faces'] = this['faces'], bf = 0x0, bg = this['morphTargets']['length']; bf < bg; bf++) {
        if (!this['morphNormals'][bf]) {
          this['morphNormals'][bf] = {}, this['morphNormals'][bf]['faceNormals'] = [], this['morphNormals'][bf]['vertexNormals'] = [];
          var bH = this['morphNormals'][bf]['faceNormals'],
            bI = this['morphNormals'][bf]['vertexNormals'];
          for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) bJ = new eK(), bK = {
            'a': new eK(),
            'b': new eK(),
            'c': new eK()
          }, bH['push'](bJ), bI['push'](bK);
        }
        var bJ, bK, bL = this['morphNormals'][bf];
        for (bG['vertices'] = this['morphTargets'][bf]['vertices'], bG['computeFaceNormals'](), bG['computeVertexNormals'](), bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) bF = this['faces'][bh], bJ = bL['faceNormals'][bh], bK = bL['vertexNormals'][bh], bJ['copy'](bF['normal']), bK['a']['copy'](bF['vertexNormals'][0x0]), bK['b']['copy'](bF['vertexNormals'][0x1]), bK['c']['copy'](bF['vertexNormals'][0x2]);
      }
      for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++)(bF = this['faces'][bh])['normal'] = bF['__originalFaceNormal'], bF['vertexNormals'] = bF['__originalVertexNormals'];
    },
    'computeBoundingBox': function() {
      null === this['boundingBox'] && (this['boundingBox'] = new mB()), this['boundingBox']['setFromPoints'](this['vertices']);
    },
    'computeBoundingSphere': function() {
      null === this['boundingSphere'] && (this['boundingSphere'] = new mE()), this['boundingSphere']['setFromPoints'](this['vertices']);
    },
    'merge': function(bf, bg, bh) {
      if (bf && bf['isGeometry']) {
        var bi, bF = this['vertices']['length'],
          bG = this['vertices'],
          bH = bf['vertices'],
          bI = this['faces'],
          bJ = bf['faces'],
          bK = this['faceVertexUvs'][0x0],
          bL = bf['faceVertexUvs'][0x0],
          bM = this['colors'],
          bN = bf['colors'];
        void 0x0 === bh && (bh = 0x0), void 0x0 !== bg && (bi = new eO()['getNormalMatrix'](bg));
        for (var bO = 0x0, bP = bH['length']; bO < bP; bO++) {
          var bQ = bH[bO]['clone']();
          void 0x0 !== bg && bQ['applyMatrix4'](bg), bG['push'](bQ);
        }
        for (bO = 0x0, bP = bN['length']; bO < bP; bO++) bM['push'](bN[bO]['clone']());
        for (bO = 0x0, bP = bJ['length']; bO < bP; bO++) {
          var bR, bS, bT, bU = bJ[bO],
            bV = bU['vertexNormals'],
            bW = bU['vertexColors'];
          (bR = new xS(bU['a'] + bF, bU['b'] + bF, bU['c'] + bF))['normal']['copy'](bU['normal']), void 0x0 !== bi && bR['normal']['applyMatrix3'](bi)['normalize']();
          for (var bX = 0x0, bY = bV['length']; bX < bY; bX++) bS = bV[bX]['clone'](), void 0x0 !== bi && bS['applyMatrix3'](bi)['normalize'](), bR['vertexNormals']['push'](bS);
          bR['color']['copy'](bU['color']);
          for (bX = 0x0, bY = bW['length']; bX < bY; bX++) bT = bW[bX], bR['vertexColors']['push'](bT['clone']());
          bR['materialIndex'] = bU['materialIndex'] + bh, bI['push'](bR);
        }
        for (bO = 0x0, bP = bL['length']; bO < bP; bO++) {
          var bZ = bL[bO],
            c0 = [];
          if (void 0x0 !== bZ) {
            for (bX = 0x0, bY = bZ['length']; bX < bY; bX++) c0['push'](bZ[bX]['clone']());
            bK['push'](c0);
          }
        }
      } else console['error']('THREE.Geometry.merge():\x20geometry\x20not\x20an\x20instance\x20of\x20THREE.Geometry.', bf);
    },
    'mergeMesh': function(bf) {
      bf && bf['isMesh'] ? (bf['matrixAutoUpdate'] && bf['updateMatrix'](), this['merge'](bf['geometry'], bf['matrix'])) : console['error']('THREE.Geometry.mergeMesh():\x20mesh\x20not\x20an\x20instance\x20of\x20THREE.Mesh.', bf);
    },
    'mergeVertices': function() {
      var bf, bg, bh, bi, bF, bG, bH, bI, bJ = {},
        bK = [],
        bL = [],
        bM = Math['pow'](0xa, 0x4);
      for (bh = 0x0, bi = this['vertices']['length']; bh < bi; bh++) bf = this['vertices'][bh], void 0x0 === bJ[bg = Math['round'](bf['x'] * bM) + '_' + Math['round'](bf['y'] * bM) + '_' + Math['round'](bf['z'] * bM)] ? (bJ[bg] = bh, bK['push'](this['vertices'][bh]), bL[bh] = bK['length'] - 0x1) : bL[bh] = bL[bJ[bg]];
      var bN = [];
      for (bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) {
        (bF = this['faces'][bh])['a'] = bL[bF['a']], bF['b'] = bL[bF['b']], bF['c'] = bL[bF['c']], bG = [bF['a'], bF['b'], bF['c']];
        for (var bO = 0x0; bO < 0x3; bO++)
          if (bG[bO] === bG[(bO + 0x1) % 0x3]) {
            bN['push'](bh);
            break;
          }
      }
      for (bh = bN['length'] - 0x1; bh >= 0x0; bh--) {
        var bP = bN[bh];
        for (this['faces']['splice'](bP, 0x1), bH = 0x0, bI = this['faceVertexUvs']['length']; bH < bI; bH++) this['faceVertexUvs'][bH]['splice'](bP, 0x1);
      }
      var bQ = this['vertices']['length'] - bK['length'];
      return this['vertices'] = bK, bQ;
    },
    'setFromPoints': function(bf) {
      this['vertices'] = [];
      for (var bg = 0x0, bh = bf['length']; bg < bh; bg++) {
        var bi = bf[bg];
        this['vertices']['push'](new eK(bi['x'], bi['y'], bi['z'] || 0x0));
      }
      return this;
    },
    'sortFacesByMaterialIndex': function() {
      for (var bf = this['faces'], bg = bf['length'], bh = 0x0; bh < bg; bh++) bf[bh]['_id'] = bh;
      bf['sort'](function(bf, bg) {
        return bf['materialIndex'] - bg['materialIndex'];
      });
      var bi, bF, bG = this['faceVertexUvs'][0x0],
        bH = this['faceVertexUvs'][0x1];
      bG && bG['length'] === bg && (bi = []), bH && bH['length'] === bg && (bF = []);
      for (bh = 0x0; bh < bg; bh++) {
        var bI = bf[bh]['_id'];
        bi && bi['push'](bG[bI]), bF && bF['push'](bH[bI]);
      }
      bi && (this['faceVertexUvs'][0x0] = bi), bF && (this['faceVertexUvs'][0x1] = bF);
    },
    'toJSON': function() {
      var bf = {
        'metadata': {
          'version': 4.5,
          'type': 'Geometry',
          'generator': 'Geometry.toJSON'
        }
      };
      if (bf['uuid'] = this['uuid'], bf['type'] = this['type'], '' !== this['name'] && (bf['name'] = this['name']), void 0x0 !== this['parameters']) {
        var bg = this['parameters'];
        for (var bh in bg) void 0x0 !== bg[bh] && (bf[bh] = bg[bh]);
        return bf;
      }
      for (var bi = [], bF = 0x0; bF < this['vertices']['length']; bF++) {
        var bG = this['vertices'][bF];
        bi['push'](bG['x'], bG['y'], bG['z']);
      }
      var bH = [],
        bI = [],
        bJ = {},
        bK = [],
        bL = {},
        bM = [],
        bN = {};
      for (bF = 0x0; bF < this['faces']['length']; bF++) {
        var bO = this['faces'][bF],
          bP = void 0x0 !== this['faceVertexUvs'][0x0][bF],
          bQ = bO['normal']['length']() > 0x0,
          bR = bO['vertexNormals']['length'] > 0x0,
          bS = 0x1 !== bO['color']['r'] || 0x1 !== bO['color']['g'] || 0x1 !== bO['color']['b'],
          bT = bO['vertexColors']['length'] > 0x0,
          bU = 0x0;
        if (bU = bY(bU, 0x0, 0x0), bU = bY(bU, 0x1, !0x0), bU = bY(bU, 0x2, !0x1), bU = bY(bU, 0x3, bP), bU = bY(bU, 0x4, bQ), bU = bY(bU, 0x5, bR), bU = bY(bU, 0x6, bS), bU = bY(bU, 0x7, bT), bH['push'](bU), bH['push'](bO['a'], bO['b'], bO['c']), bH['push'](bO['materialIndex']), bP) {
          var bV = this['faceVertexUvs'][0x0][bF];
          bH['push'](c1(bV[0x0]), c1(bV[0x1]), c1(bV[0x2]));
        }
        if (bQ && bH['push'](bZ(bO['normal'])), bR) {
          var bW = bO['vertexNormals'];
          bH['push'](bZ(bW[0x0]), bZ(bW[0x1]), bZ(bW[0x2]));
        }
        if (bS && bH['push'](c0(bO['color'])), bT) {
          var bX = bO['vertexColors'];
          bH['push'](c0(bX[0x0]), c0(bX[0x1]), c0(bX[0x2]));
        }
      }

      function bY(bf, bg, bh) {
        return bh ? bf | 0x1 << bg : bf & ~(0x1 << bg);
      }

      function bZ(bf) {
        var bg = bf['x']['toString']() + bf['y']['toString']() + bf['z']['toString']();
        return void 0x0 !== bJ[bg] ? bJ[bg] : (bJ[bg] = bI['length'] / 0x3, bI['push'](bf['x'], bf['y'], bf['z']), bJ[bg]);
      }

      function c0(bf) {
        var bg = bf['r']['toString']() + bf['g']['toString']() + bf['b']['toString']();
        return void 0x0 !== bL[bg] ? bL[bg] : (bL[bg] = bK['length'], bK['push'](bf['getHex']()), bL[bg]);
      }

      function c1(bf) {
        var bg = bf['x']['toString']() + bf['y']['toString']();
        return void 0x0 !== bN[bg] ? bN[bg] : (bN[bg] = bM['length'] / 0x2, bM['push'](bf['x'], bf['y']), bN[bg]);
      }
      return bf['data'] = {}, bf['data']['vertices'] = bi, bf['data']['normals'] = bI, bK['length'] > 0x0 && (bf['data']['colors'] = bK), bM['length'] > 0x0 && (bf['data']['uvs'] = [bM]), bf['data']['faces'] = bH, bf;
    },
    'clone': function() {
      return new AH()['copy'](this);
    },
    'copy': function(bf) {
      var bg, bh, bi, bF, bG, bH;
      this['vertices'] = [], this['colors'] = [], this['faces'] = [], this['faceVertexUvs'] = [
        []
      ], this['morphTargets'] = [], this['morphNormals'] = [], this['skinWeights'] = [], this['skinIndices'] = [], this['lineDistances'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['name'] = bf['name'];
      var bI = bf['vertices'];
      for (bg = 0x0, bh = bI['length']; bg < bh; bg++) this['vertices']['push'](bI[bg]['clone']());
      var bJ = bf['colors'];
      for (bg = 0x0, bh = bJ['length']; bg < bh; bg++) this['colors']['push'](bJ[bg]['clone']());
      var bK = bf['faces'];
      for (bg = 0x0, bh = bK['length']; bg < bh; bg++) this['faces']['push'](bK[bg]['clone']());
      for (bg = 0x0, bh = bf['faceVertexUvs']['length']; bg < bh; bg++) {
        var bL = bf['faceVertexUvs'][bg];
        for (void 0x0 === this['faceVertexUvs'][bg] && (this['faceVertexUvs'][bg] = []), bi = 0x0, bF = bL['length']; bi < bF; bi++) {
          var bM = bL[bi],
            bN = [];
          for (bG = 0x0, bH = bM['length']; bG < bH; bG++) {
            var bO = bM[bG];
            bN['push'](bO['clone']());
          }
          this['faceVertexUvs'][bg]['push'](bN);
        }
      }
      var bP = bf['morphTargets'];
      for (bg = 0x0, bh = bP['length']; bg < bh; bg++) {
        var bQ = {};
        if (bQ['name'] = bP[bg]['name'], void 0x0 !== bP[bg]['vertices'])
          for (bQ['vertices'] = [], bi = 0x0, bF = bP[bg]['vertices']['length']; bi < bF; bi++) bQ['vertices']['push'](bP[bg]['vertices'][bi]['clone']());
        if (void 0x0 !== bP[bg]['normals'])
          for (bQ['normals'] = [], bi = 0x0, bF = bP[bg]['normals']['length']; bi < bF; bi++) bQ['normals']['push'](bP[bg]['normals'][bi]['clone']());
        this['morphTargets']['push'](bQ);
      }
      var bR = bf['morphNormals'];
      for (bg = 0x0, bh = bR['length']; bg < bh; bg++) {
        var bS = {};
        if (void 0x0 !== bR[bg]['vertexNormals'])
          for (bS['vertexNormals'] = [], bi = 0x0, bF = bR[bg]['vertexNormals']['length']; bi < bF; bi++) {
            var bT = bR[bg]['vertexNormals'][bi],
              bU = {};
            bU['a'] = bT['a']['clone'](), bU['b'] = bT['b']['clone'](), bU['c'] = bT['c']['clone'](), bS['vertexNormals']['push'](bU);
          }
        if (void 0x0 !== bR[bg]['faceNormals'])
          for (bS['faceNormals'] = [], bi = 0x0, bF = bR[bg]['faceNormals']['length']; bi < bF; bi++) bS['faceNormals']['push'](bR[bg]['faceNormals'][bi]['clone']());
        this['morphNormals']['push'](bS);
      }
      var bV = bf['skinWeights'];
      for (bg = 0x0, bh = bV['length']; bg < bh; bg++) this['skinWeights']['push'](bV[bg]['clone']());
      var bW = bf['skinIndices'];
      for (bg = 0x0, bh = bW['length']; bg < bh; bg++) this['skinIndices']['push'](bW[bg]['clone']());
      var bX = bf['lineDistances'];
      for (bg = 0x0, bh = bX['length']; bg < bh; bg++) this['lineDistances']['push'](bX[bg]);
      var bY = bf['boundingBox'];
      null !== bY && (this['boundingBox'] = bY['clone']());
      var bZ = bf['boundingSphere'];
      return null !== bZ && (this['boundingSphere'] = bZ['clone']()), this['elementsNeedUpdate'] = bf['elementsNeedUpdate'], this['verticesNeedUpdate'] = bf['verticesNeedUpdate'], this['uvsNeedUpdate'] = bf['uvsNeedUpdate'], this['normalsNeedUpdate'] = bf['normalsNeedUpdate'], this['colorsNeedUpdate'] = bf['colorsNeedUpdate'], this['lineDistancesNeedUpdate'] = bf['lineDistancesNeedUpdate'], this['groupsNeedUpdate'] = bf['groupsNeedUpdate'], this;
    },
    'dispose': function() {
      this['dispatchEvent']({
        'type': 'dispose'
      });
    }
  }), Object['defineProperty'](AI['prototype'], 'needsUpdate', {
    'set': function(bf) {
      !0x0 === bf && this['version']++;
    }
  }), Object['assign'](AI['prototype'], {
    'isBufferAttribute': !0x0,
    'onUploadCallback': function() {},
    'setArray': function(bf) {
      if (Array['isArray'](bf)) throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
      return this['count'] = void 0x0 !== bf ? bf['length'] / this['itemSize'] : 0x0, this['array'] = bf, this;
    },
    'setDynamic': function(bf) {
      return this['dynamic'] = bf, this;
    },
    'copy': function(bf) {
      return this['name'] = bf['name'], this['array'] = new bf['array']['constructor'](bf['array']), this['itemSize'] = bf['itemSize'], this['count'] = bf['count'], this['normalized'] = bf['normalized'], this['dynamic'] = bf['dynamic'], this;
    },
    'copyAt': function(bf, bg, bh) {
      bf *= this['itemSize'], bh *= bg['itemSize'];
      for (var bi = 0x0, bF = this['itemSize']; bi < bF; bi++) this['array'][bf + bi] = bg['array'][bh + bi];
      return this;
    },
    'copyArray': function(bf) {
      return this['array']['set'](bf), this;
    },
    'copyColorsArray': function(bf) {
      for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
        var bG = bf[bi];
        void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyColorsArray():\x20color\x20is\x20undefined', bi), bG = new w7()), bg[bh++] = bG['r'], bg[bh++] = bG['g'], bg[bh++] = bG['b'];
      }
      return this;
    },
    'copyVector2sArray': function(bf) {
      for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
        var bG = bf[bi];
        void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector2sArray():\x20vector\x20is\x20undefined', bi), bG = new eC()), bg[bh++] = bG['x'], bg[bh++] = bG['y'];
      }
      return this;
    },
    'copyVector3sArray': function(bf) {
      for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
        var bG = bf[bi];
        void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector3sArray():\x20vector\x20is\x20undefined', bi), bG = new eK()), bg[bh++] = bG['x'], bg[bh++] = bG['y'], bg[bh++] = bG['z'];
      }
      return this;
    },
    'copyVector4sArray': function(bf) {
      for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
        var bG = bf[bi];
        void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector4sArray():\x20vector\x20is\x20undefined', bi), bG = new m7()), bg[bh++] = bG['x'], bg[bh++] = bG['y'], bg[bh++] = bG['z'], bg[bh++] = bG['w'];
      }
      return this;
    },
    'set': function(bf, bg) {
      return void 0x0 === bg && (bg = 0x0), this['array']['set'](bf, bg), this;
    },
    'getX': function(bf) {
      return this['array'][bf * this['itemSize']];
    },
    'setX': function(bf, bg) {
      return this['array'][bf * this['itemSize']] = bg, this;
    },
    'getY': function(bf) {
      return this['array'][bf * this['itemSize'] + 0x1];
    },
    'setY': function(bf, bg) {
      return this['array'][bf * this['itemSize'] + 0x1] = bg, this;
    },
    'getZ': function(bf) {
      return this['array'][bf * this['itemSize'] + 0x2];
    },
    'setZ': function(bf, bg) {
      return this['array'][bf * this['itemSize'] + 0x2] = bg, this;
    },
    'getW': function(bf) {
      return this['array'][bf * this['itemSize'] + 0x3];
    },
    'setW': function(bf, bg) {
      return this['array'][bf * this['itemSize'] + 0x3] = bg, this;
    },
    'setXY': function(bf, bg, bh) {
      return bf *= this['itemSize'], this['array'][bf + 0x0] = bg, this['array'][bf + 0x1] = bh, this;
    },
    'setXYZ': function(bf, bg, bh, bi) {
      return bf *= this['itemSize'], this['array'][bf + 0x0] = bg, this['array'][bf + 0x1] = bh, this['array'][bf + 0x2] = bi, this;
    },
    'setXYZW': function(bf, bg, bh, bi, bF) {
      return bf *= this['itemSize'], this['array'][bf + 0x0] = bg, this['array'][bf + 0x1] = bh, this['array'][bf + 0x2] = bi, this['array'][bf + 0x3] = bF, this;
    },
    'onUpload': function(bf) {
      return this['onUploadCallback'] = bf, this;
    },
    'clone': function() {
      return new this['constructor'](this['array'], this['itemSize'])['copy'](this);
    },
    'toJSON': function() {
      return {
        'itemSize': this['itemSize'],
        'type': this['array']['constructor']['name'],
        'array': Array['prototype']['slice']['call'](this['array']),
        'normalized': this['normalized']
      };
    }
  }), AM['prototype'] = Object['create'](AI['prototype']), AM['prototype']['constructor'] = AM, AQ['prototype'] = Object['create'](AI['prototype']), AQ['prototype']['constructor'] = AQ, AU['prototype'] = Object['create'](AI['prototype']), AU['prototype']['constructor'] = AU, AY['prototype'] = Object['create'](AI['prototype']), AY['prototype']['constructor'] = AY, B2['prototype'] = Object['create'](AI['prototype']), B2['prototype']['constructor'] = B2, B6['prototype'] = Object['create'](AI['prototype']), B6['prototype']['constructor'] = B6, Ba['prototype'] = Object['create'](AI['prototype']), Ba['prototype']['constructor'] = Ba, Be['prototype'] = Object['create'](AI['prototype']), Be['prototype']['constructor'] = Be, Bi['prototype'] = Object['create'](AI['prototype']), Bi['prototype']['constructor'] = Bi, Object['assign'](Bm['prototype'], {
    'computeGroups': function(bf) {
      for (var bg, bh = [], bi = void 0x0, bF = bf['faces'], bG = 0x0; bG < bF['length']; bG++) {
        var bH = bF[bG];
        bH['materialIndex'] !== bi && (bi = bH['materialIndex'], void 0x0 !== bg && (bg['count'] = 0x3 * bG - bg['start'], bh['push'](bg)), bg = {
          'start': 0x3 * bG,
          'materialIndex': bi
        });
      }
      void 0x0 !== bg && (bg['count'] = 0x3 * bG - bg['start'], bh['push'](bg)), this['groups'] = bh;
    },
    'fromGeometry': function(bf) {
      var bg, bh = bf['faces'],
        bi = bf['vertices'],
        bF = bf['faceVertexUvs'],
        bG = bF[0x0] && bF[0x0]['length'] > 0x0,
        bH = bF[0x1] && bF[0x1]['length'] > 0x0,
        bI = bf['morphTargets'],
        bJ = bI['length'];
      if (bJ > 0x0) {
        bg = [];
        for (var bK = 0x0; bK < bJ; bK++) bg[bK] = {
          'name': bI[bK]['name'],
          'data': []
        };
        this['morphTargets']['position'] = bg;
      }
      var bL, bM = bf['morphNormals'],
        bN = bM['length'];
      if (bN > 0x0) {
        bL = [];
        for (bK = 0x0; bK < bN; bK++) bL[bK] = {
          'name': bM[bK]['name'],
          'data': []
        };
        this['morphTargets']['normal'] = bL;
      }
      var bO = bf['skinIndices'],
        bP = bf['skinWeights'],
        bQ = bO['length'] === bi['length'],
        bR = bP['length'] === bi['length'];
      bi['length'] > 0x0 && 0x0 === bh['length'] && console['error']('THREE.DirectGeometry:\x20Faceless\x20geometries\x20are\x20not\x20supported.');
      for (bK = 0x0; bK < bh['length']; bK++) {
        var bS = bh[bK];
        this['vertices']['push'](bi[bS['a']], bi[bS['b']], bi[bS['c']]);
        var bT = bS['vertexNormals'];
        if (0x3 === bT['length']) this['normals']['push'](bT[0x0], bT[0x1], bT[0x2]);
        else {
          var bU = bS['normal'];
          this['normals']['push'](bU, bU, bU);
        }
        var bV, bW = bS['vertexColors'];
        if (0x3 === bW['length']) this['colors']['push'](bW[0x0], bW[0x1], bW[0x2]);
        else {
          var bX = bS['color'];
          this['colors']['push'](bX, bX, bX);
        }
        if (!0x0 === bG) void 0x0 !== (bV = bF[0x0][bK]) ? this['uvs']['push'](bV[0x0], bV[0x1], bV[0x2]) : (console['warn']('THREE.DirectGeometry.fromGeometry():\x20Undefined\x20vertexUv\x20', bK), this['uvs']['push'](new eC(), new eC(), new eC()));
        if (!0x0 === bH) void 0x0 !== (bV = bF[0x1][bK]) ? this['uvs2']['push'](bV[0x0], bV[0x1], bV[0x2]) : (console['warn']('THREE.DirectGeometry.fromGeometry():\x20Undefined\x20vertexUv2\x20', bK), this['uvs2']['push'](new eC(), new eC(), new eC()));
        for (var bY = 0x0; bY < bJ; bY++) {
          var bZ = bI[bY]['vertices'];
          bg[bY]['data']['push'](bZ[bS['a']], bZ[bS['b']], bZ[bS['c']]);
        }
        for (bY = 0x0; bY < bN; bY++) {
          var c0 = bM[bY]['vertexNormals'][bK];
          bL[bY]['data']['push'](c0['a'], c0['b'], c0['c']);
        }
        bQ && this['skinIndices']['push'](bO[bS['a']], bO[bS['b']], bO[bS['c']]), bR && this['skinWeights']['push'](bP[bS['a']], bP[bS['b']], bP[bS['c']]);
      }
      return this['computeGroups'](bf), this['verticesNeedUpdate'] = bf['verticesNeedUpdate'], this['normalsNeedUpdate'] = bf['normalsNeedUpdate'], this['colorsNeedUpdate'] = bf['colorsNeedUpdate'], this['uvsNeedUpdate'] = bf['uvsNeedUpdate'], this['groupsNeedUpdate'] = bf['groupsNeedUpdate'], this;
    }
  });
  var Ge = 0x1;

  function Gf() {
    Object['defineProperty'](this, 'id', {
      'value': Ge += 0x2
    }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['type'] = 'BufferGeometry', this['index'] = null, this['attributes'] = {}, this['morphAttributes'] = {}, this['groups'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['drawRange'] = {
      'start': 0x0,
      'count': 0x1 / 0x0
    }, this['userData'] = {};
  }

  function Gg(bf, bg, bh, bi, bF, bG) {
    AH['call'](this), this['type'] = 'BoxGeometry', this['parameters'] = {
      'width': bf,
      'height': bg,
      'depth': bh,
      'widthSegments': bi,
      'heightSegments': bF,
      'depthSegments': bG
    }, this['fromBufferGeometry'](new Gn(bf, bg, bh, bi, bF, bG)), this['mergeVertices']();
  }

  function Gn(bf, bg, bh, bi, bF, bG) {
    Gf['call'](this), this['type'] = 'BoxBufferGeometry', this['parameters'] = {
      'width': bf,
      'height': bg,
      'depth': bh,
      'widthSegments': bi,
      'heightSegments': bF,
      'depthSegments': bG
    };
    var bH = this;
    bf = bf || 0x1, bg = bg || 0x1, bh = bh || 0x1, bi = Math['floor'](bi) || 0x1, bF = Math['floor'](bF) || 0x1, bG = Math['floor'](bG) || 0x1;
    var bI = [],
      bJ = [],
      bK = [],
      bL = [],
      bM = 0x0,
      bN = 0x0;

    function bO(bf, bg, bh, bi, bF, bG, bO, bP, bQ, bR, bS) {
      var bT, bU, bV = bG / bQ,
        bW = bO / bR,
        bX = bG / 0x2,
        bY = bO / 0x2,
        bZ = bP / 0x2,
        c0 = bQ + 0x1,
        c1 = bR + 0x1,
        c2 = 0x0,
        c3 = 0x0,
        c4 = new eK();
      for (bU = 0x0; bU < c1; bU++) {
        var c5 = bU * bW - bY;
        for (bT = 0x0; bT < c0; bT++) {
          var c6 = bT * bV - bX;
          c4[bf] = c6 * bi, c4[bg] = c5 * bF, c4[bh] = bZ, bJ['push'](c4['x'], c4['y'], c4['z']), c4[bf] = 0x0, c4[bg] = 0x0, c4[bh] = bP > 0x0 ? 0x1 : -0x1, bK['push'](c4['x'], c4['y'], c4['z']), bL['push'](bT / bQ), bL['push'](0x1 - bU / bR), c2 += 0x1;
        }
      }
      for (bU = 0x0; bU < bR; bU++)
        for (bT = 0x0; bT < bQ; bT++) {
          var c7 = bM + bT + c0 * bU,
            c8 = bM + bT + c0 * (bU + 0x1),
            c9 = bM + (bT + 0x1) + c0 * (bU + 0x1),
            ca = bM + (bT + 0x1) + c0 * bU;
          bI['push'](c7, c8, ca), bI['push'](c8, c9, ca), c3 += 0x6;
        }
      bH['addGroup'](bN, c3, bS), bN += c3, bM += c2;
    }
    bO('z', 'y', 'x', -0x1, -0x1, bh, bg, bf, bG, bF, 0x0), bO('z', 'y', 'x', 0x1, -0x1, bh, bg, -bf, bG, bF, 0x1), bO('x', 'z', 'y', 0x1, 0x1, bf, bh, bg, bi, bG, 0x2), bO('x', 'z', 'y', 0x1, -0x1, bf, bh, -bg, bi, bG, 0x3), bO('x', 'y', 'z', 0x1, -0x1, bf, bg, bh, bi, bF, 0x4), bO('x', 'y', 'z', -0x1, -0x1, bf, bg, -bh, bi, bF, 0x5), this['setIndex'](bI), this['addAttribute']('position', new Be(bJ, 0x3)), this['addAttribute']('normal', new Be(bK, 0x3)), this['addAttribute']('uv', new Be(bL, 0x2));
  }

  function H5(bf, bg, bh, bi) {
    AH['call'](this), this['type'] = 'PlaneGeometry', this['parameters'] = {
      'width': bf,
      'height': bg,
      'widthSegments': bh,
      'heightSegments': bi
    }, this['fromBufferGeometry'](new Ha(bf, bg, bh, bi)), this['mergeVertices']();
  }

  function Ha(bf, bg, bh, bi) {
    Gf['call'](this), this['type'] = 'PlaneBufferGeometry', this['parameters'] = {
      'width': bf,
      'height': bg,
      'widthSegments': bh,
      'heightSegments': bi
    };
    var bF, bG, bH = (bf = bf || 0x1) / 0x2,
      bI = (bg = bg || 0x1) / 0x2,
      bJ = Math['floor'](bh) || 0x1,
      bK = Math['floor'](bi) || 0x1,
      bL = bJ + 0x1,
      bM = bK + 0x1,
      bN = bf / bJ,
      bO = bg / bK,
      bP = [],
      bQ = [],
      bR = [],
      bS = [];
    for (bG = 0x0; bG < bM; bG++) {
      var bT = bG * bO - bI;
      for (bF = 0x0; bF < bL; bF++) {
        var bU = bF * bN - bH;
        bQ['push'](bU, -bT, 0x0), bR['push'](0x0, 0x0, 0x1), bS['push'](bF / bJ), bS['push'](0x1 - bG / bK);
      }
    }
    for (bG = 0x0; bG < bK; bG++)
      for (bF = 0x0; bF < bJ; bF++) {
        var bV = bF + bL * bG,
          bW = bF + bL * (bG + 0x1),
          bX = bF + 0x1 + bL * (bG + 0x1),
          bY = bF + 0x1 + bL * bG;
        bP['push'](bV, bW, bY), bP['push'](bW, bX, bY);
      }
    this['setIndex'](bP), this['addAttribute']('position', new Be(bQ, 0x3)), this['addAttribute']('normal', new Be(bR, 0x3)), this['addAttribute']('uv', new Be(bS, 0x2));
  }
  Gf['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
    'constructor': Gf,
    'isBufferGeometry': !0x0,
    'getIndex': function() {
      return this['index'];
    },
    'setIndex': function(bf) {
      Array['isArray'](bf) ? this['index'] = new((Bn(bf)) > 0xffff ? Ba : B2)(bf, 0x1) : this['index'] = bf;
    },
    'addAttribute': function(bf, bg) {
      return bg && bg['isBufferAttribute'] || bg && bg['isInterleavedBufferAttribute'] ? 'index' === bf ? (console['warn']('THREE.BufferGeometry.addAttribute:\x20Use\x20.setIndex()\x20for\x20index\x20attribute.'), this['setIndex'](bg), this) : (this['attributes'][bf] = bg, this) : (console['warn']('THREE.BufferGeometry:\x20.addAttribute()\x20now\x20expects\x20(\x20name,\x20attribute\x20).'), this['addAttribute'](bf, new AI(arguments[0x1], arguments[0x2])));
    },
    'getAttribute': function(bf) {
      return this['attributes'][bf];
    },
    'removeAttribute': function(bf) {
      return delete this['attributes'][bf], this;
    },
    'addGroup': function(bf, bg, bh) {
      this['groups']['push']({
        'start': bf,
        'count': bg,
        'materialIndex': void 0x0 !== bh ? bh : 0x0
      });
    },
    'clearGroups': function() {
      this['groups'] = [];
    },
    'setDrawRange': function(bf, bg) {
      this['drawRange']['start'] = bf, this['drawRange']['count'] = bg;
    },
    'applyMatrix': function(bf) {
      var bg = this['attributes']['position'];
      void 0x0 !== bg && (bf['applyToBufferAttribute'](bg), bg['needsUpdate'] = !0x0);
      var bh = this['attributes']['normal'];
      void 0x0 !== bh && (new eO()['getNormalMatrix'](bf)['applyToBufferAttribute'](bh), bh['needsUpdate'] = !0x0);
      var bi = this['attributes']['tangent'];
      void 0x0 !== bi && (new eO()['getNormalMatrix'](bf)['applyToBufferAttribute'](bi), bi['needsUpdate'] = !0x0);
      return null !== this['boundingBox'] && this['computeBoundingBox'](), null !== this['boundingSphere'] && this['computeBoundingSphere'](), this;
    },
    'rotateX': function() {
      var bf = new mR();
      return function(bg) {
        return bf['makeRotationX'](bg), this['applyMatrix'](bf), this;
      };
    }(),
    'rotateY': function() {
      var bf = new mR();
      return function(bg) {
        return bf['makeRotationY'](bg), this['applyMatrix'](bf), this;
      };
    }(),
    'rotateZ': function() {
      var bf = new mR();
      return function(bg) {
        return bf['makeRotationZ'](bg), this['applyMatrix'](bf), this;
      };
    }(),
    'translate': function() {
      var bf = new mR();
      return function(bg, bh, bi) {
        return bf['makeTranslation'](bg, bh, bi), this['applyMatrix'](bf), this;
      };
    }(),
    'scale': function() {
      var bf = new mR();
      return function(bg, bh, bi) {
        return bf['makeScale'](bg, bh, bi), this['applyMatrix'](bf), this;
      };
    }(),
    'lookAt': function() {
      var bf = new yT();
      return function(bg) {
        bf['lookAt'](bg), bf['updateMatrix'](), this['applyMatrix'](bf['matrix']);
      };
    }(),
    'center': function() {
      var bf = new eK();
      return function() {
        return this['computeBoundingBox'](), this['boundingBox']['getCenter'](bf)['negate'](), this['translate'](bf['x'], bf['y'], bf['z']), this;
      };
    }(),
    'setFromObject': function(bf) {
      var bg = bf['geometry'];
      if (bf['isPoints'] || bf['isLine']) {
        var bh = new Be(0x3 * bg['vertices']['length'], 0x3),
          bi = new Be(0x3 * bg['colors']['length'], 0x3);
        if (this['addAttribute']('position', bh['copyVector3sArray'](bg['vertices'])), this['addAttribute']('color', bi['copyColorsArray'](bg['colors'])), bg['lineDistances'] && bg['lineDistances']['length'] === bg['vertices']['length']) {
          var bF = new Be(bg['lineDistances']['length'], 0x1);
          this['addAttribute']('lineDistance', bF['copyArray'](bg['lineDistances']));
        }
        null !== bg['boundingSphere'] && (this['boundingSphere'] = bg['boundingSphere']['clone']()), null !== bg['boundingBox'] && (this['boundingBox'] = bg['boundingBox']['clone']());
      } else bf['isMesh'] && bg && bg['isGeometry'] && this['fromGeometry'](bg);
      return this;
    },
    'setFromPoints': function(bf) {
      for (var bg = [], bh = 0x0, bi = bf['length']; bh < bi; bh++) {
        var bF = bf[bh];
        bg['push'](bF['x'], bF['y'], bF['z'] || 0x0);
      }
      return this['addAttribute']('position', new Be(bg, 0x3)), this;
    },
    'updateFromObject': function(bf) {
      var bg, bh = bf['geometry'];
      if (bf['isMesh']) {
        var bi = bh['__directGeometry'];
        if (!0x0 === bh['elementsNeedUpdate'] && (bi = void 0x0, bh['elementsNeedUpdate'] = !0x1), void 0x0 === bi) return this['fromGeometry'](bh);
        bi['verticesNeedUpdate'] = bh['verticesNeedUpdate'], bi['normalsNeedUpdate'] = bh['normalsNeedUpdate'], bi['colorsNeedUpdate'] = bh['colorsNeedUpdate'], bi['uvsNeedUpdate'] = bh['uvsNeedUpdate'], bi['groupsNeedUpdate'] = bh['groupsNeedUpdate'], bh['verticesNeedUpdate'] = !0x1, bh['normalsNeedUpdate'] = !0x1, bh['colorsNeedUpdate'] = !0x1, bh['uvsNeedUpdate'] = !0x1, bh['groupsNeedUpdate'] = !0x1, bh = bi;
      }
      return !0x0 === bh['verticesNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['position']) && (bg['copyVector3sArray'](bh['vertices']), bg['needsUpdate'] = !0x0), bh['verticesNeedUpdate'] = !0x1), !0x0 === bh['normalsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['normal']) && (bg['copyVector3sArray'](bh['normals']), bg['needsUpdate'] = !0x0), bh['normalsNeedUpdate'] = !0x1), !0x0 === bh['colorsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['color']) && (bg['copyColorsArray'](bh['colors']), bg['needsUpdate'] = !0x0), bh['colorsNeedUpdate'] = !0x1), bh['uvsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['uv']) && (bg['copyVector2sArray'](bh['uvs']), bg['needsUpdate'] = !0x0), bh['uvsNeedUpdate'] = !0x1), bh['lineDistancesNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['lineDistance']) && (bg['copyArray'](bh['lineDistances']), bg['needsUpdate'] = !0x0), bh['lineDistancesNeedUpdate'] = !0x1), bh['groupsNeedUpdate'] && (bh['computeGroups'](bf['geometry']), this['groups'] = bh['groups'], bh['groupsNeedUpdate'] = !0x1), this;
    },
    'fromGeometry': function(bf) {
      return bf['__directGeometry'] = new Bm()['fromGeometry'](bf), this['fromDirectGeometry'](bf['__directGeometry']);
    },
    'fromDirectGeometry': function(bf) {
      var bg = new Float32Array(0x3 * bf['vertices']['length']);
      if (this['addAttribute']('position', new AI(bg, 0x3)['copyVector3sArray'](bf['vertices'])), bf['normals']['length'] > 0x0) {
        var bh = new Float32Array(0x3 * bf['normals']['length']);
        this['addAttribute']('normal', new AI(bh, 0x3)['copyVector3sArray'](bf['normals']));
      }
      if (bf['colors']['length'] > 0x0) {
        var bi = new Float32Array(0x3 * bf['colors']['length']);
        this['addAttribute']('color', new AI(bi, 0x3)['copyColorsArray'](bf['colors']));
      }
      if (bf['uvs']['length'] > 0x0) {
        var bF = new Float32Array(0x2 * bf['uvs']['length']);
        this['addAttribute']('uv', new AI(bF, 0x2)['copyVector2sArray'](bf['uvs']));
      }
      if (bf['uvs2']['length'] > 0x0) {
        var bG = new Float32Array(0x2 * bf['uvs2']['length']);
        this['addAttribute']('uv2', new AI(bG, 0x2)['copyVector2sArray'](bf['uvs2']));
      }
      for (var bH in this['groups'] = bf['groups'], bf['morphTargets']) {
        for (var bI = [], bJ = bf['morphTargets'][bH], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
          var bM = bJ[bK],
            bN = new Be(0x3 * bM['data']['length'], 0x3);
          bN['name'] = bM['name'], bI['push'](bN['copyVector3sArray'](bM['data']));
        }
        this['morphAttributes'][bH] = bI;
      }
      if (bf['skinIndices']['length'] > 0x0) {
        var bO = new Be(0x4 * bf['skinIndices']['length'], 0x4);
        this['addAttribute']('skinIndex', bO['copyVector4sArray'](bf['skinIndices']));
      }
      if (bf['skinWeights']['length'] > 0x0) {
        var bP = new Be(0x4 * bf['skinWeights']['length'], 0x4);
        this['addAttribute']('skinWeight', bP['copyVector4sArray'](bf['skinWeights']));
      }
      return null !== bf['boundingSphere'] && (this['boundingSphere'] = bf['boundingSphere']['clone']()), null !== bf['boundingBox'] && (this['boundingBox'] = bf['boundingBox']['clone']()), this;
    },
    'computeBoundingBox': function() {
      var bf = new mB();
      return function() {
        null === this['boundingBox'] && (this['boundingBox'] = new mB());
        var bg = this['attributes']['position'],
          bh = this['morphAttributes']['position'];
        if (void 0x0 !== bg) {
          if (this['boundingBox']['setFromBufferAttribute'](bg), bh)
            for (var bi = 0x0, bF = bh['length']; bi < bF; bi++) {
              var bG = bh[bi];
              bf['setFromBufferAttribute'](bG), this['boundingBox']['expandByPoint'](bf['min']), this['boundingBox']['expandByPoint'](bf['max']);
            }
        } else this['boundingBox']['makeEmpty']();
        (isNaN(this['boundingBox']['min']['x']) || isNaN(this['boundingBox']['min']['y']) || isNaN(this['boundingBox']['min']['z'])) && console['error']('THREE.BufferGeometry.computeBoundingBox:\x20Computed\x20min/max\x20have\x20NaN\x20values.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.', this);
      };
    }(),
    'computeBoundingSphere': function() {
      var bf = new mB(),
        bg = new mB(),
        bh = new eK();
      return function() {
        null === this['boundingSphere'] && (this['boundingSphere'] = new mE());
        var bi = this['attributes']['position'],
          bF = this['morphAttributes']['position'];
        if (bi) {
          var bG = this['boundingSphere']['center'];
          if (bf['setFromBufferAttribute'](bi), bF)
            for (var bH = 0x0, bI = bF['length']; bH < bI; bH++) {
              var bJ = bF[bH];
              bg['setFromBufferAttribute'](bJ), bf['expandByPoint'](bg['min']), bf['expandByPoint'](bg['max']);
            }
          bf['getCenter'](bG);
          var bK = 0x0;
          for (bH = 0x0, bI = bi['count']; bH < bI; bH++) bh['fromBufferAttribute'](bi, bH), bK = Math['max'](bK, bG['distanceToSquared'](bh));
          if (bF)
            for (bH = 0x0, bI = bF['length']; bH < bI; bH++)
              for (var bL = 0x0, bM = (bJ = bF[bH])['count']; bL < bM; bL++) bh['fromBufferAttribute'](bJ, bL), bK = Math['max'](bK, bG['distanceToSquared'](bh));
          this['boundingSphere']['radius'] = Math['sqrt'](bK), isNaN(this['boundingSphere']['radius']) && console['error']('THREE.BufferGeometry.computeBoundingSphere():\x20Computed\x20radius\x20is\x20NaN.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.', this);
        }
      };
    }(),
    'computeFaceNormals': function() {},
    'computeVertexNormals': function() {
      var bf = this['index'],
        bg = this['attributes'];
      if (bg['position']) {
        var bh = bg['position']['array'];
        if (void 0x0 === bg['normal']) this['addAttribute']('normal', new AI(new Float32Array(bh['length']), 0x3));
        else
          for (var bi = bg['normal']['array'], bF = 0x0, bG = bi['length']; bF < bG; bF++) bi[bF] = 0x0;
        var bH, bI, bJ, bK = bg['normal']['array'],
          bL = new eK(),
          bM = new eK(),
          bN = new eK(),
          bO = new eK(),
          bP = new eK();
        if (bf) {
          var bQ = bf['array'];
          for (bF = 0x0, bG = bf['count']; bF < bG; bF += 0x3) bH = 0x3 * bQ[bF + 0x0], bI = 0x3 * bQ[bF + 0x1], bJ = 0x3 * bQ[bF + 0x2], bL['fromArray'](bh, bH), bM['fromArray'](bh, bI), bN['fromArray'](bh, bJ), bO['subVectors'](bN, bM), bP['subVectors'](bL, bM), bO['cross'](bP), bK[bH] += bO['x'], bK[bH + 0x1] += bO['y'], bK[bH + 0x2] += bO['z'], bK[bI] += bO['x'], bK[bI + 0x1] += bO['y'], bK[bI + 0x2] += bO['z'], bK[bJ] += bO['x'], bK[bJ + 0x1] += bO['y'], bK[bJ + 0x2] += bO['z'];
        } else
          for (bF = 0x0, bG = bh['length']; bF < bG; bF += 0x9) bL['fromArray'](bh, bF), bM['fromArray'](bh, bF + 0x3), bN['fromArray'](bh, bF + 0x6), bO['subVectors'](bN, bM), bP['subVectors'](bL, bM), bO['cross'](bP), bK[bF] = bO['x'], bK[bF + 0x1] = bO['y'], bK[bF + 0x2] = bO['z'], bK[bF + 0x3] = bO['x'], bK[bF + 0x4] = bO['y'], bK[bF + 0x5] = bO['z'], bK[bF + 0x6] = bO['x'], bK[bF + 0x7] = bO['y'], bK[bF + 0x8] = bO['z'];
        this['normalizeNormals'](), bg['normal']['needsUpdate'] = !0x0;
      }
    },
    'merge': function(bf, bg) {
      if (bf && bf['isBufferGeometry']) {
        void 0x0 === bg && (bg = 0x0, console['warn']('THREE.BufferGeometry.merge():\x20Overwriting\x20original\x20geometry,\x20starting\x20at\x20offset=0.\x20Use\x20BufferGeometryUtils.mergeBufferGeometries()\x20for\x20lossless\x20merge.'));
        var bh = this['attributes'];
        for (var bi in bh)
          if (void 0x0 !== bf['attributes'][bi])
            for (var bF = bh[bi]['array'], bG = bf['attributes'][bi], bH = bG['array'], bI = bG['itemSize'] * bg, bJ = Math['min'](bH['length'], bF['length'] - bI), bK = 0x0, bL = bI; bK < bJ; bK++, bL++) bF[bL] = bH[bK];
        return this;
      }
      console['error']('THREE.BufferGeometry.merge():\x20geometry\x20not\x20an\x20instance\x20of\x20THREE.BufferGeometry.', bf);
    },
    'normalizeNormals': function() {
      var bf = new eK();
      return function() {
        for (var bg = this['attributes']['normal'], bh = 0x0, bi = bg['count']; bh < bi; bh++) bf['x'] = bg['getX'](bh), bf['y'] = bg['getY'](bh), bf['z'] = bg['getZ'](bh), bf['normalize'](), bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
      };
    }(),
    'toNonIndexed': function() {
      function bf(bf, bg) {
        for (var bh = bf['array'], bi = bf['itemSize'], bF = new bh['constructor'](bg['length'] * bi), bG = 0x0, bH = 0x0, bI = 0x0, bJ = bg['length']; bI < bJ; bI++) {
          bG = bg[bI] * bi;
          for (var bK = 0x0; bK < bi; bK++) bF[bH++] = bh[bG++];
        }
        return new AI(bF, bi);
      }
      if (null === this['index']) return console['warn']('THREE.BufferGeometry.toNonIndexed():\x20Geometry\x20is\x20already\x20non-indexed.'), this;
      var bg = new Gf(),
        bh = this['index']['array'],
        bi = this['attributes'];
      for (var bF in bi) {
        var bG = bf(bi[bF], bh);
        bg['addAttribute'](bF, bG);
      }
      var bH = this['morphAttributes'];
      for (bF in bH) {
        for (var bI = [], bJ = bH[bF], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
          bG = bf(bJ[bK], bh);
          bI['push'](bG);
        }
        bg['morphAttributes'][bF] = bI;
      }
      for (var bM = this['groups'], bN = (bK = 0x0, bM['length']); bK < bN; bK++) {
        var bO = bM[bK];
        bg['addGroup'](bO['start'], bO['count'], bO['materialIndex']);
      }
      return bg;
    },
    'toJSON': function() {
      var bf = {
        'metadata': {
          'version': 4.5,
          'type': 'BufferGeometry',
          'generator': 'BufferGeometry.toJSON'
        }
      };
      if (bf['uuid'] = this['uuid'], bf['type'] = this['type'], '' !== this['name'] && (bf['name'] = this['name']), Object['keys'](this['userData'])['length'] > 0x0 && (bf['userData'] = this['userData']), void 0x0 !== this['parameters']) {
        var bg = this['parameters'];
        for (var bh in bg) void 0x0 !== bg[bh] && (bf[bh] = bg[bh]);
        return bf;
      }
      bf['data'] = {
        'attributes': {}
      };
      var bi = this['index'];
      null !== bi && (bf['data']['index'] = {
        'type': bi['array']['constructor']['name'],
        'array': Array['prototype']['slice']['call'](bi['array'])
      });
      var bF = this['attributes'];
      for (var bh in bF) {
        var bG = (bN = bF[bh])['toJSON']();
        '' !== bN['name'] && (bG['name'] = bN['name']), bf['data']['attributes'][bh] = bG;
      }
      var bH = {},
        bI = !0x1;
      for (var bh in this['morphAttributes']) {
        for (var bJ = this['morphAttributes'][bh], bK = [], bL = 0x0, bM = bJ['length']; bL < bM; bL++) {
          var bN;
          bG = (bN = bJ[bL])['toJSON']();
          '' !== bN['name'] && (bG['name'] = bN['name']), bK['push'](bG);
        }
        bK['length'] > 0x0 && (bH[bh] = bK, bI = !0x0);
      }
      bI && (bf['data']['morphAttributes'] = bH);
      var bO = this['groups'];
      bO['length'] > 0x0 && (bf['data']['groups'] = JSON['parse'](JSON['stringify'](bO)));
      var bP = this['boundingSphere'];
      return null !== bP && (bf['data']['boundingSphere'] = {
        'center': bP['center']['toArray'](),
        'radius': bP['radius']
      }), bf;
    },
    'clone': function() {
      return new Gf()['copy'](this);
    },
    'copy': function(bf) {
      var bg, bh, bi;
      this['index'] = null, this['attributes'] = {}, this['morphAttributes'] = {}, this['groups'] = [], this['boundingBox'] = null, this['boundingSphere'] = null, this['name'] = bf['name'];
      var bF = bf['index'];
      null !== bF && this['setIndex'](bF['clone']());
      var bG = bf['attributes'];
      for (bg in bG) {
        var bH = bG[bg];
        this['addAttribute'](bg, bH['clone']());
      }
      var bI = bf['morphAttributes'];
      for (bg in bI) {
        var bJ = [],
          bK = bI[bg];
        for (bh = 0x0, bi = bK['length']; bh < bi; bh++) bJ['push'](bK[bh]['clone']());
        this['morphAttributes'][bg] = bJ;
      }
      var bL = bf['groups'];
      for (bh = 0x0, bi = bL['length']; bh < bi; bh++) {
        var bM = bL[bh];
        this['addGroup'](bM['start'], bM['count'], bM['materialIndex']);
      }
      var bN = bf['boundingBox'];
      null !== bN && (this['boundingBox'] = bN['clone']());
      var bO = bf['boundingSphere'];
      return null !== bO && (this['boundingSphere'] = bO['clone']()), this['drawRange']['start'] = bf['drawRange']['start'], this['drawRange']['count'] = bf['drawRange']['count'], this['userData'] = bf['userData'], this;
    },
    'dispose': function() {
      this['dispatchEvent']({
        'type': 'dispose'
      });
    }
  }), Gg['prototype'] = Object['create'](AH['prototype']), Gg['prototype']['constructor'] = Gg, Gn['prototype'] = Object['create'](Gf['prototype']), Gn['prototype']['constructor'] = Gn, H5['prototype'] = Object['create'](AH['prototype']), H5['prototype']['constructor'] = H5, Ha['prototype'] = Object['create'](Gf['prototype']), Ha['prototype']['constructor'] = Ha;
  var Ke = 0x0;

  function Kf() {
    Object['defineProperty'](this, 'id', {
      'value': Ke++
    }), this['uuid'] = e2['generateUUID'](), this['name'] = '', this['type'] = 'Material', this['fog'] = !0x0, this['lights'] = !0x0, this['blending'] = c2, this['side'] = bT, this['flatShading'] = !0x1, this['vertexTangents'] = !0x1, this['vertexColors'] = bY, this['opacity'] = 0x1, this['transparent'] = !0x1, this['blendSrc'] = cg, this['blendDst'] = ch, this['blendEquation'] = c7, this['blendSrcAlpha'] = null, this['blendDstAlpha'] = null, this['blendEquationAlpha'] = null, this['depthFunc'] = cq, this['depthTest'] = !0x0, this['depthWrite'] = !0x0, this['clippingPlanes'] = null, this['clipIntersection'] = !0x1, this['clipShadows'] = !0x1, this['shadowSide'] = null, this['colorWrite'] = !0x0, this['precision'] = null, this['polygonOffset'] = !0x1, this['polygonOffsetFactor'] = 0x0, this['polygonOffsetUnits'] = 0x0, this['dithering'] = !0x1, this['alphaTest'] = 0x0, this['premultipliedAlpha'] = !0x1, this['visible'] = !0x0, this['userData'] = {}, this['needsUpdate'] = !0x0;
  }
  Kf['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
    'constructor': Kf,
    'isMaterial': !0x0,
    'onBeforeCompile': function() {},
    'setValues': function(bf) {
      if (void 0x0 !== bf)
        for (var bg in bf) {
          var bh = bf[bg];
          if (void 0x0 !== bh)
            if ('shading' !== bg) {
              var bi = this[bg];
              void 0x0 !== bi ? bi && bi['isColor'] ? bi['set'](bh) : bi && bi['isVector3'] && bh && bh['isVector3'] ? bi['copy'](bh) : this[bg] = bh : console['warn']('THREE.' + this['type'] + ':\x20\x27' + bg + '\x27\x20is\x20not\x20a\x20property\x20of\x20this\x20material.');
            } else console['warn']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.'), this['flatShading'] = bh === bW;
          else console['warn']('THREE.Material:\x20\x27' + bg + '\x27\x20parameter\x20is\x20undefined.');
        }
    },
    'toJSON': function(bf) {
      var bg = void 0x0 === bf || 'string' == typeof bf;
      bg && (bf = {
        'textures': {},
        'images': {}
      });
      var bh = {
        'metadata': {
          'version': 4.5,
          'type': 'Material',
          'generator': 'Material.toJSON'
        }
      };

      function bi(bf) {
        var bg = [];
        for (var bh in bf) {
          var bi = bf[bh];
          delete bi['metadata'], bg['push'](bi);
        }
        return bg;
      }
      if (bh['uuid'] = this['uuid'], bh['type'] = this['type'], '' !== this['name'] && (bh['name'] = this['name']), this['color'] && this['color']['isColor'] && (bh['color'] = this['color']['getHex']()), void 0x0 !== this['roughness'] && (bh['roughness'] = this['roughness']), void 0x0 !== this['metalness'] && (bh['metalness'] = this['metalness']), this['emissive'] && this['emissive']['isColor'] && (bh['emissive'] = this['emissive']['getHex']()), 0x1 !== this['emissiveIntensity'] && (bh['emissiveIntensity'] = this['emissiveIntensity']), this['specular'] && this['specular']['isColor'] && (bh['specular'] = this['specular']['getHex']()), void 0x0 !== this['shininess'] && (bh['shininess'] = this['shininess']), void 0x0 !== this['clearCoat'] && (bh['clearCoat'] = this['clearCoat']), void 0x0 !== this['clearCoatRoughness'] && (bh['clearCoatRoughness'] = this['clearCoatRoughness']), this['map'] && this['map']['isTexture'] && (bh['map'] = this['map']['toJSON'](bf)['uuid']), this['matcap'] && this['matcap']['isTexture'] && (bh['matcap'] = this['matcap']['toJSON'](bf)['uuid']), this['alphaMap'] && this['alphaMap']['isTexture'] && (bh['alphaMap'] = this['alphaMap']['toJSON'](bf)['uuid']), this['lightMap'] && this['lightMap']['isTexture'] && (bh['lightMap'] = this['lightMap']['toJSON'](bf)['uuid']), this['aoMap'] && this['aoMap']['isTexture'] && (bh['aoMap'] = this['aoMap']['toJSON'](bf)['uuid'], bh['aoMapIntensity'] = this['aoMapIntensity']), this['bumpMap'] && this['bumpMap']['isTexture'] && (bh['bumpMap'] = this['bumpMap']['toJSON'](bf)['uuid'], bh['bumpScale'] = this['bumpScale']), this['normalMap'] && this['normalMap']['isTexture'] && (bh['normalMap'] = this['normalMap']['toJSON'](bf)['uuid'], bh['normalMapType'] = this['normalMapType'], bh['normalScale'] = this['normalScale']['toArray']()), this['displacementMap'] && this['displacementMap']['isTexture'] && (bh['displacementMap'] = this['displacementMap']['toJSON'](bf)['uuid'], bh['displacementScale'] = this['displacementScale'], bh['displacementBias'] = this['displacementBias']), this['roughnessMap'] && this['roughnessMap']['isTexture'] && (bh['roughnessMap'] = this['roughnessMap']['toJSON'](bf)['uuid']), this['metalnessMap'] && this['metalnessMap']['isTexture'] && (bh['metalnessMap'] = this['metalnessMap']['toJSON'](bf)['uuid']), this['emissiveMap'] && this['emissiveMap']['isTexture'] && (bh['emissiveMap'] = this['emissiveMap']['toJSON'](bf)['uuid']), this['specularMap'] && this['specularMap']['isTexture'] && (bh['specularMap'] = this['specularMap']['toJSON'](bf)['uuid']), this['envMap'] && this['envMap']['isTexture'] && (bh['envMap'] = this['envMap']['toJSON'](bf)['uuid'], bh['reflectivity'] = this['reflectivity'], void 0x0 !== this['combine'] && (bh['combine'] = this['combine']), void 0x0 !== this['envMapIntensity'] && (bh['envMapIntensity'] = this['envMapIntensity'])), this['gradientMap'] && this['gradientMap']['isTexture'] && (bh['gradientMap'] = this['gradientMap']['toJSON'](bf)['uuid']), void 0x0 !== this['size'] && (bh['size'] = this['size']), void 0x0 !== this['sizeAttenuation'] && (bh['sizeAttenuation'] = this['sizeAttenuation']), this['blending'] !== c2 && (bh['blending'] = this['blending']), !0x0 === this['flatShading'] && (bh['flatShading'] = this['flatShading']), this['side'] !== bT && (bh['side'] = this['side']), this['vertexColors'] !== bY && (bh['vertexColors'] = this['vertexColors']), this['opacity'] < 0x1 && (bh['opacity'] = this['opacity']), !0x0 === this['transparent'] && (bh['transparent'] = this['transparent']), bh['depthFunc'] = this['depthFunc'], bh['depthTest'] = this['depthTest'], bh['depthWrite'] = this['depthWrite'], 0x0 !== this['rotation'] && (bh['rotation'] = this['rotation']), !0x0 === this['polygonOffset'] && (bh['polygonOffset'] = !0x0), 0x0 !== this['polygonOffsetFactor'] && (bh['polygonOffsetFactor'] = this['polygonOffsetFactor']), 0x0 !== this['polygonOffsetUnits'] && (bh['polygonOffsetUnits'] = this['polygonOffsetUnits']), 0x1 !== this['linewidth'] && (bh['linewidth'] = this['linewidth']), void 0x0 !== this['dashSize'] && (bh['dashSize'] = this['dashSize']), void 0x0 !== this['gapSize'] && (bh['gapSize'] = this['gapSize']), void 0x0 !== this['scale'] && (bh['scale'] = this['scale']), !0x0 === this['dithering'] && (bh['dithering'] = !0x0), this['alphaTest'] > 0x0 && (bh['alphaTest'] = this['alphaTest']), !0x0 === this['premultipliedAlpha'] && (bh['premultipliedAlpha'] = this['premultipliedAlpha']), !0x0 === this['wireframe'] && (bh['wireframe'] = this['wireframe']), this['wireframeLinewidth'] > 0x1 && (bh['wireframeLinewidth'] = this['wireframeLinewidth']), 'round' !== this['wireframeLinecap'] && (bh['wireframeLinecap'] = this['wireframeLinecap']), 'round' !== this['wireframeLinejoin'] && (bh['wireframeLinejoin'] = this['wireframeLinejoin']), !0x0 === this['morphTargets'] && (bh['morphTargets'] = !0x0), !0x0 === this['skinning'] && (bh['skinning'] = !0x0), !0x1 === this['visible'] && (bh['visible'] = !0x1), '{}' !== JSON['stringify'](this['userData']) && (bh['userData'] = this['userData']), bg) {
        var bF = bi(bf['textures']),
          bG = bi(bf['images']);
        bF['length'] > 0x0 && (bh['textures'] = bF), bG['length'] > 0x0 && (bh['images'] = bG);
      }
      return bh;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      this['name'] = bf['name'], this['fog'] = bf['fog'], this['lights'] = bf['lights'], this['blending'] = bf['blending'], this['side'] = bf['side'], this['flatShading'] = bf['flatShading'], this['vertexColors'] = bf['vertexColors'], this['opacity'] = bf['opacity'], this['transparent'] = bf['transparent'], this['blendSrc'] = bf['blendSrc'], this['blendDst'] = bf['blendDst'], this['blendEquation'] = bf['blendEquation'], this['blendSrcAlpha'] = bf['blendSrcAlpha'], this['blendDstAlpha'] = bf['blendDstAlpha'], this['blendEquationAlpha'] = bf['blendEquationAlpha'], this['depthFunc'] = bf['depthFunc'], this['depthTest'] = bf['depthTest'], this['depthWrite'] = bf['depthWrite'], this['colorWrite'] = bf['colorWrite'], this['precision'] = bf['precision'], this['polygonOffset'] = bf['polygonOffset'], this['polygonOffsetFactor'] = bf['polygonOffsetFactor'], this['polygonOffsetUnits'] = bf['polygonOffsetUnits'], this['dithering'] = bf['dithering'], this['alphaTest'] = bf['alphaTest'], this['premultipliedAlpha'] = bf['premultipliedAlpha'], this['visible'] = bf['visible'], this['userData'] = JSON['parse'](JSON['stringify'](bf['userData'])), this['clipShadows'] = bf['clipShadows'], this['clipIntersection'] = bf['clipIntersection'];
      var bg = bf['clippingPlanes'],
        bh = null;
      if (null !== bg) {
        var bi = bg['length'];
        bh = new Array(bi);
        for (var bF = 0x0; bF !== bi; ++bF) bh[bF] = bg[bF]['clone']();
      }
      return this['clippingPlanes'] = bh, this['shadowSide'] = bf['shadowSide'], this;
    },
    'dispose': function() {
      this['dispatchEvent']({
        'type': 'dispose'
      });
    }
  });
  var Kz, KA, KB, KC, KD, KE, KF, KG, KH, KI, KJ, KK, KL = 'void\x20main()\x20{\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}',
    KM = 'void\x20main()\x20{\x0a\x09gl_FragColor\x20=\x20vec4(\x201.0,\x200.0,\x200.0,\x201.0\x20);\x0a}';

  function KN(bf) {
    Kf['call'](this), this['type'] = 'ShaderMaterial', this['defines'] = {}, this['uniforms'] = {}, this['vertexShader'] = KL, this['fragmentShader'] = KM, this['linewidth'] = 0x1, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['fog'] = !0x1, this['lights'] = !0x1, this['clipping'] = !0x1, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['extensions'] = {
      'derivatives': !0x1,
      'fragDepth': !0x1,
      'drawBuffers': !0x1,
      'shaderTextureLOD': !0x1
    }, this['defaultAttributeValues'] = {
      'color': [0x1, 0x1, 0x1],
      'uv': [0x0, 0x0],
      'uv2': [0x0, 0x0]
    }, this['index0AttributeName'] = void 0x0, this['uniformsNeedUpdate'] = !0x1, void 0x0 !== bf && (void 0x0 !== bf['attributes'] && console['error']('THREE.ShaderMaterial:\x20attributes\x20should\x20now\x20be\x20defined\x20in\x20THREE.BufferGeometry\x20instead.'), this['setValues'](bf));
  }

  function KP(bf, bg) {
    this['origin'] = void 0x0 !== bf ? bf : new eK(), this['direction'] = void 0x0 !== bg ? bg : new eK();
  }

  function KS(bf, bg, bh) {
    this['a'] = void 0x0 !== bf ? bf : new eK(), this['b'] = void 0x0 !== bg ? bg : new eK(), this['c'] = void 0x0 !== bh ? bh : new eK();
  }

  function KW(bf) {
    Kf['call'](this), this['type'] = 'MeshBasicMaterial', this['color'] = new w7(0xffffff), this['map'] = null, this['lightMap'] = null, this['lightMapIntensity'] = 0x1, this['aoMap'] = null, this['aoMapIntensity'] = 0x1, this['specularMap'] = null, this['alphaMap'] = null, this['envMap'] = null, this['combine'] = cv, this['reflectivity'] = 0x1, this['refractionRatio'] = 0.98, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['wireframeLinecap'] = 'round', this['wireframeLinejoin'] = 'round', this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
  }

  function KY(bf, bg) {
    yT['call'](this), this['type'] = 'Mesh', this['geometry'] = void 0x0 !== bf ? bf : new Gf(), this['material'] = void 0x0 !== bg ? bg : new KW({
      'color': 0xffffff * Math['random']()
    }), this['drawMode'] = dN, this['updateMorphTargets']();
  }

  function L1(bf, bg, bh, bi) {
    var bF, bG, bH = new w7(0x0),
      bI = 0x0,
      bJ = null,
      bK = 0x0;

    function bL(bf, bh) {
      bg['buffers']['color']['setClear'](bf['r'], bf['g'], bf['b'], bh, bi);
    }
    return {
      'getClearColor': function() {
        return bH;
      },
      'setClearColor': function(bf, bg) {
        bH['set'](bf), bL(bH, bI = void 0x0 !== bg ? bg : 0x1);
      },
      'getClearAlpha': function() {
        return bI;
      },
      'setClearAlpha': function(bf) {
        bL(bH, bI = bf);
      },
      'render': function(bg, bi, bM, bN) {
        var bO = bi['background'],
          bP = bf['vr'],
          bQ = bP['getSession'] && bP['getSession']();
        if (bQ && 'additive' === bQ['environmentBlendMode'] && (bO = null), null === bO ? (bL(bH, bI), bJ = null, bK = 0x0) : bO && bO['isColor'] && (bL(bO, 0x1), bN = !0x0, bJ = null, bK = 0x0), (bf['autoClear'] || bN) && bf['clear'](bf['autoClearColor'], bf['autoClearDepth'], bf['autoClearStencil']), bO && (bO['isCubeTexture'] || bO['isWebGLRenderTargetCube'])) {
          void 0x0 === bG && ((bG = new KY(new Gn(0x1, 0x1, 0x1), new KN({
            'type': 'BackgroundCubeMaterial',
            'uniforms': vQ(xo['cube']['uniforms']),
            'vertexShader': xo['cube']['vertexShader'],
            'fragmentShader': xo['cube']['fragmentShader'],
            'side': bU,
            'depthTest': !0x1,
            'depthWrite': !0x1,
            'fog': !0x1
          })))['geometry']['removeAttribute']('normal'), bG['geometry']['removeAttribute']('uv'), bG['onBeforeRender'] = function(bf, bg, bh) {
            this['matrixWorld']['copyPosition'](bh['matrixWorld']);
          }, Object['defineProperty'](bG['material'], 'map', {
            'get': function() {
              return this['uniforms']['tCube']['value'];
            }
          }), bh['update'](bG));
          var bR = bO['isWebGLRenderTargetCube'] ? bO['texture'] : bO;
          bG['material']['uniforms']['tCube']['value'] = bR, bG['material']['uniforms']['tFlip']['value'] = bO['isWebGLRenderTargetCube'] ? 0x1 : -0x1, bJ === bO && bK === bR['version'] || (bG['material']['needsUpdate'] = !0x0, bJ = bO, bK = bR['version']), bg['unshift'](bG, bG['geometry'], bG['material'], 0x0, 0x0, null);
        } else bO && bO['isTexture'] && (void 0x0 === bF && ((bF = new KY(new Ha(0x2, 0x2), new KN({
          'type': 'BackgroundMaterial',
          'uniforms': vQ(xo['background']['uniforms']),
          'vertexShader': xo['background']['vertexShader'],
          'fragmentShader': xo['background']['fragmentShader'],
          'side': bT,
          'depthTest': !0x1,
          'depthWrite': !0x1,
          'fog': !0x1
        })))['geometry']['removeAttribute']('normal'), Object['defineProperty'](bF['material'], 'map', {
          'get': function() {
            return this['uniforms']['t2D']['value'];
          }
        }), bh['update'](bF)), bF['material']['uniforms']['t2D']['value'] = bO, !0x0 === bO['matrixAutoUpdate'] && bO['updateMatrix'](), bF['material']['uniforms']['uvTransform']['value']['copy'](bO['matrix']), bJ === bO && bK === bO['version'] || (bF['material']['needsUpdate'] = !0x0, bJ = bO, bK = bO['version']), bg['unshift'](bF, bF['geometry'], bF['material'], 0x0, 0x0, null));
      }
    };
  }

  function Lt(bf, bg, bh, bi) {
    var bF;
    this['setMode'] = function(bf) {
      bF = bf;
    }, this['render'] = function(bg, bi) {
      bf['drawArrays'](bF, bg, bi), bh['update'](bi, bF);
    }, this['renderInstances'] = function(bG, bH, bI) {
      var bJ;
      if (bi['isWebGL2']) bJ = bf;
      else if (null === (bJ = bg['get']('ANGLE_instanced_arrays'))) return void console['error']('THREE.WebGLBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
      bJ[bi['isWebGL2'] ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE'](bF, bH, bI, bG['maxInstancedCount']), bh['update'](bI, bF, bG['maxInstancedCount']);
    };
  }

  function LG(bf, bg, bh) {
    var bi;

    function bF(bg) {
      if ('highp' === bg) {
        if (bf['getShaderPrecisionFormat'](0x8b31, 0x8df2)['precision'] > 0x0 && bf['getShaderPrecisionFormat'](0x8b30, 0x8df2)['precision'] > 0x0) return 'highp';
        bg = 'mediump';
      }
      return 'mediump' === bg && bf['getShaderPrecisionFormat'](0x8b31, 0x8df1)['precision'] > 0x0 && bf['getShaderPrecisionFormat'](0x8b30, 0x8df1)['precision'] > 0x0 ? 'mediump' : 'lowp';
    }
    var bG = 'undefined' != typeof WebGL2RenderingContext && bf instanceof WebGL2RenderingContext,
      bH = void 0x0 !== bh['precision'] ? bh['precision'] : 'highp',
      bI = bF(bH);
    bI !== bH && (console['warn']('THREE.WebGLRenderer:', bH, 'not\x20supported,\x20using', bI, 'instead.'), bH = bI);
    var bJ = !0x0 === bh['logarithmicDepthBuffer'],
      bK = bf['getParameter'](0x8872),
      bL = bf['getParameter'](0x8b4c),
      bM = bf['getParameter'](0xd33),
      bN = bf['getParameter'](0x851c),
      bO = bf['getParameter'](0x8869),
      bP = bf['getParameter'](0x8dfb),
      bQ = bf['getParameter'](0x8dfc),
      bR = bf['getParameter'](0x8dfd),
      bS = bL > 0x0,
      bT = bG || !!bg['get']('OES_texture_float');
    return {
      'isWebGL2': bG,
      'getMaxAnisotropy': function() {
        if (void 0x0 !== bi) return bi;
        var bh = bg['get']('EXT_texture_filter_anisotropic');
        return bi = null !== bh ? bf['getParameter'](bh['MAX_TEXTURE_MAX_ANISOTROPY_EXT']) : 0x0;
      },
      'getMaxPrecision': bF,
      'precision': bH,
      'logarithmicDepthBuffer': bJ,
      'maxTextures': bK,
      'maxVertexTextures': bL,
      'maxTextureSize': bM,
      'maxCubemapSize': bN,
      'maxAttributes': bO,
      'maxVertexUniforms': bP,
      'maxVaryings': bQ,
      'maxFragmentUniforms': bR,
      'vertexTextures': bS,
      'floatFragmentTextures': bT,
      'floatVertexTextures': bS && bT,
      'maxSamples': bG ? bf['getParameter'](0x8d57) : 0x0
    };
  }

  function M2() {
    var bf = this,
      bg = null,
      bh = 0x0,
      bi = !0x1,
      bF = !0x1,
      bG = new mH(),
      bH = new eO(),
      bI = {
        'value': null,
        'needsUpdate': !0x1
      };

    function bJ() {
      bI['value'] !== bg && (bI['value'] = bg, bI['needsUpdate'] = bh > 0x0), bf['numPlanes'] = bh, bf['numIntersection'] = 0x0;
    }

    function bK(bg, bh, bi, bF) {
      var bJ = null !== bg ? bg['length'] : 0x0,
        bK = null;
      if (0x0 !== bJ) {
        if (bK = bI['value'], !0x0 !== bF || null === bK) {
          var bL = bi + 0x4 * bJ,
            bM = bh['matrixWorldInverse'];
          bH['getNormalMatrix'](bM), (null === bK || bK['length'] < bL) && (bK = new Float32Array(bL));
          for (var bN = 0x0, bO = bi; bN !== bJ; ++bN, bO += 0x4) bG['copy'](bg[bN])['applyMatrix4'](bM, bH), bG['normal']['toArray'](bK, bO), bK[bO + 0x3] = bG['constant'];
        }
        bI['value'] = bK, bI['needsUpdate'] = !0x0;
      }
      return bf['numPlanes'] = bJ, bK;
    }
    this['uniform'] = bI, this['numPlanes'] = 0x0, this['numIntersection'] = 0x0, this['init'] = function(bf, bF, bG) {
      var bH = 0x0 !== bf['length'] || bF || 0x0 !== bh || bi;
      return bi = bF, bg = bK(bf, bG, 0x0), bh = bf['length'], bH;
    }, this['beginShadows'] = function() {
      bF = !0x0, bK(null);
    }, this['endShadows'] = function() {
      bF = !0x1, bJ();
    }, this['setState'] = function(bf, bG, bH, bL, bM, bN) {
      if (!bi || null === bf || 0x0 === bf['length'] || bF && !bH) bF ? bK(null) : bJ();
      else {
        var bO = bF ? 0x0 : bh,
          bP = 0x4 * bO,
          bQ = bM['clippingState'] || null;
        bI['value'] = bQ, bQ = bK(bf, bL, bP, bN);
        for (var bR = 0x0; bR !== bP; ++bR) bQ[bR] = bg[bR];
        bM['clippingState'] = bQ, this['numIntersection'] = bG ? this['numPlanes'] : 0x0, this['numPlanes'] += bO;
      }
    };
  }

  function MB(bf) {
    var bg = {};
    return {
      'get': function(bh) {
        if (void 0x0 !== bg[bh]) return bg[bh];
        var bi;
        switch (bh) {
          case 'WEBGL_depth_texture':
            bi = bf['getExtension']('WEBGL_depth_texture') || bf['getExtension']('MOZ_WEBGL_depth_texture') || bf['getExtension']('WEBKIT_WEBGL_depth_texture');
            break;
          case 'EXT_texture_filter_anisotropic':
            bi = bf['getExtension']('EXT_texture_filter_anisotropic') || bf['getExtension']('MOZ_EXT_texture_filter_anisotropic') || bf['getExtension']('WEBKIT_EXT_texture_filter_anisotropic');
            break;
          case 'WEBGL_compressed_texture_s3tc':
            bi = bf['getExtension']('WEBGL_compressed_texture_s3tc') || bf['getExtension']('MOZ_WEBGL_compressed_texture_s3tc') || bf['getExtension']('WEBKIT_WEBGL_compressed_texture_s3tc');
            break;
          case 'WEBGL_compressed_texture_pvrtc':
            bi = bf['getExtension']('WEBGL_compressed_texture_pvrtc') || bf['getExtension']('WEBKIT_WEBGL_compressed_texture_pvrtc');
            break;
          default:
            bi = bf['getExtension'](bh);
        }
        return null === bi && console['warn']('THREE.WebGLRenderer:\x20' + bh + '\x20extension\x20not\x20supported.'), bg[bh] = bi, bi;
      }
    };
  }

  function MG(bf, bg, bh) {
    var bi = {},
      bF = {};

    function bG(bf) {
      var bH = bf['target'],
        bI = bi[bH['id']];
      for (var bJ in null !== bI['index'] && bg['remove'](bI['index']), bI['attributes']) bg['remove'](bI['attributes'][bJ]);
      bH['removeEventListener']('dispose', bG), delete bi[bH['id']];
      var bK = bF[bI['id']];
      bK && (bg['remove'](bK), delete bF[bI['id']]), bh['memory']['geometries']--;
    }
    return {
      'get': function(bf, bg) {
        var bF = bi[bg['id']];
        return bF || (bg['addEventListener']('dispose', bG), bg['isBufferGeometry'] ? bF = bg : bg['isGeometry'] && (void 0x0 === bg['_bufferGeometry'] && (bg['_bufferGeometry'] = new Gf()['setFromObject'](bf)), bF = bg['_bufferGeometry']), bi[bg['id']] = bF, bh['memory']['geometries']++, bF);
      },
      'update': function(bf) {
        var bh = bf['index'],
          bi = bf['attributes'];
        for (var bF in null !== bh && bg['update'](bh, 0x8893), bi) bg['update'](bi[bF], 0x8892);
        var bG = bf['morphAttributes'];
        for (var bF in bG)
          for (var bH = bG[bF], bI = 0x0, bJ = bH['length']; bI < bJ; bI++) bg['update'](bH[bI], 0x8892);
      },
      'getWireframeAttribute': function(bf) {
        var bh = bF[bf['id']];
        if (bh) return bh;
        var bi, bG = [],
          bH = bf['index'],
          bI = bf['attributes'];
        if (null !== bH)
          for (var bJ = 0x0, bK = (bi = bH['array'])['length']; bJ < bK; bJ += 0x3) {
            var bL = bi[bJ + 0x0],
              bM = bi[bJ + 0x1],
              bN = bi[bJ + 0x2];
            bG['push'](bL, bM, bM, bN, bN, bL);
          } else
            for (bJ = 0x0, bK = (bi = bI['position']['array'])['length'] / 0x3 - 0x1; bJ < bK; bJ += 0x3) bL = bJ + 0x0, bM = bJ + 0x1, bN = bJ + 0x2, bG['push'](bL, bM, bM, bN, bN, bL);
        return bh = new((Bn(bG)) > 0xffff ? Ba : B2)(bG, 0x1), bg['update'](bh, 0x8893), bF[bf['id']] = bh, bh;
      }
    };
  }

  function Nf(bf, bg, bh, bi) {
    var bF, bG, bH;
    this['setMode'] = function(bf) {
      bF = bf;
    }, this['setIndex'] = function(bf) {
      bG = bf['type'], bH = bf['bytesPerElement'];
    }, this['render'] = function(bg, bi) {
      bf['drawElements'](bF, bi, bG, bg * bH), bh['update'](bi, bF);
    }, this['renderInstances'] = function(bI, bJ, bK) {
      var bL;
      if (bi['isWebGL2']) bL = bf;
      else if (null === (bL = bg['get']('ANGLE_instanced_arrays'))) return void console['error']('THREE.WebGLIndexedBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
      bL[bi['isWebGL2'] ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE'](bF, bK, bG, bJ * bH, bI['maxInstancedCount']), bh['update'](bK, bF, bI['maxInstancedCount']);
    };
  }

  function Nv(bf) {
    var bg = {
      'frame': 0x0,
      'calls': 0x0,
      'triangles': 0x0,
      'points': 0x0,
      'lines': 0x0
    };
    return {
      'memory': {
        'geometries': 0x0,
        'textures': 0x0
      },
      'render': bg,
      'programs': null,
      'autoReset': !0x0,
      'reset': function() {
        bg['frame']++, bg['calls'] = 0x0, bg['triangles'] = 0x0, bg['points'] = 0x0, bg['lines'] = 0x0;
      },
      'update': function(bf, bh, bi) {
        switch (bi = bi || 0x1, bg['calls']++, bh) {
          case 0x4:
            bg['triangles'] += bi * (bf / 0x3);
            break;
          case 0x5:
          case 0x6:
            bg['triangles'] += bi * (bf - 0x2);
            break;
          case 0x1:
            bg['lines'] += bi * (bf / 0x2);
            break;
          case 0x3:
            bg['lines'] += bi * (bf - 0x1);
            break;
          case 0x2:
            bg['lines'] += bi * bf;
            break;
          case 0x0:
            bg['points'] += bi * bf;
            break;
          default:
            console['error']('THREE.WebGLInfo:\x20Unknown\x20draw\x20mode:', bh);
        }
      }
    };
  }

  function NB(bf, bg) {
    return Math['abs'](bg[0x1]) - Math['abs'](bf[0x1]);
  }

  function NE(bf) {
    var bg = {},
      bh = new Float32Array(0x8);
    return {
      'update': function(bi, bF, bG, bH) {
        var bI = bi['morphTargetInfluences'],
          bJ = bI['length'],
          bK = bg[bF['id']];
        if (void 0x0 === bK) {
          bK = [];
          for (var bL = 0x0; bL < bJ; bL++) bK[bL] = [bL, 0x0];
          bg[bF['id']] = bK;
        }
        var bM = bG['morphTargets'] && bF['morphAttributes']['position'],
          bN = bG['morphNormals'] && bF['morphAttributes']['normal'];
        for (bL = 0x0; bL < bJ; bL++) 0x0 !== (bO = bK[bL])[0x1] && (bM && bF['removeAttribute']('morphTarget' + bL), bN && bF['removeAttribute']('morphNormal' + bL));
        for (bL = 0x0; bL < bJ; bL++)(bO = bK[bL])[0x0] = bL, bO[0x1] = bI[bL];
        for (bK['sort'](NB), bL = 0x0; bL < 0x8; bL++) {
          var bO;
          if (bO = bK[bL]) {
            var bP = bO[0x0],
              bQ = bO[0x1];
            if (bQ) {
              bM && bF['addAttribute']('morphTarget' + bL, bM[bP]), bN && bF['addAttribute']('morphNormal' + bL, bN[bP]), bh[bL] = bQ;
              continue;
            }
          }
          bh[bL] = 0x0;
        }
        bH['getUniforms']()['setValue'](bf, 'morphTargetInfluences', bh);
      }
    };
  }

  function NV(bf, bg) {
    var bh = {};
    return {
      'update': function(bi) {
        var bF = bg['render']['frame'],
          bG = bi['geometry'],
          bH = bf['get'](bi, bG);
        return bh[bH['id']] !== bF && (bG['isGeometry'] && bH['updateFromObject'](bi), bf['update'](bH), bh[bH['id']] = bF), bH;
      },
      'dispose': function() {
        bh = {};
      }
    };
  }

  function O3(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
    bf = void 0x0 !== bf ? bf : [], bg = void 0x0 !== bg ? bg : cF, bH = void 0x0 !== bH ? bH : d8, lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK), this['flipY'] = !0x1;
  }

  function Oe(bf, bg, bh, bi) {
    lW['call'](this, null), this['image'] = {
      'data': bf,
      'width': bg,
      'height': bh,
      'depth': bi
    }, this['magFilter'] = cP, this['minFilter'] = cP, this['wrapR'] = cN, this['generateMipmaps'] = !0x1, this['flipY'] = !0x1;
  }

  function Oj(bf, bg, bh, bi) {
    lW['call'](this, null), this['image'] = {
      'data': bf,
      'width': bg,
      'height': bh,
      'depth': bi
    }, this['magFilter'] = cP, this['minFilter'] = cP, this['wrapR'] = cN, this['generateMipmaps'] = !0x1, this['flipY'] = !0x1;
  }
  KN['prototype'] = Object['create'](Kf['prototype']), KN['prototype']['constructor'] = KN, KN['prototype']['isShaderMaterial'] = !0x0, KN['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['fragmentShader'] = bf['fragmentShader'], this['vertexShader'] = bf['vertexShader'], this['uniforms'] = vQ(bf['uniforms']), this['defines'] = Object['assign']({}, bf['defines']), this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['lights'] = bf['lights'], this['clipping'] = bf['clipping'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this['extensions'] = bf['extensions'], this;
  }, KN['prototype']['toJSON'] = function(bf) {
    var bg = Kf['prototype']['toJSON']['call'](this, bf);
    for (var bh in bg['uniforms'] = {}, this['uniforms']) {
      var bi = this['uniforms'][bh]['value'];
      bi && bi['isTexture'] ? bg['uniforms'][bh] = {
        'type': 't',
        'value': bi['toJSON'](bf)['uuid']
      } : bi && bi['isColor'] ? bg['uniforms'][bh] = {
        'type': 'c',
        'value': bi['getHex']()
      } : bi && bi['isVector2'] ? bg['uniforms'][bh] = {
        'type': 'v2',
        'value': bi['toArray']()
      } : bi && bi['isVector3'] ? bg['uniforms'][bh] = {
        'type': 'v3',
        'value': bi['toArray']()
      } : bi && bi['isVector4'] ? bg['uniforms'][bh] = {
        'type': 'v4',
        'value': bi['toArray']()
      } : bi && bi['isMatrix3'] ? bg['uniforms'][bh] = {
        'type': 'm3',
        'value': bi['toArray']()
      } : bi && bi['isMatrix4'] ? bg['uniforms'][bh] = {
        'type': 'm4',
        'value': bi['toArray']()
      } : bg['uniforms'][bh] = {
        'value': bi
      };
    }
    Object['keys'](this['defines'])['length'] > 0x0 && (bg['defines'] = this['defines']), bg['vertexShader'] = this['vertexShader'], bg['fragmentShader'] = this['fragmentShader'];
    var bF = {};
    for (var bG in this['extensions']) !0x0 === this['extensions'][bG] && (bF[bG] = !0x0);
    return Object['keys'](bF)['length'] > 0x0 && (bg['extensions'] = bF), bg;
  }, Object['assign'](KP['prototype'], {
    'set': function(bf, bg) {
      return this['origin']['copy'](bf), this['direction']['copy'](bg), this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['origin']['copy'](bf['origin']), this['direction']['copy'](bf['direction']), this;
    },
    'at': function(bf, bg) {
      return void 0x0 === bg && (console['warn']('THREE.Ray:\x20.at()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['copy'](this['direction'])['multiplyScalar'](bf)['add'](this['origin']);
    },
    'lookAt': function(bf) {
      return this['direction']['copy'](bf)['sub'](this['origin'])['normalize'](), this;
    },
    'recast': function() {
      var bf = new eK();
      return function(bg) {
        return this['origin']['copy'](this['at'](bg, bf)), this;
      };
    }(),
    'closestPointToPoint': function(bf, bg) {
      void 0x0 === bg && (console['warn']('THREE.Ray:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'), bg = new eK()), bg['subVectors'](bf, this['origin']);
      var bh = bg['dot'](this['direction']);
      return bh < 0x0 ? bg['copy'](this['origin']) : bg['copy'](this['direction'])['multiplyScalar'](bh)['add'](this['origin']);
    },
    'distanceToPoint': function(bf) {
      return Math['sqrt'](this['distanceSqToPoint'](bf));
    },
    'distanceSqToPoint': function() {
      var bf = new eK();
      return function(bg) {
        var bh = bf['subVectors'](bg, this['origin'])['dot'](this['direction']);
        return bh < 0x0 ? this['origin']['distanceToSquared'](bg) : (bf['copy'](this['direction'])['multiplyScalar'](bh)['add'](this['origin']), bf['distanceToSquared'](bg));
      };
    }(),
    'distanceSqToSegment': (KA = new eK(), KB = new eK(), KC = new eK(), function(bf, bg, bh, bi) {
      KA['copy'](bf)['add'](bg)['multiplyScalar'](0.5), KB['copy'](bg)['sub'](bf)['normalize'](), KC['copy'](this['origin'])['sub'](KA);
      var bF, bG, bH, bI, bJ = 0.5 * bf['distanceTo'](bg),
        bK = -this['direction']['dot'](KB),
        bL = KC['dot'](this['direction']),
        bM = -KC['dot'](KB),
        bN = KC['lengthSq'](),
        bO = Math['abs'](0x1 - bK * bK);
      if (bO > 0x0)
        if (bG = bK * bL - bM, bI = bJ * bO, (bF = bK * bM - bL) >= 0x0)
          if (bG >= -bI)
            if (bG <= bI) {
              var bP = 0x1 / bO;
              bH = (bF *= bP) * (bF + bK * (bG *= bP) + 0x2 * bL) + bG * (bK * bF + bG + 0x2 * bM) + bN;
            } else bG = bJ, bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
      else bG = -bJ, bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
      else bG <= -bI ? bH = -(bF = Math['max'](0x0, -(-bK * bJ + bL))) * bF + (bG = bF > 0x0 ? -bJ : Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN : bG <= bI ? (bF = 0x0, bH = (bG = Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN) : bH = -(bF = Math['max'](0x0, -(bK * bJ + bL))) * bF + (bG = bF > 0x0 ? bJ : Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN;
      else bG = bK > 0x0 ? -bJ : bJ, bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
      return bh && bh['copy'](this['direction'])['multiplyScalar'](bF)['add'](this['origin']), bi && bi['copy'](KB)['multiplyScalar'](bG)['add'](KA), bH;
    }),
    'intersectSphere': function() {
      var bf = new eK();
      return function(bg, bh) {
        bf['subVectors'](bg['center'], this['origin']);
        var bi = bf['dot'](this['direction']),
          bF = bf['dot'](bf) - bi * bi,
          bG = bg['radius'] * bg['radius'];
        if (bF > bG) return null;
        var bH = Math['sqrt'](bG - bF),
          bI = bi - bH,
          bJ = bi + bH;
        return bI < 0x0 && bJ < 0x0 ? null : bI < 0x0 ? this['at'](bJ, bh) : this['at'](bI, bh);
      };
    }(),
    'intersectsSphere': function(bf) {
      return this['distanceSqToPoint'](bf['center']) <= bf['radius'] * bf['radius'];
    },
    'distanceToPlane': function(bf) {
      var bg = bf['normal']['dot'](this['direction']);
      if (0x0 === bg) return 0x0 === bf['distanceToPoint'](this['origin']) ? 0x0 : null;
      var bh = -(this['origin']['dot'](bf['normal']) + bf['constant']) / bg;
      return bh >= 0x0 ? bh : null;
    },
    'intersectPlane': function(bf, bg) {
      var bh = this['distanceToPlane'](bf);
      return null === bh ? null : this['at'](bh, bg);
    },
    'intersectsPlane': function(bf) {
      var bg = bf['distanceToPoint'](this['origin']);
      return 0x0 === bg || bf['normal']['dot'](this['direction']) * bg < 0x0;
    },
    'intersectBox': function(bf, bg) {
      var bh, bi, bF, bG, bH, bI, bJ = 0x1 / this['direction']['x'],
        bK = 0x1 / this['direction']['y'],
        bL = 0x1 / this['direction']['z'],
        bM = this['origin'];
      return bJ >= 0x0 ? (bh = (bf['min']['x'] - bM['x']) * bJ, bi = (bf['max']['x'] - bM['x']) * bJ) : (bh = (bf['max']['x'] - bM['x']) * bJ, bi = (bf['min']['x'] - bM['x']) * bJ), bK >= 0x0 ? (bF = (bf['min']['y'] - bM['y']) * bK, bG = (bf['max']['y'] - bM['y']) * bK) : (bF = (bf['max']['y'] - bM['y']) * bK, bG = (bf['min']['y'] - bM['y']) * bK), bh > bG || bF > bi ? null : ((bF > bh || bh != bh) && (bh = bF), (bG < bi || bi != bi) && (bi = bG), bL >= 0x0 ? (bH = (bf['min']['z'] - bM['z']) * bL, bI = (bf['max']['z'] - bM['z']) * bL) : (bH = (bf['max']['z'] - bM['z']) * bL, bI = (bf['min']['z'] - bM['z']) * bL), bh > bI || bH > bi ? null : ((bH > bh || bh != bh) && (bh = bH), (bI < bi || bi != bi) && (bi = bI), bi < 0x0 ? null : this['at'](bh >= 0x0 ? bh : bi, bg)));
    },
    'intersectsBox': (Kz = new eK(), function(bf) {
      return null !== this['intersectBox'](bf, Kz);
    }),
    'intersectTriangle': function() {
      var bf = new eK(),
        bg = new eK(),
        bh = new eK(),
        bi = new eK();
      return function(bF, bG, bH, bI, bJ) {
        bg['subVectors'](bG, bF), bh['subVectors'](bH, bF), bi['crossVectors'](bg, bh);
        var bK, bL = this['direction']['dot'](bi);
        if (bL > 0x0) {
          if (bI) return null;
          bK = 0x1;
        } else {
          if (!(bL < 0x0)) return null;
          bK = -0x1, bL = -bL;
        }
        bf['subVectors'](this['origin'], bF);
        var bM = bK * this['direction']['dot'](bh['crossVectors'](bf, bh));
        if (bM < 0x0) return null;
        var bN = bK * this['direction']['dot'](bg['cross'](bf));
        if (bN < 0x0) return null;
        if (bM + bN > bL) return null;
        var bO = -bK * bf['dot'](bi);
        return bO < 0x0 ? null : this['at'](bO / bL, bJ);
      };
    }(),
    'applyMatrix4': function(bf) {
      return this['origin']['applyMatrix4'](bf), this['direction']['transformDirection'](bf), this;
    },
    'equals': function(bf) {
      return bf['origin']['equals'](this['origin']) && bf['direction']['equals'](this['direction']);
    }
  }), Object['assign'](KS, {
    'getNormal': (KE = new eK(), function(bf, bg, bh, bi) {
      void 0x0 === bi && (console['warn']('THREE.Triangle:\x20.getNormal()\x20target\x20is\x20now\x20required'), bi = new eK()), bi['subVectors'](bh, bg), KE['subVectors'](bf, bg), bi['cross'](KE);
      var bF = bi['lengthSq']();
      return bF > 0x0 ? bi['multiplyScalar'](0x1 / Math['sqrt'](bF)) : bi['set'](0x0, 0x0, 0x0);
    }),
    'getBarycoord': function() {
      var bf = new eK(),
        bg = new eK(),
        bh = new eK();
      return function(bi, bF, bG, bH, bI) {
        bf['subVectors'](bH, bF), bg['subVectors'](bG, bF), bh['subVectors'](bi, bF);
        var bJ = bf['dot'](bf),
          bK = bf['dot'](bg),
          bL = bf['dot'](bh),
          bM = bg['dot'](bg),
          bN = bg['dot'](bh),
          bO = bJ * bM - bK * bK;
        if (void 0x0 === bI && (console['warn']('THREE.Triangle:\x20.getBarycoord()\x20target\x20is\x20now\x20required'), bI = new eK()), 0x0 === bO) return bI['set'](-0x2, -0x1, -0x1);
        var bP = 0x1 / bO,
          bQ = (bM * bL - bK * bN) * bP,
          bR = (bJ * bN - bK * bL) * bP;
        return bI['set'](0x1 - bQ - bR, bR, bQ);
      };
    }(),
    'containsPoint': function() {
      var bf = new eK();
      return function(bg, bh, bi, bF) {
        return KS['getBarycoord'](bg, bh, bi, bF, bf), bf['x'] >= 0x0 && bf['y'] >= 0x0 && bf['x'] + bf['y'] <= 0x1;
      };
    }(),
    'getUV': (KD = new eK(), function(bf, bg, bh, bi, bF, bG, bH, bI) {
      return this['getBarycoord'](bf, bg, bh, bi, KD), bI['set'](0x0, 0x0), bI['addScaledVector'](bF, KD['x']), bI['addScaledVector'](bG, KD['y']), bI['addScaledVector'](bH, KD['z']), bI;
    }),
    'isFrontFacing': function() {
      var bf = new eK(),
        bg = new eK();
      return function(bh, bi, bF, bG) {
        return bf['subVectors'](bF, bi), bg['subVectors'](bh, bi), bf['cross'](bg)['dot'](bG) < 0x0;
      };
    }()
  }), Object['assign'](KS['prototype'], {
    'set': function(bf, bg, bh) {
      return this['a']['copy'](bf), this['b']['copy'](bg), this['c']['copy'](bh), this;
    },
    'setFromPointsAndIndices': function(bf, bg, bh, bi) {
      return this['a']['copy'](bf[bg]), this['b']['copy'](bf[bh]), this['c']['copy'](bf[bi]), this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['a']['copy'](bf['a']), this['b']['copy'](bf['b']), this['c']['copy'](bf['c']), this;
    },
    'getArea': function() {
      var bf = new eK(),
        bg = new eK();
      return function() {
        return bf['subVectors'](this['c'], this['b']), bg['subVectors'](this['a'], this['b']), 0.5 * bf['cross'](bg)['length']();
      };
    }(),
    'getMidpoint': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Triangle:\x20.getMidpoint()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['addVectors'](this['a'], this['b'])['add'](this['c'])['multiplyScalar'](0x1 / 0x3);
    },
    'getNormal': function(bf) {
      return KS['getNormal'](this['a'], this['b'], this['c'], bf);
    },
    'getPlane': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Triangle:\x20.getPlane()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['setFromCoplanarPoints'](this['a'], this['b'], this['c']);
    },
    'getBarycoord': function(bf, bg) {
      return KS['getBarycoord'](bf, this['a'], this['b'], this['c'], bg);
    },
    'getUV': function(bf, bg, bh, bi, bF) {
      return KS['getUV'](bf, this['a'], this['b'], this['c'], bg, bh, bi, bF);
    },
    'containsPoint': function(bf) {
      return KS['containsPoint'](bf, this['a'], this['b'], this['c']);
    },
    'isFrontFacing': function(bf) {
      return KS['isFrontFacing'](this['a'], this['b'], this['c'], bf);
    },
    'intersectsBox': function(bf) {
      return bf['intersectsTriangle'](this);
    },
    'closestPointToPoint': (KF = new eK(), KG = new eK(), KH = new eK(), KI = new eK(), KJ = new eK(), KK = new eK(), function(bf, bg) {
      void 0x0 === bg && (console['warn']('THREE.Triangle:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'), bg = new eK());
      var bh, bi, bF = this['a'],
        bG = this['b'],
        bH = this['c'];
      KF['subVectors'](bG, bF), KG['subVectors'](bH, bF), KI['subVectors'](bf, bF);
      var bI = KF['dot'](KI),
        bJ = KG['dot'](KI);
      if (bI <= 0x0 && bJ <= 0x0) return bg['copy'](bF);
      KJ['subVectors'](bf, bG);
      var bK = KF['dot'](KJ),
        bL = KG['dot'](KJ);
      if (bK >= 0x0 && bL <= bK) return bg['copy'](bG);
      var bM = bI * bL - bK * bJ;
      if (bM <= 0x0 && bI >= 0x0 && bK <= 0x0) return bh = bI / (bI - bK), bg['copy'](bF)['addScaledVector'](KF, bh);
      KK['subVectors'](bf, bH);
      var bN = KF['dot'](KK),
        bO = KG['dot'](KK);
      if (bO >= 0x0 && bN <= bO) return bg['copy'](bH);
      var bP = bN * bJ - bI * bO;
      if (bP <= 0x0 && bJ >= 0x0 && bO <= 0x0) return bi = bJ / (bJ - bO), bg['copy'](bF)['addScaledVector'](KG, bi);
      var bQ = bK * bO - bN * bL;
      if (bQ <= 0x0 && bL - bK >= 0x0 && bN - bO >= 0x0) return KH['subVectors'](bH, bG), bi = (bL - bK) / (bL - bK + (bN - bO)), bg['copy'](bG)['addScaledVector'](KH, bi);
      var bR = 0x1 / (bQ + bP + bM);
      return bh = bP * bR, bi = bM * bR, bg['copy'](bF)['addScaledVector'](KF, bh)['addScaledVector'](KG, bi);
    }),
    'equals': function(bf) {
      return bf['a']['equals'](this['a']) && bf['b']['equals'](this['b']) && bf['c']['equals'](this['c']);
    }
  }), KW['prototype'] = Object['create'](Kf['prototype']), KW['prototype']['constructor'] = KW, KW['prototype']['isMeshBasicMaterial'] = !0x0, KW['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['map'] = bf['map'], this['lightMap'] = bf['lightMap'], this['lightMapIntensity'] = bf['lightMapIntensity'], this['aoMap'] = bf['aoMap'], this['aoMapIntensity'] = bf['aoMapIntensity'], this['specularMap'] = bf['specularMap'], this['alphaMap'] = bf['alphaMap'], this['envMap'] = bf['envMap'], this['combine'] = bf['combine'], this['reflectivity'] = bf['reflectivity'], this['refractionRatio'] = bf['refractionRatio'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['wireframeLinecap'] = bf['wireframeLinecap'], this['wireframeLinejoin'] = bf['wireframeLinejoin'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this;
  }, KY['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': KY,
    'isMesh': !0x0,
    'setDrawMode': function(bf) {
      this['drawMode'] = bf;
    },
    'copy': function(bf) {
      return yT['prototype']['copy']['call'](this, bf), this['drawMode'] = bf['drawMode'], void 0x0 !== bf['morphTargetInfluences'] && (this['morphTargetInfluences'] = bf['morphTargetInfluences']['slice']()), void 0x0 !== bf['morphTargetDictionary'] && (this['morphTargetDictionary'] = Object['assign']({}, bf['morphTargetDictionary'])), this;
    },
    'updateMorphTargets': function() {
      var bf, bg, bh, bi = this['geometry'];
      if (bi['isBufferGeometry']) {
        var bF = bi['morphAttributes'],
          bG = Object['keys'](bF);
        if (bG['length'] > 0x0) {
          var bH = bF[bG[0x0]];
          if (void 0x0 !== bH)
            for (this['morphTargetInfluences'] = [], this['morphTargetDictionary'] = {}, bf = 0x0, bg = bH['length']; bf < bg; bf++) bh = bH[bf]['name'] || String(bf), this['morphTargetInfluences']['push'](0x0), this['morphTargetDictionary'][bh] = bf;
        }
      } else {
        var bI = bi['morphTargets'];
        void 0x0 !== bI && bI['length'] > 0x0 && console['error']('THREE.Mesh.updateMorphTargets()\x20no\x20longer\x20supports\x20THREE.Geometry.\x20Use\x20THREE.BufferGeometry\x20instead.');
      }
    },
    'raycast': function() {
      var bf = new mR(),
        bg = new KP(),
        bh = new mE(),
        bi = new eK(),
        bF = new eK(),
        bG = new eK(),
        bH = new eK(),
        bI = new eK(),
        bJ = new eK(),
        bK = new eK(),
        bL = new eK(),
        bM = new eK(),
        bN = new eC(),
        bO = new eC(),
        bP = new eC(),
        bQ = new eK(),
        bR = new eK();

      function bS(bf, bg, bh, bi, bF, bG, bH, bI) {
        if (null === (bg['side'] === bU ? bi['intersectTriangle'](bH, bG, bF, !0x0, bI) : bi['intersectTriangle'](bF, bG, bH, bg['side'] !== bV, bI))) return null;
        bR['copy'](bI), bR['applyMatrix4'](bf['matrixWorld']);
        var bJ = bh['ray']['origin']['distanceTo'](bR);
        return bJ < bh['near'] || bJ > bh['far'] ? null : {
          'distance': bJ,
          'point': bR['clone'](),
          'object': bf
        };
      }

      function bT(bf, bg, bh, bR, bT, bU, bV, bW, bX, bY) {
        bi['fromBufferAttribute'](bT, bW), bF['fromBufferAttribute'](bT, bX), bG['fromBufferAttribute'](bT, bY);
        var bZ = bf['morphTargetInfluences'];
        if (bg['morphTargets'] && bU && bZ) {
          bK['set'](0x0, 0x0, 0x0), bL['set'](0x0, 0x0, 0x0), bM['set'](0x0, 0x0, 0x0);
          for (var c0 = 0x0, c1 = bU['length']; c0 < c1; c0++) {
            var c2 = bZ[c0],
              c3 = bU[c0];
            0x0 !== c2 && (bH['fromBufferAttribute'](c3, bW), bI['fromBufferAttribute'](c3, bX), bJ['fromBufferAttribute'](c3, bY), bK['addScaledVector'](bH['sub'](bi), c2), bL['addScaledVector'](bI['sub'](bF), c2), bM['addScaledVector'](bJ['sub'](bG), c2));
          }
          bi['add'](bK), bF['add'](bL), bG['add'](bM);
        }
        var c4 = bS(bf, bg, bh, bR, bi, bF, bG, bQ);
        if (c4) {
          bV && (bN['fromBufferAttribute'](bV, bW), bO['fromBufferAttribute'](bV, bX), bP['fromBufferAttribute'](bV, bY), c4['uv'] = KS['getUV'](bQ, bi, bF, bG, bN, bO, bP, new eC()));
          var c5 = new xS(bW, bX, bY);
          KS['getNormal'](bi, bF, bG, c5['normal']), c4['face'] = c5;
        }
        return c4;
      }
      return function(bi, bF) {
        var bG, bH = this['geometry'],
          bI = this['material'],
          bJ = this['matrixWorld'];
        if (void 0x0 !== bI && (null === bH['boundingSphere'] && bH['computeBoundingSphere'](), bh['copy'](bH['boundingSphere']), bh['applyMatrix4'](bJ), !0x1 !== bi['ray']['intersectsSphere'](bh) && (bf['getInverse'](bJ), bg['copy'](bi['ray'])['applyMatrix4'](bf), null === bH['boundingBox'] || !0x1 !== bg['intersectsBox'](bH['boundingBox']))))
          if (bH['isBufferGeometry']) {
            var bK, bL, bM, bR, bU, bV, bW, bX, bY, bZ = bH['index'],
              c0 = bH['attributes']['position'],
              c1 = bH['morphAttributes']['position'],
              c2 = bH['attributes']['uv'],
              c3 = bH['groups'],
              c4 = bH['drawRange'];
            if (null !== bZ)
              if (Array['isArray'](bI))
                for (bR = 0x0, bV = c3['length']; bR < bV; bR++)
                  for (bY = bI[(bX = c3[bR])['materialIndex']], bU = Math['max'](bX['start'], c4['start']), bW = Math['min'](bX['start'] + bX['count'], c4['start'] + c4['count']); bU < bW; bU += 0x3) bK = bZ['getX'](bU), bL = bZ['getX'](bU + 0x1), bM = bZ['getX'](bU + 0x2), (bG = bT(this, bY, bi, bg, c0, c1, c2, bK, bL, bM)) && (bG['faceIndex'] = Math['floor'](bU / 0x3), bG['face']['materialIndex'] = bX['materialIndex'], bF['push'](bG));
              else
                for (bR = Math['max'](0x0, c4['start']), bV = Math['min'](bZ['count'], c4['start'] + c4['count']); bR < bV; bR += 0x3) bK = bZ['getX'](bR), bL = bZ['getX'](bR + 0x1), bM = bZ['getX'](bR + 0x2), (bG = bT(this, bI, bi, bg, c0, c1, c2, bK, bL, bM)) && (bG['faceIndex'] = Math['floor'](bR / 0x3), bF['push'](bG));
            else if (void 0x0 !== c0)
              if (Array['isArray'](bI))
                for (bR = 0x0, bV = c3['length']; bR < bV; bR++)
                  for (bY = bI[(bX = c3[bR])['materialIndex']], bU = Math['max'](bX['start'], c4['start']), bW = Math['min'](bX['start'] + bX['count'], c4['start'] + c4['count']); bU < bW; bU += 0x3)(bG = bT(this, bY, bi, bg, c0, c1, c2, bK = bU, bL = bU + 0x1, bM = bU + 0x2)) && (bG['faceIndex'] = Math['floor'](bU / 0x3), bG['face']['materialIndex'] = bX['materialIndex'], bF['push'](bG));
              else
                for (bR = Math['max'](0x0, c4['start']), bV = Math['min'](c0['count'], c4['start'] + c4['count']); bR < bV; bR += 0x3)(bG = bT(this, bI, bi, bg, c0, c1, c2, bK = bR, bL = bR + 0x1, bM = bR + 0x2)) && (bG['faceIndex'] = Math['floor'](bR / 0x3), bF['push'](bG));
          } else if (bH['isGeometry']) {
          var c5, c6, c7, c8, c9 = Array['isArray'](bI),
            ca = bH['vertices'],
            cb = bH['faces'],
            cc = bH['faceVertexUvs'][0x0];
          cc['length'] > 0x0 && (c8 = cc);
          for (var cd = 0x0, ce = cb['length']; cd < ce; cd++) {
            var cf = cb[cd],
              cg = c9 ? bI[cf['materialIndex']] : bI;
            if (void 0x0 !== cg && (c5 = ca[cf['a']], c6 = ca[cf['b']], c7 = ca[cf['c']], bG = bS(this, cg, bi, bg, c5, c6, c7, bQ))) {
              if (c8 && c8[cd]) {
                var ch = c8[cd];
                bN['copy'](ch[0x0]), bO['copy'](ch[0x1]), bP['copy'](ch[0x2]), bG['uv'] = KS['getUV'](bQ, c5, c6, c7, bN, bO, bP, new eC());
              }
              bG['face'] = cf, bG['faceIndex'] = cd, bF['push'](bG);
            }
          }
        }
      };
    }(),
    'clone': function() {
      return new this['constructor'](this['geometry'], this['material'])['copy'](this);
    }
  }), O3['prototype'] = Object['create'](lW['prototype']), O3['prototype']['constructor'] = O3, O3['prototype']['isCubeTexture'] = !0x0, Object['defineProperty'](O3['prototype'], 'images', {
    'get': function() {
      return this['image'];
    },
    'set': function(bf) {
      this['image'] = bf;
    }
  }), Oe['prototype'] = Object['create'](lW['prototype']), Oe['prototype']['constructor'] = Oe, Oe['prototype']['isDataTexture2DArray'] = !0x0, Oj['prototype'] = Object['create'](lW['prototype']), Oj['prototype']['constructor'] = Oj, Oj['prototype']['isDataTexture3D'] = !0x0;
  var Sx = new lW(),
    Sy = new Oe(),
    Sz = new Oj(),
    SA = new O3(),
    SB = [],
    SC = [],
    SD = new Float32Array(0x10),
    SE = new Float32Array(0x9),
    SF = new Float32Array(0x4);

  function SG(bf, bg, bh) {
    var bi = bf[0x0];
    if (bi <= 0x0 || bi > 0x0) return bf;
    var bF = bg * bh,
      bG = SB[bF];
    if (void 0x0 === bG && (bG = new Float32Array(bF), SB[bF] = bG), 0x0 !== bg) {
      bi['toArray'](bG, 0x0);
      for (var bH = 0x1, bI = 0x0; bH !== bg; ++bH) bI += bh, bf[bH]['toArray'](bG, bI);
    }
    return bG;
  }

  function SP(bf, bg) {
    if (bf['length'] !== bg['length']) return !0x1;
    for (var bh = 0x0, bi = bf['length']; bh < bi; bh++)
      if (bf[bh] !== bg[bh]) return !0x1;
    return !0x0;
  }

  function SU(bf, bg) {
    for (var bh = 0x0, bi = bg['length']; bh < bi; bh++) bf[bh] = bg[bh];
  }

  function SZ(bf, bg) {
    var bh = SC[bg];
    void 0x0 === bh && (bh = new Int32Array(bg), SC[bg] = bh);
    for (var bi = 0x0; bi !== bg; ++bi) bh[bi] = bf['allocateTextureUnit']();
    return bh;
  }

  function T4(bf, bg) {
    var bh = this['cache'];
    bh[0x0] !== bg && (bf['uniform1f'](this['addr'], bg), bh[0x0] = bg);
  }

  function T8(bf, bg) {
    var bh = this['cache'];
    if (void 0x0 !== bg['x']) bh[0x0] === bg['x'] && bh[0x1] === bg['y'] || (bf['uniform2f'](this['addr'], bg['x'], bg['y']), bh[0x0] = bg['x'], bh[0x1] = bg['y']);
    else {
      if (SP(bh, bg)) return;
      bf['uniform2fv'](this['addr'], bg), SU(bh, bg);
    }
  }

  function Tc(bf, bg) {
    var bh = this['cache'];
    if (void 0x0 !== bg['x']) bh[0x0] === bg['x'] && bh[0x1] === bg['y'] && bh[0x2] === bg['z'] || (bf['uniform3f'](this['addr'], bg['x'], bg['y'], bg['z']), bh[0x0] = bg['x'], bh[0x1] = bg['y'], bh[0x2] = bg['z']);
    else if (void 0x0 !== bg['r']) bh[0x0] === bg['r'] && bh[0x1] === bg['g'] && bh[0x2] === bg['b'] || (bf['uniform3f'](this['addr'], bg['r'], bg['g'], bg['b']), bh[0x0] = bg['r'], bh[0x1] = bg['g'], bh[0x2] = bg['b']);
    else {
      if (SP(bh, bg)) return;
      bf['uniform3fv'](this['addr'], bg), SU(bh, bg);
    }
  }

  function Tg(bf, bg) {
    var bh = this['cache'];
    if (void 0x0 !== bg['x']) bh[0x0] === bg['x'] && bh[0x1] === bg['y'] && bh[0x2] === bg['z'] && bh[0x3] === bg['w'] || (bf['uniform4f'](this['addr'], bg['x'], bg['y'], bg['z'], bg['w']), bh[0x0] = bg['x'], bh[0x1] = bg['y'], bh[0x2] = bg['z'], bh[0x3] = bg['w']);
    else {
      if (SP(bh, bg)) return;
      bf['uniform4fv'](this['addr'], bg), SU(bh, bg);
    }
  }

  function Tk(bf, bg) {
    var bh = this['cache'],
      bi = bg['elements'];
    if (void 0x0 === bi) {
      if (SP(bh, bg)) return;
      bf['uniformMatrix2fv'](this['addr'], !0x1, bg), SU(bh, bg);
    } else {
      if (SP(bh, bi)) return;
      SF['set'](bi), bf['uniformMatrix2fv'](this['addr'], !0x1, SF), SU(bh, bi);
    }
  }

  function Tp(bf, bg) {
    var bh = this['cache'],
      bi = bg['elements'];
    if (void 0x0 === bi) {
      if (SP(bh, bg)) return;
      bf['uniformMatrix3fv'](this['addr'], !0x1, bg), SU(bh, bg);
    } else {
      if (SP(bh, bi)) return;
      SE['set'](bi), bf['uniformMatrix3fv'](this['addr'], !0x1, SE), SU(bh, bi);
    }
  }

  function Tu(bf, bg) {
    var bh = this['cache'],
      bi = bg['elements'];
    if (void 0x0 === bi) {
      if (SP(bh, bg)) return;
      bf['uniformMatrix4fv'](this['addr'], !0x1, bg), SU(bh, bg);
    } else {
      if (SP(bh, bi)) return;
      SD['set'](bi), bf['uniformMatrix4fv'](this['addr'], !0x1, SD), SU(bh, bi);
    }
  }

  function Tz(bf, bg, bh) {
    var bi = this['cache'],
      bF = bh['allocateTextureUnit']();
    bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF), bi[0x0] = bF), bh['safeSetTexture2D'](bg || Sx, bF);
  }

  function TF(bf, bg, bh) {
    var bi = this['cache'],
      bF = bh['allocateTextureUnit']();
    bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF), bi[0x0] = bF), bh['setTexture2DArray'](bg || Sy, bF);
  }

  function TL(bf, bg, bh) {
    var bi = this['cache'],
      bF = bh['allocateTextureUnit']();
    bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF), bi[0x0] = bF), bh['setTexture3D'](bg || Sz, bF);
  }

  function TR(bf, bg, bh) {
    var bi = this['cache'],
      bF = bh['allocateTextureUnit']();
    bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF), bi[0x0] = bF), bh['safeSetTextureCube'](bg || SA, bF);
  }

  function TX(bf, bg) {
    var bh = this['cache'];
    bh[0x0] !== bg && (bf['uniform1i'](this['addr'], bg), bh[0x0] = bg);
  }

  function U1(bf, bg) {
    var bh = this['cache'];
    SP(bh, bg) || (bf['uniform2iv'](this['addr'], bg), SU(bh, bg));
  }

  function U5(bf, bg) {
    var bh = this['cache'];
    SP(bh, bg) || (bf['uniform3iv'](this['addr'], bg), SU(bh, bg));
  }

  function U9(bf, bg) {
    var bh = this['cache'];
    SP(bh, bg) || (bf['uniform4iv'](this['addr'], bg), SU(bh, bg));
  }

  function Ud(bf, bg) {
    bf['uniform1fv'](this['addr'], bg);
  }

  function Ug(bf, bg) {
    bf['uniform1iv'](this['addr'], bg);
  }

  function Uj(bf, bg) {
    bf['uniform2iv'](this['addr'], bg);
  }

  function Um(bf, bg) {
    bf['uniform3iv'](this['addr'], bg);
  }

  function Up(bf, bg) {
    bf['uniform4iv'](this['addr'], bg);
  }

  function Us(bf, bg) {
    var bh = SG(bg, this['size'], 0x2);
    bf['uniform2fv'](this['addr'], bh);
  }

  function Uw(bf, bg) {
    var bh = SG(bg, this['size'], 0x3);
    bf['uniform3fv'](this['addr'], bh);
  }

  function UA(bf, bg) {
    var bh = SG(bg, this['size'], 0x4);
    bf['uniform4fv'](this['addr'], bh);
  }

  function UE(bf, bg) {
    var bh = SG(bg, this['size'], 0x4);
    bf['uniformMatrix2fv'](this['addr'], !0x1, bh);
  }

  function UI(bf, bg) {
    var bh = SG(bg, this['size'], 0x9);
    bf['uniformMatrix3fv'](this['addr'], !0x1, bh);
  }

  function UM(bf, bg) {
    var bh = SG(bg, this['size'], 0x10);
    bf['uniformMatrix4fv'](this['addr'], !0x1, bh);
  }

  function UQ(bf, bg, bh) {
    var bi = bg['length'],
      bF = SZ(bh, bi);
    bf['uniform1iv'](this['addr'], bF);
    for (var bG = 0x0; bG !== bi; ++bG) bh['safeSetTexture2D'](bg[bG] || Sx, bF[bG]);
  }

  function UX(bf, bg, bh) {
    var bi = bg['length'],
      bF = SZ(bh, bi);
    bf['uniform1iv'](this['addr'], bF);
    for (var bG = 0x0; bG !== bi; ++bG) bh['safeSetTextureCube'](bg[bG] || SA, bF[bG]);
  }

  function V4(bf, bg, bh) {
    this['id'] = bf, this['addr'] = bh, this['cache'] = [], this['setValue'] = function(bf) {
      switch (bf) {
        case 0x1406:
          return T4;
        case 0x8b50:
          return T8;
        case 0x8b51:
          return Tc;
        case 0x8b52:
          return Tg;
        case 0x8b5a:
          return Tk;
        case 0x8b5b:
          return Tp;
        case 0x8b5c:
          return Tu;
        case 0x8b5e:
        case 0x8d66:
          return Tz;
        case 0x8b5f:
          return TL;
        case 0x8b60:
          return TR;
        case 0x8dc1:
          return TF;
        case 0x1404:
        case 0x8b56:
          return TX;
        case 0x8b53:
        case 0x8b57:
          return U1;
        case 0x8b54:
        case 0x8b58:
          return U5;
        case 0x8b55:
        case 0x8b59:
          return U9;
      }
    }(bg['type']);
  }

  function V9(bf, bg, bh) {
    this['id'] = bf, this['addr'] = bh, this['cache'] = [], this['size'] = bg['size'], this['setValue'] = function(bf) {
      switch (bf) {
        case 0x1406:
          return Ud;
        case 0x8b50:
          return Us;
        case 0x8b51:
          return Uw;
        case 0x8b52:
          return UA;
        case 0x8b5a:
          return UE;
        case 0x8b5b:
          return UI;
        case 0x8b5c:
          return UM;
        case 0x8b5e:
          return UQ;
        case 0x8b60:
          return UX;
        case 0x1404:
        case 0x8b56:
          return Ug;
        case 0x8b53:
        case 0x8b57:
          return Uj;
        case 0x8b54:
        case 0x8b58:
          return Um;
        case 0x8b55:
        case 0x8b59:
          return Up;
      }
    }(bg['type']);
  }

  function Ve(bf) {
    this['id'] = bf, this['seq'] = [], this['map'] = {};
  }
  V9['prototype']['updateCache'] = function(bf) {
    var bg = this['cache'];
    bf instanceof Float32Array && bg['length'] !== bf['length'] && (this['cache'] = new Float32Array(bf['length'])), SU(bg, bf);
  }, Ve['prototype']['setValue'] = function(bf, bg, bh) {
    for (var bi = this['seq'], bF = 0x0, bG = bi['length']; bF !== bG; ++bF) {
      var bH = bi[bF];
      bH['setValue'](bf, bg[bH['id']], bh);
    }
  };
  var Vp = /([\w\d_]+)(\])?(\[|\.)?/g;

  function Vq(bf, bg) {
    bf['seq']['push'](bg), bf['map'][bg['id']] = bg;
  }

  function Vt(bf, bg, bh) {
    var bi = bf['name'],
      bF = bi['length'];
    for (Vp['lastIndex'] = 0x0;;) {
      var bG = Vp['exec'](bi),
        bH = Vp['lastIndex'],
        bI = bG[0x1],
        bJ = ']' === bG[0x2],
        bK = bG[0x3];
      if (bJ && (bI |= 0x0), void 0x0 === bK || '[' === bK && bH + 0x2 === bF) {
        Vq(bh, void 0x0 === bK ? new V4(bI, bf, bg) : new V9(bI, bf, bg));
        break;
      }
      var bL = bh['map'][bI];
      void 0x0 === bL && Vq(bh, bL = new Ve(bI)), bh = bL;
    }
  }

  function VF(bf, bg) {
    this['seq'] = [], this['map'] = {};
    for (var bh = bf['getProgramParameter'](bg, 0x8b86), bi = 0x0; bi < bh; ++bi) {
      var bF = bf['getActiveUniform'](bg, bi);
      Vt(bF, bf['getUniformLocation'](bg, bF['name']), this);
    }
  }

  function VL(bf, bg, bh, bi) {
    var bF = bf['createShader'](bg);
    return bf['shaderSource'](bF, bh), bf['compileShader'](bF), !0x0 === bi && (!0x1 === bf['getShaderParameter'](bF, 0x8b81) && console['error']('THREE.WebGLShader:\x20Shader\x20couldn\x27t\x20compile.'), '' !== bf['getShaderInfoLog'](bF) && console['warn']('THREE.WebGLShader:\x20gl.getShaderInfoLog()', 0x8b31 === bg ? 'vertex' : 'fragment', bf['getShaderInfoLog'](bF), function(bf) {
      for (var bg = bf['split']('\x0a'), bh = 0x0; bh < bg['length']; bh++) bg[bh] = bh + 0x1 + ':\x20' + bg[bh];
      return bg['join']('\x0a');
    }(bh))), bF;
  }
  VF['prototype']['setValue'] = function(bf, bg, bh, bi) {
    var bF = this['map'][bg];
    void 0x0 !== bF && bF['setValue'](bf, bh, bi);
  }, VF['prototype']['setOptional'] = function(bf, bg, bh) {
    var bi = bg[bh];
    void 0x0 !== bi && this['setValue'](bf, bh, bi);
  }, VF['upload'] = function(bf, bg, bh, bi) {
    for (var bF = 0x0, bG = bg['length']; bF !== bG; ++bF) {
      var bH = bg[bF],
        bI = bh[bH['id']];
      !0x1 !== bI['needsUpdate'] && bH['setValue'](bf, bI['value'], bi);
    }
  }, VF['seqWithValue'] = function(bf, bg) {
    for (var bh = [], bi = 0x0, bF = bf['length']; bi !== bF; ++bi) {
      var bG = bf[bi];
      bG['id'] in bg && bh['push'](bG);
    }
    return bh;
  };
  var Wh = 0x0;

  function Wi(bf) {
    switch (bf) {
      case dQ:
        return ['Linear', '(\x20value\x20)'];
      case dR:
        return ['sRGB', '(\x20value\x20)'];
      case dT:
        return ['RGBE', '(\x20value\x20)'];
      case dV:
        return ['RGBM', '(\x20value,\x207.0\x20)'];
      case dW:
        return ['RGBM', '(\x20value,\x2016.0\x20)'];
      case dX:
        return ['RGBD', '(\x20value,\x20256.0\x20)'];
      case dS:
        return ['Gamma', '(\x20value,\x20float(\x20GAMMA_FACTOR\x20)\x20)'];
      default:
        throw new Error('unsupported\x20encoding:\x20' + bf);
    }
  }

  function Wk(bf, bg) {
    var bh = Wi(bg);
    return 'vec4\x20' + bf + '(\x20vec4\x20value\x20)\x20{\x20return\x20' + bh[0x0] + 'ToLinear' + bh[0x1] + ';\x20}';
  }

  function Wo(bf, bg) {
    var bh;
    switch (bg) {
      case cz:
        bh = 'Linear';
        break;
      case cA:
        bh = 'Reinhard';
        break;
      case cB:
        bh = 'Uncharted2';
        break;
      case cC:
        bh = 'OptimizedCineon';
        break;
      case cD:
        bh = 'ACESFilmic';
        break;
      default:
        throw new Error('unsupported\x20toneMapping:\x20' + bg);
    }
    return 'vec3\x20' + bf + '(\x20vec3\x20color\x20)\x20{\x20return\x20' + bh + 'ToneMapping(\x20color\x20);\x20}';
  }

  function Ws(bf) {
    return '' !== bf;
  }

  function Wu(bf, bg) {
    return bf['replace'](/NUM_DIR_LIGHTS/g, bg['numDirLights'])['replace'](/NUM_SPOT_LIGHTS/g, bg['numSpotLights'])['replace'](/NUM_RECT_AREA_LIGHTS/g, bg['numRectAreaLights'])['replace'](/NUM_POINT_LIGHTS/g, bg['numPointLights'])['replace'](/NUM_HEMI_LIGHTS/g, bg['numHemiLights']);
  }

  function Wx(bf, bg) {
    return bf['replace'](/NUM_CLIPPING_PLANES/g, bg['numClippingPlanes'])['replace'](/UNION_CLIPPING_PLANES/g, bg['numClippingPlanes'] - bg['numClipIntersection']);
  }

  function WA(bf) {
    return bf['replace'](/^[ \t]*#include +<([\w\d.\/]+)>/gm, function(bf, bg) {
      var bh = vP[bg];
      if (void 0x0 === bh) throw new Error('Can\x20not\x20resolve\x20#include\x20<' + bg + '>');
      return WA(bh);
    });
  }

  function WF(bf) {
    return bf['replace'](/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(bf, bg, bh, bi) {
      for (var bF = '', bG = parseInt(bg); bG < parseInt(bh); bG++) bF += bi['replace'](/\[ i \]/g, '[\x20' + bG + '\x20]');
      return bF;
    });
  }

  function WN(bf, bg, bh, bi, bF, bG, bH, bI) {
    var bJ = bf['context'],
      bK = bi['defines'],
      bL = bF['vertexShader'],
      bM = bF['fragmentShader'],
      bN = 'SHADOWMAP_TYPE_BASIC';
    bG['shadowMapType'] === bR ? bN = 'SHADOWMAP_TYPE_PCF' : bG['shadowMapType'] === bS && (bN = 'SHADOWMAP_TYPE_PCF_SOFT');
    var bO = 'ENVMAP_TYPE_CUBE',
      bP = 'ENVMAP_MODE_REFLECTION',
      bQ = 'ENVMAP_BLENDING_MULTIPLY';
    if (bG['envMap']) {
      switch (bi['envMap']['mapping']) {
        case cF:
        case cG:
          bO = 'ENVMAP_TYPE_CUBE';
          break;
        case cK:
        case cL:
          bO = 'ENVMAP_TYPE_CUBE_UV';
          break;
        case cH:
        case cI:
          bO = 'ENVMAP_TYPE_EQUIREC';
          break;
        case cJ:
          bO = 'ENVMAP_TYPE_SPHERE';
      }
      switch (bi['envMap']['mapping']) {
        case cG:
        case cI:
          bP = 'ENVMAP_MODE_REFRACTION';
      }
      switch (bi['combine']) {
        case cv:
          bQ = 'ENVMAP_BLENDING_MULTIPLY';
          break;
        case cw:
          bQ = 'ENVMAP_BLENDING_MIX';
          break;
        case cx:
          bQ = 'ENVMAP_BLENDING_ADD';
      }
    }
    var bT, bU, bV, bW, bX, bY = bf['gammaFactor'] > 0x0 ? bf['gammaFactor'] : 0x1,
      bZ = bH['isWebGL2'] ? '' : function(bf, bg, bh) {
        return [(bf = bf || {})['derivatives'] || bg['envMapCubeUV'] || bg['bumpMap'] || bg['normalMap'] && !bg['objectSpaceNormalMap'] || bg['flatShading'] ? '#extension\x20GL_OES_standard_derivatives\x20:\x20enable' : '', (bf['fragDepth'] || bg['logarithmicDepthBuffer']) && bh['get']('EXT_frag_depth') ? '#extension\x20GL_EXT_frag_depth\x20:\x20enable' : '', bf['drawBuffers'] && bh['get']('WEBGL_draw_buffers') ? '#extension\x20GL_EXT_draw_buffers\x20:\x20require' : '', (bf['shaderTextureLOD'] || bg['envMap']) && bh['get']('EXT_shader_texture_lod') ? '#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable' : '']['filter'](Ws)['join']('\x0a');
      }(bi['extensions'], bG, bg),
      c0 = function(bf) {
        var bg = [];
        for (var bh in bf) {
          var bi = bf[bh];
          !0x1 !== bi && bg['push']('#define\x20' + bh + '\x20' + bi);
        }
        return bg['join']('\x0a');
      }(bK),
      c1 = bJ['createProgram']();
    if (bi['isRawShaderMaterial'] ? ((bT = [c0]['filter'](Ws)['join']('\x0a'))['length'] > 0x0 && (bT += '\x0a'), (bU = [bZ, c0]['filter'](Ws)['join']('\x0a'))['length'] > 0x0 && (bU += '\x0a')) : (bT = ['precision\x20' + bG['precision'] + '\x20float;', 'precision\x20' + bG['precision'] + '\x20int;', '#define\x20SHADER_NAME\x20' + bF['name'], c0, bG['supportsVertexTextures'] ? '#define\x20VERTEX_TEXTURES' : '', '#define\x20GAMMA_FACTOR\x20' + bY, '#define\x20MAX_BONES\x20' + bG['maxBones'], bG['useFog'] && bG['fog'] ? '#define\x20USE_FOG' : '', bG['useFog'] && bG['fogExp'] ? '#define\x20FOG_EXP2' : '', bG['map'] ? '#define\x20USE_MAP' : '', bG['envMap'] ? '#define\x20USE_ENVMAP' : '', bG['envMap'] ? '#define\x20' + bP : '', bG['lightMap'] ? '#define\x20USE_LIGHTMAP' : '', bG['aoMap'] ? '#define\x20USE_AOMAP' : '', bG['emissiveMap'] ? '#define\x20USE_EMISSIVEMAP' : '', bG['bumpMap'] ? '#define\x20USE_BUMPMAP' : '', bG['normalMap'] ? '#define\x20USE_NORMALMAP' : '', bG['normalMap'] && bG['objectSpaceNormalMap'] ? '#define\x20OBJECTSPACE_NORMALMAP' : '', bG['displacementMap'] && bG['supportsVertexTextures'] ? '#define\x20USE_DISPLACEMENTMAP' : '', bG['specularMap'] ? '#define\x20USE_SPECULARMAP' : '', bG['roughnessMap'] ? '#define\x20USE_ROUGHNESSMAP' : '', bG['metalnessMap'] ? '#define\x20USE_METALNESSMAP' : '', bG['alphaMap'] ? '#define\x20USE_ALPHAMAP' : '', bG['vertexTangents'] ? '#define\x20USE_TANGENT' : '', bG['vertexColors'] ? '#define\x20USE_COLOR' : '', bG['flatShading'] ? '#define\x20FLAT_SHADED' : '', bG['skinning'] ? '#define\x20USE_SKINNING' : '', bG['useVertexTexture'] ? '#define\x20BONE_TEXTURE' : '', bG['morphTargets'] ? '#define\x20USE_MORPHTARGETS' : '', bG['morphNormals'] && !0x1 === bG['flatShading'] ? '#define\x20USE_MORPHNORMALS' : '', bG['doubleSided'] ? '#define\x20DOUBLE_SIDED' : '', bG['flipSided'] ? '#define\x20FLIP_SIDED' : '', bG['shadowMapEnabled'] ? '#define\x20USE_SHADOWMAP' : '', bG['shadowMapEnabled'] ? '#define\x20' + bN : '', bG['sizeAttenuation'] ? '#define\x20USE_SIZEATTENUATION' : '', bG['logarithmicDepthBuffer'] ? '#define\x20USE_LOGDEPTHBUF' : '', bG['logarithmicDepthBuffer'] && (bH['isWebGL2'] || bg['get']('EXT_frag_depth')) ? '#define\x20USE_LOGDEPTHBUF_EXT' : '', 'uniform\x20mat4\x20modelMatrix;', 'uniform\x20mat4\x20modelViewMatrix;', 'uniform\x20mat4\x20projectionMatrix;', 'uniform\x20mat4\x20viewMatrix;', 'uniform\x20mat3\x20normalMatrix;', 'uniform\x20vec3\x20cameraPosition;', 'attribute\x20vec3\x20position;', 'attribute\x20vec3\x20normal;', 'attribute\x20vec2\x20uv;', '#ifdef\x20USE_TANGENT', '\x09attribute\x20vec4\x20tangent;', '#endif', '#ifdef\x20USE_COLOR', '\x09attribute\x20vec3\x20color;', '#endif', '#ifdef\x20USE_MORPHTARGETS', '\x09attribute\x20vec3\x20morphTarget0;', '\x09attribute\x20vec3\x20morphTarget1;', '\x09attribute\x20vec3\x20morphTarget2;', '\x09attribute\x20vec3\x20morphTarget3;', '\x09#ifdef\x20USE_MORPHNORMALS', '\x09\x09attribute\x20vec3\x20morphNormal0;', '\x09\x09attribute\x20vec3\x20morphNormal1;', '\x09\x09attribute\x20vec3\x20morphNormal2;', '\x09\x09attribute\x20vec3\x20morphNormal3;', '\x09#else', '\x09\x09attribute\x20vec3\x20morphTarget4;', '\x09\x09attribute\x20vec3\x20morphTarget5;', '\x09\x09attribute\x20vec3\x20morphTarget6;', '\x09\x09attribute\x20vec3\x20morphTarget7;', '\x09#endif', '#endif', '#ifdef\x20USE_SKINNING', '\x09attribute\x20vec4\x20skinIndex;', '\x09attribute\x20vec4\x20skinWeight;', '#endif', '\x0a']['filter'](Ws)['join']('\x0a'), bU = [bZ, 'precision\x20' + bG['precision'] + '\x20float;', 'precision\x20' + bG['precision'] + '\x20int;', '#define\x20SHADER_NAME\x20' + bF['name'], c0, bG['alphaTest'] ? '#define\x20ALPHATEST\x20' + bG['alphaTest'] + (bG['alphaTest'] % 0x1 ? '' : '.0') : '', '#define\x20GAMMA_FACTOR\x20' + bY, bG['useFog'] && bG['fog'] ? '#define\x20USE_FOG' : '', bG['useFog'] && bG['fogExp'] ? '#define\x20FOG_EXP2' : '', bG['map'] ? '#define\x20USE_MAP' : '', bG['matcap'] ? '#define\x20USE_MATCAP' : '', bG['envMap'] ? '#define\x20USE_ENVMAP' : '', bG['envMap'] ? '#define\x20' + bO : '', bG['envMap'] ? '#define\x20' + bP : '', bG['envMap'] ? '#define\x20' + bQ : '', bG['lightMap'] ? '#define\x20USE_LIGHTMAP' : '', bG['aoMap'] ? '#define\x20USE_AOMAP' : '', bG['emissiveMap'] ? '#define\x20USE_EMISSIVEMAP' : '', bG['bumpMap'] ? '#define\x20USE_BUMPMAP' : '', bG['normalMap'] ? '#define\x20USE_NORMALMAP' : '', bG['normalMap'] && bG['objectSpaceNormalMap'] ? '#define\x20OBJECTSPACE_NORMALMAP' : '', bG['specularMap'] ? '#define\x20USE_SPECULARMAP' : '', bG['roughnessMap'] ? '#define\x20USE_ROUGHNESSMAP' : '', bG['metalnessMap'] ? '#define\x20USE_METALNESSMAP' : '', bG['alphaMap'] ? '#define\x20USE_ALPHAMAP' : '', bG['vertexTangents'] ? '#define\x20USE_TANGENT' : '', bG['vertexColors'] ? '#define\x20USE_COLOR' : '', bG['gradientMap'] ? '#define\x20USE_GRADIENTMAP' : '', bG['flatShading'] ? '#define\x20FLAT_SHADED' : '', bG['doubleSided'] ? '#define\x20DOUBLE_SIDED' : '', bG['flipSided'] ? '#define\x20FLIP_SIDED' : '', bG['shadowMapEnabled'] ? '#define\x20USE_SHADOWMAP' : '', bG['shadowMapEnabled'] ? '#define\x20' + bN : '', bG['premultipliedAlpha'] ? '#define\x20PREMULTIPLIED_ALPHA' : '', bG['physicallyCorrectLights'] ? '#define\x20PHYSICALLY_CORRECT_LIGHTS' : '', bG['logarithmicDepthBuffer'] ? '#define\x20USE_LOGDEPTHBUF' : '', bG['logarithmicDepthBuffer'] && (bH['isWebGL2'] || bg['get']('EXT_frag_depth')) ? '#define\x20USE_LOGDEPTHBUF_EXT' : '', bG['envMap'] && (bH['isWebGL2'] || bg['get']('EXT_shader_texture_lod')) ? '#define\x20TEXTURE_LOD_EXT' : '', 'uniform\x20mat4\x20viewMatrix;', 'uniform\x20vec3\x20cameraPosition;', bG['toneMapping'] !== cy ? '#define\x20TONE_MAPPING' : '', bG['toneMapping'] !== cy ? vP['tonemapping_pars_fragment'] : '', bG['toneMapping'] !== cy ? Wo('toneMapping', bG['toneMapping']) : '', bG['dithering'] ? '#define\x20DITHERING' : '', bG['outputEncoding'] || bG['mapEncoding'] || bG['matcapEncoding'] || bG['envMapEncoding'] || bG['emissiveMapEncoding'] ? vP['encodings_pars_fragment'] : '', bG['mapEncoding'] ? Wk('mapTexelToLinear', bG['mapEncoding']) : '', bG['matcapEncoding'] ? Wk('matcapTexelToLinear', bG['matcapEncoding']) : '', bG['envMapEncoding'] ? Wk('envMapTexelToLinear', bG['envMapEncoding']) : '', bG['emissiveMapEncoding'] ? Wk('emissiveMapTexelToLinear', bG['emissiveMapEncoding']) : '', bG['outputEncoding'] ? (bV = 'linearToOutputTexel', bW = bG['outputEncoding'], bX = Wi(bW), 'vec4\x20' + bV + '(\x20vec4\x20value\x20)\x20{\x20return\x20LinearTo' + bX[0x0] + bX[0x1] + ';\x20}') : '', bG['depthPacking'] ? '#define\x20DEPTH_PACKING\x20' + bi['depthPacking'] : '', '\x0a']['filter'](Ws)['join']('\x0a')), bL = Wx(bL = Wu(bL = WA(bL), bG), bG), bM = Wx(bM = Wu(bM = WA(bM), bG), bG), bL = WF(bL), bM = WF(bM), bH['isWebGL2'] && !bi['isRawShaderMaterial']) {
      var c2 = !0x1,
        c3 = /^\s*#version\s+300\s+es\s*\n/;
      bi['isShaderMaterial'] && null !== bL['match'](c3) && null !== bM['match'](c3) && (c2 = !0x0, bL = bL['replace'](c3, ''), bM = bM['replace'](c3, '')), bT = ['#version\x20300\x20es\x0a', '#define\x20attribute\x20in', '#define\x20varying\x20out', '#define\x20texture2D\x20texture']['join']('\x0a') + '\x0a' + bT, bU = ['#version\x20300\x20es\x0a', '#define\x20varying\x20in', c2 ? '' : 'out\x20highp\x20vec4\x20pc_fragColor;', c2 ? '' : '#define\x20gl_FragColor\x20pc_fragColor', '#define\x20gl_FragDepthEXT\x20gl_FragDepth', '#define\x20texture2D\x20texture', '#define\x20textureCube\x20texture', '#define\x20texture2DProj\x20textureProj', '#define\x20texture2DLodEXT\x20textureLod', '#define\x20texture2DProjLodEXT\x20textureProjLod', '#define\x20textureCubeLodEXT\x20textureLod', '#define\x20texture2DGradEXT\x20textureGrad', '#define\x20texture2DProjGradEXT\x20textureProjGrad', '#define\x20textureCubeGradEXT\x20textureGrad']['join']('\x0a') + '\x0a' + bU;
    }
    var c4, c5, c6 = bU + bM,
      c7 = VL(bJ, 0x8b31, bT + bL, bf['debug']['checkShaderErrors']),
      c8 = VL(bJ, 0x8b30, c6, bf['debug']['checkShaderErrors']);
    if (bJ['attachShader'](c1, c7), bJ['attachShader'](c1, c8), void 0x0 !== bi['index0AttributeName'] ? bJ['bindAttribLocation'](c1, 0x0, bi['index0AttributeName']) : !0x0 === bG['morphTargets'] && bJ['bindAttribLocation'](c1, 0x0, 'position'), bJ['linkProgram'](c1), bf['debug']['checkShaderErrors']) {
      var c9 = bJ['getProgramInfoLog'](c1)['trim'](),
        ca = bJ['getShaderInfoLog'](c7)['trim'](),
        cb = bJ['getShaderInfoLog'](c8)['trim'](),
        cc = !0x0,
        cd = !0x0;
      !0x1 === bJ['getProgramParameter'](c1, 0x8b82) ? (cc = !0x1, console['error']('THREE.WebGLProgram:\x20shader\x20error:\x20', bJ['getError'](), '35715', bJ['getProgramParameter'](c1, 0x8b83), 'gl.getProgramInfoLog', c9, ca, cb)) : '' !== c9 ? console['warn']('THREE.WebGLProgram:\x20gl.getProgramInfoLog()', c9) : '' !== ca && '' !== cb || (cd = !0x1), cd && (this['diagnostics'] = {
        'runnable': cc,
        'material': bi,
        'programLog': c9,
        'vertexShader': {
          'log': ca,
          'prefix': bT
        },
        'fragmentShader': {
          'log': cb,
          'prefix': bU
        }
      });
    }
    return bJ['deleteShader'](c7), bJ['deleteShader'](c8), this['getUniforms'] = function() {
      return void 0x0 === c4 && (c4 = new VF(bJ, c1, bI)), c4;
    }, this['getAttributes'] = function() {
      return void 0x0 === c5 && (c5 = function(bf, bg) {
        for (var bh = {}, bi = bf['getProgramParameter'](bg, 0x8b89), bF = 0x0; bF < bi; bF++) {
          var bG = bf['getActiveAttrib'](bg, bF)['name'];
          bh[bG] = bf['getAttribLocation'](bg, bG);
        }
        return bh;
      }(bJ, c1)), c5;
    }, this['destroy'] = function() {
      bJ['deleteProgram'](c1), this['program'] = void 0x0;
    }, Object['defineProperties'](this, {
      'uniforms': {
        'get': function() {
          return console['warn']('THREE.WebGLProgram:\x20.uniforms\x20is\x20now\x20.getUniforms().'), this['getUniforms']();
        }
      },
      'attributes': {
        'get': function() {
          return console['warn']('THREE.WebGLProgram:\x20.attributes\x20is\x20now\x20.getAttributes().'), this['getAttributes']();
        }
      }
    }), this['name'] = bF['name'], this['id'] = Wh++, this['code'] = bh, this['usedTimes'] = 0x1, this['program'] = c1, this['vertexShader'] = c7, this['fragmentShader'] = c8, this;
  }

  function XC(bf, bg, bh, bi) {
    var bF = [],
      bG = {
        'MeshDepthMaterial': 'depth',
        'MeshDistanceMaterial': 'distanceRGBA',
        'MeshNormalMaterial': 'normal',
        'MeshBasicMaterial': 'basic',
        'MeshLambertMaterial': 'lambert',
        'MeshPhongMaterial': 'phong',
        'MeshToonMaterial': 'phong',
        'MeshStandardMaterial': 'physical',
        'MeshPhysicalMaterial': 'physical',
        'MeshMatcapMaterial': 'matcap',
        'LineBasicMaterial': 'basic',
        'LineDashedMaterial': 'dashed',
        'PointsMaterial': 'points',
        'ShadowMaterial': 'shadow',
        'SpriteMaterial': 'sprite'
      },
      bH = ['precision', 'supportsVertexTextures', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'lightMap', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'displacementMap', 'specularMap', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'fog', 'useFog', 'fogExp', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering'];

    function bI(bf, bg) {
      var bh;
      return bf ? bf['isTexture'] ? bh = bf['encoding'] : bf['isWebGLRenderTarget'] && (console['warn']('THREE.WebGLPrograms.getTextureEncodingFromMap:\x20don\x27t\x20use\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'), bh = bf['texture']['encoding']) : bh = dQ, bh === dQ && bg && (bh = dS), bh;
    }
    this['getParameters'] = function(bg, bi, bF, bH, bJ, bK, bL) {
      var bM = bG[bg['type']],
        bN = bL['isSkinnedMesh'] ? function(bf) {
          var bg = bf['skeleton']['bones'];
          if (bh['floatVertexTextures']) return 0x400;
          var bi = bh['maxVertexUniforms'],
            bF = Math['floor']((bi - 0x14) / 0x4),
            bG = Math['min'](bF, bg['length']);
          return bG < bg['length'] ? (console['warn']('THREE.WebGLRenderer:\x20Skeleton\x20has\x20' + bg['length'] + '\x20bones.\x20This\x20GPU\x20supports\x20' + bG + '.'), 0x0) : bG;
        }(bL) : 0x0,
        bO = bh['precision'];
      null !== bg['precision'] && (bO = bh['getMaxPrecision'](bg['precision'])) !== bg['precision'] && console['warn']('THREE.WebGLProgram.getParameters:', bg['precision'], 'not\x20supported,\x20using', bO, 'instead.');
      var bP = bf['getRenderTarget']();
      return {
        'shaderID': bM,
        'precision': bO,
        'supportsVertexTextures': bh['vertexTextures'],
        'outputEncoding': bI(bP ? bP['texture'] : null, bf['gammaOutput']),
        'map': !!bg['map'],
        'mapEncoding': bI(bg['map'], bf['gammaInput']),
        'matcap': !!bg['matcap'],
        'matcapEncoding': bI(bg['matcap'], bf['gammaInput']),
        'envMap': !!bg['envMap'],
        'envMapMode': bg['envMap'] && bg['envMap']['mapping'],
        'envMapEncoding': bI(bg['envMap'], bf['gammaInput']),
        'envMapCubeUV': !!bg['envMap'] && (bg['envMap']['mapping'] === cK || bg['envMap']['mapping'] === cL),
        'lightMap': !!bg['lightMap'],
        'aoMap': !!bg['aoMap'],
        'emissiveMap': !!bg['emissiveMap'],
        'emissiveMapEncoding': bI(bg['emissiveMap'], bf['gammaInput']),
        'bumpMap': !!bg['bumpMap'],
        'normalMap': !!bg['normalMap'],
        'objectSpaceNormalMap': bg['normalMapType'] === e1,
        'displacementMap': !!bg['displacementMap'],
        'roughnessMap': !!bg['roughnessMap'],
        'metalnessMap': !!bg['metalnessMap'],
        'specularMap': !!bg['specularMap'],
        'alphaMap': !!bg['alphaMap'],
        'gradientMap': !!bg['gradientMap'],
        'combine': bg['combine'],
        'vertexTangents': bg['normalMap'] && bg['vertexTangents'],
        'vertexColors': bg['vertexColors'],
        'fog': !!bH,
        'useFog': bg['fog'],
        'fogExp': bH && bH['isFogExp2'],
        'flatShading': bg['flatShading'],
        'sizeAttenuation': bg['sizeAttenuation'],
        'logarithmicDepthBuffer': bh['logarithmicDepthBuffer'],
        'skinning': bg['skinning'] && bN > 0x0,
        'maxBones': bN,
        'useVertexTexture': bh['floatVertexTextures'],
        'morphTargets': bg['morphTargets'],
        'morphNormals': bg['morphNormals'],
        'maxMorphTargets': bf['maxMorphTargets'],
        'maxMorphNormals': bf['maxMorphNormals'],
        'numDirLights': bi['directional']['length'],
        'numPointLights': bi['point']['length'],
        'numSpotLights': bi['spot']['length'],
        'numRectAreaLights': bi['rectArea']['length'],
        'numHemiLights': bi['hemi']['length'],
        'numClippingPlanes': bJ,
        'numClipIntersection': bK,
        'dithering': bg['dithering'],
        'shadowMapEnabled': bf['shadowMap']['enabled'] && bL['receiveShadow'] && bF['length'] > 0x0,
        'shadowMapType': bf['shadowMap']['type'],
        'toneMapping': bf['toneMapping'],
        'physicallyCorrectLights': bf['physicallyCorrectLights'],
        'premultipliedAlpha': bg['premultipliedAlpha'],
        'alphaTest': bg['alphaTest'],
        'doubleSided': bg['side'] === bV,
        'flipSided': bg['side'] === bU,
        'depthPacking': void 0x0 !== bg['depthPacking'] && bg['depthPacking']
      };
    }, this['getProgramCode'] = function(bg, bh) {
      var bi = [];
      if (bh['shaderID'] ? bi['push'](bh['shaderID']) : (bi['push'](bg['fragmentShader']), bi['push'](bg['vertexShader'])), void 0x0 !== bg['defines'])
        for (var bF in bg['defines']) bi['push'](bF), bi['push'](bg['defines'][bF]);
      for (var bG = 0x0; bG < bH['length']; bG++) bi['push'](bh[bH[bG]]);
      return bi['push'](bg['onBeforeCompile']['toString']()), bi['push'](bf['gammaOutput']), bi['push'](bf['gammaFactor']), bi['join']();
    }, this['acquireProgram'] = function(bG, bH, bI, bJ) {
      for (var bK, bL = 0x0, bM = bF['length']; bL < bM; bL++) {
        var bN = bF[bL];
        if (bN['code'] === bJ) {
          ++(bK = bN)['usedTimes'];
          break;
        }
      }
      return void 0x0 === bK && (bK = new WN(bf, bg, bJ, bG, bH, bI, bh, bi), bF['push'](bK)), bK;
    }, this['releaseProgram'] = function(bf) {
      if (0x0 == --bf['usedTimes']) {
        var bg = bF['indexOf'](bf);
        bF[bg] = bF[bF['length'] - 0x1], bF['pop'](), bf['destroy']();
      }
    }, this['programs'] = bF;
  }

  function Yj() {
    var bf = new WeakMap();
    return {
      'get': function(bg) {
        var bh = bf['get'](bg);
        return void 0x0 === bh && (bh = {}, bf['set'](bg, bh)), bh;
      },
      'remove': function(bg) {
        bf['delete'](bg);
      },
      'update': function(bg, bh, bi) {
        bf['get'](bg)[bh] = bi;
      },
      'dispose': function() {
        bf = new WeakMap();
      }
    };
  }

  function Yr(bf, bg) {
    return bf['groupOrder'] !== bg['groupOrder'] ? bf['groupOrder'] - bg['groupOrder'] : bf['renderOrder'] !== bg['renderOrder'] ? bf['renderOrder'] - bg['renderOrder'] : bf['program'] !== bg['program'] ? bf['program']['id'] - bg['program']['id'] : bf['material']['id'] !== bg['material']['id'] ? bf['material']['id'] - bg['material']['id'] : bf['z'] !== bg['z'] ? bf['z'] - bg['z'] : bf['id'] - bg['id'];
  }

  function Yu(bf, bg) {
    return bf['groupOrder'] !== bg['groupOrder'] ? bf['groupOrder'] - bg['groupOrder'] : bf['renderOrder'] !== bg['renderOrder'] ? bf['renderOrder'] - bg['renderOrder'] : bf['z'] !== bg['z'] ? bg['z'] - bf['z'] : bf['id'] - bg['id'];
  }

  function Yx() {
    var bf = [],
      bg = 0x0,
      bh = [],
      bi = [],
      bF = {
        'id': -0x1
      };

    function bG(bh, bi, bG, bH, bI, bJ) {
      var bK = bf[bg];
      return void 0x0 === bK ? (bK = {
        'id': bh['id'],
        'object': bh,
        'geometry': bi,
        'material': bG,
        'program': bG['program'] || bF,
        'groupOrder': bH,
        'renderOrder': bh['renderOrder'],
        'z': bI,
        'group': bJ
      }, bf[bg] = bK) : (bK['id'] = bh['id'], bK['object'] = bh, bK['geometry'] = bi, bK['material'] = bG, bK['program'] = bG['program'] || bF, bK['groupOrder'] = bH, bK['renderOrder'] = bh['renderOrder'], bK['z'] = bI, bK['group'] = bJ), bg++, bK;
    }
    return {
      'opaque': bh,
      'transparent': bi,
      'init': function() {
        bg = 0x0, bh['length'] = 0x0, bi['length'] = 0x0;
      },
      'push': function(bf, bg, bF, bH, bI, bJ) {
        var bK = bG(bf, bg, bF, bH, bI, bJ);
        (!0x0 === bF['transparent'] ? bi : bh)['push'](bK);
      },
      'unshift': function(bf, bg, bF, bH, bI, bJ) {
        var bK = bG(bf, bg, bF, bH, bI, bJ);
        (!0x0 === bF['transparent'] ? bi : bh)['unshift'](bK);
      },
      'sort': function() {
        bh['length'] > 0x1 && bh['sort'](Yr), bi['length'] > 0x1 && bi['sort'](Yu);
      }
    };
  }

  function YZ() {
    var bf = {};

    function bg(bh) {
      var bi = bh['target'];
      bi['removeEventListener']('dispose', bg), delete bf[bi['id']];
    }
    return {
      'get': function(bh, bi) {
        var bF, bG = bf[bh['id']];
        return void 0x0 === bG ? (bF = new Yx(), bf[bh['id']] = {}, bf[bh['id']][bi['id']] = bF, bh['addEventListener']('dispose', bg)) : void 0x0 === (bF = bG[bi['id']]) && (bF = new Yx(), bG[bi['id']] = bF), bF;
      },
      'dispose': function() {
        bf = {};
      }
    };
  }

  function Z8() {
    var bf = {};
    return {
      'get': function(bg) {
        if (void 0x0 !== bf[bg['id']]) return bf[bg['id']];
        var bh;
        switch (bg['type']) {
          case 'DirectionalLight':
            bh = {
              'direction': new eK(),
              'color': new w7(),
              'shadow': !0x1,
              'shadowBias': 0x0,
              'shadowRadius': 0x1,
              'shadowMapSize': new eC()
            };
            break;
          case 'SpotLight':
            bh = {
              'position': new eK(),
              'direction': new eK(),
              'color': new w7(),
              'distance': 0x0,
              'coneCos': 0x0,
              'penumbraCos': 0x0,
              'decay': 0x0,
              'shadow': !0x1,
              'shadowBias': 0x0,
              'shadowRadius': 0x1,
              'shadowMapSize': new eC()
            };
            break;
          case 'PointLight':
            bh = {
              'position': new eK(),
              'color': new w7(),
              'distance': 0x0,
              'decay': 0x0,
              'shadow': !0x1,
              'shadowBias': 0x0,
              'shadowRadius': 0x1,
              'shadowMapSize': new eC(),
              'shadowCameraNear': 0x1,
              'shadowCameraFar': 0x3e8
            };
            break;
          case 'HemisphereLight':
            bh = {
              'direction': new eK(),
              'skyColor': new w7(),
              'groundColor': new w7()
            };
            break;
          case 'RectAreaLight':
            bh = {
              'color': new w7(),
              'position': new eK(),
              'halfWidth': new eK(),
              'halfHeight': new eK()
            };
        }
        return bf[bg['id']] = bh, bh;
      }
    };
  }
  var Zc = 0x0;

  function Zd() {
    for (var bf = new Z8(), bg = {
        'id': Zc++,
        'hash': {
          'stateID': -0x1,
          'directionalLength': -0x1,
          'pointLength': -0x1,
          'spotLength': -0x1,
          'rectAreaLength': -0x1,
          'hemiLength': -0x1,
          'shadowsLength': -0x1
        },
        'ambient': [0x0, 0x0, 0x0],
        'probe': [],
        'directional': [],
        'directionalShadowMap': [],
        'directionalShadowMatrix': [],
        'spot': [],
        'spotShadowMap': [],
        'spotShadowMatrix': [],
        'rectArea': [],
        'point': [],
        'pointShadowMap': [],
        'pointShadowMatrix': [],
        'hemi': []
      }, bh = 0x0; bh < 0x9; bh++) bg['probe']['push'](new eK());
    var bi = new eK(),
      bF = new mR(),
      bG = new mR();
    return {
      'setup': function(bh, bH, bI) {
        for (var bJ = 0x0, bK = 0x0, bL = 0x0, bM = 0x0; bM < 0x9; bM++) bg['probe'][bM]['set'](0x0, 0x0, 0x0);
        for (var bN = 0x0, bO = 0x0, bP = 0x0, bQ = 0x0, bR = 0x0, bS = bI['matrixWorldInverse'], bT = (bM = 0x0, bh['length']); bM < bT; bM++) {
          var bU = bh[bM],
            bV = bU['color'],
            bW = bU['intensity'],
            bX = bU['distance'],
            bY = bU['shadow'] && bU['shadow']['map'] ? bU['shadow']['map']['texture'] : null;
          if (bU['isAmbientLight']) bJ += bV['r'] * bW, bK += bV['g'] * bW, bL += bV['b'] * bW;
          else if (bU['isLightProbe'])
            for (var bZ = 0x0; bZ < 0x9; bZ++) bg['probe'][bZ]['addScaledVector'](bU['sh']['coefficients'][bZ], bW);
          else if (bU['isDirectionalLight']) {
            if ((c1 = bf['get'](bU))['color']['copy'](bU['color'])['multiplyScalar'](bU['intensity']), c1['direction']['setFromMatrixPosition'](bU['matrixWorld']), bi['setFromMatrixPosition'](bU['target']['matrixWorld']), c1['direction']['sub'](bi), c1['direction']['transformDirection'](bS), c1['shadow'] = bU['castShadow'], bU['castShadow']) {
              var c0 = bU['shadow'];
              c1['shadowBias'] = c0['bias'], c1['shadowRadius'] = c0['radius'], c1['shadowMapSize'] = c0['mapSize'];
            }
            bg['directionalShadowMap'][bN] = bY, bg['directionalShadowMatrix'][bN] = bU['shadow']['matrix'], bg['directional'][bN] = c1, bN++;
          } else if (bU['isSpotLight'])(c1 = bf['get'](bU))['position']['setFromMatrixPosition'](bU['matrixWorld']), c1['position']['applyMatrix4'](bS), c1['color']['copy'](bV)['multiplyScalar'](bW), c1['distance'] = bX, c1['direction']['setFromMatrixPosition'](bU['matrixWorld']), bi['setFromMatrixPosition'](bU['target']['matrixWorld']), c1['direction']['sub'](bi), c1['direction']['transformDirection'](bS), c1['coneCos'] = Math['cos'](bU['angle']), c1['penumbraCos'] = Math['cos'](bU['angle'] * (0x1 - bU['penumbra'])), c1['decay'] = bU['decay'], c1['shadow'] = bU['castShadow'], bU['castShadow'] && (c0 = bU['shadow'], c1['shadowBias'] = c0['bias'], c1['shadowRadius'] = c0['radius'], c1['shadowMapSize'] = c0['mapSize']), bg['spotShadowMap'][bP] = bY, bg['spotShadowMatrix'][bP] = bU['shadow']['matrix'], bg['spot'][bP] = c1, bP++;
          else if (bU['isRectAreaLight'])(c1 = bf['get'](bU))['color']['copy'](bV)['multiplyScalar'](bW), c1['position']['setFromMatrixPosition'](bU['matrixWorld']), c1['position']['applyMatrix4'](bS), bG['identity'](), bF['copy'](bU['matrixWorld']), bF['premultiply'](bS), bG['extractRotation'](bF), c1['halfWidth']['set'](0.5 * bU['width'], 0x0, 0x0), c1['halfHeight']['set'](0x0, 0.5 * bU['height'], 0x0), c1['halfWidth']['applyMatrix4'](bG), c1['halfHeight']['applyMatrix4'](bG), bg['rectArea'][bQ] = c1, bQ++;
          else if (bU['isPointLight'])(c1 = bf['get'](bU))['position']['setFromMatrixPosition'](bU['matrixWorld']), c1['position']['applyMatrix4'](bS), c1['color']['copy'](bU['color'])['multiplyScalar'](bU['intensity']), c1['distance'] = bU['distance'], c1['decay'] = bU['decay'], c1['shadow'] = bU['castShadow'], bU['castShadow'] && (c0 = bU['shadow'], c1['shadowBias'] = c0['bias'], c1['shadowRadius'] = c0['radius'], c1['shadowMapSize'] = c0['mapSize'], c1['shadowCameraNear'] = c0['camera']['near'], c1['shadowCameraFar'] = c0['camera']['far']), bg['pointShadowMap'][bO] = bY, bg['pointShadowMatrix'][bO] = bU['shadow']['matrix'], bg['point'][bO] = c1, bO++;
          else if (bU['isHemisphereLight']) {
            var c1;
            (c1 = bf['get'](bU))['direction']['setFromMatrixPosition'](bU['matrixWorld']), c1['direction']['transformDirection'](bS), c1['direction']['normalize'](), c1['skyColor']['copy'](bU['color'])['multiplyScalar'](bW), c1['groundColor']['copy'](bU['groundColor'])['multiplyScalar'](bW), bg['hemi'][bR] = c1, bR++;
          }
        }
        bg['ambient'][0x0] = bJ, bg['ambient'][0x1] = bK, bg['ambient'][0x2] = bL, bg['directional']['length'] = bN, bg['spot']['length'] = bP, bg['rectArea']['length'] = bQ, bg['point']['length'] = bO, bg['hemi']['length'] = bR, bg['hash']['stateID'] = bg['id'], bg['hash']['directionalLength'] = bN, bg['hash']['pointLength'] = bO, bg['hash']['spotLength'] = bP, bg['hash']['rectAreaLength'] = bQ, bg['hash']['hemiLength'] = bR, bg['hash']['shadowsLength'] = bH['length'];
      },
      'state': bg
    };
  }

  function ZG() {
    var bf = new Zd(),
      bg = [],
      bh = [];
    return {
      'init': function() {
        bg['length'] = 0x0, bh['length'] = 0x0;
      },
      'state': {
        'lightsArray': bg,
        'shadowsArray': bh,
        'lights': bf
      },
      'setupLights': function(bi) {
        bf['setup'](bg, bh, bi);
      },
      'pushLight': function(bf) {
        bg['push'](bf);
      },
      'pushShadow': function(bf) {
        bh['push'](bf);
      }
    };
  }

  function ZN() {
    var bf = {};

    function bg(bh) {
      var bi = bh['target'];
      bi['removeEventListener']('dispose', bg), delete bf[bi['id']];
    }
    return {
      'get': function(bh, bi) {
        var bF;
        return void 0x0 === bf[bh['id']] ? (bF = new ZG(), bf[bh['id']] = {}, bf[bh['id']][bi['id']] = bF, bh['addEventListener']('dispose', bg)) : void 0x0 === bf[bh['id']][bi['id']] ? (bF = new ZG(), bf[bh['id']][bi['id']] = bF) : bF = bf[bh['id']][bi['id']], bF;
      },
      'dispose': function() {
        bf = {};
      }
    };
  }

  function ZV(bf) {
    Kf['call'](this), this['type'] = 'MeshDepthMaterial', this['depthPacking'] = dY, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['map'] = null, this['alphaMap'] = null, this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['fog'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
  }

  function ZX(bf) {
    Kf['call'](this), this['type'] = 'MeshDistanceMaterial', this['referencePosition'] = new eK(), this['nearDistance'] = 0x1, this['farDistance'] = 0x3e8, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['map'] = null, this['alphaMap'] = null, this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['fog'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
  }

  function ZZ(bf, bg, bh) {
    for (var bi = new mK(), bF = new mR(), bG = new eC(), bH = new eC(bh, bh), bI = new eK(), bJ = new eK(), bK = 0x1, bL = 0x2, bM = 0x1 + (bK | bL), bN = new Array(bM), bO = new Array(bM), bP = {}, bQ = {
        0: bU,
        1: bT,
        2: bV
      }, bS = [new eK(0x1, 0x0, 0x0), new eK(-0x1, 0x0, 0x0), new eK(0x0, 0x0, 0x1), new eK(0x0, 0x0, -0x1), new eK(0x0, 0x1, 0x0), new eK(0x0, -0x1, 0x0)], bW = [new eK(0x0, 0x1, 0x0), new eK(0x0, 0x1, 0x0), new eK(0x0, 0x1, 0x0), new eK(0x0, 0x1, 0x0), new eK(0x0, 0x0, 0x1), new eK(0x0, 0x0, -0x1)], bX = [new m7(), new m7(), new m7(), new m7(), new m7(), new m7()], bY = 0x0; bY !== bM; ++bY) {
      var bZ = 0x0 != (bY & bK),
        c0 = 0x0 != (bY & bL),
        c2 = new ZV({
          'depthPacking': dZ,
          'morphTargets': bZ,
          'skinning': c0
        });
      bN[bY] = c2;
      var c3 = new ZX({
        'morphTargets': bZ,
        'skinning': c0
      });
      bO[bY] = c3;
    }
    var c4 = this;

    function c5(bg, bh, bi, bF, bG, bH) {
      var bI = bg['geometry'],
        bJ = null,
        bM = bN,
        bR = bg['customDepthMaterial'];
      if (bi && (bM = bO, bR = bg['customDistanceMaterial']), bR) bJ = bR;
      else {
        var bS = !0x1;
        bh['morphTargets'] && (bI && bI['isBufferGeometry'] ? bS = bI['morphAttributes'] && bI['morphAttributes']['position'] && bI['morphAttributes']['position']['length'] > 0x0 : bI && bI['isGeometry'] && (bS = bI['morphTargets'] && bI['morphTargets']['length'] > 0x0)), bg['isSkinnedMesh'] && !0x1 === bh['skinning'] && console['warn']('THREE.WebGLShadowMap:\x20THREE.SkinnedMesh\x20with\x20material.skinning\x20set\x20to\x20false:', bg);
        var bT = bg['isSkinnedMesh'] && bh['skinning'],
          bU = 0x0;
        bS && (bU |= bK), bT && (bU |= bL), bJ = bM[bU];
      }
      if (bf['localClippingEnabled'] && !0x0 === bh['clipShadows'] && 0x0 !== bh['clippingPlanes']['length']) {
        var bV = bJ['uuid'],
          bW = bh['uuid'],
          bX = bP[bV];
        void 0x0 === bX && (bX = {}, bP[bV] = bX);
        var bY = bX[bW];
        void 0x0 === bY && (bY = bJ['clone'](), bX[bW] = bY), bJ = bY;
      }
      return bJ['visible'] = bh['visible'], bJ['wireframe'] = bh['wireframe'], bJ['side'] = null != bh['shadowSide'] ? bh['shadowSide'] : bQ[bh['side']], bJ['clipShadows'] = bh['clipShadows'], bJ['clippingPlanes'] = bh['clippingPlanes'], bJ['clipIntersection'] = bh['clipIntersection'], bJ['wireframeLinewidth'] = bh['wireframeLinewidth'], bJ['linewidth'] = bh['linewidth'], bi && bJ['isMeshDistanceMaterial'] && (bJ['referencePosition']['copy'](bF), bJ['nearDistance'] = bG, bJ['farDistance'] = bH), bJ;
    }

    function c6(bh, bF, bG, bH) {
      if (!0x1 !== bh['visible']) {
        if (bh['layers']['test'](bF['layers']) && (bh['isMesh'] || bh['isLine'] || bh['isPoints']) && bh['castShadow'] && (!bh['frustumCulled'] || bi['intersectsObject'](bh))) {
          bh['modelViewMatrix']['multiplyMatrices'](bG['matrixWorldInverse'], bh['matrixWorld']);
          var bI = bg['update'](bh),
            bK = bh['material'];
          if (Array['isArray'](bK))
            for (var bL = bI['groups'], bM = 0x0, bN = bL['length']; bM < bN; bM++) {
              var bO = bL[bM],
                bP = bK[bO['materialIndex']];
              if (bP && bP['visible']) {
                var bQ = c5(bh, bP, bH, bJ, bG['near'], bG['far']);
                bf['renderBufferDirect'](bG, null, bI, bQ, bh, bO);
              }
            } else if (bK['visible']) {
              bQ = c5(bh, bK, bH, bJ, bG['near'], bG['far']);
              bf['renderBufferDirect'](bG, null, bI, bQ, bh, null);
            }
        }
        for (var bR = bh['children'], bS = 0x0, bT = bR['length']; bS < bT; bS++) c6(bR[bS], bF, bG, bH);
      }
    }
    this['enabled'] = !0x1, this['autoUpdate'] = !0x0, this['needsUpdate'] = !0x1, this['type'] = bR, this['render'] = function(bg, bh, bK) {
      if (!0x1 !== c4['enabled'] && (!0x1 !== c4['autoUpdate'] || !0x1 !== c4['needsUpdate']) && 0x0 !== bg['length']) {
        var bL, bM = bf['getRenderTarget'](),
          bN = bf['getActiveCubeFace'](),
          bO = bf['getActiveMipMapLevel'](),
          bP = bf['state'];
        bP['setBlending'](c1), bP['buffers']['color']['setClear'](0x1, 0x1, 0x1, 0x1), bP['buffers']['depth']['setTest'](!0x0), bP['setScissorTest'](!0x1);
        for (var bQ = 0x0, bR = bg['length']; bQ < bR; bQ++) {
          var bT = bg[bQ],
            bU = bT['shadow'],
            bV = bT && bT['isPointLight'];
          if (void 0x0 !== bU) {
            var bY = bU['camera'];
            if (bG['copy'](bU['mapSize']), bG['min'](bH), bV) {
              var bZ = bG['x'],
                c0 = bG['y'];
              bX[0x0]['set'](0x2 * bZ, c0, bZ, c0), bX[0x1]['set'](0x0, c0, bZ, c0), bX[0x2]['set'](0x3 * bZ, c0, bZ, c0), bX[0x3]['set'](bZ, c0, bZ, c0), bX[0x4]['set'](0x3 * bZ, 0x0, bZ, c0), bX[0x5]['set'](bZ, 0x0, bZ, c0), bG['x'] *= 0x4, bG['y'] *= 0x2;
            }
            if (null === bU['map']) {
              var c2 = {
                'minFilter': cP,
                'magFilter': cP,
                'format': d9
              };
              bU['map'] = new mc(bG['x'], bG['y'], c2), bU['map']['texture']['name'] = bT['name'] + '.shadowMap', bY['updateProjectionMatrix']();
            }
            bU['isSpotLightShadow'] && bU['update'](bT);
            var c3 = bU['map'],
              c5 = bU['matrix'];
            bJ['setFromMatrixPosition'](bT['matrixWorld']), bY['position']['copy'](bJ), bV ? (bL = 0x6, c5['makeTranslation'](-bJ['x'], -bJ['y'], -bJ['z'])) : (bL = 0x1, bI['setFromMatrixPosition'](bT['target']['matrixWorld']), bY['lookAt'](bI), bY['updateMatrixWorld'](), c5['set'](0.5, 0x0, 0x0, 0.5, 0x0, 0.5, 0x0, 0.5, 0x0, 0x0, 0.5, 0.5, 0x0, 0x0, 0x0, 0x1), c5['multiply'](bY['projectionMatrix']), c5['multiply'](bY['matrixWorldInverse'])), bf['setRenderTarget'](c3), bf['clear']();
            for (var c7 = 0x0; c7 < bL; c7++) {
              if (bV) {
                bI['copy'](bY['position']), bI['add'](bS[c7]), bY['up']['copy'](bW[c7]), bY['lookAt'](bI), bY['updateMatrixWorld']();
                var c8 = bX[c7];
                bP['viewport'](c8);
              }
              bF['multiplyMatrices'](bY['projectionMatrix'], bY['matrixWorldInverse']), bi['setFromMatrix'](bF), c6(bh, bK, bY, bV);
            }
          } else console['warn']('THREE.WebGLShadowMap:', bT, 'has\x20no\x20shadow.');
        }
        c4['needsUpdate'] = !0x1, bf['setRenderTarget'](bM, bN, bO);
      }
    };
  }

  function a1i(bf, bg, bh, bi) {
    var bF = new function() {
        var bg = !0x1,
          bh = new m7(),
          bi = null,
          bF = new m7(0x0, 0x0, 0x0, 0x0);
        return {
          'setMask': function(bh) {
            bi === bh || bg || (bf['colorMask'](bh, bh, bh, bh), bi = bh);
          },
          'setLocked': function(bf) {
            bg = bf;
          },
          'setClear': function(bg, bi, bG, bH, bI) {
            !0x0 === bI && (bg *= bH, bi *= bH, bG *= bH), bh['set'](bg, bi, bG, bH), !0x1 === bF['equals'](bh) && (bf['clearColor'](bg, bi, bG, bH), bF['copy'](bh));
          },
          'reset': function() {
            bg = !0x1, bi = null, bF['set'](-0x1, 0x0, 0x0, 0x0);
          }
        };
      }(),
      bG = new function() {
        var bg = !0x1,
          bh = null,
          bi = null,
          bF = null;
        return {
          'setTest': function(bf) {
            bf ? cy(0xb71) : cz(0xb71);
          },
          'setMask': function(bi) {
            bh === bi || bg || (bf['depthMask'](bi), bh = bi);
          },
          'setFunc': function(bg) {
            if (bi !== bg) {
              if (bg) switch (bg) {
                case cn:
                  bf['depthFunc'](0x200);
                  break;
                case co:
                  bf['depthFunc'](0x207);
                  break;
                case cp:
                  bf['depthFunc'](0x201);
                  break;
                case cq:
                  bf['depthFunc'](0x203);
                  break;
                case cr:
                  bf['depthFunc'](0x202);
                  break;
                case cs:
                  bf['depthFunc'](0x206);
                  break;
                case ct:
                  bf['depthFunc'](0x204);
                  break;
                case cu:
                  bf['depthFunc'](0x205);
                  break;
                default:
                  bf['depthFunc'](0x203);
              } else bf['depthFunc'](0x203);
              bi = bg;
            }
          },
          'setLocked': function(bf) {
            bg = bf;
          },
          'setClear': function(bg) {
            bF !== bg && (bf['clearDepth'](bg), bF = bg);
          },
          'reset': function() {
            bg = !0x1, bh = null, bi = null, bF = null;
          }
        };
      }(),
      bH = new function() {
        var bg = !0x1,
          bh = null,
          bi = null,
          bF = null,
          bG = null,
          bH = null,
          bI = null,
          bJ = null,
          bK = null;
        return {
          'setTest': function(bf) {
            bf ? cy(0xb90) : cz(0xb90);
          },
          'setMask': function(bi) {
            bh === bi || bg || (bf['stencilMask'](bi), bh = bi);
          },
          'setFunc': function(bg, bh, bH) {
            bi === bg && bF === bh && bG === bH || (bf['stencilFunc'](bg, bh, bH), bi = bg, bF = bh, bG = bH);
          },
          'setOp': function(bg, bh, bi) {
            bH === bg && bI === bh && bJ === bi || (bf['stencilOp'](bg, bh, bi), bH = bg, bI = bh, bJ = bi);
          },
          'setLocked': function(bf) {
            bg = bf;
          },
          'setClear': function(bg) {
            bK !== bg && (bf['clearStencil'](bg), bK = bg);
          },
          'reset': function() {
            bg = !0x1, bh = null, bi = null, bF = null, bG = null, bH = null, bI = null, bJ = null, bK = null;
          }
        };
      }(),
      bI = bf['getParameter'](0x8869),
      bJ = new Uint8Array(bI),
      bN = new Uint8Array(bI),
      bO = new Uint8Array(bI),
      bP = {},
      bQ = null,
      bR = null,
      bS = null,
      bT = null,
      bW = null,
      bX = null,
      bY = null,
      bZ = null,
      c0 = null,
      c8 = null,
      c9 = !0x1,
      ca = null,
      cb = null,
      cc = null,
      cd = null,
      ce = null,
      cf = bf['getParameter'](0x8b4d),
      cg = !0x1,
      ch = 0x0,
      ci = bf['getParameter'](0x1f02); - 0x1 !== ci['indexOf']('WebGL') ? (ch = parseFloat(/^WebGL\ ([0-9])/ ['exec'](ci)[0x1]), cg = ch >= 0x1) : -0x1 !== ci['indexOf']('OpenGL\x20ES') && (ch = parseFloat(/^OpenGL\ ES\ ([0-9])/ ['exec'](ci)[0x1]), cg = ch >= 0x2);
    var cj = null,
      ck = {},
      cl = new m7(),
      cm = new m7();

    function cv(bg, bh, bi) {
      var bF = new Uint8Array(0x4),
        bG = bf['createTexture']();
      bf['bindTexture'](bg, bG), bf['texParameteri'](bg, 0x2801, 0x2600), bf['texParameteri'](bg, 0x2800, 0x2600);
      for (var bH = 0x0; bH < bi; bH++) bf['texImage2D'](bh + bH, 0x0, 0x1908, 0x1, 0x1, 0x0, 0x1908, 0x1401, bF);
      return bG;
    }
    var cw = {};

    function cx(bh, bF) {
      (bJ[bh] = 0x1, 0x0 === bN[bh] && (bf['enableVertexAttribArray'](bh), bN[bh] = 0x1), bO[bh] !== bF) && ((bi['isWebGL2'] ? bf : bg['get']('ANGLE_instanced_arrays'))[bi['isWebGL2'] ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](bh, bF), bO[bh] = bF);
    }

    function cy(bg) {
      !0x0 !== bP[bg] && (bf['enable'](bg), bP[bg] = !0x0);
    }

    function cz(bg) {
      !0x1 !== bP[bg] && (bf['disable'](bg), bP[bg] = !0x1);
    }

    function cA(bg, bi, bF, bG, bH, bI, bJ, bK) {
      if (bg !== c1) {
        if (bS || (cy(0xbe2), bS = !0x0), bg === c6) bH = bH || bi, bI = bI || bF, bJ = bJ || bG, bi === bW && bH === bZ || (bf['blendEquationSeparate'](bh['convert'](bi), bh['convert'](bH)), bW = bi, bZ = bH), bF === bX && bG === bY && bI === c0 && bJ === c8 || (bf['blendFuncSeparate'](bh['convert'](bF), bh['convert'](bG), bh['convert'](bI), bh['convert'](bJ)), bX = bF, bY = bG, c0 = bI, c8 = bJ), bT = bg, c9 = null;
        else if (bg !== bT || bK !== c9) {
          if (bW === c7 && bZ === c7 || (bf['blendEquation'](0x8006), bW = c7, bZ = c7), bK) switch (bg) {
            case c2:
              bf['blendFuncSeparate'](0x1, 0x303, 0x1, 0x303);
              break;
            case c3:
              bf['blendFunc'](0x1, 0x1);
              break;
            case c4:
              bf['blendFuncSeparate'](0x0, 0x0, 0x301, 0x303);
              break;
            case c5:
              bf['blendFuncSeparate'](0x0, 0x300, 0x0, 0x302);
              break;
            default:
              console['error']('THREE.WebGLState:\x20Invalid\x20blending:\x20', bg);
          } else switch (bg) {
            case c2:
              bf['blendFuncSeparate'](0x302, 0x303, 0x1, 0x303);
              break;
            case c3:
              bf['blendFunc'](0x302, 0x1);
              break;
            case c4:
              bf['blendFunc'](0x0, 0x301);
              break;
            case c5:
              bf['blendFunc'](0x0, 0x300);
              break;
            default:
              console['error']('THREE.WebGLState:\x20Invalid\x20blending:\x20', bg);
          }
          bX = null, bY = null, c0 = null, c8 = null, bT = bg, c9 = bK;
        }
      } else bS && (cz(0xbe2), bS = !0x1);
    }

    function cB(bg) {
      ca !== bg && (bg ? bf['frontFace'](0x900) : bf['frontFace'](0x901), ca = bg);
    }

    function cC(bg) {
      bg !== bK ? (cy(0xb44), bg !== cb && (bg === bL ? bf['cullFace'](0x405) : bg === bM ? bf['cullFace'](0x404) : bf['cullFace'](0x408))) : cz(0xb44), cb = bg;
    }

    function cD(bg, bh, bi) {
      bg ? (cy(0x8037), cd === bh && ce === bi || (bf['polygonOffset'](bh, bi), cd = bh, ce = bi)) : cz(0x8037);
    }

    function cE(bg) {
      void 0x0 === bg && (bg = 0x84c0 + cf - 0x1), cj !== bg && (bf['activeTexture'](bg), cj = bg);
    }
    return cw[0xde1] = cv(0xde1, 0xde1, 0x1), cw[0x8513] = cv(0x8513, 0x8515, 0x6), bF['setClear'](0x0, 0x0, 0x0, 0x1), bG['setClear'](0x1), bH['setClear'](0x0), cy(0xb71), bG['setFunc'](cq), cB(!0x1), cC(bL), cy(0xb44), cA(c1), {
      'buffers': {
        'color': bF,
        'depth': bG,
        'stencil': bH
      },
      'initAttributes': function() {
        for (var bf = 0x0, bg = bJ['length']; bf < bg; bf++) bJ[bf] = 0x0;
      },
      'enableAttribute': function(bf) {
        cx(bf, 0x0);
      },
      'enableAttributeAndDivisor': cx,
      'disableUnusedAttributes': function() {
        for (var bg = 0x0, bh = bN['length']; bg !== bh; ++bg) bN[bg] !== bJ[bg] && (bf['disableVertexAttribArray'](bg), bN[bg] = 0x0);
      },
      'enable': cy,
      'disable': cz,
      'getCompressedTextureFormats': function() {
        if (null === bQ && (bQ = [], bg['get']('WEBGL_compressed_texture_pvrtc') || bg['get']('WEBGL_compressed_texture_s3tc') || bg['get']('WEBGL_compressed_texture_etc1') || bg['get']('WEBGL_compressed_texture_astc')))
          for (var bh = bf['getParameter'](0x86a3), bi = 0x0; bi < bh['length']; bi++) bQ['push'](bh[bi]);
        return bQ;
      },
      'useProgram': function(bg) {
        return bR !== bg && (bf['useProgram'](bg), bR = bg, !0x0);
      },
      'setBlending': cA,
      'setMaterial': function(bf, bg) {
        bf['side'] === bV ? cz(0xb44) : cy(0xb44);
        var bh = bf['side'] === bU;
        bg && (bh = !bh), cB(bh), bf['blending'] === c2 && !0x1 === bf['transparent'] ? cA(c1) : cA(bf['blending'], bf['blendEquation'], bf['blendSrc'], bf['blendDst'], bf['blendEquationAlpha'], bf['blendSrcAlpha'], bf['blendDstAlpha'], bf['premultipliedAlpha']), bG['setFunc'](bf['depthFunc']), bG['setTest'](bf['depthTest']), bG['setMask'](bf['depthWrite']), bF['setMask'](bf['colorWrite']), cD(bf['polygonOffset'], bf['polygonOffsetFactor'], bf['polygonOffsetUnits']);
      },
      'setFlipSided': cB,
      'setCullFace': cC,
      'setLineWidth': function(bg) {
        bg !== cc && (cg && bf['lineWidth'](bg), cc = bg);
      },
      'setPolygonOffset': cD,
      'setScissorTest': function(bf) {
        bf ? cy(0xc11) : cz(0xc11);
      },
      'activeTexture': cE,
      'bindTexture': function(bg, bh) {
        null === cj && cE();
        var bi = ck[cj];
        void 0x0 === bi && (bi = {
          'type': void 0x0,
          'texture': void 0x0
        }, ck[cj] = bi), bi['type'] === bg && bi['texture'] === bh || (bf['bindTexture'](bg, bh || cw[bg]), bi['type'] = bg, bi['texture'] = bh);
      },
      'compressedTexImage2D': function() {
        try {
          bf['compressedTexImage2D']['apply'](bf, arguments);
        } catch (a3k) {
          console['error']('THREE.WebGLState:', a3k);
        }
      },
      'texImage2D': function() {
        try {
          bf['texImage2D']['apply'](bf, arguments);
        } catch (a3l) {
          console['error']('THREE.WebGLState:', a3l);
        }
      },
      'texImage3D': function() {
        try {
          bf['texImage3D']['apply'](bf, arguments);
        } catch (a3m) {
          console['error']('THREE.WebGLState:', a3m);
        }
      },
      'scissor': function(bg) {
        !0x1 === cl['equals'](bg) && (bf['scissor'](bg['x'], bg['y'], bg['z'], bg['w']), cl['copy'](bg));
      },
      'viewport': function(bg) {
        !0x1 === cm['equals'](bg) && (bf['viewport'](bg['x'], bg['y'], bg['z'], bg['w']), cm['copy'](bg));
      },
      'reset': function() {
        for (var bg = 0x0; bg < bN['length']; bg++) 0x1 === bN[bg] && (bf['disableVertexAttribArray'](bg), bN[bg] = 0x0);
        bP = {}, bQ = null, cj = null, ck = {}, bR = null, bT = null, ca = null, cb = null, bF['reset'](), bG['reset'](), bH['reset']();
      }
    };
  }

  function a3q(bf, bg, bh, bi, bF, bG, bH) {
    var bI, bJ = {},
      bK = 'undefined' != typeof OffscreenCanvas;

    function bL(bf, bg) {
      return bK ? new OffscreenCanvas(bf, bg) : document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas');
    }

    function bM(bf, bg, bh, bi) {
      var bF = 0x1;
      if ((bf['width'] > bi || bf['height'] > bi) && (bF = bi / Math['max'](bf['width'], bf['height'])), bF < 0x1 || !0x0 === bg) {
        if ('undefined' != typeof HTMLImageElement && bf instanceof HTMLImageElement || 'undefined' != typeof HTMLCanvasElement && bf instanceof HTMLCanvasElement || 'undefined' != typeof ImageBitmap && bf instanceof ImageBitmap) {
          var bG = bg ? e2['floorPowerOfTwo'] : Math['floor'],
            bH = bG(bF * bf['width']),
            bJ = bG(bF * bf['height']);
          void 0x0 === bI && (bI = bL(bH, bJ));
          var bK = bh ? bL(bH, bJ) : bI;
          return bK['width'] = bH, bK['height'] = bJ, bK['getContext']('2d')['drawImage'](bf, 0x0, 0x0, bH, bJ), console['warn']('THREE.WebGLRenderer:\x20Texture\x20has\x20been\x20resized\x20from\x20(' + bf['width'] + 'x' + bf['height'] + ')\x20to\x20(' + bH + 'x' + bJ + ').'), bK;
        }
        return 'data' in bf && console['warn']('THREE.WebGLRenderer:\x20Image\x20in\x20DataTexture\x20is\x20too\x20big\x20(' + bf['width'] + 'x' + bf['height'] + ').'), bf;
      }
      return bf;
    }

    function bN(bf) {
      return e2['isPowerOfTwo'](bf['width']) && e2['isPowerOfTwo'](bf['height']);
    }

    function bO(bf, bg) {
      return bf['generateMipmaps'] && bg && bf['minFilter'] !== cP && bf['minFilter'] !== cS;
    }

    function bP(bg, bh, bF, bG) {
      bf['generateMipmap'](bg), bi['get'](bh)['__maxMipLevel'] = Math['log'](Math['max'](bF, bG)) * Math['LOG2E'];
    }

    function bQ(bf, bh) {
      if (!bF['isWebGL2']) return bf;
      var bi = bf;
      return 0x1903 === bf && (0x1406 === bh && (bi = 0x822e), 0x140b === bh && (bi = 0x822d), 0x1401 === bh && (bi = 0x8229)), 0x1907 === bf && (0x1406 === bh && (bi = 0x8815), 0x140b === bh && (bi = 0x881b), 0x1401 === bh && (bi = 0x8051)), 0x1908 === bf && (0x1406 === bh && (bi = 0x8814), 0x140b === bh && (bi = 0x881a), 0x1401 === bh && (bi = 0x8058)), 0x822d === bi || 0x822e === bi || 0x881a === bi || 0x8814 === bi ? bg['get']('EXT_color_buffer_float') : 0x881b !== bi && 0x8815 !== bi || console['warn']('THREE.WebGLRenderer:\x20Floating\x20point\x20textures\x20with\x20RGB\x20format\x20not\x20supported.\x20Please\x20use\x20RGBA\x20instead.'), bi;
    }

    function bR(bf) {
      return bf === cP || bf === cQ || bf === cR ? 0x2600 : 0x2601;
    }

    function bS(bg) {
      var bh = bg['target'];
      bh['removeEventListener']('dispose', bS),
        function(bg) {
          var bh = bi['get'](bg);
          if (void 0x0 === bh['__webglInit']) return;
          bf['deleteTexture'](bh['__webglTexture']), bi['remove'](bg);
        }(bh), bh['isVideoTexture'] && delete bJ[bh['id']], bH['memory']['textures']--;
    }

    function bT(bg) {
      var bh = bg['target'];
      bh['removeEventListener']('dispose', bT),
        function(bg) {
          var bh = bi['get'](bg),
            bF = bi['get'](bg['texture']);
          if (!bg) return;
          void 0x0 !== bF['__webglTexture'] && bf['deleteTexture'](bF['__webglTexture']);
          bg['depthTexture'] && bg['depthTexture']['dispose']();
          if (bg['isWebGLRenderTargetCube'])
            for (var bG = 0x0; bG < 0x6; bG++) bf['deleteFramebuffer'](bh['__webglFramebuffer'][bG]), bh['__webglDepthbuffer'] && bf['deleteRenderbuffer'](bh['__webglDepthbuffer'][bG]);
          else bf['deleteFramebuffer'](bh['__webglFramebuffer']), bh['__webglDepthbuffer'] && bf['deleteRenderbuffer'](bh['__webglDepthbuffer']);
          bi['remove'](bg['texture']), bi['remove'](bg);
        }(bh), bH['memory']['textures']--;
    }
    var bU = 0x0;

    function bV(bf, bg) {
      var bF = bi['get'](bf);
      if (bf['isVideoTexture'] && function(bf) {
          var bg = bf['id'],
            bh = bH['render']['frame'];
          bJ[bg] !== bh && (bJ[bg] = bh, bf['update']());
        }(bf), bf['version'] > 0x0 && bF['__version'] !== bf['version']) {
        var bG = bf['image'];
        if (void 0x0 === bG) console['warn']('THREE.WebGLRenderer:\x20Texture\x20marked\x20for\x20update\x20but\x20image\x20is\x20undefined');
        else {
          if (!0x1 !== bG['complete']) return void c0(bF, bf, bg);
          console['warn']('THREE.WebGLRenderer:\x20Texture\x20marked\x20for\x20update\x20but\x20image\x20is\x20incomplete');
        }
      }
      bh['activeTexture'](0x84c0 + bg), bh['bindTexture'](0xde1, bF['__webglTexture']);
    }

    function bW(bg, bH) {
      var bI = bi['get'](bg);
      if (0x6 === bg['image']['length'])
        if (bg['version'] > 0x0 && bI['__version'] !== bg['version']) {
          bZ(bI, bg), bh['activeTexture'](0x84c0 + bH), bh['bindTexture'](0x8513, bI['__webglTexture']), bf['pixelStorei'](0x9240, bg['flipY']);
          for (var bJ = bg && bg['isCompressedTexture'], bK = bg['image'][0x0] && bg['image'][0x0]['isDataTexture'], bL = [], bR = 0x0; bR < 0x6; bR++) bL[bR] = bJ || bK ? bK ? bg['image'][bR]['image'] : bg['image'][bR] : bM(bg['image'][bR], !0x1, !0x0, bF['maxCubemapSize']);
          var bS = bL[0x0],
            bT = bN(bS) || bF['isWebGL2'],
            bU = bG['convert'](bg['format']),
            bV = bG['convert'](bg['type']),
            bW = bQ(bU, bV);
          bY(0x8513, bg, bT);
          for (bR = 0x0; bR < 0x6; bR++)
            if (bJ)
              for (var bX, c0 = bL[bR]['mipmaps'], c1 = 0x0, c2 = c0['length']; c1 < c2; c1++) bX = c0[c1], bg['format'] !== d9 && bg['format'] !== d8 ? bh['getCompressedTextureFormats']()['indexOf'](bU) > -0x1 ? bh['compressedTexImage2D'](0x8515 + bR, c1, bW, bX['width'], bX['height'], 0x0, bX['data']) : console['warn']('THREE.WebGLRenderer:\x20Attempt\x20to\x20load\x20unsupported\x20compressed\x20texture\x20format\x20in\x20.setTextureCube()') : bh['texImage2D'](0x8515 + bR, c1, bW, bX['width'], bX['height'], 0x0, bU, bV, bX['data']);
            else bK ? bh['texImage2D'](0x8515 + bR, 0x0, bW, bL[bR]['width'], bL[bR]['height'], 0x0, bU, bV, bL[bR]['data']) : bh['texImage2D'](0x8515 + bR, 0x0, bW, bU, bV, bL[bR]);
          bI['__maxMipLevel'] = bJ ? c0['length'] - 0x1 : 0x0, bO(bg, bT) && bP(0x8513, bg, bS['width'], bS['height']), bI['__version'] = bg['version'], bg['onUpdate'] && bg['onUpdate'](bg);
        } else bh['activeTexture'](0x84c0 + bH), bh['bindTexture'](0x8513, bI['__webglTexture']);
    }

    function bX(bf, bg) {
      bh['activeTexture'](0x84c0 + bg), bh['bindTexture'](0x8513, bi['get'](bf)['__webglTexture']);
    }

    function bY(bh, bH, bI) {
      var bJ;
      if (bI ? (bf['texParameteri'](bh, 0x2802, bG['convert'](bH['wrapS'])), bf['texParameteri'](bh, 0x2803, bG['convert'](bH['wrapT'])), 0x806f !== bh && 0x8c1a !== bh || bf['texParameteri'](bh, 0x8072, bG['convert'](bH['wrapR'])), bf['texParameteri'](bh, 0x2800, bG['convert'](bH['magFilter'])), bf['texParameteri'](bh, 0x2801, bG['convert'](bH['minFilter']))) : (bf['texParameteri'](bh, 0x2802, 0x812f), bf['texParameteri'](bh, 0x2803, 0x812f), 0x806f !== bh && 0x8c1a !== bh || bf['texParameteri'](bh, 0x8072, 0x812f), bH['wrapS'] === cN && bH['wrapT'] === cN || console['warn']('THREE.WebGLRenderer:\x20Texture\x20is\x20not\x20power\x20of\x20two.\x20Texture.wrapS\x20and\x20Texture.wrapT\x20should\x20be\x20set\x20to\x20THREE.ClampToEdgeWrapping.'), bf['texParameteri'](bh, 0x2800, bR(bH['magFilter'])), bf['texParameteri'](bh, 0x2801, bR(bH['minFilter'])), bH['minFilter'] !== cP && bH['minFilter'] !== cS && console['warn']('THREE.WebGLRenderer:\x20Texture\x20is\x20not\x20power\x20of\x20two.\x20Texture.minFilter\x20should\x20be\x20set\x20to\x20THREE.NearestFilter\x20or\x20THREE.LinearFilter.')), bJ = bg['get']('EXT_texture_filter_anisotropic')) {
        if (bH['type'] === d1 && null === bg['get']('OES_texture_float_linear')) return;
        if (bH['type'] === d2 && null === (bF['isWebGL2'] || bg['get']('OES_texture_half_float_linear'))) return;
        (bH['anisotropy'] > 0x1 || bi['get'](bH)['__currentAnisotropy']) && (bf['texParameterf'](bh, bJ['TEXTURE_MAX_ANISOTROPY_EXT'], Math['min'](bH['anisotropy'], bF['getMaxAnisotropy']())), bi['get'](bH)['__currentAnisotropy'] = bH['anisotropy']);
      }
    }

    function bZ(bg, bh) {
      void 0x0 === bg['__webglInit'] && (bg['__webglInit'] = !0x0, bh['addEventListener']('dispose', bS), bg['__webglTexture'] = bf['createTexture'](), bH['memory']['textures']++);
    }

    function c0(bg, bi, bH) {
      var bI = 0xde1;
      bi['isDataTexture2DArray'] && (bI = 0x8c1a), bi['isDataTexture3D'] && (bI = 0x806f), bZ(bg, bi), bh['activeTexture'](0x84c0 + bH), bh['bindTexture'](bI, bg['__webglTexture']), bf['pixelStorei'](0x9240, bi['flipY']), bf['pixelStorei'](0x9241, bi['premultiplyAlpha']), bf['pixelStorei'](0xcf5, bi['unpackAlignment']);
      var bJ = function(bf) {
          return !bF['isWebGL2'] && (bf['wrapS'] !== cN || bf['wrapT'] !== cN || bf['minFilter'] !== cP && bf['minFilter'] !== cS);
        }(bi) && !0x1 === bN(bi['image']),
        bK = bM(bi['image'], bJ, !0x1, bF['maxTextureSize']),
        bL = bN(bK) || bF['isWebGL2'],
        bR = bG['convert'](bi['format']),
        bS = bG['convert'](bi['type']),
        bT = bQ(bR, bS);
      bY(bI, bi, bL);
      var bU, bV = bi['mipmaps'];
      if (bi['isDepthTexture']) {
        if (bT = 0x1902, bi['type'] === d1) {
          if (!bF['isWebGL2']) throw new Error('Float\x20Depth\x20Texture\x20only\x20supported\x20in\x20WebGL2.0');
          bT = 0x8cac;
        } else bF['isWebGL2'] && (bT = 0x81a5);
        bi['format'] === dd && 0x1902 === bT && bi['type'] !== cY && bi['type'] !== d0 && (console['warn']('THREE.WebGLRenderer:\x20Use\x20UnsignedShortType\x20or\x20UnsignedIntType\x20for\x20DepthFormat\x20DepthTexture.'), bi['type'] = cY, bS = bG['convert'](bi['type'])), bi['format'] === de && (bT = 0x84f9, bi['type'] !== d6 && (console['warn']('THREE.WebGLRenderer:\x20Use\x20UnsignedInt248Type\x20for\x20DepthStencilFormat\x20DepthTexture.'), bi['type'] = d6, bS = bG['convert'](bi['type']))), bh['texImage2D'](0xde1, 0x0, bT, bK['width'], bK['height'], 0x0, bR, bS, null);
      } else if (bi['isDataTexture'])
        if (bV['length'] > 0x0 && bL) {
          for (var bW = 0x0, bX = bV['length']; bW < bX; bW++) bU = bV[bW], bh['texImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bR, bS, bU['data']);
          bi['generateMipmaps'] = !0x1, bg['__maxMipLevel'] = bV['length'] - 0x1;
        } else bh['texImage2D'](0xde1, 0x0, bT, bK['width'], bK['height'], 0x0, bR, bS, bK['data']), bg['__maxMipLevel'] = 0x0;
      else if (bi['isCompressedTexture']) {
        for (bW = 0x0, bX = bV['length']; bW < bX; bW++) bU = bV[bW], bi['format'] !== d9 && bi['format'] !== d8 ? bh['getCompressedTextureFormats']()['indexOf'](bR) > -0x1 ? bh['compressedTexImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bU['data']) : console['warn']('THREE.WebGLRenderer:\x20Attempt\x20to\x20load\x20unsupported\x20compressed\x20texture\x20format\x20in\x20.uploadTexture()') : bh['texImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bR, bS, bU['data']);
        bg['__maxMipLevel'] = bV['length'] - 0x1;
      } else if (bi['isDataTexture2DArray']) bh['texImage3D'](0x8c1a, 0x0, bT, bK['width'], bK['height'], bK['depth'], 0x0, bR, bS, bK['data']), bg['__maxMipLevel'] = 0x0;
      else if (bi['isDataTexture3D']) bh['texImage3D'](0x806f, 0x0, bT, bK['width'], bK['height'], bK['depth'], 0x0, bR, bS, bK['data']), bg['__maxMipLevel'] = 0x0;
      else if (bV['length'] > 0x0 && bL) {
        for (bW = 0x0, bX = bV['length']; bW < bX; bW++) bU = bV[bW], bh['texImage2D'](0xde1, bW, bT, bR, bS, bU);
        bi['generateMipmaps'] = !0x1, bg['__maxMipLevel'] = bV['length'] - 0x1;
      } else bh['texImage2D'](0xde1, 0x0, bT, bR, bS, bK), bg['__maxMipLevel'] = 0x0;
      bO(bi, bL) && bP(0xde1, bi, bK['width'], bK['height']), bg['__version'] = bi['version'], bi['onUpdate'] && bi['onUpdate'](bi);
    }

    function c1(bg, bF, bH, bI) {
      var bJ = bG['convert'](bF['texture']['format']),
        bK = bG['convert'](bF['texture']['type']),
        bL = bQ(bJ, bK);
      bh['texImage2D'](bI, 0x0, bL, bF['width'], bF['height'], 0x0, bJ, bK, null), bf['bindFramebuffer'](0x8d40, bg), bf['framebufferTexture2D'](0x8d40, bH, bI, bi['get'](bF['texture'])['__webglTexture'], 0x0), bf['bindFramebuffer'](0x8d40, null);
    }

    function c2(bg, bh, bi) {
      if (bf['bindRenderbuffer'](0x8d41, bg), bh['depthBuffer'] && !bh['stencilBuffer']) {
        if (bi) {
          var bF = c4(bh);
          bf['renderbufferStorageMultisample'](0x8d41, bF, 0x81a5, bh['width'], bh['height']);
        } else bf['renderbufferStorage'](0x8d41, 0x81a5, bh['width'], bh['height']);
        bf['framebufferRenderbuffer'](0x8d40, 0x8d00, 0x8d41, bg);
      } else if (bh['depthBuffer'] && bh['stencilBuffer']) {
        if (bi) {
          bF = c4(bh);
          bf['renderbufferStorageMultisample'](0x8d41, bF, 0x84f9, bh['width'], bh['height']);
        } else bf['renderbufferStorage'](0x8d41, 0x84f9, bh['width'], bh['height']);
        bf['framebufferRenderbuffer'](0x8d40, 0x821a, 0x8d41, bg);
      } else {
        var bH = bQ(bG['convert'](bh['texture']['format']), bG['convert'](bh['texture']['type']));
        if (bi) {
          bF = c4(bh);
          bf['renderbufferStorageMultisample'](0x8d41, bF, bH, bh['width'], bh['height']);
        } else bf['renderbufferStorage'](0x8d41, bH, bh['width'], bh['height']);
      }
      bf['bindRenderbuffer'](0x8d41, null);
    }

    function c3(bg) {
      var bh = bi['get'](bg),
        bF = !0x0 === bg['isWebGLRenderTargetCube'];
      if (bg['depthTexture']) {
        if (bF) throw new Error('target.depthTexture\x20not\x20supported\x20in\x20Cube\x20render\x20targets');
        ! function(bg, bh) {
          if (bh && bh['isWebGLRenderTargetCube']) throw new Error('Depth\x20Texture\x20with\x20cube\x20render\x20targets\x20is\x20not\x20supported');
          if (bf['bindFramebuffer'](0x8d40, bg), !bh['depthTexture'] || !bh['depthTexture']['isDepthTexture']) throw new Error('renderTarget.depthTexture\x20must\x20be\x20an\x20instance\x20of\x20THREE.DepthTexture');
          bi['get'](bh['depthTexture'])['__webglTexture'] && bh['depthTexture']['image']['width'] === bh['width'] && bh['depthTexture']['image']['height'] === bh['height'] || (bh['depthTexture']['image']['width'] = bh['width'], bh['depthTexture']['image']['height'] = bh['height'], bh['depthTexture']['needsUpdate'] = !0x0), bV(bh['depthTexture'], 0x0);
          var bF = bi['get'](bh['depthTexture'])['__webglTexture'];
          if (bh['depthTexture']['format'] === dd) bf['framebufferTexture2D'](0x8d40, 0x8d00, 0xde1, bF, 0x0);
          else {
            if (bh['depthTexture']['format'] !== de) throw new Error('Unknown\x20depthTexture\x20format');
            bf['framebufferTexture2D'](0x8d40, 0x821a, 0xde1, bF, 0x0);
          }
        }(bh['__webglFramebuffer'], bg);
      } else if (bF) {
        bh['__webglDepthbuffer'] = [];
        for (var bG = 0x0; bG < 0x6; bG++) bf['bindFramebuffer'](0x8d40, bh['__webglFramebuffer'][bG]), bh['__webglDepthbuffer'][bG] = bf['createRenderbuffer'](), c2(bh['__webglDepthbuffer'][bG], bg);
      } else bf['bindFramebuffer'](0x8d40, bh['__webglFramebuffer']), bh['__webglDepthbuffer'] = bf['createRenderbuffer'](), c2(bh['__webglDepthbuffer'], bg);
      bf['bindFramebuffer'](0x8d40, null);
    }

    function c4(bf) {
      return bF['isWebGL2'] && bf['isWebGLMultisampleRenderTarget'] ? Math['min'](bF['maxSamples'], bf['samples']) : 0x0;
    }
    var c5 = !0x1,
      c6 = !0x1;
    this['allocateTextureUnit'] = function() {
      var bf = bU;
      return bf >= bF['maxTextures'] && console['warn']('THREE.WebGLTextures:\x20Trying\x20to\x20use\x20' + bf + '\x20texture\x20units\x20while\x20this\x20GPU\x20supports\x20only\x20' + bF['maxTextures']), bU += 0x1, bf;
    }, this['resetTextureUnits'] = function() {
      bU = 0x0;
    }, this['setTexture2D'] = bV, this['setTexture2DArray'] = function(bf, bg) {
      var bF = bi['get'](bf);
      bf['version'] > 0x0 && bF['__version'] !== bf['version'] ? c0(bF, bf, bg) : (bh['activeTexture'](0x84c0 + bg), bh['bindTexture'](0x8c1a, bF['__webglTexture']));
    }, this['setTexture3D'] = function(bf, bg) {
      var bF = bi['get'](bf);
      bf['version'] > 0x0 && bF['__version'] !== bf['version'] ? c0(bF, bf, bg) : (bh['activeTexture'](0x84c0 + bg), bh['bindTexture'](0x806f, bF['__webglTexture']));
    }, this['setTextureCube'] = bW, this['setTextureCubeDynamic'] = bX, this['setupRenderTarget'] = function(bg) {
      var bI = bi['get'](bg),
        bJ = bi['get'](bg['texture']);
      bg['addEventListener']('dispose', bT), bJ['__webglTexture'] = bf['createTexture'](), bH['memory']['textures']++;
      var bK = !0x0 === bg['isWebGLRenderTargetCube'],
        bL = !0x0 === bg['isWebGLMultisampleRenderTarget'],
        bM = bN(bg) || bF['isWebGL2'];
      if (bK) {
        bI['__webglFramebuffer'] = [];
        for (var bR = 0x0; bR < 0x6; bR++) bI['__webglFramebuffer'][bR] = bf['createFramebuffer']();
      } else if (bI['__webglFramebuffer'] = bf['createFramebuffer'](), bL)
        if (bF['isWebGL2']) {
          bI['__webglMultisampledFramebuffer'] = bf['createFramebuffer'](), bI['__webglColorRenderbuffer'] = bf['createRenderbuffer'](), bf['bindRenderbuffer'](0x8d41, bI['__webglColorRenderbuffer']);
          var bS = bQ(bG['convert'](bg['texture']['format']), bG['convert'](bg['texture']['type'])),
            bU = c4(bg);
          bf['renderbufferStorageMultisample'](0x8d41, bU, bS, bg['width'], bg['height']), bf['bindFramebuffer'](0x8d40, bI['__webglMultisampledFramebuffer']), bf['framebufferRenderbuffer'](0x8d40, 0x8ce0, 0x8d41, bI['__webglColorRenderbuffer']), bf['bindRenderbuffer'](0x8d41, null), bg['depthBuffer'] && (bI['__webglDepthRenderbuffer'] = bf['createRenderbuffer'](), c2(bI['__webglDepthRenderbuffer'], bg, !0x0)), bf['bindFramebuffer'](0x8d40, null);
        } else console['warn']('THREE.WebGLRenderer:\x20WebGLMultisampleRenderTarget\x20can\x20only\x20be\x20used\x20with\x20WebGL2.');
      if (bK) {
        for (bh['bindTexture'](0x8513, bJ['__webglTexture']), bY(0x8513, bg['texture'], bM), bR = 0x0; bR < 0x6; bR++) c1(bI['__webglFramebuffer'][bR], bg, 0x8ce0, 0x8515 + bR);
        bO(bg['texture'], bM) && bP(0x8513, bg['texture'], bg['width'], bg['height']), bh['bindTexture'](0x8513, null);
      } else bh['bindTexture'](0xde1, bJ['__webglTexture']), bY(0xde1, bg['texture'], bM), c1(bI['__webglFramebuffer'], bg, 0x8ce0, 0xde1), bO(bg['texture'], bM) && bP(0xde1, bg['texture'], bg['width'], bg['height']), bh['bindTexture'](0xde1, null);
      bg['depthBuffer'] && c3(bg);
    }, this['updateRenderTargetMipmap'] = function(bf) {
      var bg = bf['texture'];
      if (bO(bg, bN(bf) || bF['isWebGL2'])) {
        var bG = bf['isWebGLRenderTargetCube'] ? 0x8513 : 0xde1,
          bH = bi['get'](bg)['__webglTexture'];
        bh['bindTexture'](bG, bH), bP(bG, bg, bf['width'], bf['height']), bh['bindTexture'](bG, null);
      }
    }, this['updateMultisampleRenderTarget'] = function(bg) {
      if (bg['isWebGLMultisampleRenderTarget'])
        if (bF['isWebGL2']) {
          var bh = bi['get'](bg);
          bf['bindFramebuffer'](0x8ca8, bh['__webglMultisampledFramebuffer']), bf['bindFramebuffer'](0x8ca9, bh['__webglFramebuffer']);
          var bG = bg['width'],
            bH = bg['height'],
            bI = 0x4000;
          bg['depthBuffer'] && (bI |= 0x100), bg['stencilBuffer'] && (bI |= 0x400), bf['blitFramebuffer'](0x0, 0x0, bG, bH, 0x0, 0x0, bG, bH, bI, 0x2600);
        } else console['warn']('THREE.WebGLRenderer:\x20WebGLMultisampleRenderTarget\x20can\x20only\x20be\x20used\x20with\x20WebGL2.');
    }, this['safeSetTexture2D'] = function(bf, bg) {
      bf && bf['isWebGLRenderTarget'] && (!0x1 === c5 && (console['warn']('THREE.WebGLTextures.safeSetTexture2D:\x20don\x27t\x20use\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'), c5 = !0x0), bf = bf['texture']), bV(bf, bg);
    }, this['safeSetTextureCube'] = function(bf, bg) {
      bf && bf['isWebGLRenderTargetCube'] && (!0x1 === c6 && (console['warn']('THREE.WebGLTextures.safeSetTextureCube:\x20don\x27t\x20use\x20cube\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'), c6 = !0x0), bf = bf['texture']), bf && bf['isCubeTexture'] || Array['isArray'](bf['image']) && 0x6 === bf['image']['length'] ? bW(bf, bg) : bX(bf, bg);
    };
  }

  function a60(bf, bg, bh) {
    return {
      'convert': function(bf) {
        var bi;
        if (bf === cM) return 0x2901;
        if (bf === cN) return 0x812f;
        if (bf === cO) return 0x8370;
        if (bf === cP) return 0x2600;
        if (bf === cQ) return 0x2700;
        if (bf === cR) return 0x2702;
        if (bf === cS) return 0x2601;
        if (bf === cT) return 0x2701;
        if (bf === cU) return 0x2703;
        if (bf === cV) return 0x1401;
        if (bf === d3) return 0x8033;
        if (bf === d4) return 0x8034;
        if (bf === d5) return 0x8363;
        if (bf === cW) return 0x1400;
        if (bf === cX) return 0x1402;
        if (bf === cY) return 0x1403;
        if (bf === cZ) return 0x1404;
        if (bf === d0) return 0x1405;
        if (bf === d1) return 0x1406;
        if (bf === d2) {
          if (bh['isWebGL2']) return 0x140b;
          if (null !== (bi = bg['get']('OES_texture_half_float'))) return bi['HALF_FLOAT_OES'];
        }
        if (bf === d7) return 0x1906;
        if (bf === d8) return 0x1907;
        if (bf === d9) return 0x1908;
        if (bf === da) return 0x1909;
        if (bf === db) return 0x190a;
        if (bf === dd) return 0x1902;
        if (bf === de) return 0x84f9;
        if (bf === df) return 0x1903;
        if (bf === c7) return 0x8006;
        if (bf === c8) return 0x800a;
        if (bf === c9) return 0x800b;
        if (bf === cc) return 0x0;
        if (bf === cd) return 0x1;
        if (bf === ce) return 0x300;
        if (bf === cf) return 0x301;
        if (bf === cg) return 0x302;
        if (bf === ch) return 0x303;
        if (bf === ci) return 0x304;
        if (bf === cj) return 0x305;
        if (bf === ck) return 0x306;
        if (bf === cl) return 0x307;
        if (bf === cm) return 0x308;
        if ((bf === dg || bf === dh || bf === di || bf === dj) && null !== (bi = bg['get']('WEBGL_compressed_texture_s3tc'))) {
          if (bf === dg) return bi['COMPRESSED_RGB_S3TC_DXT1_EXT'];
          if (bf === dh) return bi['COMPRESSED_RGBA_S3TC_DXT1_EXT'];
          if (bf === di) return bi['COMPRESSED_RGBA_S3TC_DXT3_EXT'];
          if (bf === dj) return bi['COMPRESSED_RGBA_S3TC_DXT5_EXT'];
        }
        if ((bf === dk || bf === dl || bf === dm || bf === dn) && null !== (bi = bg['get']('WEBGL_compressed_texture_pvrtc'))) {
          if (bf === dk) return bi['COMPRESSED_RGB_PVRTC_4BPPV1_IMG'];
          if (bf === dl) return bi['COMPRESSED_RGB_PVRTC_2BPPV1_IMG'];
          if (bf === dm) return bi['COMPRESSED_RGBA_PVRTC_4BPPV1_IMG'];
          if (bf === dn) return bi['COMPRESSED_RGBA_PVRTC_2BPPV1_IMG'];
        }
        if (bf === dp && null !== (bi = bg['get']('WEBGL_compressed_texture_etc1'))) return bi['COMPRESSED_RGB_ETC1_WEBGL'];
        if ((bf === dq || bf === dr || bf === ds || bf === dt || bf === du || bf === dv || bf === dw || bf === dx || bf === dy || bf === dz || bf === dA || bf === dB || bf === dC || bf === dD) && null !== (bi = bg['get']('WEBGL_compressed_texture_astc'))) return bf;
        if (bf === ca || bf === cb) {
          if (bh['isWebGL2']) {
            if (bf === ca) return 0x8007;
            if (bf === cb) return 0x8008;
          }
          if (null !== (bi = bg['get']('EXT_blend_minmax'))) {
            if (bf === ca) return bi['MIN_EXT'];
            if (bf === cb) return bi['MAX_EXT'];
          }
        }
        if (bf === d6) {
          if (bh['isWebGL2']) return 0x84fa;
          if (null !== (bi = bg['get']('WEBGL_depth_texture'))) return bi['UNSIGNED_INT_24_8_WEBGL'];
        }
        return 0x0;
      }
    };
  }

  function a66() {
    yT['call'](this), this['type'] = 'Group';
  }

  function a67() {
    yT['call'](this), this['type'] = 'Camera', this['matrixWorldInverse'] = new mR(), this['projectionMatrix'] = new mR(), this['projectionMatrixInverse'] = new mR();
  }

  function a68(bf, bg, bh, bi) {
    a67['call'](this), this['type'] = 'PerspectiveCamera', this['fov'] = void 0x0 !== bf ? bf : 0x32, this['zoom'] = 0x1, this['near'] = void 0x0 !== bh ? bh : 0.1, this['far'] = void 0x0 !== bi ? bi : 0x7d0, this['focus'] = 0xa, this['aspect'] = void 0x0 !== bg ? bg : 0x1, this['view'] = null, this['filmGauge'] = 0x23, this['filmOffset'] = 0x0, this['updateProjectionMatrix']();
  }

  function a6d(bf) {
    a68['call'](this), this['cameras'] = bf || [];
  }
  ZV['prototype'] = Object['create'](Kf['prototype']), ZV['prototype']['constructor'] = ZV, ZV['prototype']['isMeshDepthMaterial'] = !0x0, ZV['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['depthPacking'] = bf['depthPacking'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['map'] = bf['map'], this['alphaMap'] = bf['alphaMap'], this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this;
  }, ZX['prototype'] = Object['create'](Kf['prototype']), ZX['prototype']['constructor'] = ZX, ZX['prototype']['isMeshDistanceMaterial'] = !0x0, ZX['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['referencePosition']['copy'](bf['referencePosition']), this['nearDistance'] = bf['nearDistance'], this['farDistance'] = bf['farDistance'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['map'] = bf['map'], this['alphaMap'] = bf['alphaMap'], this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this;
  }, a66['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': a66,
    'isGroup': !0x0
  }), a67['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': a67,
    'isCamera': !0x0,
    'copy': function(bf, bg) {
      return yT['prototype']['copy']['call'](this, bf, bg), this['matrixWorldInverse']['copy'](bf['matrixWorldInverse']), this['projectionMatrix']['copy'](bf['projectionMatrix']), this['projectionMatrixInverse']['copy'](bf['projectionMatrixInverse']), this;
    },
    'getWorldDirection': function(bf) {
      void 0x0 === bf && (console['warn']('THREE.Camera:\x20.getWorldDirection()\x20target\x20is\x20now\x20required'), bf = new eK()), this['updateMatrixWorld'](!0x0);
      var bg = this['matrixWorld']['elements'];
      return bf['set'](-bg[0x8], -bg[0x9], -bg[0xa])['normalize']();
    },
    'updateMatrixWorld': function(bf) {
      yT['prototype']['updateMatrixWorld']['call'](this, bf), this['matrixWorldInverse']['getInverse'](this['matrixWorld']);
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    }
  }), a68['prototype'] = Object['assign'](Object['create'](a67['prototype']), {
    'constructor': a68,
    'isPerspectiveCamera': !0x0,
    'copy': function(bf, bg) {
      return a67['prototype']['copy']['call'](this, bf, bg), this['fov'] = bf['fov'], this['zoom'] = bf['zoom'], this['near'] = bf['near'], this['far'] = bf['far'], this['focus'] = bf['focus'], this['aspect'] = bf['aspect'], this['view'] = null === bf['view'] ? null : Object['assign']({}, bf['view']), this['filmGauge'] = bf['filmGauge'], this['filmOffset'] = bf['filmOffset'], this;
    },
    'setFocalLength': function(bf) {
      var bg = 0.5 * this['getFilmHeight']() / bf;
      this['fov'] = 0x2 * e2['RAD2DEG'] * Math['atan'](bg), this['updateProjectionMatrix']();
    },
    'getFocalLength': function() {
      var bf = Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']);
      return 0.5 * this['getFilmHeight']() / bf;
    },
    'getEffectiveFOV': function() {
      return 0x2 * e2['RAD2DEG'] * Math['atan'](Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']) / this['zoom']);
    },
    'getFilmWidth': function() {
      return this['filmGauge'] * Math['min'](this['aspect'], 0x1);
    },
    'getFilmHeight': function() {
      return this['filmGauge'] / Math['max'](this['aspect'], 0x1);
    },
    'setViewOffset': function(bf, bg, bh, bi, bF, bG) {
      this['aspect'] = bf / bg, null === this['view'] && (this['view'] = {
        'enabled': !0x0,
        'fullWidth': 0x1,
        'fullHeight': 0x1,
        'offsetX': 0x0,
        'offsetY': 0x0,
        'width': 0x1,
        'height': 0x1
      }), this['view']['enabled'] = !0x0, this['view']['fullWidth'] = bf, this['view']['fullHeight'] = bg, this['view']['offsetX'] = bh, this['view']['offsetY'] = bi, this['view']['width'] = bF, this['view']['height'] = bG, this['updateProjectionMatrix']();
    },
    'clearViewOffset': function() {
      null !== this['view'] && (this['view']['enabled'] = !0x1), this['updateProjectionMatrix']();
    },
    'updateProjectionMatrix': function() {
      var bf = this['near'],
        bg = bf * Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']) / this['zoom'],
        bh = 0x2 * bg,
        bi = this['aspect'] * bh,
        bF = -0.5 * bi,
        bG = this['view'];
      if (null !== this['view'] && this['view']['enabled']) {
        var bH = bG['fullWidth'],
          bI = bG['fullHeight'];
        bF += bG['offsetX'] * bi / bH, bg -= bG['offsetY'] * bh / bI, bi *= bG['width'] / bH, bh *= bG['height'] / bI;
      }
      var bJ = this['filmOffset'];
      0x0 !== bJ && (bF += bf * bJ / this['getFilmWidth']()), this['projectionMatrix']['makePerspective'](bF, bF + bi, bg, bg - bh, bf, this['far']), this['projectionMatrixInverse']['getInverse'](this['projectionMatrix']);
    },
    'toJSON': function(bf) {
      var bg = yT['prototype']['toJSON']['call'](this, bf);
      return bg['object']['fov'] = this['fov'], bg['object']['zoom'] = this['zoom'], bg['object']['near'] = this['near'], bg['object']['far'] = this['far'], bg['object']['focus'] = this['focus'], bg['object']['aspect'] = this['aspect'], null !== this['view'] && (bg['object']['view'] = Object['assign']({}, this['view'])), bg['object']['filmGauge'] = this['filmGauge'], bg['object']['filmOffset'] = this['filmOffset'], bg;
    }
  }), a6d['prototype'] = Object['assign'](Object['create'](a68['prototype']), {
    'constructor': a6d,
    'isArrayCamera': !0x0
  });
  var a6I, a6J, a6K, a6L, a6M, a6N, a6O = new eK(),
    a6P = new eK();

  function a6Q(bf, bg, bh) {
    a6O['setFromMatrixPosition'](bg['matrixWorld']), a6P['setFromMatrixPosition'](bh['matrixWorld']);
    var bi = a6O['distanceTo'](a6P),
      bF = bg['projectionMatrix']['elements'],
      bG = bh['projectionMatrix']['elements'],
      bH = bF[0xe] / (bF[0xa] - 0x1),
      bI = bF[0xe] / (bF[0xa] + 0x1),
      bJ = (bF[0x9] + 0x1) / bF[0x5],
      bK = (bF[0x9] - 0x1) / bF[0x5],
      bL = (bF[0x8] - 0x1) / bF[0x0],
      bM = (bG[0x8] + 0x1) / bG[0x0],
      bN = bH * bL,
      bO = bH * bM,
      bP = bi / (-bL + bM),
      bQ = bP * -bL;
    bg['matrixWorld']['decompose'](bf['position'], bf['quaternion'], bf['scale']), bf['translateX'](bQ), bf['translateZ'](bP), bf['matrixWorld']['compose'](bf['position'], bf['quaternion'], bf['scale']), bf['matrixWorldInverse']['getInverse'](bf['matrixWorld']);
    var bR = bH + bP,
      bS = bI + bP,
      bT = bN - bQ,
      bU = bO + (bi - bQ),
      bV = bJ * bI / bS * bR,
      bW = bK * bI / bS * bR;
    bf['projectionMatrix']['makePerspective'](bT, bU, bV, bW, bR, bS);
  }

  function a7d(bf) {
    var bg, bh, bi = this,
      bF = null,
      bG = null,
      bH = null,
      bI = [],
      bJ = new mR(),
      bK = new mR(),
      bL = 0x1,
      bM = 'local-floor';
    'undefined' != typeof window && 'VRFrameData' in window && (bG = new window['VRFrameData'](), window['addEventListener']('vrdisplaypresentchange', bW, !0x1));
    var bN = new mR(),
      bO = new eF(),
      bP = new eK(),
      bQ = new a68();
    bQ['viewport'] = new m7(), bQ['layers']['enable'](0x1);
    var bR = new a68();
    bR['viewport'] = new m7(), bR['layers']['enable'](0x2);
    var bS = new a6d([bQ, bR]);

    function bT() {
      return null !== bF && !0x0 === bF['isPresenting'];
    }
    bS['layers']['enable'](0x1), bS['layers']['enable'](0x2);
    var bU, bV = new eC();

    function bW() {
      if (bT()) {
        var bG = bF['getEyeParameters']('left');
        bg = 0x2 * bG['renderWidth'] * bL, bh = bG['renderHeight'] * bL, bU = bf['getPixelRatio'](), bf['getSize'](bV), bf['setDrawingBufferSize'](bg, bh, 0x1), bQ['viewport']['set'](0x0, 0x0, bg / 0x2, bh), bR['viewport']['set'](bg / 0x2, 0x0, bg / 0x2, bh), c0['start']();
      } else bi['enabled'] && bf['setDrawingBufferSize'](bV['width'], bV['height'], bU), c0['stop']();
    }
    var bX = [];

    function bY(bf) {
      for (var bg = navigator['getGamepads'] && navigator['getGamepads'](), bh = 0x0, bi = 0x0, bF = bg['length']; bh < bF; bh++) {
        var bG = bg[bh];
        if (bG && ('Daydream\x20Controller' === bG['id'] || 'Gear\x20VR\x20Controller' === bG['id'] || 'Oculus\x20Go\x20Controller' === bG['id'] || 'OpenVR\x20Gamepad' === bG['id'] || bG['id']['startsWith']('Oculus\x20Touch') || bG['id']['startsWith']('Spatial\x20Controller'))) {
          if (bi === bf) return bG;
          bi++;
        }
      }
    }

    function bZ(bf, bi) {
      null !== bi && 0x4 === bi['length'] && bf['set'](bi[0x0] * bg, bi[0x1] * bh, bi[0x2] * bg, bi[0x3] * bh);
    }
    this['enabled'] = !0x1, this['getController'] = function(bf) {
      var bg = bI[bf];
      return void 0x0 === bg && ((bg = new a66())['matrixAutoUpdate'] = !0x1, bg['visible'] = !0x1, bI[bf] = bg), bg;
    }, this['getDevice'] = function() {
      return bF;
    }, this['setDevice'] = function(bf) {
      void 0x0 !== bf && (bF = bf), c0['setContext'](bf);
    }, this['setFramebufferScaleFactor'] = function(bf) {
      bL = bf;
    }, this['setReferenceSpaceType'] = function(bf) {
      bM = bf;
    }, this['setPoseTarget'] = function(bf) {
      void 0x0 !== bf && (bH = bf);
    }, this['getCamera'] = function(bf) {
      var bg = 'local-floor' === bM ? 1.6 : 0x0;
      if (!0x1 === bT()) return bf['position']['set'](0x0, bg, 0x0), bf['rotation']['set'](0x0, 0x0, 0x0), bf;
      if (bF['depthNear'] = bf['near'], bF['depthFar'] = bf['far'], bF['getFrameData'](bG), 'local-floor' === bM) {
        var bh = bF['stageParameters'];
        bh ? bJ['fromArray'](bh['sittingToStandingTransform']) : bJ['makeTranslation'](0x0, bg, 0x0);
      }
      var bi = bG['pose'],
        bL = null !== bH ? bH : bf;
      bL['matrix']['copy'](bJ), bL['matrix']['decompose'](bL['position'], bL['quaternion'], bL['scale']), null !== bi['orientation'] && (bO['fromArray'](bi['orientation']), bL['quaternion']['multiply'](bO)), null !== bi['position'] && (bO['setFromRotationMatrix'](bJ), bP['fromArray'](bi['position']), bP['applyQuaternion'](bO), bL['position']['add'](bP)), bL['updateMatrixWorld'](), bQ['near'] = bf['near'], bR['near'] = bf['near'], bQ['far'] = bf['far'], bR['far'] = bf['far'], bQ['matrixWorldInverse']['fromArray'](bG['leftViewMatrix']), bR['matrixWorldInverse']['fromArray'](bG['rightViewMatrix']), bK['getInverse'](bJ), 'local-floor' === bM && (bQ['matrixWorldInverse']['multiply'](bK), bR['matrixWorldInverse']['multiply'](bK));
      var bU = bL['parent'];
      null !== bU && (bN['getInverse'](bU['matrixWorld']), bQ['matrixWorldInverse']['multiply'](bN), bR['matrixWorldInverse']['multiply'](bN)), bQ['matrixWorld']['getInverse'](bQ['matrixWorldInverse']), bR['matrixWorld']['getInverse'](bR['matrixWorldInverse']), bQ['projectionMatrix']['fromArray'](bG['leftProjectionMatrix']), bR['projectionMatrix']['fromArray'](bG['rightProjectionMatrix']), a6Q(bS, bQ, bR);
      var bV = bF['getLayers']();
      if (bV['length']) {
        var bW = bV[0x0];
        bZ(bQ['viewport'], bW['leftBounds']), bZ(bR['viewport'], bW['rightBounds']);
      }
      return function() {
        for (var bf = 0x0; bf < bI['length']; bf++) {
          var bg = bI[bf],
            bh = bY(bf);
          if (void 0x0 !== bh && void 0x0 !== bh['pose']) {
            if (null === bh['pose']) return;
            var bi = bh['pose'];
            !0x1 === bi['hasPosition'] && bg['position']['set'](0.2, -0.6, -0.05), null !== bi['position'] && bg['position']['fromArray'](bi['position']), null !== bi['orientation'] && bg['quaternion']['fromArray'](bi['orientation']), bg['matrix']['compose'](bg['position'], bg['quaternion'], bg['scale']), bg['matrix']['premultiply'](bJ), bg['matrix']['decompose'](bg['position'], bg['quaternion'], bg['scale']), bg['matrixWorldNeedsUpdate'] = !0x0, bg['visible'] = !0x0;
            var bF = 'Daydream\x20Controller' === bh['id'] ? 0x0 : 0x1;
            void 0x0 === bX[bf] && (bX[bf] = !0x1), bX[bf] !== bh['buttons'][bF]['pressed'] && (bX[bf] = bh['buttons'][bF]['pressed'], !0x0 === bX[bf] ? bg['dispatchEvent']({
              'type': 'selectstart'
            }) : (bg['dispatchEvent']({
              'type': 'selectend'
            }), bg['dispatchEvent']({
              'type': 'select'
            })));
          } else bg['visible'] = !0x1;
        }
      }(), bS;
    }, this['getStandingMatrix'] = function() {
      return bJ;
    }, this['isPresenting'] = bT;
    var c0 = new xp();
    this['setAnimationLoop'] = function(bf) {
      c0['setAnimationLoop'](bf), bT() && c0['start']();
    }, this['submitFrame'] = function() {
      bT() && bF['submitFrame']();
    }, this['dispose'] = function() {
      'undefined' != typeof window && window['removeEventListener']('vrdisplaypresentchange', bW);
    }, this['setFrameOfReferenceType'] = function() {
      console['warn']('THREE.WebVRManager:\x20setFrameOfReferenceType()\x20has\x20been\x20deprecated.');
    };
  }

  function a87(bf) {
    var bg = bf['context'],
      bh = null,
      bi = null,
      bF = 'local-floor',
      bG = null,
      bH = [],
      bI = [];

    function bJ() {
      return null !== bh && null !== bi;
    }
    var bK = new a68();
    bK['layers']['enable'](0x1), bK['viewport'] = new m7();
    var bL = new a68();
    bL['layers']['enable'](0x2), bL['viewport'] = new m7();
    var bM = new a6d([bK, bL]);

    function bN(bf) {
      for (var bg = 0x0; bg < bH['length']; bg++) bI[bg] === bf['inputSource'] && bH[bg]['dispatchEvent']({
        'type': bf['type']
      });
    }

    function bO() {
      bf['setFramebuffer'](null), bf['setRenderTarget'](bf['getRenderTarget']()), bS['stop']();
    }

    function bP(bf) {
      bi = bf, bS['setContext'](bh), bS['start']();
    }

    function bQ(bf, bg) {
      null === bg ? bf['matrixWorld']['copy'](bf['matrix']) : bf['matrixWorld']['multiplyMatrices'](bg['matrixWorld'], bf['matrix']), bf['matrixWorldInverse']['getInverse'](bf['matrixWorld']);
    }
    bM['layers']['enable'](0x1), bM['layers']['enable'](0x2), this['enabled'] = !0x1, this['getController'] = function(bf) {
      var bg = bH[bf];
      return void 0x0 === bg && ((bg = new a66())['matrixAutoUpdate'] = !0x1, bg['visible'] = !0x1, bH[bf] = bg), bg;
    }, this['setFramebufferScaleFactor'] = function(bf) {}, this['setReferenceSpaceType'] = function(bf) {
      bF = bf;
    }, this['getSession'] = function() {
      return bh;
    }, this['setSession'] = function(bf) {
      null !== (bh = bf) && (bh['addEventListener']('select', bN), bh['addEventListener']('selectstart', bN), bh['addEventListener']('selectend', bN), bh['addEventListener']('end', bO), bh['updateRenderState']({
        'baseLayer': new XRWebGLLayer(bh, bg)
      }), bh['requestReferenceSpace'](bF)['then'](bP), bI = bh['inputSources'], bh['addEventListener']('inputsourceschange', function() {
        bI = bh['inputSources'], console['log'](bI);
        for (var bf = 0x0; bf < bH['length']; bf++) {
          bH[bf]['userData']['inputSource'] = bI[bf];
        }
      }));
    }, this['getCamera'] = function(bf) {
      if (bJ()) {
        var bg = bf['parent'],
          bh = bM['cameras'];
        bQ(bM, bg);
        for (var bi = 0x0; bi < bh['length']; bi++) bQ(bh[bi], bg);
        bf['matrixWorld']['copy'](bM['matrixWorld']);
        for (var bF = bf['children'], bG = (bi = 0x0, bF['length']); bi < bG; bi++) bF[bi]['updateMatrixWorld'](!0x0);
        return a6Q(bM, bK, bL), bM;
      }
      return bf;
    }, this['isPresenting'] = bJ;
    var bR = null;
    var bS = new xp();
    bS['setAnimationLoop'](function(bg, bF) {
      if (null !== (bG = bF['getViewerPose'](bi))) {
        var bJ = bG['views'],
          bK = bh['renderState']['baseLayer'];
        bf['setFramebuffer'](bK['framebuffer']);
        for (var bL = 0x0; bL < bJ['length']; bL++) {
          var bN = bJ[bL],
            bO = bK['getViewport'](bN),
            bP = bN['transform']['inverse']['matrix'],
            bQ = bM['cameras'][bL];
          bQ['matrix']['fromArray'](bP)['getInverse'](bQ['matrix']), bQ['projectionMatrix']['fromArray'](bN['projectionMatrix']), bQ['viewport']['set'](bO['x'], bO['y'], bO['width'], bO['height']), 0x0 === bL && bM['matrix']['copy'](bQ['matrix']);
        }
      }
      for (bL = 0x0; bL < bH['length']; bL++) {
        var bS = bH[bL],
          bT = bI[bL];
        if (bT) {
          var bU = bF['getPose'](bT['targetRaySpace'], bi);
          if (null !== bU) {
            bS['matrix']['fromArray'](bU['transform']['matrix']), bS['matrix']['decompose'](bS['position'], bS['rotation'], bS['scale']), bS['visible'] = !0x0;
            continue;
          }
        }
        bS['visible'] = !0x1;
      }
      bR && bR(bg);
    }), this['setAnimationLoop'] = function(bf) {
      bR = bf;
    }, this['dispose'] = function() {}, this['getStandingMatrix'] = function() {
      return console['warn']('THREE.WebXRManager:\x20getStandingMatrix()\x20is\x20no\x20longer\x20needed.'), new mR();
    }, this['getDevice'] = function() {
      console['warn']('THREE.WebXRManager:\x20getDevice()\x20has\x20been\x20deprecated.');
    }, this['setDevice'] = function() {
      console['warn']('THREE.WebXRManager:\x20setDevice()\x20has\x20been\x20deprecated.');
    }, this['setFrameOfReferenceType'] = function() {
      console['warn']('THREE.WebXRManager:\x20setFrameOfReferenceType()\x20has\x20been\x20deprecated.');
    }, this['submitFrame'] = function() {};
  }

  function a8U(bf) {
    console['log']('THREE.WebGLRenderer', bI);
    var bg = void 0x0 !== (bf = bf || {})['canvas'] ? bf['canvas'] : document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas'),
      bh = void 0x0 !== bf['context'] ? bf['context'] : null,
      bi = void 0x0 !== bf['alpha'] && bf['alpha'],
      bF = void 0x0 === bf['depth'] || bf['depth'],
      bG = void 0x0 === bf['stencil'] || bf['stencil'],
      bH = void 0x0 !== bf['antialias'] && bf['antialias'],
      bJ = void 0x0 === bf['premultipliedAlpha'] || bf['premultipliedAlpha'],
      bK = void 0x0 !== bf['preserveDrawingBuffer'] && bf['preserveDrawingBuffer'],
      bL = void 0x0 !== bf['powerPreference'] ? bf['powerPreference'] : 'default',
      bM = void 0x0 !== bf['failIfMajorPerformanceCaveat'] && bf['failIfMajorPerformanceCaveat'],
      bN = null,
      bO = null;
    this['domElement'] = bg, this['context'] = null, this['debug'] = {
      'checkShaderErrors': !0x0
    }, this['autoClear'] = !0x0, this['autoClearColor'] = !0x0, this['autoClearDepth'] = !0x0, this['autoClearStencil'] = !0x0, this['sortObjects'] = !0x0, this['clippingPlanes'] = [], this['localClippingEnabled'] = !0x1, this['gammaFactor'] = 0x2, this['gammaInput'] = !0x1, this['gammaOutput'] = !0x1, this['physicallyCorrectLights'] = !0x1, this['toneMapping'] = cz, this['toneMappingExposure'] = 0x1, this['toneMappingWhitePoint'] = 0x1, this['maxMorphTargets'] = 0x8, this['maxMorphNormals'] = 0x4;
    var bP, bQ, bR, bS, bT, bV, bW, bX, bY, bZ, c0, c1, c2, c3, c4, c5, c6, c7, c8 = this,
      c9 = !0x1,
      ca = null,
      cb = 0x0,
      cc = 0x0,
      cd = null,
      ce = null,
      cf = -0x1,
      cg = {
        'geometry': null,
        'program': null,
        'wireframe': !0x1
      },
      ch = null,
      ci = null,
      cj = new m7(),
      ck = new m7(),
      cl = null,
      cm = bg['width'],
      cn = bg['height'],
      co = 0x1,
      cp = new m7(0x0, 0x0, cm, cn),
      cq = new m7(0x0, 0x0, cm, cn),
      cr = !0x1,
      cs = new mK(),
      ct = new M2(),
      cu = !0x1,
      cv = !0x1,
      cw = new mR(),
      cx = new eK();

    function cy() {
      return null === cd ? co : 0x1;
    }
    try {
      var cA = {
        'alpha': bi,
        'depth': bF,
        'stencil': bG,
        'antialias': bH,
        'premultipliedAlpha': bJ,
        'preserveDrawingBuffer': bK,
        'powerPreference': bL,
        'failIfMajorPerformanceCaveat': bM,
        'xrCompatible': !0x0
      };
      if (bg['addEventListener']('webglcontextlost', cE, !0x1), bg['addEventListener']('webglcontextrestored', cF, !0x1), null === (bP = bh || bg['getContext']('webgl', cA) || bg['getContext']('experimental-webgl', cA))) throw null !== bg['getContext']('webgl') ? new Error('Error\x20creating\x20WebGL\x20context\x20with\x20your\x20selected\x20attributes.') : new Error('Error\x20creating\x20WebGL\x20context.');
      void 0x0 === bP['getShaderPrecisionFormat'] && (bP['getShaderPrecisionFormat'] = function() {
        return {
          'rangeMin': 0x1,
          'rangeMax': 0x1,
          'precision': 0x1
        };
      });
    } catch (a9S) {
      throw console['error']('THREE.WebGLRenderer:\x20' + a9S['message']), a9S;
    }

    function cB() {
      bQ = new MB(bP), (bR = new LG(bP, bQ, bf))['isWebGL2'] || (bQ['get']('WEBGL_depth_texture'), bQ['get']('OES_texture_float'), bQ['get']('OES_texture_half_float'), bQ['get']('OES_texture_half_float_linear'), bQ['get']('OES_standard_derivatives'), bQ['get']('OES_element_index_uint'), bQ['get']('ANGLE_instanced_arrays')), bQ['get']('OES_texture_float_linear'), c7 = new a60(bP, bQ, bR), (bS = new a1i(bP, bQ, c7, bR))['scissor'](ck['copy'](cq)['multiplyScalar'](co)), bS['viewport'](cj['copy'](cp)['multiplyScalar'](co)), bT = new Nv(bP), bV = new Yj(), bW = new a3q(bP, bQ, bS, bV, bR, c7, bT), bX = new xy(bP), bY = new MG(bP, bX, bT), bZ = new NV(bY, bT), c4 = new NE(bP), c0 = new XC(c8, bQ, bR, bW), c1 = new YZ(), c2 = new ZN(), c3 = new L1(c8, bS, bZ, bJ), c5 = new Lt(bP, bQ, bT, bR), c6 = new Nf(bP, bQ, bT, bR), bT['programs'] = c0['programs'], c8['context'] = bP, c8['capabilities'] = bR, c8['extensions'] = bQ, c8['properties'] = bV, c8['renderLists'] = c1, c8['state'] = bS, c8['info'] = bT;
    }
    cB();
    var cC = 'undefined' != typeof navigator && 'xr' in navigator && 'supportsSession' in navigator['xr'] ? new a87(c8) : new a7d(c8);
    this['vr'] = cC;
    var cD = new ZZ(c8, bZ, bR['maxTextureSize']);

    function cE(bf) {
      bf['preventDefault'](), console['log']('THREE.WebGLRenderer:\x20Context\x20Lost.'), c9 = !0x0;
    }

    function cF() {
      console['log']('THREE.WebGLRenderer:\x20Context\x20Restored.'), c9 = !0x1, cB();
    }

    function cG(bf) {
      var bg = bf['target'];
      bg['removeEventListener']('dispose', cG),
        function(bf) {
          cH(bf), bV['remove'](bf);
        }(bg);
    }

    function cH(bf) {
      var bg = bV['get'](bf)['program'];
      bf['program'] = void 0x0, void 0x0 !== bg && c0['releaseProgram'](bg);
    }
    this['shadowMap'] = cD, this['getContext'] = function() {
      return bP;
    }, this['getContextAttributes'] = function() {
      return bP['getContextAttributes']();
    }, this['forceContextLoss'] = function() {
      var bf = bQ['get']('WEBGL_lose_context');
      bf && bf['loseContext']();
    }, this['forceContextRestore'] = function() {
      var bf = bQ['get']('WEBGL_lose_context');
      bf && bf['restoreContext']();
    }, this['getPixelRatio'] = function() {
      return co;
    }, this['setPixelRatio'] = function(bf) {
      void 0x0 !== bf && (co = bf, this['setSize'](cm, cn, !0x1));
    }, this['getSize'] = function(bf) {
      return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getsize()\x20now\x20requires\x20a\x20Vector2\x20as\x20an\x20argument'), bf = new eC()), bf['set'](cm, cn);
    }, this['setSize'] = function(bf, bh, bi) {
      cC['isPresenting']() ? console['warn']('THREE.WebGLRenderer:\x20Can\x27t\x20change\x20size\x20while\x20VR\x20device\x20is\x20presenting.') : (cm = bf, cn = bh, bg['width'] = bf * co, bg['height'] = bh * co, !0x1 !== bi && (bg['style']['width'] = bf + 'px', bg['style']['height'] = bh + 'px'), this['setViewport'](0x0, 0x0, bf, bh));
    }, this['getDrawingBufferSize'] = function(bf) {
      return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getdrawingBufferSize()\x20now\x20requires\x20a\x20Vector2\x20as\x20an\x20argument'), bf = new eC()), bf['set'](cm * co, cn * co);
    }, this['setDrawingBufferSize'] = function(bf, bh, bi) {
      cm = bf, cn = bh, co = bi, bg['width'] = bf * bi, bg['height'] = bh * bi, this['setViewport'](0x0, 0x0, bf, bh);
    }, this['getCurrentViewport'] = function(bf) {
      return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getCurrentViewport()\x20now\x20requires\x20a\x20Vector4\x20as\x20an\x20argument'), bf = new m7()), bf['copy'](cj);
    }, this['getViewport'] = function(bf) {
      return bf['copy'](cp);
    }, this['setViewport'] = function(bf, bg, bh, bi) {
      bf['isVector4'] ? cp['set'](bf['x'], bf['y'], bf['z'], bf['w']) : cp['set'](bf, bg, bh, bi), bS['viewport'](cj['copy'](cp)['multiplyScalar'](co));
    }, this['getScissor'] = function(bf) {
      return bf['copy'](cq);
    }, this['setScissor'] = function(bf, bg, bh, bi) {
      bf['isVector4'] ? cq['set'](bf['x'], bf['y'], bf['z'], bf['w']) : cq['set'](bf, bg, bh, bi), bS['scissor'](ck['copy'](cq)['multiplyScalar'](co));
    }, this['getScissorTest'] = function() {
      return cr;
    }, this['setScissorTest'] = function(bf) {
      bS['setScissorTest'](cr = bf);
    }, this['getClearColor'] = function() {
      return c3['getClearColor']();
    }, this['setClearColor'] = function() {
      c3['setClearColor']['apply'](c3, arguments);
    }, this['getClearAlpha'] = function() {
      return c3['getClearAlpha']();
    }, this['setClearAlpha'] = function() {
      c3['setClearAlpha']['apply'](c3, arguments);
    }, this['clear'] = function(bf, bg, bh) {
      var bi = 0x0;
      (void 0x0 === bf || bf) && (bi |= 0x4000), (void 0x0 === bg || bg) && (bi |= 0x100), (void 0x0 === bh || bh) && (bi |= 0x400), bP['clear'](bi);
    }, this['clearColor'] = function() {
      this['clear'](!0x0, !0x1, !0x1);
    }, this['clearDepth'] = function() {
      this['clear'](!0x1, !0x0, !0x1);
    }, this['clearStencil'] = function() {
      this['clear'](!0x1, !0x1, !0x0);
    }, this['dispose'] = function() {
      bg['removeEventListener']('webglcontextlost', cE, !0x1), bg['removeEventListener']('webglcontextrestored', cF, !0x1), c1['dispose'](), c2['dispose'](), bV['dispose'](), bZ['dispose'](), cC['dispose'](), cJ['stop']();
    }, this['renderBufferImmediate'] = function(bf, bg) {
      bS['initAttributes']();
      var bh = bV['get'](bf);
      bf['hasPositions'] && !bh['position'] && (bh['position'] = bP['createBuffer']()), bf['hasNormals'] && !bh['normal'] && (bh['normal'] = bP['createBuffer']()), bf['hasUvs'] && !bh['uv'] && (bh['uv'] = bP['createBuffer']()), bf['hasColors'] && !bh['color'] && (bh['color'] = bP['createBuffer']());
      var bi = bg['getAttributes']();
      bf['hasPositions'] && (bP['bindBuffer'](0x8892, bh['position']), bP['bufferData'](0x8892, bf['positionArray'], 0x88e8), bS['enableAttribute'](bi['position']), bP['vertexAttribPointer'](bi['position'], 0x3, 0x1406, !0x1, 0x0, 0x0)), bf['hasNormals'] && (bP['bindBuffer'](0x8892, bh['normal']), bP['bufferData'](0x8892, bf['normalArray'], 0x88e8), bS['enableAttribute'](bi['normal']), bP['vertexAttribPointer'](bi['normal'], 0x3, 0x1406, !0x1, 0x0, 0x0)), bf['hasUvs'] && (bP['bindBuffer'](0x8892, bh['uv']), bP['bufferData'](0x8892, bf['uvArray'], 0x88e8), bS['enableAttribute'](bi['uv']), bP['vertexAttribPointer'](bi['uv'], 0x2, 0x1406, !0x1, 0x0, 0x0)), bf['hasColors'] && (bP['bindBuffer'](0x8892, bh['color']), bP['bufferData'](0x8892, bf['colorArray'], 0x88e8), bS['enableAttribute'](bi['color']), bP['vertexAttribPointer'](bi['color'], 0x3, 0x1406, !0x1, 0x0, 0x0)), bS['disableUnusedAttributes'](), bP['drawArrays'](0x4, 0x0, bf['count']), bf['count'] = 0x0;
    }, this['renderBufferDirect'] = function(bf, bg, bh, bi, bF, bG) {
      var bH = bF['isMesh'] && bF['matrixWorld']['determinant']() < 0x0;
      bS['setMaterial'](bi, bH);
      var bI = cN(bf, bg, bi, bF),
        bJ = !0x1;
      cg['geometry'] === bh['id'] && cg['program'] === bI['id'] && cg['wireframe'] === (!0x0 === bi['wireframe']) || (cg['geometry'] = bh['id'], cg['program'] = bI['id'], cg['wireframe'] = !0x0 === bi['wireframe'], bJ = !0x0), bF['morphTargetInfluences'] && (c4['update'](bF, bh, bi, bI), bJ = !0x0);
      var bK, bL = bh['index'],
        bM = bh['attributes']['position'],
        bN = 0x1;
      !0x0 === bi['wireframe'] && (bL = bY['getWireframeAttribute'](bh), bN = 0x2);
      var bO = c5;
      null !== bL && (bK = bX['get'](bL), (bO = c6)['setIndex'](bK)), bJ && (! function(bf, bg, bh) {
        if (bh && bh['isInstancedBufferGeometry'] && !bR['isWebGL2'] && null === bQ['get']('ANGLE_instanced_arrays')) return void console['error']('THREE.WebGLRenderer.setupVertexAttributes:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
        bS['initAttributes']();
        var bi = bh['attributes'],
          bF = bg['getAttributes'](),
          bG = bf['defaultAttributeValues'];
        for (var bH in bF) {
          var bI = bF[bH];
          if (bI >= 0x0) {
            var bJ = bi[bH];
            if (void 0x0 !== bJ) {
              var bK = bJ['normalized'],
                bL = bJ['itemSize'],
                bM = bX['get'](bJ);
              if (void 0x0 === bM) continue;
              var bN = bM['buffer'],
                bO = bM['type'],
                bT = bM['bytesPerElement'];
              if (bJ['isInterleavedBufferAttribute']) {
                var bU = bJ['data'],
                  bV = bU['stride'],
                  bW = bJ['offset'];
                bU && bU['isInstancedInterleavedBuffer'] ? (bS['enableAttributeAndDivisor'](bI, bU['meshPerAttribute']), void 0x0 === bh['maxInstancedCount'] && (bh['maxInstancedCount'] = bU['meshPerAttribute'] * bU['count'])) : bS['enableAttribute'](bI), bP['bindBuffer'](0x8892, bN), bP['vertexAttribPointer'](bI, bL, bO, bK, bV * bT, bW * bT);
              } else bJ['isInstancedBufferAttribute'] ? (bS['enableAttributeAndDivisor'](bI, bJ['meshPerAttribute']), void 0x0 === bh['maxInstancedCount'] && (bh['maxInstancedCount'] = bJ['meshPerAttribute'] * bJ['count'])) : bS['enableAttribute'](bI), bP['bindBuffer'](0x8892, bN), bP['vertexAttribPointer'](bI, bL, bO, bK, 0x0, 0x0);
            } else if (void 0x0 !== bG) {
              var bY = bG[bH];
              if (void 0x0 !== bY) switch (bY['length']) {
                case 0x2:
                  bP['vertexAttrib2fv'](bI, bY);
                  break;
                case 0x3:
                  bP['vertexAttrib3fv'](bI, bY);
                  break;
                case 0x4:
                  bP['vertexAttrib4fv'](bI, bY);
                  break;
                default:
                  bP['vertexAttrib1fv'](bI, bY);
              }
            }
          }
        }
        bS['disableUnusedAttributes']();
      }(bi, bI, bh), null !== bL && bP['bindBuffer'](0x8893, bK['buffer']));
      var bT = 0x1 / 0x0;
      null !== bL ? bT = bL['count'] : void 0x0 !== bM && (bT = bM['count']);
      var bU = bh['drawRange']['start'] * bN,
        bV = bh['drawRange']['count'] * bN,
        bW = null !== bG ? bG['start'] * bN : 0x0,
        bZ = null !== bG ? bG['count'] * bN : 0x1 / 0x0,
        c0 = Math['max'](bU, bW),
        c1 = Math['min'](bT, bU + bV, bW + bZ) - 0x1,
        c2 = Math['max'](0x0, c1 - c0 + 0x1);
      if (0x0 !== c2) {
        if (bF['isMesh'])
          if (!0x0 === bi['wireframe']) bS['setLineWidth'](bi['wireframeLinewidth'] * cy()), bO['setMode'](0x1);
          else switch (bF['drawMode']) {
            case dN:
              bO['setMode'](0x4);
              break;
            case dO:
              bO['setMode'](0x5);
              break;
            case dP:
              bO['setMode'](0x6);
          } else if (bF['isLine']) {
            var c3 = bi['linewidth'];
            void 0x0 === c3 && (c3 = 0x1), bS['setLineWidth'](c3 * cy()), bF['isLineSegments'] ? bO['setMode'](0x1) : bF['isLineLoop'] ? bO['setMode'](0x2) : bO['setMode'](0x3);
          } else bF['isPoints'] ? bO['setMode'](0x0) : bF['isSprite'] && bO['setMode'](0x4);
        bh && bh['isInstancedBufferGeometry'] ? bh['maxInstancedCount'] > 0x0 && bO['renderInstances'](bh, c0, c2) : bO['render'](c0, c2);
      }
    }, this['compile'] = function(bf, bg) {
      (bO = c2['get'](bf, bg))['init'](), bf['traverse'](function(bf) {
        bf['isLight'] && (bO['pushLight'](bf), bf['castShadow'] && bO['pushShadow'](bf));
      }), bO['setupLights'](bg), bf['traverse'](function(bg) {
        if (bg['material'])
          if (Array['isArray'](bg['material']))
            for (var bh = 0x0; bh < bg['material']['length']; bh++) cM(bg['material'][bh], bf['fog'], bg);
          else cM(bg['material'], bf['fog'], bg);
      });
    };
    var cI = null;
    var cJ = new xp();

    function cK(bf, bg, bh, bi) {
      for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) {
        var bH = bf[bF],
          bI = bH['object'],
          bJ = bH['geometry'],
          bK = void 0x0 === bi ? bH['material'] : bi,
          bL = bH['group'];
        if (bh['isArrayCamera']) {
          ci = bh;
          for (var bM = bh['cameras'], bN = 0x0, bP = bM['length']; bN < bP; bN++) {
            var bQ = bM[bN];
            bI['layers']['test'](bQ['layers']) && (bS['viewport'](cj['copy'](bQ['viewport'])), bO['setupLights'](bQ), cL(bI, bg, bQ, bJ, bK, bL));
          }
        } else ci = null, cL(bI, bg, bh, bJ, bK, bL);
      }
    }

    function cL(bf, bg, bh, bi, bF, bG) {
      if (bf['onBeforeRender'](c8, bg, bh, bi, bF, bG), bO = c2['get'](bg, ci || bh), bf['modelViewMatrix']['multiplyMatrices'](bh['matrixWorldInverse'], bf['matrixWorld']), bf['normalMatrix']['getNormalMatrix'](bf['modelViewMatrix']), bf['isImmediateRenderObject']) {
        bS['setMaterial'](bF);
        var bH = cN(bh, bg['fog'], bF, bf);
        cg['geometry'] = null, cg['program'] = null, cg['wireframe'] = !0x1,
          function(bf, bg) {
            bf['render'](function(bf) {
              c8['renderBufferImmediate'](bf, bg);
            });
          }(bf, bH);
      } else c8['renderBufferDirect'](bh, bg['fog'], bi, bF, bf, bG);
      bf['onAfterRender'](c8, bg, bh, bi, bF, bG), bO = c2['get'](bg, ci || bh);
    }

    function cM(bf, bg, bh) {
      var bi = bV['get'](bf),
        bF = bO['state']['lights'],
        bG = bO['state']['shadowsArray'],
        bH = bi['lightsHash'],
        bI = bF['state']['hash'],
        bJ = c0['getParameters'](bf, bF['state'], bG, bg, ct['numPlanes'], ct['numIntersection'], bh),
        bK = c0['getProgramCode'](bf, bJ),
        bL = bi['program'],
        bM = !0x0;
      if (void 0x0 === bL) bf['addEventListener']('dispose', cG);
      else if (bL['code'] !== bK) cH(bf);
      else if (bH['stateID'] !== bI['stateID'] || bH['directionalLength'] !== bI['directionalLength'] || bH['pointLength'] !== bI['pointLength'] || bH['spotLength'] !== bI['spotLength'] || bH['rectAreaLength'] !== bI['rectAreaLength'] || bH['hemiLength'] !== bI['hemiLength'] || bH['shadowsLength'] !== bI['shadowsLength']) bH['stateID'] = bI['stateID'], bH['directionalLength'] = bI['directionalLength'], bH['pointLength'] = bI['pointLength'], bH['spotLength'] = bI['spotLength'], bH['rectAreaLength'] = bI['rectAreaLength'], bH['hemiLength'] = bI['hemiLength'], bH['shadowsLength'] = bI['shadowsLength'], bM = !0x1;
      else {
        if (void 0x0 !== bJ['shaderID']) return;
        bM = !0x1;
      }
      if (bM) {
        if (bJ['shaderID']) {
          var bN = xo[bJ['shaderID']];
          bi['shader'] = {
            'name': bf['type'],
            'uniforms': vQ(bN['uniforms']),
            'vertexShader': bN['vertexShader'],
            'fragmentShader': bN['fragmentShader']
          };
        } else bi['shader'] = {
          'name': bf['type'],
          'uniforms': bf['uniforms'],
          'vertexShader': bf['vertexShader'],
          'fragmentShader': bf['fragmentShader']
        };
        bf['onBeforeCompile'](bi['shader'], c8), bK = c0['getProgramCode'](bf, bJ), bL = c0['acquireProgram'](bf, bi['shader'], bJ, bK), bi['program'] = bL, bf['program'] = bL;
      }
      var bP = bL['getAttributes']();
      if (bf['morphTargets']) {
        bf['numSupportedMorphTargets'] = 0x0;
        for (var bQ = 0x0; bQ < c8['maxMorphTargets']; bQ++) bP['morphTarget' + bQ] >= 0x0 && bf['numSupportedMorphTargets']++;
      }
      if (bf['morphNormals']) {
        bf['numSupportedMorphNormals'] = 0x0;
        for (bQ = 0x0; bQ < c8['maxMorphNormals']; bQ++) bP['morphNormal' + bQ] >= 0x0 && bf['numSupportedMorphNormals']++;
      }
      var bR = bi['shader']['uniforms'];
      (bf['isShaderMaterial'] || bf['isRawShaderMaterial']) && !0x0 !== bf['clipping'] || (bi['numClippingPlanes'] = ct['numPlanes'], bi['numIntersection'] = ct['numIntersection'], bR['clippingPlanes'] = ct['uniform']), bi['fog'] = bg, void 0x0 === bH && (bi['lightsHash'] = bH = {}), bH['stateID'] = bI['stateID'], bH['directionalLength'] = bI['directionalLength'], bH['pointLength'] = bI['pointLength'], bH['spotLength'] = bI['spotLength'], bH['rectAreaLength'] = bI['rectAreaLength'], bH['hemiLength'] = bI['hemiLength'], bH['shadowsLength'] = bI['shadowsLength'], bf['lights'] && (bR['ambientLightColor']['value'] = bF['state']['ambient'], bR['lightProbe']['value'] = bF['state']['probe'], bR['directionalLights']['value'] = bF['state']['directional'], bR['spotLights']['value'] = bF['state']['spot'], bR['rectAreaLights']['value'] = bF['state']['rectArea'], bR['pointLights']['value'] = bF['state']['point'], bR['hemisphereLights']['value'] = bF['state']['hemi'], bR['directionalShadowMap']['value'] = bF['state']['directionalShadowMap'], bR['directionalShadowMatrix']['value'] = bF['state']['directionalShadowMatrix'], bR['spotShadowMap']['value'] = bF['state']['spotShadowMap'], bR['spotShadowMatrix']['value'] = bF['state']['spotShadowMatrix'], bR['pointShadowMap']['value'] = bF['state']['pointShadowMap'], bR['pointShadowMatrix']['value'] = bF['state']['pointShadowMatrix']);
      var bS = bi['program']['getUniforms'](),
        bT = VF['seqWithValue'](bS['seq'], bR);
      bi['uniformsList'] = bT;
    }

    function cN(bf, bg, bh, bi) {
      bW['resetTextureUnits']();
      var bF = bV['get'](bh),
        bG = bO['state']['lights'],
        bH = bF['lightsHash'],
        bI = bG['state']['hash'];
      if (cu && (cv || bf !== ch)) {
        var bJ = bf === ch && bh['id'] === cf;
        ct['setState'](bh['clippingPlanes'], bh['clipIntersection'], bh['clipShadows'], bf, bF, bJ);
      }!0x1 === bh['needsUpdate'] && (void 0x0 === bF['program'] ? bh['needsUpdate'] = !0x0 : bh['fog'] && bF['fog'] !== bg ? bh['needsUpdate'] = !0x0 : (!bh['lights'] || bH['stateID'] === bI['stateID'] && bH['directionalLength'] === bI['directionalLength'] && bH['pointLength'] === bI['pointLength'] && bH['spotLength'] === bI['spotLength'] && bH['rectAreaLength'] === bI['rectAreaLength'] && bH['hemiLength'] === bI['hemiLength'] && bH['shadowsLength'] === bI['shadowsLength']) && (void 0x0 === bF['numClippingPlanes'] || bF['numClippingPlanes'] === ct['numPlanes'] && bF['numIntersection'] === ct['numIntersection']) || (bh['needsUpdate'] = !0x0)), bh['needsUpdate'] && (cM(bh, bg, bi), bh['needsUpdate'] = !0x1);
      var bK, bL, bM = !0x1,
        bN = !0x1,
        bQ = !0x1,
        bT = bF['program'],
        bX = bT['getUniforms'](),
        bY = bF['shader']['uniforms'];
      if (bS['useProgram'](bT['program']) && (bM = !0x0, bN = !0x0, bQ = !0x0), bh['id'] !== cf && (cf = bh['id'], bN = !0x0), bM || ch !== bf) {
        if (bX['setValue'](bP, 'projectionMatrix', bf['projectionMatrix']), bR['logarithmicDepthBuffer'] && bX['setValue'](bP, 'logDepthBufFC', 0x2 / (Math['log'](bf['far'] + 0x1) / Math['LN2'])), ch !== bf && (ch = bf, bN = !0x0, bQ = !0x0), bh['isShaderMaterial'] || bh['isMeshPhongMaterial'] || bh['isMeshStandardMaterial'] || bh['envMap']) {
          var bZ = bX['map']['cameraPosition'];
          void 0x0 !== bZ && bZ['setValue'](bP, cx['setFromMatrixPosition'](bf['matrixWorld']));
        }(bh['isMeshPhongMaterial'] || bh['isMeshLambertMaterial'] || bh['isMeshBasicMaterial'] || bh['isMeshStandardMaterial'] || bh['isShaderMaterial'] || bh['skinning']) && bX['setValue'](bP, 'viewMatrix', bf['matrixWorldInverse']);
      }
      if (bh['skinning']) {
        bX['setOptional'](bP, bi, 'bindMatrix'), bX['setOptional'](bP, bi, 'bindMatrixInverse');
        var c0 = bi['skeleton'];
        if (c0) {
          var c1 = c0['bones'];
          if (bR['floatVertexTextures']) {
            if (void 0x0 === c0['boneTexture']) {
              var c2 = Math['sqrt'](0x4 * c1['length']);
              c2 = e2['ceilPowerOfTwo'](c2), c2 = Math['max'](c2, 0x4);
              var c3 = new Float32Array(c2 * c2 * 0x4);
              c3['set'](c0['boneMatrices']);
              var c4 = new mo(c3, c2, c2, d9, d1);
              c4['needsUpdate'] = !0x0, c0['boneMatrices'] = c3, c0['boneTexture'] = c4, c0['boneTextureSize'] = c2;
            }
            bX['setValue'](bP, 'boneTexture', c0['boneTexture'], bW), bX['setValue'](bP, 'boneTextureSize', c0['boneTextureSize']);
          } else bX['setOptional'](bP, c0, 'boneMatrices');
        }
      }
      return bN && (bX['setValue'](bP, 'toneMappingExposure', c8['toneMappingExposure']), bX['setValue'](bP, 'toneMappingWhitePoint', c8['toneMappingWhitePoint']), bh['lights'] && (bL = bQ, (bK = bY)['ambientLightColor']['needsUpdate'] = bL, bK['lightProbe']['needsUpdate'] = bL, bK['directionalLights']['needsUpdate'] = bL, bK['pointLights']['needsUpdate'] = bL, bK['spotLights']['needsUpdate'] = bL, bK['rectAreaLights']['needsUpdate'] = bL, bK['hemisphereLights']['needsUpdate'] = bL), bg && bh['fog'] && function(bf, bg) {
        bf['fogColor']['value']['copy'](bg['color']), bg['isFog'] ? (bf['fogNear']['value'] = bg['near'], bf['fogFar']['value'] = bg['far']) : bg['isFogExp2'] && (bf['fogDensity']['value'] = bg['density']);
      }(bY, bg), bh['isMeshBasicMaterial'] ? cO(bY, bh) : bh['isMeshLambertMaterial'] ? (cO(bY, bh), function(bf, bg) {
        bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']);
      }(bY, bh)) : bh['isMeshPhongMaterial'] ? (cO(bY, bh), bh['isMeshToonMaterial'] ? function(bf, bg) {
        cP(bf, bg), bg['gradientMap'] && (bf['gradientMap']['value'] = bg['gradientMap']);
      }(bY, bh) : cP(bY, bh)) : bh['isMeshStandardMaterial'] ? (cO(bY, bh), bh['isMeshPhysicalMaterial'] ? function(bf, bg) {
        cQ(bf, bg), bf['reflectivity']['value'] = bg['reflectivity'], bf['clearCoat']['value'] = bg['clearCoat'], bf['clearCoatRoughness']['value'] = bg['clearCoatRoughness'];
      }(bY, bh) : cQ(bY, bh)) : bh['isMeshMatcapMaterial'] ? (cO(bY, bh), function(bf, bg) {
        bg['matcap'] && (bf['matcap']['value'] = bg['matcap']);
        bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'], bf['bumpScale']['value'] = bg['bumpScale'], bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1));
        bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'], bf['normalScale']['value']['copy'](bg['normalScale']), bg['side'] === bU && bf['normalScale']['value']['negate']());
        bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
      }(bY, bh)) : bh['isMeshDepthMaterial'] ? (cO(bY, bh), function(bf, bg) {
        bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
      }(bY, bh)) : bh['isMeshDistanceMaterial'] ? (cO(bY, bh), function(bf, bg) {
        bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
        bf['referencePosition']['value']['copy'](bg['referencePosition']), bf['nearDistance']['value'] = bg['nearDistance'], bf['farDistance']['value'] = bg['farDistance'];
      }(bY, bh)) : bh['isMeshNormalMaterial'] ? (cO(bY, bh), function(bf, bg) {
        bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'], bf['bumpScale']['value'] = bg['bumpScale'], bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1));
        bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'], bf['normalScale']['value']['copy'](bg['normalScale']), bg['side'] === bU && bf['normalScale']['value']['negate']());
        bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
      }(bY, bh)) : bh['isLineBasicMaterial'] ? (function(bf, bg) {
        bf['diffuse']['value']['copy'](bg['color']), bf['opacity']['value'] = bg['opacity'];
      }(bY, bh), bh['isLineDashedMaterial'] && function(bf, bg) {
        bf['dashSize']['value'] = bg['dashSize'], bf['totalSize']['value'] = bg['dashSize'] + bg['gapSize'], bf['scale']['value'] = bg['scale'];
      }(bY, bh)) : bh['isPointsMaterial'] ? function(bf, bg) {
        bf['diffuse']['value']['copy'](bg['color']), bf['opacity']['value'] = bg['opacity'], bf['size']['value'] = bg['size'] * co, bf['scale']['value'] = 0.5 * cn, bf['map']['value'] = bg['map'], null !== bg['map'] && (!0x0 === bg['map']['matrixAutoUpdate'] && bg['map']['updateMatrix'](), bf['uvTransform']['value']['copy'](bg['map']['matrix']));
      }(bY, bh) : bh['isSpriteMaterial'] ? function(bf, bg) {
        bf['diffuse']['value']['copy'](bg['color']), bf['opacity']['value'] = bg['opacity'], bf['rotation']['value'] = bg['rotation'], bf['map']['value'] = bg['map'], null !== bg['map'] && (!0x0 === bg['map']['matrixAutoUpdate'] && bg['map']['updateMatrix'](), bf['uvTransform']['value']['copy'](bg['map']['matrix']));
      }(bY, bh) : bh['isShadowMaterial'] && (bY['color']['value']['copy'](bh['color']), bY['opacity']['value'] = bh['opacity']), void 0x0 !== bY['ltc_1'] && (bY['ltc_1']['value'] = xn['LTC_1']), void 0x0 !== bY['ltc_2'] && (bY['ltc_2']['value'] = xn['LTC_2']), VF['upload'](bP, bF['uniformsList'], bY, bW)), bh['isShaderMaterial'] && !0x0 === bh['uniformsNeedUpdate'] && (VF['upload'](bP, bF['uniformsList'], bY, bW), bh['uniformsNeedUpdate'] = !0x1), bh['isSpriteMaterial'] && bX['setValue'](bP, 'center', bi['center']), bX['setValue'](bP, 'modelViewMatrix', bi['modelViewMatrix']), bX['setValue'](bP, 'normalMatrix', bi['normalMatrix']), bX['setValue'](bP, 'modelMatrix', bi['matrixWorld']), bT;
    }

    function cO(bf, bg) {
      var bh;
      bf['opacity']['value'] = bg['opacity'], bg['color'] && bf['diffuse']['value']['copy'](bg['color']), bg['emissive'] && bf['emissive']['value']['copy'](bg['emissive'])['multiplyScalar'](bg['emissiveIntensity']), bg['map'] && (bf['map']['value'] = bg['map']), bg['alphaMap'] && (bf['alphaMap']['value'] = bg['alphaMap']), bg['specularMap'] && (bf['specularMap']['value'] = bg['specularMap']), bg['envMap'] && (bf['envMap']['value'] = bg['envMap'], bf['flipEnvMap']['value'] = bg['envMap']['isCubeTexture'] ? -0x1 : 0x1, bf['reflectivity']['value'] = bg['reflectivity'], bf['refractionRatio']['value'] = bg['refractionRatio'], bf['maxMipLevel']['value'] = bV['get'](bg['envMap'])['__maxMipLevel']), bg['lightMap'] && (bf['lightMap']['value'] = bg['lightMap'], bf['lightMapIntensity']['value'] = bg['lightMapIntensity']), bg['aoMap'] && (bf['aoMap']['value'] = bg['aoMap'], bf['aoMapIntensity']['value'] = bg['aoMapIntensity']), bg['map'] ? bh = bg['map'] : bg['specularMap'] ? bh = bg['specularMap'] : bg['displacementMap'] ? bh = bg['displacementMap'] : bg['normalMap'] ? bh = bg['normalMap'] : bg['bumpMap'] ? bh = bg['bumpMap'] : bg['roughnessMap'] ? bh = bg['roughnessMap'] : bg['metalnessMap'] ? bh = bg['metalnessMap'] : bg['alphaMap'] ? bh = bg['alphaMap'] : bg['emissiveMap'] && (bh = bg['emissiveMap']), void 0x0 !== bh && (bh['isWebGLRenderTarget'] && (bh = bh['texture']), !0x0 === bh['matrixAutoUpdate'] && bh['updateMatrix'](), bf['uvTransform']['value']['copy'](bh['matrix']));
    }

    function cP(bf, bg) {
      bf['specular']['value']['copy'](bg['specular']), bf['shininess']['value'] = Math['max'](bg['shininess'], 0.0001), bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']), bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'], bf['bumpScale']['value'] = bg['bumpScale'], bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1)), bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'], bf['normalScale']['value']['copy'](bg['normalScale']), bg['side'] === bU && bf['normalScale']['value']['negate']()), bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']);
    }

    function cQ(bf, bg) {
      bf['roughness']['value'] = bg['roughness'], bf['metalness']['value'] = bg['metalness'], bg['roughnessMap'] && (bf['roughnessMap']['value'] = bg['roughnessMap']), bg['metalnessMap'] && (bf['metalnessMap']['value'] = bg['metalnessMap']), bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']), bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'], bf['bumpScale']['value'] = bg['bumpScale'], bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1)), bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'], bf['normalScale']['value']['copy'](bg['normalScale']), bg['side'] === bU && bf['normalScale']['value']['negate']()), bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'], bf['displacementScale']['value'] = bg['displacementScale'], bf['displacementBias']['value'] = bg['displacementBias']), bg['envMap'] && (bf['envMapIntensity']['value'] = bg['envMapIntensity']);
    }
    cJ['setAnimationLoop'](function(bf) {
      cC['isPresenting']() || cI && cI(bf);
    }), 'undefined' != typeof window && cJ['setContext'](window), this['setAnimationLoop'] = function(bf) {
      cI = bf, cC['setAnimationLoop'](bf), cJ['start']();
    }, this['render'] = function(bf, bg) {
      var bh, bi;
      if (void 0x0 !== arguments[0x2] && (console['warn']('THREE.WebGLRenderer.render():\x20the\x20renderTarget\x20argument\x20has\x20been\x20removed.\x20Use\x20.setRenderTarget()\x20instead.'), bh = arguments[0x2]), void 0x0 !== arguments[0x3] && (console['warn']('THREE.WebGLRenderer.render():\x20the\x20forceClear\x20argument\x20has\x20been\x20removed.\x20Use\x20.clear()\x20instead.'), bi = arguments[0x3]), bg && bg['isCamera']) {
        if (!c9) {
          cg['geometry'] = null, cg['program'] = null, cg['wireframe'] = !0x1, cf = -0x1, ch = null, !0x0 === bf['autoUpdate'] && bf['updateMatrixWorld'](), null === bg['parent'] && bg['updateMatrixWorld'](), cC['enabled'] && (bg = cC['getCamera'](bg)), (bO = c2['get'](bf, bg))['init'](), bf['onBeforeRender'](c8, bf, bg, bh || cd), cw['multiplyMatrices'](bg['projectionMatrix'], bg['matrixWorldInverse']), cs['setFromMatrix'](cw), cv = this['localClippingEnabled'], cu = ct['init'](this['clippingPlanes'], cv, bg), (bN = c1['get'](bf, bg))['init'](),
            function bf(bg, bh, bi, bF) {
              if (!0x1 === bg['visible']) return;
              var bG = bg['layers']['test'](bh['layers']);
              if (bG)
                if (bg['isGroup']) bi = bg['renderOrder'];
                else if (bg['isLight']) bO['pushLight'](bg), bg['castShadow'] && bO['pushShadow'](bg);
              else if (bg['isSprite']) {
                if (!bg['frustumCulled'] || cs['intersectsSprite'](bg)) {
                  bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw);
                  var bH = bZ['update'](bg),
                    bI = bg['material'];
                  bI['visible'] && bN['push'](bg, bH, bI, bi, cx['z'], null);
                }
              } else if (bg['isImmediateRenderObject']) bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw), bN['push'](bg, null, bg['material'], bi, cx['z'], null);
              else if ((bg['isMesh'] || bg['isLine'] || bg['isPoints']) && (bg['isSkinnedMesh'] && bg['skeleton']['update'](), !bg['frustumCulled'] || cs['intersectsObject'](bg))) {
                bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw);
                var bH = bZ['update'](bg),
                  bI = bg['material'];
                if (Array['isArray'](bI))
                  for (var bJ = bH['groups'], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                    var bM = bJ[bK],
                      bP = bI[bM['materialIndex']];
                    bP && bP['visible'] && bN['push'](bg, bH, bP, bi, cx['z'], bM);
                  } else bI['visible'] && bN['push'](bg, bH, bI, bi, cx['z'], null);
              }
              var bQ = bg['children'];
              for (var bK = 0x0, bL = bQ['length']; bK < bL; bK++) bf(bQ[bK], bh, bi, bF);
            }(bf, bg, 0x0, c8['sortObjects']), !0x0 === c8['sortObjects'] && bN['sort'](), cu && ct['beginShadows']();
          var bF = bO['state']['shadowsArray'];
          cD['render'](bF, bf, bg), bO['setupLights'](bg), cu && ct['endShadows'](), this['info']['autoReset'] && this['info']['reset'](), void 0x0 !== bh && this['setRenderTarget'](bh), c3['render'](bN, bf, bg, bi);
          var bG = bN['opaque'],
            bH = bN['transparent'];
          if (bf['overrideMaterial']) {
            var bI = bf['overrideMaterial'];
            bG['length'] && cK(bG, bf, bg, bI), bH['length'] && cK(bH, bf, bg, bI);
          } else bG['length'] && cK(bG, bf, bg), bH['length'] && cK(bH, bf, bg);
          bf['onAfterRender'](c8, bf, bg), null !== cd && (bW['updateRenderTargetMipmap'](cd), bW['updateMultisampleRenderTarget'](cd)), bS['buffers']['depth']['setTest'](!0x0), bS['buffers']['depth']['setMask'](!0x0), bS['buffers']['color']['setMask'](!0x0), bS['setPolygonOffset'](!0x1), cC['enabled'] && cC['submitFrame'](), bN = null, bO = null;
        }
      } else console['error']('THREE.WebGLRenderer.render:\x20camera\x20is\x20not\x20an\x20instance\x20of\x20THREE.Camera.');
    }, this['setFramebuffer'] = function(bf) {
      ca !== bf && bP['bindFramebuffer'](0x8d40, bf), ca = bf;
    }, this['getActiveCubeFace'] = function() {
      return cb;
    }, this['getActiveMipMapLevel'] = function() {
      return cc;
    }, this['getRenderTarget'] = function() {
      return cd;
    }, this['setRenderTarget'] = function(bf, bg, bh) {
      cd = bf, cb = bg, cc = bh, bf && void 0x0 === bV['get'](bf)['__webglFramebuffer'] && bW['setupRenderTarget'](bf);
      var bi = ca,
        bF = !0x1;
      if (bf) {
        var bG = bV['get'](bf)['__webglFramebuffer'];
        bf['isWebGLRenderTargetCube'] ? (bi = bG[bg || 0x0], bF = !0x0) : bi = bf['isWebGLMultisampleRenderTarget'] ? bV['get'](bf)['__webglMultisampledFramebuffer'] : bG, cj['copy'](bf['viewport']), ck['copy'](bf['scissor']), cl = bf['scissorTest'];
      } else cj['copy'](cp)['multiplyScalar'](co), ck['copy'](cq)['multiplyScalar'](co), cl = cr;
      if (ce !== bi && (bP['bindFramebuffer'](0x8d40, bi), ce = bi), bS['viewport'](cj), bS['scissor'](ck), bS['setScissorTest'](cl), bF) {
        var bH = bV['get'](bf['texture']);
        bP['framebufferTexture2D'](0x8d40, 0x8ce0, 0x8515 + (bg || 0x0), bH['__webglTexture'], bh || 0x0);
      }
    }, this['readRenderTargetPixels'] = function(bf, bg, bh, bi, bF, bG, bH) {
      if (bf && bf['isWebGLRenderTarget']) {
        var bI = bV['get'](bf)['__webglFramebuffer'];
        if (bf['isWebGLRenderTargetCube'] && void 0x0 !== bH && (bI = bI[bH]), bI) {
          var bJ = !0x1;
          bI !== ce && (bP['bindFramebuffer'](0x8d40, bI), bJ = !0x0);
          try {
            var bK = bf['texture'],
              bL = bK['format'],
              bM = bK['type'];
            if (bL !== d9 && c7['convert'](bL) !== bP['getParameter'](0x8b9b)) return void console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20in\x20RGBA\x20or\x20implementation\x20defined\x20format.');
            if (!(bM === cV || c7['convert'](bM) === bP['getParameter'](0x8b9a) || bM === d1 && (bR['isWebGL2'] || bQ['get']('OES_texture_float') || bQ['get']('WEBGL_color_buffer_float')) || bM === d2 && (bR['isWebGL2'] ? bQ['get']('EXT_color_buffer_float') : bQ['get']('EXT_color_buffer_half_float')))) return void console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20in\x20UnsignedByteType\x20or\x20implementation\x20defined\x20type.');
            0x8cd5 === bP['checkFramebufferStatus'](0x8d40) ? bg >= 0x0 && bg <= bf['width'] - bi && bh >= 0x0 && bh <= bf['height'] - bF && bP['readPixels'](bg, bh, bi, bF, c7['convert'](bL), c7['convert'](bM), bG) : console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20readPixels\x20from\x20renderTarget\x20failed.\x20Framebuffer\x20not\x20complete.');
          } finally {
            bJ && bP['bindFramebuffer'](0x8d40, ce);
          }
        }
      } else console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20THREE.WebGLRenderTarget.');
    }, this['copyFramebufferToTexture'] = function(bf, bg, bh) {
      var bi = bg['image']['width'],
        bF = bg['image']['height'],
        bG = c7['convert'](bg['format']);
      bW['setTexture2D'](bg, 0x0), bP['copyTexImage2D'](0xde1, bh || 0x0, bG, bf['x'], bf['y'], bi, bF, 0x0);
    }, this['copyTextureToTexture'] = function(bf, bg, bh, bi) {
      var bF = bg['image']['width'],
        bG = bg['image']['height'],
        bH = c7['convert'](bh['format']),
        bI = c7['convert'](bh['type']);
      bW['setTexture2D'](bh, 0x0), bg['isDataTexture'] ? bP['texSubImage2D'](0xde1, bi || 0x0, bf['x'], bf['y'], bF, bG, bH, bI, bg['image']['data']) : bP['texSubImage2D'](0xde1, bi || 0x0, bf['x'], bf['y'], bH, bI, bg['image']);
    };
  }

  function ae3(bf, bg) {
    this['name'] = '', this['color'] = new w7(bf), this['density'] = void 0x0 !== bg ? bg : 0.00025;
  }

  function ae6(bf, bg, bh) {
    this['name'] = '', this['color'] = new w7(bf), this['near'] = void 0x0 !== bg ? bg : 0x1, this['far'] = void 0x0 !== bh ? bh : 0x3e8;
  }

  function aea() {
    yT['call'](this), this['type'] = 'Scene', this['background'] = null, this['fog'] = null, this['overrideMaterial'] = null, this['autoUpdate'] = !0x0;
  }

  function aeb(bf, bg) {
    this['array'] = bf, this['stride'] = bg, this['count'] = void 0x0 !== bf ? bf['length'] / bg : 0x0, this['dynamic'] = !0x1, this['updateRange'] = {
      'offset': 0x0,
      'count': -0x1
    }, this['version'] = 0x0;
  }

  function aee(bf, bg, bh, bi) {
    this['data'] = bf, this['itemSize'] = bg, this['offset'] = bh, this['normalized'] = !0x0 === bi;
  }

  function aej(bf) {
    Kf['call'](this), this['type'] = 'SpriteMaterial', this['color'] = new w7(0xffffff), this['map'] = null, this['rotation'] = 0x0, this['sizeAttenuation'] = !0x0, this['lights'] = !0x1, this['transparent'] = !0x0, this['setValues'](bf);
  }

  function ael(bf) {
    if (yT['call'](this), this['type'] = 'Sprite', void 0x0 === a6I) {
      a6I = new Gf();
      var bg = new aeb(new Float32Array([-0.5, -0.5, 0x0, 0x0, 0x0, 0.5, -0.5, 0x0, 0x1, 0x0, 0.5, 0.5, 0x0, 0x1, 0x1, -0.5, 0.5, 0x0, 0x0, 0x1]), 0x5);
      a6I['setIndex']([0x0, 0x1, 0x2, 0x0, 0x2, 0x3]), a6I['addAttribute']('position', new aee(bg, 0x3, 0x0, !0x1)), a6I['addAttribute']('uv', new aee(bg, 0x2, 0x3, !0x1));
    }
    this['geometry'] = a6I, this['material'] = void 0x0 !== bf ? bf : new aej(), this['center'] = new eC(0.5, 0.5);
  }

  function aeo() {
    yT['call'](this), this['type'] = 'LOD', Object['defineProperties'](this, {
      'levels': {
        'enumerable': !0x0,
        'value': []
      }
    });
  }

  function aep(bf, bg) {
    bf && bf['isGeometry'] && console['error']('THREE.SkinnedMesh\x20no\x20longer\x20supports\x20THREE.Geometry.\x20Use\x20THREE.BufferGeometry\x20instead.'), KY['call'](this, bf, bg), this['type'] = 'SkinnedMesh', this['bindMode'] = 'attached', this['bindMatrix'] = new mR(), this['bindMatrixInverse'] = new mR();
  }

  function aes(bf, bg) {
    if (bf = bf || [], this['bones'] = bf['slice'](0x0), this['boneMatrices'] = new Float32Array(0x10 * this['bones']['length']), void 0x0 === bg) this['calculateInverses']();
    else if (this['bones']['length'] === bg['length']) this['boneInverses'] = bg['slice'](0x0);
    else {
      console['warn']('THREE.Skeleton\x20boneInverses\x20is\x20the\x20wrong\x20length.'), this['boneInverses'] = [];
      for (var bh = 0x0, bi = this['bones']['length']; bh < bi; bh++) this['boneInverses']['push'](new mR());
    }
  }

  function aex() {
    yT['call'](this), this['type'] = 'Bone';
  }

  function aey(bf) {
    Kf['call'](this), this['type'] = 'LineBasicMaterial', this['color'] = new w7(0xffffff), this['linewidth'] = 0x1, this['linecap'] = 'round', this['linejoin'] = 'round', this['lights'] = !0x1, this['setValues'](bf);
  }

  function aeA(bf, bg, bh) {
    0x1 === bh && console['error']('THREE.Line:\x20parameter\x20THREE.LinePieces\x20no\x20longer\x20supported.\x20Use\x20THREE.LineSegments\x20instead.'), yT['call'](this), this['type'] = 'Line', this['geometry'] = void 0x0 !== bf ? bf : new Gf(), this['material'] = void 0x0 !== bg ? bg : new aey({
      'color': 0xffffff * Math['random']()
    });
  }

  function aeE(bf, bg) {
    aeA['call'](this, bf, bg), this['type'] = 'LineSegments';
  }

  function aeH(bf, bg) {
    aeA['call'](this, bf, bg), this['type'] = 'LineLoop';
  }

  function aeK(bf) {
    Kf['call'](this), this['type'] = 'PointsMaterial', this['color'] = new w7(0xffffff), this['map'] = null, this['size'] = 0x1, this['sizeAttenuation'] = !0x0, this['morphTargets'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
  }

  function aeM(bf, bg) {
    yT['call'](this), this['type'] = 'Points', this['geometry'] = void 0x0 !== bf ? bf : new Gf(), this['material'] = void 0x0 !== bg ? bg : new aeK({
      'color': 0xffffff * Math['random']()
    });
  }

  function aeP(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
    lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ), this['format'] = void 0x0 !== bH ? bH : d8, this['minFilter'] = void 0x0 !== bG ? bG : cS, this['magFilter'] = void 0x0 !== bF ? bF : cS, this['generateMipmaps'] = !0x1;
  }

  function aeZ(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM) {
    lW['call'](this, null, bG, bH, bI, bJ, bK, bi, bF, bL, bM), this['image'] = {
      'width': bg,
      'height': bh
    }, this['mipmaps'] = bf, this['flipY'] = !0x1, this['generateMipmaps'] = !0x1;
  }

  function afc(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
    lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ), this['needsUpdate'] = !0x0;
  }

  function afm(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
    if ((bK = void 0x0 !== bK ? bK : dd) !== dd && bK !== de) throw new Error('DepthTexture\x20format\x20must\x20be\x20either\x20THREE.DepthFormat\x20or\x20THREE.DepthStencilFormat');
    void 0x0 === bh && bK === dd && (bh = cY), void 0x0 === bh && bK === de && (bh = d6), lW['call'](this, null, bi, bF, bG, bH, bI, bK, bh, bJ), this['image'] = {
      'width': bf,
      'height': bg
    }, this['magFilter'] = void 0x0 !== bH ? bH : cP, this['minFilter'] = void 0x0 !== bI ? bI : cP, this['flipY'] = !0x1, this['generateMipmaps'] = !0x1;
  }

  function afx(bf) {
    Gf['call'](this), this['type'] = 'WireframeGeometry';
    var bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM = [],
      bN = [0x0, 0x0],
      bO = {},
      bP = ['a', 'b', 'c'];
    if (bf && bf['isGeometry']) {
      var bQ = bf['faces'];
      for (bg = 0x0, bi = bQ['length']; bg < bi; bg++) {
        var bR = bQ[bg];
        for (bh = 0x0; bh < 0x3; bh++) bI = bR[bP[bh]], bJ = bR[bP[(bh + 0x1) % 0x3]], bN[0x0] = Math['min'](bI, bJ), bN[0x1] = Math['max'](bI, bJ), void 0x0 === bO[bK = bN[0x0] + ',' + bN[0x1]] && (bO[bK] = {
          'index1': bN[0x0],
          'index2': bN[0x1]
        });
      }
      for (bK in bO) bH = bO[bK], bL = bf['vertices'][bH['index1']], bM['push'](bL['x'], bL['y'], bL['z']), bL = bf['vertices'][bH['index2']], bM['push'](bL['x'], bL['y'], bL['z']);
    } else if (bf && bf['isBufferGeometry']) {
      var bS, bT, bU, bV, bW, bX, bY;
      if (bL = new eK(), null !== bf['index']) {
        for (bS = bf['attributes']['position'], bT = bf['index'], 0x0 === (bU = bf['groups'])['length'] && (bU = [{
            'start': 0x0,
            'count': bT['count'],
            'materialIndex': 0x0
          }]), bF = 0x0, bG = bU['length']; bF < bG; ++bF)
          for (bg = bW = (bV = bU[bF])['start'], bi = bW + bV['count']; bg < bi; bg += 0x3)
            for (bh = 0x0; bh < 0x3; bh++) bI = bT['getX'](bg + bh), bJ = bT['getX'](bg + (bh + 0x1) % 0x3), bN[0x0] = Math['min'](bI, bJ), bN[0x1] = Math['max'](bI, bJ), void 0x0 === bO[bK = bN[0x0] + ',' + bN[0x1]] && (bO[bK] = {
              'index1': bN[0x0],
              'index2': bN[0x1]
            });
        for (bK in bO) bH = bO[bK], bL['fromBufferAttribute'](bS, bH['index1']), bM['push'](bL['x'], bL['y'], bL['z']), bL['fromBufferAttribute'](bS, bH['index2']), bM['push'](bL['x'], bL['y'], bL['z']);
      } else
        for (bg = 0x0, bi = (bS = bf['attributes']['position'])['count'] / 0x3; bg < bi; bg++)
          for (bh = 0x0; bh < 0x3; bh++) bX = 0x3 * bg + bh, bL['fromBufferAttribute'](bS, bX), bM['push'](bL['x'], bL['y'], bL['z']), bY = 0x3 * bg + (bh + 0x1) % 0x3, bL['fromBufferAttribute'](bS, bY), bM['push'](bL['x'], bL['y'], bL['z']);
    }
    this['addAttribute']('position', new Be(bM, 0x3));
  }

  function afW(bf, bg, bh) {
    AH['call'](this), this['type'] = 'ParametricGeometry', this['parameters'] = {
      'func': bf,
      'slices': bg,
      'stacks': bh
    }, this['fromBufferGeometry'](new ag0(bf, bg, bh)), this['mergeVertices']();
  }

  function ag0(bf, bg, bh) {
    Gf['call'](this), this['type'] = 'ParametricBufferGeometry', this['parameters'] = {
      'func': bf,
      'slices': bg,
      'stacks': bh
    };
    var bi, bF, bG = [],
      bH = [],
      bI = [],
      bJ = [],
      bK = new eK(),
      bL = new eK(),
      bM = new eK(),
      bN = new eK(),
      bO = new eK();
    bf['length'] < 0x3 && console['error']('THREE.ParametricGeometry:\x20Function\x20must\x20now\x20modify\x20a\x20Vector3\x20as\x20third\x20parameter.');
    var bP = bg + 0x1;
    for (bi = 0x0; bi <= bh; bi++) {
      var bQ = bi / bh;
      for (bF = 0x0; bF <= bg; bF++) {
        var bR = bF / bg;
        bf(bR, bQ, bL), bH['push'](bL['x'], bL['y'], bL['z']), bR - 0.00001 >= 0x0 ? (bf(bR - 0.00001, bQ, bM), bN['subVectors'](bL, bM)) : (bf(bR + 0.00001, bQ, bM), bN['subVectors'](bM, bL)), bQ - 0.00001 >= 0x0 ? (bf(bR, bQ - 0.00001, bM), bO['subVectors'](bL, bM)) : (bf(bR, bQ + 0.00001, bM), bO['subVectors'](bM, bL)), bK['crossVectors'](bN, bO)['normalize'](), bI['push'](bK['x'], bK['y'], bK['z']), bJ['push'](bR, bQ);
      }
    }
    for (bi = 0x0; bi < bh; bi++)
      for (bF = 0x0; bF < bg; bF++) {
        var bS = bi * bP + bF,
          bT = bi * bP + bF + 0x1,
          bU = (bi + 0x1) * bP + bF + 0x1,
          bV = (bi + 0x1) * bP + bF;
        bG['push'](bS, bT, bV), bG['push'](bT, bU, bV);
      }
    this['setIndex'](bG), this['addAttribute']('position', new Be(bH, 0x3)), this['addAttribute']('normal', new Be(bI, 0x3)), this['addAttribute']('uv', new Be(bJ, 0x2));
  }

  function agm(bf, bg, bh, bi) {
    AH['call'](this), this['type'] = 'PolyhedronGeometry', this['parameters'] = {
      'vertices': bf,
      'indices': bg,
      'radius': bh,
      'detail': bi
    }, this['fromBufferGeometry'](new agr(bf, bg, bh, bi)), this['mergeVertices']();
  }

  function agr(bf, bg, bh, bi) {
    Gf['call'](this), this['type'] = 'PolyhedronBufferGeometry', this['parameters'] = {
      'vertices': bf,
      'indices': bg,
      'radius': bh,
      'detail': bi
    }, bh = bh || 0x1;
    var bF = [],
      bG = [];

    function bH(bf, bg, bh, bi) {
      var bF, bG, bH = Math['pow'](0x2, bi),
        bJ = [];
      for (bF = 0x0; bF <= bH; bF++) {
        bJ[bF] = [];
        var bK = bf['clone']()['lerp'](bh, bF / bH),
          bL = bg['clone']()['lerp'](bh, bF / bH),
          bM = bH - bF;
        for (bG = 0x0; bG <= bM; bG++) bJ[bF][bG] = 0x0 === bG && bF === bH ? bK : bK['clone']()['lerp'](bL, bG / bM);
      }
      for (bF = 0x0; bF < bH; bF++)
        for (bG = 0x0; bG < 0x2 * (bH - bF) - 0x1; bG++) {
          var bN = Math['floor'](bG / 0x2);
          bG % 0x2 == 0x0 ? (bI(bJ[bF][bN + 0x1]), bI(bJ[bF + 0x1][bN]), bI(bJ[bF][bN])) : (bI(bJ[bF][bN + 0x1]), bI(bJ[bF + 0x1][bN + 0x1]), bI(bJ[bF + 0x1][bN]));
        }
    }

    function bI(bf) {
      bF['push'](bf['x'], bf['y'], bf['z']);
    }

    function bJ(bg, bh) {
      var bi = 0x3 * bg;
      bh['x'] = bf[bi + 0x0], bh['y'] = bf[bi + 0x1], bh['z'] = bf[bi + 0x2];
    }

    function bK(bf, bg, bh, bi) {
      bi < 0x0 && 0x1 === bf['x'] && (bG[bg] = bf['x'] - 0x1), 0x0 === bh['x'] && 0x0 === bh['z'] && (bG[bg] = bi / 0x2 / Math['PI'] + 0.5);
    }

    function bL(bf) {
      return Math['atan2'](bf['z'], -bf['x']);
    }! function(bf) {
      for (var bh = new eK(), bi = new eK(), bF = new eK(), bG = 0x0; bG < bg['length']; bG += 0x3) bJ(bg[bG + 0x0], bh), bJ(bg[bG + 0x1], bi), bJ(bg[bG + 0x2], bF), bH(bh, bi, bF, bf);
    }(bi = bi || 0x0),
    function(bf) {
      for (var bg = new eK(), bh = 0x0; bh < bF['length']; bh += 0x3) bg['x'] = bF[bh + 0x0], bg['y'] = bF[bh + 0x1], bg['z'] = bF[bh + 0x2], bg['normalize']()['multiplyScalar'](bf), bF[bh + 0x0] = bg['x'], bF[bh + 0x1] = bg['y'], bF[bh + 0x2] = bg['z'];
    }(bh),
    function() {
      for (var bf = new eK(), bg = 0x0; bg < bF['length']; bg += 0x3) {
        bf['x'] = bF[bg + 0x0], bf['y'] = bF[bg + 0x1], bf['z'] = bF[bg + 0x2];
        var bh = bL(bf) / 0x2 / Math['PI'] + 0.5,
          bi = (bH = bf, Math['atan2'](-bH['y'], Math['sqrt'](bH['x'] * bH['x'] + bH['z'] * bH['z'])) / Math['PI'] + 0.5);
        bG['push'](bh, 0x1 - bi);
      }
      var bH;
      (function() {
        for (var bf = new eK(), bg = new eK(), bh = new eK(), bi = new eK(), bH = new eC(), bI = new eC(), bJ = new eC(), bM = 0x0, bN = 0x0; bM < bF['length']; bM += 0x9, bN += 0x6) {
          bf['set'](bF[bM + 0x0], bF[bM + 0x1], bF[bM + 0x2]), bg['set'](bF[bM + 0x3], bF[bM + 0x4], bF[bM + 0x5]), bh['set'](bF[bM + 0x6], bF[bM + 0x7], bF[bM + 0x8]), bH['set'](bG[bN + 0x0], bG[bN + 0x1]), bI['set'](bG[bN + 0x2], bG[bN + 0x3]), bJ['set'](bG[bN + 0x4], bG[bN + 0x5]), bi['copy'](bf)['add'](bg)['add'](bh)['divideScalar'](0x3);
          var bO = bL(bi);
          bK(bH, bN + 0x0, bf, bO), bK(bI, bN + 0x2, bg, bO), bK(bJ, bN + 0x4, bh, bO);
        }
      }(), function() {
        for (var bf = 0x0; bf < bG['length']; bf += 0x6) {
          var bg = bG[bf + 0x0],
            bh = bG[bf + 0x2],
            bi = bG[bf + 0x4],
            bF = Math['max'](bg, bh, bi),
            bH = Math['min'](bg, bh, bi);
          bF > 0.9 && bH < 0.1 && (bg < 0.2 && (bG[bf + 0x0] += 0x1), bh < 0.2 && (bG[bf + 0x2] += 0x1), bi < 0.2 && (bG[bf + 0x4] += 0x1));
        }
      }());
    }(), this['addAttribute']('position', new Be(bF, 0x3)), this['addAttribute']('normal', new Be(bF['slice'](), 0x3)), this['addAttribute']('uv', new Be(bG, 0x2)), 0x0 === bi ? this['computeVertexNormals']() : this['normalizeNormals']();
  }

  function ahr(bf, bg) {
    AH['call'](this), this['type'] = 'TetrahedronGeometry', this['parameters'] = {
      'radius': bf,
      'detail': bg
    }, this['fromBufferGeometry'](new ahu(bf, bg)), this['mergeVertices']();
  }

  function ahu(bf, bg) {
    agr['call'](this, [0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, 0x1, -0x1, 0x1, -0x1, -0x1], [0x2, 0x1, 0x0, 0x0, 0x3, 0x2, 0x1, 0x3, 0x0, 0x2, 0x3, 0x1], bf, bg), this['type'] = 'TetrahedronBufferGeometry', this['parameters'] = {
      'radius': bf,
      'detail': bg
    };
  }

  function ahx(bf, bg) {
    AH['call'](this), this['type'] = 'OctahedronGeometry', this['parameters'] = {
      'radius': bf,
      'detail': bg
    }, this['fromBufferGeometry'](new ahA(bf, bg)), this['mergeVertices']();
  }

  function ahA(bf, bg) {
    agr['call'](this, [0x1, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, -0x1], [0x0, 0x2, 0x4, 0x0, 0x4, 0x3, 0x0, 0x3, 0x5, 0x0, 0x5, 0x2, 0x1, 0x2, 0x5, 0x1, 0x5, 0x3, 0x1, 0x3, 0x4, 0x1, 0x4, 0x2], bf, bg), this['type'] = 'OctahedronBufferGeometry', this['parameters'] = {
      'radius': bf,
      'detail': bg
    };
  }

  function ahD(bf, bg) {
    AH['call'](this), this['type'] = 'IcosahedronGeometry', this['parameters'] = {
      'radius': bf,
      'detail': bg
    }, this['fromBufferGeometry'](new ahG(bf, bg)), this['mergeVertices']();
  }

  function ahG(bf, bg) {
    var bh = (0x1 + Math['sqrt'](0x5)) / 0x2,
      bi = [-0x1, bh, 0x0, 0x1, bh, 0x0, -0x1, -bh, 0x0, 0x1, -bh, 0x0, 0x0, -0x1, bh, 0x0, 0x1, bh, 0x0, -0x1, -bh, 0x0, 0x1, -bh, bh, 0x0, -0x1, bh, 0x0, 0x1, -bh, 0x0, -0x1, -bh, 0x0, 0x1];
    agr['call'](this, bi, [0x0, 0xb, 0x5, 0x0, 0x5, 0x1, 0x0, 0x1, 0x7, 0x0, 0x7, 0xa, 0x0, 0xa, 0xb, 0x1, 0x5, 0x9, 0x5, 0xb, 0x4, 0xb, 0xa, 0x2, 0xa, 0x7, 0x6, 0x7, 0x1, 0x8, 0x3, 0x9, 0x4, 0x3, 0x4, 0x2, 0x3, 0x2, 0x6, 0x3, 0x6, 0x8, 0x3, 0x8, 0x9, 0x4, 0x9, 0x5, 0x2, 0x4, 0xb, 0x6, 0x2, 0xa, 0x8, 0x6, 0x7, 0x9, 0x8, 0x1], bf, bg), this['type'] = 'IcosahedronBufferGeometry', this['parameters'] = {
      'radius': bf,
      'detail': bg
    };
  }

  function ahL(bf, bg) {
    AH['call'](this), this['type'] = 'DodecahedronGeometry', this['parameters'] = {
      'radius': bf,
      'detail': bg
    }, this['fromBufferGeometry'](new ahO(bf, bg)), this['mergeVertices']();
  }

  function ahO(bf, bg) {
    var bh = (0x1 + Math['sqrt'](0x5)) / 0x2,
      bi = 0x1 / bh,
      bF = [-0x1, -0x1, -0x1, -0x1, -0x1, 0x1, -0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, 0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, 0x0, -bi, -bh, 0x0, -bi, bh, 0x0, bi, -bh, 0x0, bi, bh, -bi, -bh, 0x0, -bi, bh, 0x0, bi, -bh, 0x0, bi, bh, 0x0, -bh, 0x0, -bi, bh, 0x0, -bi, -bh, 0x0, bi, bh, 0x0, bi];
    agr['call'](this, bF, [0x3, 0xb, 0x7, 0x3, 0x7, 0xf, 0x3, 0xf, 0xd, 0x7, 0x13, 0x11, 0x7, 0x11, 0x6, 0x7, 0x6, 0xf, 0x11, 0x4, 0x8, 0x11, 0x8, 0xa, 0x11, 0xa, 0x6, 0x8, 0x0, 0x10, 0x8, 0x10, 0x2, 0x8, 0x2, 0xa, 0x0, 0xc, 0x1, 0x0, 0x1, 0x12, 0x0, 0x12, 0x10, 0x6, 0xa, 0x2, 0x6, 0x2, 0xd, 0x6, 0xd, 0xf, 0x2, 0x10, 0x12, 0x2, 0x12, 0x3, 0x2, 0x3, 0xd, 0x12, 0x1, 0x9, 0x12, 0x9, 0xb, 0x12, 0xb, 0x3, 0x4, 0xe, 0xc, 0x4, 0xc, 0x0, 0x4, 0x0, 0x8, 0xb, 0x9, 0x5, 0xb, 0x5, 0x13, 0xb, 0x13, 0x7, 0x13, 0x5, 0xe, 0x13, 0xe, 0x4, 0x13, 0x4, 0x11, 0x1, 0xc, 0xe, 0x1, 0xe, 0x5, 0x1, 0x5, 0x9], bf, bg), this['type'] = 'DodecahedronBufferGeometry', this['parameters'] = {
      'radius': bf,
      'detail': bg
    };
  }

  function ahU(bf, bg, bh, bi, bF, bG) {
    AH['call'](this), this['type'] = 'TubeGeometry', this['parameters'] = {
      'path': bf,
      'tubularSegments': bg,
      'radius': bh,
      'radialSegments': bi,
      'closed': bF
    }, void 0x0 !== bG && console['warn']('THREE.TubeGeometry:\x20taper\x20has\x20been\x20removed.');
    var bH = new ai2(bf, bg, bh, bi, bF);
    this['tangents'] = bH['tangents'], this['normals'] = bH['normals'], this['binormals'] = bH['binormals'], this['fromBufferGeometry'](bH), this['mergeVertices']();
  }

  function ai2(bf, bg, bh, bi, bF) {
    Gf['call'](this), this['type'] = 'TubeBufferGeometry', this['parameters'] = {
      'path': bf,
      'tubularSegments': bg,
      'radius': bh,
      'radialSegments': bi,
      'closed': bF
    }, bg = bg || 0x40, bh = bh || 0x1, bi = bi || 0x8, bF = bF || !0x1;
    var bG = bf['computeFrenetFrames'](bg, bF);
    this['tangents'] = bG['tangents'], this['normals'] = bG['normals'], this['binormals'] = bG['binormals'];
    var bH, bI, bJ = new eK(),
      bK = new eK(),
      bL = new eC(),
      bM = new eK(),
      bN = [],
      bO = [],
      bP = [],
      bQ = [];

    function bR(bF) {
      bM = bf['getPointAt'](bF / bg, bM);
      var bH = bG['normals'][bF],
        bL = bG['binormals'][bF];
      for (bI = 0x0; bI <= bi; bI++) {
        var bP = bI / bi * Math['PI'] * 0x2,
          bQ = Math['sin'](bP),
          bR = -Math['cos'](bP);
        bK['x'] = bR * bH['x'] + bQ * bL['x'], bK['y'] = bR * bH['y'] + bQ * bL['y'], bK['z'] = bR * bH['z'] + bQ * bL['z'], bK['normalize'](), bO['push'](bK['x'], bK['y'], bK['z']), bJ['x'] = bM['x'] + bh * bK['x'], bJ['y'] = bM['y'] + bh * bK['y'], bJ['z'] = bM['z'] + bh * bK['z'], bN['push'](bJ['x'], bJ['y'], bJ['z']);
      }
    }! function() {
      for (bH = 0x0; bH < bg; bH++) bR(bH);
      bR(!0x1 === bF ? bg : 0x0),
        function() {
          for (bH = 0x0; bH <= bg; bH++)
            for (bI = 0x0; bI <= bi; bI++) bL['x'] = bH / bg, bL['y'] = bI / bi, bP['push'](bL['x'], bL['y']);
        }(),
        function() {
          for (bI = 0x1; bI <= bg; bI++)
            for (bH = 0x1; bH <= bi; bH++) {
              var bf = (bi + 0x1) * (bI - 0x1) + (bH - 0x1),
                bh = (bi + 0x1) * bI + (bH - 0x1),
                bF = (bi + 0x1) * bI + bH,
                bG = (bi + 0x1) * (bI - 0x1) + bH;
              bQ['push'](bf, bh, bG), bQ['push'](bh, bF, bG);
            }
        }();
    }(), this['setIndex'](bQ), this['addAttribute']('position', new Be(bN, 0x3)), this['addAttribute']('normal', new Be(bO, 0x3)), this['addAttribute']('uv', new Be(bP, 0x2));
  }

  function aiu(bf, bg, bh, bi, bF, bG, bH) {
    AH['call'](this), this['type'] = 'TorusKnotGeometry', this['parameters'] = {
      'radius': bf,
      'tube': bg,
      'tubularSegments': bh,
      'radialSegments': bi,
      'p': bF,
      'q': bG
    }, void 0x0 !== bH && console['warn']('THREE.TorusKnotGeometry:\x20heightScale\x20has\x20been\x20deprecated.\x20Use\x20.scale(\x20x,\x20y,\x20z\x20)\x20instead.'), this['fromBufferGeometry'](new aiC(bf, bg, bh, bi, bF, bG)), this['mergeVertices']();
  }

  function aiC(bf, bg, bh, bi, bF, bG) {
    Gf['call'](this), this['type'] = 'TorusKnotBufferGeometry', this['parameters'] = {
      'radius': bf,
      'tube': bg,
      'tubularSegments': bh,
      'radialSegments': bi,
      'p': bF,
      'q': bG
    }, bf = bf || 0x1, bg = bg || 0.4, bh = Math['floor'](bh) || 0x40, bi = Math['floor'](bi) || 0x8, bF = bF || 0x2, bG = bG || 0x3;
    var bH, bI, bJ = [],
      bK = [],
      bL = [],
      bM = [],
      bN = new eK(),
      bO = new eK(),
      bP = new eK(),
      bQ = new eK(),
      bR = new eK(),
      bS = new eK(),
      bT = new eK();
    for (bH = 0x0; bH <= bh; ++bH) {
      var bU = bH / bh * bF * Math['PI'] * 0x2;
      for (c2(bU, bF, bG, bf, bP), c2(bU + 0.01, bF, bG, bf, bQ), bS['subVectors'](bQ, bP), bT['addVectors'](bQ, bP), bR['crossVectors'](bS, bT), bT['crossVectors'](bR, bS), bR['normalize'](), bT['normalize'](), bI = 0x0; bI <= bi; ++bI) {
        var bV = bI / bi * Math['PI'] * 0x2,
          bW = -bg * Math['cos'](bV),
          bX = bg * Math['sin'](bV);
        bN['x'] = bP['x'] + (bW * bT['x'] + bX * bR['x']), bN['y'] = bP['y'] + (bW * bT['y'] + bX * bR['y']), bN['z'] = bP['z'] + (bW * bT['z'] + bX * bR['z']), bK['push'](bN['x'], bN['y'], bN['z']), bO['subVectors'](bN, bP)['normalize'](), bL['push'](bO['x'], bO['y'], bO['z']), bM['push'](bH / bh), bM['push'](bI / bi);
      }
    }
    for (bI = 0x1; bI <= bh; bI++)
      for (bH = 0x1; bH <= bi; bH++) {
        var bY = (bi + 0x1) * (bI - 0x1) + (bH - 0x1),
          bZ = (bi + 0x1) * bI + (bH - 0x1),
          c0 = (bi + 0x1) * bI + bH,
          c1 = (bi + 0x1) * (bI - 0x1) + bH;
        bJ['push'](bY, bZ, c1), bJ['push'](bZ, c0, c1);
      }

    function c2(bf, bg, bh, bi, bF) {
      var bG = Math['cos'](bf),
        bH = Math['sin'](bf),
        bI = bh / bg * bf,
        bJ = Math['cos'](bI);
      bF['x'] = bi * (0x2 + bJ) * 0.5 * bG, bF['y'] = bi * (0x2 + bJ) * bH * 0.5, bF['z'] = bi * Math['sin'](bI) * 0.5;
    }
    this['setIndex'](bJ), this['addAttribute']('position', new Be(bK, 0x3)), this['addAttribute']('normal', new Be(bL, 0x3)), this['addAttribute']('uv', new Be(bM, 0x2));
  }

  function aje(bf, bg, bh, bi, bF) {
    AH['call'](this), this['type'] = 'TorusGeometry', this['parameters'] = {
      'radius': bf,
      'tube': bg,
      'radialSegments': bh,
      'tubularSegments': bi,
      'arc': bF
    }, this['fromBufferGeometry'](new ajk(bf, bg, bh, bi, bF)), this['mergeVertices']();
  }

  function ajk(bf, bg, bh, bi, bF) {
    Gf['call'](this), this['type'] = 'TorusBufferGeometry', this['parameters'] = {
      'radius': bf,
      'tube': bg,
      'radialSegments': bh,
      'tubularSegments': bi,
      'arc': bF
    }, bf = bf || 0x1, bg = bg || 0.4, bh = Math['floor'](bh) || 0x8, bi = Math['floor'](bi) || 0x6, bF = bF || 0x2 * Math['PI'];
    var bG, bH, bI = [],
      bJ = [],
      bK = [],
      bL = [],
      bM = new eK(),
      bN = new eK(),
      bO = new eK();
    for (bG = 0x0; bG <= bh; bG++)
      for (bH = 0x0; bH <= bi; bH++) {
        var bP = bH / bi * bF,
          bQ = bG / bh * Math['PI'] * 0x2;
        bN['x'] = (bf + bg * Math['cos'](bQ)) * Math['cos'](bP), bN['y'] = (bf + bg * Math['cos'](bQ)) * Math['sin'](bP), bN['z'] = bg * Math['sin'](bQ), bJ['push'](bN['x'], bN['y'], bN['z']), bM['x'] = bf * Math['cos'](bP), bM['y'] = bf * Math['sin'](bP), bO['subVectors'](bN, bM)['normalize'](), bK['push'](bO['x'], bO['y'], bO['z']), bL['push'](bH / bi), bL['push'](bG / bh);
      }
    for (bG = 0x1; bG <= bh; bG++)
      for (bH = 0x1; bH <= bi; bH++) {
        var bR = (bi + 0x1) * bG + bH - 0x1,
          bS = (bi + 0x1) * (bG - 0x1) + bH - 0x1,
          bT = (bi + 0x1) * (bG - 0x1) + bH,
          bU = (bi + 0x1) * bG + bH;
        bI['push'](bR, bS, bU), bI['push'](bS, bT, bU);
      }
    this['setIndex'](bI), this['addAttribute']('position', new Be(bJ, 0x3)), this['addAttribute']('normal', new Be(bK, 0x3)), this['addAttribute']('uv', new Be(bL, 0x2));
  }
  Object['assign'](ae3['prototype'], {
    'isFogExp2': !0x0,
    'clone': function() {
      return new ae3(this['color'], this['density']);
    },
    'toJSON': function() {
      return {
        'type': 'FogExp2',
        'color': this['color']['getHex'](),
        'density': this['density']
      };
    }
  }), Object['assign'](ae6['prototype'], {
    'isFog': !0x0,
    'clone': function() {
      return new ae6(this['color'], this['near'], this['far']);
    },
    'toJSON': function() {
      return {
        'type': 'Fog',
        'color': this['color']['getHex'](),
        'near': this['near'],
        'far': this['far']
      };
    }
  }), aea['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': aea,
    'isScene': !0x0,
    'copy': function(bf, bg) {
      return yT['prototype']['copy']['call'](this, bf, bg), null !== bf['background'] && (this['background'] = bf['background']['clone']()), null !== bf['fog'] && (this['fog'] = bf['fog']['clone']()), null !== bf['overrideMaterial'] && (this['overrideMaterial'] = bf['overrideMaterial']['clone']()), this['autoUpdate'] = bf['autoUpdate'], this['matrixAutoUpdate'] = bf['matrixAutoUpdate'], this;
    },
    'toJSON': function(bf) {
      var bg = yT['prototype']['toJSON']['call'](this, bf);
      return null !== this['background'] && (bg['object']['background'] = this['background']['toJSON'](bf)), null !== this['fog'] && (bg['object']['fog'] = this['fog']['toJSON']()), bg;
    },
    'dispose': function() {
      this['dispatchEvent']({
        'type': 'dispose'
      });
    }
  }), Object['defineProperty'](aeb['prototype'], 'needsUpdate', {
    'set': function(bf) {
      !0x0 === bf && this['version']++;
    }
  }), Object['assign'](aeb['prototype'], {
    'isInterleavedBuffer': !0x0,
    'onUploadCallback': function() {},
    'setArray': function(bf) {
      if (Array['isArray'](bf)) throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
      return this['count'] = void 0x0 !== bf ? bf['length'] / this['stride'] : 0x0, this['array'] = bf, this;
    },
    'setDynamic': function(bf) {
      return this['dynamic'] = bf, this;
    },
    'copy': function(bf) {
      return this['array'] = new bf['array']['constructor'](bf['array']), this['count'] = bf['count'], this['stride'] = bf['stride'], this['dynamic'] = bf['dynamic'], this;
    },
    'copyAt': function(bf, bg, bh) {
      bf *= this['stride'], bh *= bg['stride'];
      for (var bi = 0x0, bF = this['stride']; bi < bF; bi++) this['array'][bf + bi] = bg['array'][bh + bi];
      return this;
    },
    'set': function(bf, bg) {
      return void 0x0 === bg && (bg = 0x0), this['array']['set'](bf, bg), this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'onUpload': function(bf) {
      return this['onUploadCallback'] = bf, this;
    }
  }), Object['defineProperties'](aee['prototype'], {
    'count': {
      'get': function() {
        return this['data']['count'];
      }
    },
    'array': {
      'get': function() {
        return this['data']['array'];
      }
    }
  }), Object['assign'](aee['prototype'], {
    'isInterleavedBufferAttribute': !0x0,
    'setX': function(bf, bg) {
      return this['data']['array'][bf * this['data']['stride'] + this['offset']] = bg, this;
    },
    'setY': function(bf, bg) {
      return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x1] = bg, this;
    },
    'setZ': function(bf, bg) {
      return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x2] = bg, this;
    },
    'setW': function(bf, bg) {
      return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x3] = bg, this;
    },
    'getX': function(bf) {
      return this['data']['array'][bf * this['data']['stride'] + this['offset']];
    },
    'getY': function(bf) {
      return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x1];
    },
    'getZ': function(bf) {
      return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x2];
    },
    'getW': function(bf) {
      return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x3];
    },
    'setXY': function(bf, bg, bh) {
      return bf = bf * this['data']['stride'] + this['offset'], this['data']['array'][bf + 0x0] = bg, this['data']['array'][bf + 0x1] = bh, this;
    },
    'setXYZ': function(bf, bg, bh, bi) {
      return bf = bf * this['data']['stride'] + this['offset'], this['data']['array'][bf + 0x0] = bg, this['data']['array'][bf + 0x1] = bh, this['data']['array'][bf + 0x2] = bi, this;
    },
    'setXYZW': function(bf, bg, bh, bi, bF) {
      return bf = bf * this['data']['stride'] + this['offset'], this['data']['array'][bf + 0x0] = bg, this['data']['array'][bf + 0x1] = bh, this['data']['array'][bf + 0x2] = bi, this['data']['array'][bf + 0x3] = bF, this;
    }
  }), aej['prototype'] = Object['create'](Kf['prototype']), aej['prototype']['constructor'] = aej, aej['prototype']['isSpriteMaterial'] = !0x0, aej['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['map'] = bf['map'], this['rotation'] = bf['rotation'], this['sizeAttenuation'] = bf['sizeAttenuation'], this;
  }, ael['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': ael,
    'isSprite': !0x0,
    'raycast': function() {
      var bf = new eK(),
        bg = new eK(),
        bh = new eK(),
        bi = new eC(),
        bF = new eC(),
        bG = new mR(),
        bH = new eK(),
        bI = new eK(),
        bJ = new eK(),
        bK = new eC(),
        bL = new eC(),
        bM = new eC();

      function bN(bf, bg, bh, bH, bI, bJ) {
        bi['subVectors'](bf, bh)['addScalar'](0.5)['multiply'](bH), void 0x0 !== bI ? (bF['x'] = bJ * bi['x'] - bI * bi['y'], bF['y'] = bI * bi['x'] + bJ * bi['y']) : bF['copy'](bi), bf['copy'](bg), bf['x'] += bF['x'], bf['y'] += bF['y'], bf['applyMatrix4'](bG);
      }
      return function(bi, bF) {
        bg['setFromMatrixScale'](this['matrixWorld']), bG['getInverse'](this['modelViewMatrix'])['premultiply'](this['matrixWorld']), bh['setFromMatrixPosition'](this['modelViewMatrix']);
        var bO, bP, bQ = this['material']['rotation'];
        0x0 !== bQ && (bP = Math['cos'](bQ), bO = Math['sin'](bQ));
        var bR = this['center'];
        bN(bH['set'](-0.5, -0.5, 0x0), bh, bR, bg, bO, bP), bN(bI['set'](0.5, -0.5, 0x0), bh, bR, bg, bO, bP), bN(bJ['set'](0.5, 0.5, 0x0), bh, bR, bg, bO, bP), bK['set'](0x0, 0x0), bL['set'](0x1, 0x0), bM['set'](0x1, 0x1);
        var bS = bi['ray']['intersectTriangle'](bH, bI, bJ, !0x1, bf);
        if (null !== bS || (bN(bI['set'](-0.5, 0.5, 0x0), bh, bR, bg, bO, bP), bL['set'](0x0, 0x1), null !== (bS = bi['ray']['intersectTriangle'](bH, bJ, bI, !0x1, bf)))) {
          var bT = bi['ray']['origin']['distanceTo'](bf);
          bT < bi['near'] || bT > bi['far'] || bF['push']({
            'distance': bT,
            'point': bf['clone'](),
            'uv': KS['getUV'](bf, bH, bI, bJ, bK, bL, bM, new eC()),
            'face': null,
            'object': this
          });
        }
      };
    }(),
    'clone': function() {
      return new this['constructor'](this['material'])['copy'](this);
    },
    'copy': function(bf) {
      return yT['prototype']['copy']['call'](this, bf), void 0x0 !== bf['center'] && this['center']['copy'](bf['center']), this;
    }
  }), aeo['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': aeo,
    'isLOD': !0x0,
    'copy': function(bf) {
      yT['prototype']['copy']['call'](this, bf, !0x1);
      for (var bg = bf['levels'], bh = 0x0, bi = bg['length']; bh < bi; bh++) {
        var bF = bg[bh];
        this['addLevel'](bF['object']['clone'](), bF['distance']);
      }
      return this;
    },
    'addLevel': function(bf, bg) {
      void 0x0 === bg && (bg = 0x0), bg = Math['abs'](bg);
      for (var bh = this['levels'], bi = 0x0; bi < bh['length'] && !(bg < bh[bi]['distance']); bi++);
      return bh['splice'](bi, 0x0, {
        'distance': bg,
        'object': bf
      }), this['add'](bf), this;
    },
    'getObjectForDistance': function(bf) {
      for (var bg = this['levels'], bh = 0x1, bi = bg['length']; bh < bi && !(bf < bg[bh]['distance']); bh++);
      return bg[bh - 0x1]['object'];
    },
    'raycast': (a6J = new eK(), function(bf, bg) {
      a6J['setFromMatrixPosition'](this['matrixWorld']);
      var bh = bf['ray']['origin']['distanceTo'](a6J);
      this['getObjectForDistance'](bh)['raycast'](bf, bg);
    }),
    'update': function() {
      var bf = new eK(),
        bg = new eK();
      return function(bh) {
        var bi = this['levels'];
        if (bi['length'] > 0x1) {
          bf['setFromMatrixPosition'](bh['matrixWorld']), bg['setFromMatrixPosition'](this['matrixWorld']);
          var bF = bf['distanceTo'](bg);
          bi[0x0]['object']['visible'] = !0x0;
          for (var bG = 0x1, bH = bi['length']; bG < bH && bF >= bi[bG]['distance']; bG++) bi[bG - 0x1]['object']['visible'] = !0x1, bi[bG]['object']['visible'] = !0x0;
          for (; bG < bH; bG++) bi[bG]['object']['visible'] = !0x1;
        }
      };
    }(),
    'toJSON': function(bf) {
      var bg = yT['prototype']['toJSON']['call'](this, bf);
      bg['object']['levels'] = [];
      for (var bh = this['levels'], bi = 0x0, bF = bh['length']; bi < bF; bi++) {
        var bG = bh[bi];
        bg['object']['levels']['push']({
          'object': bG['object']['uuid'],
          'distance': bG['distance']
        });
      }
      return bg;
    }
  }), aep['prototype'] = Object['assign'](Object['create'](KY['prototype']), {
    'constructor': aep,
    'isSkinnedMesh': !0x0,
    'bind': function(bf, bg) {
      this['skeleton'] = bf, void 0x0 === bg && (this['updateMatrixWorld'](!0x0), this['skeleton']['calculateInverses'](), bg = this['matrixWorld']), this['bindMatrix']['copy'](bg), this['bindMatrixInverse']['getInverse'](bg);
    },
    'pose': function() {
      this['skeleton']['pose']();
    },
    'normalizeSkinWeights': function() {
      for (var bf = new m7(), bg = this['geometry']['attributes']['skinWeight'], bh = 0x0, bi = bg['count']; bh < bi; bh++) {
        bf['x'] = bg['getX'](bh), bf['y'] = bg['getY'](bh), bf['z'] = bg['getZ'](bh), bf['w'] = bg['getW'](bh);
        var bF = 0x1 / bf['manhattanLength']();
        bF !== 0x1 / 0x0 ? bf['multiplyScalar'](bF) : bf['set'](0x1, 0x0, 0x0, 0x0), bg['setXYZW'](bh, bf['x'], bf['y'], bf['z'], bf['w']);
      }
    },
    'updateMatrixWorld': function(bf) {
      KY['prototype']['updateMatrixWorld']['call'](this, bf), 'attached' === this['bindMode'] ? this['bindMatrixInverse']['getInverse'](this['matrixWorld']) : 'detached' === this['bindMode'] ? this['bindMatrixInverse']['getInverse'](this['bindMatrix']) : console['warn']('THREE.SkinnedMesh:\x20Unrecognized\x20bindMode:\x20' + this['bindMode']);
    },
    'clone': function() {
      return new this['constructor'](this['geometry'], this['material'])['copy'](this);
    }
  }), Object['assign'](aes['prototype'], {
    'calculateInverses': function() {
      this['boneInverses'] = [];
      for (var bf = 0x0, bg = this['bones']['length']; bf < bg; bf++) {
        var bh = new mR();
        this['bones'][bf] && bh['getInverse'](this['bones'][bf]['matrixWorld']), this['boneInverses']['push'](bh);
      }
    },
    'pose': function() {
      var bf, bg, bh;
      for (bg = 0x0, bh = this['bones']['length']; bg < bh; bg++)(bf = this['bones'][bg]) && bf['matrixWorld']['getInverse'](this['boneInverses'][bg]);
      for (bg = 0x0, bh = this['bones']['length']; bg < bh; bg++)(bf = this['bones'][bg]) && (bf['parent'] && bf['parent']['isBone'] ? (bf['matrix']['getInverse'](bf['parent']['matrixWorld']), bf['matrix']['multiply'](bf['matrixWorld'])) : bf['matrix']['copy'](bf['matrixWorld']), bf['matrix']['decompose'](bf['position'], bf['quaternion'], bf['scale']));
    },
    'update': (a6K = new mR(), a6L = new mR(), function() {
      for (var bf = this['bones'], bg = this['boneInverses'], bh = this['boneMatrices'], bi = this['boneTexture'], bF = 0x0, bG = bf['length']; bF < bG; bF++) {
        var bH = bf[bF] ? bf[bF]['matrixWorld'] : a6L;
        a6K['multiplyMatrices'](bH, bg[bF]), a6K['toArray'](bh, 0x10 * bF);
      }
      void 0x0 !== bi && (bi['needsUpdate'] = !0x0);
    }),
    'clone': function() {
      return new aes(this['bones'], this['boneInverses']);
    },
    'getBoneByName': function(bf) {
      for (var bg = 0x0, bh = this['bones']['length']; bg < bh; bg++) {
        var bi = this['bones'][bg];
        if (bi['name'] === bf) return bi;
      }
    }
  }), aex['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': aex,
    'isBone': !0x0
  }), aey['prototype'] = Object['create'](Kf['prototype']), aey['prototype']['constructor'] = aey, aey['prototype']['isLineBasicMaterial'] = !0x0, aey['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['linewidth'] = bf['linewidth'], this['linecap'] = bf['linecap'], this['linejoin'] = bf['linejoin'], this;
  }, aeA['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': aeA,
    'isLine': !0x0,
    'computeLineDistances': (a6M = new eK(), a6N = new eK(), function() {
      var bf = this['geometry'];
      if (bf['isBufferGeometry'])
        if (null === bf['index']) {
          for (var bg = bf['attributes']['position'], bh = [0x0], bi = 0x1, bF = bg['count']; bi < bF; bi++) a6M['fromBufferAttribute'](bg, bi - 0x1), a6N['fromBufferAttribute'](bg, bi), bh[bi] = bh[bi - 0x1], bh[bi] += a6M['distanceTo'](a6N);
          bf['addAttribute']('lineDistance', new Be(bh, 0x1));
        } else console['warn']('THREE.Line.computeLineDistances():\x20Computation\x20only\x20possible\x20with\x20non-indexed\x20BufferGeometry.');
      else if (bf['isGeometry']) {
        var bG = bf['vertices'];
        for ((bh = bf['lineDistances'])[0x0] = 0x0, bi = 0x1, bF = bG['length']; bi < bF; bi++) bh[bi] = bh[bi - 0x1], bh[bi] += bG[bi - 0x1]['distanceTo'](bG[bi]);
      }
      return this;
    }),
    'raycast': function() {
      var bf = new mR(),
        bg = new KP(),
        bh = new mE();
      return function(bi, bF) {
        var bG = bi['linePrecision'],
          bH = this['geometry'],
          bI = this['matrixWorld'];
        if (null === bH['boundingSphere'] && bH['computeBoundingSphere'](), bh['copy'](bH['boundingSphere']), bh['applyMatrix4'](bI), bh['radius'] += bG, !0x1 !== bi['ray']['intersectsSphere'](bh)) {
          bf['getInverse'](bI), bg['copy'](bi['ray'])['applyMatrix4'](bf);
          var bJ = bG / ((this['scale']['x'] + this['scale']['y'] + this['scale']['z']) / 0x3),
            bK = bJ * bJ,
            bL = new eK(),
            bM = new eK(),
            bN = new eK(),
            bO = new eK(),
            bP = this && this['isLineSegments'] ? 0x2 : 0x1;
          if (bH['isBufferGeometry']) {
            var bQ = bH['index'],
              bR = bH['attributes']['position']['array'];
            if (null !== bQ)
              for (var bS = bQ['array'], bT = 0x0, bU = bS['length'] - 0x1; bT < bU; bT += bP) {
                var bV = bS[bT],
                  bW = bS[bT + 0x1];
                if (bL['fromArray'](bR, 0x3 * bV), bM['fromArray'](bR, 0x3 * bW), !(bg['distanceSqToSegment'](bL, bM, bO, bN) > bK)) bO['applyMatrix4'](this['matrixWorld']), (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                  'distance': bZ,
                  'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                  'index': bT,
                  'face': null,
                  'faceIndex': null,
                  'object': this
                });
              } else
                for (bT = 0x0, bU = bR['length'] / 0x3 - 0x1; bT < bU; bT += bP) {
                  if (bL['fromArray'](bR, 0x3 * bT), bM['fromArray'](bR, 0x3 * bT + 0x3), !(bg['distanceSqToSegment'](bL, bM, bO, bN) > bK)) bO['applyMatrix4'](this['matrixWorld']), (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                    'distance': bZ,
                    'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                    'index': bT,
                    'face': null,
                    'faceIndex': null,
                    'object': this
                  });
                }
          } else if (bH['isGeometry']) {
            var bX = bH['vertices'],
              bY = bX['length'];
            for (bT = 0x0; bT < bY - 0x1; bT += bP) {
              var bZ;
              if (!(bg['distanceSqToSegment'](bX[bT], bX[bT + 0x1], bO, bN) > bK)) bO['applyMatrix4'](this['matrixWorld']), (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                'distance': bZ,
                'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                'index': bT,
                'face': null,
                'faceIndex': null,
                'object': this
              });
            }
          }
        }
      };
    }(),
    'clone': function() {
      return new this['constructor'](this['geometry'], this['material'])['copy'](this);
    }
  }), aeE['prototype'] = Object['assign'](Object['create'](aeA['prototype']), {
    'constructor': aeE,
    'isLineSegments': !0x0,
    'computeLineDistances': function() {
      var bf = new eK(),
        bg = new eK();
      return function() {
        var bh = this['geometry'];
        if (bh['isBufferGeometry'])
          if (null === bh['index']) {
            for (var bi = bh['attributes']['position'], bF = [], bG = 0x0, bH = bi['count']; bG < bH; bG += 0x2) bf['fromBufferAttribute'](bi, bG), bg['fromBufferAttribute'](bi, bG + 0x1), bF[bG] = 0x0 === bG ? 0x0 : bF[bG - 0x1], bF[bG + 0x1] = bF[bG] + bf['distanceTo'](bg);
            bh['addAttribute']('lineDistance', new Be(bF, 0x1));
          } else console['warn']('THREE.LineSegments.computeLineDistances():\x20Computation\x20only\x20possible\x20with\x20non-indexed\x20BufferGeometry.');
        else if (bh['isGeometry']) {
          var bI = bh['vertices'];
          for (bF = bh['lineDistances'], bG = 0x0, bH = bI['length']; bG < bH; bG += 0x2) bf['copy'](bI[bG]), bg['copy'](bI[bG + 0x1]), bF[bG] = 0x0 === bG ? 0x0 : bF[bG - 0x1], bF[bG + 0x1] = bF[bG] + bf['distanceTo'](bg);
        }
        return this;
      };
    }()
  }), aeH['prototype'] = Object['assign'](Object['create'](aeA['prototype']), {
    'constructor': aeH,
    'isLineLoop': !0x0
  }), aeK['prototype'] = Object['create'](Kf['prototype']), aeK['prototype']['constructor'] = aeK, aeK['prototype']['isPointsMaterial'] = !0x0, aeK['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['map'] = bf['map'], this['size'] = bf['size'], this['sizeAttenuation'] = bf['sizeAttenuation'], this['morphTargets'] = bf['morphTargets'], this;
  }, aeM['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': aeM,
    'isPoints': !0x0,
    'raycast': function() {
      var bf = new mR(),
        bg = new KP(),
        bh = new mE();
      return function(bi, bF) {
        var bG = this,
          bH = this['geometry'],
          bI = this['matrixWorld'],
          bJ = bi['params']['Points']['threshold'];
        if (null === bH['boundingSphere'] && bH['computeBoundingSphere'](), bh['copy'](bH['boundingSphere']), bh['applyMatrix4'](bI), bh['radius'] += bJ, !0x1 !== bi['ray']['intersectsSphere'](bh)) {
          bf['getInverse'](bI), bg['copy'](bi['ray'])['applyMatrix4'](bf);
          var bK = bJ / ((this['scale']['x'] + this['scale']['y'] + this['scale']['z']) / 0x3),
            bL = bK * bK,
            bM = new eK(),
            bN = new eK();
          if (bH['isBufferGeometry']) {
            var bO = bH['index'],
              bP = bH['attributes']['position']['array'];
            if (null !== bO)
              for (var bQ = bO['array'], bR = 0x0, bS = bQ['length']; bR < bS; bR++) {
                var bT = bQ[bR];
                bM['fromArray'](bP, 0x3 * bT), bW(bM, bT);
              } else {
                bR = 0x0;
                for (var bU = bP['length'] / 0x3; bR < bU; bR++) bM['fromArray'](bP, 0x3 * bR), bW(bM, bR);
              }
          } else {
            var bV = bH['vertices'];
            for (bR = 0x0, bU = bV['length']; bR < bU; bR++) bW(bV[bR], bR);
          }
        }

        function bW(bf, bh) {
          var bH = bg['distanceSqToPoint'](bf);
          if (bH < bL) {
            bg['closestPointToPoint'](bf, bN), bN['applyMatrix4'](bI);
            var bJ = bi['ray']['origin']['distanceTo'](bN);
            if (bJ < bi['near'] || bJ > bi['far']) return;
            bF['push']({
              'distance': bJ,
              'distanceToRay': Math['sqrt'](bH),
              'point': bN['clone'](),
              'index': bh,
              'face': null,
              'object': bG
            });
          }
        }
      };
    }(),
    'clone': function() {
      return new this['constructor'](this['geometry'], this['material'])['copy'](this);
    }
  }), aeP['prototype'] = Object['assign'](Object['create'](lW['prototype']), {
    'constructor': aeP,
    'isVideoTexture': !0x0,
    'update': function() {
      var bf = this['image'];
      bf['readyState'] >= bf['HAVE_CURRENT_DATA'] && (this['needsUpdate'] = !0x0);
    }
  }), aeZ['prototype'] = Object['create'](lW['prototype']), aeZ['prototype']['constructor'] = aeZ, aeZ['prototype']['isCompressedTexture'] = !0x0, afc['prototype'] = Object['create'](lW['prototype']), afc['prototype']['constructor'] = afc, afc['prototype']['isCanvasTexture'] = !0x0, afm['prototype'] = Object['create'](lW['prototype']), afm['prototype']['constructor'] = afm, afm['prototype']['isDepthTexture'] = !0x0, afx['prototype'] = Object['create'](Gf['prototype']), afx['prototype']['constructor'] = afx, afW['prototype'] = Object['create'](AH['prototype']), afW['prototype']['constructor'] = afW, ag0['prototype'] = Object['create'](Gf['prototype']), ag0['prototype']['constructor'] = ag0, agm['prototype'] = Object['create'](AH['prototype']), agm['prototype']['constructor'] = agm, agr['prototype'] = Object['create'](Gf['prototype']), agr['prototype']['constructor'] = agr, ahr['prototype'] = Object['create'](AH['prototype']), ahr['prototype']['constructor'] = ahr, ahu['prototype'] = Object['create'](agr['prototype']), ahu['prototype']['constructor'] = ahu, ahx['prototype'] = Object['create'](AH['prototype']), ahx['prototype']['constructor'] = ahx, ahA['prototype'] = Object['create'](agr['prototype']), ahA['prototype']['constructor'] = ahA, ahD['prototype'] = Object['create'](AH['prototype']), ahD['prototype']['constructor'] = ahD, ahG['prototype'] = Object['create'](agr['prototype']), ahG['prototype']['constructor'] = ahG, ahL['prototype'] = Object['create'](AH['prototype']), ahL['prototype']['constructor'] = ahL, ahO['prototype'] = Object['create'](agr['prototype']), ahO['prototype']['constructor'] = ahO, ahU['prototype'] = Object['create'](AH['prototype']), ahU['prototype']['constructor'] = ahU, ai2['prototype'] = Object['create'](Gf['prototype']), ai2['prototype']['constructor'] = ai2, ai2['prototype']['toJSON'] = function() {
    var bf = Gf['prototype']['toJSON']['call'](this);
    return bf['path'] = this['parameters']['path']['toJSON'](), bf;
  }, aiu['prototype'] = Object['create'](AH['prototype']), aiu['prototype']['constructor'] = aiu, aiC['prototype'] = Object['create'](Gf['prototype']), aiC['prototype']['constructor'] = aiC, aje['prototype'] = Object['create'](AH['prototype']), aje['prototype']['constructor'] = aje, ajk['prototype'] = Object['create'](Gf['prototype']), ajk['prototype']['constructor'] = ajk;
  var amL = function(bf, bg, bh) {
    bh = bh || 0x2;
    var bi, bF, bG, bH, bI, bJ, bK, bL = bg && bg['length'],
      bM = bL ? bg[0x0] * bh : bf['length'],
      bN = anb(bf, 0x0, bM, bh, !0x0),
      bO = [];
    if (!bN) return bO;
    if (bL && (bN = function(bf, bg, bh, bi) {
        var bF, bG, bH, bI, bJ, bK = [];
        for (bF = 0x0, bG = bg['length']; bF < bG; bF++) bH = bg[bF] * bi, bI = bF < bG - 0x1 ? bg[bF + 0x1] * bi : bf['length'], (bJ = anb(bf, bH, bI, bi, !0x1)) === bJ['next'] && (bJ['steiner'] = !0x0), bK['push'](aoX(bJ));
        for (bK['sort'](aox), bF = 0x0; bF < bK['length']; bF++) aoA(bK[bF], bh), bh = anq(bh, bh['next']);
        return bh;
      }(bf, bg, bN, bh)), bf['length'] > 0x50 * bh) {
      bi = bG = bf[0x0], bF = bH = bf[0x1];
      for (var bP = bh; bP < bM; bP += bh)(bI = bf[bP]) < bi && (bi = bI), (bJ = bf[bP + 0x1]) < bF && (bF = bJ), bI > bG && (bG = bI), bJ > bH && (bH = bJ);
      bK = 0x0 !== (bK = Math['max'](bG - bi, bH - bF)) ? 0x1 / bK : 0x0;
    }
    return anv(bN, bO, bh, bi, bF, bK), bO;
  };

  function anb(bf, bg, bh, bi, bF) {
    var bG, bH;
    if (bF === function(bf, bg, bh, bi) {
        for (var bF = 0x0, bG = bg, bH = bh - bi; bG < bh; bG += bi) bF += (bf[bH] - bf[bG]) * (bf[bG + 0x1] + bf[bH + 0x1]), bH = bG;
        return bF;
      }(bf, bg, bh, bi) > 0x0)
      for (bG = bg; bG < bh; bG += bi) bH = apI(bG, bf[bG], bf[bG + 0x1], bH);
    else
      for (bG = bh - bi; bG >= bg; bG -= bi) bH = apI(bG, bf[bG], bf[bG + 0x1], bH);
    return bH && apq(bH, bH['next']) && (apO(bH), bH = bH['next']), bH;
  }

  function anq(bf, bg) {
    if (!bf) return bf;
    bg || (bg = bf);
    var bh, bi = bf;
    do {
      if (bh = !0x1, bi['steiner'] || !apq(bi, bi['next']) && 0x0 !== apm(bi['prev'], bi, bi['next'])) bi = bi['next'];
      else {
        if (apO(bi), (bi = bg = bi['prev']) === bi['next']) break;
        bh = !0x0;
      }
    } while (bh || bi !== bg);
    return bg;
  }

  function anv(bf, bg, bh, bi, bF, bG, bH) {
    if (bf) {
      !bH && bG && function(bf, bg, bh, bi) {
        var bF = bf;
        do {
          null === bF['z'] && (bF['z'] = aoR(bF['x'], bF['y'], bg, bh, bi)), bF['prevZ'] = bF['prev'], bF['nextZ'] = bF['next'], bF = bF['next'];
        } while (bF !== bf);
        bF['prevZ']['nextZ'] = null, bF['prevZ'] = null,
          function(bf) {
            var bg, bh, bi, bF, bG, bH, bI, bJ, bK = 0x1;
            do {
              for (bh = bf, bf = null, bG = null, bH = 0x0; bh;) {
                for (bH++, bi = bh, bI = 0x0, bg = 0x0; bg < bK && (bI++, bi = bi['nextZ']); bg++);
                for (bJ = bK; bI > 0x0 || bJ > 0x0 && bi;) 0x0 !== bI && (0x0 === bJ || !bi || bh['z'] <= bi['z']) ? (bF = bh, bh = bh['nextZ'], bI--) : (bF = bi, bi = bi['nextZ'], bJ--), bG ? bG['nextZ'] = bF : bf = bF, bF['prevZ'] = bG, bG = bF;
                bh = bi;
              }
              bG['nextZ'] = null, bK *= 0x2;
            } while (bH > 0x1);
          }(bF);
      }(bf, bi, bF, bG);
      for (var bI, bJ, bK = bf; bf['prev'] !== bf['next'];)
        if (bI = bf['prev'], bJ = bf['next'], bG ? ao1(bf, bi, bF, bG) : anV(bf)) bg['push'](bI['i'] / bh), bg['push'](bf['i'] / bh), bg['push'](bJ['i'] / bh), apO(bf), bf = bJ['next'], bK = bJ['next'];
        else if ((bf = bJ) === bK) {
        bH ? 0x1 === bH ? anv(bf = aog(bf, bg, bh), bg, bh, bi, bF, bG, 0x2) : 0x2 === bH && aon(bf, bg, bh, bi, bF, bG) : anv(anq(bf), bg, bh, bi, bF, bG, 0x1);
        break;
      }
    }
  }

  function anV(bf) {
    var bg = bf['prev'],
      bh = bf,
      bi = bf['next'];
    if (apm(bg, bh, bi) >= 0x0) return !0x1;
    for (var bF = bf['next']['next']; bF !== bf['prev'];) {
      if (ap1(bg['x'], bg['y'], bh['x'], bh['y'], bi['x'], bi['y'], bF['x'], bF['y']) && apm(bF['prev'], bF, bF['next']) >= 0x0) return !0x1;
      bF = bF['next'];
    }
    return !0x0;
  }

  function ao1(bf, bg, bh, bi) {
    var bF = bf['prev'],
      bG = bf,
      bH = bf['next'];
    if (apm(bF, bG, bH) >= 0x0) return !0x1;
    for (var bI = bF['x'] < bG['x'] ? bF['x'] < bH['x'] ? bF['x'] : bH['x'] : bG['x'] < bH['x'] ? bG['x'] : bH['x'], bJ = bF['y'] < bG['y'] ? bF['y'] < bH['y'] ? bF['y'] : bH['y'] : bG['y'] < bH['y'] ? bG['y'] : bH['y'], bK = bF['x'] > bG['x'] ? bF['x'] > bH['x'] ? bF['x'] : bH['x'] : bG['x'] > bH['x'] ? bG['x'] : bH['x'], bL = bF['y'] > bG['y'] ? bF['y'] > bH['y'] ? bF['y'] : bH['y'] : bG['y'] > bH['y'] ? bG['y'] : bH['y'], bM = aoR(bI, bJ, bg, bh, bi), bN = aoR(bK, bL, bg, bh, bi), bO = bf['nextZ']; bO && bO['z'] <= bN;) {
      if (bO !== bf['prev'] && bO !== bf['next'] && ap1(bF['x'], bF['y'], bG['x'], bG['y'], bH['x'], bH['y'], bO['x'], bO['y']) && apm(bO['prev'], bO, bO['next']) >= 0x0) return !0x1;
      bO = bO['nextZ'];
    }
    for (bO = bf['prevZ']; bO && bO['z'] >= bM;) {
      if (bO !== bf['prev'] && bO !== bf['next'] && ap1(bF['x'], bF['y'], bG['x'], bG['y'], bH['x'], bH['y'], bO['x'], bO['y']) && apm(bO['prev'], bO, bO['next']) >= 0x0) return !0x1;
      bO = bO['prevZ'];
    }
    return !0x0;
  }

  function aog(bf, bg, bh) {
    var bi = bf;
    do {
      var bF = bi['prev'],
        bG = bi['next']['next'];
      !apq(bF, bG) && apt(bF, bi, bi['next'], bG) && apy(bF, bG) && apy(bG, bF) && (bg['push'](bF['i'] / bh), bg['push'](bi['i'] / bh), bg['push'](bG['i'] / bh), apO(bi), apO(bi['next']), bi = bf = bG), bi = bi['next'];
    } while (bi !== bf);
    return bi;
  }

  function aon(bf, bg, bh, bi, bF, bG) {
    var bH = bf;
    do {
      for (var bI = bH['next']['next']; bI !== bH['prev'];) {
        if (bH['i'] !== bI['i'] && apa(bH, bI)) {
          var bJ = apB(bH, bI);
          return bH = anq(bH, bH['next']), bJ = anq(bJ, bJ['next']), anv(bH, bg, bh, bi, bF, bG), void anv(bJ, bg, bh, bi, bF, bG);
        }
        bI = bI['next'];
      }
      bH = bH['next'];
    } while (bH !== bf);
  }

  function aox(bf, bg) {
    return bf['x'] - bg['x'];
  }

  function aoA(bf, bg) {
    if (bg = function(bf, bg) {
        var bh, bi = bg,
          bF = bf['x'],
          bG = bf['y'],
          bH = -0x1 / 0x0;
        do {
          if (bG <= bi['y'] && bG >= bi['next']['y'] && bi['next']['y'] !== bi['y']) {
            var bI = bi['x'] + (bG - bi['y']) * (bi['next']['x'] - bi['x']) / (bi['next']['y'] - bi['y']);
            if (bI <= bF && bI > bH) {
              if (bH = bI, bI === bF) {
                if (bG === bi['y']) return bi;
                if (bG === bi['next']['y']) return bi['next'];
              }
              bh = bi['x'] < bi['next']['x'] ? bi : bi['next'];
            }
          }
          bi = bi['next'];
        } while (bi !== bg);
        if (!bh) return null;
        if (bF === bH) return bh['prev'];
        var bJ, bK = bh,
          bL = bh['x'],
          bM = bh['y'],
          bN = 0x1 / 0x0;
        bi = bh['next'];
        for (; bi !== bK;) bF >= bi['x'] && bi['x'] >= bL && bF !== bi['x'] && ap1(bG < bM ? bF : bH, bG, bL, bM, bG < bM ? bH : bF, bG, bi['x'], bi['y']) && ((bJ = Math['abs'](bG - bi['y']) / (bF - bi['x'])) < bN || bJ === bN && bi['x'] > bh['x']) && apy(bi, bf) && (bh = bi, bN = bJ), bi = bi['next'];
        return bh;
      }(bf, bg)) {
      var bh = apB(bg, bf);
      anq(bh, bh['next']);
    }
  }

  function aoR(bf, bg, bh, bi, bF) {
    return (bf = 0x55555555 & ((bf = 0x33333333 & ((bf = 0xf0f0f0f & ((bf = 0xff00ff & ((bf = 0x7fff * (bf - bh) * bF) | bf << 0x8)) | bf << 0x4)) | bf << 0x2)) | bf << 0x1)) | (bg = 0x55555555 & ((bg = 0x33333333 & ((bg = 0xf0f0f0f & ((bg = 0xff00ff & ((bg = 0x7fff * (bg - bi) * bF) | bg << 0x8)) | bg << 0x4)) | bg << 0x2)) | bg << 0x1)) << 0x1;
  }

  function aoX(bf) {
    var bg = bf,
      bh = bf;
    do {
      bg['x'] < bh['x'] && (bh = bg), bg = bg['next'];
    } while (bg !== bf);
    return bh;
  }

  function ap1(bf, bg, bh, bi, bF, bG, bH, bI) {
    return (bF - bH) * (bg - bI) - (bf - bH) * (bG - bI) >= 0x0 && (bf - bH) * (bi - bI) - (bh - bH) * (bg - bI) >= 0x0 && (bh - bH) * (bG - bI) - (bF - bH) * (bi - bI) >= 0x0;
  }

  function apa(bf, bg) {
    return bf['next']['i'] !== bg['i'] && bf['prev']['i'] !== bg['i'] && ! function(bf, bg) {
      var bh = bf;
      do {
        if (bh['i'] !== bf['i'] && bh['next']['i'] !== bf['i'] && bh['i'] !== bg['i'] && bh['next']['i'] !== bg['i'] && apt(bh, bh['next'], bf, bg)) return !0x0;
        bh = bh['next'];
      } while (bh !== bf);
      return !0x1;
    }(bf, bg) && apy(bf, bg) && apy(bg, bf) && function(bf, bg) {
      var bh = bf,
        bi = !0x1,
        bF = (bf['x'] + bg['x']) / 0x2,
        bG = (bf['y'] + bg['y']) / 0x2;
      do {
        bh['y'] > bG != bh['next']['y'] > bG && bh['next']['y'] !== bh['y'] && bF < (bh['next']['x'] - bh['x']) * (bG - bh['y']) / (bh['next']['y'] - bh['y']) + bh['x'] && (bi = !bi), bh = bh['next'];
      } while (bh !== bf);
      return bi;
    }(bf, bg);
  }

  function apm(bf, bg, bh) {
    return (bg['y'] - bf['y']) * (bh['x'] - bg['x']) - (bg['x'] - bf['x']) * (bh['y'] - bg['y']);
  }

  function apq(bf, bg) {
    return bf['x'] === bg['x'] && bf['y'] === bg['y'];
  }

  function apt(bf, bg, bh, bi) {
    return !!(apq(bf, bg) && apq(bh, bi) || apq(bf, bi) && apq(bh, bg)) || apm(bf, bg, bh) > 0x0 != apm(bf, bg, bi) > 0x0 && apm(bh, bi, bf) > 0x0 != apm(bh, bi, bg) > 0x0;
  }

  function apy(bf, bg) {
    return apm(bf['prev'], bf, bf['next']) < 0x0 ? apm(bf, bg, bf['next']) >= 0x0 && apm(bf, bf['prev'], bg) >= 0x0 : apm(bf, bg, bf['prev']) < 0x0 || apm(bf, bf['next'], bg) < 0x0;
  }

  function apB(bf, bg) {
    var bh = new apQ(bf['i'], bf['x'], bf['y']),
      bi = new apQ(bg['i'], bg['x'], bg['y']),
      bF = bf['next'],
      bG = bg['prev'];
    return bf['next'] = bg, bg['prev'] = bf, bh['next'] = bF, bF['prev'] = bh, bi['next'] = bh, bh['prev'] = bi, bG['next'] = bi, bi['prev'] = bG, bi;
  }

  function apI(bf, bg, bh, bi) {
    var bF = new apQ(bf, bg, bh);
    return bi ? (bF['next'] = bi['next'], bF['prev'] = bi, bi['next']['prev'] = bF, bi['next'] = bF) : (bF['prev'] = bF, bF['next'] = bF), bF;
  }

  function apO(bf) {
    bf['next']['prev'] = bf['prev'], bf['prev']['next'] = bf['next'], bf['prevZ'] && (bf['prevZ']['nextZ'] = bf['nextZ']), bf['nextZ'] && (bf['nextZ']['prevZ'] = bf['prevZ']);
  }

  function apQ(bf, bg, bh) {
    this['i'] = bf, this['x'] = bg, this['y'] = bh, this['prev'] = null, this['next'] = null, this['z'] = null, this['prevZ'] = null, this['nextZ'] = null, this['steiner'] = !0x1;
  }
  var apU = {
    'area': function(bf) {
      for (var bg = bf['length'], bh = 0x0, bi = bg - 0x1, bF = 0x0; bF < bg; bi = bF++) bh += bf[bi]['x'] * bf[bF]['y'] - bf[bF]['x'] * bf[bi]['y'];
      return 0.5 * bh;
    },
    'isClockWise': function(bf) {
      return apU['area'](bf) < 0x0;
    },
    'triangulateShape': function(bf, bg) {
      var bh = [],
        bi = [],
        bF = [];
      aq9(bf), aqc(bh, bf);
      var bG = bf['length'];
      bg['forEach'](aq9);
      for (var bH = 0x0; bH < bg['length']; bH++) bi['push'](bG), bG += bg[bH]['length'], aqc(bh, bg[bH]);
      var bI = amL(bh, bi);
      for (bH = 0x0; bH < bI['length']; bH += 0x3) bF['push'](bI['slice'](bH, bH + 0x3));
      return bF;
    }
  };

  function aq9(bf) {
    var bg = bf['length'];
    bg > 0x2 && bf[bg - 0x1]['equals'](bf[0x0]) && bf['pop']();
  }

  function aqc(bf, bg) {
    for (var bh = 0x0; bh < bg['length']; bh++) bf['push'](bg[bh]['x']), bf['push'](bg[bh]['y']);
  }

  function aqg(bf, bg) {
    AH['call'](this), this['type'] = 'ExtrudeGeometry', this['parameters'] = {
      'shapes': bf,
      'options': bg
    }, this['fromBufferGeometry'](new aqj(bf, bg)), this['mergeVertices']();
  }

  function aqj(bf, bg) {
    Gf['call'](this), this['type'] = 'ExtrudeBufferGeometry', this['parameters'] = {
      'shapes': bf,
      'options': bg
    }, bf = Array['isArray'](bf) ? bf : [bf];
    for (var bh = this, bi = [], bF = [], bG = 0x0, bH = bf['length']; bG < bH; bG++) {
      bI(bf[bG]);
    }

    function bI(bf) {
      var bG = [],
        bH = void 0x0 !== bg['curveSegments'] ? bg['curveSegments'] : 0xc,
        bI = void 0x0 !== bg['steps'] ? bg['steps'] : 0x1,
        bJ = void 0x0 !== bg['depth'] ? bg['depth'] : 0x64,
        bK = void 0x0 === bg['bevelEnabled'] || bg['bevelEnabled'],
        bL = void 0x0 !== bg['bevelThickness'] ? bg['bevelThickness'] : 0x6,
        bM = void 0x0 !== bg['bevelSize'] ? bg['bevelSize'] : bL - 0x2,
        bN = void 0x0 !== bg['bevelOffset'] ? bg['bevelOffset'] : 0x0,
        bO = void 0x0 !== bg['bevelSegments'] ? bg['bevelSegments'] : 0x3,
        bP = bg['extrudePath'],
        bQ = void 0x0 !== bg['UVGenerator'] ? bg['UVGenerator'] : as8;
      void 0x0 !== bg['amount'] && (console['warn']('THREE.ExtrudeBufferGeometry:\x20amount\x20has\x20been\x20renamed\x20to\x20depth.'), bJ = bg['amount']);
      var bR, bS, bT, bU, bV, bW, bX, bY, bZ = !0x1;
      bP && (bR = bP['getSpacedPoints'](bI), bZ = !0x0, bK = !0x1, bS = bP['computeFrenetFrames'](bI, !0x1), bT = new eK(), bU = new eK(), bV = new eK()), bK || (bO = 0x0, bL = 0x0, bM = 0x0, bN = 0x0);
      var c0 = bf['extractPoints'](bH),
        c1 = c0['shape'],
        c2 = c0['holes'];
      if (!apU['isClockWise'](c1))
        for (c1 = c1['reverse'](), bX = 0x0, bY = c2['length']; bX < bY; bX++) bW = c2[bX], apU['isClockWise'](bW) && (c2[bX] = bW['reverse']());
      var c3 = apU['triangulateShape'](c1, c2),
        c4 = c1;
      for (bX = 0x0, bY = c2['length']; bX < bY; bX++) bW = c2[bX], c1 = c1['concat'](bW);

      function c5(bf, bg, bh) {
        return bg || console['error']('THREE.ExtrudeGeometry:\x20vec\x20does\x20not\x20exist'), bg['clone']()['multiplyScalar'](bh)['add'](bf);
      }
      var c6, c7, c8, c9, ca, cb, cc = c1['length'],
        cd = c3['length'];

      function ce(bf, bg, bh) {
        var bi, bF, bG, bH = bf['x'] - bg['x'],
          bI = bf['y'] - bg['y'],
          bJ = bh['x'] - bf['x'],
          bK = bh['y'] - bf['y'],
          bL = bH * bH + bI * bI,
          bM = bH * bK - bI * bJ;
        if (Math['abs'](bM) > Number['EPSILON']) {
          var bN = Math['sqrt'](bL),
            bO = Math['sqrt'](bJ * bJ + bK * bK),
            bP = bg['x'] - bI / bN,
            bQ = bg['y'] + bH / bN,
            bR = ((bh['x'] - bK / bO - bP) * bK - (bh['y'] + bJ / bO - bQ) * bJ) / (bH * bK - bI * bJ),
            bS = (bi = bP + bH * bR - bf['x']) * bi + (bF = bQ + bI * bR - bf['y']) * bF;
          if (bS <= 0x2) return new eC(bi, bF);
          bG = Math['sqrt'](bS / 0x2);
        } else {
          var bT = !0x1;
          bH > Number['EPSILON'] ? bJ > Number['EPSILON'] && (bT = !0x0) : bH < -Number['EPSILON'] ? bJ < -Number['EPSILON'] && (bT = !0x0) : Math['sign'](bI) === Math['sign'](bK) && (bT = !0x0), bT ? (bi = -bI, bF = bH, bG = Math['sqrt'](bL)) : (bi = bH, bF = bI, bG = Math['sqrt'](bL / 0x2));
        }
        return new eC(bi / bG, bF / bG);
      }
      for (var cf = [], cg = 0x0, ch = c4['length'], ci = ch - 0x1, cj = cg + 0x1; cg < ch; cg++, ci++, cj++) ci === ch && (ci = 0x0), cj === ch && (cj = 0x0), cf[cg] = ce(c4[cg], c4[ci], c4[cj]);
      var ck, cl, cm = [],
        cn = cf['concat']();
      for (bX = 0x0, bY = c2['length']; bX < bY; bX++) {
        for (bW = c2[bX], ck = [], cg = 0x0, ci = (ch = bW['length']) - 0x1, cj = cg + 0x1; cg < ch; cg++, ci++, cj++) ci === ch && (ci = 0x0), cj === ch && (cj = 0x0), ck[cg] = ce(bW[cg], bW[ci], bW[cj]);
        cm['push'](ck), cn = cn['concat'](ck);
      }
      for (c6 = 0x0; c6 < bO; c6++) {
        for (c8 = c6 / bO, c9 = bL * Math['cos'](c8 * Math['PI'] / 0x2), c7 = bM * Math['sin'](c8 * Math['PI'] / 0x2) + bN, cg = 0x0, ch = c4['length']; cg < ch; cg++) cp((ca = c5(c4[cg], cf[cg], c7))['x'], ca['y'], -c9);
        for (bX = 0x0, bY = c2['length']; bX < bY; bX++)
          for (bW = c2[bX], ck = cm[bX], cg = 0x0, ch = bW['length']; cg < ch; cg++) cp((ca = c5(bW[cg], ck[cg], c7))['x'], ca['y'], -c9);
      }
      for (c7 = bM + bN, cg = 0x0; cg < cc; cg++) ca = bK ? c5(c1[cg], cn[cg], c7) : c1[cg], bZ ? (bU['copy'](bS['normals'][0x0])['multiplyScalar'](ca['x']), bT['copy'](bS['binormals'][0x0])['multiplyScalar'](ca['y']), bV['copy'](bR[0x0])['add'](bU)['add'](bT), cp(bV['x'], bV['y'], bV['z'])) : cp(ca['x'], ca['y'], 0x0);
      for (cl = 0x1; cl <= bI; cl++)
        for (cg = 0x0; cg < cc; cg++) ca = bK ? c5(c1[cg], cn[cg], c7) : c1[cg], bZ ? (bU['copy'](bS['normals'][cl])['multiplyScalar'](ca['x']), bT['copy'](bS['binormals'][cl])['multiplyScalar'](ca['y']), bV['copy'](bR[cl])['add'](bU)['add'](bT), cp(bV['x'], bV['y'], bV['z'])) : cp(ca['x'], ca['y'], bJ / bI * cl);
      for (c6 = bO - 0x1; c6 >= 0x0; c6--) {
        for (c8 = c6 / bO, c9 = bL * Math['cos'](c8 * Math['PI'] / 0x2), c7 = bM * Math['sin'](c8 * Math['PI'] / 0x2) + bN, cg = 0x0, ch = c4['length']; cg < ch; cg++) cp((ca = c5(c4[cg], cf[cg], c7))['x'], ca['y'], bJ + c9);
        for (bX = 0x0, bY = c2['length']; bX < bY; bX++)
          for (bW = c2[bX], ck = cm[bX], cg = 0x0, ch = bW['length']; cg < ch; cg++) ca = c5(bW[cg], ck[cg], c7), bZ ? cp(ca['x'], ca['y'] + bR[bI - 0x1]['y'], bR[bI - 0x1]['x'] + c9) : cp(ca['x'], ca['y'], bJ + c9);
      }

      function co(bf, bg) {
        var bh, bi;
        for (cg = bf['length']; --cg >= 0x0;) {
          bh = cg, (bi = cg - 0x1) < 0x0 && (bi = bf['length'] - 0x1);
          var bF = 0x0,
            bG = bI + 0x2 * bO;
          for (bF = 0x0; bF < bG; bF++) {
            var bH = cc * bF,
              bJ = cc * (bF + 0x1);
            cr(bg + bh + bH, bg + bi + bH, bg + bi + bJ, bg + bh + bJ);
          }
        }
      }

      function cp(bf, bg, bh) {
        bG['push'](bf), bG['push'](bg), bG['push'](bh);
      }

      function cq(bf, bg, bF) {
        cs(bf), cs(bg), cs(bF);
        var bG = bi['length'] / 0x3,
          bH = bQ['generateTopUV'](bh, bi, bG - 0x3, bG - 0x2, bG - 0x1);
        ct(bH[0x0]), ct(bH[0x1]), ct(bH[0x2]);
      }

      function cr(bf, bg, bF, bG) {
        cs(bf), cs(bg), cs(bG), cs(bg), cs(bF), cs(bG);
        var bH = bi['length'] / 0x3,
          bI = bQ['generateSideWallUV'](bh, bi, bH - 0x6, bH - 0x3, bH - 0x2, bH - 0x1);
        ct(bI[0x0]), ct(bI[0x1]), ct(bI[0x3]), ct(bI[0x1]), ct(bI[0x2]), ct(bI[0x3]);
      }

      function cs(bf) {
        bi['push'](bG[0x3 * bf + 0x0]), bi['push'](bG[0x3 * bf + 0x1]), bi['push'](bG[0x3 * bf + 0x2]);
      }

      function ct(bf) {
        bF['push'](bf['x']), bF['push'](bf['y']);
      }! function() {
        var bf = bi['length'] / 0x3;
        if (bK) {
          var bg = 0x0,
            bF = cc * bg;
          for (cg = 0x0; cg < cd; cg++) cq((cb = c3[cg])[0x2] + bF, cb[0x1] + bF, cb[0x0] + bF);
          for (bF = cc * (bg = bI + 0x2 * bO), cg = 0x0; cg < cd; cg++) cq((cb = c3[cg])[0x0] + bF, cb[0x1] + bF, cb[0x2] + bF);
        } else {
          for (cg = 0x0; cg < cd; cg++) cq((cb = c3[cg])[0x2], cb[0x1], cb[0x0]);
          for (cg = 0x0; cg < cd; cg++) cq((cb = c3[cg])[0x0] + cc * bI, cb[0x1] + cc * bI, cb[0x2] + cc * bI);
        }
        bh['addGroup'](bf, bi['length'] / 0x3 - bf, 0x0);
      }(),
      function() {
        var bf = bi['length'] / 0x3,
          bg = 0x0;
        for (co(c4, bg), bg += c4['length'], bX = 0x0, bY = c2['length']; bX < bY; bX++) co(bW = c2[bX], bg), bg += bW['length'];
        bh['addGroup'](bf, bi['length'] / 0x3 - bf, 0x1);
      }();
    }
    this['addAttribute']('position', new Be(bi, 0x3)), this['addAttribute']('uv', new Be(bF, 0x2)), this['computeVertexNormals']();
  }
  aqg['prototype'] = Object['create'](AH['prototype']), aqg['prototype']['constructor'] = aqg, aqg['prototype']['toJSON'] = function() {
    var bf = AH['prototype']['toJSON']['call'](this);
    return asC(this['parameters']['shapes'], this['parameters']['options'], bf);
  }, aqj['prototype'] = Object['create'](Gf['prototype']), aqj['prototype']['constructor'] = aqj, aqj['prototype']['toJSON'] = function() {
    var bf = Gf['prototype']['toJSON']['call'](this);
    return asC(this['parameters']['shapes'], this['parameters']['options'], bf);
  };
  var as8 = {
    'generateTopUV': function(bf, bg, bh, bi, bF) {
      var bG = bg[0x3 * bh],
        bH = bg[0x3 * bh + 0x1],
        bI = bg[0x3 * bi],
        bJ = bg[0x3 * bi + 0x1],
        bK = bg[0x3 * bF],
        bL = bg[0x3 * bF + 0x1];
      return [new eC(bG, bH), new eC(bI, bJ), new eC(bK, bL)];
    },
    'generateSideWallUV': function(bf, bg, bh, bi, bF, bG) {
      var bH = bg[0x3 * bh],
        bI = bg[0x3 * bh + 0x1],
        bJ = bg[0x3 * bh + 0x2],
        bK = bg[0x3 * bi],
        bL = bg[0x3 * bi + 0x1],
        bM = bg[0x3 * bi + 0x2],
        bN = bg[0x3 * bF],
        bO = bg[0x3 * bF + 0x1],
        bP = bg[0x3 * bF + 0x2],
        bQ = bg[0x3 * bG],
        bR = bg[0x3 * bG + 0x1],
        bS = bg[0x3 * bG + 0x2];
      return Math['abs'](bI - bL) < 0.01 ? [new eC(bH, 0x1 - bJ), new eC(bK, 0x1 - bM), new eC(bN, 0x1 - bP), new eC(bQ, 0x1 - bS)] : [new eC(bI, 0x1 - bJ), new eC(bL, 0x1 - bM), new eC(bO, 0x1 - bP), new eC(bR, 0x1 - bS)];
    }
  };

  function asC(bf, bg, bh) {
    if (bh['shapes'] = [], Array['isArray'](bf))
      for (var bi = 0x0, bF = bf['length']; bi < bF; bi++) {
        var bG = bf[bi];
        bh['shapes']['push'](bG['uuid']);
      } else bh['shapes']['push'](bf['uuid']);
    return void 0x0 !== bg['extrudePath'] && (bh['options']['extrudePath'] = bg['extrudePath']['toJSON']()), bh;
  }

  function asJ(bf, bg) {
    AH['call'](this), this['type'] = 'TextGeometry', this['parameters'] = {
      'text': bf,
      'parameters': bg
    }, this['fromBufferGeometry'](new asM(bf, bg)), this['mergeVertices']();
  }

  function asM(bf, bg) {
    var bh = (bg = bg || {})['font'];
    if (!bh || !bh['isFont']) return console['error']('THREE.TextGeometry:\x20font\x20parameter\x20is\x20not\x20an\x20instance\x20of\x20THREE.Font.'), new AH();
    var bi = bh['generateShapes'](bf, bg['size']);
    bg['depth'] = void 0x0 !== bg['height'] ? bg['height'] : 0x32, void 0x0 === bg['bevelThickness'] && (bg['bevelThickness'] = 0xa), void 0x0 === bg['bevelSize'] && (bg['bevelSize'] = 0x8), void 0x0 === bg['bevelEnabled'] && (bg['bevelEnabled'] = !0x1), aqj['call'](this, bi, bg), this['type'] = 'TextBufferGeometry';
  }

  function asR(bf, bg, bh, bi, bF, bG, bH) {
    AH['call'](this), this['type'] = 'SphereGeometry', this['parameters'] = {
      'radius': bf,
      'widthSegments': bg,
      'heightSegments': bh,
      'phiStart': bi,
      'phiLength': bF,
      'thetaStart': bG,
      'thetaLength': bH
    }, this['fromBufferGeometry'](new asZ(bf, bg, bh, bi, bF, bG, bH)), this['mergeVertices']();
  }

  function asZ(bf, bg, bh, bi, bF, bG, bH) {
    Gf['call'](this), this['type'] = 'SphereBufferGeometry', this['parameters'] = {
      'radius': bf,
      'widthSegments': bg,
      'heightSegments': bh,
      'phiStart': bi,
      'phiLength': bF,
      'thetaStart': bG,
      'thetaLength': bH
    }, bf = bf || 0x1, bg = Math['max'](0x3, Math['floor'](bg) || 0x8), bh = Math['max'](0x2, Math['floor'](bh) || 0x6), bi = void 0x0 !== bi ? bi : 0x0, bF = void 0x0 !== bF ? bF : 0x2 * Math['PI'], bG = void 0x0 !== bG ? bG : 0x0, bH = void 0x0 !== bH ? bH : Math['PI'];
    var bI, bJ, bK = Math['min'](bG + bH, Math['PI']),
      bL = 0x0,
      bM = [],
      bN = new eK(),
      bO = new eK(),
      bP = [],
      bQ = [],
      bR = [],
      bS = [];
    for (bJ = 0x0; bJ <= bh; bJ++) {
      var bT = [],
        bU = bJ / bh,
        bV = 0x0;
      for (0x0 == bJ && 0x0 == bG ? bV = 0.5 / bg : bJ == bh && bK == Math['PI'] && (bV = -0.5 / bg), bI = 0x0; bI <= bg; bI++) {
        var bW = bI / bg;
        bN['x'] = -bf * Math['cos'](bi + bW * bF) * Math['sin'](bG + bU * bH), bN['y'] = bf * Math['cos'](bG + bU * bH), bN['z'] = bf * Math['sin'](bi + bW * bF) * Math['sin'](bG + bU * bH), bQ['push'](bN['x'], bN['y'], bN['z']), bO['copy'](bN)['normalize'](), bR['push'](bO['x'], bO['y'], bO['z']), bS['push'](bW + bV, 0x1 - bU), bT['push'](bL++);
      }
      bM['push'](bT);
    }
    for (bJ = 0x0; bJ < bh; bJ++)
      for (bI = 0x0; bI < bg; bI++) {
        var bX = bM[bJ][bI + 0x1],
          bY = bM[bJ][bI],
          bZ = bM[bJ + 0x1][bI],
          c0 = bM[bJ + 0x1][bI + 0x1];
        (0x0 !== bJ || bG > 0x0) && bP['push'](bX, bY, c0), (bJ !== bh - 0x1 || bK < Math['PI']) && bP['push'](bY, bZ, c0);
      }
    this['setIndex'](bP), this['addAttribute']('position', new Be(bQ, 0x3)), this['addAttribute']('normal', new Be(bR, 0x3)), this['addAttribute']('uv', new Be(bS, 0x2));
  }

  function atq(bf, bg, bh, bi, bF, bG) {
    AH['call'](this), this['type'] = 'RingGeometry', this['parameters'] = {
      'innerRadius': bf,
      'outerRadius': bg,
      'thetaSegments': bh,
      'phiSegments': bi,
      'thetaStart': bF,
      'thetaLength': bG
    }, this['fromBufferGeometry'](new atx(bf, bg, bh, bi, bF, bG)), this['mergeVertices']();
  }

  function atx(bf, bg, bh, bi, bF, bG) {
    Gf['call'](this), this['type'] = 'RingBufferGeometry', this['parameters'] = {
      'innerRadius': bf,
      'outerRadius': bg,
      'thetaSegments': bh,
      'phiSegments': bi,
      'thetaStart': bF,
      'thetaLength': bG
    }, bf = bf || 0.5, bg = bg || 0x1, bF = void 0x0 !== bF ? bF : 0x0, bG = void 0x0 !== bG ? bG : 0x2 * Math['PI'], bh = void 0x0 !== bh ? Math['max'](0x3, bh) : 0x8;
    var bH, bI, bJ, bK = [],
      bL = [],
      bM = [],
      bN = [],
      bO = bf,
      bP = (bg - bf) / (bi = void 0x0 !== bi ? Math['max'](0x1, bi) : 0x1),
      bQ = new eK(),
      bR = new eC();
    for (bI = 0x0; bI <= bi; bI++) {
      for (bJ = 0x0; bJ <= bh; bJ++) bH = bF + bJ / bh * bG, bQ['x'] = bO * Math['cos'](bH), bQ['y'] = bO * Math['sin'](bH), bL['push'](bQ['x'], bQ['y'], bQ['z']), bM['push'](0x0, 0x0, 0x1), bR['x'] = (bQ['x'] / bg + 0x1) / 0x2, bR['y'] = (bQ['y'] / bg + 0x1) / 0x2, bN['push'](bR['x'], bR['y']);
      bO += bP;
    }
    for (bI = 0x0; bI < bi; bI++) {
      var bS = bI * (bh + 0x1);
      for (bJ = 0x0; bJ < bh; bJ++) {
        var bT = bH = bJ + bS,
          bU = bH + bh + 0x1,
          bV = bH + bh + 0x2,
          bW = bH + 0x1;
        bK['push'](bT, bU, bW), bK['push'](bU, bV, bW);
      }
    }
    this['setIndex'](bK), this['addAttribute']('position', new Be(bL, 0x3)), this['addAttribute']('normal', new Be(bM, 0x3)), this['addAttribute']('uv', new Be(bN, 0x2));
  }

  function atU(bf, bg, bh, bi) {
    AH['call'](this), this['type'] = 'LatheGeometry', this['parameters'] = {
      'points': bf,
      'segments': bg,
      'phiStart': bh,
      'phiLength': bi
    }, this['fromBufferGeometry'](new atZ(bf, bg, bh, bi)), this['mergeVertices']();
  }

  function atZ(bf, bg, bh, bi) {
    Gf['call'](this), this['type'] = 'LatheBufferGeometry', this['parameters'] = {
      'points': bf,
      'segments': bg,
      'phiStart': bh,
      'phiLength': bi
    }, bg = Math['floor'](bg) || 0xc, bh = bh || 0x0, bi = bi || 0x2 * Math['PI'], bi = e2['clamp'](bi, 0x0, 0x2 * Math['PI']);
    var bF, bG, bH, bI = [],
      bJ = [],
      bK = [],
      bL = 0x1 / bg,
      bM = new eK(),
      bN = new eC();
    for (bG = 0x0; bG <= bg; bG++) {
      var bO = bh + bG * bL * bi,
        bP = Math['sin'](bO),
        bQ = Math['cos'](bO);
      for (bH = 0x0; bH <= bf['length'] - 0x1; bH++) bM['x'] = bf[bH]['x'] * bP, bM['y'] = bf[bH]['y'], bM['z'] = bf[bH]['x'] * bQ, bJ['push'](bM['x'], bM['y'], bM['z']), bN['x'] = bG / bg, bN['y'] = bH / (bf['length'] - 0x1), bK['push'](bN['x'], bN['y']);
    }
    for (bG = 0x0; bG < bg; bG++)
      for (bH = 0x0; bH < bf['length'] - 0x1; bH++) {
        var bR = bF = bH + bG * bf['length'],
          bS = bF + bf['length'],
          bT = bF + bf['length'] + 0x1,
          bU = bF + 0x1;
        bI['push'](bR, bS, bU), bI['push'](bS, bT, bU);
      }
    if (this['setIndex'](bI), this['addAttribute']('position', new Be(bJ, 0x3)), this['addAttribute']('uv', new Be(bK, 0x2)), this['computeVertexNormals'](), bi === 0x2 * Math['PI']) {
      var bV = this['attributes']['normal']['array'],
        bW = new eK(),
        bX = new eK(),
        bY = new eK();
      for (bF = bg * bf['length'] * 0x3, bG = 0x0, bH = 0x0; bG < bf['length']; bG++, bH += 0x3) bW['x'] = bV[bH + 0x0], bW['y'] = bV[bH + 0x1], bW['z'] = bV[bH + 0x2], bX['x'] = bV[bF + bH + 0x0], bX['y'] = bV[bF + bH + 0x1], bX['z'] = bV[bF + bH + 0x2], bY['addVectors'](bW, bX)['normalize'](), bV[bH + 0x0] = bV[bF + bH + 0x0] = bY['x'], bV[bH + 0x1] = bV[bF + bH + 0x1] = bY['y'], bV[bH + 0x2] = bV[bF + bH + 0x2] = bY['z'];
    }
  }

  function auo(bf, bg) {
    AH['call'](this), this['type'] = 'ShapeGeometry', 'object' == typeof bg && (console['warn']('THREE.ShapeGeometry:\x20Options\x20parameter\x20has\x20been\x20removed.'), bg = bg['curveSegments']), this['parameters'] = {
      'shapes': bf,
      'curveSegments': bg
    }, this['fromBufferGeometry'](new aur(bf, bg)), this['mergeVertices']();
  }

  function aur(bf, bg) {
    Gf['call'](this), this['type'] = 'ShapeBufferGeometry', this['parameters'] = {
      'shapes': bf,
      'curveSegments': bg
    }, bg = bg || 0xc;
    var bh = [],
      bi = [],
      bF = [],
      bG = [],
      bH = 0x0,
      bI = 0x0;
    if (!0x1 === Array['isArray'](bf)) bK(bf);
    else
      for (var bJ = 0x0; bJ < bf['length']; bJ++) bK(bf[bJ]), this['addGroup'](bH, bI, bJ), bH += bI, bI = 0x0;

    function bK(bf) {
      var bH, bJ, bK, bL = bi['length'] / 0x3,
        bM = bf['extractPoints'](bg),
        bN = bM['shape'],
        bO = bM['holes'];
      for (!0x1 === apU['isClockWise'](bN) && (bN = bN['reverse']()), bH = 0x0, bJ = bO['length']; bH < bJ; bH++) bK = bO[bH], !0x0 === apU['isClockWise'](bK) && (bO[bH] = bK['reverse']());
      var bP = apU['triangulateShape'](bN, bO);
      for (bH = 0x0, bJ = bO['length']; bH < bJ; bH++) bK = bO[bH], bN = bN['concat'](bK);
      for (bH = 0x0, bJ = bN['length']; bH < bJ; bH++) {
        var bQ = bN[bH];
        bi['push'](bQ['x'], bQ['y'], 0x0), bF['push'](0x0, 0x0, 0x1), bG['push'](bQ['x'], bQ['y']);
      }
      for (bH = 0x0, bJ = bP['length']; bH < bJ; bH++) {
        var bR = bP[bH],
          bS = bR[0x0] + bL,
          bT = bR[0x1] + bL,
          bU = bR[0x2] + bL;
        bh['push'](bS, bT, bU), bI += 0x3;
      }
    }
    this['setIndex'](bh), this['addAttribute']('position', new Be(bi, 0x3)), this['addAttribute']('normal', new Be(bF, 0x3)), this['addAttribute']('uv', new Be(bG, 0x2));
  }

  function auQ(bf, bg) {
    if (bg['shapes'] = [], Array['isArray'](bf))
      for (var bh = 0x0, bi = bf['length']; bh < bi; bh++) {
        var bF = bf[bh];
        bg['shapes']['push'](bF['uuid']);
      } else bg['shapes']['push'](bf['uuid']);
    return bg;
  }

  function auW(bf, bg) {
    Gf['call'](this), this['type'] = 'EdgesGeometry', this['parameters'] = {
      'thresholdAngle': bg
    }, bg = void 0x0 !== bg ? bg : 0x1;
    var bh, bi, bF, bG, bH = [],
      bI = Math['cos'](e2['DEG2RAD'] * bg),
      bJ = [0x0, 0x0],
      bK = {},
      bL = ['a', 'b', 'c'];
    bf['isBufferGeometry'] ? (bG = new AH())['fromBufferGeometry'](bf) : bG = bf['clone'](), bG['mergeVertices'](), bG['computeFaceNormals']();
    for (var bM = bG['vertices'], bN = bG['faces'], bO = 0x0, bP = bN['length']; bO < bP; bO++)
      for (var bQ = bN[bO], bR = 0x0; bR < 0x3; bR++) bh = bQ[bL[bR]], bi = bQ[bL[(bR + 0x1) % 0x3]], bJ[0x0] = Math['min'](bh, bi), bJ[0x1] = Math['max'](bh, bi), void 0x0 === bK[bF = bJ[0x0] + ',' + bJ[0x1]] ? bK[bF] = {
        'index1': bJ[0x0],
        'index2': bJ[0x1],
        'face1': bO,
        'face2': void 0x0
      } : bK[bF]['face2'] = bO;
    for (bF in bK) {
      var bS = bK[bF];
      if (void 0x0 === bS['face2'] || bN[bS['face1']]['normal']['dot'](bN[bS['face2']]['normal']) <= bI) {
        var bT = bM[bS['index1']];
        bH['push'](bT['x'], bT['y'], bT['z']), bT = bM[bS['index2']], bH['push'](bT['x'], bT['y'], bT['z']);
      }
    }
    this['addAttribute']('position', new Be(bH, 0x3));
  }

  function avg(bf, bg, bh, bi, bF, bG, bH, bI) {
    AH['call'](this), this['type'] = 'CylinderGeometry', this['parameters'] = {
      'radiusTop': bf,
      'radiusBottom': bg,
      'height': bh,
      'radialSegments': bi,
      'heightSegments': bF,
      'openEnded': bG,
      'thetaStart': bH,
      'thetaLength': bI
    }, this['fromBufferGeometry'](new avp(bf, bg, bh, bi, bF, bG, bH, bI)), this['mergeVertices']();
  }

  function avp(bf, bg, bh, bi, bF, bG, bH, bI) {
    Gf['call'](this), this['type'] = 'CylinderBufferGeometry', this['parameters'] = {
      'radiusTop': bf,
      'radiusBottom': bg,
      'height': bh,
      'radialSegments': bi,
      'heightSegments': bF,
      'openEnded': bG,
      'thetaStart': bH,
      'thetaLength': bI
    };
    var bJ = this;
    bf = void 0x0 !== bf ? bf : 0x1, bg = void 0x0 !== bg ? bg : 0x1, bh = bh || 0x1, bi = Math['floor'](bi) || 0x8, bF = Math['floor'](bF) || 0x1, bG = void 0x0 !== bG && bG, bH = void 0x0 !== bH ? bH : 0x0, bI = void 0x0 !== bI ? bI : 0x2 * Math['PI'];
    var bK = [],
      bL = [],
      bM = [],
      bN = [],
      bO = 0x0,
      bP = [],
      bQ = bh / 0x2,
      bR = 0x0;

    function bS(bh) {
      var bF, bG, bP, bS = new eC(),
        bT = new eK(),
        bU = 0x0,
        bV = !0x0 === bh ? bf : bg,
        bW = !0x0 === bh ? 0x1 : -0x1;
      for (bG = bO, bF = 0x1; bF <= bi; bF++) bL['push'](0x0, bQ * bW, 0x0), bM['push'](0x0, bW, 0x0), bN['push'](0.5, 0.5), bO++;
      for (bP = bO, bF = 0x0; bF <= bi; bF++) {
        var bX = bF / bi * bI + bH,
          bY = Math['cos'](bX),
          bZ = Math['sin'](bX);
        bT['x'] = bV * bZ, bT['y'] = bQ * bW, bT['z'] = bV * bY, bL['push'](bT['x'], bT['y'], bT['z']), bM['push'](0x0, bW, 0x0), bS['x'] = 0.5 * bY + 0.5, bS['y'] = 0.5 * bZ * bW + 0.5, bN['push'](bS['x'], bS['y']), bO++;
      }
      for (bF = 0x0; bF < bi; bF++) {
        var c0 = bG + bF,
          c1 = bP + bF;
        !0x0 === bh ? bK['push'](c1, c1 + 0x1, c0) : bK['push'](c1 + 0x1, c1, c0), bU += 0x3;
      }
      bJ['addGroup'](bR, bU, !0x0 === bh ? 0x1 : 0x2), bR += bU;
    }! function() {
      var bG, bS, bT = new eK(),
        bU = new eK(),
        bV = 0x0,
        bW = (bg - bf) / bh;
      for (bS = 0x0; bS <= bF; bS++) {
        var bX = [],
          bY = bS / bF,
          bZ = bY * (bg - bf) + bf;
        for (bG = 0x0; bG <= bi; bG++) {
          var c0 = bG / bi,
            c1 = c0 * bI + bH,
            c2 = Math['sin'](c1),
            c3 = Math['cos'](c1);
          bU['x'] = bZ * c2, bU['y'] = -bY * bh + bQ, bU['z'] = bZ * c3, bL['push'](bU['x'], bU['y'], bU['z']), bT['set'](c2, bW, c3)['normalize'](), bM['push'](bT['x'], bT['y'], bT['z']), bN['push'](c0, 0x1 - bY), bX['push'](bO++);
        }
        bP['push'](bX);
      }
      for (bG = 0x0; bG < bi; bG++)
        for (bS = 0x0; bS < bF; bS++) {
          var c4 = bP[bS][bG],
            c5 = bP[bS + 0x1][bG],
            c6 = bP[bS + 0x1][bG + 0x1],
            c7 = bP[bS][bG + 0x1];
          bK['push'](c4, c5, c7), bK['push'](c5, c6, c7), bV += 0x6;
        }
      bJ['addGroup'](bR, bV, 0x0), bR += bV;
    }(), !0x1 === bG && (bf > 0x0 && bS(!0x0), bg > 0x0 && bS(!0x1)), this['setIndex'](bK), this['addAttribute']('position', new Be(bL, 0x3)), this['addAttribute']('normal', new Be(bM, 0x3)), this['addAttribute']('uv', new Be(bN, 0x2));
  }

  function awd(bf, bg, bh, bi, bF, bG, bH) {
    avg['call'](this, 0x0, bf, bg, bh, bi, bF, bG, bH), this['type'] = 'ConeGeometry', this['parameters'] = {
      'radius': bf,
      'height': bg,
      'radialSegments': bh,
      'heightSegments': bi,
      'openEnded': bF,
      'thetaStart': bG,
      'thetaLength': bH
    };
  }

  function awl(bf, bg, bh, bi, bF, bG, bH) {
    avp['call'](this, 0x0, bf, bg, bh, bi, bF, bG, bH), this['type'] = 'ConeBufferGeometry', this['parameters'] = {
      'radius': bf,
      'height': bg,
      'radialSegments': bh,
      'heightSegments': bi,
      'openEnded': bF,
      'thetaStart': bG,
      'thetaLength': bH
    };
  }

  function awt(bf, bg, bh, bi) {
    AH['call'](this), this['type'] = 'CircleGeometry', this['parameters'] = {
      'radius': bf,
      'segments': bg,
      'thetaStart': bh,
      'thetaLength': bi
    }, this['fromBufferGeometry'](new awy(bf, bg, bh, bi)), this['mergeVertices']();
  }

  function awy(bf, bg, bh, bi) {
    Gf['call'](this), this['type'] = 'CircleBufferGeometry', this['parameters'] = {
      'radius': bf,
      'segments': bg,
      'thetaStart': bh,
      'thetaLength': bi
    }, bf = bf || 0x1, bg = void 0x0 !== bg ? Math['max'](0x3, bg) : 0x8, bh = void 0x0 !== bh ? bh : 0x0, bi = void 0x0 !== bi ? bi : 0x2 * Math['PI'];
    var bF, bG, bH = [],
      bI = [],
      bJ = [],
      bK = [],
      bL = new eK(),
      bM = new eC();
    for (bI['push'](0x0, 0x0, 0x0), bJ['push'](0x0, 0x0, 0x1), bK['push'](0.5, 0.5), bG = 0x0, bF = 0x3; bG <= bg; bG++, bF += 0x3) {
      var bN = bh + bG / bg * bi;
      bL['x'] = bf * Math['cos'](bN), bL['y'] = bf * Math['sin'](bN), bI['push'](bL['x'], bL['y'], bL['z']), bJ['push'](0x0, 0x0, 0x1), bM['x'] = (bI[bF] / bf + 0x1) / 0x2, bM['y'] = (bI[bF + 0x1] / bf + 0x1) / 0x2, bK['push'](bM['x'], bM['y']);
    }
    for (bF = 0x1; bF <= bg; bF++) bH['push'](bF, bF + 0x1, 0x0);
    this['setIndex'](bH), this['addAttribute']('position', new Be(bI, 0x3)), this['addAttribute']('normal', new Be(bJ, 0x3)), this['addAttribute']('uv', new Be(bK, 0x2));
  }
  asJ['prototype'] = Object['create'](AH['prototype']), asJ['prototype']['constructor'] = asJ, asM['prototype'] = Object['create'](aqj['prototype']), asM['prototype']['constructor'] = asM, asR['prototype'] = Object['create'](AH['prototype']), asR['prototype']['constructor'] = asR, asZ['prototype'] = Object['create'](Gf['prototype']), asZ['prototype']['constructor'] = asZ, atq['prototype'] = Object['create'](AH['prototype']), atq['prototype']['constructor'] = atq, atx['prototype'] = Object['create'](Gf['prototype']), atx['prototype']['constructor'] = atx, atU['prototype'] = Object['create'](AH['prototype']), atU['prototype']['constructor'] = atU, atZ['prototype'] = Object['create'](Gf['prototype']), atZ['prototype']['constructor'] = atZ, auo['prototype'] = Object['create'](AH['prototype']), auo['prototype']['constructor'] = auo, auo['prototype']['toJSON'] = function() {
    var bf = AH['prototype']['toJSON']['call'](this);
    return auQ(this['parameters']['shapes'], bf);
  }, aur['prototype'] = Object['create'](Gf['prototype']), aur['prototype']['constructor'] = aur, aur['prototype']['toJSON'] = function() {
    var bf = Gf['prototype']['toJSON']['call'](this);
    return auQ(this['parameters']['shapes'], bf);
  }, auW['prototype'] = Object['create'](Gf['prototype']), auW['prototype']['constructor'] = auW, avg['prototype'] = Object['create'](AH['prototype']), avg['prototype']['constructor'] = avg, avp['prototype'] = Object['create'](Gf['prototype']), avp['prototype']['constructor'] = avp, awd['prototype'] = Object['create'](avg['prototype']), awd['prototype']['constructor'] = awd, awl['prototype'] = Object['create'](avp['prototype']), awl['prototype']['constructor'] = awl, awt['prototype'] = Object['create'](AH['prototype']), awt['prototype']['constructor'] = awt, awy['prototype'] = Object['create'](Gf['prototype']), awy['prototype']['constructor'] = awy;
  var awO = Object['freeze']({
    'WireframeGeometry': afx,
    'ParametricGeometry': afW,
    'ParametricBufferGeometry': ag0,
    'TetrahedronGeometry': ahr,
    'TetrahedronBufferGeometry': ahu,
    'OctahedronGeometry': ahx,
    'OctahedronBufferGeometry': ahA,
    'IcosahedronGeometry': ahD,
    'IcosahedronBufferGeometry': ahG,
    'DodecahedronGeometry': ahL,
    'DodecahedronBufferGeometry': ahO,
    'PolyhedronGeometry': agm,
    'PolyhedronBufferGeometry': agr,
    'TubeGeometry': ahU,
    'TubeBufferGeometry': ai2,
    'TorusKnotGeometry': aiu,
    'TorusKnotBufferGeometry': aiC,
    'TorusGeometry': aje,
    'TorusBufferGeometry': ajk,
    'TextGeometry': asJ,
    'TextBufferGeometry': asM,
    'SphereGeometry': asR,
    'SphereBufferGeometry': asZ,
    'RingGeometry': atq,
    'RingBufferGeometry': atx,
    'PlaneGeometry': H5,
    'PlaneBufferGeometry': Ha,
    'LatheGeometry': atU,
    'LatheBufferGeometry': atZ,
    'ShapeGeometry': auo,
    'ShapeBufferGeometry': aur,
    'ExtrudeGeometry': aqg,
    'ExtrudeBufferGeometry': aqj,
    'EdgesGeometry': auW,
    'ConeGeometry': awd,
    'ConeBufferGeometry': awl,
    'CylinderGeometry': avg,
    'CylinderBufferGeometry': avp,
    'CircleGeometry': awt,
    'CircleBufferGeometry': awy,
    'BoxGeometry': Gg,
    'BoxBufferGeometry': Gn
  });

  function awP(bf) {
    Kf['call'](this), this['type'] = 'ShadowMaterial', this['color'] = new w7(0x0), this['transparent'] = !0x0, this['setValues'](bf);
  }

  function awR(bf) {
    KN['call'](this, bf), this['type'] = 'RawShaderMaterial';
  }

  function awT(bf) {
    Kf['call'](this), this['defines'] = {
      'STANDARD': ''
    }, this['type'] = 'MeshStandardMaterial', this['color'] = new w7(0xffffff), this['roughness'] = 0.5, this['metalness'] = 0.5, this['map'] = null, this['lightMap'] = null, this['lightMapIntensity'] = 0x1, this['aoMap'] = null, this['aoMapIntensity'] = 0x1, this['emissive'] = new w7(0x0), this['emissiveIntensity'] = 0x1, this['emissiveMap'] = null, this['bumpMap'] = null, this['bumpScale'] = 0x1, this['normalMap'] = null, this['normalMapType'] = e0, this['normalScale'] = new eC(0x1, 0x1), this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['roughnessMap'] = null, this['metalnessMap'] = null, this['alphaMap'] = null, this['envMap'] = null, this['envMapIntensity'] = 0x1, this['refractionRatio'] = 0.98, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['wireframeLinecap'] = 'round', this['wireframeLinejoin'] = 'round', this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['setValues'](bf);
  }

  function awV(bf) {
    awT['call'](this), this['defines'] = {
      'PHYSICAL': ''
    }, this['type'] = 'MeshPhysicalMaterial', this['reflectivity'] = 0.5, this['clearCoat'] = 0x0, this['clearCoatRoughness'] = 0x0, this['setValues'](bf);
  }

  function awX(bf) {
    Kf['call'](this), this['type'] = 'MeshPhongMaterial', this['color'] = new w7(0xffffff), this['specular'] = new w7(0x111111), this['shininess'] = 0x1e, this['map'] = null, this['lightMap'] = null, this['lightMapIntensity'] = 0x1, this['aoMap'] = null, this['aoMapIntensity'] = 0x1, this['emissive'] = new w7(0x0), this['emissiveIntensity'] = 0x1, this['emissiveMap'] = null, this['bumpMap'] = null, this['bumpScale'] = 0x1, this['normalMap'] = null, this['normalMapType'] = e0, this['normalScale'] = new eC(0x1, 0x1), this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['specularMap'] = null, this['alphaMap'] = null, this['envMap'] = null, this['combine'] = cv, this['reflectivity'] = 0x1, this['refractionRatio'] = 0.98, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['wireframeLinecap'] = 'round', this['wireframeLinejoin'] = 'round', this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['setValues'](bf);
  }

  function awZ(bf) {
    awX['call'](this), this['defines'] = {
      'TOON': ''
    }, this['type'] = 'MeshToonMaterial', this['gradientMap'] = null, this['setValues'](bf);
  }

  function ax1(bf) {
    Kf['call'](this), this['type'] = 'MeshNormalMaterial', this['bumpMap'] = null, this['bumpScale'] = 0x1, this['normalMap'] = null, this['normalMapType'] = e0, this['normalScale'] = new eC(0x1, 0x1), this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['fog'] = !0x1, this['lights'] = !0x1, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['setValues'](bf);
  }

  function ax3(bf) {
    Kf['call'](this), this['type'] = 'MeshLambertMaterial', this['color'] = new w7(0xffffff), this['map'] = null, this['lightMap'] = null, this['lightMapIntensity'] = 0x1, this['aoMap'] = null, this['aoMapIntensity'] = 0x1, this['emissive'] = new w7(0x0), this['emissiveIntensity'] = 0x1, this['emissiveMap'] = null, this['specularMap'] = null, this['alphaMap'] = null, this['envMap'] = null, this['combine'] = cv, this['reflectivity'] = 0x1, this['refractionRatio'] = 0.98, this['wireframe'] = !0x1, this['wireframeLinewidth'] = 0x1, this['wireframeLinecap'] = 'round', this['wireframeLinejoin'] = 'round', this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['setValues'](bf);
  }

  function ax5(bf) {
    Kf['call'](this), this['defines'] = {
      'MATCAP': ''
    }, this['type'] = 'MeshMatcapMaterial', this['color'] = new w7(0xffffff), this['matcap'] = null, this['map'] = null, this['bumpMap'] = null, this['bumpScale'] = 0x1, this['normalMap'] = null, this['normalMapType'] = e0, this['normalScale'] = new eC(0x1, 0x1), this['displacementMap'] = null, this['displacementScale'] = 0x1, this['displacementBias'] = 0x0, this['alphaMap'] = null, this['skinning'] = !0x1, this['morphTargets'] = !0x1, this['morphNormals'] = !0x1, this['lights'] = !0x1, this['setValues'](bf);
  }

  function ax7(bf) {
    aey['call'](this), this['type'] = 'LineDashedMaterial', this['scale'] = 0x1, this['dashSize'] = 0x3, this['gapSize'] = 0x1, this['setValues'](bf);
  }
  awP['prototype'] = Object['create'](Kf['prototype']), awP['prototype']['constructor'] = awP, awP['prototype']['isShadowMaterial'] = !0x0, awP['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this;
  }, awR['prototype'] = Object['create'](KN['prototype']), awR['prototype']['constructor'] = awR, awR['prototype']['isRawShaderMaterial'] = !0x0, awT['prototype'] = Object['create'](Kf['prototype']), awT['prototype']['constructor'] = awT, awT['prototype']['isMeshStandardMaterial'] = !0x0, awT['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['defines'] = {
      'STANDARD': ''
    }, this['color']['copy'](bf['color']), this['roughness'] = bf['roughness'], this['metalness'] = bf['metalness'], this['map'] = bf['map'], this['lightMap'] = bf['lightMap'], this['lightMapIntensity'] = bf['lightMapIntensity'], this['aoMap'] = bf['aoMap'], this['aoMapIntensity'] = bf['aoMapIntensity'], this['emissive']['copy'](bf['emissive']), this['emissiveMap'] = bf['emissiveMap'], this['emissiveIntensity'] = bf['emissiveIntensity'], this['bumpMap'] = bf['bumpMap'], this['bumpScale'] = bf['bumpScale'], this['normalMap'] = bf['normalMap'], this['normalMapType'] = bf['normalMapType'], this['normalScale']['copy'](bf['normalScale']), this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['roughnessMap'] = bf['roughnessMap'], this['metalnessMap'] = bf['metalnessMap'], this['alphaMap'] = bf['alphaMap'], this['envMap'] = bf['envMap'], this['envMapIntensity'] = bf['envMapIntensity'], this['refractionRatio'] = bf['refractionRatio'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['wireframeLinecap'] = bf['wireframeLinecap'], this['wireframeLinejoin'] = bf['wireframeLinejoin'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
  }, awV['prototype'] = Object['create'](awT['prototype']), awV['prototype']['constructor'] = awV, awV['prototype']['isMeshPhysicalMaterial'] = !0x0, awV['prototype']['copy'] = function(bf) {
    return awT['prototype']['copy']['call'](this, bf), this['defines'] = {
      'PHYSICAL': ''
    }, this['reflectivity'] = bf['reflectivity'], this['clearCoat'] = bf['clearCoat'], this['clearCoatRoughness'] = bf['clearCoatRoughness'], this;
  }, awX['prototype'] = Object['create'](Kf['prototype']), awX['prototype']['constructor'] = awX, awX['prototype']['isMeshPhongMaterial'] = !0x0, awX['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['specular']['copy'](bf['specular']), this['shininess'] = bf['shininess'], this['map'] = bf['map'], this['lightMap'] = bf['lightMap'], this['lightMapIntensity'] = bf['lightMapIntensity'], this['aoMap'] = bf['aoMap'], this['aoMapIntensity'] = bf['aoMapIntensity'], this['emissive']['copy'](bf['emissive']), this['emissiveMap'] = bf['emissiveMap'], this['emissiveIntensity'] = bf['emissiveIntensity'], this['bumpMap'] = bf['bumpMap'], this['bumpScale'] = bf['bumpScale'], this['normalMap'] = bf['normalMap'], this['normalMapType'] = bf['normalMapType'], this['normalScale']['copy'](bf['normalScale']), this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['specularMap'] = bf['specularMap'], this['alphaMap'] = bf['alphaMap'], this['envMap'] = bf['envMap'], this['combine'] = bf['combine'], this['reflectivity'] = bf['reflectivity'], this['refractionRatio'] = bf['refractionRatio'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['wireframeLinecap'] = bf['wireframeLinecap'], this['wireframeLinejoin'] = bf['wireframeLinejoin'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
  }, awZ['prototype'] = Object['create'](awX['prototype']), awZ['prototype']['constructor'] = awZ, awZ['prototype']['isMeshToonMaterial'] = !0x0, awZ['prototype']['copy'] = function(bf) {
    return awX['prototype']['copy']['call'](this, bf), this['gradientMap'] = bf['gradientMap'], this;
  }, ax1['prototype'] = Object['create'](Kf['prototype']), ax1['prototype']['constructor'] = ax1, ax1['prototype']['isMeshNormalMaterial'] = !0x0, ax1['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['bumpMap'] = bf['bumpMap'], this['bumpScale'] = bf['bumpScale'], this['normalMap'] = bf['normalMap'], this['normalMapType'] = bf['normalMapType'], this['normalScale']['copy'](bf['normalScale']), this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
  }, ax3['prototype'] = Object['create'](Kf['prototype']), ax3['prototype']['constructor'] = ax3, ax3['prototype']['isMeshLambertMaterial'] = !0x0, ax3['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['map'] = bf['map'], this['lightMap'] = bf['lightMap'], this['lightMapIntensity'] = bf['lightMapIntensity'], this['aoMap'] = bf['aoMap'], this['aoMapIntensity'] = bf['aoMapIntensity'], this['emissive']['copy'](bf['emissive']), this['emissiveMap'] = bf['emissiveMap'], this['emissiveIntensity'] = bf['emissiveIntensity'], this['specularMap'] = bf['specularMap'], this['alphaMap'] = bf['alphaMap'], this['envMap'] = bf['envMap'], this['combine'] = bf['combine'], this['reflectivity'] = bf['reflectivity'], this['refractionRatio'] = bf['refractionRatio'], this['wireframe'] = bf['wireframe'], this['wireframeLinewidth'] = bf['wireframeLinewidth'], this['wireframeLinecap'] = bf['wireframeLinecap'], this['wireframeLinejoin'] = bf['wireframeLinejoin'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
  }, ax5['prototype'] = Object['create'](Kf['prototype']), ax5['prototype']['constructor'] = ax5, ax5['prototype']['isMeshMatcapMaterial'] = !0x0, ax5['prototype']['copy'] = function(bf) {
    return Kf['prototype']['copy']['call'](this, bf), this['defines'] = {
      'MATCAP': ''
    }, this['color']['copy'](bf['color']), this['matcap'] = bf['matcap'], this['map'] = bf['map'], this['bumpMap'] = bf['bumpMap'], this['bumpScale'] = bf['bumpScale'], this['normalMap'] = bf['normalMap'], this['normalMapType'] = bf['normalMapType'], this['normalScale']['copy'](bf['normalScale']), this['displacementMap'] = bf['displacementMap'], this['displacementScale'] = bf['displacementScale'], this['displacementBias'] = bf['displacementBias'], this['alphaMap'] = bf['alphaMap'], this['skinning'] = bf['skinning'], this['morphTargets'] = bf['morphTargets'], this['morphNormals'] = bf['morphNormals'], this;
  }, ax7['prototype'] = Object['create'](aey['prototype']), ax7['prototype']['constructor'] = ax7, ax7['prototype']['isLineDashedMaterial'] = !0x0, ax7['prototype']['copy'] = function(bf) {
    return aey['prototype']['copy']['call'](this, bf), this['scale'] = bf['scale'], this['dashSize'] = bf['dashSize'], this['gapSize'] = bf['gapSize'], this;
  };
  var axi = Object['freeze']({
      'ShadowMaterial': awP,
      'SpriteMaterial': aej,
      'RawShaderMaterial': awR,
      'ShaderMaterial': KN,
      'PointsMaterial': aeK,
      'MeshPhysicalMaterial': awV,
      'MeshStandardMaterial': awT,
      'MeshPhongMaterial': awX,
      'MeshToonMaterial': awZ,
      'MeshNormalMaterial': ax1,
      'MeshLambertMaterial': ax3,
      'MeshDepthMaterial': ZV,
      'MeshDistanceMaterial': ZX,
      'MeshBasicMaterial': KW,
      'MeshMatcapMaterial': ax5,
      'LineDashedMaterial': ax7,
      'LineBasicMaterial': aey,
      'Material': Kf
    }),
    axj = {
      'arraySlice': function(bf, bg, bh) {
        return axj['isTypedArray'](bf) ? new bf['constructor'](bf['subarray'](bg, void 0x0 !== bh ? bh : bf['length'])) : bf['slice'](bg, bh);
      },
      'convertArray': function(bf, bg, bh) {
        return !bf || !bh && bf['constructor'] === bg ? bf : 'number' == typeof bg['BYTES_PER_ELEMENT'] ? new bg(bf) : Array['prototype']['slice']['call'](bf);
      },
      'isTypedArray': function(bf) {
        return ArrayBuffer['isView'](bf) && !(bf instanceof DataView);
      },
      'getKeyframeOrder': function(bf) {
        for (var bg = bf['length'], bh = new Array(bg), bi = 0x0; bi !== bg; ++bi) bh[bi] = bi;
        return bh['sort'](function(bg, bh) {
          return bf[bg] - bf[bh];
        }), bh;
      },
      'sortedArray': function(bf, bg, bh) {
        for (var bi = bf['length'], bF = new bf['constructor'](bi), bG = 0x0, bH = 0x0; bH !== bi; ++bG)
          for (var bI = bh[bG] * bg, bJ = 0x0; bJ !== bg; ++bJ) bF[bH++] = bf[bI + bJ];
        return bF;
      },
      'flattenJSON': function(bf, bg, bh, bi) {
        for (var bF = 0x1, bG = bf[0x0]; void 0x0 !== bG && void 0x0 === bG[bi];) bG = bf[bF++];
        if (void 0x0 !== bG) {
          var bH = bG[bi];
          if (void 0x0 !== bH)
            if (Array['isArray'](bH))
              do {
                void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']), bh['push']['apply'](bh, bH)), bG = bf[bF++];
              } while (void 0x0 !== bG);
            else if (void 0x0 !== bH['toArray'])
            do {
              void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']), bH['toArray'](bh, bh['length'])), bG = bf[bF++];
            } while (void 0x0 !== bG);
          else
            do {
              void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']), bh['push'](bH)), bG = bf[bF++];
            } while (void 0x0 !== bG);
        }
      }
    };

  function axN(bf, bg, bh, bi) {
    this['parameterPositions'] = bf, this['_cachedIndex'] = 0x0, this['resultBuffer'] = void 0x0 !== bi ? bi : new bg['constructor'](bh), this['sampleValues'] = bg, this['valueSize'] = bh;
  }

  function axS(bf, bg, bh, bi) {
    axN['call'](this, bf, bg, bh, bi), this['_weightPrev'] = -0x0, this['_offsetPrev'] = -0x0, this['_weightNext'] = -0x0, this['_offsetNext'] = -0x0;
  }

  function axX(bf, bg, bh, bi) {
    axN['call'](this, bf, bg, bh, bi);
  }

  function ay2(bf, bg, bh, bi) {
    axN['call'](this, bf, bg, bh, bi);
  }

  function ay7(bf, bg, bh, bi) {
    if (void 0x0 === bf) throw new Error('THREE.KeyframeTrack:\x20track\x20name\x20is\x20undefined');
    if (void 0x0 === bg || 0x0 === bg['length']) throw new Error('THREE.KeyframeTrack:\x20no\x20keyframes\x20in\x20track\x20named\x20' + bf);
    this['name'] = bf, this['times'] = axj['convertArray'](bg, this['TimeBufferType']), this['values'] = axj['convertArray'](bh, this['ValueBufferType']), this['setInterpolation'](bi || this['DefaultInterpolation']);
  }

  function ayc(bf, bg, bh) {
    ay7['call'](this, bf, bg, bh);
  }

  function ayg(bf, bg, bh, bi) {
    ay7['call'](this, bf, bg, bh, bi);
  }

  function ayl(bf, bg, bh, bi) {
    ay7['call'](this, bf, bg, bh, bi);
  }

  function ayq(bf, bg, bh, bi) {
    axN['call'](this, bf, bg, bh, bi);
  }

  function ayv(bf, bg, bh, bi) {
    ay7['call'](this, bf, bg, bh, bi);
  }

  function ayA(bf, bg, bh, bi) {
    ay7['call'](this, bf, bg, bh, bi);
  }

  function ayF(bf, bg, bh, bi) {
    ay7['call'](this, bf, bg, bh, bi);
  }

  function ayK(bf, bg, bh) {
    this['name'] = bf, this['tracks'] = bh, this['duration'] = void 0x0 !== bg ? bg : -0x1, this['uuid'] = e2['generateUUID'](), this['duration'] < 0x0 && this['resetDuration']();
  }

  function ayO(bf) {
    if (void 0x0 === bf['type']) throw new Error('THREE.KeyframeTrack:\x20track\x20type\x20undefined,\x20can\x20not\x20parse');
    var bg = function(bf) {
      switch (bf['toLowerCase']()) {
        case 'scalar':
        case 'double':
        case 'float':
        case 'number':
        case 'integer':
          return ayl;
        case 'vector':
        case 'vector2':
        case 'vector3':
        case 'vector4':
          return ayF;
        case 'color':
          return ayg;
        case 'quaternion':
          return ayv;
        case 'bool':
        case 'boolean':
          return ayc;
        case 'string':
          return ayA;
      }
      throw new Error('THREE.KeyframeTrack:\x20Unsupported\x20typeName:\x20' + bf);
    }(bf['type']);
    if (void 0x0 === bf['times']) {
      var bh = [],
        bi = [];
      axj['flattenJSON'](bf['keys'], bh, bi, 'value'), bf['times'] = bh, bf['values'] = bi;
    }
    return void 0x0 !== bg['parse'] ? bg['parse'](bf) : new bg(bf['name'], bf['times'], bf['values'], bf['interpolation']);
  }
  Object['assign'](axN['prototype'], {
    'evaluate': function(bf) {
      var bg = this['parameterPositions'],
        bh = this['_cachedIndex'],
        bi = bg[bh],
        bF = bg[bh - 0x1];
      ayZ: {
        az0: {
          var bG;az2: {
            az3: if (!(bf < bi)) {
              for (var bH = bh + 0x2;;) {
                if (void 0x0 === bi) {
                  if (bf < bF) break az3;
                  return bh = bg['length'], this['_cachedIndex'] = bh, this['afterEnd_'](bh - 0x1, bf, bF);
                }
                if (bh === bH) break;
                if (bF = bi, bf < (bi = bg[++bh])) break az0;
              }
              bG = bg['length'];
              break az2;
            }if (bf >= bF) break ayZ;
            var bI = bg[0x1];bf < bI && (bh = 0x2, bF = bI);
            for (bH = bh - 0x2;;) {
              if (void 0x0 === bF) return this['_cachedIndex'] = 0x0, this['beforeStart_'](0x0, bf, bi);
              if (bh === bH) break;
              if (bi = bF, bf >= (bF = bg[--bh - 0x1])) break az0;
            }
            bG = bh,
            bh = 0x0;
          }
          for (; bh < bG;) {
            var bJ = bh + bG >>> 0x1;
            bf < bg[bJ] ? bG = bJ : bh = bJ + 0x1;
          }
          if (bi = bg[bh], void 0x0 === (bF = bg[bh - 0x1])) return this['_cachedIndex'] = 0x0,
          this['beforeStart_'](0x0, bf, bi);
          if (void 0x0 === bi) return bh = bg['length'],
          this['_cachedIndex'] = bh,
          this['afterEnd_'](bh - 0x1, bF, bf);
        }
        this['_cachedIndex'] = bh,
        this['intervalChanged_'](bh, bF, bi);
      }
      return this['interpolate_'](bh, bF, bf, bi);
    },
    'settings': null,
    'DefaultSettings_': {},
    'getSettings_': function() {
      return this['settings'] || this['DefaultSettings_'];
    },
    'copySampleValue_': function(bf) {
      for (var bg = this['resultBuffer'], bh = this['sampleValues'], bi = this['valueSize'], bF = bf * bi, bG = 0x0; bG !== bi; ++bG) bg[bG] = bh[bF + bG];
      return bg;
    },
    'interpolate_': function() {
      throw new Error('call\x20to\x20abstract\x20method');
    },
    'intervalChanged_': function() {}
  }), Object['assign'](axN['prototype'], {
    'beforeStart_': axN['prototype']['copySampleValue_'],
    'afterEnd_': axN['prototype']['copySampleValue_']
  }), axS['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
    'constructor': axS,
    'DefaultSettings_': {
      'endingStart': dK,
      'endingEnd': dK
    },
    'intervalChanged_': function(bf, bg, bh) {
      var bi = this['parameterPositions'],
        bF = bf - 0x2,
        bG = bf + 0x1,
        bH = bi[bF],
        bI = bi[bG];
      if (void 0x0 === bH) switch (this['getSettings_']()['endingStart']) {
        case dL:
          bF = bf, bH = 0x2 * bg - bh;
          break;
        case dM:
          bH = bg + bi[bF = bi['length'] - 0x2] - bi[bF + 0x1];
          break;
        default:
          bF = bf, bH = bh;
      }
      if (void 0x0 === bI) switch (this['getSettings_']()['endingEnd']) {
        case dL:
          bG = bf, bI = 0x2 * bh - bg;
          break;
        case dM:
          bG = 0x1, bI = bh + bi[0x1] - bi[0x0];
          break;
        default:
          bG = bf - 0x1, bI = bg;
      }
      var bJ = 0.5 * (bh - bg),
        bK = this['valueSize'];
      this['_weightPrev'] = bJ / (bg - bH), this['_weightNext'] = bJ / (bI - bh), this['_offsetPrev'] = bF * bK, this['_offsetNext'] = bG * bK;
    },
    'interpolate_': function(bf, bg, bh, bi) {
      for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = bI - bH, bK = this['_offsetPrev'], bL = this['_offsetNext'], bM = this['_weightPrev'], bN = this['_weightNext'], bO = (bh - bg) / (bi - bg), bP = bO * bO, bQ = bP * bO, bR = -bM * bQ + 0x2 * bM * bP - bM * bO, bS = (0x1 + bM) * bQ + (-1.5 - 0x2 * bM) * bP + (-0.5 + bM) * bO + 0x1, bT = (-0x1 - bN) * bQ + (1.5 + bN) * bP + 0.5 * bO, bU = bN * bQ - bN * bP, bV = 0x0; bV !== bH; ++bV) bF[bV] = bR * bG[bK + bV] + bS * bG[bJ + bV] + bT * bG[bI + bV] + bU * bG[bL + bV];
      return bF;
    }
  }), axX['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
    'constructor': axX,
    'interpolate_': function(bf, bg, bh, bi) {
      for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = bI - bH, bK = (bh - bg) / (bi - bg), bL = 0x1 - bK, bM = 0x0; bM !== bH; ++bM) bF[bM] = bG[bJ + bM] * bL + bG[bI + bM] * bK;
      return bF;
    }
  }), ay2['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
    'constructor': ay2,
    'interpolate_': function(bf) {
      return this['copySampleValue_'](bf - 0x1);
    }
  }), Object['assign'](ay7, {
    'toJSON': function(bf) {
      var bg, bh = bf['constructor'];
      if (void 0x0 !== bh['toJSON']) bg = bh['toJSON'](bf);
      else {
        bg = {
          'name': bf['name'],
          'times': axj['convertArray'](bf['times'], Array),
          'values': axj['convertArray'](bf['values'], Array)
        };
        var bi = bf['getInterpolation']();
        bi !== bf['DefaultInterpolation'] && (bg['interpolation'] = bi);
      }
      return bg['type'] = bf['ValueTypeName'], bg;
    }
  }), Object['assign'](ay7['prototype'], {
    'constructor': ay7,
    'TimeBufferType': Float32Array,
    'ValueBufferType': Float32Array,
    'DefaultInterpolation': dI,
    'InterpolantFactoryMethodDiscrete': function(bf) {
      return new ay2(this['times'], this['values'], this['getValueSize'](), bf);
    },
    'InterpolantFactoryMethodLinear': function(bf) {
      return new axX(this['times'], this['values'], this['getValueSize'](), bf);
    },
    'InterpolantFactoryMethodSmooth': function(bf) {
      return new axS(this['times'], this['values'], this['getValueSize'](), bf);
    },
    'setInterpolation': function(bf) {
      var bg;
      switch (bf) {
        case dH:
          bg = this['InterpolantFactoryMethodDiscrete'];
          break;
        case dI:
          bg = this['InterpolantFactoryMethodLinear'];
          break;
        case dJ:
          bg = this['InterpolantFactoryMethodSmooth'];
      }
      if (void 0x0 === bg) {
        var bh = 'unsupported\x20interpolation\x20for\x20' + this['ValueTypeName'] + '\x20keyframe\x20track\x20named\x20' + this['name'];
        if (void 0x0 === this['createInterpolant']) {
          if (bf === this['DefaultInterpolation']) throw new Error(bh);
          this['setInterpolation'](this['DefaultInterpolation']);
        }
        return console['warn']('THREE.KeyframeTrack:', bh), this;
      }
      return this['createInterpolant'] = bg, this;
    },
    'getInterpolation': function() {
      switch (this['createInterpolant']) {
        case this['InterpolantFactoryMethodDiscrete']:
          return dH;
        case this['InterpolantFactoryMethodLinear']:
          return dI;
        case this['InterpolantFactoryMethodSmooth']:
          return dJ;
      }
    },
    'getValueSize': function() {
      return this['values']['length'] / this['times']['length'];
    },
    'shift': function(bf) {
      if (0x0 !== bf)
        for (var bg = this['times'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) bg[bh] += bf;
      return this;
    },
    'scale': function(bf) {
      if (0x1 !== bf)
        for (var bg = this['times'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) bg[bh] *= bf;
      return this;
    },
    'trim': function(bf, bg) {
      for (var bh = this['times'], bi = bh['length'], bF = 0x0, bG = bi - 0x1; bF !== bi && bh[bF] < bf;) ++bF;
      for (; - 0x1 !== bG && bh[bG] > bg;) --bG;
      if (++bG, 0x0 !== bF || bG !== bi) {
        bF >= bG && (bF = (bG = Math['max'](bG, 0x1)) - 0x1);
        var bH = this['getValueSize']();
        this['times'] = axj['arraySlice'](bh, bF, bG), this['values'] = axj['arraySlice'](this['values'], bF * bH, bG * bH);
      }
      return this;
    },
    'validate': function() {
      var bf = !0x0,
        bg = this['getValueSize']();
      bg - Math['floor'](bg) != 0x0 && (console['error']('THREE.KeyframeTrack:\x20Invalid\x20value\x20size\x20in\x20track.', this), bf = !0x1);
      var bh = this['times'],
        bi = this['values'],
        bF = bh['length'];
      0x0 === bF && (console['error']('THREE.KeyframeTrack:\x20Track\x20is\x20empty.', this), bf = !0x1);
      for (var bG = null, bH = 0x0; bH !== bF; bH++) {
        var bI = bh[bH];
        if ('number' == typeof bI && isNaN(bI)) {
          console['error']('THREE.KeyframeTrack:\x20Time\x20is\x20not\x20a\x20valid\x20number.', this, bH, bI), bf = !0x1;
          break;
        }
        if (null !== bG && bG > bI) {
          console['error']('THREE.KeyframeTrack:\x20Out\x20of\x20order\x20keys.', this, bH, bI, bG), bf = !0x1;
          break;
        }
        bG = bI;
      }
      if (void 0x0 !== bi && axj['isTypedArray'](bi)) {
        bH = 0x0;
        for (var bJ = bi['length']; bH !== bJ; ++bH) {
          var bK = bi[bH];
          if (isNaN(bK)) {
            console['error']('THREE.KeyframeTrack:\x20Value\x20is\x20not\x20a\x20valid\x20number.', this, bH, bK), bf = !0x1;
            break;
          }
        }
      }
      return bf;
    },
    'optimize': function() {
      for (var bf = this['times'], bg = this['values'], bh = this['getValueSize'](), bi = this['getInterpolation']() === dJ, bF = 0x1, bG = bf['length'] - 0x1, bH = 0x1; bH < bG; ++bH) {
        var bI = !0x1,
          bJ = bf[bH];
        if (bJ !== bf[bH + 0x1] && (0x1 !== bH || bJ !== bJ[0x0]))
          if (bi) bI = !0x0;
          else
            for (var bK = bH * bh, bL = bK - bh, bM = bK + bh, bN = 0x0; bN !== bh; ++bN) {
              var bO = bg[bK + bN];
              if (bO !== bg[bL + bN] || bO !== bg[bM + bN]) {
                bI = !0x0;
                break;
              }
            }
        if (bI) {
          if (bH !== bF) {
            bf[bF] = bf[bH];
            var bP = bH * bh,
              bQ = bF * bh;
            for (bN = 0x0; bN !== bh; ++bN) bg[bQ + bN] = bg[bP + bN];
          }++bF;
        }
      }
      if (bG > 0x0) {
        bf[bF] = bf[bG];
        for (bP = bG * bh, bQ = bF * bh, bN = 0x0; bN !== bh; ++bN) bg[bQ + bN] = bg[bP + bN];
        ++bF;
      }
      return bF !== bf['length'] && (this['times'] = axj['arraySlice'](bf, 0x0, bF), this['values'] = axj['arraySlice'](bg, 0x0, bF * bh)), this;
    },
    'clone': function() {
      var bf = axj['arraySlice'](this['times'], 0x0),
        bg = axj['arraySlice'](this['values'], 0x0),
        bh = new(0x0, this['constructor'])(this['name'], bf, bg);
      return bh['createInterpolant'] = this['createInterpolant'], bh;
    }
  }), ayc['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
    'constructor': ayc,
    'ValueTypeName': 'bool',
    'ValueBufferType': Array,
    'DefaultInterpolation': dH,
    'InterpolantFactoryMethodLinear': void 0x0,
    'InterpolantFactoryMethodSmooth': void 0x0
  }), ayg['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
    'constructor': ayg,
    'ValueTypeName': 'color'
  }), ayl['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
    'constructor': ayl,
    'ValueTypeName': 'number'
  }), ayq['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
    'constructor': ayq,
    'interpolate_': function(bf, bg, bh, bi) {
      for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = (bh - bg) / (bi - bg), bK = bI + bH; bI !== bK; bI += 0x4) eF['slerpFlat'](bF, 0x0, bG, bI - bH, bG, bI, bJ);
      return bF;
    }
  }), ayv['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
    'constructor': ayv,
    'ValueTypeName': 'quaternion',
    'DefaultInterpolation': dI,
    'InterpolantFactoryMethodLinear': function(bf) {
      return new ayq(this['times'], this['values'], this['getValueSize'](), bf);
    },
    'InterpolantFactoryMethodSmooth': void 0x0
  }), ayA['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
    'constructor': ayA,
    'ValueTypeName': 'string',
    'ValueBufferType': Array,
    'DefaultInterpolation': dH,
    'InterpolantFactoryMethodLinear': void 0x0,
    'InterpolantFactoryMethodSmooth': void 0x0
  }), ayF['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
    'constructor': ayF,
    'ValueTypeName': 'vector'
  }), Object['assign'](ayK, {
    'parse': function(bf) {
      for (var bg = [], bh = bf['tracks'], bi = 0x1 / (bf['fps'] || 0x1), bF = 0x0, bG = bh['length']; bF !== bG; ++bF) bg['push'](ayO(bh[bF])['scale'](bi));
      return new ayK(bf['name'], bf['duration'], bg);
    },
    'toJSON': function(bf) {
      for (var bg = [], bh = bf['tracks'], bi = {
          'name': bf['name'],
          'duration': bf['duration'],
          'tracks': bg,
          'uuid': bf['uuid']
        }, bF = 0x0, bG = bh['length']; bF !== bG; ++bF) bg['push'](ay7['toJSON'](bh[bF]));
      return bi;
    },
    'CreateFromMorphTargetSequence': function(bf, bg, bh, bi) {
      for (var bF = bg['length'], bG = [], bH = 0x0; bH < bF; bH++) {
        var bI = [],
          bJ = [];
        bI['push']((bH + bF - 0x1) % bF, bH, (bH + 0x1) % bF), bJ['push'](0x0, 0x1, 0x0);
        var bK = axj['getKeyframeOrder'](bI);
        bI = axj['sortedArray'](bI, 0x1, bK), bJ = axj['sortedArray'](bJ, 0x1, bK), bi || 0x0 !== bI[0x0] || (bI['push'](bF), bJ['push'](bJ[0x0])), bG['push'](new ayl('.morphTargetInfluences[' + bg[bH]['name'] + ']', bI, bJ)['scale'](0x1 / bh));
      }
      return new ayK(bf, -0x1, bG);
    },
    'findByName': function(bf, bg) {
      var bh = bf;
      if (!Array['isArray'](bf)) {
        var bi = bf;
        bh = bi['geometry'] && bi['geometry']['animations'] || bi['animations'];
      }
      for (var bF = 0x0; bF < bh['length']; bF++)
        if (bh[bF]['name'] === bg) return bh[bF];
      return null;
    },
    'CreateClipsFromMorphTargetSequences': function(bf, bg, bh) {
      for (var bi = {}, bF = /^([\w-]*?)([\d]+)$/, bG = 0x0, bH = bf['length']; bG < bH; bG++) {
        var bI = bf[bG],
          bJ = bI['name']['match'](bF);
        if (bJ && bJ['length'] > 0x1) {
          var bK = bi[bM = bJ[0x1]];
          bK || (bi[bM] = bK = []), bK['push'](bI);
        }
      }
      var bL = [];
      for (var bM in bi) bL['push'](ayK['CreateFromMorphTargetSequence'](bM, bi[bM], bg, bh));
      return bL;
    },
    'parseAnimation': function(bf, bg) {
      if (!bf) return console['error']('THREE.AnimationClip:\x20No\x20animation\x20in\x20JSONLoader\x20data.'), null;
      for (var bh = function(bf, bg, bh, bi, bF) {
          if (0x0 !== bh['length']) {
            var bG = [],
              bH = [];
            axj['flattenJSON'](bh, bG, bH, bi), 0x0 !== bG['length'] && bF['push'](new bf(bg, bG, bH));
          }
        }, bi = [], bF = bf['name'] || 'default', bG = bf['length'] || -0x1, bH = bf['fps'] || 0x1e, bI = bf['hierarchy'] || [], bJ = 0x0; bJ < bI['length']; bJ++) {
        var bK = bI[bJ]['keys'];
        if (bK && 0x0 !== bK['length'])
          if (bK[0x0]['morphTargets']) {
            for (var bL = {}, bM = 0x0; bM < bK['length']; bM++)
              if (bK[bM]['morphTargets'])
                for (var bN = 0x0; bN < bK[bM]['morphTargets']['length']; bN++) bL[bK[bM]['morphTargets'][bN]] = -0x1;
            for (var bO in bL) {
              var bP = [],
                bQ = [];
              for (bN = 0x0; bN !== bK[bM]['morphTargets']['length']; ++bN) {
                var bR = bK[bM];
                bP['push'](bR['time']), bQ['push'](bR['morphTarget'] === bO ? 0x1 : 0x0);
              }
              bi['push'](new ayl('.morphTargetInfluence[' + bO + ']', bP, bQ));
            }
            bG = bL['length'] * (bH || 0x1);
          } else {
            var bS = '.bones[' + bg[bJ]['name'] + ']';
            bh(ayF, bS + '.position', bK, 'pos', bi), bh(ayv, bS + '.quaternion', bK, 'rot', bi), bh(ayF, bS + '.scale', bK, 'scl', bi);
          }
      }
      return 0x0 === bi['length'] ? null : new ayK(bF, bG, bi);
    }
  }), Object['assign'](ayK['prototype'], {
    'resetDuration': function() {
      for (var bf = 0x0, bg = 0x0, bh = this['tracks']['length']; bg !== bh; ++bg) {
        var bi = this['tracks'][bg];
        bf = Math['max'](bf, bi['times'][bi['times']['length'] - 0x1]);
      }
      return this['duration'] = bf, this;
    },
    'trim': function() {
      for (var bf = 0x0; bf < this['tracks']['length']; bf++) this['tracks'][bf]['trim'](0x0, this['duration']);
      return this;
    },
    'validate': function() {
      for (var bf = !0x0, bg = 0x0; bg < this['tracks']['length']; bg++) bf = bf && this['tracks'][bg]['validate']();
      return bf;
    },
    'optimize': function() {
      for (var bf = 0x0; bf < this['tracks']['length']; bf++) this['tracks'][bf]['optimize']();
      return this;
    },
    'clone': function() {
      for (var bf = [], bg = 0x0; bg < this['tracks']['length']; bg++) bf['push'](this['tracks'][bg]['clone']());
      return new ayK(this['name'], this['duration'], bf);
    }
  });
  var aCa = {
    'enabled': !0x1,
    'files': {},
    'add': function(bf, bg) {
      !0x1 !== this['enabled'] && (this['files'][bf] = bg);
    },
    'get': function(bf) {
      if (!0x1 !== this['enabled']) return this['files'][bf];
    },
    'remove': function(bf) {
      delete this['files'][bf];
    },
    'clear': function() {
      this['files'] = {};
    }
  };

  function aCf(bf, bg, bh) {
    var bi = this,
      bF = !0x1,
      bG = 0x0,
      bH = 0x0,
      bI = void 0x0;
    this['onStart'] = void 0x0, this['onLoad'] = bf, this['onProgress'] = bg, this['onError'] = bh, this['itemStart'] = function(bf) {
      bH++, !0x1 === bF && void 0x0 !== bi['onStart'] && bi['onStart'](bf, bG, bH), bF = !0x0;
    }, this['itemEnd'] = function(bf) {
      bG++, void 0x0 !== bi['onProgress'] && bi['onProgress'](bf, bG, bH), bG === bH && (bF = !0x1, void 0x0 !== bi['onLoad'] && bi['onLoad']());
    }, this['itemError'] = function(bf) {
      void 0x0 !== bi['onError'] && bi['onError'](bf);
    }, this['resolveURL'] = function(bf) {
      return bI ? bI(bf) : bf;
    }, this['setURLModifier'] = function(bf) {
      return bI = bf, this;
    };
  }
  var aCt = new aCf(),
    aCu = {};

  function aCv(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt;
  }

  function aCx(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt;
  }

  function aCz(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt, this['_parser'] = null;
  }

  function aCB(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt, this['_parser'] = null;
  }

  function aCD(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt;
  }

  function aCF(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt;
  }

  function aCH(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt;
  }

  function aCJ() {
    this['type'] = 'Curve', this['arcLengthDivisions'] = 0xc8;
  }

  function aCK(bf, bg, bh, bi, bF, bG, bH, bI) {
    aCJ['call'](this), this['type'] = 'EllipseCurve', this['aX'] = bf || 0x0, this['aY'] = bg || 0x0, this['xRadius'] = bh || 0x1, this['yRadius'] = bi || 0x1, this['aStartAngle'] = bF || 0x0, this['aEndAngle'] = bG || 0x2 * Math['PI'], this['aClockwise'] = bH || !0x1, this['aRotation'] = bI || 0x0;
  }

  function aCT(bf, bg, bh, bi, bF, bG) {
    aCK['call'](this, bf, bg, bh, bh, bi, bF, bG), this['type'] = 'ArcCurve';
  }

  function aD0() {
    var bf = 0x0,
      bg = 0x0,
      bh = 0x0,
      bi = 0x0;

    function bF(bF, bG, bH, bI) {
      bf = bF, bg = bH, bh = -0x3 * bF + 0x3 * bG - 0x2 * bH - bI, bi = 0x2 * bF - 0x2 * bG + bH + bI;
    }
    return {
      'initCatmullRom': function(bf, bg, bh, bi, bG) {
        bF(bg, bh, bG * (bh - bf), bG * (bi - bg));
      },
      'initNonuniformCatmullRom': function(bf, bg, bh, bi, bG, bH, bI) {
        var bJ = (bg - bf) / bG - (bh - bf) / (bG + bH) + (bh - bg) / bH,
          bK = (bh - bg) / bH - (bi - bg) / (bH + bI) + (bi - bh) / bI;
        bF(bg, bh, bJ *= bH, bK *= bH);
      },
      'calc': function(bF) {
        var bG = bF * bF;
        return bf + bg * bF + bh * bG + bi * (bG * bF);
      }
    };
  }
  Object['assign'](aCv['prototype'], {
    'load': function(bf, bg, bh, bi) {
      void 0x0 === bf && (bf = ''), void 0x0 !== this['path'] && (bf = this['path'] + bf), bf = this['manager']['resolveURL'](bf);
      var bF = this,
        bG = aCa['get'](bf);
      if (void 0x0 !== bG) return bF['manager']['itemStart'](bf), setTimeout(function() {
        bg && bg(bG), bF['manager']['itemEnd'](bf);
      }, 0x0), bG;
      if (void 0x0 === aCu[bf]) {
        var bH = bf['match'](/^data:(.*?)(;base64)?,(.*)$/);
        if (bH) {
          var bI = bH[0x1],
            bJ = !!bH[0x2],
            bK = bH[0x3];
          bK = decodeURIComponent(bK), bJ && (bK = atob(bK));
          try {
            var bL, bM = (this['responseType'] || '')['toLowerCase']();
            switch (bM) {
              case 'arraybuffer':
              case 'blob':
                for (var bN = new Uint8Array(bK['length']), bO = 0x0; bO < bK['length']; bO++) bN[bO] = bK['charCodeAt'](bO);
                bL = 'blob' === bM ? new Blob([bN['buffer']], {
                  'type': bI
                }) : bN['buffer'];
                break;
              case 'document':
                var bP = new DOMParser();
                bL = bP['parseFromString'](bK, bI);
                break;
              case 'json':
                bL = JSON['parse'](bK);
                break;
              default:
                bL = bK;
            }
            setTimeout(function() {
              bg && bg(bL), bF['manager']['itemEnd'](bf);
            }, 0x0);
          } catch (aDF) {
            setTimeout(function() {
              bi && bi(aDF), bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
            }, 0x0);
          }
        } else {
          aCu[bf] = [], aCu[bf]['push']({
            'onLoad': bg,
            'onProgress': bh,
            'onError': bi
          });
          var bQ = new XMLHttpRequest();
          for (var bR in bQ['open']('GET', bf, !0x0), bQ['addEventListener']('load', function(bg) {
              var bh = this['response'];
              aCa['add'](bf, bh);
              var bi = aCu[bf];
              if (delete aCu[bf], 0xc8 === this['status'] || 0x0 === this['status']) {
                0x0 === this['status'] && console['warn']('THREE.FileLoader:\x20HTTP\x20Status\x200\x20received.');
                for (var bG = 0x0, bH = bi['length']; bG < bH; bG++) {
                  (bI = bi[bG])['onLoad'] && bI['onLoad'](bh);
                }
                bF['manager']['itemEnd'](bf);
              } else {
                for (bG = 0x0, bH = bi['length']; bG < bH; bG++) {
                  var bI;
                  (bI = bi[bG])['onError'] && bI['onError'](bg);
                }
                bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
              }
            }, !0x1), bQ['addEventListener']('progress', function(bg) {
              for (var bh = aCu[bf], bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                var bG = bh[bi];
                bG['onProgress'] && bG['onProgress'](bg);
              }
            }, !0x1), bQ['addEventListener']('error', function(bg) {
              var bh = aCu[bf];
              delete aCu[bf];
              for (var bi = 0x0, bG = bh['length']; bi < bG; bi++) {
                var bH = bh[bi];
                bH['onError'] && bH['onError'](bg);
              }
              bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
            }, !0x1), bQ['addEventListener']('abort', function(bg) {
              var bh = aCu[bf];
              delete aCu[bf];
              for (var bi = 0x0, bG = bh['length']; bi < bG; bi++) {
                var bH = bh[bi];
                bH['onError'] && bH['onError'](bg);
              }
              bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
            }, !0x1), void 0x0 !== this['responseType'] && (bQ['responseType'] = this['responseType']), void 0x0 !== this['withCredentials'] && (bQ['withCredentials'] = this['withCredentials']), bQ['overrideMimeType'] && bQ['overrideMimeType'](void 0x0 !== this['mimeType'] ? this['mimeType'] : 'text/plain'), this['requestHeader']) bQ['setRequestHeader'](bR, this['requestHeader'][bR]);
          bQ['send'](null);
        }
        return bF['manager']['itemStart'](bf), bQ;
      }
      aCu[bf]['push']({
        'onLoad': bg,
        'onProgress': bh,
        'onError': bi
      });
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    },
    'setResponseType': function(bf) {
      return this['responseType'] = bf, this;
    },
    'setWithCredentials': function(bf) {
      return this['withCredentials'] = bf, this;
    },
    'setMimeType': function(bf) {
      return this['mimeType'] = bf, this;
    },
    'setRequestHeader': function(bf) {
      return this['requestHeader'] = bf, this;
    }
  }), Object['assign'](aCx['prototype'], {
    'load': function(bf, bg, bh, bi) {
      var bF = this,
        bG = new aCv(bF['manager']);
      bG['setPath'](bF['path']), bG['load'](bf, function(bf) {
        bg(bF['parse'](JSON['parse'](bf)));
      }, bh, bi);
    },
    'parse': function(bf) {
      for (var bg = [], bh = 0x0; bh < bf['length']; bh++) {
        var bi = ayK['parse'](bf[bh]);
        bg['push'](bi);
      }
      return bg;
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  }), Object['assign'](aCz['prototype'], {
    'load': function(bf, bg, bh, bi) {
      var bF = this,
        bG = [],
        bH = new aeZ();
      bH['image'] = bG;
      var bI = new aCv(this['manager']);

      function bJ(bJ) {
        bI['load'](bf[bJ], function(bf) {
          var bh = bF['_parser'](bf, !0x0);
          bG[bJ] = {
            'width': bh['width'],
            'height': bh['height'],
            'format': bh['format'],
            'mipmaps': bh['mipmaps']
          }, 0x6 === (bK += 0x1) && (0x1 === bh['mipmapCount'] && (bH['minFilter'] = cS), bH['format'] = bh['format'], bH['needsUpdate'] = !0x0, bg && bg(bH));
        }, bh, bi);
      }
      if (bI['setPath'](this['path']), bI['setResponseType']('arraybuffer'), Array['isArray'](bf))
        for (var bK = 0x0, bL = 0x0, bM = bf['length']; bL < bM; ++bL) bJ(bL);
      else bI['load'](bf, function(bf) {
        var bh = bF['_parser'](bf, !0x0);
        if (bh['isCubemap'])
          for (var bi = bh['mipmaps']['length'] / bh['mipmapCount'], bI = 0x0; bI < bi; bI++) {
            bG[bI] = {
              'mipmaps': []
            };
            for (var bJ = 0x0; bJ < bh['mipmapCount']; bJ++) bG[bI]['mipmaps']['push'](bh['mipmaps'][bI * bh['mipmapCount'] + bJ]), bG[bI]['format'] = bh['format'], bG[bI]['width'] = bh['width'], bG[bI]['height'] = bh['height'];
          } else bH['image']['width'] = bh['width'], bH['image']['height'] = bh['height'], bH['mipmaps'] = bh['mipmaps'];
        0x1 === bh['mipmapCount'] && (bH['minFilter'] = cS), bH['format'] = bh['format'], bH['needsUpdate'] = !0x0, bg && bg(bH);
      }, bh, bi);
      return bH;
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  }), Object['assign'](aCB['prototype'], {
    'load': function(bf, bg, bh, bi) {
      var bF = this,
        bG = new mo(),
        bH = new aCv(this['manager']);
      return bH['setResponseType']('arraybuffer'), bH['setPath'](this['path']), bH['load'](bf, function(bf) {
        var bh = bF['_parser'](bf);
        bh && (void 0x0 !== bh['image'] ? bG['image'] = bh['image'] : void 0x0 !== bh['data'] && (bG['image']['width'] = bh['width'], bG['image']['height'] = bh['height'], bG['image']['data'] = bh['data']), bG['wrapS'] = void 0x0 !== bh['wrapS'] ? bh['wrapS'] : cN, bG['wrapT'] = void 0x0 !== bh['wrapT'] ? bh['wrapT'] : cN, bG['magFilter'] = void 0x0 !== bh['magFilter'] ? bh['magFilter'] : cS, bG['minFilter'] = void 0x0 !== bh['minFilter'] ? bh['minFilter'] : cU, bG['anisotropy'] = void 0x0 !== bh['anisotropy'] ? bh['anisotropy'] : 0x1, void 0x0 !== bh['format'] && (bG['format'] = bh['format']), void 0x0 !== bh['type'] && (bG['type'] = bh['type']), void 0x0 !== bh['mipmaps'] && (bG['mipmaps'] = bh['mipmaps']), 0x1 === bh['mipmapCount'] && (bG['minFilter'] = cS), bG['needsUpdate'] = !0x0, bg && bg(bG, bh));
      }, bh, bi), bG;
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  }), Object['assign'](aCD['prototype'], {
    'crossOrigin': 'anonymous',
    'load': function(bf, bg, bh, bi) {
      void 0x0 === bf && (bf = ''), void 0x0 !== this['path'] && (bf = this['path'] + bf), bf = this['manager']['resolveURL'](bf);
      var bF = this,
        bG = aCa['get'](bf);
      if (void 0x0 !== bG) return bF['manager']['itemStart'](bf), setTimeout(function() {
        bg && bg(bG), bF['manager']['itemEnd'](bf);
      }, 0x0), bG;
      var bH = document['createElementNS']('http://www.w3.org/1999/xhtml', 'img');

      function bI() {
        bH['removeEventListener']('load', bI, !0x1), bH['removeEventListener']('error', bJ, !0x1), aCa['add'](bf, this), bg && bg(this), bF['manager']['itemEnd'](bf);
      }

      function bJ(bg) {
        bH['removeEventListener']('load', bI, !0x1), bH['removeEventListener']('error', bJ, !0x1), bi && bi(bg), bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
      }
      return bH['addEventListener']('load', bI, !0x1), bH['addEventListener']('error', bJ, !0x1), 'data:' !== bf['substr'](0x0, 0x5) && void 0x0 !== this['crossOrigin'] && (bH['crossOrigin'] = this['crossOrigin']), bF['manager']['itemStart'](bf), bH['src'] = bf, bH;
    },
    'setCrossOrigin': function(bf) {
      return this['crossOrigin'] = bf, this;
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  }), Object['assign'](aCF['prototype'], {
    'crossOrigin': 'anonymous',
    'load': function(bf, bg, bh, bi) {
      var bF = new O3(),
        bG = new aCD(this['manager']);
      bG['setCrossOrigin'](this['crossOrigin']), bG['setPath'](this['path']);
      var bH = 0x0;

      function bI(bh) {
        bG['load'](bf[bh], function(bf) {
          bF['images'][bh] = bf, 0x6 === ++bH && (bF['needsUpdate'] = !0x0, bg && bg(bF));
        }, void 0x0, bi);
      }
      for (var bJ = 0x0; bJ < bf['length']; ++bJ) bI(bJ);
      return bF;
    },
    'setCrossOrigin': function(bf) {
      return this['crossOrigin'] = bf, this;
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  }), Object['assign'](aCH['prototype'], {
    'crossOrigin': 'anonymous',
    'load': function(bf, bg, bh, bi) {
      var bF = new lW(),
        bG = new aCD(this['manager']);
      return bG['setCrossOrigin'](this['crossOrigin']), bG['setPath'](this['path']), bG['load'](bf, function(bh) {
        bF['image'] = bh;
        var bi = bf['search'](/\.jpe?g($|\?)/i) > 0x0 || 0x0 === bf['search'](/^data\:image\/jpeg/);
        bF['format'] = bi ? d8 : d9, bF['needsUpdate'] = !0x0, void 0x0 !== bg && bg(bF);
      }, bh, bi), bF;
    },
    'setCrossOrigin': function(bf) {
      return this['crossOrigin'] = bf, this;
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  }), Object['assign'](aCJ['prototype'], {
    'getPoint': function() {
      return console['warn']('THREE.Curve:\x20.getPoint()\x20not\x20implemented.'), null;
    },
    'getPointAt': function(bf, bg) {
      var bh = this['getUtoTmapping'](bf);
      return this['getPoint'](bh, bg);
    },
    'getPoints': function(bf) {
      void 0x0 === bf && (bf = 0x5);
      for (var bg = [], bh = 0x0; bh <= bf; bh++) bg['push'](this['getPoint'](bh / bf));
      return bg;
    },
    'getSpacedPoints': function(bf) {
      void 0x0 === bf && (bf = 0x5);
      for (var bg = [], bh = 0x0; bh <= bf; bh++) bg['push'](this['getPointAt'](bh / bf));
      return bg;
    },
    'getLength': function() {
      var bf = this['getLengths']();
      return bf[bf['length'] - 0x1];
    },
    'getLengths': function(bf) {
      if (void 0x0 === bf && (bf = this['arcLengthDivisions']), this['cacheArcLengths'] && this['cacheArcLengths']['length'] === bf + 0x1 && !this['needsUpdate']) return this['cacheArcLengths'];
      this['needsUpdate'] = !0x1;
      var bg, bh, bi = [],
        bF = this['getPoint'](0x0),
        bG = 0x0;
      for (bi['push'](0x0), bh = 0x1; bh <= bf; bh++) bG += (bg = this['getPoint'](bh / bf))['distanceTo'](bF), bi['push'](bG), bF = bg;
      return this['cacheArcLengths'] = bi, bi;
    },
    'updateArcLengths': function() {
      this['needsUpdate'] = !0x0, this['getLengths']();
    },
    'getUtoTmapping': function(bf, bg) {
      var bh, bi = this['getLengths'](),
        bF = 0x0,
        bG = bi['length'];
      bh = bg || bf * bi[bG - 0x1];
      for (var bH, bI = 0x0, bJ = bG - 0x1; bI <= bJ;)
        if ((bH = bi[bF = Math['floor'](bI + (bJ - bI) / 0x2)] - bh) < 0x0) bI = bF + 0x1;
        else {
          if (!(bH > 0x0)) {
            bJ = bF;
            break;
          }
          bJ = bF - 0x1;
        } if (bi[bF = bJ] === bh) return bF / (bG - 0x1);
      var bK = bi[bF];
      return (bF + (bh - bK) / (bi[bF + 0x1] - bK)) / (bG - 0x1);
    },
    'getTangent': function(bf) {
      var bg = bf - 0.0001,
        bh = bf + 0.0001;
      bg < 0x0 && (bg = 0x0), bh > 0x1 && (bh = 0x1);
      var bi = this['getPoint'](bg);
      return this['getPoint'](bh)['clone']()['sub'](bi)['normalize']();
    },
    'getTangentAt': function(bf) {
      var bg = this['getUtoTmapping'](bf);
      return this['getTangent'](bg);
    },
    'computeFrenetFrames': function(bf, bg) {
      var bh, bi, bF, bG = new eK(),
        bH = [],
        bI = [],
        bJ = [],
        bK = new eK(),
        bL = new mR();
      for (bh = 0x0; bh <= bf; bh++) bi = bh / bf, bH[bh] = this['getTangentAt'](bi), bH[bh]['normalize']();
      bI[0x0] = new eK(), bJ[0x0] = new eK();
      var bM = Number['MAX_VALUE'],
        bN = Math['abs'](bH[0x0]['x']),
        bO = Math['abs'](bH[0x0]['y']),
        bP = Math['abs'](bH[0x0]['z']);
      for (bN <= bM && (bM = bN, bG['set'](0x1, 0x0, 0x0)), bO <= bM && (bM = bO, bG['set'](0x0, 0x1, 0x0)), bP <= bM && bG['set'](0x0, 0x0, 0x1), bK['crossVectors'](bH[0x0], bG)['normalize'](), bI[0x0]['crossVectors'](bH[0x0], bK), bJ[0x0]['crossVectors'](bH[0x0], bI[0x0]), bh = 0x1; bh <= bf; bh++) bI[bh] = bI[bh - 0x1]['clone'](), bJ[bh] = bJ[bh - 0x1]['clone'](), bK['crossVectors'](bH[bh - 0x1], bH[bh]), bK['length']() > Number['EPSILON'] && (bK['normalize'](), bF = Math['acos'](e2['clamp'](bH[bh - 0x1]['dot'](bH[bh]), -0x1, 0x1)), bI[bh]['applyMatrix4'](bL['makeRotationAxis'](bK, bF))), bJ[bh]['crossVectors'](bH[bh], bI[bh]);
      if (!0x0 === bg)
        for (bF = Math['acos'](e2['clamp'](bI[0x0]['dot'](bI[bf]), -0x1, 0x1)), bF /= bf, bH[0x0]['dot'](bK['crossVectors'](bI[0x0], bI[bf])) > 0x0 && (bF = -bF), bh = 0x1; bh <= bf; bh++) bI[bh]['applyMatrix4'](bL['makeRotationAxis'](bH[bh], bF * bh)), bJ[bh]['crossVectors'](bH[bh], bI[bh]);
      return {
        'tangents': bH,
        'normals': bI,
        'binormals': bJ
      };
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['arcLengthDivisions'] = bf['arcLengthDivisions'], this;
    },
    'toJSON': function() {
      var bf = {
        'metadata': {
          'version': 4.5,
          'type': 'Curve',
          'generator': 'Curve.toJSON'
        }
      };
      return bf['arcLengthDivisions'] = this['arcLengthDivisions'], bf['type'] = this['type'], bf;
    },
    'fromJSON': function(bf) {
      return this['arcLengthDivisions'] = bf['arcLengthDivisions'], this;
    }
  }), aCK['prototype'] = Object['create'](aCJ['prototype']), aCK['prototype']['constructor'] = aCK, aCK['prototype']['isEllipseCurve'] = !0x0, aCK['prototype']['getPoint'] = function(bf, bg) {
    for (var bh = bg || new eC(), bi = 0x2 * Math['PI'], bF = this['aEndAngle'] - this['aStartAngle'], bG = Math['abs'](bF) < Number['EPSILON']; bF < 0x0;) bF += bi;
    for (; bF > bi;) bF -= bi;
    bF < Number['EPSILON'] && (bF = bG ? 0x0 : bi), !0x0 !== this['aClockwise'] || bG || (bF === bi ? bF = -bi : bF -= bi);
    var bH = this['aStartAngle'] + bf * bF,
      bI = this['aX'] + this['xRadius'] * Math['cos'](bH),
      bJ = this['aY'] + this['yRadius'] * Math['sin'](bH);
    if (0x0 !== this['aRotation']) {
      var bK = Math['cos'](this['aRotation']),
        bL = Math['sin'](this['aRotation']),
        bM = bI - this['aX'],
        bN = bJ - this['aY'];
      bI = bM * bK - bN * bL + this['aX'], bJ = bM * bL + bN * bK + this['aY'];
    }
    return bh['set'](bI, bJ);
  }, aCK['prototype']['copy'] = function(bf) {
    return aCJ['prototype']['copy']['call'](this, bf), this['aX'] = bf['aX'], this['aY'] = bf['aY'], this['xRadius'] = bf['xRadius'], this['yRadius'] = bf['yRadius'], this['aStartAngle'] = bf['aStartAngle'], this['aEndAngle'] = bf['aEndAngle'], this['aClockwise'] = bf['aClockwise'], this['aRotation'] = bf['aRotation'], this;
  }, aCK['prototype']['toJSON'] = function() {
    var bf = aCJ['prototype']['toJSON']['call'](this);
    return bf['aX'] = this['aX'], bf['aY'] = this['aY'], bf['xRadius'] = this['xRadius'], bf['yRadius'] = this['yRadius'], bf['aStartAngle'] = this['aStartAngle'], bf['aEndAngle'] = this['aEndAngle'], bf['aClockwise'] = this['aClockwise'], bf['aRotation'] = this['aRotation'], bf;
  }, aCK['prototype']['fromJSON'] = function(bf) {
    return aCJ['prototype']['fromJSON']['call'](this, bf), this['aX'] = bf['aX'], this['aY'] = bf['aY'], this['xRadius'] = bf['xRadius'], this['yRadius'] = bf['yRadius'], this['aStartAngle'] = bf['aStartAngle'], this['aEndAngle'] = bf['aEndAngle'], this['aClockwise'] = bf['aClockwise'], this['aRotation'] = bf['aRotation'], this;
  }, aCT['prototype'] = Object['create'](aCK['prototype']), aCT['prototype']['constructor'] = aCT, aCT['prototype']['isArcCurve'] = !0x0;
  var aGs = new eK(),
    aGt = new aD0(),
    aGu = new aD0(),
    aGv = new aD0();

  function aGw(bf, bg, bh, bi) {
    aCJ['call'](this), this['type'] = 'CatmullRomCurve3', this['points'] = bf || [], this['closed'] = bg || !0x1, this['curveType'] = bh || 'centripetal', this['tension'] = bi || 0.5;
  }

  function aGB(bf, bg, bh, bi, bF) {
    var bG = 0.5 * (bi - bg),
      bH = 0.5 * (bF - bh),
      bI = bf * bf;
    return (0x2 * bh - 0x2 * bi + bG + bH) * (bf * bI) + (-0x3 * bh + 0x3 * bi - 0x2 * bG - bH) * bI + bG * bf + bh;
  }

  function aGK(bf, bg, bh, bi) {
    return function(bf, bg) {
      var bh = 0x1 - bf;
      return bh * bh * bg;
    }(bf, bg) + function(bf, bg) {
      return 0x2 * (0x1 - bf) * bf * bg;
    }(bf, bh) + function(bf, bg) {
      return bf * bf * bg;
    }(bf, bi);
  }

  function aGW(bf, bg, bh, bi, bF) {
    return function(bf, bg) {
      var bh = 0x1 - bf;
      return bh * bh * bh * bg;
    }(bf, bg) + function(bf, bg) {
      var bh = 0x1 - bf;
      return 0x3 * bh * bh * bf * bg;
    }(bf, bh) + function(bf, bg) {
      return 0x3 * (0x1 - bf) * bf * bf * bg;
    }(bf, bi) + function(bf, bg) {
      return bf * bf * bf * bg;
    }(bf, bF);
  }

  function aHc(bf, bg, bh, bi) {
    aCJ['call'](this), this['type'] = 'CubicBezierCurve', this['v0'] = bf || new eC(), this['v1'] = bg || new eC(), this['v2'] = bh || new eC(), this['v3'] = bi || new eC();
  }

  function aHh(bf, bg, bh, bi) {
    aCJ['call'](this), this['type'] = 'CubicBezierCurve3', this['v0'] = bf || new eK(), this['v1'] = bg || new eK(), this['v2'] = bh || new eK(), this['v3'] = bi || new eK();
  }

  function aHm(bf, bg) {
    aCJ['call'](this), this['type'] = 'LineCurve', this['v1'] = bf || new eC(), this['v2'] = bg || new eC();
  }

  function aHp(bf, bg) {
    aCJ['call'](this), this['type'] = 'LineCurve3', this['v1'] = bf || new eK(), this['v2'] = bg || new eK();
  }

  function aHs(bf, bg, bh) {
    aCJ['call'](this), this['type'] = 'QuadraticBezierCurve', this['v0'] = bf || new eC(), this['v1'] = bg || new eC(), this['v2'] = bh || new eC();
  }

  function aHw(bf, bg, bh) {
    aCJ['call'](this), this['type'] = 'QuadraticBezierCurve3', this['v0'] = bf || new eK(), this['v1'] = bg || new eK(), this['v2'] = bh || new eK();
  }

  function aHA(bf) {
    aCJ['call'](this), this['type'] = 'SplineCurve', this['points'] = bf || [];
  }
  aGw['prototype'] = Object['create'](aCJ['prototype']), aGw['prototype']['constructor'] = aGw, aGw['prototype']['isCatmullRomCurve3'] = !0x0, aGw['prototype']['getPoint'] = function(bf, bg) {
    var bh, bi, bF, bG, bH = bg || new eK(),
      bI = this['points'],
      bJ = bI['length'],
      bK = (bJ - (this['closed'] ? 0x0 : 0x1)) * bf,
      bL = Math['floor'](bK),
      bM = bK - bL;
    if (this['closed'] ? bL += bL > 0x0 ? 0x0 : (Math['floor'](Math['abs'](bL) / bJ) + 0x1) * bJ : 0x0 === bM && bL === bJ - 0x1 && (bL = bJ - 0x2, bM = 0x1), this['closed'] || bL > 0x0 ? bh = bI[(bL - 0x1) % bJ] : (aGs['subVectors'](bI[0x0], bI[0x1])['add'](bI[0x0]), bh = aGs), bi = bI[bL % bJ], bF = bI[(bL + 0x1) % bJ], this['closed'] || bL + 0x2 < bJ ? bG = bI[(bL + 0x2) % bJ] : (aGs['subVectors'](bI[bJ - 0x1], bI[bJ - 0x2])['add'](bI[bJ - 0x1]), bG = aGs), 'centripetal' === this['curveType'] || 'chordal' === this['curveType']) {
      var bN = 'chordal' === this['curveType'] ? 0.5 : 0.25,
        bO = Math['pow'](bh['distanceToSquared'](bi), bN),
        bP = Math['pow'](bi['distanceToSquared'](bF), bN),
        bQ = Math['pow'](bF['distanceToSquared'](bG), bN);
      bP < 0.0001 && (bP = 0x1), bO < 0.0001 && (bO = bP), bQ < 0.0001 && (bQ = bP), aGt['initNonuniformCatmullRom'](bh['x'], bi['x'], bF['x'], bG['x'], bO, bP, bQ), aGu['initNonuniformCatmullRom'](bh['y'], bi['y'], bF['y'], bG['y'], bO, bP, bQ), aGv['initNonuniformCatmullRom'](bh['z'], bi['z'], bF['z'], bG['z'], bO, bP, bQ);
    } else 'catmullrom' === this['curveType'] && (aGt['initCatmullRom'](bh['x'], bi['x'], bF['x'], bG['x'], this['tension']), aGu['initCatmullRom'](bh['y'], bi['y'], bF['y'], bG['y'], this['tension']), aGv['initCatmullRom'](bh['z'], bi['z'], bF['z'], bG['z'], this['tension']));
    return bH['set'](aGt['calc'](bM), aGu['calc'](bM), aGv['calc'](bM)), bH;
  }, aGw['prototype']['copy'] = function(bf) {
    aCJ['prototype']['copy']['call'](this, bf), this['points'] = [];
    for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
      var bi = bf['points'][bg];
      this['points']['push'](bi['clone']());
    }
    return this['closed'] = bf['closed'], this['curveType'] = bf['curveType'], this['tension'] = bf['tension'], this;
  }, aGw['prototype']['toJSON'] = function() {
    var bf = aCJ['prototype']['toJSON']['call'](this);
    bf['points'] = [];
    for (var bg = 0x0, bh = this['points']['length']; bg < bh; bg++) {
      var bi = this['points'][bg];
      bf['points']['push'](bi['toArray']());
    }
    return bf['closed'] = this['closed'], bf['curveType'] = this['curveType'], bf['tension'] = this['tension'], bf;
  }, aGw['prototype']['fromJSON'] = function(bf) {
    aCJ['prototype']['fromJSON']['call'](this, bf), this['points'] = [];
    for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
      var bi = bf['points'][bg];
      this['points']['push'](new eK()['fromArray'](bi));
    }
    return this['closed'] = bf['closed'], this['curveType'] = bf['curveType'], this['tension'] = bf['tension'], this;
  }, aHc['prototype'] = Object['create'](aCJ['prototype']), aHc['prototype']['constructor'] = aHc, aHc['prototype']['isCubicBezierCurve'] = !0x0, aHc['prototype']['getPoint'] = function(bf, bg) {
    var bh = bg || new eC(),
      bi = this['v0'],
      bF = this['v1'],
      bG = this['v2'],
      bH = this['v3'];
    return bh['set'](aGW(bf, bi['x'], bF['x'], bG['x'], bH['x']), aGW(bf, bi['y'], bF['y'], bG['y'], bH['y'])), bh;
  }, aHc['prototype']['copy'] = function(bf) {
    return aCJ['prototype']['copy']['call'](this, bf), this['v0']['copy'](bf['v0']), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this['v3']['copy'](bf['v3']), this;
  }, aHc['prototype']['toJSON'] = function() {
    var bf = aCJ['prototype']['toJSON']['call'](this);
    return bf['v0'] = this['v0']['toArray'](), bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf['v3'] = this['v3']['toArray'](), bf;
  }, aHc['prototype']['fromJSON'] = function(bf) {
    return aCJ['prototype']['fromJSON']['call'](this, bf), this['v0']['fromArray'](bf['v0']), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this['v3']['fromArray'](bf['v3']), this;
  }, aHh['prototype'] = Object['create'](aCJ['prototype']), aHh['prototype']['constructor'] = aHh, aHh['prototype']['isCubicBezierCurve3'] = !0x0, aHh['prototype']['getPoint'] = function(bf, bg) {
    var bh = bg || new eK(),
      bi = this['v0'],
      bF = this['v1'],
      bG = this['v2'],
      bH = this['v3'];
    return bh['set'](aGW(bf, bi['x'], bF['x'], bG['x'], bH['x']), aGW(bf, bi['y'], bF['y'], bG['y'], bH['y']), aGW(bf, bi['z'], bF['z'], bG['z'], bH['z'])), bh;
  }, aHh['prototype']['copy'] = function(bf) {
    return aCJ['prototype']['copy']['call'](this, bf), this['v0']['copy'](bf['v0']), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this['v3']['copy'](bf['v3']), this;
  }, aHh['prototype']['toJSON'] = function() {
    var bf = aCJ['prototype']['toJSON']['call'](this);
    return bf['v0'] = this['v0']['toArray'](), bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf['v3'] = this['v3']['toArray'](), bf;
  }, aHh['prototype']['fromJSON'] = function(bf) {
    return aCJ['prototype']['fromJSON']['call'](this, bf), this['v0']['fromArray'](bf['v0']), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this['v3']['fromArray'](bf['v3']), this;
  }, aHm['prototype'] = Object['create'](aCJ['prototype']), aHm['prototype']['constructor'] = aHm, aHm['prototype']['isLineCurve'] = !0x0, aHm['prototype']['getPoint'] = function(bf, bg) {
    var bh = bg || new eC();
    return 0x1 === bf ? bh['copy'](this['v2']) : (bh['copy'](this['v2'])['sub'](this['v1']), bh['multiplyScalar'](bf)['add'](this['v1'])), bh;
  }, aHm['prototype']['getPointAt'] = function(bf, bg) {
    return this['getPoint'](bf, bg);
  }, aHm['prototype']['getTangent'] = function() {
    return this['v2']['clone']()['sub'](this['v1'])['normalize']();
  }, aHm['prototype']['copy'] = function(bf) {
    return aCJ['prototype']['copy']['call'](this, bf), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this;
  }, aHm['prototype']['toJSON'] = function() {
    var bf = aCJ['prototype']['toJSON']['call'](this);
    return bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf;
  }, aHm['prototype']['fromJSON'] = function(bf) {
    return aCJ['prototype']['fromJSON']['call'](this, bf), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this;
  }, aHp['prototype'] = Object['create'](aCJ['prototype']), aHp['prototype']['constructor'] = aHp, aHp['prototype']['isLineCurve3'] = !0x0, aHp['prototype']['getPoint'] = function(bf, bg) {
    var bh = bg || new eK();
    return 0x1 === bf ? bh['copy'](this['v2']) : (bh['copy'](this['v2'])['sub'](this['v1']), bh['multiplyScalar'](bf)['add'](this['v1'])), bh;
  }, aHp['prototype']['getPointAt'] = function(bf, bg) {
    return this['getPoint'](bf, bg);
  }, aHp['prototype']['copy'] = function(bf) {
    return aCJ['prototype']['copy']['call'](this, bf), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this;
  }, aHp['prototype']['toJSON'] = function() {
    var bf = aCJ['prototype']['toJSON']['call'](this);
    return bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf;
  }, aHp['prototype']['fromJSON'] = function(bf) {
    return aCJ['prototype']['fromJSON']['call'](this, bf), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this;
  }, aHs['prototype'] = Object['create'](aCJ['prototype']), aHs['prototype']['constructor'] = aHs, aHs['prototype']['isQuadraticBezierCurve'] = !0x0, aHs['prototype']['getPoint'] = function(bf, bg) {
    var bh = bg || new eC(),
      bi = this['v0'],
      bF = this['v1'],
      bG = this['v2'];
    return bh['set'](aGK(bf, bi['x'], bF['x'], bG['x']), aGK(bf, bi['y'], bF['y'], bG['y'])), bh;
  }, aHs['prototype']['copy'] = function(bf) {
    return aCJ['prototype']['copy']['call'](this, bf), this['v0']['copy'](bf['v0']), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this;
  }, aHs['prototype']['toJSON'] = function() {
    var bf = aCJ['prototype']['toJSON']['call'](this);
    return bf['v0'] = this['v0']['toArray'](), bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf;
  }, aHs['prototype']['fromJSON'] = function(bf) {
    return aCJ['prototype']['fromJSON']['call'](this, bf), this['v0']['fromArray'](bf['v0']), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this;
  }, aHw['prototype'] = Object['create'](aCJ['prototype']), aHw['prototype']['constructor'] = aHw, aHw['prototype']['isQuadraticBezierCurve3'] = !0x0, aHw['prototype']['getPoint'] = function(bf, bg) {
    var bh = bg || new eK(),
      bi = this['v0'],
      bF = this['v1'],
      bG = this['v2'];
    return bh['set'](aGK(bf, bi['x'], bF['x'], bG['x']), aGK(bf, bi['y'], bF['y'], bG['y']), aGK(bf, bi['z'], bF['z'], bG['z'])), bh;
  }, aHw['prototype']['copy'] = function(bf) {
    return aCJ['prototype']['copy']['call'](this, bf), this['v0']['copy'](bf['v0']), this['v1']['copy'](bf['v1']), this['v2']['copy'](bf['v2']), this;
  }, aHw['prototype']['toJSON'] = function() {
    var bf = aCJ['prototype']['toJSON']['call'](this);
    return bf['v0'] = this['v0']['toArray'](), bf['v1'] = this['v1']['toArray'](), bf['v2'] = this['v2']['toArray'](), bf;
  }, aHw['prototype']['fromJSON'] = function(bf) {
    return aCJ['prototype']['fromJSON']['call'](this, bf), this['v0']['fromArray'](bf['v0']), this['v1']['fromArray'](bf['v1']), this['v2']['fromArray'](bf['v2']), this;
  }, aHA['prototype'] = Object['create'](aCJ['prototype']), aHA['prototype']['constructor'] = aHA, aHA['prototype']['isSplineCurve'] = !0x0, aHA['prototype']['getPoint'] = function(bf, bg) {
    var bh = bg || new eC(),
      bi = this['points'],
      bF = (bi['length'] - 0x1) * bf,
      bG = Math['floor'](bF),
      bH = bF - bG,
      bI = bi[0x0 === bG ? bG : bG - 0x1],
      bJ = bi[bG],
      bK = bi[bG > bi['length'] - 0x2 ? bi['length'] - 0x1 : bG + 0x1],
      bL = bi[bG > bi['length'] - 0x3 ? bi['length'] - 0x1 : bG + 0x2];
    return bh['set'](aGB(bH, bI['x'], bJ['x'], bK['x'], bL['x']), aGB(bH, bI['y'], bJ['y'], bK['y'], bL['y'])), bh;
  }, aHA['prototype']['copy'] = function(bf) {
    aCJ['prototype']['copy']['call'](this, bf), this['points'] = [];
    for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
      var bi = bf['points'][bg];
      this['points']['push'](bi['clone']());
    }
    return this;
  }, aHA['prototype']['toJSON'] = function() {
    var bf = aCJ['prototype']['toJSON']['call'](this);
    bf['points'] = [];
    for (var bg = 0x0, bh = this['points']['length']; bg < bh; bg++) {
      var bi = this['points'][bg];
      bf['points']['push'](bi['toArray']());
    }
    return bf;
  }, aHA['prototype']['fromJSON'] = function(bf) {
    aCJ['prototype']['fromJSON']['call'](this, bf), this['points'] = [];
    for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
      var bi = bf['points'][bg];
      this['points']['push'](new eC()['fromArray'](bi));
    }
    return this;
  };
  var aJj = Object['freeze']({
    'ArcCurve': aCT,
    'CatmullRomCurve3': aGw,
    'CubicBezierCurve': aHc,
    'CubicBezierCurve3': aHh,
    'EllipseCurve': aCK,
    'LineCurve': aHm,
    'LineCurve3': aHp,
    'QuadraticBezierCurve': aHs,
    'QuadraticBezierCurve3': aHw,
    'SplineCurve': aHA
  });

  function aJk() {
    aCJ['call'](this), this['type'] = 'CurvePath', this['curves'] = [], this['autoClose'] = !0x1;
  }

  function aJl(bf) {
    aJk['call'](this), this['type'] = 'Path', this['currentPoint'] = new eC(), bf && this['setFromPoints'](bf);
  }

  function aJn(bf) {
    aJl['call'](this, bf), this['uuid'] = e2['generateUUID'](), this['type'] = 'Shape', this['holes'] = [];
  }

  function aJp(bf, bg) {
    yT['call'](this), this['type'] = 'Light', this['color'] = new w7(bf), this['intensity'] = void 0x0 !== bg ? bg : 0x1, this['receiveShadow'] = void 0x0;
  }

  function aJs(bf, bg, bh) {
    aJp['call'](this, bf, bh), this['type'] = 'HemisphereLight', this['castShadow'] = void 0x0, this['position']['copy'](yT['DefaultUp']), this['updateMatrix'](), this['groundColor'] = new w7(bg);
  }

  function aJw(bf) {
    this['camera'] = bf, this['bias'] = 0x0, this['radius'] = 0x1, this['mapSize'] = new eC(0x200, 0x200), this['map'] = null, this['matrix'] = new mR();
  }

  function aJy() {
    aJw['call'](this, new a68(0x32, 0x1, 0.5, 0x1f4));
  }

  function aJz(bf, bg, bh, bi, bF, bG) {
    aJp['call'](this, bf, bg), this['type'] = 'SpotLight', this['position']['copy'](yT['DefaultUp']), this['updateMatrix'](), this['target'] = new yT(), Object['defineProperty'](this, 'power', {
      'get': function() {
        return this['intensity'] * Math['PI'];
      },
      'set': function(bf) {
        this['intensity'] = bf / Math['PI'];
      }
    }), this['distance'] = void 0x0 !== bh ? bh : 0x0, this['angle'] = void 0x0 !== bi ? bi : Math['PI'] / 0x3, this['penumbra'] = void 0x0 !== bF ? bF : 0x0, this['decay'] = void 0x0 !== bG ? bG : 0x1, this['shadow'] = new aJy();
  }

  function aJH(bf, bg, bh, bi) {
    aJp['call'](this, bf, bg), this['type'] = 'PointLight', Object['defineProperty'](this, 'power', {
      'get': function() {
        return 0x4 * this['intensity'] * Math['PI'];
      },
      'set': function(bf) {
        this['intensity'] = bf / (0x4 * Math['PI']);
      }
    }), this['distance'] = void 0x0 !== bh ? bh : 0x0, this['decay'] = void 0x0 !== bi ? bi : 0x1, this['shadow'] = new aJw(new a68(0x5a, 0x1, 0.5, 0x1f4));
  }

  function aJN(bf, bg, bh, bi, bF, bG) {
    a67['call'](this), this['type'] = 'OrthographicCamera', this['zoom'] = 0x1, this['view'] = null, this['left'] = void 0x0 !== bf ? bf : -0x1, this['right'] = void 0x0 !== bg ? bg : 0x1, this['top'] = void 0x0 !== bh ? bh : 0x1, this['bottom'] = void 0x0 !== bi ? bi : -0x1, this['near'] = void 0x0 !== bF ? bF : 0.1, this['far'] = void 0x0 !== bG ? bG : 0x7d0, this['updateProjectionMatrix']();
  }

  function aJU() {
    aJw['call'](this, new aJN(-0x5, 0x5, 0x5, -0x5, 0.5, 0x1f4));
  }

  function aJV(bf, bg) {
    aJp['call'](this, bf, bg), this['type'] = 'DirectionalLight', this['position']['copy'](yT['DefaultUp']), this['updateMatrix'](), this['target'] = new yT(), this['shadow'] = new aJU();
  }

  function aJY(bf, bg) {
    aJp['call'](this, bf, bg), this['type'] = 'AmbientLight', this['castShadow'] = void 0x0;
  }

  function aK1(bf, bg, bh, bi) {
    aJp['call'](this, bf, bg), this['type'] = 'RectAreaLight', this['width'] = void 0x0 !== bh ? bh : 0xa, this['height'] = void 0x0 !== bi ? bi : 0xa;
  }

  function aK6(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt, this['textures'] = {};
  }
  aJk['prototype'] = Object['assign'](Object['create'](aCJ['prototype']), {
    'constructor': aJk,
    'add': function(bf) {
      this['curves']['push'](bf);
    },
    'closePath': function() {
      var bf = this['curves'][0x0]['getPoint'](0x0),
        bg = this['curves'][this['curves']['length'] - 0x1]['getPoint'](0x1);
      bf['equals'](bg) || this['curves']['push'](new aHm(bg, bf));
    },
    'getPoint': function(bf) {
      for (var bg = bf * this['getLength'](), bh = this['getCurveLengths'](), bi = 0x0; bi < bh['length'];) {
        if (bh[bi] >= bg) {
          var bF = bh[bi] - bg,
            bG = this['curves'][bi],
            bH = bG['getLength'](),
            bI = 0x0 === bH ? 0x0 : 0x1 - bF / bH;
          return bG['getPointAt'](bI);
        }
        bi++;
      }
      return null;
    },
    'getLength': function() {
      var bf = this['getCurveLengths']();
      return bf[bf['length'] - 0x1];
    },
    'updateArcLengths': function() {
      this['needsUpdate'] = !0x0, this['cacheLengths'] = null, this['getCurveLengths']();
    },
    'getCurveLengths': function() {
      if (this['cacheLengths'] && this['cacheLengths']['length'] === this['curves']['length']) return this['cacheLengths'];
      for (var bf = [], bg = 0x0, bh = 0x0, bi = this['curves']['length']; bh < bi; bh++) bg += this['curves'][bh]['getLength'](), bf['push'](bg);
      return this['cacheLengths'] = bf, bf;
    },
    'getSpacedPoints': function(bf) {
      void 0x0 === bf && (bf = 0x28);
      for (var bg = [], bh = 0x0; bh <= bf; bh++) bg['push'](this['getPoint'](bh / bf));
      return this['autoClose'] && bg['push'](bg[0x0]), bg;
    },
    'getPoints': function(bf) {
      bf = bf || 0xc;
      for (var bg, bh = [], bi = 0x0, bF = this['curves']; bi < bF['length']; bi++)
        for (var bG = bF[bi], bH = bG && bG['isEllipseCurve'] ? 0x2 * bf : bG && (bG['isLineCurve'] || bG['isLineCurve3']) ? 0x1 : bG && bG['isSplineCurve'] ? bf * bG['points']['length'] : bf, bI = bG['getPoints'](bH), bJ = 0x0; bJ < bI['length']; bJ++) {
          var bK = bI[bJ];
          bg && bg['equals'](bK) || (bh['push'](bK), bg = bK);
        }
      return this['autoClose'] && bh['length'] > 0x1 && !bh[bh['length'] - 0x1]['equals'](bh[0x0]) && bh['push'](bh[0x0]), bh;
    },
    'copy': function(bf) {
      aCJ['prototype']['copy']['call'](this, bf), this['curves'] = [];
      for (var bg = 0x0, bh = bf['curves']['length']; bg < bh; bg++) {
        var bi = bf['curves'][bg];
        this['curves']['push'](bi['clone']());
      }
      return this['autoClose'] = bf['autoClose'], this;
    },
    'toJSON': function() {
      var bf = aCJ['prototype']['toJSON']['call'](this);
      bf['autoClose'] = this['autoClose'], bf['curves'] = [];
      for (var bg = 0x0, bh = this['curves']['length']; bg < bh; bg++) {
        var bi = this['curves'][bg];
        bf['curves']['push'](bi['toJSON']());
      }
      return bf;
    },
    'fromJSON': function(bf) {
      aCJ['prototype']['fromJSON']['call'](this, bf), this['autoClose'] = bf['autoClose'], this['curves'] = [];
      for (var bg = 0x0, bh = bf['curves']['length']; bg < bh; bg++) {
        var bi = bf['curves'][bg];
        this['curves']['push'](new aJj[bi['type']]()['fromJSON'](bi));
      }
      return this;
    }
  }), aJl['prototype'] = Object['assign'](Object['create'](aJk['prototype']), {
    'constructor': aJl,
    'setFromPoints': function(bf) {
      this['moveTo'](bf[0x0]['x'], bf[0x0]['y']);
      for (var bg = 0x1, bh = bf['length']; bg < bh; bg++) this['lineTo'](bf[bg]['x'], bf[bg]['y']);
    },
    'moveTo': function(bf, bg) {
      this['currentPoint']['set'](bf, bg);
    },
    'lineTo': function(bf, bg) {
      var bh = new aHm(this['currentPoint']['clone'](), new eC(bf, bg));
      this['curves']['push'](bh), this['currentPoint']['set'](bf, bg);
    },
    'quadraticCurveTo': function(bf, bg, bh, bi) {
      var bF = new aHs(this['currentPoint']['clone'](), new eC(bf, bg), new eC(bh, bi));
      this['curves']['push'](bF), this['currentPoint']['set'](bh, bi);
    },
    'bezierCurveTo': function(bf, bg, bh, bi, bF, bG) {
      var bH = new aHc(this['currentPoint']['clone'](), new eC(bf, bg), new eC(bh, bi), new eC(bF, bG));
      this['curves']['push'](bH), this['currentPoint']['set'](bF, bG);
    },
    'splineThru': function(bf) {
      var bg = new aHA([this['currentPoint']['clone']()]['concat'](bf));
      this['curves']['push'](bg), this['currentPoint']['copy'](bf[bf['length'] - 0x1]);
    },
    'arc': function(bf, bg, bh, bi, bF, bG) {
      var bH = this['currentPoint']['x'],
        bI = this['currentPoint']['y'];
      this['absarc'](bf + bH, bg + bI, bh, bi, bF, bG);
    },
    'absarc': function(bf, bg, bh, bi, bF, bG) {
      this['absellipse'](bf, bg, bh, bh, bi, bF, bG);
    },
    'ellipse': function(bf, bg, bh, bi, bF, bG, bH, bI) {
      var bJ = this['currentPoint']['x'],
        bK = this['currentPoint']['y'];
      this['absellipse'](bf + bJ, bg + bK, bh, bi, bF, bG, bH, bI);
    },
    'absellipse': function(bf, bg, bh, bi, bF, bG, bH, bI) {
      var bJ = new aCK(bf, bg, bh, bi, bF, bG, bH, bI);
      if (this['curves']['length'] > 0x0) {
        var bK = bJ['getPoint'](0x0);
        bK['equals'](this['currentPoint']) || this['lineTo'](bK['x'], bK['y']);
      }
      this['curves']['push'](bJ);
      var bL = bJ['getPoint'](0x1);
      this['currentPoint']['copy'](bL);
    },
    'copy': function(bf) {
      return aJk['prototype']['copy']['call'](this, bf), this['currentPoint']['copy'](bf['currentPoint']), this;
    },
    'toJSON': function() {
      var bf = aJk['prototype']['toJSON']['call'](this);
      return bf['currentPoint'] = this['currentPoint']['toArray'](), bf;
    },
    'fromJSON': function(bf) {
      return aJk['prototype']['fromJSON']['call'](this, bf), this['currentPoint']['fromArray'](bf['currentPoint']), this;
    }
  }), aJn['prototype'] = Object['assign'](Object['create'](aJl['prototype']), {
    'constructor': aJn,
    'getPointsHoles': function(bf) {
      for (var bg = [], bh = 0x0, bi = this['holes']['length']; bh < bi; bh++) bg[bh] = this['holes'][bh]['getPoints'](bf);
      return bg;
    },
    'extractPoints': function(bf) {
      return {
        'shape': this['getPoints'](bf),
        'holes': this['getPointsHoles'](bf)
      };
    },
    'copy': function(bf) {
      aJl['prototype']['copy']['call'](this, bf), this['holes'] = [];
      for (var bg = 0x0, bh = bf['holes']['length']; bg < bh; bg++) {
        var bi = bf['holes'][bg];
        this['holes']['push'](bi['clone']());
      }
      return this;
    },
    'toJSON': function() {
      var bf = aJl['prototype']['toJSON']['call'](this);
      bf['uuid'] = this['uuid'], bf['holes'] = [];
      for (var bg = 0x0, bh = this['holes']['length']; bg < bh; bg++) {
        var bi = this['holes'][bg];
        bf['holes']['push'](bi['toJSON']());
      }
      return bf;
    },
    'fromJSON': function(bf) {
      aJl['prototype']['fromJSON']['call'](this, bf), this['uuid'] = bf['uuid'], this['holes'] = [];
      for (var bg = 0x0, bh = bf['holes']['length']; bg < bh; bg++) {
        var bi = bf['holes'][bg];
        this['holes']['push'](new aJl()['fromJSON'](bi));
      }
      return this;
    }
  }), aJp['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': aJp,
    'isLight': !0x0,
    'copy': function(bf) {
      return yT['prototype']['copy']['call'](this, bf), this['color']['copy'](bf['color']), this['intensity'] = bf['intensity'], this;
    },
    'toJSON': function(bf) {
      var bg = yT['prototype']['toJSON']['call'](this, bf);
      return bg['object']['color'] = this['color']['getHex'](), bg['object']['intensity'] = this['intensity'], void 0x0 !== this['groundColor'] && (bg['object']['groundColor'] = this['groundColor']['getHex']()), void 0x0 !== this['distance'] && (bg['object']['distance'] = this['distance']), void 0x0 !== this['angle'] && (bg['object']['angle'] = this['angle']), void 0x0 !== this['decay'] && (bg['object']['decay'] = this['decay']), void 0x0 !== this['penumbra'] && (bg['object']['penumbra'] = this['penumbra']), void 0x0 !== this['shadow'] && (bg['object']['shadow'] = this['shadow']['toJSON']()), bg;
    }
  }), aJs['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
    'constructor': aJs,
    'isHemisphereLight': !0x0,
    'copy': function(bf) {
      return aJp['prototype']['copy']['call'](this, bf), this['groundColor']['copy'](bf['groundColor']), this;
    }
  }), Object['assign'](aJw['prototype'], {
    'copy': function(bf) {
      return this['camera'] = bf['camera']['clone'](), this['bias'] = bf['bias'], this['radius'] = bf['radius'], this['mapSize']['copy'](bf['mapSize']), this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'toJSON': function() {
      var bf = {};
      return 0x0 !== this['bias'] && (bf['bias'] = this['bias']), 0x1 !== this['radius'] && (bf['radius'] = this['radius']), 0x200 === this['mapSize']['x'] && 0x200 === this['mapSize']['y'] || (bf['mapSize'] = this['mapSize']['toArray']()), bf['camera'] = this['camera']['toJSON'](!0x1)['object'], delete bf['camera']['matrix'], bf;
    }
  }), aJy['prototype'] = Object['assign'](Object['create'](aJw['prototype']), {
    'constructor': aJy,
    'isSpotLightShadow': !0x0,
    'update': function(bf) {
      var bg = this['camera'],
        bh = 0x2 * e2['RAD2DEG'] * bf['angle'],
        bi = this['mapSize']['width'] / this['mapSize']['height'],
        bF = bf['distance'] || bg['far'];
      bh === bg['fov'] && bi === bg['aspect'] && bF === bg['far'] || (bg['fov'] = bh, bg['aspect'] = bi, bg['far'] = bF, bg['updateProjectionMatrix']());
    }
  }), aJz['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
    'constructor': aJz,
    'isSpotLight': !0x0,
    'copy': function(bf) {
      return aJp['prototype']['copy']['call'](this, bf), this['distance'] = bf['distance'], this['angle'] = bf['angle'], this['penumbra'] = bf['penumbra'], this['decay'] = bf['decay'], this['target'] = bf['target']['clone'](), this['shadow'] = bf['shadow']['clone'](), this;
    }
  }), aJH['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
    'constructor': aJH,
    'isPointLight': !0x0,
    'copy': function(bf) {
      return aJp['prototype']['copy']['call'](this, bf), this['distance'] = bf['distance'], this['decay'] = bf['decay'], this['shadow'] = bf['shadow']['clone'](), this;
    }
  }), aJN['prototype'] = Object['assign'](Object['create'](a67['prototype']), {
    'constructor': aJN,
    'isOrthographicCamera': !0x0,
    'copy': function(bf, bg) {
      return a67['prototype']['copy']['call'](this, bf, bg), this['left'] = bf['left'], this['right'] = bf['right'], this['top'] = bf['top'], this['bottom'] = bf['bottom'], this['near'] = bf['near'], this['far'] = bf['far'], this['zoom'] = bf['zoom'], this['view'] = null === bf['view'] ? null : Object['assign']({}, bf['view']), this;
    },
    'setViewOffset': function(bf, bg, bh, bi, bF, bG) {
      null === this['view'] && (this['view'] = {
        'enabled': !0x0,
        'fullWidth': 0x1,
        'fullHeight': 0x1,
        'offsetX': 0x0,
        'offsetY': 0x0,
        'width': 0x1,
        'height': 0x1
      }), this['view']['enabled'] = !0x0, this['view']['fullWidth'] = bf, this['view']['fullHeight'] = bg, this['view']['offsetX'] = bh, this['view']['offsetY'] = bi, this['view']['width'] = bF, this['view']['height'] = bG, this['updateProjectionMatrix']();
    },
    'clearViewOffset': function() {
      null !== this['view'] && (this['view']['enabled'] = !0x1), this['updateProjectionMatrix']();
    },
    'updateProjectionMatrix': function() {
      var bf = (this['right'] - this['left']) / (0x2 * this['zoom']),
        bg = (this['top'] - this['bottom']) / (0x2 * this['zoom']),
        bh = (this['right'] + this['left']) / 0x2,
        bi = (this['top'] + this['bottom']) / 0x2,
        bF = bh - bf,
        bG = bh + bf,
        bH = bi + bg,
        bI = bi - bg;
      if (null !== this['view'] && this['view']['enabled']) {
        var bJ = this['zoom'] / (this['view']['width'] / this['view']['fullWidth']),
          bK = this['zoom'] / (this['view']['height'] / this['view']['fullHeight']),
          bL = (this['right'] - this['left']) / this['view']['width'],
          bM = (this['top'] - this['bottom']) / this['view']['height'];
        bG = (bF += bL * (this['view']['offsetX'] / bJ)) + bL * (this['view']['width'] / bJ), bI = (bH -= bM * (this['view']['offsetY'] / bK)) - bM * (this['view']['height'] / bK);
      }
      this['projectionMatrix']['makeOrthographic'](bF, bG, bH, bI, this['near'], this['far']), this['projectionMatrixInverse']['getInverse'](this['projectionMatrix']);
    },
    'toJSON': function(bf) {
      var bg = yT['prototype']['toJSON']['call'](this, bf);
      return bg['object']['zoom'] = this['zoom'], bg['object']['left'] = this['left'], bg['object']['right'] = this['right'], bg['object']['top'] = this['top'], bg['object']['bottom'] = this['bottom'], bg['object']['near'] = this['near'], bg['object']['far'] = this['far'], null !== this['view'] && (bg['object']['view'] = Object['assign']({}, this['view'])), bg;
    }
  }), aJU['prototype'] = Object['assign'](Object['create'](aJw['prototype']), {
    'constructor': aJU
  }), aJV['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
    'constructor': aJV,
    'isDirectionalLight': !0x0,
    'copy': function(bf) {
      return aJp['prototype']['copy']['call'](this, bf), this['target'] = bf['target']['clone'](), this['shadow'] = bf['shadow']['clone'](), this;
    }
  }), aJY['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
    'constructor': aJY,
    'isAmbientLight': !0x0
  }), aK1['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
    'constructor': aK1,
    'isRectAreaLight': !0x0,
    'copy': function(bf) {
      return aJp['prototype']['copy']['call'](this, bf), this['width'] = bf['width'], this['height'] = bf['height'], this;
    },
    'toJSON': function(bf) {
      var bg = aJp['prototype']['toJSON']['call'](this, bf);
      return bg['object']['width'] = this['width'], bg['object']['height'] = this['height'], bg;
    }
  }), Object['assign'](aK6['prototype'], {
    'load': function(bf, bg, bh, bi) {
      var bF = this,
        bG = new aCv(bF['manager']);
      bG['setPath'](bF['path']), bG['load'](bf, function(bf) {
        bg(bF['parse'](JSON['parse'](bf)));
      }, bh, bi);
    },
    'parse': function(bf) {
      var bg = this['textures'];

      function bh(bf) {
        return void 0x0 === bg[bf] && console['warn']('THREE.MaterialLoader:\x20Undefined\x20texture', bf), bg[bf];
      }
      var bi = new axi[bf['type']]();
      if (void 0x0 !== bf['uuid'] && (bi['uuid'] = bf['uuid']), void 0x0 !== bf['name'] && (bi['name'] = bf['name']), void 0x0 !== bf['color'] && bi['color']['setHex'](bf['color']), void 0x0 !== bf['roughness'] && (bi['roughness'] = bf['roughness']), void 0x0 !== bf['metalness'] && (bi['metalness'] = bf['metalness']), void 0x0 !== bf['emissive'] && bi['emissive']['setHex'](bf['emissive']), void 0x0 !== bf['specular'] && bi['specular']['setHex'](bf['specular']), void 0x0 !== bf['shininess'] && (bi['shininess'] = bf['shininess']), void 0x0 !== bf['clearCoat'] && (bi['clearCoat'] = bf['clearCoat']), void 0x0 !== bf['clearCoatRoughness'] && (bi['clearCoatRoughness'] = bf['clearCoatRoughness']), void 0x0 !== bf['vertexColors'] && (bi['vertexColors'] = bf['vertexColors']), void 0x0 !== bf['fog'] && (bi['fog'] = bf['fog']), void 0x0 !== bf['flatShading'] && (bi['flatShading'] = bf['flatShading']), void 0x0 !== bf['blending'] && (bi['blending'] = bf['blending']), void 0x0 !== bf['combine'] && (bi['combine'] = bf['combine']), void 0x0 !== bf['side'] && (bi['side'] = bf['side']), void 0x0 !== bf['opacity'] && (bi['opacity'] = bf['opacity']), void 0x0 !== bf['transparent'] && (bi['transparent'] = bf['transparent']), void 0x0 !== bf['alphaTest'] && (bi['alphaTest'] = bf['alphaTest']), void 0x0 !== bf['depthTest'] && (bi['depthTest'] = bf['depthTest']), void 0x0 !== bf['depthWrite'] && (bi['depthWrite'] = bf['depthWrite']), void 0x0 !== bf['colorWrite'] && (bi['colorWrite'] = bf['colorWrite']), void 0x0 !== bf['wireframe'] && (bi['wireframe'] = bf['wireframe']), void 0x0 !== bf['wireframeLinewidth'] && (bi['wireframeLinewidth'] = bf['wireframeLinewidth']), void 0x0 !== bf['wireframeLinecap'] && (bi['wireframeLinecap'] = bf['wireframeLinecap']), void 0x0 !== bf['wireframeLinejoin'] && (bi['wireframeLinejoin'] = bf['wireframeLinejoin']), void 0x0 !== bf['rotation'] && (bi['rotation'] = bf['rotation']), 0x1 !== bf['linewidth'] && (bi['linewidth'] = bf['linewidth']), void 0x0 !== bf['dashSize'] && (bi['dashSize'] = bf['dashSize']), void 0x0 !== bf['gapSize'] && (bi['gapSize'] = bf['gapSize']), void 0x0 !== bf['scale'] && (bi['scale'] = bf['scale']), void 0x0 !== bf['polygonOffset'] && (bi['polygonOffset'] = bf['polygonOffset']), void 0x0 !== bf['polygonOffsetFactor'] && (bi['polygonOffsetFactor'] = bf['polygonOffsetFactor']), void 0x0 !== bf['polygonOffsetUnits'] && (bi['polygonOffsetUnits'] = bf['polygonOffsetUnits']), void 0x0 !== bf['skinning'] && (bi['skinning'] = bf['skinning']), void 0x0 !== bf['morphTargets'] && (bi['morphTargets'] = bf['morphTargets']), void 0x0 !== bf['dithering'] && (bi['dithering'] = bf['dithering']), void 0x0 !== bf['visible'] && (bi['visible'] = bf['visible']), void 0x0 !== bf['userData'] && (bi['userData'] = bf['userData']), void 0x0 !== bf['uniforms'])
        for (var bF in bf['uniforms']) {
          var bG = bf['uniforms'][bF];
          switch (bi['uniforms'][bF] = {}, bG['type']) {
            case 't':
              bi['uniforms'][bF]['value'] = bh(bG['value']);
              break;
            case 'c':
              bi['uniforms'][bF]['value'] = new w7()['setHex'](bG['value']);
              break;
            case 'v2':
              bi['uniforms'][bF]['value'] = new eC()['fromArray'](bG['value']);
              break;
            case 'v3':
              bi['uniforms'][bF]['value'] = new eK()['fromArray'](bG['value']);
              break;
            case 'v4':
              bi['uniforms'][bF]['value'] = new m7()['fromArray'](bG['value']);
              break;
            case 'm3':
              bi['uniforms'][bF]['value'] = new eO()['fromArray'](bG['value']);
            case 'm4':
              bi['uniforms'][bF]['value'] = new mR()['fromArray'](bG['value']);
              break;
            default:
              bi['uniforms'][bF]['value'] = bG['value'];
          }
        }
      if (void 0x0 !== bf['defines'] && (bi['defines'] = bf['defines']), void 0x0 !== bf['vertexShader'] && (bi['vertexShader'] = bf['vertexShader']), void 0x0 !== bf['fragmentShader'] && (bi['fragmentShader'] = bf['fragmentShader']), void 0x0 !== bf['extensions'])
        for (var bH in bf['extensions']) bi['extensions'][bH] = bf['extensions'][bH];
      if (void 0x0 !== bf['shading'] && (bi['flatShading'] = 0x1 === bf['shading']), void 0x0 !== bf['size'] && (bi['size'] = bf['size']), void 0x0 !== bf['sizeAttenuation'] && (bi['sizeAttenuation'] = bf['sizeAttenuation']), void 0x0 !== bf['map'] && (bi['map'] = bh(bf['map'])), void 0x0 !== bf['matcap'] && (bi['matcap'] = bh(bf['matcap'])), void 0x0 !== bf['alphaMap'] && (bi['alphaMap'] = bh(bf['alphaMap']), bi['transparent'] = !0x0), void 0x0 !== bf['bumpMap'] && (bi['bumpMap'] = bh(bf['bumpMap'])), void 0x0 !== bf['bumpScale'] && (bi['bumpScale'] = bf['bumpScale']), void 0x0 !== bf['normalMap'] && (bi['normalMap'] = bh(bf['normalMap'])), void 0x0 !== bf['normalMapType'] && (bi['normalMapType'] = bf['normalMapType']), void 0x0 !== bf['normalScale']) {
        var bI = bf['normalScale'];
        !0x1 === Array['isArray'](bI) && (bI = [bI, bI]), bi['normalScale'] = new eC()['fromArray'](bI);
      }
      return void 0x0 !== bf['displacementMap'] && (bi['displacementMap'] = bh(bf['displacementMap'])), void 0x0 !== bf['displacementScale'] && (bi['displacementScale'] = bf['displacementScale']), void 0x0 !== bf['displacementBias'] && (bi['displacementBias'] = bf['displacementBias']), void 0x0 !== bf['roughnessMap'] && (bi['roughnessMap'] = bh(bf['roughnessMap'])), void 0x0 !== bf['metalnessMap'] && (bi['metalnessMap'] = bh(bf['metalnessMap'])), void 0x0 !== bf['emissiveMap'] && (bi['emissiveMap'] = bh(bf['emissiveMap'])), void 0x0 !== bf['emissiveIntensity'] && (bi['emissiveIntensity'] = bf['emissiveIntensity']), void 0x0 !== bf['specularMap'] && (bi['specularMap'] = bh(bf['specularMap'])), void 0x0 !== bf['envMap'] && (bi['envMap'] = bh(bf['envMap'])), void 0x0 !== bf['envMapIntensity'] && (bi['envMapIntensity'] = bf['envMapIntensity']), void 0x0 !== bf['reflectivity'] && (bi['reflectivity'] = bf['reflectivity']), void 0x0 !== bf['lightMap'] && (bi['lightMap'] = bh(bf['lightMap'])), void 0x0 !== bf['lightMapIntensity'] && (bi['lightMapIntensity'] = bf['lightMapIntensity']), void 0x0 !== bf['aoMap'] && (bi['aoMap'] = bh(bf['aoMap'])), void 0x0 !== bf['aoMapIntensity'] && (bi['aoMapIntensity'] = bf['aoMapIntensity']), void 0x0 !== bf['gradientMap'] && (bi['gradientMap'] = bh(bf['gradientMap'])), bi;
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    },
    'setTextures': function(bf) {
      return this['textures'] = bf, this;
    }
  });
  var aMX = {
    'decodeText': function(bf) {
      if ('undefined' != typeof TextDecoder) return new TextDecoder()['decode'](bf);
      for (var bg = '', bh = 0x0, bi = bf['length']; bh < bi; bh++) bg += String['fromCharCode'](bf[bh]);
      try {
        return decodeURIComponent(escape(bg));
      } catch (aN2) {
        return bg;
      }
    },
    'extractUrlBase': function(bf) {
      var bg = bf['lastIndexOf']('/');
      return -0x1 === bg ? './' : bf['substr'](0x0, bg + 0x1);
    }
  };

  function aN5() {
    Gf['call'](this), this['type'] = 'InstancedBufferGeometry', this['maxInstancedCount'] = void 0x0;
  }

  function aN6(bf, bg, bh, bi) {
    'number' == typeof bh && (bi = bh, bh = !0x1, console['error']('THREE.InstancedBufferAttribute:\x20The\x20constructor\x20now\x20expects\x20normalized\x20as\x20the\x20third\x20argument.')), AI['call'](this, bf, bg, bh), this['meshPerAttribute'] = bi || 0x1;
  }

  function aNb(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt;
  }
  aN5['prototype'] = Object['assign'](Object['create'](Gf['prototype']), {
    'constructor': aN5,
    'isInstancedBufferGeometry': !0x0,
    'copy': function(bf) {
      return Gf['prototype']['copy']['call'](this, bf), this['maxInstancedCount'] = bf['maxInstancedCount'], this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'toJSON': function() {
      var bf = Gf['prototype']['toJSON']['call'](this);
      return bf['maxInstancedCount'] = this['maxInstancedCount'], bf['isInstancedBufferGeometry'] = !0x0, bf;
    }
  }), aN6['prototype'] = Object['assign'](Object['create'](AI['prototype']), {
    'constructor': aN6,
    'isInstancedBufferAttribute': !0x0,
    'copy': function(bf) {
      return AI['prototype']['copy']['call'](this, bf), this['meshPerAttribute'] = bf['meshPerAttribute'], this;
    },
    'toJSON': function() {
      var bf = AI['prototype']['toJSON']['call'](this);
      return bf['meshPerAttribute'] = this['meshPerAttribute'], bf['isInstancedBufferAttribute'] = !0x0, bf;
    }
  }), Object['assign'](aNb['prototype'], {
    'load': function(bf, bg, bh, bi) {
      var bF = this,
        bG = new aCv(bF['manager']);
      bG['setPath'](bF['path']), bG['load'](bf, function(bf) {
        bg(bF['parse'](JSON['parse'](bf)));
      }, bh, bi);
    },
    'parse': function(bf) {
      var bg = bf['isInstancedBufferGeometry'] ? new aN5() : new Gf(),
        bh = bf['data']['index'];
      if (void 0x0 !== bh) {
        var bi = new aNI[bh['type']](bh['array']);
        bg['setIndex'](new AI(bi, 0x1));
      }
      var bF = bf['data']['attributes'];
      for (var bG in bF) {
        var bH = bF[bG],
          bI = (bi = new aNI[bH['type']](bH['array']), new(bH['isInstancedBufferAttribute'] ? aN6 : AI)(bi, bH['itemSize'], bH['normalized']));
        void 0x0 !== bH['name'] && (bI['name'] = bH['name']), bg['addAttribute'](bG, bI);
      }
      var bJ = bf['data']['morphAttributes'];
      if (bJ)
        for (var bG in bJ) {
          for (var bK = bJ[bG], bL = [], bM = 0x0, bN = bK['length']; bM < bN; bM++) {
            bH = bK[bM], bI = new AI(bi = new aNI[bH['type']](bH['array']), bH['itemSize'], bH['normalized']);
            void 0x0 !== bH['name'] && (bI['name'] = bH['name']), bL['push'](bI);
          }
          bg['morphAttributes'][bG] = bL;
        }
      var bO = bf['data']['groups'] || bf['data']['drawcalls'] || bf['data']['offsets'];
      if (void 0x0 !== bO) {
        bM = 0x0;
        for (var bP = bO['length']; bM !== bP; ++bM) {
          var bQ = bO[bM];
          bg['addGroup'](bQ['start'], bQ['count'], bQ['materialIndex']);
        }
      }
      var bR = bf['data']['boundingSphere'];
      if (void 0x0 !== bR) {
        var bS = new eK();
        void 0x0 !== bR['center'] && bS['fromArray'](bR['center']), bg['boundingSphere'] = new mE(bS, bR['radius']);
      }
      return bf['name'] && (bg['name'] = bf['name']), bf['userData'] && (bg['userData'] = bf['userData']), bg;
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  });
  var aNI = {
    'Int8Array': Int8Array,
    'Uint8Array': Uint8Array,
    'Uint8ClampedArray': 'undefined' != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
    'Int16Array': Int16Array,
    'Uint16Array': Uint16Array,
    'Int32Array': Int32Array,
    'Uint32Array': Uint32Array,
    'Float32Array': Float32Array,
    'Float64Array': Float64Array
  };

  function aNJ(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt, this['resourcePath'] = '';
  }
  Object['assign'](aNJ['prototype'], {
    'crossOrigin': 'anonymous',
    'load': function(bf, bg, bh, bi) {
      var bF = this,
        bG = void 0x0 === this['path'] ? aMX['extractUrlBase'](bf) : this['path'];
      this['resourcePath'] = this['resourcePath'] || bG;
      var bH = new aCv(bF['manager']);
      bH['setPath'](this['path']), bH['load'](bf, function(bh) {
        var bG = null;
        try {
          bG = JSON['parse'](bh);
        } catch (aNU) {
          return void 0x0 !== bi && bi(aNU), void console['error']('THREE:ObjectLoader:\x20Can\x27t\x20parse\x20' + bf + '.', aNU['message']);
        }
        var bH = bG['metadata'];
        void 0x0 !== bH && void 0x0 !== bH['type'] && 'geometry' !== bH['type']['toLowerCase']() ? bF['parse'](bG, bg) : console['error']('THREE.ObjectLoader:\x20Can\x27t\x20load\x20' + bf);
      }, bh, bi);
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    },
    'setResourcePath': function(bf) {
      return this['resourcePath'] = bf, this;
    },
    'setCrossOrigin': function(bf) {
      return this['crossOrigin'] = bf, this;
    },
    'parse': function(bf, bg) {
      var bh = this['parseShape'](bf['shapes']),
        bi = this['parseGeometries'](bf['geometries'], bh),
        bF = this['parseImages'](bf['images'], function() {
          void 0x0 !== bg && bg(bI);
        }),
        bG = this['parseTextures'](bf['textures'], bF),
        bH = this['parseMaterials'](bf['materials'], bG),
        bI = this['parseObject'](bf['object'], bi, bH);
      return bf['animations'] && (bI['animations'] = this['parseAnimations'](bf['animations'])), void 0x0 !== bf['images'] && 0x0 !== bf['images']['length'] || void 0x0 !== bg && bg(bI), bI;
    },
    'parseShape': function(bf) {
      var bg = {};
      if (void 0x0 !== bf)
        for (var bh = 0x0, bi = bf['length']; bh < bi; bh++) {
          var bF = new aJn()['fromJSON'](bf[bh]);
          bg[bF['uuid']] = bF;
        }
      return bg;
    },
    'parseGeometries': function(bf, bg) {
      var bh = {};
      if (void 0x0 !== bf)
        for (var bi = new aNb(), bF = 0x0, bG = bf['length']; bF < bG; bF++) {
          var bH, bI = bf[bF];
          switch (bI['type']) {
            case 'PlaneGeometry':
            case 'PlaneBufferGeometry':
              bH = new awO[bI['type']](bI['width'], bI['height'], bI['widthSegments'], bI['heightSegments']);
              break;
            case 'BoxGeometry':
            case 'BoxBufferGeometry':
            case 'CubeGeometry':
              bH = new awO[bI['type']](bI['width'], bI['height'], bI['depth'], bI['widthSegments'], bI['heightSegments'], bI['depthSegments']);
              break;
            case 'CircleGeometry':
            case 'CircleBufferGeometry':
              bH = new awO[bI['type']](bI['radius'], bI['segments'], bI['thetaStart'], bI['thetaLength']);
              break;
            case 'CylinderGeometry':
            case 'CylinderBufferGeometry':
              bH = new awO[bI['type']](bI['radiusTop'], bI['radiusBottom'], bI['height'], bI['radialSegments'], bI['heightSegments'], bI['openEnded'], bI['thetaStart'], bI['thetaLength']);
              break;
            case 'ConeGeometry':
            case 'ConeBufferGeometry':
              bH = new awO[bI['type']](bI['radius'], bI['height'], bI['radialSegments'], bI['heightSegments'], bI['openEnded'], bI['thetaStart'], bI['thetaLength']);
              break;
            case 'SphereGeometry':
            case 'SphereBufferGeometry':
              bH = new awO[bI['type']](bI['radius'], bI['widthSegments'], bI['heightSegments'], bI['phiStart'], bI['phiLength'], bI['thetaStart'], bI['thetaLength']);
              break;
            case 'DodecahedronGeometry':
            case 'DodecahedronBufferGeometry':
            case 'IcosahedronGeometry':
            case 'IcosahedronBufferGeometry':
            case 'OctahedronGeometry':
            case 'OctahedronBufferGeometry':
            case 'TetrahedronGeometry':
            case 'TetrahedronBufferGeometry':
              bH = new awO[bI['type']](bI['radius'], bI['detail']);
              break;
            case 'RingGeometry':
            case 'RingBufferGeometry':
              bH = new awO[bI['type']](bI['innerRadius'], bI['outerRadius'], bI['thetaSegments'], bI['phiSegments'], bI['thetaStart'], bI['thetaLength']);
              break;
            case 'TorusGeometry':
            case 'TorusBufferGeometry':
              bH = new awO[bI['type']](bI['radius'], bI['tube'], bI['radialSegments'], bI['tubularSegments'], bI['arc']);
              break;
            case 'TorusKnotGeometry':
            case 'TorusKnotBufferGeometry':
              bH = new awO[bI['type']](bI['radius'], bI['tube'], bI['tubularSegments'], bI['radialSegments'], bI['p'], bI['q']);
              break;
            case 'TubeGeometry':
            case 'TubeBufferGeometry':
              bH = new awO[bI['type']](new aJj[bI['path']['type']]()['fromJSON'](bI['path']), bI['tubularSegments'], bI['radius'], bI['radialSegments'], bI['closed']);
              break;
            case 'LatheGeometry':
            case 'LatheBufferGeometry':
              bH = new awO[bI['type']](bI['points'], bI['segments'], bI['phiStart'], bI['phiLength']);
              break;
            case 'PolyhedronGeometry':
            case 'PolyhedronBufferGeometry':
              bH = new awO[bI['type']](bI['vertices'], bI['indices'], bI['radius'], bI['details']);
              break;
            case 'ShapeGeometry':
            case 'ShapeBufferGeometry':
              for (var bJ = [], bK = 0x0, bL = bI['shapes']['length']; bK < bL; bK++) {
                var bM = bg[bI['shapes'][bK]];
                bJ['push'](bM);
              }
              bH = new awO[bI['type']](bJ, bI['curveSegments']);
              break;
            case 'ExtrudeGeometry':
            case 'ExtrudeBufferGeometry':
              for (bJ = [], bK = 0x0, bL = bI['shapes']['length']; bK < bL; bK++) {
                bM = bg[bI['shapes'][bK]];
                bJ['push'](bM);
              }
              var bN = bI['options']['extrudePath'];
              void 0x0 !== bN && (bI['options']['extrudePath'] = new aJj[bN['type']]()['fromJSON'](bN)), bH = new awO[bI['type']](bJ, bI['options']);
              break;
            case 'BufferGeometry':
            case 'InstancedBufferGeometry':
              bH = bi['parse'](bI);
              break;
            case 'Geometry':
              if ('THREE' in window && 'LegacyJSONLoader' in THREE) bH = new THREE['LegacyJSONLoader']()['parse'](bI, this['resourcePath'])['geometry'];
              else console['error']('THREE.ObjectLoader:\x20You\x20have\x20to\x20import\x20LegacyJSONLoader\x20in\x20order\x20load\x20geometry\x20data\x20of\x20type\x20\x22Geometry\x22.');
              break;
            default:
              console['warn']('THREE.ObjectLoader:\x20Unsupported\x20geometry\x20type\x20\x22' + bI['type'] + '\x22');
              continue;
          }
          bH['uuid'] = bI['uuid'], void 0x0 !== bI['name'] && (bH['name'] = bI['name']), !0x0 === bH['isBufferGeometry'] && void 0x0 !== bI['userData'] && (bH['userData'] = bI['userData']), bh[bI['uuid']] = bH;
        }
      return bh;
    },
    'parseMaterials': function(bf, bg) {
      var bh = {},
        bi = {};
      if (void 0x0 !== bf) {
        var bF = new aK6();
        bF['setTextures'](bg);
        for (var bG = 0x0, bH = bf['length']; bG < bH; bG++) {
          var bI = bf[bG];
          if ('MultiMaterial' === bI['type']) {
            for (var bJ = [], bK = 0x0; bK < bI['materials']['length']; bK++) {
              var bL = bI['materials'][bK];
              void 0x0 === bh[bL['uuid']] && (bh[bL['uuid']] = bF['parse'](bL)), bJ['push'](bh[bL['uuid']]);
            }
            bi[bI['uuid']] = bJ;
          } else void 0x0 === bh[bI['uuid']] && (bh[bI['uuid']] = bF['parse'](bI)), bi[bI['uuid']] = bh[bI['uuid']];
        }
      }
      return bi;
    },
    'parseAnimations': function(bf) {
      for (var bg = [], bh = 0x0; bh < bf['length']; bh++) {
        var bi = bf[bh],
          bF = ayK['parse'](bi);
        void 0x0 !== bi['uuid'] && (bF['uuid'] = bi['uuid']), bg['push'](bF);
      }
      return bg;
    },
    'parseImages': function(bf, bg) {
      var bh = this,
        bi = {};

      function bF(bf) {
        return bh['manager']['itemStart'](bf), bG['load'](bf, function() {
          bh['manager']['itemEnd'](bf);
        }, void 0x0, function() {
          bh['manager']['itemError'](bf), bh['manager']['itemEnd'](bf);
        });
      }
      if (void 0x0 !== bf && bf['length'] > 0x0) {
        var bG = new aCD(new aCf(bg));
        bG['setCrossOrigin'](this['crossOrigin']);
        for (var bH = 0x0, bI = bf['length']; bH < bI; bH++) {
          var bJ = bf[bH],
            bK = bJ['url'];
          if (Array['isArray'](bK)) {
            bi[bJ['uuid']] = [];
            for (var bL = 0x0, bM = bK['length']; bL < bM; bL++) {
              var bN = bK[bL],
                bO = /^(\/\/)|([a-z]+:(\/\/)?)/i ['test'](bN) ? bN : bh['resourcePath'] + bN;
              bi[bJ['uuid']]['push'](bF(bO));
            }
          } else {
            bO = /^(\/\/)|([a-z]+:(\/\/)?)/i ['test'](bJ['url']) ? bJ['url'] : bh['resourcePath'] + bJ['url'];
            bi[bJ['uuid']] = bF(bO);
          }
        }
      }
      return bi;
    },
    'parseTextures': function(bf, bg) {
      function bh(bf, bg) {
        return 'number' == typeof bf ? bf : (console['warn']('THREE.ObjectLoader.parseTexture:\x20Constant\x20should\x20be\x20in\x20numeric\x20form.', bf), bg[bf]);
      }
      var bi = {};
      if (void 0x0 !== bf)
        for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) {
          var bH, bI = bf[bF];
          void 0x0 === bI['image'] && console['warn']('THREE.ObjectLoader:\x20No\x20\x22image\x22\x20specified\x20for', bI['uuid']), void 0x0 === bg[bI['image']] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20image', bI['image']), (bH = Array['isArray'](bg[bI['image']]) ? new O3(bg[bI['image']]) : new lW(bg[bI['image']]))['needsUpdate'] = !0x0, bH['uuid'] = bI['uuid'], void 0x0 !== bI['name'] && (bH['name'] = bI['name']), void 0x0 !== bI['mapping'] && (bH['mapping'] = bh(bI['mapping'], aPt)), void 0x0 !== bI['offset'] && bH['offset']['fromArray'](bI['offset']), void 0x0 !== bI['repeat'] && bH['repeat']['fromArray'](bI['repeat']), void 0x0 !== bI['center'] && bH['center']['fromArray'](bI['center']), void 0x0 !== bI['rotation'] && (bH['rotation'] = bI['rotation']), void 0x0 !== bI['wrap'] && (bH['wrapS'] = bh(bI['wrap'][0x0], aPu), bH['wrapT'] = bh(bI['wrap'][0x1], aPu)), void 0x0 !== bI['format'] && (bH['format'] = bI['format']), void 0x0 !== bI['type'] && (bH['type'] = bI['type']), void 0x0 !== bI['encoding'] && (bH['encoding'] = bI['encoding']), void 0x0 !== bI['minFilter'] && (bH['minFilter'] = bh(bI['minFilter'], aPv)), void 0x0 !== bI['magFilter'] && (bH['magFilter'] = bh(bI['magFilter'], aPv)), void 0x0 !== bI['anisotropy'] && (bH['anisotropy'] = bI['anisotropy']), void 0x0 !== bI['flipY'] && (bH['flipY'] = bI['flipY']), void 0x0 !== bI['premultiplyAlpha'] && (bH['premultiplyAlpha'] = bI['premultiplyAlpha']), void 0x0 !== bI['unpackAlignment'] && (bH['unpackAlignment'] = bI['unpackAlignment']), bi[bI['uuid']] = bH;
        }
      return bi;
    },
    'parseObject': function(bf, bg, bh) {
      var bi;

      function bF(bf) {
        return void 0x0 === bg[bf] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20geometry', bf), bg[bf];
      }

      function bG(bf) {
        if (void 0x0 !== bf) {
          if (Array['isArray'](bf)) {
            for (var bg = [], bi = 0x0, bF = bf['length']; bi < bF; bi++) {
              var bG = bf[bi];
              void 0x0 === bh[bG] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20material', bG), bg['push'](bh[bG]);
            }
            return bg;
          }
          return void 0x0 === bh[bf] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20material', bf), bh[bf];
        }
      }
      switch (bf['type']) {
        case 'Scene':
          bi = new aea(), void 0x0 !== bf['background'] && Number['isInteger'](bf['background']) && (bi['background'] = new w7(bf['background'])), void 0x0 !== bf['fog'] && ('Fog' === bf['fog']['type'] ? bi['fog'] = new ae6(bf['fog']['color'], bf['fog']['near'], bf['fog']['far']) : 'FogExp2' === bf['fog']['type'] && (bi['fog'] = new ae3(bf['fog']['color'], bf['fog']['density'])));
          break;
        case 'PerspectiveCamera':
          bi = new a68(bf['fov'], bf['aspect'], bf['near'], bf['far']), void 0x0 !== bf['focus'] && (bi['focus'] = bf['focus']), void 0x0 !== bf['zoom'] && (bi['zoom'] = bf['zoom']), void 0x0 !== bf['filmGauge'] && (bi['filmGauge'] = bf['filmGauge']), void 0x0 !== bf['filmOffset'] && (bi['filmOffset'] = bf['filmOffset']), void 0x0 !== bf['view'] && (bi['view'] = Object['assign']({}, bf['view']));
          break;
        case 'OrthographicCamera':
          bi = new aJN(bf['left'], bf['right'], bf['top'], bf['bottom'], bf['near'], bf['far']), void 0x0 !== bf['zoom'] && (bi['zoom'] = bf['zoom']), void 0x0 !== bf['view'] && (bi['view'] = Object['assign']({}, bf['view']));
          break;
        case 'AmbientLight':
          bi = new aJY(bf['color'], bf['intensity']);
          break;
        case 'DirectionalLight':
          bi = new aJV(bf['color'], bf['intensity']);
          break;
        case 'PointLight':
          bi = new aJH(bf['color'], bf['intensity'], bf['distance'], bf['decay']);
          break;
        case 'RectAreaLight':
          bi = new aK1(bf['color'], bf['intensity'], bf['width'], bf['height']);
          break;
        case 'SpotLight':
          bi = new aJz(bf['color'], bf['intensity'], bf['distance'], bf['angle'], bf['penumbra'], bf['decay']);
          break;
        case 'HemisphereLight':
          bi = new aJs(bf['color'], bf['groundColor'], bf['intensity']);
          break;
        case 'SkinnedMesh':
          console['warn']('THREE.ObjectLoader.parseObject()\x20does\x20not\x20support\x20SkinnedMesh\x20yet.');
        case 'Mesh':
          var bH = bF(bf['geometry']),
            bI = bG(bf['material']);
          bi = bH['bones'] && bH['bones']['length'] > 0x0 ? new aep(bH, bI) : new KY(bH, bI), void 0x0 !== bf['drawMode'] && bi['setDrawMode'](bf['drawMode']);
          break;
        case 'LOD':
          bi = new aeo();
          break;
        case 'Line':
          bi = new aeA(bF(bf['geometry']), bG(bf['material']), bf['mode']);
          break;
        case 'LineLoop':
          bi = new aeH(bF(bf['geometry']), bG(bf['material']));
          break;
        case 'LineSegments':
          bi = new aeE(bF(bf['geometry']), bG(bf['material']));
          break;
        case 'PointCloud':
        case 'Points':
          bi = new aeM(bF(bf['geometry']), bG(bf['material']));
          break;
        case 'Sprite':
          bi = new ael(bG(bf['material']));
          break;
        case 'Group':
          bi = new a66();
          break;
        default:
          bi = new yT();
      }
      if (bi['uuid'] = bf['uuid'], void 0x0 !== bf['name'] && (bi['name'] = bf['name']), void 0x0 !== bf['matrix'] ? (bi['matrix']['fromArray'](bf['matrix']), void 0x0 !== bf['matrixAutoUpdate'] && (bi['matrixAutoUpdate'] = bf['matrixAutoUpdate']), bi['matrixAutoUpdate'] && bi['matrix']['decompose'](bi['position'], bi['quaternion'], bi['scale'])) : (void 0x0 !== bf['position'] && bi['position']['fromArray'](bf['position']), void 0x0 !== bf['rotation'] && bi['rotation']['fromArray'](bf['rotation']), void 0x0 !== bf['quaternion'] && bi['quaternion']['fromArray'](bf['quaternion']), void 0x0 !== bf['scale'] && bi['scale']['fromArray'](bf['scale'])), void 0x0 !== bf['castShadow'] && (bi['castShadow'] = bf['castShadow']), void 0x0 !== bf['receiveShadow'] && (bi['receiveShadow'] = bf['receiveShadow']), bf['shadow'] && (void 0x0 !== bf['shadow']['bias'] && (bi['shadow']['bias'] = bf['shadow']['bias']), void 0x0 !== bf['shadow']['radius'] && (bi['shadow']['radius'] = bf['shadow']['radius']), void 0x0 !== bf['shadow']['mapSize'] && bi['shadow']['mapSize']['fromArray'](bf['shadow']['mapSize']), void 0x0 !== bf['shadow']['camera'] && (bi['shadow']['camera'] = this['parseObject'](bf['shadow']['camera']))), void 0x0 !== bf['visible'] && (bi['visible'] = bf['visible']), void 0x0 !== bf['frustumCulled'] && (bi['frustumCulled'] = bf['frustumCulled']), void 0x0 !== bf['renderOrder'] && (bi['renderOrder'] = bf['renderOrder']), void 0x0 !== bf['userData'] && (bi['userData'] = bf['userData']), void 0x0 !== bf['layers'] && (bi['layers']['mask'] = bf['layers']), void 0x0 !== bf['children'])
        for (var bJ = bf['children'], bK = 0x0; bK < bJ['length']; bK++) bi['add'](this['parseObject'](bJ[bK], bg, bh));
      if ('LOD' === bf['type'])
        for (var bL = bf['levels'], bM = 0x0; bM < bL['length']; bM++) {
          var bN = bL[bM],
            bO = bi['getObjectByProperty']('uuid', bN['object']);
          void 0x0 !== bO && bi['addLevel'](bO, bN['distance']);
        }
      return bi;
    }
  });
  var aPo, aPp, aPq, aPr, aPs, aPt = {
      'UVMapping': cE,
      'CubeReflectionMapping': cF,
      'CubeRefractionMapping': cG,
      'EquirectangularReflectionMapping': cH,
      'EquirectangularRefractionMapping': cI,
      'SphericalReflectionMapping': cJ,
      'CubeUVReflectionMapping': cK,
      'CubeUVRefractionMapping': cL
    },
    aPu = {
      'RepeatWrapping': cM,
      'ClampToEdgeWrapping': cN,
      'MirroredRepeatWrapping': cO
    },
    aPv = {
      'NearestFilter': cP,
      'NearestMipMapNearestFilter': cQ,
      'NearestMipMapLinearFilter': cR,
      'LinearFilter': cS,
      'LinearMipMapNearestFilter': cT,
      'LinearMipMapLinearFilter': cU
    };

  function aPw(bf) {
    'undefined' == typeof createImageBitmap && console['warn']('THREE.ImageBitmapLoader:\x20createImageBitmap()\x20not\x20supported.'), 'undefined' == typeof fetch && console['warn']('THREE.ImageBitmapLoader:\x20fetch()\x20not\x20supported.'), this['manager'] = void 0x0 !== bf ? bf : aCt, this['options'] = void 0x0;
  }

  function aPy() {
    this['type'] = 'ShapePath', this['color'] = new w7(), this['subPaths'] = [], this['currentPath'] = null;
  }

  function aPz(bf) {
    this['type'] = 'Font', this['data'] = bf;
  }

  function aPB(bf, bg, bh, bi, bF) {
    var bG = bF['glyphs'][bf] || bF['glyphs']['?'];
    if (bG) {
      var bH, bI, bJ, bK, bL, bM, bN, bO, bP = new aPy();
      if (bG['o'])
        for (var bQ = bG['_cachedOutline'] || (bG['_cachedOutline'] = bG['o']['split']('\x20')), bR = 0x0, bS = bQ['length']; bR < bS;) {
          switch (bQ[bR++]) {
            case 'm':
              bH = bQ[bR++] * bg + bh, bI = bQ[bR++] * bg + bi, bP['moveTo'](bH, bI);
              break;
            case 'l':
              bH = bQ[bR++] * bg + bh, bI = bQ[bR++] * bg + bi, bP['lineTo'](bH, bI);
              break;
            case 'q':
              bJ = bQ[bR++] * bg + bh, bK = bQ[bR++] * bg + bi, bL = bQ[bR++] * bg + bh, bM = bQ[bR++] * bg + bi, bP['quadraticCurveTo'](bL, bM, bJ, bK);
              break;
            case 'b':
              bJ = bQ[bR++] * bg + bh, bK = bQ[bR++] * bg + bi, bL = bQ[bR++] * bg + bh, bM = bQ[bR++] * bg + bi, bN = bQ[bR++] * bg + bh, bO = bQ[bR++] * bg + bi, bP['bezierCurveTo'](bL, bM, bN, bO, bJ, bK);
          }
        }
      return {
        'offsetX': bG['ha'] * bg,
        'path': bP
      };
    }
  }

  function aPU(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt;
  }

  function aPW() {}
  aPw['prototype'] = {
    'constructor': aPw,
    'setOptions': function(bf) {
      return this['options'] = bf, this;
    },
    'load': function(bf, bg, bh, bi) {
      void 0x0 === bf && (bf = ''), void 0x0 !== this['path'] && (bf = this['path'] + bf), bf = this['manager']['resolveURL'](bf);
      var bF = this,
        bG = aCa['get'](bf);
      if (void 0x0 !== bG) return bF['manager']['itemStart'](bf), setTimeout(function() {
        bg && bg(bG), bF['manager']['itemEnd'](bf);
      }, 0x0), bG;
      fetch(bf)['then'](function(bf) {
        return bf['blob']();
      })['then'](function(bf) {
        return void 0x0 === bF['options'] ? createImageBitmap(bf) : createImageBitmap(bf, bF['options']);
      })['then'](function(bh) {
        aCa['add'](bf, bh), bg && bg(bh), bF['manager']['itemEnd'](bf);
      })['catch'](function(bg) {
        bi && bi(bg), bF['manager']['itemError'](bf), bF['manager']['itemEnd'](bf);
      }), bF['manager']['itemStart'](bf);
    },
    'setCrossOrigin': function() {
      return this;
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  }, Object['assign'](aPy['prototype'], {
    'moveTo': function(bf, bg) {
      this['currentPath'] = new aJl(), this['subPaths']['push'](this['currentPath']), this['currentPath']['moveTo'](bf, bg);
    },
    'lineTo': function(bf, bg) {
      this['currentPath']['lineTo'](bf, bg);
    },
    'quadraticCurveTo': function(bf, bg, bh, bi) {
      this['currentPath']['quadraticCurveTo'](bf, bg, bh, bi);
    },
    'bezierCurveTo': function(bf, bg, bh, bi, bF, bG) {
      this['currentPath']['bezierCurveTo'](bf, bg, bh, bi, bF, bG);
    },
    'splineThru': function(bf) {
      this['currentPath']['splineThru'](bf);
    },
    'toShapes': function(bf, bg) {
      function bh(bf) {
        for (var bg = [], bh = 0x0, bi = bf['length']; bh < bi; bh++) {
          var bF = bf[bh],
            bG = new aJn();
          bG['curves'] = bF['curves'], bg['push'](bG);
        }
        return bg;
      }

      function bi(bf, bg) {
        for (var bh = bg['length'], bi = !0x1, bF = bh - 0x1, bG = 0x0; bG < bh; bF = bG++) {
          var bH = bg[bF],
            bI = bg[bG],
            bJ = bI['x'] - bH['x'],
            bK = bI['y'] - bH['y'];
          if (Math['abs'](bK) > Number['EPSILON']) {
            if (bK < 0x0 && (bH = bg[bG], bJ = -bJ, bI = bg[bF], bK = -bK), bf['y'] < bH['y'] || bf['y'] > bI['y']) continue;
            if (bf['y'] === bH['y']) {
              if (bf['x'] === bH['x']) return !0x0;
            } else {
              var bL = bK * (bf['x'] - bH['x']) - bJ * (bf['y'] - bH['y']);
              if (0x0 === bL) return !0x0;
              if (bL < 0x0) continue;
              bi = !bi;
            }
          } else {
            if (bf['y'] !== bH['y']) continue;
            if (bI['x'] <= bf['x'] && bf['x'] <= bH['x'] || bH['x'] <= bf['x'] && bf['x'] <= bI['x']) return !0x0;
          }
        }
        return bi;
      }
      var bF = apU['isClockWise'],
        bG = this['subPaths'];
      if (0x0 === bG['length']) return [];
      if (!0x0 === bg) return bh(bG);
      var bH, bI, bJ, bK = [];
      if (0x1 === bG['length']) return bI = bG[0x0], (bJ = new aJn())['curves'] = bI['curves'], bK['push'](bJ), bK;
      var bL = !bF(bG[0x0]['getPoints']());
      bL = bf ? !bL : bL;
      var bM, bN, bO = [],
        bP = [],
        bQ = [],
        bR = 0x0;
      bP[bR] = void 0x0, bQ[bR] = [];
      for (var bS = 0x0, bT = bG['length']; bS < bT; bS++) bH = bF(bM = (bI = bG[bS])['getPoints']()), (bH = bf ? !bH : bH) ? (!bL && bP[bR] && bR++, bP[bR] = {
        's': new aJn(),
        'p': bM
      }, bP[bR]['s']['curves'] = bI['curves'], bL && bR++, bQ[bR] = []) : bQ[bR]['push']({
        'h': bI,
        'p': bM[0x0]
      });
      if (!bP[0x0]) return bh(bG);
      if (bP['length'] > 0x1) {
        for (var bU = !0x1, bV = [], bW = 0x0, bX = bP['length']; bW < bX; bW++) bO[bW] = [];
        for (bW = 0x0, bX = bP['length']; bW < bX; bW++)
          for (var bY = bQ[bW], bZ = 0x0; bZ < bY['length']; bZ++) {
            for (var c0 = bY[bZ], c1 = !0x0, c2 = 0x0; c2 < bP['length']; c2++) bi(c0['p'], bP[c2]['p']) && (bW !== c2 && bV['push']({
              'froms': bW,
              'tos': c2,
              'hole': bZ
            }), c1 ? (c1 = !0x1, bO[c2]['push'](c0)) : bU = !0x0);
            c1 && bO[bW]['push'](c0);
          }
        bV['length'] > 0x0 && (bU || (bQ = bO));
      }
      bS = 0x0;
      for (var c3 = bP['length']; bS < c3; bS++) {
        bJ = bP[bS]['s'], bK['push'](bJ);
        for (var c4 = 0x0, c5 = (bN = bQ[bS])['length']; c4 < c5; c4++) bJ['holes']['push'](bN[c4]['h']);
      }
      return bK;
    }
  }), Object['assign'](aPz['prototype'], {
    'isFont': !0x0,
    'generateShapes': function(bf, bg) {
      void 0x0 === bg && (bg = 0x64);
      for (var bh = [], bi = function(bf, bg, bh) {
          for (var bi = Array['from'] ? Array['from'](bf) : String(bf)['split'](''), bF = bg / bh['resolution'], bG = (bh['boundingBox']['yMax'] - bh['boundingBox']['yMin'] + bh['underlineThickness']) * bF, bH = [], bI = 0x0, bJ = 0x0, bK = 0x0; bK < bi['length']; bK++) {
            var bL = bi[bK];
            if ('\x0a' === bL) bI = 0x0, bJ -= bG;
            else {
              var bM = aPB(bL, bF, bI, bJ, bh);
              bI += bM['offsetX'], bH['push'](bM['path']);
            }
          }
          return bH;
        }(bf, bg, this['data']), bF = 0x0, bG = bi['length']; bF < bG; bF++) Array['prototype']['push']['apply'](bh, bi[bF]['toShapes']());
      return bh;
    }
  }), Object['assign'](aPU['prototype'], {
    'load': function(bf, bg, bh, bi) {
      var bF = this,
        bG = new aCv(this['manager']);
      bG['setPath'](this['path']), bG['load'](bf, function(bf) {
        var bh;
        try {
          bh = JSON['parse'](bf);
        } catch (aRA) {
          console['warn']('THREE.FontLoader:\x20typeface.js\x20support\x20is\x20being\x20deprecated.\x20Use\x20typeface.json\x20instead.'), bh = JSON['parse'](bf['substring'](0x41, bf['length'] - 0x2));
        }
        var bi = bF['parse'](bh);
        bg && bg(bi);
      }, bh, bi);
    },
    'parse': function(bf) {
      return new aPz(bf);
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  }), aPW['Handlers'] = {
    'handlers': [],
    'add': function(bf, bg) {
      this['handlers']['push'](bf, bg);
    },
    'get': function(bf) {
      for (var bg = this['handlers'], bh = 0x0, bi = bg['length']; bh < bi; bh += 0x2) {
        var bF = bg[bh],
          bG = bg[bh + 0x1];
        if (bF['test'](bf)) return bG;
      }
      return null;
    }
  }, Object['assign'](aPW['prototype'], {
    'crossOrigin': 'anonymous',
    'onLoadStart': function() {},
    'onLoadProgress': function() {},
    'onLoadComplete': function() {},
    'initMaterials': function(bf, bg, bh) {
      for (var bi = [], bF = 0x0; bF < bf['length']; ++bF) bi[bF] = this['createMaterial'](bf[bF], bg, bh);
      return bi;
    },
    'createMaterial': (aPo = {
      'NoBlending': c1,
      'NormalBlending': c2,
      'AdditiveBlending': c3,
      'SubtractiveBlending': c4,
      'MultiplyBlending': c5,
      'CustomBlending': c6
    }, aPp = new w7(), aPq = new aCH(), aPr = new aK6(), function(bf, bg, bh) {
      var bi = {};

      function bF(bf, bF, bG, bH, bI) {
        var bJ, bK = bg + bf,
          bL = aPW['Handlers']['get'](bK);
        null !== bL ? bJ = bL['load'](bK) : (aPq['setCrossOrigin'](bh), bJ = aPq['load'](bK)), void 0x0 !== bF && (bJ['repeat']['fromArray'](bF), 0x1 !== bF[0x0] && (bJ['wrapS'] = cM), 0x1 !== bF[0x1] && (bJ['wrapT'] = cM)), void 0x0 !== bG && bJ['offset']['fromArray'](bG), void 0x0 !== bH && ('repeat' === bH[0x0] && (bJ['wrapS'] = cM), 'mirror' === bH[0x0] && (bJ['wrapS'] = cO), 'repeat' === bH[0x1] && (bJ['wrapT'] = cM), 'mirror' === bH[0x1] && (bJ['wrapT'] = cO)), void 0x0 !== bI && (bJ['anisotropy'] = bI);
        var bM = e2['generateUUID']();
        return bi[bM] = bJ, bM;
      }
      var bG = {
        'uuid': e2['generateUUID'](),
        'type': 'MeshLambertMaterial'
      };
      for (var bH in bf) {
        var bI = bf[bH];
        switch (bH) {
          case 'DbgColor':
          case 'DbgIndex':
          case 'opticalDensity':
          case 'illumination':
            break;
          case 'DbgName':
            bG['name'] = bI;
            break;
          case 'blending':
            bG['blending'] = aPo[bI];
            break;
          case 'colorAmbient':
          case 'mapAmbient':
            console['warn']('THREE.Loader.createMaterial:', bH, 'is\x20no\x20longer\x20supported.');
            break;
          case 'colorDiffuse':
            bG['color'] = aPp['fromArray'](bI)['getHex']();
            break;
          case 'colorSpecular':
            bG['specular'] = aPp['fromArray'](bI)['getHex']();
            break;
          case 'colorEmissive':
            bG['emissive'] = aPp['fromArray'](bI)['getHex']();
            break;
          case 'specularCoef':
            bG['shininess'] = bI;
            break;
          case 'shading':
            'basic' === bI['toLowerCase']() && (bG['type'] = 'MeshBasicMaterial'), 'phong' === bI['toLowerCase']() && (bG['type'] = 'MeshPhongMaterial'), 'standard' === bI['toLowerCase']() && (bG['type'] = 'MeshStandardMaterial');
            break;
          case 'mapDiffuse':
            bG['map'] = bF(bI, bf['mapDiffuseRepeat'], bf['mapDiffuseOffset'], bf['mapDiffuseWrap'], bf['mapDiffuseAnisotropy']);
            break;
          case 'mapDiffuseRepeat':
          case 'mapDiffuseOffset':
          case 'mapDiffuseWrap':
          case 'mapDiffuseAnisotropy':
            break;
          case 'mapEmissive':
            bG['emissiveMap'] = bF(bI, bf['mapEmissiveRepeat'], bf['mapEmissiveOffset'], bf['mapEmissiveWrap'], bf['mapEmissiveAnisotropy']);
            break;
          case 'mapEmissiveRepeat':
          case 'mapEmissiveOffset':
          case 'mapEmissiveWrap':
          case 'mapEmissiveAnisotropy':
            break;
          case 'mapLight':
            bG['lightMap'] = bF(bI, bf['mapLightRepeat'], bf['mapLightOffset'], bf['mapLightWrap'], bf['mapLightAnisotropy']);
            break;
          case 'mapLightRepeat':
          case 'mapLightOffset':
          case 'mapLightWrap':
          case 'mapLightAnisotropy':
            break;
          case 'mapAO':
            bG['aoMap'] = bF(bI, bf['mapAORepeat'], bf['mapAOOffset'], bf['mapAOWrap'], bf['mapAOAnisotropy']);
            break;
          case 'mapAORepeat':
          case 'mapAOOffset':
          case 'mapAOWrap':
          case 'mapAOAnisotropy':
            break;
          case 'mapBump':
            bG['bumpMap'] = bF(bI, bf['mapBumpRepeat'], bf['mapBumpOffset'], bf['mapBumpWrap'], bf['mapBumpAnisotropy']);
            break;
          case 'mapBumpScale':
            bG['bumpScale'] = bI;
            break;
          case 'mapBumpRepeat':
          case 'mapBumpOffset':
          case 'mapBumpWrap':
          case 'mapBumpAnisotropy':
            break;
          case 'mapNormal':
            bG['normalMap'] = bF(bI, bf['mapNormalRepeat'], bf['mapNormalOffset'], bf['mapNormalWrap'], bf['mapNormalAnisotropy']);
            break;
          case 'mapNormalFactor':
            bG['normalScale'] = bI;
            break;
          case 'mapNormalRepeat':
          case 'mapNormalOffset':
          case 'mapNormalWrap':
          case 'mapNormalAnisotropy':
            break;
          case 'mapSpecular':
            bG['specularMap'] = bF(bI, bf['mapSpecularRepeat'], bf['mapSpecularOffset'], bf['mapSpecularWrap'], bf['mapSpecularAnisotropy']);
            break;
          case 'mapSpecularRepeat':
          case 'mapSpecularOffset':
          case 'mapSpecularWrap':
          case 'mapSpecularAnisotropy':
            break;
          case 'mapMetalness':
            bG['metalnessMap'] = bF(bI, bf['mapMetalnessRepeat'], bf['mapMetalnessOffset'], bf['mapMetalnessWrap'], bf['mapMetalnessAnisotropy']);
            break;
          case 'mapMetalnessRepeat':
          case 'mapMetalnessOffset':
          case 'mapMetalnessWrap':
          case 'mapMetalnessAnisotropy':
            break;
          case 'mapRoughness':
            bG['roughnessMap'] = bF(bI, bf['mapRoughnessRepeat'], bf['mapRoughnessOffset'], bf['mapRoughnessWrap'], bf['mapRoughnessAnisotropy']);
            break;
          case 'mapRoughnessRepeat':
          case 'mapRoughnessOffset':
          case 'mapRoughnessWrap':
          case 'mapRoughnessAnisotropy':
            break;
          case 'mapAlpha':
            bG['alphaMap'] = bF(bI, bf['mapAlphaRepeat'], bf['mapAlphaOffset'], bf['mapAlphaWrap'], bf['mapAlphaAnisotropy']);
            break;
          case 'mapAlphaRepeat':
          case 'mapAlphaOffset':
          case 'mapAlphaWrap':
          case 'mapAlphaAnisotropy':
            break;
          case 'flipSided':
            bG['side'] = bU;
            break;
          case 'doubleSided':
            bG['side'] = bV;
            break;
          case 'transparency':
            console['warn']('THREE.Loader.createMaterial:\x20transparency\x20has\x20been\x20renamed\x20to\x20opacity'), bG['opacity'] = bI;
            break;
          case 'depthTest':
          case 'depthWrite':
          case 'colorWrite':
          case 'opacity':
          case 'reflectivity':
          case 'transparent':
          case 'visible':
          case 'wireframe':
            bG[bH] = bI;
            break;
          case 'vertexColors':
            !0x0 === bI && (bG['vertexColors'] = c0), 'face' === bI && (bG['vertexColors'] = bZ);
            break;
          default:
            console['error']('THREE.Loader.createMaterial:\x20Unsupported', bH, bI);
        }
      }
      return 'MeshBasicMaterial' === bG['type'] && delete bG['emissive'], 'MeshPhongMaterial' !== bG['type'] && delete bG['specular'], bG['opacity'] < 0x1 && (bG['transparent'] = !0x0), aPr['setTextures'](bi), aPr['parse'](bG);
    })
  });
  var aS8 = {
    'getContext': function() {
      return void 0x0 === aPs && (aPs = new(window['AudioContext'] || window['webkitAudioContext'])()), aPs;
    },
    'setContext': function(bf) {
      aPs = bf;
    }
  };

  function aSa(bf) {
    this['manager'] = void 0x0 !== bf ? bf : aCt;
  }

  function aSc() {
    this['coefficients'] = [];
    for (var bf = 0x0; bf < 0x9; bf++) this['coefficients']['push'](new eK());
  }

  function aSe(bf, bg) {
    aJp['call'](this, void 0x0, bg), this['sh'] = void 0x0 !== bf ? bf : new aSc();
  }

  function aSh(bf, bg, bh) {
    aSe['call'](this, void 0x0, bh);
    var bi = new w7()['set'](bf),
      bF = new w7()['set'](bg),
      bG = new eK(bi['r'], bi['g'], bi['b']),
      bH = new eK(bF['r'], bF['g'], bF['b']),
      bI = Math['sqrt'](Math['PI']),
      bJ = bI * Math['sqrt'](0.75);
    this['sh']['coefficients'][0x0]['copy'](bG)['add'](bH)['multiplyScalar'](bI), this['sh']['coefficients'][0x1]['copy'](bG)['sub'](bH)['multiplyScalar'](bJ);
  }

  function aSr(bf, bg) {
    aSe['call'](this, void 0x0, bg);
    var bh = new w7()['set'](bf);
    this['sh']['coefficients'][0x0]['set'](bh['r'], bh['g'], bh['b'])['multiplyScalar'](0x2 * Math['sqrt'](Math['PI']));
  }

  function aSv() {
    this['type'] = 'StereoCamera', this['aspect'] = 0x1, this['eyeSep'] = 0.064, this['cameraL'] = new a68(), this['cameraL']['layers']['enable'](0x1), this['cameraL']['matrixAutoUpdate'] = !0x1, this['cameraR'] = new a68(), this['cameraR']['layers']['enable'](0x2), this['cameraR']['matrixAutoUpdate'] = !0x1;
  }
  Object['assign'](aSa['prototype'], {
    'load': function(bf, bg, bh, bi) {
      var bF = new aCv(this['manager']);
      bF['setResponseType']('arraybuffer'), bF['setPath'](this['path']), bF['load'](bf, function(bf) {
        var bh = bf['slice'](0x0);
        aS8['getContext']()['decodeAudioData'](bh, function(bf) {
          bg(bf);
        });
      }, bh, bi);
    },
    'setPath': function(bf) {
      return this['path'] = bf, this;
    }
  }), Object['assign'](aSc['prototype'], {
    'isSphericalHarmonics3': !0x0,
    'set': function(bf) {
      for (var bg = 0x0; bg < 0x9; bg++) this['coefficients'][bg]['copy'](bf[bg]);
      return this;
    },
    'zero': function() {
      for (var bf = 0x0; bf < 0x9; bf++) this['coefficients'][bf]['set'](0x0, 0x0, 0x0);
      return this;
    },
    'getAt': function(bf, bg) {
      var bh = bf['x'],
        bi = bf['y'],
        bF = bf['z'],
        bG = this['coefficients'];
      return bg = 0.282095 * bG[0x0], bg += 0.488603 * bG[0x1] * bi, bg += 0.488603 * bG[0x2] * bF, bg += 0.488603 * bG[0x3] * bh, bg += 1.092548 * bG[0x4] * (bh * bi), bg += 1.092548 * bG[0x5] * (bi * bF), bg += 0.315392 * bG[0x6] * (0x3 * bF * bF - 0x1), bg += 1.092548 * bG[0x7] * (bh * bF), bg += 0.546274 * bG[0x8] * (bh * bh - bi * bi);
    },
    'getIrradianceAt': function(bf, bg) {
      var bh = bf['x'],
        bi = bf['y'],
        bF = bf['z'],
        bG = this['coefficients'];
      return bg = 0.886227 * bG[0x0], bg += 0x2 * bG[0x1] * 0.511664 * bi, bg += 0x2 * bG[0x2] * 0.511664 * bF, bg += 0x2 * bG[0x3] * 0.511664 * bh, bg += 0x2 * bG[0x4] * 0.429043 * bh * bi, bg += 0x2 * bG[0x5] * 0.429043 * bi * bF, bg += bG[0x6] * (0.743125 * bF * bF - 0.247708), bg += 0x2 * bG[0x7] * 0.429043 * bh * bF, bg += 0.429043 * bG[0x8] * (bh * bh - bi * bi);
    },
    'add': function(bf) {
      for (var bg = 0x0; bg < 0x9; bg++) this['coefficients'][bg]['add'](bf['coefficients'][bg]);
      return this;
    },
    'scale': function(bf) {
      for (var bg = 0x0; bg < 0x9; bg++) this['coefficients'][bg]['multiplyScalar'](bf);
      return this;
    },
    'lerp': function(bf, bg) {
      for (var bh = 0x0; bh < 0x9; bh++) this['coefficients'][bh]['lerp'](bf['coefficients'][bh], bg);
      return this;
    },
    'equals': function(bf) {
      for (var bg = 0x0; bg < 0x9; bg++)
        if (!this['coefficients'][bg]['equals'](bf['coefficients'][bg])) return !0x1;
      return !0x0;
    },
    'copy': function(bf) {
      return this['set'](bf['coefficients']);
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'fromArray': function(bf) {
      for (var bg = this['coefficients'], bh = 0x0; bh < 0x9; bh++) bg[bh]['fromArray'](bf, 0x3 * bh);
      return this;
    },
    'toArray': function() {
      for (var bf = [], bg = this['coefficients'], bh = 0x0; bh < 0x9; bh++) bg[bh]['toArray'](bf, 0x3 * bh);
      return bf;
    }
  }), Object['assign'](aSc, {
    'getBasisAt': function(bf, bg) {
      var bh = bf['x'],
        bi = bf['y'],
        bF = bf['z'];
      bg[0x0] = 0.282095, bg[0x1] = 0.488603 * bi, bg[0x2] = 0.488603 * bF, bg[0x3] = 0.488603 * bh, bg[0x4] = 1.092548 * bh * bi, bg[0x5] = 1.092548 * bi * bF, bg[0x6] = 0.315392 * (0x3 * bF * bF - 0x1), bg[0x7] = 1.092548 * bh * bF, bg[0x8] = 0.546274 * (bh * bh - bi * bi);
    }
  }), aSe['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
    'constructor': aSe,
    'isLightProbe': !0x0,
    'copy': function(bf) {
      return aJp['prototype']['copy']['call'](this, bf), this['sh']['copy'](bf['sh']), this['intensity'] = bf['intensity'], this;
    },
    'toJSON': function(bf) {
      return aJp['prototype']['toJSON']['call'](this, bf);
    }
  }), aSh['prototype'] = Object['assign'](Object['create'](aSe['prototype']), {
    'constructor': aSh,
    'isHemisphereLightProbe': !0x0,
    'copy': function(bf) {
      return aSe['prototype']['copy']['call'](this, bf), this;
    },
    'toJSON': function(bf) {
      return aSe['prototype']['toJSON']['call'](this, bf);
    }
  }), aSr['prototype'] = Object['assign'](Object['create'](aSe['prototype']), {
    'constructor': aSr,
    'isAmbientLightProbe': !0x0,
    'copy': function(bf) {
      return aSe['prototype']['copy']['call'](this, bf), this;
    },
    'toJSON': function(bf) {
      return aSe['prototype']['toJSON']['call'](this, bf);
    }
  }), Object['assign'](aSv['prototype'], {
    'update': function() {
      var bf, bg, bh, bi, bF, bG, bH, bI, bJ = new mR(),
        bK = new mR();
      return function(bL) {
        if (bf !== this || bg !== bL['focus'] || bh !== bL['fov'] || bi !== bL['aspect'] * this['aspect'] || bF !== bL['near'] || bG !== bL['far'] || bH !== bL['zoom'] || bI !== this['eyeSep']) {
          bf = this, bg = bL['focus'], bh = bL['fov'], bi = bL['aspect'] * this['aspect'], bF = bL['near'], bG = bL['far'], bH = bL['zoom'];
          var bM, bN, bO = bL['projectionMatrix']['clone'](),
            bP = (bI = this['eyeSep'] / 0x2) * bF / bg,
            bQ = bF * Math['tan'](e2['DEG2RAD'] * bh * 0.5) / bH;
          bK['elements'][0xc] = -bI, bJ['elements'][0xc] = bI, bM = -bQ * bi + bP, bN = bQ * bi + bP, bO['elements'][0x0] = 0x2 * bF / (bN - bM), bO['elements'][0x8] = (bN + bM) / (bN - bM), this['cameraL']['projectionMatrix']['copy'](bO), bM = -bQ * bi - bP, bN = bQ * bi - bP, bO['elements'][0x0] = 0x2 * bF / (bN - bM), bO['elements'][0x8] = (bN + bM) / (bN - bM), this['cameraR']['projectionMatrix']['copy'](bO);
        }
        this['cameraL']['matrixWorld']['copy'](bL['matrixWorld'])['multiply'](bK), this['cameraR']['matrixWorld']['copy'](bL['matrixWorld'])['multiply'](bJ);
      };
    }()
  });
  var aTB = 0x5a,
    aTC = 0x1;

  function aTD(bf, bg, bh, bi) {
    yT['call'](this), this['type'] = 'CubeCamera';
    var bF = new a68(aTB, aTC, bf, bg);
    bF['up']['set'](0x0, -0x1, 0x0), bF['lookAt'](new eK(0x1, 0x0, 0x0)), this['add'](bF);
    var bG = new a68(aTB, aTC, bf, bg);
    bG['up']['set'](0x0, -0x1, 0x0), bG['lookAt'](new eK(-0x1, 0x0, 0x0)), this['add'](bG);
    var bH = new a68(aTB, aTC, bf, bg);
    bH['up']['set'](0x0, 0x0, 0x1), bH['lookAt'](new eK(0x0, 0x1, 0x0)), this['add'](bH);
    var bI = new a68(aTB, aTC, bf, bg);
    bI['up']['set'](0x0, 0x0, -0x1), bI['lookAt'](new eK(0x0, -0x1, 0x0)), this['add'](bI);
    var bJ = new a68(aTB, aTC, bf, bg);
    bJ['up']['set'](0x0, -0x1, 0x0), bJ['lookAt'](new eK(0x0, 0x0, 0x1)), this['add'](bJ);
    var bK = new a68(aTB, aTC, bf, bg);
    bK['up']['set'](0x0, -0x1, 0x0), bK['lookAt'](new eK(0x0, 0x0, -0x1)), this['add'](bK), bi = bi || {
      'format': d8,
      'magFilter': cS,
      'minFilter': cS
    }, this['renderTarget'] = new mk(bh, bh, bi), this['renderTarget']['texture']['name'] = 'CubeCamera', this['update'] = function(bf, bg) {
      null === this['parent'] && this['updateMatrixWorld']();
      var bh = bf['getRenderTarget'](),
        bi = this['renderTarget'],
        bL = bi['texture']['generateMipmaps'];
      bi['texture']['generateMipmaps'] = !0x1, bf['setRenderTarget'](bi, 0x0), bf['render'](bg, bF), bf['setRenderTarget'](bi, 0x1), bf['render'](bg, bG), bf['setRenderTarget'](bi, 0x2), bf['render'](bg, bH), bf['setRenderTarget'](bi, 0x3), bf['render'](bg, bI), bf['setRenderTarget'](bi, 0x4), bf['render'](bg, bJ), bi['texture']['generateMipmaps'] = bL, bf['setRenderTarget'](bi, 0x5), bf['render'](bg, bK), bf['setRenderTarget'](bh);
    }, this['clear'] = function(bf, bg, bh, bi) {
      for (var bF = bf['getRenderTarget'](), bG = this['renderTarget'], bH = 0x0; bH < 0x6; bH++) bf['setRenderTarget'](bG, bH), bf['clear'](bg, bh, bi);
      bf['setRenderTarget'](bF);
    };
  }

  function aU0(bf) {
    this['autoStart'] = void 0x0 === bf || bf, this['startTime'] = 0x0, this['oldTime'] = 0x0, this['elapsedTime'] = 0x0, this['running'] = !0x1;
  }

  function aU2() {
    yT['call'](this), this['type'] = 'AudioListener', this['context'] = aS8['getContext'](), this['gain'] = this['context']['createGain'](), this['gain']['connect'](this['context']['destination']), this['filter'] = null, this['timeDelta'] = 0x0;
  }

  function aU3(bf) {
    yT['call'](this), this['type'] = 'Audio', this['listener'] = bf, this['context'] = bf['context'], this['gain'] = this['context']['createGain'](), this['gain']['connect'](bf['getInput']()), this['autoplay'] = !0x1, this['buffer'] = null, this['detune'] = 0x0, this['loop'] = !0x1, this['startTime'] = 0x0, this['offset'] = 0x0, this['playbackRate'] = 0x1, this['isPlaying'] = !0x1, this['hasPlaybackControl'] = !0x0, this['sourceType'] = 'empty', this['filters'] = [];
  }

  function aU5(bf) {
    aU3['call'](this, bf), this['panner'] = this['context']['createPanner'](), this['panner']['panningModel'] = 'HRTF', this['panner']['connect'](this['gain']);
  }

  function aU7(bf, bg) {
    this['analyser'] = bf['context']['createAnalyser'](), this['analyser']['fftSize'] = void 0x0 !== bg ? bg : 0x800, this['data'] = new Uint8Array(this['analyser']['frequencyBinCount']), bf['getOutput']()['connect'](this['analyser']);
  }

  function aUa(bf, bg, bh) {
    this['binding'] = bf, this['valueSize'] = bh;
    var bi, bF = Float64Array;
    switch (bg) {
      case 'quaternion':
        bi = this['_slerp'];
        break;
      case 'string':
      case 'bool':
        bF = Array, bi = this['_select'];
        break;
      default:
        bi = this['_lerp'];
    }
    this['buffer'] = new bF(0x4 * bh), this['_mixBufferRegion'] = bi, this['cumulativeWeight'] = 0x0, this['useCount'] = 0x0, this['referenceCount'] = 0x0;
  }
  aTD['prototype'] = Object['create'](yT['prototype']), aTD['prototype']['constructor'] = aTD, Object['assign'](aU0['prototype'], {
    'start': function() {
      this['startTime'] = ('undefined' == typeof performance ? Date : performance)['now'](), this['oldTime'] = this['startTime'], this['elapsedTime'] = 0x0, this['running'] = !0x0;
    },
    'stop': function() {
      this['getElapsedTime'](), this['running'] = !0x1, this['autoStart'] = !0x1;
    },
    'getElapsedTime': function() {
      return this['getDelta'](), this['elapsedTime'];
    },
    'getDelta': function() {
      var bf = 0x0;
      if (this['autoStart'] && !this['running']) return this['start'](), 0x0;
      if (this['running']) {
        var bg = ('undefined' == typeof performance ? Date : performance)['now']();
        bf = (bg - this['oldTime']) / 0x3e8, this['oldTime'] = bg, this['elapsedTime'] += bf;
      }
      return bf;
    }
  }), aU2['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': aU2,
    'getInput': function() {
      return this['gain'];
    },
    'removeFilter': function() {
      return null !== this['filter'] && (this['gain']['disconnect'](this['filter']), this['filter']['disconnect'](this['context']['destination']), this['gain']['connect'](this['context']['destination']), this['filter'] = null), this;
    },
    'getFilter': function() {
      return this['filter'];
    },
    'setFilter': function(bf) {
      return null !== this['filter'] ? (this['gain']['disconnect'](this['filter']), this['filter']['disconnect'](this['context']['destination'])) : this['gain']['disconnect'](this['context']['destination']), this['filter'] = bf, this['gain']['connect'](this['filter']), this['filter']['connect'](this['context']['destination']), this;
    },
    'getMasterVolume': function() {
      return this['gain']['gain']['value'];
    },
    'setMasterVolume': function(bf) {
      return this['gain']['gain']['setTargetAtTime'](bf, this['context']['currentTime'], 0.01), this;
    },
    'updateMatrixWorld': function() {
      var bf = new eK(),
        bg = new eF(),
        bh = new eK(),
        bi = new eK(),
        bF = new aU0();
      return function(bG) {
        yT['prototype']['updateMatrixWorld']['call'](this, bG);
        var bH = this['context']['listener'],
          bI = this['up'];
        if (this['timeDelta'] = bF['getDelta'](), this['matrixWorld']['decompose'](bf, bg, bh), bi['set'](0x0, 0x0, -0x1)['applyQuaternion'](bg), bH['positionX']) {
          var bJ = this['context']['currentTime'] + this['timeDelta'];
          bH['positionX']['linearRampToValueAtTime'](bf['x'], bJ), bH['positionY']['linearRampToValueAtTime'](bf['y'], bJ), bH['positionZ']['linearRampToValueAtTime'](bf['z'], bJ), bH['forwardX']['linearRampToValueAtTime'](bi['x'], bJ), bH['forwardY']['linearRampToValueAtTime'](bi['y'], bJ), bH['forwardZ']['linearRampToValueAtTime'](bi['z'], bJ), bH['upX']['linearRampToValueAtTime'](bI['x'], bJ), bH['upY']['linearRampToValueAtTime'](bI['y'], bJ), bH['upZ']['linearRampToValueAtTime'](bI['z'], bJ);
        } else bH['setPosition'](bf['x'], bf['y'], bf['z']), bH['setOrientation'](bi['x'], bi['y'], bi['z'], bI['x'], bI['y'], bI['z']);
      };
    }()
  }), aU3['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
    'constructor': aU3,
    'getOutput': function() {
      return this['gain'];
    },
    'setNodeSource': function(bf) {
      return this['hasPlaybackControl'] = !0x1, this['sourceType'] = 'audioNode', this['source'] = bf, this['connect'](), this;
    },
    'setMediaElementSource': function(bf) {
      return this['hasPlaybackControl'] = !0x1, this['sourceType'] = 'mediaNode', this['source'] = this['context']['createMediaElementSource'](bf), this['connect'](), this;
    },
    'setBuffer': function(bf) {
      return this['buffer'] = bf, this['sourceType'] = 'buffer', this['autoplay'] && this['play'](), this;
    },
    'play': function() {
      if (!0x0 !== this['isPlaying']) {
        if (!0x1 !== this['hasPlaybackControl']) {
          var bf = this['context']['createBufferSource']();
          return bf['buffer'] = this['buffer'], bf['loop'] = this['loop'], bf['onended'] = this['onEnded']['bind'](this), this['startTime'] = this['context']['currentTime'], bf['start'](this['startTime'], this['offset']), this['isPlaying'] = !0x0, this['source'] = bf, this['setDetune'](this['detune']), this['setPlaybackRate'](this['playbackRate']), this['connect']();
        }
        console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
      } else console['warn']('THREE.Audio:\x20Audio\x20is\x20already\x20playing.');
    },
    'pause': function() {
      if (!0x1 !== this['hasPlaybackControl']) return !0x0 === this['isPlaying'] && (this['source']['stop'](), this['source']['onended'] = null, this['offset'] += (this['context']['currentTime'] - this['startTime']) * this['playbackRate'], this['isPlaying'] = !0x1), this;
      console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
    },
    'stop': function() {
      if (!0x1 !== this['hasPlaybackControl']) return this['source']['stop'](), this['source']['onended'] = null, this['offset'] = 0x0, this['isPlaying'] = !0x1, this;
      console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
    },
    'connect': function() {
      if (this['filters']['length'] > 0x0) {
        this['source']['connect'](this['filters'][0x0]);
        for (var bf = 0x1, bg = this['filters']['length']; bf < bg; bf++) this['filters'][bf - 0x1]['connect'](this['filters'][bf]);
        this['filters'][this['filters']['length'] - 0x1]['connect'](this['getOutput']());
      } else this['source']['connect'](this['getOutput']());
      return this;
    },
    'disconnect': function() {
      if (this['filters']['length'] > 0x0) {
        this['source']['disconnect'](this['filters'][0x0]);
        for (var bf = 0x1, bg = this['filters']['length']; bf < bg; bf++) this['filters'][bf - 0x1]['disconnect'](this['filters'][bf]);
        this['filters'][this['filters']['length'] - 0x1]['disconnect'](this['getOutput']());
      } else this['source']['disconnect'](this['getOutput']());
      return this;
    },
    'getFilters': function() {
      return this['filters'];
    },
    'setFilters': function(bf) {
      return bf || (bf = []), !0x0 === this['isPlaying'] ? (this['disconnect'](), this['filters'] = bf, this['connect']()) : this['filters'] = bf, this;
    },
    'setDetune': function(bf) {
      if (this['detune'] = bf, void 0x0 !== this['source']['detune']) return !0x0 === this['isPlaying'] && this['source']['detune']['setTargetAtTime'](this['detune'], this['context']['currentTime'], 0.01), this;
    },
    'getDetune': function() {
      return this['detune'];
    },
    'getFilter': function() {
      return this['getFilters']()[0x0];
    },
    'setFilter': function(bf) {
      return this['setFilters'](bf ? [bf] : []);
    },
    'setPlaybackRate': function(bf) {
      if (!0x1 !== this['hasPlaybackControl']) return this['playbackRate'] = bf, !0x0 === this['isPlaying'] && this['source']['playbackRate']['setTargetAtTime'](this['playbackRate'], this['context']['currentTime'], 0.01), this;
      console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
    },
    'getPlaybackRate': function() {
      return this['playbackRate'];
    },
    'onEnded': function() {
      this['isPlaying'] = !0x1;
    },
    'getLoop': function() {
      return !0x1 === this['hasPlaybackControl'] ? (console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.'), !0x1) : this['loop'];
    },
    'setLoop': function(bf) {
      if (!0x1 !== this['hasPlaybackControl']) return this['loop'] = bf, !0x0 === this['isPlaying'] && (this['source']['loop'] = this['loop']), this;
      console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
    },
    'getVolume': function() {
      return this['gain']['gain']['value'];
    },
    'setVolume': function(bf) {
      return this['gain']['gain']['setTargetAtTime'](bf, this['context']['currentTime'], 0.01), this;
    }
  }), aU5['prototype'] = Object['assign'](Object['create'](aU3['prototype']), {
    'constructor': aU5,
    'getOutput': function() {
      return this['panner'];
    },
    'getRefDistance': function() {
      return this['panner']['refDistance'];
    },
    'setRefDistance': function(bf) {
      return this['panner']['refDistance'] = bf, this;
    },
    'getRolloffFactor': function() {
      return this['panner']['rolloffFactor'];
    },
    'setRolloffFactor': function(bf) {
      return this['panner']['rolloffFactor'] = bf, this;
    },
    'getDistanceModel': function() {
      return this['panner']['distanceModel'];
    },
    'setDistanceModel': function(bf) {
      return this['panner']['distanceModel'] = bf, this;
    },
    'getMaxDistance': function() {
      return this['panner']['maxDistance'];
    },
    'setMaxDistance': function(bf) {
      return this['panner']['maxDistance'] = bf, this;
    },
    'setDirectionalCone': function(bf, bg, bh) {
      return this['panner']['coneInnerAngle'] = bf, this['panner']['coneOuterAngle'] = bg, this['panner']['coneOuterGain'] = bh, this;
    },
    'updateMatrixWorld': function() {
      var bf = new eK(),
        bg = new eF(),
        bh = new eK(),
        bi = new eK();
      return function(bF) {
        if (yT['prototype']['updateMatrixWorld']['call'](this, bF), !0x0 !== this['hasPlaybackControl'] || !0x1 !== this['isPlaying']) {
          this['matrixWorld']['decompose'](bf, bg, bh), bi['set'](0x0, 0x0, 0x1)['applyQuaternion'](bg);
          var bG = this['panner'];
          if (bG['positionX']) {
            var bH = this['context']['currentTime'] + this['listener']['timeDelta'];
            bG['positionX']['linearRampToValueAtTime'](bf['x'], bH), bG['positionY']['linearRampToValueAtTime'](bf['y'], bH), bG['positionZ']['linearRampToValueAtTime'](bf['z'], bH), bG['orientationX']['linearRampToValueAtTime'](bi['x'], bH), bG['orientationY']['linearRampToValueAtTime'](bi['y'], bH), bG['orientationZ']['linearRampToValueAtTime'](bi['z'], bH);
          } else bG['setPosition'](bf['x'], bf['y'], bf['z']), bG['setOrientation'](bi['x'], bi['y'], bi['z']);
        }
      };
    }()
  }), Object['assign'](aU7['prototype'], {
    'getFrequencyData': function() {
      return this['analyser']['getByteFrequencyData'](this['data']), this['data'];
    },
    'getAverageFrequency': function() {
      for (var bf = 0x0, bg = this['getFrequencyData'](), bh = 0x0; bh < bg['length']; bh++) bf += bg[bh];
      return bf / bg['length'];
    }
  }), Object['assign'](aUa['prototype'], {
    'accumulate': function(bf, bg) {
      var bh = this['buffer'],
        bi = this['valueSize'],
        bF = bf * bi + bi,
        bG = this['cumulativeWeight'];
      if (0x0 === bG) {
        for (var bH = 0x0; bH !== bi; ++bH) bh[bF + bH] = bh[bH];
        bG = bg;
      } else {
        var bI = bg / (bG += bg);
        this['_mixBufferRegion'](bh, bF, 0x0, bI, bi);
      }
      this['cumulativeWeight'] = bG;
    },
    'apply': function(bf) {
      var bg = this['valueSize'],
        bh = this['buffer'],
        bi = bf * bg + bg,
        bF = this['cumulativeWeight'],
        bG = this['binding'];
      if (this['cumulativeWeight'] = 0x0, bF < 0x1) {
        var bH = 0x3 * bg;
        this['_mixBufferRegion'](bh, bi, bH, 0x1 - bF, bg);
      }
      for (var bI = bg, bJ = bg + bg; bI !== bJ; ++bI)
        if (bh[bI] !== bh[bI + bg]) {
          bG['setValue'](bh, bi);
          break;
        }
    },
    'saveOriginalState': function() {
      var bf = this['binding'],
        bg = this['buffer'],
        bh = this['valueSize'],
        bi = 0x3 * bh;
      bf['getValue'](bg, bi);
      for (var bF = bh, bG = bi; bF !== bG; ++bF) bg[bF] = bg[bi + bF % bh];
      this['cumulativeWeight'] = 0x0;
    },
    'restoreOriginalState': function() {
      var bf = 0x3 * this['valueSize'];
      this['binding']['setValue'](this['buffer'], bf);
    },
    '_select': function(bf, bg, bh, bi, bF) {
      if (bi >= 0.5)
        for (var bG = 0x0; bG !== bF; ++bG) bf[bg + bG] = bf[bh + bG];
    },
    '_slerp': function(bf, bg, bh, bi) {
      eF['slerpFlat'](bf, bg, bf, bg, bf, bh, bi);
    },
    '_lerp': function(bf, bg, bh, bi, bF) {
      for (var bG = 0x1 - bi, bH = 0x0; bH !== bF; ++bH) {
        var bI = bg + bH;
        bf[bI] = bf[bI] * bG + bf[bh + bH] * bi;
      }
    }
  });
  var aVE, aVF, aVG, aVH, aVI, aVJ, aVK, aVL, aVM, aVN, aVO, aVP, aVQ, aVR, aVS;

  function aVT(bf, bg, bh) {
    var bi = bh || aVY['parseTrackName'](bg);
    this['_targetGroup'] = bf, this['_bindings'] = bf['subscribe_'](bg, bi);
  }

  function aVY(bf, bg, bh) {
    this['path'] = bg, this['parsedPath'] = bh || aVY['parseTrackName'](bg), this['node'] = aVY['findNode'](bf, this['parsedPath']['nodeName']) || bf, this['rootNode'] = bf;
  }

  function aW2() {
    this['uuid'] = e2['generateUUID'](), this['_objects'] = Array['prototype']['slice']['call'](arguments), this['nCachedObjects_'] = 0x0;
    var bf = {};
    this['_indicesByUUID'] = bf;
    for (var bg = 0x0, bh = arguments['length']; bg !== bh; ++bg) bf[arguments[bg]['uuid']] = bg;
    this['_paths'] = [], this['_parsedPaths'] = [], this['_bindings'] = [], this['_bindingsIndicesByPath'] = {};
    var bi = this;
    this['stats'] = {
      'objects': {
        get 'total'() {
          return bi['_objects']['length'];
        },
        get 'inUse'() {
          return this['total'] - bi['nCachedObjects_'];
        }
      },
      get 'bindingsPerObject'() {
        return bi['_bindings']['length'];
      }
    };
  }

  function aW7(bf, bg, bh) {
    this['_mixer'] = bf, this['_clip'] = bg, this['_localRoot'] = bh || null;
    for (var bi = bg['tracks'], bF = bi['length'], bG = new Array(bF), bH = {
        'endingStart': dK,
        'endingEnd': dK
      }, bI = 0x0; bI !== bF; ++bI) {
      var bJ = bi[bI]['createInterpolant'](null);
      bG[bI] = bJ, bJ['settings'] = bH;
    }
    this['_interpolantSettings'] = bH, this['_interpolants'] = bG, this['_propertyBindings'] = new Array(bF), this['_cacheIndex'] = null, this['_byClipCacheIndex'] = null, this['_timeScaleInterpolant'] = null, this['_weightInterpolant'] = null, this['loop'] = dF, this['_loopCount'] = -0x1, this['_startTime'] = null, this['time'] = 0x0, this['timeScale'] = 0x1, this['_effectiveTimeScale'] = 0x1, this['weight'] = 0x1, this['_effectiveWeight'] = 0x1, this['repetitions'] = 0x1 / 0x0, this['paused'] = !0x1, this['enabled'] = !0x0, this['clampWhenFinished'] = !0x1, this['zeroSlopeAtStart'] = !0x0, this['zeroSlopeAtEnd'] = !0x0;
  }

  function aWh(bf) {
    this['_root'] = bf, this['_initMemoryManager'](), this['_accuIndex'] = 0x0, this['time'] = 0x0, this['timeScale'] = 0x1;
  }

  function aWj(bf) {
    'string' == typeof bf && (console['warn']('THREE.Uniform:\x20Type\x20parameter\x20is\x20no\x20longer\x20needed.'), bf = arguments[0x1]), this['value'] = bf;
  }

  function aWl(bf, bg, bh) {
    aeb['call'](this, bf, bg), this['meshPerAttribute'] = bh || 0x1;
  }

  function aWp(bf, bg, bh, bi) {
    this['ray'] = new KP(bf, bg), this['near'] = bh || 0x0, this['far'] = bi || 0x1 / 0x0, this['params'] = {
      'Mesh': {},
      'Line': {},
      'LOD': {},
      'Points': {
        'threshold': 0x1
      },
      'Sprite': {}
    }, Object['defineProperties'](this['params'], {
      'PointCloud': {
        'get': function() {
          return console['warn']('THREE.Raycaster:\x20params.PointCloud\x20has\x20been\x20renamed\x20to\x20params.Points.'), this['Points'];
        }
      }
    });
  }

  function aWu(bf, bg) {
    return bf['distance'] - bg['distance'];
  }

  function aWx(bf, bg, bh, bi) {
    if (!0x1 !== bf['visible'] && (bf['raycast'](bg, bh), !0x0 === bi))
      for (var bF = bf['children'], bG = 0x0, bH = bF['length']; bG < bH; bG++) aWx(bF[bG], bg, bh, !0x0);
  }

  function aWF(bf, bg, bh) {
    return this['radius'] = void 0x0 !== bf ? bf : 0x1, this['phi'] = void 0x0 !== bg ? bg : 0x0, this['theta'] = void 0x0 !== bh ? bh : 0x0, this;
  }

  function aWJ(bf, bg, bh) {
    return this['radius'] = void 0x0 !== bf ? bf : 0x1, this['theta'] = void 0x0 !== bg ? bg : 0x0, this['y'] = void 0x0 !== bh ? bh : 0x0, this;
  }

  function aWN(bf, bg) {
    this['min'] = void 0x0 !== bf ? bf : new eC(0x1 / 0x0, 0x1 / 0x0), this['max'] = void 0x0 !== bg ? bg : new eC(-0x1 / 0x0, -0x1 / 0x0);
  }

  function aWQ(bf, bg) {
    this['start'] = void 0x0 !== bf ? bf : new eK(), this['end'] = void 0x0 !== bg ? bg : new eK();
  }

  function aWT(bf) {
    yT['call'](this), this['material'] = bf, this['render'] = function() {};
  }

  function aWV(bf, bg, bh, bi) {
    this['object'] = bf, this['size'] = void 0x0 !== bg ? bg : 0x1;
    var bF = void 0x0 !== bh ? bh : 0xff0000,
      bG = void 0x0 !== bi ? bi : 0x1,
      bH = 0x0,
      bI = this['object']['geometry'];
    bI && bI['isGeometry'] ? bH = 0x3 * bI['faces']['length'] : bI && bI['isBufferGeometry'] && (bH = bI['attributes']['normal']['count']);
    var bJ = new Gf(),
      bK = new Be(0x2 * bH * 0x3, 0x3);
    bJ['addAttribute']('position', bK), aeE['call'](this, bJ, new aey({
      'color': bF,
      'linewidth': bG
    })), this['matrixAutoUpdate'] = !0x1, this['update']();
  }

  function aX6(bf, bg) {
    yT['call'](this), this['light'] = bf, this['light']['updateMatrixWorld'](), this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['color'] = bg;
    for (var bh = new Gf(), bi = [0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, -0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, -0x1, 0x1], bF = 0x0, bG = 0x1; bF < 0x20; bF++, bG++) {
      var bH = bF / 0x20 * Math['PI'] * 0x2,
        bI = bG / 0x20 * Math['PI'] * 0x2;
      bi['push'](Math['cos'](bH), Math['sin'](bH), 0x1, Math['cos'](bI), Math['sin'](bI), 0x1);
    }
    bh['addAttribute']('position', new Be(bi, 0x3));
    var bJ = new aey({
      'fog': !0x1
    });
    this['cone'] = new aeE(bh, bJ), this['add'](this['cone']), this['update']();
  }

  function aXg(bf) {
    for (var bg = function bf(bg) {
        var bh = [];
        bg && bg['isBone'] && bh['push'](bg);
        for (var bi = 0x0; bi < bg['children']['length']; bi++) bh['push']['apply'](bh, bf(bg['children'][bi]));
        return bh;
      }(bf), bh = new Gf(), bi = [], bF = [], bG = new w7(0x0, 0x0, 0x1), bH = new w7(0x0, 0x1, 0x0), bI = 0x0; bI < bg['length']; bI++) {
      var bJ = bg[bI];
      bJ['parent'] && bJ['parent']['isBone'] && (bi['push'](0x0, 0x0, 0x0), bi['push'](0x0, 0x0, 0x0), bF['push'](bG['r'], bG['g'], bG['b']), bF['push'](bH['r'], bH['g'], bH['b']));
    }
    bh['addAttribute']('position', new Be(bi, 0x3)), bh['addAttribute']('color', new Be(bF, 0x3));
    var bK = new aey({
      'vertexColors': c0,
      'depthTest': !0x1,
      'depthWrite': !0x1,
      'transparent': !0x0
    });
    aeE['call'](this, bh, bK), this['root'] = bf, this['bones'] = bg, this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1;
  }

  function aXu(bf, bg, bh) {
    this['light'] = bf, this['light']['updateMatrixWorld'](), this['color'] = bh;
    var bi = new asZ(bg, 0x4, 0x2),
      bF = new KW({
        'wireframe': !0x0,
        'fog': !0x1
      });
    KY['call'](this, bi, bF), this['matrix'] = this['light']['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['update']();
  }

  function aXA(bf, bg) {
    this['type'] = 'RectAreaLightHelper', this['light'] = bf, this['color'] = bg;
    var bh = new Gf();
    bh['addAttribute']('position', new Be([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, -0x1, 0x0, 0x1, 0x1, 0x0], 0x3)), bh['computeBoundingSphere']();
    var bi = new aey({
      'fog': !0x1
    });
    aeA['call'](this, bh, bi);
    var bF = new Gf();
    bF['addAttribute']('position', new Be([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, -0x1, 0x0], 0x3)), bF['computeBoundingSphere'](), this['add'](new KY(bF, new KW({
      'side': bU,
      'fog': !0x1
    }))), this['update']();
  }

  function aXG(bf, bg, bh) {
    yT['call'](this), this['light'] = bf, this['light']['updateMatrixWorld'](), this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['color'] = bh;
    var bi = new ahA(bg);
    bi['rotateY'](0.5 * Math['PI']), this['material'] = new KW({
      'wireframe': !0x0,
      'fog': !0x1
    }), void 0x0 === this['color'] && (this['material']['vertexColors'] = c0);
    var bF = bi['getAttribute']('position'),
      bG = new Float32Array(0x3 * bF['count']);
    bi['addAttribute']('color', new AI(bG, 0x3)), this['add'](new KY(bi, this['material'])), this['update']();
  }

  function aXN(bf, bg) {
    this['lightProbe'] = bf, this['size'] = bg;
    var bh = {
        'GAMMA_OUTPUT': ''
      },
      bi = new KN({
        'defines': bh,
        'uniforms': {
          'sh': {
            'value': this['lightProbe']['sh']['coefficients']
          },
          'intensity': {
            'value': this['lightProbe']['intensity']
          }
        },
        'vertexShader': ['varying\x20vec3\x20vNormal;', 'void\x20main()\x20{', '\x09vNormal\x20=\x20normalize(\x20normalMatrix\x20*\x20normal\x20);', '\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);', '}']['join']('\x0a'),
        'fragmentShader': ['#define\x20RECIPROCAL_PI\x200.318309886', 'vec3\x20inverseTransformDirection(\x20in\x20vec3\x20normal,\x20in\x20mat4\x20matrix\x20)\x20{', '\x09//\x20matrix\x20is\x20assumed\x20to\x20be\x20orthogonal', '\x09return\x20normalize(\x20(\x20vec4(\x20normal,\x200.0\x20)\x20*\x20matrix\x20).xyz\x20);', '}', 'vec3\x20linearToOutput(\x20in\x20vec3\x20a\x20)\x20{', '\x09#ifdef\x20GAMMA_OUTPUT', '\x09\x09return\x20pow(\x20a,\x20vec3(\x201.0\x20/\x20float(\x20GAMMA_FACTOR\x20)\x20)\x20);', '\x09#else', '\x09\x09return\x20a;', '\x09#endif', '}', '//\x20source:\x20https://graphics.stanford.edu/papers/envmap/envmap.pdf', 'vec3\x20shGetIrradianceAt(\x20in\x20vec3\x20normal,\x20in\x20vec3\x20shCoefficients[\x209\x20]\x20)\x20{', '\x09//\x20normal\x20is\x20assumed\x20to\x20have\x20unit\x20length', '\x09float\x20x\x20=\x20normal.x,\x20y\x20=\x20normal.y,\x20z\x20=\x20normal.z;', '\x09//\x20band\x200', '\x09vec3\x20result\x20=\x20shCoefficients[\x200\x20]\x20*\x200.886227;', '\x09//\x20band\x201', '\x09result\x20+=\x20shCoefficients[\x201\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20y;', '\x09result\x20+=\x20shCoefficients[\x202\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x203\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20x;', '\x09//\x20band\x202', '\x09result\x20+=\x20shCoefficients[\x204\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20y;', '\x09result\x20+=\x20shCoefficients[\x205\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20y\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x206\x20]\x20*\x20(\x200.743125\x20*\x20z\x20*\x20z\x20-\x200.247708\x20);', '\x09result\x20+=\x20shCoefficients[\x207\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x208\x20]\x20*\x200.429043\x20*\x20(\x20x\x20*\x20x\x20-\x20y\x20*\x20y\x20);', '\x09return\x20result;', '}', 'uniform\x20vec3\x20sh[\x209\x20];\x20//\x20sh\x20coefficients', 'uniform\x20float\x20intensity;\x20//\x20light\x20probe\x20intensity', 'varying\x20vec3\x20vNormal;', 'void\x20main()\x20{', '\x09vec3\x20normal\x20=\x20normalize(\x20vNormal\x20);', '\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);', '\x09vec3\x20irradiance\x20=\x20shGetIrradianceAt(\x20worldNormal,\x20sh\x20);', '\x09vec3\x20outgoingLight\x20=\x20RECIPROCAL_PI\x20*\x20irradiance\x20*\x20intensity;', '\x09outgoingLight\x20=\x20linearToOutput(\x20outgoingLight\x20);', '\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x201.0\x20);', '}']['join']('\x0a')
      }),
      bF = new asZ(0x1, 0x20, 0x10);
    KY['call'](this, bF, bi), this['onBeforeRender']();
  }

  function aXT(bf, bg, bh, bi) {
    bf = bf || 0xa, bg = bg || 0xa, bh = new w7(void 0x0 !== bh ? bh : 0x444444), bi = new w7(void 0x0 !== bi ? bi : 0x888888);
    for (var bF = bg / 0x2, bG = bf / bg, bH = bf / 0x2, bI = [], bJ = [], bK = 0x0, bL = 0x0, bM = -bH; bK <= bg; bK++, bM += bG) {
      bI['push'](-bH, 0x0, bM, bH, 0x0, bM), bI['push'](bM, 0x0, -bH, bM, 0x0, bH);
      var bN = bK === bF ? bh : bi;
      bN['toArray'](bJ, bL), bL += 0x3, bN['toArray'](bJ, bL), bL += 0x3, bN['toArray'](bJ, bL), bL += 0x3, bN['toArray'](bJ, bL), bL += 0x3;
    }
    var bO = new Gf();
    bO['addAttribute']('position', new Be(bI, 0x3)), bO['addAttribute']('color', new Be(bJ, 0x3));
    var bP = new aey({
      'vertexColors': c0
    });
    aeE['call'](this, bO, bP);
  }

  function aY9(bf, bg, bh, bi, bF, bG) {
    bf = bf || 0xa, bg = bg || 0x10, bh = bh || 0x8, bi = bi || 0x40, bF = new w7(void 0x0 !== bF ? bF : 0x444444), bG = new w7(void 0x0 !== bG ? bG : 0x888888);
    var bH, bI, bJ, bK, bL, bM, bN, bO = [],
      bP = [];
    for (bK = 0x0; bK <= bg; bK++) bJ = bK / bg * (0x2 * Math['PI']), bH = Math['sin'](bJ) * bf, bI = Math['cos'](bJ) * bf, bO['push'](0x0, 0x0, 0x0), bO['push'](bH, 0x0, bI), bN = 0x1 & bK ? bF : bG, bP['push'](bN['r'], bN['g'], bN['b']), bP['push'](bN['r'], bN['g'], bN['b']);
    for (bK = 0x0; bK <= bh; bK++)
      for (bN = 0x1 & bK ? bF : bG, bM = bf - bf / bh * bK, bL = 0x0; bL < bi; bL++) bJ = bL / bi * (0x2 * Math['PI']), bH = Math['sin'](bJ) * bM, bI = Math['cos'](bJ) * bM, bO['push'](bH, 0x0, bI), bP['push'](bN['r'], bN['g'], bN['b']), bJ = (bL + 0x1) / bi * (0x2 * Math['PI']), bH = Math['sin'](bJ) * bM, bI = Math['cos'](bJ) * bM, bO['push'](bH, 0x0, bI), bP['push'](bN['r'], bN['g'], bN['b']);
    var bQ = new Gf();
    bQ['addAttribute']('position', new Be(bO, 0x3)), bQ['addAttribute']('color', new Be(bP, 0x3));
    var bR = new aey({
      'vertexColors': c0
    });
    aeE['call'](this, bQ, bR);
  }

  function aYr(bf, bg, bh, bi) {
    this['audio'] = bf, this['range'] = bg || 0x1, this['divisionsInnerAngle'] = bh || 0x10, this['divisionsOuterAngle'] = bi || 0x2;
    var bF = new Gf(),
      bG = this['divisionsInnerAngle'] + 0x2 * this['divisionsOuterAngle'],
      bH = new Float32Array(0x3 * (0x3 * bG + 0x3));
    bF['addAttribute']('position', new AI(bH, 0x3));
    var bI = new aey({
        'color': 0xff00
      }),
      bJ = new aey({
        'color': 0xffff00
      });
    aeA['call'](this, bF, [bJ, bI]), this['update']();
  }

  function aYB(bf, bg, bh, bi) {
    this['object'] = bf, this['size'] = void 0x0 !== bg ? bg : 0x1;
    var bF = void 0x0 !== bh ? bh : 0xffff00,
      bG = void 0x0 !== bi ? bi : 0x1,
      bH = 0x0,
      bI = this['object']['geometry'];
    bI && bI['isGeometry'] ? bH = bI['faces']['length'] : console['warn']('THREE.FaceNormalsHelper:\x20only\x20THREE.Geometry\x20is\x20supported.\x20Use\x20THREE.VertexNormalsHelper,\x20instead.');
    var bJ = new Gf(),
      bK = new Be(0x2 * bH * 0x3, 0x3);
    bJ['addAttribute']('position', bK), aeE['call'](this, bJ, new aey({
      'color': bF,
      'linewidth': bG
    })), this['matrixAutoUpdate'] = !0x1, this['update']();
  }

  function aYM(bf, bg, bh) {
    yT['call'](this), this['light'] = bf, this['light']['updateMatrixWorld'](), this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['color'] = bh, void 0x0 === bg && (bg = 0x1);
    var bi = new Gf();
    bi['addAttribute']('position', new Be([-bg, bg, 0x0, bg, bg, 0x0, bg, -bg, 0x0, -bg, -bg, 0x0, -bg, bg, 0x0], 0x3));
    var bF = new aey({
      'fog': !0x1
    });
    this['lightPlane'] = new aeA(bi, bF), this['add'](this['lightPlane']), (bi = new Gf())['addAttribute']('position', new Be([0x0, 0x0, 0x0, 0x0, 0x0, 0x1], 0x3)), this['targetLine'] = new aeA(bi, bF), this['add'](this['targetLine']), this['update']();
  }

  function aYS(bf) {
    var bg = new Gf(),
      bh = new aey({
        'color': 0xffffff,
        'vertexColors': bZ
      }),
      bi = [],
      bF = [],
      bG = {},
      bH = new w7(0xffaa00),
      bI = new w7(0xff0000),
      bJ = new w7(0xaaff),
      bK = new w7(0xffffff),
      bL = new w7(0x333333);

    function bM(bf, bg, bh) {
      bN(bf, bh), bN(bg, bh);
    }

    function bN(bf, bg) {
      bi['push'](0x0, 0x0, 0x0), bF['push'](bg['r'], bg['g'], bg['b']), void 0x0 === bG[bf] && (bG[bf] = []), bG[bf]['push'](bi['length'] / 0x3 - 0x1);
    }
    bM('n1', 'n2', bH), bM('n2', 'n4', bH), bM('n4', 'n3', bH), bM('n3', 'n1', bH), bM('f1', 'f2', bH), bM('f2', 'f4', bH), bM('f4', 'f3', bH), bM('f3', 'f1', bH), bM('n1', 'f1', bH), bM('n2', 'f2', bH), bM('n3', 'f3', bH), bM('n4', 'f4', bH), bM('p', 'n1', bI), bM('p', 'n2', bI), bM('p', 'n3', bI), bM('p', 'n4', bI), bM('u1', 'u2', bJ), bM('u2', 'u3', bJ), bM('u3', 'u1', bJ), bM('c', 't', bK), bM('p', 'c', bL), bM('cn1', 'cn2', bL), bM('cn3', 'cn4', bL), bM('cf1', 'cf2', bL), bM('cf3', 'cf4', bL), bg['addAttribute']('position', new Be(bi, 0x3)), bg['addAttribute']('color', new Be(bF, 0x3)), aeE['call'](this, bg, bh), this['camera'] = bf, this['camera']['updateProjectionMatrix'] && this['camera']['updateProjectionMatrix'](), this['matrix'] = bf['matrixWorld'], this['matrixAutoUpdate'] = !0x1, this['pointMap'] = bG, this['update']();
  }

  function aZb(bf, bg) {
    this['object'] = bf, void 0x0 === bg && (bg = 0xffff00);
    var bh = new Uint16Array([0x0, 0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x0, 0x4, 0x5, 0x5, 0x6, 0x6, 0x7, 0x7, 0x4, 0x0, 0x4, 0x1, 0x5, 0x2, 0x6, 0x3, 0x7]),
      bi = new Float32Array(0x18),
      bF = new Gf();
    bF['setIndex'](new AI(bh, 0x1)), bF['addAttribute']('position', new AI(bi, 0x3)), aeE['call'](this, bF, new aey({
      'color': bg
    })), this['matrixAutoUpdate'] = !0x1, this['update']();
  }

  function aZh(bf, bg) {
    this['type'] = 'Box3Helper', this['box'] = bf;
    var bh = void 0x0 !== bg ? bg : 0xffff00,
      bi = new Uint16Array([0x0, 0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x0, 0x4, 0x5, 0x5, 0x6, 0x6, 0x7, 0x7, 0x4, 0x0, 0x4, 0x1, 0x5, 0x2, 0x6, 0x3, 0x7]),
      bF = new Gf();
    bF['setIndex'](new AI(bi, 0x1)), bF['addAttribute']('position', new Be([0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, -0x1, -0x1, -0x1, 0x1, -0x1, -0x1], 0x3)), aeE['call'](this, bF, new aey({
      'color': bh
    })), this['geometry']['computeBoundingSphere']();
  }

  function aZn(bf, bg, bh) {
    this['type'] = 'PlaneHelper', this['plane'] = bf, this['size'] = void 0x0 === bg ? 0x1 : bg;
    var bi = void 0x0 !== bh ? bh : 0xffff00,
      bF = new Gf();
    bF['addAttribute']('position', new Be([0x1, -0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0], 0x3)), bF['computeBoundingSphere'](), aeA['call'](this, bF, new aey({
      'color': bi
    }));
    var bG = new Gf();
    bG['addAttribute']('position', new Be([0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1], 0x3)), bG['computeBoundingSphere'](), this['add'](new KY(bG, new KW({
      'color': bi,
      'opacity': 0.2,
      'transparent': !0x0,
      'depthWrite': !0x1
    })));
  }

  function aZu(bf, bg, bh, bi, bF, bG) {
    yT['call'](this), void 0x0 === bf && (bf = new eK(0x0, 0x0, 0x1)), void 0x0 === bg && (bg = new eK(0x0, 0x0, 0x0)), void 0x0 === bh && (bh = 0x1), void 0x0 === bi && (bi = 0xffff00), void 0x0 === bF && (bF = 0.2 * bh), void 0x0 === bG && (bG = 0.2 * bF), void 0x0 === aVP && ((aVP = new Gf())['addAttribute']('position', new Be([0x0, 0x0, 0x0, 0x0, 0x1, 0x0], 0x3)), (aVQ = new avp(0x0, 0.5, 0x1, 0x5, 0x1))['translate'](0x0, -0.5, 0x0)), this['position']['copy'](bg), this['line'] = new aeA(aVP, new aey({
      'color': bi
    })), this['line']['matrixAutoUpdate'] = !0x1, this['add'](this['line']), this['cone'] = new KY(aVQ, new KW({
      'color': bi
    })), this['cone']['matrixAutoUpdate'] = !0x1, this['add'](this['cone']), this['setDirection'](bf), this['setLength'](bh, bF, bG);
  }

  function aZB(bf) {
    var bg = [0x0, 0x0, 0x0, bf = bf || 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, bf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, bf],
      bh = new Gf();
    bh['addAttribute']('position', new Be(bg, 0x3)), bh['addAttribute']('color', new Be([0x1, 0x0, 0x0, 0x1, 0.6, 0x0, 0x0, 0x1, 0x0, 0.6, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0.6, 0x1], 0x3));
    var bi = new aey({
      'vertexColors': c0
    });
    aeE['call'](this, bh, bi);
  }

  function aZG(bf, bg, bh, bi, bF, bG, bH) {
    return console['warn']('THREE.Face4\x20has\x20been\x20removed.\x20A\x20THREE.Face3\x20will\x20be\x20created\x20instead.'), new xS(bf, bg, bh, bF, bG, bH);
  }
  Object['assign'](aVT['prototype'], {
    'getValue': function(bf, bg) {
      this['bind']();
      var bh = this['_targetGroup']['nCachedObjects_'],
        bi = this['_bindings'][bh];
      void 0x0 !== bi && bi['getValue'](bf, bg);
    },
    'setValue': function(bf, bg) {
      for (var bh = this['_bindings'], bi = this['_targetGroup']['nCachedObjects_'], bF = bh['length']; bi !== bF; ++bi) bh[bi]['setValue'](bf, bg);
    },
    'bind': function() {
      for (var bf = this['_bindings'], bg = this['_targetGroup']['nCachedObjects_'], bh = bf['length']; bg !== bh; ++bg) bf[bg]['bind']();
    },
    'unbind': function() {
      for (var bf = this['_bindings'], bg = this['_targetGroup']['nCachedObjects_'], bh = bf['length']; bg !== bh; ++bg) bf[bg]['unbind']();
    }
  }), Object['assign'](aVY, {
    'Composite': aVT,
    'create': function(bf, bg, bh) {
      return bf && bf['isAnimationObjectGroup'] ? new aVY['Composite'](bf, bg, bh) : new aVY(bf, bg, bh);
    },
    'sanitizeNodeName': (aVM = new RegExp('[\x5c[\x5c]\x5c.:\x5c/]', 'g'), function(bf) {
      return bf['replace'](/\s/g, '_')['replace'](aVM, '');
    }),
    'parseTrackName': (aVE = '[^\x5c[\x5c]\x5c.:\x5c/]', aVF = '[^' + '\x5c[\x5c]\x5c.:\x5c/' ['replace']('\x5c.', '') + ']', aVG = /((?:WC+[\/:])*)/ ['source']['replace']('WC', aVE), aVH = /(WCOD+)?/ ['source']['replace']('WCOD', aVF), aVI = /(?:\.(WC+)(?:\[(.+)\])?)?/ ['source']['replace']('WC', aVE), aVJ = /\.(WC+)(?:\[(.+)\])?/ ['source']['replace']('WC', aVE), aVK = new RegExp('^' + aVG + aVH + aVI + aVJ + '$'), aVL = ['material', 'materials', 'bones'], function(bf) {
      var bg = aVK['exec'](bf);
      if (!bg) throw new Error('PropertyBinding:\x20Cannot\x20parse\x20trackName:\x20' + bf);
      var bh = {
          'nodeName': bg[0x2],
          'objectName': bg[0x3],
          'objectIndex': bg[0x4],
          'propertyName': bg[0x5],
          'propertyIndex': bg[0x6]
        },
        bi = bh['nodeName'] && bh['nodeName']['lastIndexOf']('.');
      if (void 0x0 !== bi && -0x1 !== bi) {
        var bF = bh['nodeName']['substring'](bi + 0x1); - 0x1 !== aVL['indexOf'](bF) && (bh['nodeName'] = bh['nodeName']['substring'](0x0, bi), bh['objectName'] = bF);
      }
      if (null === bh['propertyName'] || 0x0 === bh['propertyName']['length']) throw new Error('PropertyBinding:\x20can\x20not\x20parse\x20propertyName\x20from\x20trackName:\x20' + bf);
      return bh;
    }),
    'findNode': function(bf, bg) {
      if (!bg || '' === bg || 'root' === bg || '.' === bg || -0x1 === bg || bg === bf['name'] || bg === bf['uuid']) return bf;
      if (bf['skeleton']) {
        var bh = bf['skeleton']['getBoneByName'](bg);
        if (void 0x0 !== bh) return bh;
      }
      if (bf['children']) {
        var bi = function(bf) {
            for (var bh = 0x0; bh < bf['length']; bh++) {
              var bF = bf[bh];
              if (bF['name'] === bg || bF['uuid'] === bg) return bF;
              var bG = bi(bF['children']);
              if (bG) return bG;
            }
            return null;
          },
          bF = bi(bf['children']);
        if (bF) return bF;
      }
      return null;
    }
  }), Object['assign'](aVY['prototype'], {
    '_getValue_unavailable': function() {},
    '_setValue_unavailable': function() {},
    'BindingType': {
      'Direct': 0x0,
      'EntireArray': 0x1,
      'ArrayElement': 0x2,
      'HasFromToArray': 0x3
    },
    'Versioning': {
      'None': 0x0,
      'NeedsUpdate': 0x1,
      'MatrixWorldNeedsUpdate': 0x2
    },
    'GetterByBindingType': [function(bf, bg) {
      bf[bg] = this['node'][this['propertyName']];
    }, function(bf, bg) {
      for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi) bf[bg++] = bh[bi];
    }, function(bf, bg) {
      bf[bg] = this['resolvedProperty'][this['propertyIndex']];
    }, function(bf, bg) {
      this['resolvedProperty']['toArray'](bf, bg);
    }],
    'SetterByBindingTypeAndVersioning': [
      [function(bf, bg) {
        this['targetObject'][this['propertyName']] = bf[bg];
      }, function(bf, bg) {
        this['targetObject'][this['propertyName']] = bf[bg], this['targetObject']['needsUpdate'] = !0x0;
      }, function(bf, bg) {
        this['targetObject'][this['propertyName']] = bf[bg], this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
      }],
      [function(bf, bg) {
        for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi) bh[bi] = bf[bg++];
      }, function(bf, bg) {
        for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi) bh[bi] = bf[bg++];
        this['targetObject']['needsUpdate'] = !0x0;
      }, function(bf, bg) {
        for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi) bh[bi] = bf[bg++];
        this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
      }],
      [function(bf, bg) {
        this['resolvedProperty'][this['propertyIndex']] = bf[bg];
      }, function(bf, bg) {
        this['resolvedProperty'][this['propertyIndex']] = bf[bg], this['targetObject']['needsUpdate'] = !0x0;
      }, function(bf, bg) {
        this['resolvedProperty'][this['propertyIndex']] = bf[bg], this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
      }],
      [function(bf, bg) {
        this['resolvedProperty']['fromArray'](bf, bg);
      }, function(bf, bg) {
        this['resolvedProperty']['fromArray'](bf, bg), this['targetObject']['needsUpdate'] = !0x0;
      }, function(bf, bg) {
        this['resolvedProperty']['fromArray'](bf, bg), this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
      }]
    ],
    'getValue': function(bf, bg) {
      this['bind'](), this['getValue'](bf, bg);
    },
    'setValue': function(bf, bg) {
      this['bind'](), this['setValue'](bf, bg);
    },
    'bind': function() {
      var bf = this['node'],
        bg = this['parsedPath'],
        bh = bg['objectName'],
        bi = bg['propertyName'],
        bF = bg['propertyIndex'];
      if (bf || (bf = aVY['findNode'](this['rootNode'], bg['nodeName']) || this['rootNode'], this['node'] = bf), this['getValue'] = this['_getValue_unavailable'], this['setValue'] = this['_setValue_unavailable'], bf) {
        if (bh) {
          var bG = bg['objectIndex'];
          switch (bh) {
            case 'materials':
              if (!bf['material']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20material\x20as\x20node\x20does\x20not\x20have\x20a\x20material.', this);
              if (!bf['material']['materials']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20material.materials\x20as\x20node.material\x20does\x20not\x20have\x20a\x20materials\x20array.', this);
              bf = bf['material']['materials'];
              break;
            case 'bones':
              if (!bf['skeleton']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20bones\x20as\x20node\x20does\x20not\x20have\x20a\x20skeleton.', this);
              bf = bf['skeleton']['bones'];
              for (var bH = 0x0; bH < bf['length']; bH++)
                if (bf[bH]['name'] === bG) {
                  bG = bH;
                  break;
                } break;
            default:
              if (void 0x0 === bf[bh]) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20objectName\x20of\x20node\x20undefined.', this);
              bf = bf[bh];
          }
          if (void 0x0 !== bG) {
            if (void 0x0 === bf[bG]) return void console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20bind\x20to\x20objectIndex\x20of\x20objectName,\x20but\x20is\x20undefined.', this, bf);
            bf = bf[bG];
          }
        }
        var bI = bf[bi];
        if (void 0x0 !== bI) {
          var bJ = this['Versioning']['None'];
          this['targetObject'] = bf, void 0x0 !== bf['needsUpdate'] ? bJ = this['Versioning']['NeedsUpdate'] : void 0x0 !== bf['matrixWorldNeedsUpdate'] && (bJ = this['Versioning']['MatrixWorldNeedsUpdate']);
          var bK = this['BindingType']['Direct'];
          if (void 0x0 !== bF) {
            if ('morphTargetInfluences' === bi) {
              if (!bf['geometry']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.', this);
              if (bf['geometry']['isBufferGeometry']) {
                if (!bf['geometry']['morphAttributes']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.morphAttributes.', this);
                for (bH = 0x0; bH < this['node']['geometry']['morphAttributes']['position']['length']; bH++)
                  if (bf['geometry']['morphAttributes']['position'][bH]['name'] === bF) {
                    bF = bH;
                    break;
                  }
              } else {
                if (!bf['geometry']['morphTargets']) return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.morphTargets.', this);
                for (bH = 0x0; bH < this['node']['geometry']['morphTargets']['length']; bH++)
                  if (bf['geometry']['morphTargets'][bH]['name'] === bF) {
                    bF = bH;
                    break;
                  }
              }
            }
            bK = this['BindingType']['ArrayElement'], this['resolvedProperty'] = bI, this['propertyIndex'] = bF;
          } else void 0x0 !== bI['fromArray'] && void 0x0 !== bI['toArray'] ? (bK = this['BindingType']['HasFromToArray'], this['resolvedProperty'] = bI) : Array['isArray'](bI) ? (bK = this['BindingType']['EntireArray'], this['resolvedProperty'] = bI) : this['propertyName'] = bi;
          this['getValue'] = this['GetterByBindingType'][bK], this['setValue'] = this['SetterByBindingTypeAndVersioning'][bK][bJ];
        } else {
          var bL = bg['nodeName'];
          console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20update\x20property\x20for\x20track:\x20' + bL + '.' + bi + '\x20but\x20it\x20wasn\x27t\x20found.', bf);
        }
      } else console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20update\x20node\x20for\x20track:\x20' + this['path'] + '\x20but\x20it\x20wasn\x27t\x20found.');
    },
    'unbind': function() {
      this['node'] = null, this['getValue'] = this['_getValue_unbound'], this['setValue'] = this['_setValue_unbound'];
    }
  }), Object['assign'](aVY['prototype'], {
    '_getValue_unbound': aVY['prototype']['getValue'],
    '_setValue_unbound': aVY['prototype']['setValue']
  }), Object['assign'](aW2['prototype'], {
    'isAnimationObjectGroup': !0x0,
    'add': function() {
      for (var bf = this['_objects'], bg = bf['length'], bh = this['nCachedObjects_'], bi = this['_indicesByUUID'], bF = this['_paths'], bG = this['_parsedPaths'], bH = this['_bindings'], bI = bH['length'], bJ = void 0x0, bK = 0x0, bL = arguments['length']; bK !== bL; ++bK) {
        var bM = arguments[bK],
          bN = bM['uuid'],
          bO = bi[bN];
        if (void 0x0 === bO) {
          bO = bg++, bi[bN] = bO, bf['push'](bM);
          for (var bP = 0x0, bQ = bI; bP !== bQ; ++bP) bH[bP]['push'](new aVY(bM, bF[bP], bG[bP]));
        } else if (bO < bh) {
          bJ = bf[bO];
          var bR = --bh,
            bS = bf[bR];
          bi[bS['uuid']] = bO, bf[bO] = bS, bi[bN] = bR, bf[bR] = bM;
          for (bP = 0x0, bQ = bI; bP !== bQ; ++bP) {
            var bT = bH[bP],
              bU = bT[bR],
              bV = bT[bO];
            bT[bO] = bU, void 0x0 === bV && (bV = new aVY(bM, bF[bP], bG[bP])), bT[bR] = bV;
          }
        } else bf[bO] !== bJ && console['error']('THREE.AnimationObjectGroup:\x20Different\x20objects\x20with\x20the\x20same\x20UUID\x20detected.\x20Clean\x20the\x20caches\x20or\x20recreate\x20your\x20infrastructure\x20when\x20reloading\x20scenes.');
      }
      this['nCachedObjects_'] = bh;
    },
    'remove': function() {
      for (var bf = this['_objects'], bg = this['nCachedObjects_'], bh = this['_indicesByUUID'], bi = this['_bindings'], bF = bi['length'], bG = 0x0, bH = arguments['length']; bG !== bH; ++bG) {
        var bI = arguments[bG],
          bJ = bI['uuid'],
          bK = bh[bJ];
        if (void 0x0 !== bK && bK >= bg) {
          var bL = bg++,
            bM = bf[bL];
          bh[bM['uuid']] = bK, bf[bK] = bM, bh[bJ] = bL, bf[bL] = bI;
          for (var bN = 0x0, bO = bF; bN !== bO; ++bN) {
            var bP = bi[bN],
              bQ = bP[bL],
              bR = bP[bK];
            bP[bK] = bQ, bP[bL] = bR;
          }
        }
      }
      this['nCachedObjects_'] = bg;
    },
    'uncache': function() {
      for (var bf = this['_objects'], bg = bf['length'], bh = this['nCachedObjects_'], bi = this['_indicesByUUID'], bF = this['_bindings'], bG = bF['length'], bH = 0x0, bI = arguments['length']; bH !== bI; ++bH) {
        var bJ = arguments[bH]['uuid'],
          bK = bi[bJ];
        if (void 0x0 !== bK)
          if (delete bi[bJ], bK < bh) {
            var bL = --bh,
              bM = bf[bL],
              bN = bf[bS = --bg];
            bi[bM['uuid']] = bK, bf[bK] = bM, bi[bN['uuid']] = bL, bf[bL] = bN, bf['pop']();
            for (var bO = 0x0, bP = bG; bO !== bP; ++bO) {
              var bQ = (bT = bF[bO])[bL],
                bR = bT[bS];
              bT[bK] = bQ, bT[bL] = bR, bT['pop']();
            }
          } else {
            var bS;
            bi[(bN = bf[bS = --bg])['uuid']] = bK, bf[bK] = bN, bf['pop']();
            for (bO = 0x0, bP = bG; bO !== bP; ++bO) {
              var bT;
              (bT = bF[bO])[bK] = bT[bS], bT['pop']();
            }
          }
      }
      this['nCachedObjects_'] = bh;
    },
    'subscribe_': function(bf, bg) {
      var bh = this['_bindingsIndicesByPath'],
        bi = bh[bf],
        bF = this['_bindings'];
      if (void 0x0 !== bi) return bF[bi];
      var bG = this['_paths'],
        bH = this['_parsedPaths'],
        bI = this['_objects'],
        bJ = bI['length'],
        bK = this['nCachedObjects_'],
        bL = new Array(bJ);
      bi = bF['length'], bh[bf] = bi, bG['push'](bf), bH['push'](bg), bF['push'](bL);
      for (var bM = bK, bN = bI['length']; bM !== bN; ++bM) {
        var bO = bI[bM];
        bL[bM] = new aVY(bO, bf, bg);
      }
      return bL;
    },
    'unsubscribe_': function(bf) {
      var bg = this['_bindingsIndicesByPath'],
        bh = bg[bf];
      if (void 0x0 !== bh) {
        var bi = this['_paths'],
          bF = this['_parsedPaths'],
          bG = this['_bindings'],
          bH = bG['length'] - 0x1,
          bI = bG[bH];
        bg[bf[bH]] = bh, bG[bh] = bI, bG['pop'](), bF[bh] = bF[bH], bF['pop'](), bi[bh] = bi[bH], bi['pop']();
      }
    }
  }), Object['assign'](aW7['prototype'], {
    'play': function() {
      return this['_mixer']['_activateAction'](this), this;
    },
    'stop': function() {
      return this['_mixer']['_deactivateAction'](this), this['reset']();
    },
    'reset': function() {
      return this['paused'] = !0x1, this['enabled'] = !0x0, this['time'] = 0x0, this['_loopCount'] = -0x1, this['_startTime'] = null, this['stopFading']()['stopWarping']();
    },
    'isRunning': function() {
      return this['enabled'] && !this['paused'] && 0x0 !== this['timeScale'] && null === this['_startTime'] && this['_mixer']['_isActiveAction'](this);
    },
    'isScheduled': function() {
      return this['_mixer']['_isActiveAction'](this);
    },
    'startAt': function(bf) {
      return this['_startTime'] = bf, this;
    },
    'setLoop': function(bf, bg) {
      return this['loop'] = bf, this['repetitions'] = bg, this;
    },
    'setEffectiveWeight': function(bf) {
      return this['weight'] = bf, this['_effectiveWeight'] = this['enabled'] ? bf : 0x0, this['stopFading']();
    },
    'getEffectiveWeight': function() {
      return this['_effectiveWeight'];
    },
    'fadeIn': function(bf) {
      return this['_scheduleFading'](bf, 0x0, 0x1);
    },
    'fadeOut': function(bf) {
      return this['_scheduleFading'](bf, 0x1, 0x0);
    },
    'crossFadeFrom': function(bf, bg, bh) {
      if (bf['fadeOut'](bg), this['fadeIn'](bg), bh) {
        var bi = this['_clip']['duration'],
          bF = bf['_clip']['duration'],
          bG = bF / bi,
          bH = bi / bF;
        bf['warp'](0x1, bG, bg), this['warp'](bH, 0x1, bg);
      }
      return this;
    },
    'crossFadeTo': function(bf, bg, bh) {
      return bf['crossFadeFrom'](this, bg, bh);
    },
    'stopFading': function() {
      var bf = this['_weightInterpolant'];
      return null !== bf && (this['_weightInterpolant'] = null, this['_mixer']['_takeBackControlInterpolant'](bf)), this;
    },
    'setEffectiveTimeScale': function(bf) {
      return this['timeScale'] = bf, this['_effectiveTimeScale'] = this['paused'] ? 0x0 : bf, this['stopWarping']();
    },
    'getEffectiveTimeScale': function() {
      return this['_effectiveTimeScale'];
    },
    'setDuration': function(bf) {
      return this['timeScale'] = this['_clip']['duration'] / bf, this['stopWarping']();
    },
    'syncWith': function(bf) {
      return this['time'] = bf['time'], this['timeScale'] = bf['timeScale'], this['stopWarping']();
    },
    'halt': function(bf) {
      return this['warp'](this['_effectiveTimeScale'], 0x0, bf);
    },
    'warp': function(bf, bg, bh) {
      var bi = this['_mixer'],
        bF = bi['time'],
        bG = this['_timeScaleInterpolant'],
        bH = this['timeScale'];
      null === bG && (bG = bi['_lendControlInterpolant'](), this['_timeScaleInterpolant'] = bG);
      var bI = bG['parameterPositions'],
        bJ = bG['sampleValues'];
      return bI[0x0] = bF, bI[0x1] = bF + bh, bJ[0x0] = bf / bH, bJ[0x1] = bg / bH, this;
    },
    'stopWarping': function() {
      var bf = this['_timeScaleInterpolant'];
      return null !== bf && (this['_timeScaleInterpolant'] = null, this['_mixer']['_takeBackControlInterpolant'](bf)), this;
    },
    'getMixer': function() {
      return this['_mixer'];
    },
    'getClip': function() {
      return this['_clip'];
    },
    'getRoot': function() {
      return this['_localRoot'] || this['_mixer']['_root'];
    },
    '_update': function(bf, bg, bh, bi) {
      if (this['enabled']) {
        var bF = this['_startTime'];
        if (null !== bF) {
          var bG = (bf - bF) * bh;
          if (bG < 0x0 || 0x0 === bh) return;
          this['_startTime'] = null, bg = bh * bG;
        }
        bg *= this['_updateTimeScale'](bf);
        var bH = this['_updateTime'](bg),
          bI = this['_updateWeight'](bf);
        if (bI > 0x0)
          for (var bJ = this['_interpolants'], bK = this['_propertyBindings'], bL = 0x0, bM = bJ['length']; bL !== bM; ++bL) bJ[bL]['evaluate'](bH), bK[bL]['accumulate'](bi, bI);
      } else this['_updateWeight'](bf);
    },
    '_updateWeight': function(bf) {
      var bg = 0x0;
      if (this['enabled']) {
        bg = this['weight'];
        var bh = this['_weightInterpolant'];
        if (null !== bh) {
          var bi = bh['evaluate'](bf)[0x0];
          bg *= bi, bf > bh['parameterPositions'][0x1] && (this['stopFading'](), 0x0 === bi && (this['enabled'] = !0x1));
        }
      }
      return this['_effectiveWeight'] = bg, bg;
    },
    '_updateTimeScale': function(bf) {
      var bg = 0x0;
      if (!this['paused']) {
        bg = this['timeScale'];
        var bh = this['_timeScaleInterpolant'];
        if (null !== bh) bg *= bh['evaluate'](bf)[0x0], bf > bh['parameterPositions'][0x1] && (this['stopWarping'](), 0x0 === bg ? this['paused'] = !0x0 : this['timeScale'] = bg);
      }
      return this['_effectiveTimeScale'] = bg, bg;
    },
    '_updateTime': function(bf) {
      var bg = this['time'] + bf,
        bh = this['_clip']['duration'],
        bi = this['loop'],
        bF = this['_loopCount'],
        bG = bi === dG;
      if (0x0 === bf) return -0x1 === bF ? bg : bG && 0x1 == (0x1 & bF) ? bh - bg : bg;
      if (bi === dE) {
        -0x1 === bF && (this['_loopCount'] = 0x0, this['_setEndings'](!0x0, !0x0, !0x1));
        b3t: {
          if (bg >= bh) bg = bh;
          else {
            if (!(bg < 0x0)) {
              this['time'] = bg;
              break b3t;
            }
            bg = 0x0;
          }
          this['clampWhenFinished'] ? this['paused'] = !0x0 : this['enabled'] = !0x1,
          this['time'] = bg,
          this['_mixer']['dispatchEvent']({
            'type': 'finished',
            'action': this,
            'direction': bf < 0x0 ? -0x1 : 0x1
          });
        }
      } else {
        if (-0x1 === bF && (bf >= 0x0 ? (bF = 0x0, this['_setEndings'](!0x0, 0x0 === this['repetitions'], bG)) : this['_setEndings'](0x0 === this['repetitions'], !0x0, bG)), bg >= bh || bg < 0x0) {
          var bH = Math['floor'](bg / bh);
          bg -= bh * bH, bF += Math['abs'](bH);
          var bI = this['repetitions'] - bF;
          if (bI <= 0x0) this['clampWhenFinished'] ? this['paused'] = !0x0 : this['enabled'] = !0x1, bg = bf > 0x0 ? bh : 0x0, this['time'] = bg, this['_mixer']['dispatchEvent']({
            'type': 'finished',
            'action': this,
            'direction': bf > 0x0 ? 0x1 : -0x1
          });
          else {
            if (0x1 === bI) {
              var bJ = bf < 0x0;
              this['_setEndings'](bJ, !bJ, bG);
            } else this['_setEndings'](!0x1, !0x1, bG);
            this['_loopCount'] = bF, this['time'] = bg, this['_mixer']['dispatchEvent']({
              'type': 'loop',
              'action': this,
              'loopDelta': bH
            });
          }
        } else this['time'] = bg;
        if (bG && 0x1 == (0x1 & bF)) return bh - bg;
      }
      return bg;
    },
    '_setEndings': function(bf, bg, bh) {
      var bi = this['_interpolantSettings'];
      bh ? (bi['endingStart'] = dL, bi['endingEnd'] = dL) : (bi['endingStart'] = bf ? this['zeroSlopeAtStart'] ? dL : dK : dM, bi['endingEnd'] = bg ? this['zeroSlopeAtEnd'] ? dL : dK : dM);
    },
    '_scheduleFading': function(bf, bg, bh) {
      var bi = this['_mixer'],
        bF = bi['time'],
        bG = this['_weightInterpolant'];
      null === bG && (bG = bi['_lendControlInterpolant'](), this['_weightInterpolant'] = bG);
      var bH = bG['parameterPositions'],
        bI = bG['sampleValues'];
      return bH[0x0] = bF, bI[0x0] = bg, bH[0x1] = bF + bf, bI[0x1] = bh, this;
    }
  }), aWh['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
    'constructor': aWh,
    '_bindAction': function(bf, bg) {
      var bh = bf['_localRoot'] || this['_root'],
        bi = bf['_clip']['tracks'],
        bF = bi['length'],
        bG = bf['_propertyBindings'],
        bH = bf['_interpolants'],
        bI = bh['uuid'],
        bJ = this['_bindingsByRootAndName'],
        bK = bJ[bI];
      void 0x0 === bK && (bK = {}, bJ[bI] = bK);
      for (var bL = 0x0; bL !== bF; ++bL) {
        var bM = bi[bL],
          bN = bM['name'],
          bO = bK[bN];
        if (void 0x0 !== bO) bG[bL] = bO;
        else {
          if (void 0x0 !== (bO = bG[bL])) {
            null === bO['_cacheIndex'] && (++bO['referenceCount'], this['_addInactiveBinding'](bO, bI, bN));
            continue;
          }
          var bP = bg && bg['_propertyBindings'][bL]['binding']['parsedPath'];
          ++(bO = new aUa(aVY['create'](bh, bN, bP), bM['ValueTypeName'], bM['getValueSize']()))['referenceCount'], this['_addInactiveBinding'](bO, bI, bN), bG[bL] = bO;
        }
        bH[bL]['resultBuffer'] = bO['buffer'];
      }
    },
    '_activateAction': function(bf) {
      if (!this['_isActiveAction'](bf)) {
        if (null === bf['_cacheIndex']) {
          var bg = (bf['_localRoot'] || this['_root'])['uuid'],
            bh = bf['_clip']['uuid'],
            bi = this['_actionsByClip'][bh];
          this['_bindAction'](bf, bi && bi['knownActions'][0x0]), this['_addInactiveAction'](bf, bh, bg);
        }
        for (var bF = bf['_propertyBindings'], bG = 0x0, bH = bF['length']; bG !== bH; ++bG) {
          var bI = bF[bG];
          0x0 == bI['useCount']++ && (this['_lendBinding'](bI), bI['saveOriginalState']());
        }
        this['_lendAction'](bf);
      }
    },
    '_deactivateAction': function(bf) {
      if (this['_isActiveAction'](bf)) {
        for (var bg = bf['_propertyBindings'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) {
          var bF = bg[bh];
          0x0 == --bF['useCount'] && (bF['restoreOriginalState'](), this['_takeBackBinding'](bF));
        }
        this['_takeBackAction'](bf);
      }
    },
    '_initMemoryManager': function() {
      this['_actions'] = [], this['_nActiveActions'] = 0x0, this['_actionsByClip'] = {}, this['_bindings'] = [], this['_nActiveBindings'] = 0x0, this['_bindingsByRootAndName'] = {}, this['_controlInterpolants'] = [], this['_nActiveControlInterpolants'] = 0x0;
      var bf = this;
      this['stats'] = {
        'actions': {
          get 'total'() {
            return bf['_actions']['length'];
          },
          get 'inUse'() {
            return bf['_nActiveActions'];
          }
        },
        'bindings': {
          get 'total'() {
            return bf['_bindings']['length'];
          },
          get 'inUse'() {
            return bf['_nActiveBindings'];
          }
        },
        'controlInterpolants': {
          get 'total'() {
            return bf['_controlInterpolants']['length'];
          },
          get 'inUse'() {
            return bf['_nActiveControlInterpolants'];
          }
        }
      };
    },
    '_isActiveAction': function(bf) {
      var bg = bf['_cacheIndex'];
      return null !== bg && bg < this['_nActiveActions'];
    },
    '_addInactiveAction': function(bf, bg, bh) {
      var bi = this['_actions'],
        bF = this['_actionsByClip'],
        bG = bF[bg];
      if (void 0x0 === bG) bG = {
        'knownActions': [bf],
        'actionByRoot': {}
      }, bf['_byClipCacheIndex'] = 0x0, bF[bg] = bG;
      else {
        var bH = bG['knownActions'];
        bf['_byClipCacheIndex'] = bH['length'], bH['push'](bf);
      }
      bf['_cacheIndex'] = bi['length'], bi['push'](bf), bG['actionByRoot'][bh] = bf;
    },
    '_removeInactiveAction': function(bf) {
      var bg = this['_actions'],
        bh = bg[bg['length'] - 0x1],
        bi = bf['_cacheIndex'];
      bh['_cacheIndex'] = bi, bg[bi] = bh, bg['pop'](), bf['_cacheIndex'] = null;
      var bF = bf['_clip']['uuid'],
        bG = this['_actionsByClip'],
        bH = bG[bF],
        bI = bH['knownActions'],
        bJ = bI[bI['length'] - 0x1],
        bK = bf['_byClipCacheIndex'];
      bJ['_byClipCacheIndex'] = bK, bI[bK] = bJ, bI['pop'](), bf['_byClipCacheIndex'] = null, delete bH['actionByRoot'][(bf['_localRoot'] || this['_root'])['uuid']], 0x0 === bI['length'] && delete bG[bF], this['_removeInactiveBindingsForAction'](bf);
    },
    '_removeInactiveBindingsForAction': function(bf) {
      for (var bg = bf['_propertyBindings'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) {
        var bF = bg[bh];
        0x0 == --bF['referenceCount'] && this['_removeInactiveBinding'](bF);
      }
    },
    '_lendAction': function(bf) {
      var bg = this['_actions'],
        bh = bf['_cacheIndex'],
        bi = this['_nActiveActions']++,
        bF = bg[bi];
      bf['_cacheIndex'] = bi, bg[bi] = bf, bF['_cacheIndex'] = bh, bg[bh] = bF;
    },
    '_takeBackAction': function(bf) {
      var bg = this['_actions'],
        bh = bf['_cacheIndex'],
        bi = --this['_nActiveActions'],
        bF = bg[bi];
      bf['_cacheIndex'] = bi, bg[bi] = bf, bF['_cacheIndex'] = bh, bg[bh] = bF;
    },
    '_addInactiveBinding': function(bf, bg, bh) {
      var bi = this['_bindingsByRootAndName'],
        bF = bi[bg],
        bG = this['_bindings'];
      void 0x0 === bF && (bF = {}, bi[bg] = bF), bF[bh] = bf, bf['_cacheIndex'] = bG['length'], bG['push'](bf);
    },
    '_removeInactiveBinding': function(bf) {
      var bg = this['_bindings'],
        bh = bf['binding'],
        bi = bh['rootNode']['uuid'],
        bF = bh['path'],
        bG = this['_bindingsByRootAndName'],
        bH = bG[bi],
        bI = bg[bg['length'] - 0x1],
        bJ = bf['_cacheIndex'];
      bI['_cacheIndex'] = bJ, bg[bJ] = bI, bg['pop'](), delete bH[bF];
      b4Z: {
        for (var bK in bH) break b4Z;delete bG[bi];
      }
    },
    '_lendBinding': function(bf) {
      var bg = this['_bindings'],
        bh = bf['_cacheIndex'],
        bi = this['_nActiveBindings']++,
        bF = bg[bi];
      bf['_cacheIndex'] = bi, bg[bi] = bf, bF['_cacheIndex'] = bh, bg[bh] = bF;
    },
    '_takeBackBinding': function(bf) {
      var bg = this['_bindings'],
        bh = bf['_cacheIndex'],
        bi = --this['_nActiveBindings'],
        bF = bg[bi];
      bf['_cacheIndex'] = bi, bg[bi] = bf, bF['_cacheIndex'] = bh, bg[bh] = bF;
    },
    '_lendControlInterpolant': function() {
      var bf = this['_controlInterpolants'],
        bg = this['_nActiveControlInterpolants']++,
        bh = bf[bg];
      return void 0x0 === bh && ((bh = new axX(new Float32Array(0x2), new Float32Array(0x2), 0x1, this['_controlInterpolantsResultBuffer']))['__cacheIndex'] = bg, bf[bg] = bh), bh;
    },
    '_takeBackControlInterpolant': function(bf) {
      var bg = this['_controlInterpolants'],
        bh = bf['__cacheIndex'],
        bi = --this['_nActiveControlInterpolants'],
        bF = bg[bi];
      bf['__cacheIndex'] = bi, bg[bi] = bf, bF['__cacheIndex'] = bh, bg[bh] = bF;
    },
    '_controlInterpolantsResultBuffer': new Float32Array(0x1),
    'clipAction': function(bf, bg) {
      var bh = bg || this['_root'],
        bi = bh['uuid'],
        bF = 'string' == typeof bf ? ayK['findByName'](bh, bf) : bf,
        bG = null !== bF ? bF['uuid'] : bf,
        bH = this['_actionsByClip'][bG],
        bI = null;
      if (void 0x0 !== bH) {
        var bJ = bH['actionByRoot'][bi];
        if (void 0x0 !== bJ) return bJ;
        bI = bH['knownActions'][0x0], null === bF && (bF = bI['_clip']);
      }
      if (null === bF) return null;
      var bK = new aW7(this, bF, bg);
      return this['_bindAction'](bK, bI), this['_addInactiveAction'](bK, bG, bi), bK;
    },
    'existingAction': function(bf, bg) {
      var bh = bg || this['_root'],
        bi = bh['uuid'],
        bF = 'string' == typeof bf ? ayK['findByName'](bh, bf) : bf,
        bG = bF ? bF['uuid'] : bf,
        bH = this['_actionsByClip'][bG];
      return void 0x0 !== bH && bH['actionByRoot'][bi] || null;
    },
    'stopAllAction': function() {
      var bf = this['_actions'],
        bg = this['_nActiveActions'],
        bh = this['_bindings'],
        bi = this['_nActiveBindings'];
      this['_nActiveActions'] = 0x0, this['_nActiveBindings'] = 0x0;
      for (var bF = 0x0; bF !== bg; ++bF) bf[bF]['reset']();
      for (bF = 0x0; bF !== bi; ++bF) bh[bF]['useCount'] = 0x0;
      return this;
    },
    'update': function(bf) {
      bf *= this['timeScale'];
      for (var bg = this['_actions'], bh = this['_nActiveActions'], bi = this['time'] += bf, bF = Math['sign'](bf), bG = this['_accuIndex'] ^= 0x1, bH = 0x0; bH !== bh; ++bH) {
        bg[bH]['_update'](bi, bf, bF, bG);
      }
      var bI = this['_bindings'],
        bJ = this['_nActiveBindings'];
      for (bH = 0x0; bH !== bJ; ++bH) bI[bH]['apply'](bG);
      return this;
    },
    'getRoot': function() {
      return this['_root'];
    },
    'uncacheClip': function(bf) {
      var bg = this['_actions'],
        bh = bf['uuid'],
        bi = this['_actionsByClip'],
        bF = bi[bh];
      if (void 0x0 !== bF) {
        for (var bG = bF['knownActions'], bH = 0x0, bI = bG['length']; bH !== bI; ++bH) {
          var bJ = bG[bH];
          this['_deactivateAction'](bJ);
          var bK = bJ['_cacheIndex'],
            bL = bg[bg['length'] - 0x1];
          bJ['_cacheIndex'] = null, bJ['_byClipCacheIndex'] = null, bL['_cacheIndex'] = bK, bg[bK] = bL, bg['pop'](), this['_removeInactiveBindingsForAction'](bJ);
        }
        delete bi[bh];
      }
    },
    'uncacheRoot': function(bf) {
      var bg = bf['uuid'],
        bh = this['_actionsByClip'];
      for (var bi in bh) {
        var bF = bh[bi]['actionByRoot'][bg];
        void 0x0 !== bF && (this['_deactivateAction'](bF), this['_removeInactiveAction'](bF));
      }
      var bG = this['_bindingsByRootAndName'][bg];
      if (void 0x0 !== bG)
        for (var bH in bG) {
          var bI = bG[bH];
          bI['restoreOriginalState'](), this['_removeInactiveBinding'](bI);
        }
    },
    'uncacheAction': function(bf, bg) {
      var bh = this['existingAction'](bf, bg);
      null !== bh && (this['_deactivateAction'](bh), this['_removeInactiveAction'](bh));
    }
  }), aWj['prototype']['clone'] = function() {
    return new aWj(void 0x0 === this['value']['clone'] ? this['value'] : this['value']['clone']());
  }, aWl['prototype'] = Object['assign'](Object['create'](aeb['prototype']), {
    'constructor': aWl,
    'isInstancedInterleavedBuffer': !0x0,
    'copy': function(bf) {
      return aeb['prototype']['copy']['call'](this, bf), this['meshPerAttribute'] = bf['meshPerAttribute'], this;
    }
  }), Object['assign'](aWp['prototype'], {
    'linePrecision': 0x1,
    'set': function(bf, bg) {
      this['ray']['set'](bf, bg);
    },
    'setFromCamera': function(bf, bg) {
      bg && bg['isPerspectiveCamera'] ? (this['ray']['origin']['setFromMatrixPosition'](bg['matrixWorld']), this['ray']['direction']['set'](bf['x'], bf['y'], 0.5)['unproject'](bg)['sub'](this['ray']['origin'])['normalize']()) : bg && bg['isOrthographicCamera'] ? (this['ray']['origin']['set'](bf['x'], bf['y'], (bg['near'] + bg['far']) / (bg['near'] - bg['far']))['unproject'](bg), this['ray']['direction']['set'](0x0, 0x0, -0x1)['transformDirection'](bg['matrixWorld'])) : console['error']('THREE.Raycaster:\x20Unsupported\x20camera\x20type.');
    },
    'intersectObject': function(bf, bg, bh) {
      var bi = bh || [];
      return aWx(bf, this, bi, bg), bi['sort'](aWu), bi;
    },
    'intersectObjects': function(bf, bg, bh) {
      var bi = bh || [];
      if (!0x1 === Array['isArray'](bf)) return console['warn']('THREE.Raycaster.intersectObjects:\x20objects\x20is\x20not\x20an\x20Array.'), bi;
      for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) aWx(bf[bF], this, bi, bg);
      return bi['sort'](aWu), bi;
    }
  }), Object['assign'](aWF['prototype'], {
    'set': function(bf, bg, bh) {
      return this['radius'] = bf, this['phi'] = bg, this['theta'] = bh, this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['radius'] = bf['radius'], this['phi'] = bf['phi'], this['theta'] = bf['theta'], this;
    },
    'makeSafe': function() {
      return this['phi'] = Math['max'](0.000001, Math['min'](Math['PI'] - 0.000001, this['phi'])), this;
    },
    'setFromVector3': function(bf) {
      return this['setFromCartesianCoords'](bf['x'], bf['y'], bf['z']);
    },
    'setFromCartesianCoords': function(bf, bg, bh) {
      return this['radius'] = Math['sqrt'](bf * bf + bg * bg + bh * bh), 0x0 === this['radius'] ? (this['theta'] = 0x0, this['phi'] = 0x0) : (this['theta'] = Math['atan2'](bf, bh), this['phi'] = Math['acos'](e2['clamp'](bg / this['radius'], -0x1, 0x1))), this;
    }
  }), Object['assign'](aWJ['prototype'], {
    'set': function(bf, bg, bh) {
      return this['radius'] = bf, this['theta'] = bg, this['y'] = bh, this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['radius'] = bf['radius'], this['theta'] = bf['theta'], this['y'] = bf['y'], this;
    },
    'setFromVector3': function(bf) {
      return this['setFromCartesianCoords'](bf['x'], bf['y'], bf['z']);
    },
    'setFromCartesianCoords': function(bf, bg, bh) {
      return this['radius'] = Math['sqrt'](bf * bf + bh * bh), this['theta'] = Math['atan2'](bf, bh), this['y'] = bg, this;
    }
  }), Object['assign'](aWN['prototype'], {
    'set': function(bf, bg) {
      return this['min']['copy'](bf), this['max']['copy'](bg), this;
    },
    'setFromPoints': function(bf) {
      this['makeEmpty']();
      for (var bg = 0x0, bh = bf['length']; bg < bh; bg++) this['expandByPoint'](bf[bg]);
      return this;
    },
    'setFromCenterAndSize': function() {
      var bf = new eC();
      return function(bg, bh) {
        var bi = bf['copy'](bh)['multiplyScalar'](0.5);
        return this['min']['copy'](bg)['sub'](bi), this['max']['copy'](bg)['add'](bi), this;
      };
    }(),
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['min']['copy'](bf['min']), this['max']['copy'](bf['max']), this;
    },
    'makeEmpty': function() {
      return this['min']['x'] = this['min']['y'] = 0x1 / 0x0, this['max']['x'] = this['max']['y'] = -0x1 / 0x0, this;
    },
    'isEmpty': function() {
      return this['max']['x'] < this['min']['x'] || this['max']['y'] < this['min']['y'];
    },
    'getCenter': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Box2:\x20.getCenter()\x20target\x20is\x20now\x20required'), bf = new eC()), this['isEmpty']() ? bf['set'](0x0, 0x0) : bf['addVectors'](this['min'], this['max'])['multiplyScalar'](0.5);
    },
    'getSize': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Box2:\x20.getSize()\x20target\x20is\x20now\x20required'), bf = new eC()), this['isEmpty']() ? bf['set'](0x0, 0x0) : bf['subVectors'](this['max'], this['min']);
    },
    'expandByPoint': function(bf) {
      return this['min']['min'](bf), this['max']['max'](bf), this;
    },
    'expandByVector': function(bf) {
      return this['min']['sub'](bf), this['max']['add'](bf), this;
    },
    'expandByScalar': function(bf) {
      return this['min']['addScalar'](-bf), this['max']['addScalar'](bf), this;
    },
    'containsPoint': function(bf) {
      return !(bf['x'] < this['min']['x'] || bf['x'] > this['max']['x'] || bf['y'] < this['min']['y'] || bf['y'] > this['max']['y']);
    },
    'containsBox': function(bf) {
      return this['min']['x'] <= bf['min']['x'] && bf['max']['x'] <= this['max']['x'] && this['min']['y'] <= bf['min']['y'] && bf['max']['y'] <= this['max']['y'];
    },
    'getParameter': function(bf, bg) {
      return void 0x0 === bg && (console['warn']('THREE.Box2:\x20.getParameter()\x20target\x20is\x20now\x20required'), bg = new eC()), bg['set']((bf['x'] - this['min']['x']) / (this['max']['x'] - this['min']['x']), (bf['y'] - this['min']['y']) / (this['max']['y'] - this['min']['y']));
    },
    'intersectsBox': function(bf) {
      return !(bf['max']['x'] < this['min']['x'] || bf['min']['x'] > this['max']['x'] || bf['max']['y'] < this['min']['y'] || bf['min']['y'] > this['max']['y']);
    },
    'clampPoint': function(bf, bg) {
      return void 0x0 === bg && (console['warn']('THREE.Box2:\x20.clampPoint()\x20target\x20is\x20now\x20required'), bg = new eC()), bg['copy'](bf)['clamp'](this['min'], this['max']);
    },
    'distanceToPoint': function() {
      var bf = new eC();
      return function(bg) {
        return bf['copy'](bg)['clamp'](this['min'], this['max'])['sub'](bg)['length']();
      };
    }(),
    'intersect': function(bf) {
      return this['min']['max'](bf['min']), this['max']['min'](bf['max']), this;
    },
    'union': function(bf) {
      return this['min']['min'](bf['min']), this['max']['max'](bf['max']), this;
    },
    'translate': function(bf) {
      return this['min']['add'](bf), this['max']['add'](bf), this;
    },
    'equals': function(bf) {
      return bf['min']['equals'](this['min']) && bf['max']['equals'](this['max']);
    }
  }), Object['assign'](aWQ['prototype'], {
    'set': function(bf, bg) {
      return this['start']['copy'](bf), this['end']['copy'](bg), this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    },
    'copy': function(bf) {
      return this['start']['copy'](bf['start']), this['end']['copy'](bf['end']), this;
    },
    'getCenter': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Line3:\x20.getCenter()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['addVectors'](this['start'], this['end'])['multiplyScalar'](0.5);
    },
    'delta': function(bf) {
      return void 0x0 === bf && (console['warn']('THREE.Line3:\x20.delta()\x20target\x20is\x20now\x20required'), bf = new eK()), bf['subVectors'](this['end'], this['start']);
    },
    'distanceSq': function() {
      return this['start']['distanceToSquared'](this['end']);
    },
    'distance': function() {
      return this['start']['distanceTo'](this['end']);
    },
    'at': function(bf, bg) {
      return void 0x0 === bg && (console['warn']('THREE.Line3:\x20.at()\x20target\x20is\x20now\x20required'), bg = new eK()), this['delta'](bg)['multiplyScalar'](bf)['add'](this['start']);
    },
    'closestPointToPointParameter': (aVN = new eK(), aVO = new eK(), function(bf, bg) {
      aVN['subVectors'](bf, this['start']), aVO['subVectors'](this['end'], this['start']);
      var bh = aVO['dot'](aVO),
        bi = aVO['dot'](aVN) / bh;
      return bg && (bi = e2['clamp'](bi, 0x0, 0x1)), bi;
    }),
    'closestPointToPoint': function(bf, bg, bh) {
      var bi = this['closestPointToPointParameter'](bf, bg);
      return void 0x0 === bh && (console['warn']('THREE.Line3:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'), bh = new eK()), this['delta'](bh)['multiplyScalar'](bi)['add'](this['start']);
    },
    'applyMatrix4': function(bf) {
      return this['start']['applyMatrix4'](bf), this['end']['applyMatrix4'](bf), this;
    },
    'equals': function(bf) {
      return bf['start']['equals'](this['start']) && bf['end']['equals'](this['end']);
    }
  }), aWT['prototype'] = Object['create'](yT['prototype']), aWT['prototype']['constructor'] = aWT, aWT['prototype']['isImmediateRenderObject'] = !0x0, aWV['prototype'] = Object['create'](aeE['prototype']), aWV['prototype']['constructor'] = aWV, aWV['prototype']['update'] = function() {
    var bf = new eK(),
      bg = new eK(),
      bh = new eO();
    return function() {
      var bi = ['a', 'b', 'c'];
      this['object']['updateMatrixWorld'](!0x0), bh['getNormalMatrix'](this['object']['matrixWorld']);
      var bF = this['object']['matrixWorld'],
        bG = this['geometry']['attributes']['position'],
        bH = this['object']['geometry'];
      if (bH && bH['isGeometry'])
        for (var bI = bH['vertices'], bJ = bH['faces'], bK = 0x0, bL = 0x0, bM = bJ['length']; bL < bM; bL++)
          for (var bN = bJ[bL], bO = 0x0, bP = bN['vertexNormals']['length']; bO < bP; bO++) {
            var bQ = bI[bN[bi[bO]]],
              bR = bN['vertexNormals'][bO];
            bf['copy'](bQ)['applyMatrix4'](bF), bg['copy'](bR)['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf), bG['setXYZ'](bK, bf['x'], bf['y'], bf['z']), bK += 0x1, bG['setXYZ'](bK, bg['x'], bg['y'], bg['z']), bK += 0x1;
          } else if (bH && bH['isBufferGeometry']) {
            var bS = bH['attributes']['position'],
              bT = bH['attributes']['normal'];
            for (bK = 0x0, bO = 0x0, bP = bS['count']; bO < bP; bO++) bf['set'](bS['getX'](bO), bS['getY'](bO), bS['getZ'](bO))['applyMatrix4'](bF), bg['set'](bT['getX'](bO), bT['getY'](bO), bT['getZ'](bO)), bg['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf), bG['setXYZ'](bK, bf['x'], bf['y'], bf['z']), bK += 0x1, bG['setXYZ'](bK, bg['x'], bg['y'], bg['z']), bK += 0x1;
          } bG['needsUpdate'] = !0x0;
    };
  }(), aX6['prototype'] = Object['create'](yT['prototype']), aX6['prototype']['constructor'] = aX6, aX6['prototype']['dispose'] = function() {
    this['cone']['geometry']['dispose'](), this['cone']['material']['dispose']();
  }, aX6['prototype']['update'] = function() {
    var bf = new eK();
    return function() {
      this['light']['updateMatrixWorld']();
      var bg = this['light']['distance'] ? this['light']['distance'] : 0x3e8,
        bh = bg * Math['tan'](this['light']['angle']);
      this['cone']['scale']['set'](bh, bh, bg), bf['setFromMatrixPosition'](this['light']['target']['matrixWorld']), this['cone']['lookAt'](bf), void 0x0 !== this['color'] ? this['cone']['material']['color']['set'](this['color']) : this['cone']['material']['color']['copy'](this['light']['color']);
    };
  }(), aXg['prototype'] = Object['create'](aeE['prototype']), aXg['prototype']['constructor'] = aXg, aXg['prototype']['updateMatrixWorld'] = function() {
    var bf = new eK(),
      bg = new mR(),
      bh = new mR();
    return function(bi) {
      var bF = this['bones'],
        bG = this['geometry'],
        bH = bG['getAttribute']('position');
      bh['getInverse'](this['root']['matrixWorld']);
      for (var bI = 0x0, bJ = 0x0; bI < bF['length']; bI++) {
        var bK = bF[bI];
        bK['parent'] && bK['parent']['isBone'] && (bg['multiplyMatrices'](bh, bK['matrixWorld']), bf['setFromMatrixPosition'](bg), bH['setXYZ'](bJ, bf['x'], bf['y'], bf['z']), bg['multiplyMatrices'](bh, bK['parent']['matrixWorld']), bf['setFromMatrixPosition'](bg), bH['setXYZ'](bJ + 0x1, bf['x'], bf['y'], bf['z']), bJ += 0x2);
      }
      bG['getAttribute']('position')['needsUpdate'] = !0x0, yT['prototype']['updateMatrixWorld']['call'](this, bi);
    };
  }(), aXu['prototype'] = Object['create'](KY['prototype']), aXu['prototype']['constructor'] = aXu, aXu['prototype']['dispose'] = function() {
    this['geometry']['dispose'](), this['material']['dispose']();
  }, aXu['prototype']['update'] = function() {
    void 0x0 !== this['color'] ? this['material']['color']['set'](this['color']) : this['material']['color']['copy'](this['light']['color']);
  }, aXA['prototype'] = Object['create'](aeA['prototype']), aXA['prototype']['constructor'] = aXA, aXA['prototype']['update'] = function() {
    if (this['scale']['set'](0.5 * this['light']['width'], 0.5 * this['light']['height'], 0x1), void 0x0 !== this['color']) this['material']['color']['set'](this['color']), this['children'][0x0]['material']['color']['set'](this['color']);
    else {
      this['material']['color']['copy'](this['light']['color'])['multiplyScalar'](this['light']['intensity']);
      var bf = this['material']['color'],
        bg = Math['max'](bf['r'], bf['g'], bf['b']);
      bg > 0x1 && bf['multiplyScalar'](0x1 / bg), this['children'][0x0]['material']['color']['copy'](this['material']['color']);
    }
  }, aXA['prototype']['dispose'] = function() {
    this['geometry']['dispose'](), this['material']['dispose'](), this['children'][0x0]['geometry']['dispose'](), this['children'][0x0]['material']['dispose']();
  }, aXG['prototype'] = Object['create'](yT['prototype']), aXG['prototype']['constructor'] = aXG, aXG['prototype']['dispose'] = function() {
    this['children'][0x0]['geometry']['dispose'](), this['children'][0x0]['material']['dispose']();
  }, aXG['prototype']['update'] = function() {
    var bf = new eK(),
      bg = new w7(),
      bh = new w7();
    return function() {
      var bi = this['children'][0x0];
      if (void 0x0 !== this['color']) this['material']['color']['set'](this['color']);
      else {
        var bF = bi['geometry']['getAttribute']('color');
        bg['copy'](this['light']['color']), bh['copy'](this['light']['groundColor']);
        for (var bG = 0x0, bH = bF['count']; bG < bH; bG++) {
          var bI = bG < bH / 0x2 ? bg : bh;
          bF['setXYZ'](bG, bI['r'], bI['g'], bI['b']);
        }
        bF['needsUpdate'] = !0x0;
      }
      bi['lookAt'](bf['setFromMatrixPosition'](this['light']['matrixWorld'])['negate']());
    };
  }(), aXN['prototype'] = Object['create'](KY['prototype']), aXN['prototype']['constructor'] = aXN, aXN['prototype']['dispose'] = function() {
    this['geometry']['dispose'](), this['material']['dispose']();
  }, aXN['prototype']['onBeforeRender'] = function() {
    this['position']['copy'](this['lightProbe']['position']), this['scale']['set'](0x1, 0x1, 0x1)['multiplyScalar'](this['size']), this['material']['uniforms']['intensity']['value'] = this['lightProbe']['intensity'];
  }, aXT['prototype'] = Object['assign'](Object['create'](aeE['prototype']), {
    'constructor': aXT,
    'copy': function(bf) {
      return aeE['prototype']['copy']['call'](this, bf), this['geometry']['copy'](bf['geometry']), this['material']['copy'](bf['material']), this;
    },
    'clone': function() {
      return new this['constructor']()['copy'](this);
    }
  }), aY9['prototype'] = Object['create'](aeE['prototype']), aY9['prototype']['constructor'] = aY9, aYr['prototype'] = Object['create'](aeA['prototype']), aYr['prototype']['constructor'] = aYr, aYr['prototype']['update'] = function() {
    var bf, bg, bh = this['audio'],
      bi = this['range'],
      bF = this['divisionsInnerAngle'],
      bG = this['divisionsOuterAngle'],
      bH = e2['degToRad'](bh['panner']['coneInnerAngle']),
      bI = e2['degToRad'](bh['panner']['coneOuterAngle']),
      bJ = bH / 0x2,
      bK = bI / 0x2,
      bL = 0x0,
      bM = 0x0,
      bN = this['geometry'],
      bO = bN['attributes']['position'];

    function bP(bh, bF, bG, bH) {
      var bI = (bF - bh) / bG;
      for (bO['setXYZ'](bL, 0x0, 0x0, 0x0), bM++, bf = bh; bf < bF; bf += bI) bg = bL + bM, bO['setXYZ'](bg, Math['sin'](bf) * bi, 0x0, Math['cos'](bf) * bi), bO['setXYZ'](bg + 0x1, Math['sin'](Math['min'](bf + bI, bF)) * bi, 0x0, Math['cos'](Math['min'](bf + bI, bF)) * bi), bO['setXYZ'](bg + 0x2, 0x0, 0x0, 0x0), bM += 0x3;
      bN['addGroup'](bL, bM, bH), bL += bM, bM = 0x0;
    }
    bN['clearGroups'](), bP(-bK, -bJ, bG, 0x0), bP(-bJ, bJ, bF, 0x1), bP(bJ, bK, bG, 0x0), bO['needsUpdate'] = !0x0, bH === bI && (this['material'][0x0]['visible'] = !0x1);
  }, aYr['prototype']['dispose'] = function() {
    this['geometry']['dispose'](), this['material'][0x0]['dispose'](), this['material'][0x1]['dispose']();
  }, aYB['prototype'] = Object['create'](aeE['prototype']), aYB['prototype']['constructor'] = aYB, aYB['prototype']['update'] = function() {
    var bf = new eK(),
      bg = new eK(),
      bh = new eO();
    return function() {
      this['object']['updateMatrixWorld'](!0x0), bh['getNormalMatrix'](this['object']['matrixWorld']);
      for (var bi = this['object']['matrixWorld'], bF = this['geometry']['attributes']['position'], bG = this['object']['geometry'], bH = bG['vertices'], bI = bG['faces'], bJ = 0x0, bK = 0x0, bL = bI['length']; bK < bL; bK++) {
        var bM = bI[bK],
          bN = bM['normal'];
        bf['copy'](bH[bM['a']])['add'](bH[bM['b']])['add'](bH[bM['c']])['divideScalar'](0x3)['applyMatrix4'](bi), bg['copy'](bN)['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf), bF['setXYZ'](bJ, bf['x'], bf['y'], bf['z']), bJ += 0x1, bF['setXYZ'](bJ, bg['x'], bg['y'], bg['z']), bJ += 0x1;
      }
      bF['needsUpdate'] = !0x0;
    };
  }(), aYM['prototype'] = Object['create'](yT['prototype']), aYM['prototype']['constructor'] = aYM, aYM['prototype']['dispose'] = function() {
    this['lightPlane']['geometry']['dispose'](), this['lightPlane']['material']['dispose'](), this['targetLine']['geometry']['dispose'](), this['targetLine']['material']['dispose']();
  }, aYM['prototype']['update'] = function() {
    var bf = new eK(),
      bg = new eK(),
      bh = new eK();
    return function() {
      bf['setFromMatrixPosition'](this['light']['matrixWorld']), bg['setFromMatrixPosition'](this['light']['target']['matrixWorld']), bh['subVectors'](bg, bf), this['lightPlane']['lookAt'](bg), void 0x0 !== this['color'] ? (this['lightPlane']['material']['color']['set'](this['color']), this['targetLine']['material']['color']['set'](this['color'])) : (this['lightPlane']['material']['color']['copy'](this['light']['color']), this['targetLine']['material']['color']['copy'](this['light']['color'])), this['targetLine']['lookAt'](bg), this['targetLine']['scale']['z'] = bh['length']();
    };
  }(), aYS['prototype'] = Object['create'](aeE['prototype']), aYS['prototype']['constructor'] = aYS, aYS['prototype']['update'] = function() {
    var bf, bg, bh = new eK(),
      bi = new a67();

    function bF(bF, bG, bH, bI) {
      bh['set'](bG, bH, bI)['unproject'](bi);
      var bJ = bg[bF];
      if (void 0x0 !== bJ)
        for (var bK = bf['getAttribute']('position'), bL = 0x0, bM = bJ['length']; bL < bM; bL++) bK['setXYZ'](bJ[bL], bh['x'], bh['y'], bh['z']);
    }
    return function() {
      bf = this['geometry'], bg = this['pointMap'];
      bi['projectionMatrixInverse']['copy'](this['camera']['projectionMatrixInverse']), bF('c', 0x0, 0x0, -0x1), bF('t', 0x0, 0x0, 0x1), bF('n1', -0x1, -0x1, -0x1), bF('n2', 0x1, -0x1, -0x1), bF('n3', -0x1, 0x1, -0x1), bF('n4', 0x1, 0x1, -0x1), bF('f1', -0x1, -0x1, 0x1), bF('f2', 0x1, -0x1, 0x1), bF('f3', -0x1, 0x1, 0x1), bF('f4', 0x1, 0x1, 0x1), bF('u1', 0.7, 1.1, -0x1), bF('u2', -0.7, 1.1, -0x1), bF('u3', 0x0, 0x2, -0x1), bF('cf1', -0x1, 0x0, 0x1), bF('cf2', 0x1, 0x0, 0x1), bF('cf3', 0x0, -0x1, 0x1), bF('cf4', 0x0, 0x1, 0x1), bF('cn1', -0x1, 0x0, -0x1), bF('cn2', 0x1, 0x0, -0x1), bF('cn3', 0x0, -0x1, -0x1), bF('cn4', 0x0, 0x1, -0x1), bf['getAttribute']('position')['needsUpdate'] = !0x0;
    };
  }(), aZb['prototype'] = Object['create'](aeE['prototype']), aZb['prototype']['constructor'] = aZb, aZb['prototype']['update'] = function() {
    var bf = new mB();
    return function(bg) {
      if (void 0x0 !== bg && console['warn']('THREE.BoxHelper:\x20.update()\x20has\x20no\x20longer\x20arguments.'), void 0x0 !== this['object'] && bf['setFromObject'](this['object']), !bf['isEmpty']()) {
        var bh = bf['min'],
          bi = bf['max'],
          bF = this['geometry']['attributes']['position'],
          bG = bF['array'];
        bG[0x0] = bi['x'], bG[0x1] = bi['y'], bG[0x2] = bi['z'], bG[0x3] = bh['x'], bG[0x4] = bi['y'], bG[0x5] = bi['z'], bG[0x6] = bh['x'], bG[0x7] = bh['y'], bG[0x8] = bi['z'], bG[0x9] = bi['x'], bG[0xa] = bh['y'], bG[0xb] = bi['z'], bG[0xc] = bi['x'], bG[0xd] = bi['y'], bG[0xe] = bh['z'], bG[0xf] = bh['x'], bG[0x10] = bi['y'], bG[0x11] = bh['z'], bG[0x12] = bh['x'], bG[0x13] = bh['y'], bG[0x14] = bh['z'], bG[0x15] = bi['x'], bG[0x16] = bh['y'], bG[0x17] = bh['z'], bF['needsUpdate'] = !0x0, this['geometry']['computeBoundingSphere']();
      }
    };
  }(), aZb['prototype']['setFromObject'] = function(bf) {
    return this['object'] = bf, this['update'](), this;
  }, aZb['prototype']['copy'] = function(bf) {
    return aeE['prototype']['copy']['call'](this, bf), this['object'] = bf['object'], this;
  }, aZb['prototype']['clone'] = function() {
    return new this['constructor']()['copy'](this);
  }, aZh['prototype'] = Object['create'](aeE['prototype']), aZh['prototype']['constructor'] = aZh, aZh['prototype']['updateMatrixWorld'] = function(bf) {
    var bg = this['box'];
    bg['isEmpty']() || (bg['getCenter'](this['position']), bg['getSize'](this['scale']), this['scale']['multiplyScalar'](0.5), yT['prototype']['updateMatrixWorld']['call'](this, bf));
  }, aZn['prototype'] = Object['create'](aeA['prototype']), aZn['prototype']['constructor'] = aZn, aZn['prototype']['updateMatrixWorld'] = function(bf) {
    var bg = -this['plane']['constant'];
    Math['abs'](bg) < 1e-8 && (bg = 1e-8), this['scale']['set'](0.5 * this['size'], 0.5 * this['size'], bg), this['children'][0x0]['material']['side'] = bg < 0x0 ? bU : bT, this['lookAt'](this['plane']['normal']), yT['prototype']['updateMatrixWorld']['call'](this, bf);
  }, aZu['prototype'] = Object['create'](yT['prototype']), aZu['prototype']['constructor'] = aZu, aZu['prototype']['setDirection'] = (aVS = new eK(), function(bf) {
    bf['y'] > 0.99999 ? this['quaternion']['set'](0x0, 0x0, 0x0, 0x1) : bf['y'] < -0.99999 ? this['quaternion']['set'](0x1, 0x0, 0x0, 0x0) : (aVS['set'](bf['z'], 0x0, -bf['x'])['normalize'](), aVR = Math['acos'](bf['y']), this['quaternion']['setFromAxisAngle'](aVS, aVR));
  }), aZu['prototype']['setLength'] = function(bf, bg, bh) {
    void 0x0 === bg && (bg = 0.2 * bf), void 0x0 === bh && (bh = 0.2 * bg), this['line']['scale']['set'](0x1, Math['max'](0x0, bf - bg), 0x1), this['line']['updateMatrix'](), this['cone']['scale']['set'](bh, bg, bh), this['cone']['position']['y'] = bf, this['cone']['updateMatrix']();
  }, aZu['prototype']['setColor'] = function(bf) {
    this['line']['material']['color']['copy'](bf), this['cone']['material']['color']['copy'](bf);
  }, aZu['prototype']['copy'] = function(bf) {
    return yT['prototype']['copy']['call'](this, bf, !0x1), this['line']['copy'](bf['line']), this['cone']['copy'](bf['cone']), this;
  }, aZu['prototype']['clone'] = function() {
    return new this['constructor']()['copy'](this);
  }, aZB['prototype'] = Object['create'](aeE['prototype']), aZB['prototype']['constructor'] = aZB;
  var b9a = 0x0,
    b9b = 0x1;

  function b9c(bf) {
    return console['warn']('THREE.MeshFaceMaterial\x20has\x20been\x20removed.\x20Use\x20an\x20Array\x20instead.'), bf;
  }

  function b9e(bf) {
    return void 0x0 === bf && (bf = []), console['warn']('THREE.MultiMaterial\x20has\x20been\x20removed.\x20Use\x20an\x20Array\x20instead.'), bf['isMultiMaterial'] = !0x0, bf['materials'] = bf, bf['clone'] = function() {
      return bf['slice']();
    }, bf;
  }

  function b9g(bf, bg) {
    return console['warn']('THREE.PointCloud\x20has\x20been\x20renamed\x20to\x20THREE.Points.'), new aeM(bf, bg);
  }

  function b9j(bf) {
    return console['warn']('THREE.Particle\x20has\x20been\x20renamed\x20to\x20THREE.Sprite.'), new ael(bf);
  }

  function b9l(bf, bg) {
    return console['warn']('THREE.ParticleSystem\x20has\x20been\x20renamed\x20to\x20THREE.Points.'), new aeM(bf, bg);
  }

  function b9o(bf) {
    return console['warn']('THREE.PointCloudMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'), new aeK(bf);
  }

  function b9q(bf) {
    return console['warn']('THREE.ParticleBasicMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'), new aeK(bf);
  }

  function b9s(bf) {
    return console['warn']('THREE.ParticleSystemMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'), new aeK(bf);
  }

  function b9u(bf, bg, bh) {
    return console['warn']('THREE.Vertex\x20has\x20been\x20removed.\x20Use\x20THREE.Vector3\x20instead.'), new eK(bf, bg, bh);
  }

  function b9y(bf, bg) {
    return console['warn']('THREE.DynamicBufferAttribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.BufferAttribute().setDynamic(\x20true\x20)\x20instead.'), new AI(bf, bg)['setDynamic'](!0x0);
  }

  function b9B(bf, bg) {
    return console['warn']('THREE.Int8Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int8BufferAttribute()\x20instead.'), new AM(bf, bg);
  }

  function b9E(bf, bg) {
    return console['warn']('THREE.Uint8Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint8BufferAttribute()\x20instead.'), new AQ(bf, bg);
  }

  function b9H(bf, bg) {
    return console['warn']('THREE.Uint8ClampedAttribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint8ClampedBufferAttribute()\x20instead.'), new AU(bf, bg);
  }

  function b9K(bf, bg) {
    return console['warn']('THREE.Int16Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int16BufferAttribute()\x20instead.'), new AY(bf, bg);
  }

  function b9N(bf, bg) {
    return console['warn']('THREE.Uint16Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint16BufferAttribute()\x20instead.'), new B2(bf, bg);
  }

  function b9Q(bf, bg) {
    return console['warn']('THREE.Int32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int32BufferAttribute()\x20instead.'), new B6(bf, bg);
  }

  function b9T(bf, bg) {
    return console['warn']('THREE.Uint32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint32BufferAttribute()\x20instead.'), new Ba(bf, bg);
  }

  function b9W(bf, bg) {
    return console['warn']('THREE.Float32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Float32BufferAttribute()\x20instead.'), new Be(bf, bg);
  }

  function b9Z(bf, bg) {
    return console['warn']('THREE.Float64Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Float64BufferAttribute()\x20instead.'), new Bi(bf, bg);
  }

  function ba2(bf) {
    console['warn']('THREE.ClosedSplineCurve3\x20has\x20been\x20deprecated.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'), aGw['call'](this, bf), this['type'] = 'catmullrom', this['closed'] = !0x0;
  }

  function ba4(bf) {
    console['warn']('THREE.SplineCurve3\x20has\x20been\x20deprecated.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'), aGw['call'](this, bf), this['type'] = 'catmullrom';
  }

  function ba6(bf) {
    console['warn']('THREE.Spline\x20has\x20been\x20removed.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'), aGw['call'](this, bf), this['type'] = 'catmullrom';
  }

  function ba8(bf) {
    return console['warn']('THREE.AxisHelper\x20has\x20been\x20renamed\x20to\x20THREE.AxesHelper.'), new aZB(bf);
  }

  function baa(bf, bg) {
    return console['warn']('THREE.BoundingBoxHelper\x20has\x20been\x20deprecated.\x20Creating\x20a\x20THREE.BoxHelper\x20instead.'), new aZb(bf, bg);
  }

  function bad(bf, bg) {
    return console['warn']('THREE.EdgesHelper\x20has\x20been\x20removed.\x20Use\x20THREE.EdgesGeometry\x20instead.'), new aeE(new auW(bf['geometry']), new aey({
      'color': void 0x0 !== bg ? bg : 0xffffff
    }));
  }

  function bag(bf, bg) {
    return console['warn']('THREE.WireframeHelper\x20has\x20been\x20removed.\x20Use\x20THREE.WireframeGeometry\x20instead.'), new aeE(new afx(bf['geometry']), new aey({
      'color': void 0x0 !== bg ? bg : 0xffffff
    }));
  }

  function baj(bf) {
    return console['warn']('THREE.XHRLoader\x20has\x20been\x20renamed\x20to\x20THREE.FileLoader.'), new aCv(bf);
  }

  function bal(bf) {
    return console['warn']('THREE.BinaryTextureLoader\x20has\x20been\x20renamed\x20to\x20THREE.DataTextureLoader.'), new aCB(bf);
  }
  aCJ['create'] = function(bf, bg) {
    return console['log']('THREE.Curve.create()\x20has\x20been\x20deprecated'), bf['prototype'] = Object['create'](aCJ['prototype']), bf['prototype']['constructor'] = bf, bf['prototype']['getPoint'] = bg, bf;
  }, Object['assign'](aJk['prototype'], {
    'createPointsGeometry': function(bf) {
      console['warn']('THREE.CurvePath:\x20.createPointsGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
      var bg = this['getPoints'](bf);
      return this['createGeometry'](bg);
    },
    'createSpacedPointsGeometry': function(bf) {
      console['warn']('THREE.CurvePath:\x20.createSpacedPointsGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
      var bg = this['getSpacedPoints'](bf);
      return this['createGeometry'](bg);
    },
    'createGeometry': function(bf) {
      console['warn']('THREE.CurvePath:\x20.createGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
      for (var bg = new AH(), bh = 0x0, bi = bf['length']; bh < bi; bh++) {
        var bF = bf[bh];
        bg['vertices']['push'](new eK(bF['x'], bF['y'], bF['z'] || 0x0));
      }
      return bg;
    }
  }), Object['assign'](aJl['prototype'], {
    'fromPoints': function(bf) {
      console['warn']('THREE.Path:\x20.fromPoints()\x20has\x20been\x20renamed\x20to\x20.setFromPoints().'), this['setFromPoints'](bf);
    }
  }), ba2['prototype'] = Object['create'](aGw['prototype']), ba4['prototype'] = Object['create'](aGw['prototype']), ba6['prototype'] = Object['create'](aGw['prototype']), Object['assign'](ba6['prototype'], {
    'initFromArray': function() {
      console['error']('THREE.Spline:\x20.initFromArray()\x20has\x20been\x20removed.');
    },
    'getControlPointsArray': function() {
      console['error']('THREE.Spline:\x20.getControlPointsArray()\x20has\x20been\x20removed.');
    },
    'reparametrizeByArcLength': function() {
      console['error']('THREE.Spline:\x20.reparametrizeByArcLength()\x20has\x20been\x20removed.');
    }
  }), aXT['prototype']['setColors'] = function() {
    console['error']('THREE.GridHelper:\x20setColors()\x20has\x20been\x20deprecated,\x20pass\x20them\x20in\x20the\x20constructor\x20instead.');
  }, aXg['prototype']['update'] = function() {
    console['error']('THREE.SkeletonHelper:\x20update()\x20no\x20longer\x20needs\x20to\x20be\x20called.');
  }, Object['assign'](aPW['prototype'], {
    'extractUrlBase': function(bf) {
      return console['warn']('THREE.Loader:\x20.extractUrlBase()\x20has\x20been\x20deprecated.\x20Use\x20THREE.LoaderUtils.extractUrlBase()\x20instead.'), aMX['extractUrlBase'](bf);
    }
  }), Object['assign'](aNJ['prototype'], {
    'setTexturePath': function(bf) {
      return console['warn']('THREE.ObjectLoader:\x20.setTexturePath()\x20has\x20been\x20renamed\x20to\x20.setResourcePath().'), this['setResourcePath'](bf);
    }
  }), Object['assign'](aWN['prototype'], {
    'center': function(bf) {
      return console['warn']('THREE.Box2:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'), this['getCenter'](bf);
    },
    'empty': function() {
      return console['warn']('THREE.Box2:\x20.empty()\x20has\x20been\x20renamed\x20to\x20.isEmpty().'), this['isEmpty']();
    },
    'isIntersectionBox': function(bf) {
      return console['warn']('THREE.Box2:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'), this['intersectsBox'](bf);
    },
    'size': function(bf) {
      return console['warn']('THREE.Box2:\x20.size()\x20has\x20been\x20renamed\x20to\x20.getSize().'), this['getSize'](bf);
    }
  }), Object['assign'](mB['prototype'], {
    'center': function(bf) {
      return console['warn']('THREE.Box3:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'), this['getCenter'](bf);
    },
    'empty': function() {
      return console['warn']('THREE.Box3:\x20.empty()\x20has\x20been\x20renamed\x20to\x20.isEmpty().'), this['isEmpty']();
    },
    'isIntersectionBox': function(bf) {
      return console['warn']('THREE.Box3:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'), this['intersectsBox'](bf);
    },
    'isIntersectionSphere': function(bf) {
      return console['warn']('THREE.Box3:\x20.isIntersectionSphere()\x20has\x20been\x20renamed\x20to\x20.intersectsSphere().'), this['intersectsSphere'](bf);
    },
    'size': function(bf) {
      return console['warn']('THREE.Box3:\x20.size()\x20has\x20been\x20renamed\x20to\x20.getSize().'), this['getSize'](bf);
    }
  }), aWQ['prototype']['center'] = function(bf) {
    return console['warn']('THREE.Line3:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'), this['getCenter'](bf);
  }, Object['assign'](e2, {
    'random16': function() {
      return console['warn']('THREE.Math:\x20.random16()\x20has\x20been\x20deprecated.\x20Use\x20Math.random()\x20instead.'), Math['random']();
    },
    'nearestPowerOfTwo': function(bf) {
      return console['warn']('THREE.Math:\x20.nearestPowerOfTwo()\x20has\x20been\x20renamed\x20to\x20.floorPowerOfTwo().'), e2['floorPowerOfTwo'](bf);
    },
    'nextPowerOfTwo': function(bf) {
      return console['warn']('THREE.Math:\x20.nextPowerOfTwo()\x20has\x20been\x20renamed\x20to\x20.ceilPowerOfTwo().'), e2['ceilPowerOfTwo'](bf);
    }
  }), Object['assign'](eO['prototype'], {
    'flattenToArrayOffset': function(bf, bg) {
      return console['warn']('THREE.Matrix3:\x20.flattenToArrayOffset()\x20has\x20been\x20deprecated.\x20Use\x20.toArray()\x20instead.'), this['toArray'](bf, bg);
    },
    'multiplyVector3': function(bf) {
      return console['warn']('THREE.Matrix3:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix3(\x20matrix\x20)\x20instead.'), bf['applyMatrix3'](this);
    },
    'multiplyVector3Array': function() {
      console['error']('THREE.Matrix3:\x20.multiplyVector3Array()\x20has\x20been\x20removed.');
    },
    'applyToBuffer': function(bf) {
      return console['warn']('THREE.Matrix3:\x20.applyToBuffer()\x20has\x20been\x20removed.\x20Use\x20matrix.applyToBufferAttribute(\x20attribute\x20)\x20instead.'), this['applyToBufferAttribute'](bf);
    },
    'applyToVector3Array': function() {
      console['error']('THREE.Matrix3:\x20.applyToVector3Array()\x20has\x20been\x20removed.');
    }
  }), Object['assign'](mR['prototype'], {
    'extractPosition': function(bf) {
      return console['warn']('THREE.Matrix4:\x20.extractPosition()\x20has\x20been\x20renamed\x20to\x20.copyPosition().'), this['copyPosition'](bf);
    },
    'flattenToArrayOffset': function(bf, bg) {
      return console['warn']('THREE.Matrix4:\x20.flattenToArrayOffset()\x20has\x20been\x20deprecated.\x20Use\x20.toArray()\x20instead.'), this['toArray'](bf, bg);
    },
    'getPosition': function() {
      var bf;
      return function() {
        return void 0x0 === bf && (bf = new eK()), console['warn']('THREE.Matrix4:\x20.getPosition()\x20has\x20been\x20removed.\x20Use\x20Vector3.setFromMatrixPosition(\x20matrix\x20)\x20instead.'), bf['setFromMatrixColumn'](this, 0x3);
      };
    }(),
    'setRotationFromQuaternion': function(bf) {
      return console['warn']('THREE.Matrix4:\x20.setRotationFromQuaternion()\x20has\x20been\x20renamed\x20to\x20.makeRotationFromQuaternion().'), this['makeRotationFromQuaternion'](bf);
    },
    'multiplyToArray': function() {
      console['warn']('THREE.Matrix4:\x20.multiplyToArray()\x20has\x20been\x20removed.');
    },
    'multiplyVector3': function(bf) {
      return console['warn']('THREE.Matrix4:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'), bf['applyMatrix4'](this);
    },
    'multiplyVector4': function(bf) {
      return console['warn']('THREE.Matrix4:\x20.multiplyVector4()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'), bf['applyMatrix4'](this);
    },
    'multiplyVector3Array': function() {
      console['error']('THREE.Matrix4:\x20.multiplyVector3Array()\x20has\x20been\x20removed.');
    },
    'rotateAxis': function(bf) {
      console['warn']('THREE.Matrix4:\x20.rotateAxis()\x20has\x20been\x20removed.\x20Use\x20Vector3.transformDirection(\x20matrix\x20)\x20instead.'), bf['transformDirection'](this);
    },
    'crossVector': function(bf) {
      return console['warn']('THREE.Matrix4:\x20.crossVector()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'), bf['applyMatrix4'](this);
    },
    'translate': function() {
      console['error']('THREE.Matrix4:\x20.translate()\x20has\x20been\x20removed.');
    },
    'rotateX': function() {
      console['error']('THREE.Matrix4:\x20.rotateX()\x20has\x20been\x20removed.');
    },
    'rotateY': function() {
      console['error']('THREE.Matrix4:\x20.rotateY()\x20has\x20been\x20removed.');
    },
    'rotateZ': function() {
      console['error']('THREE.Matrix4:\x20.rotateZ()\x20has\x20been\x20removed.');
    },
    'rotateByAxis': function() {
      console['error']('THREE.Matrix4:\x20.rotateByAxis()\x20has\x20been\x20removed.');
    },
    'applyToBuffer': function(bf) {
      return console['warn']('THREE.Matrix4:\x20.applyToBuffer()\x20has\x20been\x20removed.\x20Use\x20matrix.applyToBufferAttribute(\x20attribute\x20)\x20instead.'), this['applyToBufferAttribute'](bf);
    },
    'applyToVector3Array': function() {
      console['error']('THREE.Matrix4:\x20.applyToVector3Array()\x20has\x20been\x20removed.');
    },
    'makeFrustum': function(bf, bg, bh, bi, bF, bG) {
      return console['warn']('THREE.Matrix4:\x20.makeFrustum()\x20has\x20been\x20removed.\x20Use\x20.makePerspective(\x20left,\x20right,\x20top,\x20bottom,\x20near,\x20far\x20)\x20instead.'), this['makePerspective'](bf, bg, bi, bh, bF, bG);
    }
  }), mH['prototype']['isIntersectionLine'] = function(bf) {
    return console['warn']('THREE.Plane:\x20.isIntersectionLine()\x20has\x20been\x20renamed\x20to\x20.intersectsLine().'), this['intersectsLine'](bf);
  }, eF['prototype']['multiplyVector3'] = function(bf) {
    return console['warn']('THREE.Quaternion:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20is\x20now\x20vector.applyQuaternion(\x20quaternion\x20)\x20instead.'), bf['applyQuaternion'](this);
  }, Object['assign'](KP['prototype'], {
    'isIntersectionBox': function(bf) {
      return console['warn']('THREE.Ray:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'), this['intersectsBox'](bf);
    },
    'isIntersectionPlane': function(bf) {
      return console['warn']('THREE.Ray:\x20.isIntersectionPlane()\x20has\x20been\x20renamed\x20to\x20.intersectsPlane().'), this['intersectsPlane'](bf);
    },
    'isIntersectionSphere': function(bf) {
      return console['warn']('THREE.Ray:\x20.isIntersectionSphere()\x20has\x20been\x20renamed\x20to\x20.intersectsSphere().'), this['intersectsSphere'](bf);
    }
  }), Object['assign'](KS['prototype'], {
    'area': function() {
      return console['warn']('THREE.Triangle:\x20.area()\x20has\x20been\x20renamed\x20to\x20.getArea().'), this['getArea']();
    },
    'barycoordFromPoint': function(bf, bg) {
      return console['warn']('THREE.Triangle:\x20.barycoordFromPoint()\x20has\x20been\x20renamed\x20to\x20.getBarycoord().'), this['getBarycoord'](bf, bg);
    },
    'midpoint': function(bf) {
      return console['warn']('THREE.Triangle:\x20.midpoint()\x20has\x20been\x20renamed\x20to\x20.getMidpoint().'), this['getMidpoint'](bf);
    },
    'normal': function(bf) {
      return console['warn']('THREE.Triangle:\x20.normal()\x20has\x20been\x20renamed\x20to\x20.getNormal().'), this['getNormal'](bf);
    },
    'plane': function(bf) {
      return console['warn']('THREE.Triangle:\x20.plane()\x20has\x20been\x20renamed\x20to\x20.getPlane().'), this['getPlane'](bf);
    }
  }), Object['assign'](KS, {
    'barycoordFromPoint': function(bf, bg, bh, bi, bF) {
      return console['warn']('THREE.Triangle:\x20.barycoordFromPoint()\x20has\x20been\x20renamed\x20to\x20.getBarycoord().'), KS['getBarycoord'](bf, bg, bh, bi, bF);
    },
    'normal': function(bf, bg, bh, bi) {
      return console['warn']('THREE.Triangle:\x20.normal()\x20has\x20been\x20renamed\x20to\x20.getNormal().'), KS['getNormal'](bf, bg, bh, bi);
    }
  }), Object['assign'](aJn['prototype'], {
    'extractAllPoints': function(bf) {
      return console['warn']('THREE.Shape:\x20.extractAllPoints()\x20has\x20been\x20removed.\x20Use\x20.extractPoints()\x20instead.'), this['extractPoints'](bf);
    },
    'extrude': function(bf) {
      return console['warn']('THREE.Shape:\x20.extrude()\x20has\x20been\x20removed.\x20Use\x20ExtrudeGeometry()\x20instead.'), new aqg(this, bf);
    },
    'makeGeometry': function(bf) {
      return console['warn']('THREE.Shape:\x20.makeGeometry()\x20has\x20been\x20removed.\x20Use\x20ShapeGeometry()\x20instead.'), new auo(this, bf);
    }
  }), Object['assign'](eC['prototype'], {
    'fromAttribute': function(bf, bg, bh) {
      return console['warn']('THREE.Vector2:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'), this['fromBufferAttribute'](bf, bg, bh);
    },
    'distanceToManhattan': function(bf) {
      return console['warn']('THREE.Vector2:\x20.distanceToManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanDistanceTo().'), this['manhattanDistanceTo'](bf);
    },
    'lengthManhattan': function() {
      return console['warn']('THREE.Vector2:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'), this['manhattanLength']();
    }
  }), Object['assign'](eK['prototype'], {
    'setEulerFromRotationMatrix': function() {
      console['error']('THREE.Vector3:\x20.setEulerFromRotationMatrix()\x20has\x20been\x20removed.\x20Use\x20Euler.setFromRotationMatrix()\x20instead.');
    },
    'setEulerFromQuaternion': function() {
      console['error']('THREE.Vector3:\x20.setEulerFromQuaternion()\x20has\x20been\x20removed.\x20Use\x20Euler.setFromQuaternion()\x20instead.');
    },
    'getPositionFromMatrix': function(bf) {
      return console['warn']('THREE.Vector3:\x20.getPositionFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixPosition().'), this['setFromMatrixPosition'](bf);
    },
    'getScaleFromMatrix': function(bf) {
      return console['warn']('THREE.Vector3:\x20.getScaleFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixScale().'), this['setFromMatrixScale'](bf);
    },
    'getColumnFromMatrix': function(bf, bg) {
      return console['warn']('THREE.Vector3:\x20.getColumnFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixColumn().'), this['setFromMatrixColumn'](bg, bf);
    },
    'applyProjection': function(bf) {
      return console['warn']('THREE.Vector3:\x20.applyProjection()\x20has\x20been\x20removed.\x20Use\x20.applyMatrix4(\x20m\x20)\x20instead.'), this['applyMatrix4'](bf);
    },
    'fromAttribute': function(bf, bg, bh) {
      return console['warn']('THREE.Vector3:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'), this['fromBufferAttribute'](bf, bg, bh);
    },
    'distanceToManhattan': function(bf) {
      return console['warn']('THREE.Vector3:\x20.distanceToManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanDistanceTo().'), this['manhattanDistanceTo'](bf);
    },
    'lengthManhattan': function() {
      return console['warn']('THREE.Vector3:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'), this['manhattanLength']();
    }
  }), Object['assign'](m7['prototype'], {
    'fromAttribute': function(bf, bg, bh) {
      return console['warn']('THREE.Vector4:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'), this['fromBufferAttribute'](bf, bg, bh);
    },
    'lengthManhattan': function() {
      return console['warn']('THREE.Vector4:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'), this['manhattanLength']();
    }
  }), Object['assign'](AH['prototype'], {
    'computeTangents': function() {
      console['error']('THREE.Geometry:\x20.computeTangents()\x20has\x20been\x20removed.');
    },
    'computeLineDistances': function() {
      console['error']('THREE.Geometry:\x20.computeLineDistances()\x20has\x20been\x20removed.\x20Use\x20THREE.Line.computeLineDistances()\x20instead.');
    }
  }), Object['assign'](yT['prototype'], {
    'getChildByName': function(bf) {
      return console['warn']('THREE.Object3D:\x20.getChildByName()\x20has\x20been\x20renamed\x20to\x20.getObjectByName().'), this['getObjectByName'](bf);
    },
    'renderDepth': function() {
      console['warn']('THREE.Object3D:\x20.renderDepth\x20has\x20been\x20removed.\x20Use\x20.renderOrder,\x20instead.');
    },
    'translate': function(bf, bg) {
      return console['warn']('THREE.Object3D:\x20.translate()\x20has\x20been\x20removed.\x20Use\x20.translateOnAxis(\x20axis,\x20distance\x20)\x20instead.'), this['translateOnAxis'](bg, bf);
    },
    'getWorldRotation': function() {
      console['error']('THREE.Object3D:\x20.getWorldRotation()\x20has\x20been\x20removed.\x20Use\x20THREE.Object3D.getWorldQuaternion(\x20target\x20)\x20instead.');
    }
  }), Object['defineProperties'](yT['prototype'], {
    'eulerOrder': {
      'get': function() {
        return console['warn']('THREE.Object3D:\x20.eulerOrder\x20is\x20now\x20.rotation.order.'), this['rotation']['order'];
      },
      'set': function(bf) {
        console['warn']('THREE.Object3D:\x20.eulerOrder\x20is\x20now\x20.rotation.order.'), this['rotation']['order'] = bf;
      }
    },
    'useQuaternion': {
      'get': function() {
        console['warn']('THREE.Object3D:\x20.useQuaternion\x20has\x20been\x20removed.\x20The\x20library\x20now\x20uses\x20quaternions\x20by\x20default.');
      },
      'set': function() {
        console['warn']('THREE.Object3D:\x20.useQuaternion\x20has\x20been\x20removed.\x20The\x20library\x20now\x20uses\x20quaternions\x20by\x20default.');
      }
    }
  }), Object['defineProperties'](aeo['prototype'], {
    'objects': {
      'get': function() {
        return console['warn']('THREE.LOD:\x20.objects\x20has\x20been\x20renamed\x20to\x20.levels.'), this['levels'];
      }
    }
  }), Object['defineProperty'](aes['prototype'], 'useVertexTexture', {
    'get': function() {
      console['warn']('THREE.Skeleton:\x20useVertexTexture\x20has\x20been\x20removed.');
    },
    'set': function() {
      console['warn']('THREE.Skeleton:\x20useVertexTexture\x20has\x20been\x20removed.');
    }
  }), aep['prototype']['initBones'] = function() {
    console['error']('THREE.SkinnedMesh:\x20initBones()\x20has\x20been\x20removed.');
  }, Object['defineProperty'](aCJ['prototype'], '__arcLengthDivisions', {
    'get': function() {
      return console['warn']('THREE.Curve:\x20.__arcLengthDivisions\x20is\x20now\x20.arcLengthDivisions.'), this['arcLengthDivisions'];
    },
    'set': function(bf) {
      console['warn']('THREE.Curve:\x20.__arcLengthDivisions\x20is\x20now\x20.arcLengthDivisions.'), this['arcLengthDivisions'] = bf;
    }
  }), a68['prototype']['setLens'] = function(bf, bg) {
    console['warn']('THREE.PerspectiveCamera.setLens\x20is\x20deprecated.\x20Use\x20.setFocalLength\x20and\x20.filmGauge\x20for\x20a\x20photographic\x20setup.'), void 0x0 !== bg && (this['filmGauge'] = bg), this['setFocalLength'](bf);
  }, Object['defineProperties'](aJp['prototype'], {
    'onlyShadow': {
      'set': function() {
        console['warn']('THREE.Light:\x20.onlyShadow\x20has\x20been\x20removed.');
      }
    },
    'shadowCameraFov': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowCameraFov\x20is\x20now\x20.shadow.camera.fov.'), this['shadow']['camera']['fov'] = bf;
      }
    },
    'shadowCameraLeft': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowCameraLeft\x20is\x20now\x20.shadow.camera.left.'), this['shadow']['camera']['left'] = bf;
      }
    },
    'shadowCameraRight': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowCameraRight\x20is\x20now\x20.shadow.camera.right.'), this['shadow']['camera']['right'] = bf;
      }
    },
    'shadowCameraTop': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowCameraTop\x20is\x20now\x20.shadow.camera.top.'), this['shadow']['camera']['top'] = bf;
      }
    },
    'shadowCameraBottom': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowCameraBottom\x20is\x20now\x20.shadow.camera.bottom.'), this['shadow']['camera']['bottom'] = bf;
      }
    },
    'shadowCameraNear': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowCameraNear\x20is\x20now\x20.shadow.camera.near.'), this['shadow']['camera']['near'] = bf;
      }
    },
    'shadowCameraFar': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowCameraFar\x20is\x20now\x20.shadow.camera.far.'), this['shadow']['camera']['far'] = bf;
      }
    },
    'shadowCameraVisible': {
      'set': function() {
        console['warn']('THREE.Light:\x20.shadowCameraVisible\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.CameraHelper(\x20light.shadow.camera\x20)\x20instead.');
      }
    },
    'shadowBias': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowBias\x20is\x20now\x20.shadow.bias.'), this['shadow']['bias'] = bf;
      }
    },
    'shadowDarkness': {
      'set': function() {
        console['warn']('THREE.Light:\x20.shadowDarkness\x20has\x20been\x20removed.');
      }
    },
    'shadowMapWidth': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowMapWidth\x20is\x20now\x20.shadow.mapSize.width.'), this['shadow']['mapSize']['width'] = bf;
      }
    },
    'shadowMapHeight': {
      'set': function(bf) {
        console['warn']('THREE.Light:\x20.shadowMapHeight\x20is\x20now\x20.shadow.mapSize.height.'), this['shadow']['mapSize']['height'] = bf;
      }
    }
  }), Object['defineProperties'](AI['prototype'], {
    'length': {
      'get': function() {
        return console['warn']('THREE.BufferAttribute:\x20.length\x20has\x20been\x20deprecated.\x20Use\x20.count\x20instead.'), this['array']['length'];
      }
    },
    'copyIndicesArray': function() {
      console['error']('THREE.BufferAttribute:\x20.copyIndicesArray()\x20has\x20been\x20removed.');
    }
  }), Object['assign'](Gf['prototype'], {
    'addIndex': function(bf) {
      console['warn']('THREE.BufferGeometry:\x20.addIndex()\x20has\x20been\x20renamed\x20to\x20.setIndex().'), this['setIndex'](bf);
    },
    'addDrawCall': function(bf, bg, bh) {
      void 0x0 !== bh && console['warn']('THREE.BufferGeometry:\x20.addDrawCall()\x20no\x20longer\x20supports\x20indexOffset.'), console['warn']('THREE.BufferGeometry:\x20.addDrawCall()\x20is\x20now\x20.addGroup().'), this['addGroup'](bf, bg);
    },
    'clearDrawCalls': function() {
      console['warn']('THREE.BufferGeometry:\x20.clearDrawCalls()\x20is\x20now\x20.clearGroups().'), this['clearGroups']();
    },
    'computeTangents': function() {
      console['warn']('THREE.BufferGeometry:\x20.computeTangents()\x20has\x20been\x20removed.');
    },
    'computeOffsets': function() {
      console['warn']('THREE.BufferGeometry:\x20.computeOffsets()\x20has\x20been\x20removed.');
    }
  }), Object['defineProperties'](Gf['prototype'], {
    'drawcalls': {
      'get': function() {
        return console['error']('THREE.BufferGeometry:\x20.drawcalls\x20has\x20been\x20renamed\x20to\x20.groups.'), this['groups'];
      }
    },
    'offsets': {
      'get': function() {
        return console['warn']('THREE.BufferGeometry:\x20.offsets\x20has\x20been\x20renamed\x20to\x20.groups.'), this['groups'];
      }
    }
  }), Object['assign'](aqj['prototype'], {
    'getArrays': function() {
      console['error']('THREE.ExtrudeBufferGeometry:\x20.getArrays()\x20has\x20been\x20removed.');
    },
    'addShapeList': function() {
      console['error']('THREE.ExtrudeBufferGeometry:\x20.addShapeList()\x20has\x20been\x20removed.');
    },
    'addShape': function() {
      console['error']('THREE.ExtrudeBufferGeometry:\x20.addShape()\x20has\x20been\x20removed.');
    }
  }), Object['defineProperties'](aWj['prototype'], {
    'dynamic': {
      'set': function() {
        console['warn']('THREE.Uniform:\x20.dynamic\x20has\x20been\x20removed.\x20Use\x20object.onBeforeRender()\x20instead.');
      }
    },
    'onUpdate': {
      'value': function() {
        return console['warn']('THREE.Uniform:\x20.onUpdate()\x20has\x20been\x20removed.\x20Use\x20object.onBeforeRender()\x20instead.'), this;
      }
    }
  }), Object['defineProperties'](Kf['prototype'], {
    'wrapAround': {
      'get': function() {
        console['warn']('THREE.Material:\x20.wrapAround\x20has\x20been\x20removed.');
      },
      'set': function() {
        console['warn']('THREE.Material:\x20.wrapAround\x20has\x20been\x20removed.');
      }
    },
    'overdraw': {
      'get': function() {
        console['warn']('THREE.Material:\x20.overdraw\x20has\x20been\x20removed.');
      },
      'set': function() {
        console['warn']('THREE.Material:\x20.overdraw\x20has\x20been\x20removed.');
      }
    },
    'wrapRGB': {
      'get': function() {
        return console['warn']('THREE.Material:\x20.wrapRGB\x20has\x20been\x20removed.'), new w7();
      }
    },
    'shading': {
      'get': function() {
        console['error']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.');
      },
      'set': function(bf) {
        console['warn']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.'), this['flatShading'] = bf === bW;
      }
    }
  }), Object['defineProperties'](awX['prototype'], {
    'metal': {
      'get': function() {
        return console['warn']('THREE.MeshPhongMaterial:\x20.metal\x20has\x20been\x20removed.\x20Use\x20THREE.MeshStandardMaterial\x20instead.'), !0x1;
      },
      'set': function() {
        console['warn']('THREE.MeshPhongMaterial:\x20.metal\x20has\x20been\x20removed.\x20Use\x20THREE.MeshStandardMaterial\x20instead');
      }
    }
  }), Object['defineProperties'](KN['prototype'], {
    'derivatives': {
      'get': function() {
        return console['warn']('THREE.ShaderMaterial:\x20.derivatives\x20has\x20been\x20moved\x20to\x20.extensions.derivatives.'), this['extensions']['derivatives'];
      },
      'set': function(bf) {
        console['warn']('THREE.\x20ShaderMaterial:\x20.derivatives\x20has\x20been\x20moved\x20to\x20.extensions.derivatives.'), this['extensions']['derivatives'] = bf;
      }
    }
  }), Object['assign'](a8U['prototype'], {
    'clearTarget': function(bf, bg, bh, bi) {
      console['warn']('THREE.WebGLRenderer:\x20.clearTarget()\x20has\x20been\x20deprecated.\x20Use\x20.setRenderTarget()\x20and\x20.clear()\x20instead.'), this['setRenderTarget'](bf), this['clear'](bg, bh, bi);
    },
    'animate': function(bf) {
      console['warn']('THREE.WebGLRenderer:\x20.animate()\x20is\x20now\x20.setAnimationLoop().'), this['setAnimationLoop'](bf);
    },
    'getCurrentRenderTarget': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.getCurrentRenderTarget()\x20is\x20now\x20.getRenderTarget().'), this['getRenderTarget']();
    },
    'getMaxAnisotropy': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.getMaxAnisotropy()\x20is\x20now\x20.capabilities.getMaxAnisotropy().'), this['capabilities']['getMaxAnisotropy']();
    },
    'getPrecision': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.getPrecision()\x20is\x20now\x20.capabilities.precision.'), this['capabilities']['precision'];
    },
    'resetGLState': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.resetGLState()\x20is\x20now\x20.state.reset().'), this['state']['reset']();
    },
    'supportsFloatTextures': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.supportsFloatTextures()\x20is\x20now\x20.extensions.get(\x20\x27OES_texture_float\x27\x20).'), this['extensions']['get']('OES_texture_float');
    },
    'supportsHalfFloatTextures': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.supportsHalfFloatTextures()\x20is\x20now\x20.extensions.get(\x20\x27OES_texture_half_float\x27\x20).'), this['extensions']['get']('OES_texture_half_float');
    },
    'supportsStandardDerivatives': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.supportsStandardDerivatives()\x20is\x20now\x20.extensions.get(\x20\x27OES_standard_derivatives\x27\x20).'), this['extensions']['get']('OES_standard_derivatives');
    },
    'supportsCompressedTextureS3TC': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.supportsCompressedTextureS3TC()\x20is\x20now\x20.extensions.get(\x20\x27WEBGL_compressed_texture_s3tc\x27\x20).'), this['extensions']['get']('WEBGL_compressed_texture_s3tc');
    },
    'supportsCompressedTexturePVRTC': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.supportsCompressedTexturePVRTC()\x20is\x20now\x20.extensions.get(\x20\x27WEBGL_compressed_texture_pvrtc\x27\x20).'), this['extensions']['get']('WEBGL_compressed_texture_pvrtc');
    },
    'supportsBlendMinMax': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.supportsBlendMinMax()\x20is\x20now\x20.extensions.get(\x20\x27EXT_blend_minmax\x27\x20).'), this['extensions']['get']('EXT_blend_minmax');
    },
    'supportsVertexTextures': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.supportsVertexTextures()\x20is\x20now\x20.capabilities.vertexTextures.'), this['capabilities']['vertexTextures'];
    },
    'supportsInstancedArrays': function() {
      return console['warn']('THREE.WebGLRenderer:\x20.supportsInstancedArrays()\x20is\x20now\x20.extensions.get(\x20\x27ANGLE_instanced_arrays\x27\x20).'), this['extensions']['get']('ANGLE_instanced_arrays');
    },
    'enableScissorTest': function(bf) {
      console['warn']('THREE.WebGLRenderer:\x20.enableScissorTest()\x20is\x20now\x20.setScissorTest().'), this['setScissorTest'](bf);
    },
    'initMaterial': function() {
      console['warn']('THREE.WebGLRenderer:\x20.initMaterial()\x20has\x20been\x20removed.');
    },
    'addPrePlugin': function() {
      console['warn']('THREE.WebGLRenderer:\x20.addPrePlugin()\x20has\x20been\x20removed.');
    },
    'addPostPlugin': function() {
      console['warn']('THREE.WebGLRenderer:\x20.addPostPlugin()\x20has\x20been\x20removed.');
    },
    'updateShadowMap': function() {
      console['warn']('THREE.WebGLRenderer:\x20.updateShadowMap()\x20has\x20been\x20removed.');
    },
    'setFaceCulling': function() {
      console['warn']('THREE.WebGLRenderer:\x20.setFaceCulling()\x20has\x20been\x20removed.');
    },
    'allocTextureUnit': function() {
      console['warn']('THREE.WebGLRenderer:\x20.allocTextureUnit()\x20has\x20been\x20removed.');
    },
    'setTexture': function() {
      console['warn']('THREE.WebGLRenderer:\x20.setTexture()\x20has\x20been\x20removed.');
    },
    'setTexture2D': function() {
      console['warn']('THREE.WebGLRenderer:\x20.setTexture2D()\x20has\x20been\x20removed.');
    },
    'setTextureCube': function() {
      console['warn']('THREE.WebGLRenderer:\x20.setTextureCube()\x20has\x20been\x20removed.');
    }
  }), Object['defineProperties'](a8U['prototype'], {
    'shadowMapEnabled': {
      'get': function() {
        return this['shadowMap']['enabled'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMapEnabled\x20is\x20now\x20.shadowMap.enabled.'), this['shadowMap']['enabled'] = bf;
      }
    },
    'shadowMapType': {
      'get': function() {
        return this['shadowMap']['type'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMapType\x20is\x20now\x20.shadowMap.type.'), this['shadowMap']['type'] = bf;
      }
    },
    'shadowMapCullFace': {
      'get': function() {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMapCullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
      },
      'set': function() {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMapCullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
      }
    }
  }), Object['defineProperties'](ZZ['prototype'], {
    'cullFace': {
      'get': function() {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMap.cullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
      },
      'set': function() {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMap.cullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
      }
    },
    'renderReverseSided': {
      'get': function() {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderReverseSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
      },
      'set': function() {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderReverseSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
      }
    },
    'renderSingleSided': {
      'get': function() {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderSingleSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
      },
      'set': function() {
        console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderSingleSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
      }
    }
  }), Object['defineProperties'](mk['prototype'], {
    'activeCubeFace': {
      'set': function() {
        console['warn']('THREE.WebGLRenderTargetCube:\x20.activeCubeFace\x20has\x20been\x20removed.\x20It\x20is\x20now\x20the\x20second\x20parameter\x20of\x20WebGLRenderer.setRenderTarget().');
      }
    },
    'activeMipMapLevel': {
      'set': function() {
        console['warn']('THREE.WebGLRenderTargetCube:\x20.activeMipMapLevel\x20has\x20been\x20removed.\x20It\x20is\x20now\x20the\x20third\x20parameter\x20of\x20WebGLRenderer.setRenderTarget().');
      }
    }
  }), Object['defineProperties'](mc['prototype'], {
    'wrapS': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.wrapS\x20is\x20now\x20.texture.wrapS.'), this['texture']['wrapS'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.wrapS\x20is\x20now\x20.texture.wrapS.'), this['texture']['wrapS'] = bf;
      }
    },
    'wrapT': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.wrapT\x20is\x20now\x20.texture.wrapT.'), this['texture']['wrapT'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.wrapT\x20is\x20now\x20.texture.wrapT.'), this['texture']['wrapT'] = bf;
      }
    },
    'magFilter': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.magFilter\x20is\x20now\x20.texture.magFilter.'), this['texture']['magFilter'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.magFilter\x20is\x20now\x20.texture.magFilter.'), this['texture']['magFilter'] = bf;
      }
    },
    'minFilter': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.minFilter\x20is\x20now\x20.texture.minFilter.'), this['texture']['minFilter'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.minFilter\x20is\x20now\x20.texture.minFilter.'), this['texture']['minFilter'] = bf;
      }
    },
    'anisotropy': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.anisotropy\x20is\x20now\x20.texture.anisotropy.'), this['texture']['anisotropy'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.anisotropy\x20is\x20now\x20.texture.anisotropy.'), this['texture']['anisotropy'] = bf;
      }
    },
    'offset': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.offset\x20is\x20now\x20.texture.offset.'), this['texture']['offset'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.offset\x20is\x20now\x20.texture.offset.'), this['texture']['offset'] = bf;
      }
    },
    'repeat': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.repeat\x20is\x20now\x20.texture.repeat.'), this['texture']['repeat'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.repeat\x20is\x20now\x20.texture.repeat.'), this['texture']['repeat'] = bf;
      }
    },
    'format': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.format\x20is\x20now\x20.texture.format.'), this['texture']['format'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.format\x20is\x20now\x20.texture.format.'), this['texture']['format'] = bf;
      }
    },
    'type': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.type\x20is\x20now\x20.texture.type.'), this['texture']['type'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.type\x20is\x20now\x20.texture.type.'), this['texture']['type'] = bf;
      }
    },
    'generateMipmaps': {
      'get': function() {
        return console['warn']('THREE.WebGLRenderTarget:\x20.generateMipmaps\x20is\x20now\x20.texture.generateMipmaps.'), this['texture']['generateMipmaps'];
      },
      'set': function(bf) {
        console['warn']('THREE.WebGLRenderTarget:\x20.generateMipmaps\x20is\x20now\x20.texture.generateMipmaps.'), this['texture']['generateMipmaps'] = bf;
      }
    }
  }), Object['defineProperties'](a7d['prototype'], {
    'standing': {
      'set': function() {
        console['warn']('THREE.WebVRManager:\x20.standing\x20has\x20been\x20removed.');
      }
    },
    'userHeight': {
      'set': function() {
        console['warn']('THREE.WebVRManager:\x20.userHeight\x20has\x20been\x20removed.');
      }
    }
  }), aU3['prototype']['load'] = function(bf) {
    console['warn']('THREE.Audio:\x20.load\x20has\x20been\x20deprecated.\x20Use\x20THREE.AudioLoader\x20instead.');
    var bg = this;
    return new aSa()['load'](bf, function(bf) {
      bg['setBuffer'](bf);
    }), this;
  }, aU7['prototype']['getData'] = function() {
    return console['warn']('THREE.AudioAnalyser:\x20.getData()\x20is\x20now\x20.getFrequencyData().'), this['getFrequencyData']();
  }, aTD['prototype']['updateCubeMap'] = function(bf, bg) {
    return console['warn']('THREE.CubeCamera:\x20.updateCubeMap()\x20is\x20now\x20.update().'), this['update'](bf, bg);
  };
  var bcr = {
    'merge': function(bf, bg, bh) {
      var bi;
      console['warn']('THREE.GeometryUtils:\x20.merge()\x20has\x20been\x20moved\x20to\x20Geometry.\x20Use\x20geometry.merge(\x20geometry2,\x20matrix,\x20materialIndexOffset\x20)\x20instead.'), bg['isMesh'] && (bg['matrixAutoUpdate'] && bg['updateMatrix'](), bi = bg['matrix'], bg = bg['geometry']), bf['merge'](bg, bi, bh);
    },
    'center': function(bf) {
      return console['warn']('THREE.GeometryUtils:\x20.center()\x20has\x20been\x20moved\x20to\x20Geometry.\x20Use\x20geometry.center()\x20instead.'), bf['center']();
    }
  };

  function bcx() {
    console['error']('THREE.CanvasRenderer\x20has\x20been\x20removed');
  }

  function bcy() {
    console['error']('THREE.JSONLoader\x20has\x20been\x20removed.');
  }
  lR['crossOrigin'] = void 0x0, lR['loadTexture'] = function(bf, bg, bh, bi) {
    console['warn']('THREE.ImageUtils.loadTexture\x20has\x20been\x20deprecated.\x20Use\x20THREE.TextureLoader()\x20instead.');
    var bF = new aCH();
    bF['setCrossOrigin'](this['crossOrigin']);
    var bG = bF['load'](bf, bh, void 0x0, bi);
    return bg && (bG['mapping'] = bg), bG;
  }, lR['loadTextureCube'] = function(bf, bg, bh, bi) {
    console['warn']('THREE.ImageUtils.loadTextureCube\x20has\x20been\x20deprecated.\x20Use\x20THREE.CubeTextureLoader()\x20instead.');
    var bF = new aCF();
    bF['setCrossOrigin'](this['crossOrigin']);
    var bG = bF['load'](bf, bh, void 0x0, bi);
    return bg && (bG['mapping'] = bg), bG;
  }, lR['loadCompressedTexture'] = function() {
    console['error']('THREE.ImageUtils.loadCompressedTexture\x20has\x20been\x20removed.\x20Use\x20THREE.DDSLoader\x20instead.');
  }, lR['loadCompressedTextureCube'] = function() {
    console['error']('THREE.ImageUtils.loadCompressedTextureCube\x20has\x20been\x20removed.\x20Use\x20THREE.DDSLoader\x20instead.');
  };
  var bcL = {
    'createMultiMaterialObject': function() {
      console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
    },
    'detach': function() {
      console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
    },
    'attach': function() {
      console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
    }
  };

  function bcM() {
    console['error']('THREE.LensFlare\x20has\x20been\x20moved\x20to\x20/examples/js/objects/Lensflare.js');
  }
}, function(bcN, bcO, bcP) {
  'use strict';

  function bcQ(bcN) {
    switch (Object['prototype']['toString']['call'](bcN)) {
      case '[object\x20Error]':
      case '[object\x20Exception]':
      case '[object\x20DOMException]':
        return !0x0;
      default:
        return bcN instanceof Error;
    }
  }

  function bcS(bcN) {
    return '[object\x20ErrorEvent]' === Object['prototype']['toString']['call'](bcN);
  }

  function bcU(bcN) {
    return '[object\x20DOMError]' === Object['prototype']['toString']['call'](bcN);
  }

  function bcW(bcN) {
    return '[object\x20DOMException]' === Object['prototype']['toString']['call'](bcN);
  }

  function bcY(bcN) {
    return '[object\x20String]' === Object['prototype']['toString']['call'](bcN);
  }

  function bd0(bcN) {
    return null === bcN || 'object' != typeof bcN && 'function' != typeof bcN;
  }

  function bd2(bcN) {
    return '[object\x20Object]' === Object['prototype']['toString']['call'](bcN);
  }

  function bd4(bcN) {
    return '[object\x20RegExp]' === Object['prototype']['toString']['call'](bcN);
  }

  function bd6(bcN) {
    return !(!bcN || !bcN['then'] || 'function' != typeof bcN['then']);
  }

  function bd8(bcN) {
    return bd2(bcN) && 'nativeEvent' in bcN && 'preventDefault' in bcN && 'stopPropagation' in bcN;
  }
  bcP['d'](bcO, 'c', function() {
    return bcQ;
  }), bcP['d'](bcO, 'd', function() {
    return bcS;
  }), bcP['d'](bcO, 'a', function() {
    return bcU;
  }), bcP['d'](bcO, 'b', function() {
    return bcW;
  }), bcP['d'](bcO, 'h', function() {
    return bcY;
  }), bcP['d'](bcO, 'f', function() {
    return bd0;
  }), bcP['d'](bcO, 'e', function() {
    return bd2;
  }), bcP['d'](bcO, 'g', function() {
    return bd4;
  }), bcP['d'](bcO, 'j', function() {
    return bd6;
  }), bcP['d'](bcO, 'i', function() {
    return bd8;
  });
}, function(bda, bdb, bdc) {
  'use strict';
  (function(bda) {
    bdc['d'](bdb, 'a', function() {
      return bdg;
    }), bdc['d'](bdb, 'd', function() {
      return bdn;
    }), bdc['d'](bdb, 'c', function() {
      return bdt;
    }), bdc['d'](bdb, 'b', function() {
      return bdQ;
    });
    var bde = bdc(0x5),
      bdf = bdc(0x24);

    function bdg(bda, bdb, bdc) {
      if (bdb in bda) {
        var bde = bda[bdb],
          bdf = bdc(bde);
        if ('function' == typeof bdf) try {
          bdf['prototype'] = bdf['prototype'] || {}, Object['defineProperties'](bdf, {
            '__sentry__': {
              'enumerable': !0x1,
              'value': !0x0
            },
            '__sentry_original__': {
              'enumerable': !0x1,
              'value': bde
            },
            '__sentry_wrapped__': {
              'enumerable': !0x1,
              'value': bdf
            }
          });
        } catch (bdm) {}
        bda[bdb] = bdf;
      }
    }

    function bdn(bda) {
      return Object['keys'](bda)['map'](function(bdb) {
        return encodeURIComponent(bdb) + '=' + encodeURIComponent(bda[bdb]);
      })['join']('&');
    }

    function bdq(bda) {
      return function(bda) {
        return ~-encodeURI(bda)['split'](/%..|./)['length'];
      }(JSON['stringify'](bda));
    }

    function bdt(bda, bdb, bdc) {
      void 0x0 === bdb && (bdb = 0x3), void 0x0 === bdc && (bdc = 0x19000);
      var bde = bdQ(bda, bdb);
      return bdq(bde) > bdc ? bdt(bda, bdb - 0x1, bdc) : bde;
    }

    function bdy(bdb, bdc) {
      return 'domain' === bdc && 'object' == typeof bdb && bdb['_events'] ? '[Domain]' : 'domainEmitter' === bdc ? '[DomainEmitter]' : void 0x0 !== bda && bdb === bda ? '[Global]' : 'undefined' != typeof window && bdb === window ? '[Window]' : 'undefined' != typeof document && bdb === document ? '[Document]' : 'undefined' != typeof Event && bdb instanceof Event ? Object['getPrototypeOf'](bdb) ? bdb['constructor']['name'] : 'Event' : Object(bde['i'])(bdb) ? '[SyntheticEvent]' : Number['isNaN'](bdb) ? '[NaN]' : void 0x0 === bdb ? '[undefined]' : 'function' == typeof bdb ? '[Function:\x20' + (bdb['name'] || '<unknown-function-name>') + ']' : bdb;
    }

    function bdB(bda, bdb, bdc, bdg) {
      if (void 0x0 === bdc && (bdc = 0x1 / 0x0), void 0x0 === bdg && (bdg = new bdf['a']()), 0x0 === bdc) return function(bda) {
        var bdb = Object['prototype']['toString']['call'](bda);
        if ('string' == typeof bda) return bda;
        if ('[object\x20Object]' === bdb) return '[Object]';
        if ('[object\x20Array]' === bdb) return '[Array]';
        var bdc = bdy(bda);
        return Object(bde['f'])(bdc) ? bdc : bdb;
      }(bdb);
      if (null != bdb && 'function' == typeof bdb['toJSON']) return bdb['toJSON']();
      var bdn = bdy(bdb, bda);
      if (Object(bde['f'])(bdn)) return bdn;
      var bdq = Object(bde['c'])(bdb) ? function(bda) {
          var bdb = {
            'message': bda['message'],
            'name': bda['name'],
            'stack': bda['stack']
          };
          for (var bdc in bda) Object['prototype']['hasOwnProperty']['call'](bda, bdc) && (bdb[bdc] = bda[bdc]);
          return bdb;
        }(bdb) : bdb,
        bdt = Array['isArray'](bdb) ? [] : {};
      if (bdg['memoize'](bdb)) return '[Circular\x20~]';
      for (var bdP in bdq) Object['prototype']['hasOwnProperty']['call'](bdq, bdP) && (bdt[bdP] = bdB(bdP, bdq[bdP], bdc - 0x1, bdg));
      return bdg['unmemoize'](bdb), bdt;
    }

    function bdQ(bda, bdb) {
      try {
        return JSON['parse'](JSON['stringify'](bda, function(bda, bdc) {
          return bdB(bda, bdc, bdb);
        }));
      } catch (bdV) {
        return '**non-serializable**';
      }
    }
  } ['call'](this, bdc(0x16)));
}, function(bdW, bdX, bdY) {
  (function(bdX) {
    bdW['exports']['isNode'] = void 0x0 !== bdX && void 0x0 !== bdX['release'] && -0x1 !== bdX['release']['name']['search'](/node|io.js/), bdW['exports']['isProd'] = bdW['exports']['isNode'] ? !!bdX['env']['IS_PROD'] : '127.0.0.1' !== location['hostname'] && 'localhost' !== location['hostname'] && !location['hostname']['startsWith']('192.168.'), bdW['exports']['enableHttps'] = bdW['exports']['isProd'] || !bdW['exports']['isNode'] && 'true' == localStorage['__FORCE_HTTPS__'], bdW['exports']['serverTickRate'] = 0x3e8 / 0x1e, bdW['exports']['serverSendRate'] = 0x64, bdW['exports']['clientSendRate'] = 0x3e8 / 0x1e, bdW['exports']['dltMx'] = Math['round'](0x3e8 / 0x1e), bdW['exports']['streamUpdate'] = 0x2710, bdW['exports']['maxPlayers'] = 0x8, bdW['exports']['serverSpread'] = 0x3, bdW['exports']['minServerSpace'] = 0x3, bdW['exports']['gamesPerServer'] = 0x3, bdW['exports']['serverBrowserRate'] = 0x2710, bdW['exports']['maxPlayersTotal'] = bdW['exports']['maxPlayers'] * bdW['exports']['gamesPerServer'] + 0x28, bdW['exports']['kickTimer'] = 0x15f90, bdW['exports']['isNode'] ? (bdW['exports']['matchmakerURL'] = bdW['exports']['isProd'] ? 'krunker_prod' == bdX['env']['VULTR_SCHEME'] ? 'https://matchmaker.krunker.io' : 'https://matchmaker_beta.krunker.io' : 'http://127.0.0.1:5050', bdW['exports']['apiURL'] = bdW['exports']['isProd'] ? 'krunker_prod' == bdX['env']['VULTR_SCHEME'] || 'krunker_social' == bdX['env']['VULTR_SCHEME'] ? 'https://api.krunker.io' : 'https://api_beta.krunker.io' : 'http://127.0.0.1:5060') : (bdW['exports']['matchmakerURL'] = bdW['exports']['isProd'] ? 'krunker.io' == location['hostname'] ? 'https://matchmaker.krunker.io' : 'https://matchmaker_beta.krunker.io' : localStorage['__MM_URL__'] || 'http://127.0.0.1:5050', bdW['exports']['apiURL'] = bdW['exports']['isProd'] ? 'krunker.io' == location['hostname'] ? 'https://api.krunker.io' : 'https://api_beta.krunker.io' : localStorage['__API_URL__'] || 'http://127.0.0.1:5060'), bdW['exports']['needsRestart'] = !0x1, bdW['exports']['useLooseClient'] = !0x1, bdW['exports']['currentSeason'] = 0x2, bdW['exports']['rewardTime'] = 0x1499700, bdW['exports']['rewardMinLvl'] = 0xf, bdW['exports']['regionIND'] = {
      'sgp': 0x2,
      'jb-hnd': 0x2,
      'us-nj': 0x4,
      'us-fl': 0x4,
      'us-ca-sv': 0x4,
      'au-syd': 0x1,
      'de-fra': 0x3
    }, bdW['exports']['compRegions'] = [{
      'name': 'EU',
      'icon': 'eu',
      'data': [{
        'name': 'KRUNKEUR',
        'prize': 0x578,
        'roster': ['VoKUS', 'ronics', 'AlexDoubleU', 'Nitrahh']
      }, {
        'name': 'UUED\x20GUMMID',
        'prize': 0x258,
        'roster': ['kiiturii', 'WasabiS', 'xXNONUTTERXx', 'BLNCR']
      }, {
        'name': 'Nine',
        'prize': 0x0,
        'roster': ['Chupacabra', 'The_Zionist', 'Tatsuu', 'ZR1']
      }, {
        'name': 'DOOM',
        'prize': 0x0,
        'roster': ['Viiper', 'Jbusom', 'Tahha', 'kari:D']
      }, {
        'name': 'OxicPoonTang',
        'prize': 0x0,
        'roster': ['cato818', 'Amuu123', 'Darebydare', 'Fortysevens']
      }]
    }, {
      'name': 'NA',
      'icon': 'na',
      'data': [{
        'name': 'nV',
        'prize': 0x578,
        'roster': ['RandomExport', 'Rickabonkers', 'Kouka', 'TaylorFerguson']
      }, {
        'name': 'BAKA',
        'prize': 0x258,
        'roster': ['4tapp', 'Gxngu', '魔42', 'Friendlies']
      }, {
        'name': 'Krunky\x20Boys',
        'prize': 0x0,
        'roster': ['bububoosh', 'GGkns', 'chazzychaz', 'ev0xge0']
      }, {
        'name': 'RIP\x20Theta',
        'prize': 0x0,
        'roster': ['UB_Caboose', 'Applechase', 'Predixtions', 'Visuall']
      }, {
        'name': 'Nine\x20NA',
        'prize': 0x0,
        'roster': ['Aoqii', 'Keyown', 'TristanTu', 'Byto']
      }]
    }, {
      'name': 'OCE',
      'icon': 'oce',
      'data': [{
        'name': 'Lore',
        'prize': 0x578,
        'roster': ['Mosswi', 'Agent_Chicken', 'Stazza', 'ShiraishiEZ']
      }, {
        'name': 'Omen',
        'prize': 0x258,
        'roster': ['Equinoxian', 'iiBazza', 'vEternity', 'Equaus']
      }, {
        'name': 'Tokgang',
        'prize': 0x0,
        'roster': ['caL_Tv', 'gymgoer31', 'maxmillion', 'peepoglad']
      }, {
        'name': 'Lore\x20v2',
        'prize': 0x0,
        'roster': ['ZaneAU', 'JamemesG', 'riderrr', '*Void']
      }, {
        'name': 'EXLE',
        'prize': 0x0,
        'roster': ['Tatti123', 'Kurocchi', 'F24CTAL', '-Gaze']
      }]
    }], bdW['exports']['rankVar'] = 0.03, bdW['exports']['eloPer'] = 0x78, bdW['exports']['eloK'] = 0x20, bdW['exports']['queues'] = [{
      'id': 'r1v1',
      'name': 'windows.ranked.mode.r1v1',
      'key': 'elo'
    }, {
      'id': 'r2v2',
      'name': 'windows.ranked.mode.r2v2',
      'defaultQueue': !0x0,
      'key': 'elo2'
    }, {
      'id': 'r4v4',
      'name': 'windows.ranked.mode.r4v4',
      'key': 'elo4'
    }], bdW['exports']['minRankedLevel'] = 0xf, bdW['exports']['rankedCooldown'] = 0x6ddd00, bdW['exports']['rankedDeduction'] = 0x1e, bdW['exports']['endTimer'] = 0x61a8, bdW['exports']['endAnim'] = 0x1388, bdW['exports']['voteKickReq'] = 0x4, bdW['exports']['voteKickMaxLvl'] = 0xa, bdW['exports']['voteKickTimer'] = 0x88b8, bdW['exports']['thrdPZ'] = 0xe, bdW['exports']['thrdPX'] = 0x5, bdW['exports']['serverConfig'] = [{
      'name': 'Players',
      'varN': 'maxPlayers',
      'def': 0x2,
      'max': 0xa,
      'maxF': 0x10,
      'min': 0x1,
      'step': 0x1
    }, {
      'name': 'Min\x20Players',
      'varN': 'minPlayers',
      'def': 0x0,
      'max': 0xa,
      'maxF': 0x10,
      'min': 0x0,
      'step': 0x1
    }, {
      'name': 'Lives',
      'varN': 'lives',
      'def': 0x0,
      'max': 0xa,
      'min': 0x0,
      'step': 0x1
    }, {
      'name': 'Minutes',
      'varN': 'gameTime',
      'def': 0x4,
      'max': 0x3c,
      'min': 0x0,
      'step': 0x1
    }, {
      'name': 'Warmup',
      'varN': 'warmupTime',
      'def': 0x0,
      'max': 0x4,
      'min': 0x0,
      'step': 0.1
    }, {
      'name': 'Auto\x20Respawn',
      'varN': 'forceSpawn',
      'def': 0x0,
      'max': 0xf,
      'min': 0x0,
      'step': 0x1
    }, {
      'name': 'Score\x20Limit',
      'varN': 'scoreLimit',
      'def': 0x0,
      'max': 0x2710,
      'min': 0x0,
      'step': 0x64
    }, {
      'name': 'Gravity',
      'varN': 'gravMlt',
      'dontChange': !0x0,
      'def': 0x1,
      'max': 0x2,
      'min': 0.1,
      'step': 0.1
    }, {
      'name': 'Jump\x20Force',
      'varN': 'jumpMlt',
      'dontChange': !0x0,
      'def': 0x1,
      'max': 0x3,
      'min': 0.1,
      'step': 0.1
    }, {
      'name': 'Hitbox\x20Scale',
      'varN': 'hitBoxPad',
      'dontChange': !0x0,
      'def': 0x1,
      'max': 0x1,
      'min': 0x0,
      'step': 0.1
    }, {
      'name': 'Time\x20Scale',
      'varN': 'deltaMlt',
      'dontChange': !0x0,
      'def': 0x1,
      'max': 1.5,
      'min': 0.1,
      'step': 0.1
    }, {
      'name': 'Strafe\x20Speed',
      'varN': 'strafeSpd',
      'dontChange': !0x0,
      'def': 1.2,
      'max': 0x2,
      'min': 0x1,
      'step': 0.1
    }, {
      'name': 'Health\x20Multiplier',
      'varN': 'healthMlt',
      'dontChange': !0x0,
      'def': 0x1,
      'max': 0x3,
      'min': 0.1,
      'step': 0.1
    }, {
      'name': 'Weapon\x20Impulse',
      'varN': 'impulseMlt',
      'dontChange': !0x0,
      'def': 0x1,
      'max': 0x3,
      'min': 0x0,
      'step': 0.1
    }, {
      'name': 'Team\x201\x20Name',
      'varN': 'nameTeam1',
      'def': 'Team\x201',
      'hideE': !0x0,
      'input': !0x0
    }, {
      'name': 'Team\x202\x20Name',
      'varN': 'nameTeam2',
      'def': 'Team\x202',
      'hideE': !0x0,
      'input': !0x0
    }, {
      'name': 'Select\x20Team',
      'varN': 'selTeam',
      'def': !0x1,
      'bool': !0x0
    }, {
      'name': 'Spectating',
      'varN': 'allowSpect',
      'def': !0x0,
      'bool': !0x0
    }, {
      'name': 'Kill\x20Rewards',
      'varN': 'killRewards',
      'dontChange': !0x0,
      'def': !0x0,
      'bool': !0x0
    }, {
      'name': 'Headshots\x20Only',
      'varN': 'headshotOnly',
      'dontChange': !0x0,
      'def': !0x1,
      'bool': !0x0
    }, {
      'name': 'No\x20Secondaries',
      'varN': 'noSecondary',
      'dontChange': !0x0,
      'def': !0x1,
      'bool': !0x0
    }, {
      'name': 'Disable\x20Streaks',
      'varN': 'noStreaks',
      'dontChange': !0x0,
      'def': !0x1,
      'bool': !0x0
    }, {
      'name': 'Sliding',
      'varN': 'canSlide',
      'def': !0x0,
      'bool': !0x0
    }, {
      'name': 'Auto\x20Jump',
      'varN': 'autoJump',
      'def': !0x1,
      'bool': !0x0
    }, {
      'name': '3rd\x20Person',
      'varN': 'thirdPerson',
      'def': !0x1,
      'bool': !0x0
    }, {
      'name': 'Hide\x20Nametags',
      'varN': 'nameTags',
      'def': !0x1,
      'bool': !0x0
    }, {
      'name': 'Health\x20Regen',
      'varN': 'hpRegen',
      'def': !0x0,
      'bool': !0x0
    }], bdW['exports']['prefabIDS'] = ['CUBE', 'CRATE', 'BARREL', 'LADDER', 'PLANE', 'SPAWN_POINT', 'CAMERA_POSITION', 'VEHICLE', 'STACK', 'RAMP', 'SCORE_ZONE', 'BILLBOARD', 'DEATH_ZONE', 'PARTICLES', 'OBJECTIVE', 'TREE', 'CONE', 'CONTAINER', 'GRASS', 'CONTAINERR', 'ACIDBARREL', 'DOOR', 'WINDOW', 'FLAG', 'GATE', 'CHECK_POINT', 'WEAPON_PICKUP', 'TELEPORTER', 'TEDDY', 'TRIGGER', 'SIGN', 'DEPOSIT_BOX', 'LIGHT_CONE', 'SPECTATE_CAM'], bdW['exports']['textureIDS'] = ['WALL', 'DIRT', 'FLOOR', 'GRID', 'GREY', 'DEFAULT', 'ROOF', 'FLAG', 'GRASS', 'CHECK', 'LINES', 'BRICK', 'LINK'], bdW['exports']['objectLimit'] = 0xdac, bdW['exports']['objectLimitF'] = 0x1770, bdW['exports']['spawnLimit'] = 0x14, bdW['exports']['billboardCnt'] = 0x5, bdW['exports']['signLimit'] = 0x14, bdW['exports']['signTextLimit'] = 0x5dc, bdW['exports']['signFontMax'] = 0x78, bdW['exports']['signFontMin'] = 0xa, bdW['exports']['gameConfig'] = [{
      'name': 'X\x20Offset',
      'varN': 'camOffX',
      'cat': 0x0,
      'def': 0x0,
      'max': 0x1f4,
      'min': 0x0,
      'step': 0x1
    }, {
      'name': 'Y\x20Offset',
      'varN': 'camOffY',
      'cat': 0x0,
      'def': 0x0,
      'max': 0x1f4,
      'min': 0x0,
      'step': 0x1
    }, {
      'name': 'Z\x20Offset',
      'varN': 'camOffZ',
      'cat': 0x0,
      'def': 0x0,
      'max': 0x1f4,
      'min': 0x0,
      'step': 0x1
    }, {
      'name': 'Enable\x20Rotation',
      'varN': 'camRot',
      'cat': 0x0,
      'def': !0x0,
      'bool': !0x0
    }, {
      'name': 'Speed\x20X',
      'varN': 'speedX',
      'cat': 0x1,
      'def': 0x1,
      'max': 0x3,
      'min': 0x0,
      'step': 0.1
    }, {
      'name': 'Speed\x20Y',
      'varN': 'speedY',
      'cat': 0x1,
      'def': 0x1,
      'max': 0x3,
      'min': 0x0,
      'step': 0.1
    }, {
      'name': 'Speed\x20Z',
      'varN': 'speedZ',
      'cat': 0x1,
      'def': 0x1,
      'max': 0x3,
      'min': 0x0,
      'step': 0.1
    }], bdW['exports']['followURLS'] = ['https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/vincent.de.vries/'], bdW['exports']['gravity'] = 0.00015, bdW['exports']['deathY'] = -0x64, bdW['exports']['skyScale'] = 0x4650, bdW['exports']['shadowDst'] = 0x4b0, bdW['exports']['shadowRes'] = 0x400, bdW['exports']['shadowOff'] = 0.004, bdW['exports']['lightDistance'] = 0x1f4, bdW['exports']['cornerPad'] = 0x1, bdW['exports']['cornerScl'] = 2.5, bdW['exports']['cornerH'] = 0x7, bdW['exports']['wallH'] = 0x5, bdW['exports']['wallW'] = 0.8, bdW['exports']['propsH'] = ['crate', 'barrel', 'cone', 'stack', 'acidbarrel', 'teddy'], bdW['exports']['propsCPY'] = {
      'teddy': -0x3
    }, bdW['exports']['propsCP'] = {
      'barrel': -0x1,
      'teddy': -3.6,
      'cone': -0x2
    }, bdW['exports']['crateScale'] = 0x6, bdW['exports']['stackScale'] = 0x6, bdW['exports']['teddyScale'] = 0x6, bdW['exports']['barrelScale'] = 0x4, bdW['exports']['acidbarrelScale'] = bdW['exports']['barrelScale'], bdW['exports']['treeScale'] = 0xa, bdW['exports']['doorScale'] = 0x5, bdW['exports']['windowScale'] = 0x6, bdW['exports']['coneScale'] = 0x4, bdW['exports']['containerScale'] = 0x7, bdW['exports']['containerrScale'] = bdW['exports']['containerScale'], bdW['exports']['grassScale'] = 0x20, bdW['exports']['vehicleScale'] = 0x14, bdW['exports']['barrelMlt'] = 0x1, bdW['exports']['ladderWidth'] = 3.2, bdW['exports']['ladderScale'] = 0.5, bdW['exports']['terrainGrid'] = 0x8, bdW['exports']['maxTerrainS'] = 0xfa0, bdW['exports']['otherSoundMlt'] = 0.55, bdW['exports']['maxParticles'] = 0x64, bdW['exports']['explosionRange'] = 0xc8, bdW['exports']['particleDist'] = 0x28, bdW['exports']['chatMaxLength'] = 0x46, bdW['exports']['chatInterval'] = 0x320, bdW['exports']['voiceChatInterval'] = 0x7d0, bdW['exports']['voiceChatMaxLength'] = 0.65, bdW['exports']['voiceRate'] = 0x1f4, bdW['exports']['voiceDelay'] = 0xc8, bdW['exports']['movDirs'] = [];
    for (var bdY = 0x0; 0x8 > bdY; ++bdY) bdW['exports']['movDirs']['push'](-Math['PI'] + (bdY + 0x1) * Math['PI'] / 0x4);
    bdW['exports']['interpolation'] = 1.1, bdW['exports']['stateHistory'] = 0x3e8, bdW['exports']['syncFreq'] = 0x3e8, bdW['exports']['pingCount'] = 0xa, bdW['exports']['mouseSens'] = 0.0024, bdW['exports']['camChaseTrn'] = 0.0022, bdW['exports']['camChaseSpd'] = 0.0012, bdW['exports']['camChaseSen'] = 0.2, bdW['exports']['camChaseDst'] = 0x18, bdW['exports']['specMinD'] = 0xa, bdW['exports']['specMaxD'] = 0xa0, bdW['exports']['menuCamDist'] = 0xc8, bdW['exports']['menuCamAngle'] = -0.5, bdW['exports']['menuCamSpeed'] = 0.1, bdW['exports']['idleAnimS'] = 0.0015, bdW['exports']['animMult'] = 1.2, bdW['exports']['leanPull'] = 0.99, bdW['exports']['leanSens'] = 0.05, bdW['exports']['leanMax'] = 0.16, bdW['exports']['leanPullZ'] = 0.99, bdW['exports']['leanMltZ'] = 0.03, bdW['exports']['bobMltY'] = 0.024, bdW['exports']['bobMltZ'] = 0.02, bdW['exports']['bobPullY'] = 0.985, bdW['exports']['bobPullZ'] = 0.99, bdW['exports']['landPull'] = 0.994, bdW['exports']['landPullV'] = 0.985, bdW['exports']['landOff'] = 0.15, bdW['exports']['aimAnimMlt'] = 0.18, bdW['exports']['aimSlow'] = 0.55, bdW['exports']['aimJumpSlow'] = 0.85, bdW['exports']['stepAnim'] = 0.075, bdW['exports']['stepMlt'] = 0.25, bdW['exports']['stepPull'] = 0.995, bdW['exports']['hpSegments'] = 0x7, bdW['exports']['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] = 0x64, bdW['exports']['passiveInc'] = 0x1f4, bdW['exports']['cameraHeight'] = 1.5, bdW['exports']['playerSpeed'] = 0.00042, bdW['exports']['slippingSpeed'] = 0.0003, bdW['exports']['ladderSpeed'] = 0.035, bdW['exports']['ladderDecel'] = 0.97, bdW['exports']['slideDecel'] = 0.999, bdW['exports']['slideTime'] = 0x15e, bdW['exports']['terrainSlideDecel'] = 0.9996, bdW['exports']['groundDecel'] = 0.99, bdW['exports']['terrainDecel'] = 0.99, bdW['exports']['terrainSlipDecel'] = 0.99, bdW['exports']['airSpeed'] = 0.000047, bdW['exports']['airDecel'] = 0.9996, bdW['exports']['jumpVel'] = 0.072, bdW['exports']['jumpPush'] = 0.1, bdW['exports']['decelMin'] = 0.0001, bdW['exports']['climbHeight'] = 0x3, bdW['exports']['wpnSpin'] = 0.018, bdW['exports']['terrainSlideThreshold'] = 1.2, bdW['exports']['terrainGravityMlt'] = 1.85, bdW['exports']['playerSlideVelMlt'] = 1.2, bdW['exports']['playerTerrainSlideVelMlt'] = 0.4, bdW['exports']['playerSlippingJumpCooldown'] = 0x1f4, bdW['exports']['materialDens'] = {
      'flesh': 0.2,
      'default': 0.5
    }, bdW['exports']['nameOffset'] = 0.6, bdW['exports']['nameOffsetHat'] = 0.8, bdW['exports']['maxNameLength'] = 0xe, bdW['exports']['maxPassLength'] = 0x10, bdW['exports']['fvcbEmTb'] = 0xb, bdW['exports']['chestWidth'] = 2.6, bdW['exports']['chestScale'] = 1.3, bdW['exports']['armScale'] = 1.3, bdW['exports']['legScale'] = 1.3, bdW['exports']['uArmLength'] = 2.7, bdW['exports']['armInset'] = -0.1, bdW['exports']['lArmLength'] = 2.7, bdW['exports']['headScale'] = 0x2, bdW['exports']['armOff'] = -0.8, bdW['exports']['legHeight'] = 4.2, bdW['exports']['FtNDoOPu'] = (0x2 * bdW['exports']['armScale'] + bdW['exports']['chestWidth'] + bdW['exports']['armInset']) / 0x2, bdW['exports']['hitBoxPad'] = 0x1, bdW['exports']['tracerMinDst'] = 0x14, bdW['exports']['tracerMaxDst'] = 0x1f4, bdW['exports']['tracerChance'] = 0x1, bdW['exports']['crouchLean'] = -0.1 * Math['PI'], bdW['exports']['crouchDst'] = 0x3, bdW['exports']['crouchSlow'] = 0.3, bdW['exports']['crouchSpeed'] = 0.007, bdW['exports']['crouchJump'] = 0.25, bdW['exports']['crouchSpread'] = 0.55, bdW['exports']['crouchAnim'] = 0.0008, bdW['exports']['crouchAnimMlt'] = 0.5, bdW['exports']['spreadMove'] = 0x19, bdW['exports']['spreadFall'] = 0x1e, bdW['exports']['spreadRecover'] = 0.985, bdW['exports']['spreadAdj'] = 0.00063, bdW['exports']['spreadMlt'] = 0xf0, bdW['exports']['YkPPajzKenHiEMtZrKJtjsveozsargTy'] = 0.3, bdW['exports']['flagMsg'] = 'You\x20have\x20the\x20Flag', bdW['exports']['flagMsgE'] = 'Enemy\x20has\x20your\x20Flag', bdW['exports']['flagMsgRC'] = 'Enemy\x20has\x20your\x20Flag', bdW['exports']['flagZoneS'] = 0x18, bdW['exports']['flagZoneH'] = 0x24, bdW['exports']['flagScale'] = 0xc, bdW['exports']['flagOff'] = 0x6, bdW['exports']['flagHOff'] = 0xf, bdW['exports']['interactTimer'] = 0x64, bdW['exports']['pickupZoneX'] = 0xc, bdW['exports']['pickupZoneZ'] = 0x4, bdW['exports']['pickupZoneH'] = 0x2, bdW['exports']['pickupScale'] = 0x6, bdW['exports']['pickupOff'] = 0x1, bdW['exports']['maxLevel'] = 0x66, bdW['exports']['maxELOLevel'] = 0x8, bdW['exports']['assistTime'] = 0x1388, bdW['exports']['assistScore'] = 0x19, bdW['exports']['assistMin'] = 0x14, bdW['exports']['medalAnim'] = 0x3e8, bdW['exports']['medalDelay'] = 0x384, bdW['exports']['scoreStreak'] = 0x7d0, bdW['exports']['feedTimer'] = 0x7d0, bdW['exports']['spinTimer'] = 0x708, bdW['exports']['endStats'] = ['sid', 'name', 'score', 'kills', 'deaths', 'reward'], bdW['exports']['endForm'] = {
      'reward': function(bdW) {
        return bdW ? '<span\x20style=\x27color:#F8C55C\x27>+' + bdW + '</span>\x20KR' : 'NONE';
      },
      'MMR': function(bdW, bdX, bdY) {
        var be5 = bdY['account'] && bdY['account'][bdX['queueConfig']['accountKey']] || 0x0;
        return '<span\x20style=\x27color:#F8C55C\x27><span\x20style=\x27color:rgba(255,\x20255,\x20255,\x200.7);\x27>' + (0x0 > (be5 = 0x0 <= bdY['ELO'] ? be5 - bdY['ELO'] : be5 + Math['abs'](bdY['ELO'])) ? 0x0 : be5)['round'](0x1) + '</span>\x20' + (0x0 <= bdY['ELO'] ? '+' : '-') + Math['abs'](bdY['ELO']['round'](0x1)) + '</span>';
      },
      'time': function(bdW, bdX, bdY) {
        return bdY['timer'] || 'DNF';
      },
      'infected': function(bdW, bdX, bdY) {
        return bdY['convs'];
      },
      'found': function(bdW, bdX, bdY) {
        return bdY['convs'];
      },
      'weapon': function(bdW, bdX, bdY) {
        return bdY['weaponTier'];
      }
    }, bdW['exports']['hitLife'] = 0x7d0, bdW['exports']['regenDelay'] = 0x1388, bdW['exports']['regenVal'] = 0.1, bdW['exports']['sprayTimer'] = 0x3e8, bdW['exports']['sprayRange'] = 0x19, bdW['exports']['sprayScale'] = 0xf, bdW['exports']['deathDelay'] = 0xaf0, bdW['exports']['deathFollowD'] = 0x64, bdW['exports']['suicides'] = ['uninstall\x20life', 'toaster\x20bath', 'alt\x20f4', 'not\x20alive', 'neck\x20rope', 'scooter\x20ankle', 'death.exe'], bdW['exports']['taunts'] = [{
      'id': 'taunt_0',
      'tm': 0x1f4
    }, {
      'id': 'taunt_1',
      'tm': 0x3e8
    }, {
      'id': 'taunt_2',
      'tm': 0x8fc
    }, {
      'id': 'taunt_3',
      'tm': 0xc80
    }], bdW['exports']['fov'] = 0x46, bdW['exports']['viewDist'] = 0x7d0, bdW['exports']['nameVisRate'] = 0xc8, bdW['exports']['worldUV'] = 0x3c, bdW['exports']['ambientVal'] = 0.5, bdW['exports']['ambD'] = 0x2, bdW['exports']['ambMlt'] = 0xf, bdW['exports']['ambOff'] = 0.09, bdW['exports']['ambScale'] = 0xa, bdW['exports']['ambDiv'] = 0x14, bdW['exports']['ambSFactor'] = 0x1, bdW['exports']['ambBleed'] = 0x0, bdW['exports']['boosterSpd'] = 0.002, bdW['exports']['borderH'] = 0x3e8, bdW['exports']['soundScapes'] = {
      'Default': 0x1,
      'City': 0x2,
      'Desert': 0x3,
      'Market': 0x4,
      'Scary': 0x5
    }, bdW['exports']['mapTabs'] = [{
      'n': 'Popular',
      'cache': !0x0,
      'c': 0x1b,
      't': 'recent'
    }, {
      'n': 'New',
      'cache': !0x0,
      'c': 0x1b,
      't': 'initialdate'
    }, {
      'n': 'My\x20Maps',
      'c': 0x1b,
      'sendID': !0x0,
      't': 'votes'
    }, {
      'n': 'Search',
      'search': !0x0,
      't': 'votes'
    }], bdW['exports']['modTabs'] = [{
      'n': 'Hot',
      'cache': !0x0,
      'c': 0x1b,
      't': 'recent'
    }, {
      'n': 'New',
      'cache': !0x0,
      'c': 0x1b,
      't': 'initialdate'
    }, {
      'n': 'My\x20Mods',
      'c': 0x1b,
      'sendID': !0x0,
      't': 'votes'
    }, {
      'n': 'Search',
      'search': !0x0,
      't': 'votes'
    }], bdW['exports']['saleMax'] = 0x989680, bdW['exports']['saleGrace'] = 0x493e0, bdW['exports']['marketMinLVl'] = 0x14, bdW['exports']['giftMax'] = 0x989680, bdW['exports']['giftMin'] = 0xa, bdW['exports']['giftMinLVl'] = 0x1e, bdW['exports']['verClans'] = ['DEV', 'FaZe', 'Lore', 'nV', 'Oxic', 'Verb', 'Omen', 'ロリ幼女', 'VOID', 'JBP', 'PHIL', 'TIMP', 'g59', '24/7', 'GLXY', 'MMOK', 'ODTY'], bdW['exports']['newDataInterval'] = 0x1d4c0, bdW['exports']['socials'] = ['leaders', 'profile', 'maps', 'tourney', 'market', 'itemsales', 'clan'], bdW['exports']['marketQueries'] = {
      'market': {
        'btn': 'Info',
        'checkItem': function(bdW) {
          return !!bdW['funds'];
        }
      },
      'inventory': {
        'btn': 'List\x20to\x20Sell',
        'checkItem': function(bdW) {
          return !bdW['funds'] && bdW['cnt'];
        }
      },
      'sales': {
        'btn': 'Unlist',
        'checkItem': function(bdW) {
          return !!bdW['funds'];
        }
      }
    }, bdW['exports']['leaderQueries'] = ['player_score', 'player_elo', 'player_elo2', 'player_elo4', 'player_kills', 'player_wins', 'player_timeplayed', 'player_funds', 'player_clan'], bdW['exports']['leaderCal'] = {
      'player_score': function(bdX) {
        var bdY = Math['max'](0x1, Math['floor'](bdW['exports']['rankVar'] * Math['sqrt'](bdX)));
        return '<span\x20class=\x27floatR\x27><img\x20src=\x27./img/levels/' + Math['max'](Math['min'](bdW['exports']['maxLevel'] - 0x1, bdY['roundToNearest'](0x2) - 0x1), 0x0) + '.png\x27\x20class=\x27rnkIcon\x27>' + bdY + '</span>';
      },
      'player_elo': function(bdX) {
        return '<span\x20class=\x27floatR\x27><img\x20src=\x27./img/ranks/icon_' + Math['max'](Math['min'](bdW['exports']['maxELOLevel'], Math['floor']((bdX || 0x0) / bdW['exports']['eloPer'])), 0x0) + '.png\x27\x20class=\x27rnkIconR\x27>' + (bdX || 0x0) + '</span>';
      },
      'player_elo2': function(bdX) {
        return '<span\x20class=\x27floatR\x27><img\x20src=\x27./img/ranks/icon_' + Math['max'](Math['min'](bdW['exports']['maxELOLevel'], Math['floor']((bdX || 0x0) / bdW['exports']['eloPer'])), 0x0) + '.png\x27\x20class=\x27rnkIconR\x27>' + (bdX || 0x0) + '</span>';
      },
      'player_elo4': function(bdX) {
        return '<span\x20class=\x27floatR\x27><img\x20src=\x27./img/ranks/icon_' + Math['max'](Math['min'](bdW['exports']['maxELOLevel'], Math['floor']((bdX || 0x0) / bdW['exports']['eloPer'])), 0x0) + '.png\x27\x20class=\x27rnkIconR\x27>' + (bdX || 0x0) + '</span>';
      },
      'player_kills': function(bdW) {
        return bdW + '<span\x20class=\x27lName\x27>\x20kills</span>';
      },
      'player_wins': function(bdW) {
        return bdW + '<span\x20class=\x27lName\x27>\x20wins</span>';
      },
      'player_funds': function(bdW) {
        return '<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + bdW['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',') + '</span>\x20KR';
      },
      'player_timeplayed': function(bdW) {
        var bdX = bdW / 0x3e8 / 0x3c,
          bdY = parseInt(bdX % 0x3c);
        bdX /= 0x3c;
        var bew = parseInt(bdX % 0x18);
        bdX /= 0x18;
        var bex = parseInt(bdX);
        return (bex ? bex + 'd\x20' : '') + (bew ? bew + 'h\x20' : '') + (bdY || 0x0) + 'm\x20';
      }
    }, bdW['exports']['socialRegions'] = ['All\x20Regions', 'Oceania', 'Asia', 'Europe', 'Americas'], bdW['exports']['regionNames'] = {
      'local': 'Local',
      'us-nj': 'New\x20York',
      'us-il': 'Chicago',
      'us-tx': 'Dallas',
      'us-wa': 'Seattle',
      'us-ca-la': 'Los\x20Angeles',
      'us-ga': 'Atlanta',
      'nl-ams': 'Amsterdam',
      'gb-lon': 'London',
      'de-fra': 'Frankfurt',
      'us-ca-sv': 'Silicon\x20Valley',
      'au-syd': 'Sydney',
      'fr-par': 'Paris',
      'jb-hnd': 'Tokyo',
      'us-fl': 'Miami',
      'sgp': 'Singapore'
    }, bdW['exports']['langNames'] = {
      'en': 'English',
      'es': 'Spanish',
      'de': 'German',
      'kr': 'Korean'
    }, bdW['exports']['skinColors'] = [0x805c4a, 0xa77860, 0xd38d6f, 0xcc997e, 0xedbfa6], bdW['exports']['customRatios'] = ['Native', '800x600', '1024x768', '1280x960', '1280x1024', '1440x1080', '1656x1080'], bdW['exports']['reportOptions'] = ['Hacking', 'Exploiting', 'Market\x20Manipulation', 'Harassment', 'Other'];
  } ['call'](this, bdY(0xe)));
}, function(bey, bez, beA) {
  (function(bez) {
    const beC = beA(0x7),
      beD = beA(0x23);
    bey['exports']['keyboardMap'] = ['', '', '', 'CANCEL', '', '', 'HELP', '', 'BACK_SPACE', 'TAB', '', '', 'CLEAR', 'ENTER', 'ENTER_SPECIAL', '', 'SHIFT', 'CONTROL', 'ALT', 'PAUSE', 'CAPS_LOCK', 'KANA', 'EISU', 'JUNJA', 'FINAL', 'HANJA', '', 'ESCAPE', 'CONVERT', 'NONCONVERT', 'ACCEPT', 'MODECHANGE', 'SPACE', 'PAGE_UP', 'PAGE_DOWN', 'END', 'HOME', 'LEFT', 'UP', 'RIGHT', 'DOWN', 'SELECT', 'PRINT', 'EXECUTE', 'PRINTSCREEN', 'INSERT', 'DELETE', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'COLON', 'SEMICOLON', 'LESS_THAN', 'EQUALS', 'GREATER_THAN', 'QUESTION_MARK', 'AT', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'OS_KEY', '', 'CONTEXT_MENU', '', 'SLEEP', 'NUMPAD0', 'NUMPAD1', 'NUMPAD2', 'NUMPAD3', 'NUMPAD4', 'NUMPAD5', 'NUMPAD6', 'NUMPAD7', 'NUMPAD8', 'NUMPAD9', 'MULTIPLY', 'ADD', 'SEPARATOR', 'SUBTRACT', 'DECIMAL', 'DIVIDE', 'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12', 'F13', 'F14', 'F15', 'F16', 'F17', 'F18', 'F19', 'F20', 'F21', 'F22', 'F23', 'F24', '', '', '', '', '', '', '', '', 'NUM_LOCK', 'SCROLL_LOCK', 'WIN_OEM_FJ_JISHO', 'WIN_OEM_FJ_MASSHOU', 'WIN_OEM_FJ_TOUROKU', 'WIN_OEM_FJ_LOYA', 'WIN_OEM_FJ_ROYA', '', '', '', '', '', '', '', '', '', 'CIRCUMFLEX', 'EXCLAMATION', 'DOUBLE_QUOTE', 'HASH', 'DOLLAR', 'PERCENT', 'AMPERSAND', 'UNDERSCORE', 'OPEN_PAREN', 'CLOSE_PAREN', 'ASTERISK', 'PLUS', 'PIPE', 'HYPHEN_MINUS', 'OPEN_CURLY_BRACKET', 'CLOSE_CURLY_BRACKET', 'TILDE', '', '', '', '', 'VOLUME_MUTE', 'VOLUME_DOWN', 'VOLUME_UP', '', '', 'SEMICOLON', 'EQUALS', 'COMMA', 'MINUS', 'PERIOD', 'SLASH', 'BACK_QUOTE', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'OPEN_BRACKET', 'BACK_SLASH', 'CLOSE_BRACKET', 'QUOTE', '', 'META', 'ALTGR', '', 'WIN_ICO_HELP', 'WIN_ICO_00', '', 'WIN_ICO_CLEAR', '', '', 'WIN_OEM_RESET', 'WIN_OEM_JUMP', 'WIN_OEM_PA1', 'WIN_OEM_PA2', 'WIN_OEM_PA3', 'WIN_OEM_WSCTRL', 'WIN_OEM_CUSEL', 'WIN_OEM_ATTN', 'WIN_OEM_FINISH', 'WIN_OEM_COPY', 'WIN_OEM_AUTO', 'WIN_OEM_ENLW', 'WIN_OEM_BACKTAB', 'ATTN', 'CRSEL', 'EXSEL', 'EREOF', 'PLAY', 'ZOOM', '', 'PA1', 'WIN_OEM_CLEAR', ''], bey['exports']['getB64Size'] = function() {}, Number['prototype']['round'] = function(bey) {
      return +this['toFixed'](bey);
    }, String['prototype']['escape'] = function() {
      return (this + '')['replace'](/[\\"']/g, '\x5c$&')['replace'](/\u0000/g, '\x5c0');
    }, Number['prototype']['roundToNearest'] = function(bey) {
      return 0x0 < this ? Math['ceil'](this / bey) * bey : 0x0 > this ? Math['floor'](this / bey) * bey : this;
    }, bey['exports']['capFirst'] = function(bey) {
      return bey['charAt'](0x0)['toUpperCase']() + bey['slice'](0x1);
    }, bey['exports']['isURL'] = function(bey) {
      try {
        return /^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%@_.~+&:]*)*(\?[;&a-z\d%@_.,~+&:=-]*)?(\#[-a-z\d_]*)?$/i ['test'](bey);
      } catch (beI) {}
      return !0x1;
    }, bey['exports']['arrayAverage'] = function(bey) {
      for (var bez = 0x0, beA = 0x0; beA < bey['length']; beA++) bez += bey[beA];
      return bez / bey['length'];
    }, bey['exports']['countInArray'] = function(bey, bez) {
      for (var beA = 0x0, beC = 0x0; beC < bey['length']; beC++) bey[beC] === bez && beA++;
      return beA;
    }, bey['exports']['formatNum'] = function(bey, bez = 0x1) {
      var beA = Math['floor'](Math['log'](Math['abs'](bey)) / Math['log'](0x3e8)),
        beC = 'kmb' [beA - 0x1];
      return beC ? (bey / Math['pow'](0x3e8, beA))['toFixed'](bez) + beC : '' + bey;
    }, bey['exports']['randInt'] = function(bey, bez) {
      return Math['floor'](Math['random']() * (bez - bey + 0x1)) + bey;
    }, bey['exports']['randFloat'] = function(bey, bez) {
      return Math['random']() * (bez - bey) + bey;
    }, bey['exports']['getPercentDiff'] = function(bey, bez) {
      return Math['round']((bez - bey) / bey * 0x64, 0x1);
    }, bey['exports']['getRandom'] = function(bez) {
      return bez[bey['exports']['randInt'](0x0, bez['length'] - 0x1)];
    }, bey['exports']['xBIWCnLLiqfSLgCsDrqJOyoncrZfplTa'] = function(bey, bez, beA, beC) {
      return Math['sqrt']((beA -= bey) * beA + (beC -= bez) * beC);
    }, bey['exports']['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'] = function(bey, bez, beA, beC, beD, bfa) {
      var bfb = bey - beC,
        bfc = bez - beD,
        bfd = beA - bfa;
      return Math['sqrt'](bfb * bfb + bfc * bfc + bfd * bfd);
    }, bey['exports']['getAnglesSSS'] = function(bey, bez, beA) {
      var beC = Math['acos']((bez * bez + beA * beA - bey * bey) / (0x2 * bez * beA)),
        beD = Math['acos']((beA * beA + bey * bey - bez * bez) / (0x2 * beA * bey)),
        bfj = Math['PI'] - beC - beD;
      return [-beC - Math['PI'] / 0x2, beD, bfj];
    }, bey['exports']['ohNUYdiAZNDsTlmoSykHBfRpQrqNVgqV'] = function(bez, beA, beC, beD, bfo, bfp) {
      var bfq = Math['abs'](beA - bfo),
        bfr = bey['exports']['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](bez, beA, beC, beD, bfo, bfp);
      return Math['asin'](bfq / bfr) * (beA > bfo ? -0x1 : 0x1);
    }, bey['exports']['getAngleDst'] = function(bey, bez) {
      return Math['atan2'](Math['sin'](bez - bey), Math['cos'](bey - bez));
    }, bey['exports']['getAngleDist2'] = function(bey, bez) {
      var beA = Math['abs'](bez - bey) % (0x2 * Math['PI']);
      return beA > Math['PI'] ? 0x2 * Math['PI'] - beA : beA;
    }, bey['exports']['toRad'] = function(bey) {
      return bey * (Math['PI'] / 0xb4);
    }, bey['exports']['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'] = function(bey, bez, beA, beC) {
      return Math['atan2'](bez - beC, bey - beA);
    }, bey['exports']['lerp'] = function(bey, bez, beA) {
      return bey + (bez - bey) * beA;
    }, bey['exports']['orderByScore'] = function(bey, bez) {
      return bez['score'] - bey['score'];
    }, bey['exports']['orderByKills'] = function(bey, bez) {
      return bez['kills'] - bey['kills'];
    }, bey['exports']['orderByDst'] = function(bey, bez) {
      return bey['dst'] - bez['dst'];
    }, bey['exports']['orderByNum'] = function(bey, bez) {
      return bey - bez;
    }, bey['exports']['capFirst'] = function(bey) {
      return bey['charAt'](0x0)['toUpperCase']() + bey['slice'](0x1);
    }, bey['exports']['truncateText'] = function(bey, bez) {
      return bey['length'] > bez ? bey['substring'](0x0, bez) + '...' : bey;
    }, bey['exports']['cleanseString'] = function(bey) {
      return bey ? bey['replace'](/['"]+/g, '') : bey;
    }, bey['exports']['randomString'] = function(bey) {
      for (var bez = '', beA = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', beC = 0x0; beC < bey; beC++) bez += beA['charAt'](Math['floor'](Math['random']() * beA['length']));
      return bez;
    }, bey['exports']['formatNumCash'] = function(bey) {
      return parseFloat(Math['round'](0x64 * bey) / 0x64)['toFixed'](0x2);
    }, bey['exports']['getKeyName'] = function(bez) {
      return 0x0 > bez ? 'UNBOUND' : 0x4e20 == bez ? 'SCROLL' : 0x2710 < bez ? 'M' + (bez - 0x2710) : bey['exports']['keyboardMap'][bez];
    };
    var bfX = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    bey['exports']['getDate'] = function(bey) {
      if (!bey) return 'None';
      bey = bey['split'](/[-A-Z :\.]/i);
      var bez = new Date(bey[0x0], --bey[0x1], bey[0x2], bey[0x3], bey[0x4], bey[0x5]),
        beA = new Date(bez['getTime']());
      return beA['getDate']() + '\x20' + bfX[beA['getMonth']()] + '\x20' + beA['getFullYear']();
    }, bey['exports']['getTime'] = function(bey, bez) {
      if ('inf' == bey) return 'Infinite';
      var beA = parseInt(bey % 0x3e8 / 0x64),
        beC = parseInt(bey / 0x3e8 % 0x3c),
        beD = parseInt(bey / 0xea60 % 0x3c);
      return (beD = 0xa > beD ? '0' + beD : beD) + ':' + (beC = 0xa > beC ? '0' + beC : beC) + (bez ? '.' + beA : '');
    }, bey['exports']['commaFormatNum'] = function(bey) {
      return bey['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',');
    }, bey['exports']['getReadableTime'] = function(bey, bez) {
      var beA = Math['floor'](bey / 0x3e8),
        beC = Math['floor'](beA / 0x3c);
      beA %= 0x3c;
      var beD = Math['floor'](beC / 0x3c);
      beC %= 0x3c;
      var bfX = Math['floor'](beD / 0x18);
      return (bfX ? bfX + 'd\x20' : '') + ((beD %= 0x18) ? beD + 'h\x20' : '') + (beC || 0x0) + 'm\x20' + (bez ? beA + 's' : '');
    }, bey['exports']['getReadableTime2'] = function(bey) {
      if (0x0 > bey) return 'just\x20now';
      var bez = Math['floor'](bey / 0x3e8),
        beA = Math['floor'](bez / 0x3c),
        beC = Math['floor'](beA / 0x3c);
      beA %= 0x3c;
      var beD = Math['floor'](beC / 0x18);
      return beC %= 0x18, beD ? beD + 'd\x20ago' : beC ? beC + 'h\x20ago' : beA ? beA + 'm\x20ago' : 'just\x20now';
    }, bey['exports']['getTimeH'] = function(bey) {
      parseInt(bey % 0x3e8 / 0x64);
      var bez = Math['floor'](bey / 0x3e8 % 0x3c),
        beA = Math['floor'](bey / 0xea60 % 0x3c),
        beC = Math['floor'](bey / 0x36ee80 % 0x18);
      return (beC = 0xa > beC ? '0' + beC : beC) + ':' + (beA = 0xa > beA ? '0' + beA : beA) + ':' + (bez = 0xa > bez ? '0' + bez : bez);
    }, bey['exports']['scrambleS'] = function(bey) {
      return bey && bey['replace'] ? bey['replace'](/.(.)?/g, '$1') + ('d' + bey)['replace'](/.(.)?/g, '$1') : bey;
    }, bey['exports']['sanitizeStr'] = function(bey) {
      return bey && bey['replace'] ? bey['replace'](/<|>|&/g, '')['replace'](/[^\x00-\x7F]/g, '') : bey;
    }, bey['exports']['fixTo'] = function(bey, bez) {
      return parseFloat(bey['toFixed'](bez));
    }, bey['exports']['limit'] = function(bey, bez) {
      return bey < -bez ? -bez : bey > bez ? bez : bey;
    }, bey['exports']['limitMM'] = function(bey, bez, beA) {
      return bey < bez ? bez : bey > beA ? beA : bey;
    }, bey['exports']['cropVal'] = function(bey, bez) {
      return bey <= bez && bey >= -bez ? 0x0 : bey;
    }, bey['exports']['isNumber'] = function(bey) {
      return null != bey && 'number' == typeof bey && !isNaN(bey) && isFinite(bey);
    }, bey['exports']['arrayInts'] = function(bez) {
      for (var beA = 0x0; beA < bez['length']; ++beA)
        if (!bey['exports']['isNumber'](bez[beA])) return !0x1;
      return !0x0;
    }, bey['exports']['isArray'] = function(bey) {
      return !!bey && bey['constructor'] === Array;
    }, bey['exports']['isString'] = function(bey) {
      return bey && 'string' == typeof bey;
    }, bey['exports']['emptyString'] = function(bey) {
      return !bey || 0x0 === bey['length'] || /^\s*$/ ['test'](bey) || !bey['trim']();
    }, bey['exports']['compareString'] = function(bey, bez) {
      return 0x0 <= bey['toLowerCase']()['indexOf'](bez['toLowerCase']()) || 0x0 <= bez['toLowerCase']()['indexOf'](bey['toLowerCase']());
    };
    bey['exports']['lineInRect'] = function(bey, bez, beA, beC, beD, bfX, bgL, bgM, bgN, bgO, bgP, bgQ) {
      var bgR = (bgL - bey) * beC,
        bgS = (bgO - bey) * beC,
        bgT = (bgN - beA) * bfX,
        bgU = (bgQ - beA) * bfX,
        bgV = (bgM - bez) * beD,
        bgW = (bgP - bez) * beD,
        bgX = Math['max'](Math['max'](Math['min'](bgR, bgS), Math['min'](bgT, bgU)), Math['min'](bgV, bgW)),
        bgY = Math['min'](Math['min'](Math['max'](bgR, bgS), Math['max'](bgT, bgU)), Math['max'](bgV, bgW));
      return !(0x0 > bgY) && !(bgX > bgY) && bgX;
    }, bey['exports']['pointInBox3D'] = function(bey, bez, beA, beC, beD) {
      return beD = beD || 0x0, bey >= beC['x'] - beC['width'] - beD && bey <= beC['x'] + beC['width'] + beD && bez >= beC['y'] - beC['height'] - beD && bez <= beC['y'] + beC['height'] + beD && beA >= beC['z'] - beC['length'] - beD && beA <= beC['z'] + beC['length'] + beD;
    }, bey['exports']['similar'] = function(bey, bez, beA) {
      return beA = beA || 0x0, Math['abs'](bey - bez) <= beA;
    }, bey['exports']['pointInBox'] = function(bey, bez, beA, beC, beD, bfX, bhd) {
      return bhd ? bey >= beA && bey <= beD && bez >= beC && bez <= bfX : bey > beA && bey < beD && bez > beC && bez < bfX;
    }, bey['exports']['sharePos'] = function(bey, bez, beA) {
      return beA = beA || 0x0, Math['abs'](bey['x'] - bez['x']) <= beA && Math['abs'](bey['y'] - bez['y']) <= beA && Math['abs'](bey['z'] - bez['z']) <= beA && Math['abs'](bey['d'] - bez['d']) <= beA;
    }, bey['exports']['cdv'] = {
      'x': 'width',
      'y': 'height',
      'z': 'length'
    }, bey['exports']['boxIntersection'] = function(bez, beA, beC, beD, bfX) {
      var bhm = bey['exports']['cdv'][beC],
        bhn = bey['exports']['cdv'][beD],
        bho = bez[beC] - bez[bhm] - 0.1,
        bhp = beA[beC] - beA[bhm] - 0.1,
        bhq = bez[beC] + bez[bhm] + 0.1,
        bhr = beA[beC] + beA[bhm] + 0.1,
        bhs = bez[beD] - bez[bhn] - 0.1,
        bht = beA[beD] - beA[bhn] - 0.1,
        bhu = bez[beD] + bez[bhn] + 0.1,
        bhv = beA[beD] + beA[bhn] + 0.1,
        bhw = Math['max'](bho, bhp),
        bhx = Math['min'](bhq, bhr);
      if (bhx >= bhw) {
        var bhy = Math['max'](bhs, bht),
          bhz = Math['min'](bhu, bhv);
        if (bhz >= bhy) {
          for (var bhA = [{
              [beC]: bhw,
              [beD]: bhy,
              'd': bfX[0x0]
            }, {
              [beC]: bhx,
              [beD]: bhz,
              'd': bfX[0x1]
            }, {
              [beC]: bhw,
              [beD]: bhz,
              'd': bfX[0x2]
            }, {
              [beC]: bhx,
              [beD]: bhy,
              'd': bfX[0x3]
            }], bhB = bhA['length'] - 0x1; 0x0 <= bhB; --bhB)(bhA[bhB][beC] == bhq && bhA[bhB][beC] == bhr || bhA[bhB][beC] == bho && bhA[bhB][beC] == bhp || bhA[bhB][beD] == bhu && bhA[bhB][beD] == bhv || bhA[bhB][beD] == bhs && bhA[bhB][beD] == bht || bey['exports']['pointInBox'](bhA[bhB][beC], bhA[bhB][beD], bho, bhs, bhq, bhu) || bey['exports']['pointInBox'](bhA[bhB][beC], bhA[bhB][beD], bhp, bht, bhr, bhv)) && (bhA[bhB]['dontUse'] = !0x0);
          return bhA;
        }
      }
      return null;
    }, bey['exports']['boxCornerIntersection'] = function(bez, beA, beC, beD) {
      for (var bfX = bey['exports']['cdv'][beC], bhH = bey['exports']['cdv'][beD], bhI = bez[beC] - bez[bfX], bhJ = beA[beC] - beA[bfX], bhK = bez[beC] + bez[bfX], bhL = beA[beC] + beA[bfX], bhM = bez[beD] - bez[bhH], bhN = beA[beD] - beA[bhH], bhO = bez[beD] + bez[bhH], bhP = beA[beD] + beA[bhH], bhQ = [{
          [beC]: bhI,
          [beD]: bhM,
          'd': Math['PI'] / 0x2
        }, {
          [beC]: bhI,
          [beD]: bhO,
          'd': Math['PI']
        }, {
          [beC]: bhK,
          [beD]: bhM,
          'd': 0x0
        }, {
          [beC]: bhK,
          [beD]: bhO,
          'd': -Math['PI'] / 0x2
        }], bhR = bhQ['length'] - 0x1; 0x0 <= bhR; --bhR) bhQ[bhR]['i'] = bhR, bey['exports']['pointInBox'](bhQ[bhR][beC], bhQ[bhR][beD], bhJ, bhN, bhL, bhP, !0x0) || bhQ['splice'](bhR, 0x1);
      return bhQ['length'] ? bhQ : null;
    }, bey['exports']['getIntersection'] = function(bez, beA, beC) {
      var beD = bey['exports']['cdv'][beC],
        bfX = bez[beC] - bez[beD],
        bhX = beA[beC] - beA[beD],
        bhY = bez[beC] + bez[beD],
        bhZ = beA[beC] + beA[beD],
        bi0 = Math['max'](bfX, bhX),
        bi1 = Math['min'](bhY, bhZ);
      if (bi1 >= bi0) {
        var bi2 = (bi1 - bi0) / 0x2;
        return {
          [beC]: bi0 + bi2,
          [beD]: bi2
        };
      }
      return null;
    }, bey['exports']['limitRectVal'] = function(bez, beA, beC) {
      var beD = bey['exports']['cdv'][beC];
      if (bez[beC] - bez[beD] < beA[beC] - beA[beD]) {
        var bfX = (beA[beC] - beA[beD] - (bez[beC] - bez[beD])) / 0x2;
        bez[beD] -= bfX, bez[beC] += bfX;
      }
      if (bez[beC] + bez[beD] > beA[beC] + beA[beD]) {
        bfX = (bez[beC] + bez[beD] - (beA[beC] + beA[beD])) / 0x2;
        bez[beD] -= bfX, bez[beC] -= bfX;
      }
    }, bey['exports']['getMaxRect'] = function(bez, beA, beC) {
      for (var beD, bfX, bid, bie, bif = bey['exports']['cdv'][beA], big = bey['exports']['cdv'][beC], bih = 0x0; bih < bez['length']; ++bih) beD = null == beD ? bez[bih][beA] - bez[bih][bif] : Math['min'](bez[bih][beA] - bez[bih][bif], beD), bid = null == bid ? bez[bih][beA] + bez[bih][bif] : Math['max'](bez[bih][beA] + bez[bih][bif], bid), bfX = null == bfX ? bez[bih][beC] - bez[bih][big] : Math['min'](bez[bih][beC] - bez[bih][big], bfX), bie = null == bie ? bez[bih][beC] + bez[bih][big] : Math['max'](bez[bih][beC] + bez[bih][big], bie);
      return {
        [beA]: (beD + bid) / 0x2,
        [beC]: (bfX + bie) / 0x2,
        [bif]: Math['abs'](bid - beD) / 0x2,
        [big]: Math['abs'](bie - bfX) / 0x2
      };
    }, bey['exports']['limitRect'] = function(bez, beA, beC, beD, bfX, bin, bio, bip) {
      var biq = bey['exports']['getMaxRect'](bin, bio, bip),
        bir = bey['exports']['cdv'][bio],
        bis = bey['exports']['cdv'][bip],
        bit = {};
      if (bit[bio] = bez, bit[bip] = beA, bit[bir] = beC, bit[bis] = beD, bey['exports']['limitRectVal'](bit, biq, bio), bey['exports']['limitRectVal'](bit, biq, bip), 0x0 == bfX || bfX == Math['PI']) {
        var biu = bit[bir];
        bit[bir] = bit[bis], bit[bis] = biu;
      }
      return bit;
    }, bey['exports']['progressOnLine'] = function(bey, bez, beA, beC, beD, bfX) {
      var biB = beA - bey,
        biC = beC - bez,
        biD = Math['sqrt'](biB * biB + biC * biC);
      return ((biB /= biD) * (beD - bey) + (biC /= biD) * (bfX - bez)) / Math['sqrt'](Math['pow'](beA - bey, 0x2) + Math['pow'](beC - bez, 0x2));
    }, bey['exports']['generateSID'] = function(bey) {
      for (var bez = 0x0, beA = !0x0; beA;) {
        beA = !0x1, bez++;
        for (var beC = 0x0; beC < bey['length']; ++beC)
          if (bey[beC]['sid'] == bez) {
            beA = !0x0;
            break;
          }
      }
      return bez;
    }, bey['exports']['levelIconId'] = function(bey) {
      return Math['max'](Math['min'](beC['maxLevel'] - 0x1, bey['roundToNearest'](0x2) - 0x1), 0x0);
    }, bey['exports']['eloIconId'] = function(bey) {
      return Math['max'](Math['min'](beC['maxELOLevel'], Math['floor']((bey || 0x0) / beC['eloPer'])), 0x0);
    }, bey['exports']['copyToClipboard'] = function(bey) {
      const bez = document['createElement']('textarea');
      bez['value'] = bey, bez['setAttribute']('readonly', ''), bez['style']['position'] = 'absolute', bez['style']['left'] = '-9999px', document['body']['appendChild'](bez);
      const beA = !!(0x0 < document['getSelection']()['rangeCount']) && document['getSelection']()['getRangeAt'](0x0);
      bez['select'](), document['execCommand']('copy'), document['body']['removeChild'](bez), beA && (document['getSelection']()['removeAllRanges'](), document['getSelection']()['addRange'](beA));
    };
    var biN = function(bey, bez) {
      return bey['concat'](bez);
    };
    Array['prototype']['flatMap'] = function(bey) {
      return function(bey, bez) {
        return bez['map'](bey)['reduce'](biN, []);
      }(bey, this);
    };
    var biT = beA(0x27);
    bey['exports']['vsPIwICjxHBKSaZMlvxMNuIvvbqmyThN'] = function(bez, beA) {
      let beC = biT['encode'](bez),
        beD = new Uint8Array(beC['length'] + 0x2);
      return beD['set'](bey['exports']['rMGvTyjBfhDTNvZoEriXLJjmJblNUAIt'](beA), beD['length'] - 0x2), beD['set'](beC, 0x0), beD;
    }, bey['exports']['xYRIoNJbFIZpwfHqptgDbTIwAloYOUAL'] = function(bez) {
      bez = new Uint8Array(bez);
      let beA = bey['exports']['jekvJrYZmaTlnYlwgAYPjbubileEKHQV'](bez[bez['length'] - 0x2], bez[bez['length'] - 0x1]),
        beC = bez['slice'](0x0, bez['length'] - 0x2);
      return [biT['decode'](beC), beA];
    }, bey['exports']['EcUdzltDMyOdyPqGjNSRfpIMDFHLqTBi'] = function(bey, bez) {
      return 0xff & bey + bez;
    }, bey['exports']['rMGvTyjBfhDTNvZoEriXLJjmJblNUAIt'] = function(bey) {
      return [0xf & bey >> 0x4, 0xf & bey];
    }, bey['exports']['jekvJrYZmaTlnYlwgAYPjbubileEKHQV'] = function(bey, bez) {
      return (bey << 0x4) + bez;
    }, bey['exports']['restartIfNeeded'] = function(bey) {
      if (beC['needsRestart']) {
        for (var beA in bey['sockets']) {
          var beD = bey['sockets'][beA];
          beD['send']('error', 'GAME\x20UPDATING'), beD['close']();
        }
        setTimeout(function() {
          bez['exit']();
        }, 0x3e8);
      }
    }, bey['exports']['thumbnailSize'] = function(bey) {
      return parseInt(0.75 * bey['replace'](/=/g, '')['length']) / 0x3e8;
    }, bey['exports']['hexToRGB'] = bey => bey['replace'](/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (bey, bez, beA, beC) => '#' + bez + bez + beA + beA + beC + beC)['substring'](0x1)['match'](/.{2}/g)['map'](bey => parseInt(bey, 0x10)), bey['exports']['versionifyUrl'] = function(bey) {
      return bey + '?build=' + beD;
    }, bey['exports']['assetsUrl'] = function(bey) {
      return bey['startsWith']('/') && (bey = bey['slice'](0x1)), this['versionifyUrl']('https://assets.krunker.io/' + bey);
    }, bey['exports']['getPreview'] = function(bez, beA) {
      return bey['exports']['assetsUrl']('/textures/previews/' + (bez['type'] && 0x3 > bez['type'] ? 'cosmetics/' + bez['type'] + '_' + bez['id'] + (bez['tex'] ? '_' + bez['tex'] : '') : beA['types'][bez['type'] || 0x0] + (bez['type'] && 0x3 == bez['type'] ? bez['id'] + (null == bez['tex'] ? '' : '_' + bez['tex']) : (bez['weapon'] || 0x0) + '_' + (null == bez['mid'] ? null == bez['pat'] ? bez['tex'] ? bez['tex'] : bez['id'] : 'c' + bez['pat'] : 'm' + bez['mid'] + (null == bez['midT'] ? '' : '_' + bez['midT']['split']('_')['slice'](-0x1)[0x0])))) + '.png');
    }, bey['exports']['toSocial'] = function(bez) {
      return './social.html?p=profile&q=' + bey['exports']['cleanseString'](bez);
    }, bey['exports']['isDropbox'] = function(bey) {
      return /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?(dropbox|dropboxusercontent|dl\.dropboxusercontent)\.com\//g ['test'](bey);
    }, bey['exports']['ctxText'] = function(bey, bez, beA, beC, beD) {
      bey['save'](), bey['translate'](~~beC, ~~beD), bey['fillStyle'] = beA, bey['strokeStyle'] = 'rgba(0,\x200,\x200,\x200.5)', bey['lineWidth'] = 0x1, bey['strokeText'](bez, 0x0, 0x0), bey['fillText'](bez, 0x0, 0x0), bey['restore']();
    }, bey['exports']['getLines'] = function(bey, bez, beA) {
      for (var beC = bez['split']('\x20'), beD = [], bfX = beC[0x0], biN = 0x1; biN < beC['length']; biN++) {
        var biT = beC[biN];
        bey['measureText'](bfX + '\x20' + biT)['width'] < beA ? bfX += '\x20' + biT : (beD['push'](bfX), bfX = biT);
      }
      return beD['push'](bfX), beD;
    }, bey['exports']['createCanvasText'] = function(bez, beA, beD, bfX, biN, biT, bjF, bjG) {
      var bjH = 0x0,
        bjI = 0x0;
      beA > bez ? (bjH = 0x1, bjI = bez / beA) : beA < bez ? (bjH = beA / bez, bjI = 0x1) : (bjH = 0x1, bjI = 0x1);
      var bjJ = document['createElement']('canvas'),
        bjK = bjJ['getContext']('2d');
      bjJ['width'] = 0x400 * bjI, bjJ['height'] = 0x400 * bjH, bjF || (bjK['fillStyle'] = biT, bjK['fillRect'](0x0, 0x0, bjJ['width'], bjJ['height']));
      var bjL = bfX;
      bjK['font'] = bjL + 'px\x20GameFont', beD = beD['substring'](0x0, beC['signTextLimit'] - 0x1), bjK['textAlign'] = 0x2 == bjG ? 'right' : 0x1 == bjG ? 'center' : 'left';
      var bjM = 0x2 * bjL,
        bjN = bjK['measureText']('M')['width'] / 0x2;
      bjN = 0x2 == bjG ? bjJ['width'] - bjN : 0x1 == bjG ? bjJ['width'] / 0x2 : bjN;
      for (var bjO = 1.2 * bjK['measureText']('M')['width'], bjP = beD['split']('\x5cn'), bjQ = null, bjR = 0x0; bjR < bjP['length']; ++bjR) {
        bjQ = bey['exports']['getLines'](bjK, bjP[bjR], bjJ['width'] - bjL);
        for (var bjS = 0x0; bjS < bjQ['length'] && (bey['exports']['ctxText'](bjK, bjQ[bjS], biN, bjN, bjM), !((bjM += bjO) > bjJ['height'])); ++bjS);
      }
      return bjJ;
    };
  } ['call'](this, beA(0xe)));
}, function(bjT, bjU, bjV) {
  'use strict';
  (function(bjT) {
    bjV['d'](bjU, 'a', function() {
      return bk2;
    }), bjV['d'](bjU, 'b', function() {
      return bl8;
    }), bjV['d'](bjU, 'c', function() {
      return blf;
    });
    var bjX = bjV(0x0),
      bjY = bjV(0x2),
      bjZ = bjV(0x19),
      bk0 = bjV(0xa),
      bk1 = 0x3,
      bk2 = function() {
        function bjT(bjT, bjU, bjV) {
          void 0x0 === bjU && (bjU = new bk0['a']()), void 0x0 === bjV && (bjV = bk1), this['_version'] = bjV, this['_stack'] = [], this['_stack']['push']({
            'client': bjT,
            'scope': bjU
          });
        }
        return bjT['prototype']['_invokeClient'] = function(bjT) {
          for (var bjU, bjV = [], bjY = 0x1; bjY < arguments['length']; bjY++) bjV[bjY - 0x1] = arguments[bjY];
          var bjZ = this['getStackTop']();
          bjZ && bjZ['client'] && bjZ['client'][bjT] && (bjU = bjZ['client'])[bjT]['apply'](bjU, bjX['d'](bjV, [bjZ['scope']]));
        }, bjT['prototype']['isOlderThan'] = function(bjT) {
          return this['_version'] < bjT;
        }, bjT['prototype']['bindClient'] = function(bjT) {
          this['getStackTop']()['client'] = bjT;
        }, bjT['prototype']['pushScope'] = function() {
          var bjT = this['getStack'](),
            bjU = 0x0 < bjT['length'] ? bjT[bjT['length'] - 0x1]['scope'] : void 0x0,
            bjV = bk0['a']['clone'](bjU);
          return this['getStack']()['push']({
            'client': this['getClient'](),
            'scope': bjV
          }), bjV;
        }, bjT['prototype']['popScope'] = function() {
          return void 0x0 !== this['getStack']()['pop']();
        }, bjT['prototype']['withScope'] = function(bjT) {
          var bjU = this['pushScope']();
          try {
            bjT(bjU);
          } finally {
            this['popScope']();
          }
        }, bjT['prototype']['getClient'] = function() {
          return this['getStackTop']()['client'];
        }, bjT['prototype']['getScope'] = function() {
          return this['getStackTop']()['scope'];
        }, bjT['prototype']['getStack'] = function() {
          return this['_stack'];
        }, bjT['prototype']['getStackTop'] = function() {
          return this['_stack'][this['_stack']['length'] - 0x1];
        }, bjT['prototype']['captureException'] = function(bjT, bjU) {
          var bjV = this['_lastEventId'] = Object(bjY['g'])();
          return this['_invokeClient']('captureException', bjT, bjX['a']({}, bjU, {
            'event_id': bjV
          })), bjV;
        }, bjT['prototype']['captureMessage'] = function(bjT, bjU, bjV) {
          var bjZ = this['_lastEventId'] = Object(bjY['g'])();
          return this['_invokeClient']('captureMessage', bjT, bjU, bjX['a']({}, bjV, {
            'event_id': bjZ
          })), bjZ;
        }, bjT['prototype']['captureEvent'] = function(bjT, bjU) {
          var bjV = this['_lastEventId'] = Object(bjY['g'])();
          return this['_invokeClient']('captureEvent', bjT, bjX['a']({}, bjU, {
            'event_id': bjV
          })), bjV;
        }, bjT['prototype']['lastEventId'] = function() {
          return this['_lastEventId'];
        }, bjT['prototype']['addBreadcrumb'] = function(bjT, bjU) {
          var bjV = this['getStackTop']();
          if (bjV['scope'] && bjV['client']) {
            var bjZ = bjV['client']['getOptions'] && bjV['client']['getOptions']() || {},
              bk0 = bjZ['beforeBreadcrumb'],
              bk1 = void 0x0 === bk0 ? null : bk0,
              bk2 = bjZ['maxBreadcrumbs'],
              bkA = void 0x0 === bk2 ? 0x1e : bk2;
            if (!(0x0 >= bkA)) {
              var bkB = new Date()['getTime']() / 0x3e8,
                bkC = bjX['a']({
                  'timestamp': bkB
                }, bjT),
                bkD = bk1 ? Object(bjY['b'])(function() {
                  return bk1(bkC, bjU);
                }) : bkC;
              null === bkD || bjV['scope']['addBreadcrumb'](bkD, Math['min'](bkA, 0x64));
            }
          }
        }, bjT['prototype']['setUser'] = function(bjT) {
          var bjU = this['getStackTop']();
          bjU['scope'] && bjU['scope']['setUser'](bjT);
        }, bjT['prototype']['setTags'] = function(bjT) {
          var bjU = this['getStackTop']();
          bjU['scope'] && bjU['scope']['setTags'](bjT);
        }, bjT['prototype']['setExtras'] = function(bjT) {
          var bjU = this['getStackTop']();
          bjU['scope'] && bjU['scope']['setExtras'](bjT);
        }, bjT['prototype']['setTag'] = function(bjT, bjU) {
          var bjV = this['getStackTop']();
          bjV['scope'] && bjV['scope']['setTag'](bjT, bjU);
        }, bjT['prototype']['setExtra'] = function(bjT, bjU) {
          var bjV = this['getStackTop']();
          bjV['scope'] && bjV['scope']['setExtra'](bjT, bjU);
        }, bjT['prototype']['setContext'] = function(bjT, bjU) {
          var bjV = this['getStackTop']();
          bjV['scope'] && bjV['scope']['setContext'](bjT, bjU);
        }, bjT['prototype']['configureScope'] = function(bjT) {
          var bjU = this['getStackTop']();
          bjU['scope'] && bjU['client'] && bjT(bjU['scope']);
        }, bjT['prototype']['run'] = function(bjT) {
          var bjU = bl4(this);
          try {
            bjT(this);
          } finally {
            bl4(bjU);
          }
        }, bjT['prototype']['getIntegration'] = function(bjT) {
          var bjU = this['getClient']();
          if (!bjU) return null;
          try {
            return bjU['getIntegration'](bjT);
          } catch (bkZ) {
            return bjZ['a']['warn']('Cannot\x20retrieve\x20integration\x20' + bjT['id'] + '\x20from\x20the\x20current\x20Hub'), null;
          }
        }, bjT['prototype']['traceHeaders'] = function() {
          var bjT = this['getStackTop']();
          if (bjT['scope'] && bjT['client']) {
            var bjU = bjT['scope']['getSpan']();
            if (bjU) return {
              'sentry-trace': bjU['toTraceparent']()
            };
          }
          return {};
        }, bjT;
      }();

    function bl2() {
      var bjT = Object(bjY['e'])();
      return bjT['__SENTRY__'] = bjT['__SENTRY__'] || {
        'hub': void 0x0
      }, bjT;
    }

    function bl4(bjT) {
      var bjU = bl2(),
        bjV = blf(bjU);
      return blh(bjU, bjT), bjV;
    }

    function bl8() {
      var bjU = bl2();
      (!bld(bjU) || blf(bjU)['isOlderThan'](bk1)) && blh(bjU, new bk2());
      try {
        var bjV = Object(bjY['c'])(bjT, 'domain')['active'];
        if (!bjV) return blf(bjU);
        if (!bld(bjV) || blf(bjV)['isOlderThan'](bk1)) {
          var bjX = blf(bjU)['getStackTop']();
          blh(bjV, new bk2(bjX['client'], bk0['a']['clone'](bjX['scope'])));
        }
        return blf(bjV);
      } catch (blc) {
        return blf(bjU);
      }
    }

    function bld(bjT) {
      return !!(bjT && bjT['__SENTRY__'] && bjT['__SENTRY__']['hub']);
    }

    function blf(bjT) {
      return bjT && bjT['__SENTRY__'] && bjT['__SENTRY__']['hub'] ? bjT['__SENTRY__']['hub'] : (bjT['__SENTRY__'] = bjT['__SENTRY__'] || {}, bjT['__SENTRY__']['hub'] = new bk2(), bjT['__SENTRY__']['hub']);
    }

    function blh(bjT, bjU) {
      return !!bjT && (bjT['__SENTRY__'] = bjT['__SENTRY__'] || {}, bjT['__SENTRY__']['hub'] = bjU, !0x0);
    }
  } ['call'](this, bjV(0x3f)(bjT)));
}, function(blk, bll, blm) {
  'use strict';
  blm['d'](bll, 'a', function() {
    return blt;
  }), blm['d'](bll, 'b', function() {
    return bmb;
  });
  var bln = blm(0x0),
    blo = blm(0x48),
    blp = blm(0x5),
    blq = blm(0x6),
    blr = blm(0x2),
    bls = blm(0xd),
    blt = function() {
      function blk() {
        this['_notifyingListeners'] = !0x1, this['_scopeListeners'] = [], this['_eventProcessors'] = [], this['_breadcrumbs'] = [], this['_user'] = {}, this['_tags'] = {}, this['_extra'] = {}, this['_context'] = {};
      }
      return blk['prototype']['addScopeListener'] = function(blk) {
        this['_scopeListeners']['push'](blk);
      }, blk['prototype']['addEventProcessor'] = function(blk) {
        return this['_eventProcessors']['push'](blk), this;
      }, blk['prototype']['_notifyScopeListeners'] = function() {
        var blk = this;
        this['_notifyingListeners'] || (this['_notifyingListeners'] = !0x0, setTimeout(function() {
          blk['_scopeListeners']['forEach'](function(bll) {
            bll(blk);
          }), blk['_notifyingListeners'] = !0x1;
        }));
      }, blk['prototype']['_notifyEventProcessors'] = function(blk, bll, blm, blq) {
        var blr = this;
        return void 0x0 === blq && (blq = 0x0), new blo['a'](function(blo, bls) {
          var blt = blk[blq];
          if (null === bll || 'function' != typeof blt) blo(bll);
          else {
            var blH = blt(bln['a']({}, bll), blm);
            Object(blp['j'])(blH) ? blH['then'](function(bll) {
              return blr['_notifyEventProcessors'](blk, bll, blm, blq + 0x1)['then'](blo);
            })['catch'](bls) : blr['_notifyEventProcessors'](blk, blH, blm, blq + 0x1)['then'](blo)['catch'](bls);
          }
        });
      }, blk['prototype']['setUser'] = function(blk) {
        return this['_user'] = Object(blq['b'])(blk), this['_notifyScopeListeners'](), this;
      }, blk['prototype']['setTags'] = function(blk) {
        return this['_tags'] = bln['a']({}, this['_tags'], Object(blq['b'])(blk)), this['_notifyScopeListeners'](), this;
      }, blk['prototype']['setTag'] = function(blk, bll) {
        var blm;
        return this['_tags'] = bln['a']({}, this['_tags'], ((blm = {})[blk] = Object(blq['b'])(bll), blm)), this['_notifyScopeListeners'](), this;
      }, blk['prototype']['setExtras'] = function(blk) {
        return this['_extra'] = bln['a']({}, this['_extra'], Object(blq['b'])(blk)), this['_notifyScopeListeners'](), this;
      }, blk['prototype']['setExtra'] = function(blk, bll) {
        var blm;
        return this['_extra'] = bln['a']({}, this['_extra'], ((blm = {})[blk] = Object(blq['b'])(bll), blm)), this['_notifyScopeListeners'](), this;
      }, blk['prototype']['setFingerprint'] = function(blk) {
        return this['_fingerprint'] = Object(blq['b'])(blk), this['_notifyScopeListeners'](), this;
      }, blk['prototype']['setLevel'] = function(blk) {
        return this['_level'] = Object(blq['b'])(blk), this['_notifyScopeListeners'](), this;
      }, blk['prototype']['setTransaction'] = function(blk) {
        return this['_transaction'] = blk, this['_notifyScopeListeners'](), this;
      }, blk['prototype']['setContext'] = function(blk, bll) {
        return this['_context'][blk] = bll ? Object(blq['b'])(bll) : void 0x0, this['_notifyScopeListeners'](), this;
      }, blk['prototype']['setSpan'] = function(blk) {
        return this['_span'] = blk, this['_notifyScopeListeners'](), this;
      }, blk['prototype']['startSpan'] = function(blk) {
        var bll = new bls['a']();
        return bll['setParent'](blk), this['setSpan'](bll), bll;
      }, blk['prototype']['getSpan'] = function() {
        return this['_span'];
      }, blk['clone'] = function(bll) {
        var blm = new blk();
        return Object['assign'](blm, bll, {
          '_scopeListeners': []
        }), bll && (blm['_breadcrumbs'] = bln['d'](bll['_breadcrumbs']), blm['_tags'] = bln['a']({}, bll['_tags']), blm['_extra'] = bln['a']({}, bll['_extra']), blm['_context'] = bln['a']({}, bll['_context']), blm['_user'] = bll['_user'], blm['_level'] = bll['_level'], blm['_span'] = bll['_span'], blm['_transaction'] = bll['_transaction'], blm['_fingerprint'] = bll['_fingerprint'], blm['_eventProcessors'] = bln['d'](bll['_eventProcessors'])), blm;
      }, blk['prototype']['clear'] = function() {
        return this['_breadcrumbs'] = [], this['_tags'] = {}, this['_extra'] = {}, this['_user'] = {}, this['_context'] = {}, this['_level'] = void 0x0, this['_transaction'] = void 0x0, this['_fingerprint'] = void 0x0, this['_span'] = void 0x0, this['_notifyScopeListeners'](), this;
      }, blk['prototype']['addBreadcrumb'] = function(blk, bll) {
        var blm = new Date()['getTime']() / 0x3e8,
          blo = bln['a']({
            'timestamp': blm
          }, blk);
        return this['_breadcrumbs'] = void 0x0 !== bll && 0x0 <= bll ? bln['d'](this['_breadcrumbs'], [Object(blq['b'])(blo)])['slice'](-bll) : bln['d'](this['_breadcrumbs'], [Object(blq['b'])(blo)]), this['_notifyScopeListeners'](), this;
      }, blk['prototype']['clearBreadcrumbs'] = function() {
        return this['_breadcrumbs'] = [], this['_notifyScopeListeners'](), this;
      }, blk['prototype']['_applyFingerprint'] = function(blk) {
        blk['fingerprint'] = blk['fingerprint'] ? Array['isArray'](blk['fingerprint']) ? blk['fingerprint'] : [blk['fingerprint']] : [], this['_fingerprint'] && (blk['fingerprint'] = blk['fingerprint']['concat'](this['_fingerprint'])), blk['fingerprint'] && !blk['fingerprint']['length'] && delete blk['fingerprint'];
      }, blk['prototype']['applyToEvent'] = function(blk, bll) {
        return this['_extra'] && Object['keys'](this['_extra'])['length'] && (blk['extra'] = bln['a']({}, this['_extra'], blk['extra'])), this['_tags'] && Object['keys'](this['_tags'])['length'] && (blk['tags'] = bln['a']({}, this['_tags'], blk['tags'])), this['_user'] && Object['keys'](this['_user'])['length'] && (blk['user'] = bln['a']({}, this['_user'], blk['user'])), this['_context'] && Object['keys'](this['_context'])['length'] && (blk['contexts'] = bln['a']({}, this['_context'], blk['contexts'])), this['_level'] && (blk['level'] = this['_level']), this['_transaction'] && (blk['transaction'] = this['_transaction']), this['_span'] && (blk['contexts'] = blk['contexts'] || {}, blk['contexts']['trace'] = this['_span']), this['_applyFingerprint'](blk), blk['breadcrumbs'] = bln['d'](blk['breadcrumbs'] || [], this['_breadcrumbs']), blk['breadcrumbs'] = 0x0 < blk['breadcrumbs']['length'] ? blk['breadcrumbs'] : void 0x0, this['_notifyEventProcessors'](bln['d'](bm9(), this['_eventProcessors']), blk, bll);
      }, blk;
    }();

  function bm9() {
    var blk = Object(blr['e'])();
    return blk['__SENTRY__'] = blk['__SENTRY__'] || {}, blk['__SENTRY__']['globalEventProcessors'] = blk['__SENTRY__']['globalEventProcessors'] || [], blk['__SENTRY__']['globalEventProcessors'];
  }

  function bmb(blk) {
    bm9()['push'](blk);
  }
}, function(bmd, bme) {
  var bmf = {} ['toString'];
  bmd['exports'] = Array['isArray'] || function(bmd) {
    return '[object\x20Array]' == bmf['call'](bmd);
  };
}, function(bmh, bmi, bmj) {
  var bmk = bmj(0xb);
  bmi['createCodec'] = bmz, bmi['install'] = function(bmh) {
    for (var bmi in bmh) bmu['prototype'][bmi] = bmw(bmu['prototype'][bmi], bmh[bmi]);
  }, bmi['filter'] = function(bmh) {
    return bmk(bmh) ? function(bmh) {
      function bmi(bmh, bmi) {
        return bmi(bmh);
      }
      return bmh = bmh['slice'](),
        function(bmj) {
          return bmh['reduce'](bmi, bmj);
        };
    }(bmh) : bmh;
  };
  var bmt = bmj(0x3);

  function bmu(bmh) {
    return this instanceof bmu ? (this['options'] = bmh, void this['init']()) : new bmu(bmh);
  }

  function bmw(bmh, bmi) {
    return bmh && bmi ? function() {
      return bmh['apply'](this, arguments), bmi['apply'](this, arguments);
    } : bmh || bmi;
  }

  function bmz(bmh) {
    return new bmu(bmh);
  }
  bmu['prototype']['init'] = function() {
    var bmh = this['options'];
    return bmh && bmh['uint8array'] && (this['bufferish'] = bmt['Uint8Array']), this;
  }, bmi['preset'] = bmz({
    'preset': !0x0
  });
}, function(bmC, bmD, bmE) {
  'use strict';
  bmE['d'](bmD, 'a', function() {
    return bmH;
  });
  var bmF = bmE(0x2),
    bmG = /^[ \t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \t]*$/,
    bmH = function() {
      function bmC(bmC, bmD, bmE, bmG) {
        void 0x0 === bmC && (bmC = Object(bmF['g'])()), void 0x0 === bmD && (bmD = Object(bmF['g'])()['substring'](0x10)), this['_traceId'] = bmC, this['_spanId'] = bmD, this['_sampled'] = bmE, this['_parent'] = bmG;
      }
      return bmC['prototype']['setParent'] = function(bmC) {
        return this['_parent'] = bmC, this;
      }, bmC['prototype']['setSampled'] = function(bmC) {
        return this['_sampled'] = bmC, this;
      }, bmC['fromTraceparent'] = function(bmD) {
        var bmE = bmD['match'](bmG);
        if (bmE) {
          var bmF;
          '1' === bmE[0x3] ? bmF = !0x0 : '0' === bmE[0x3] && (bmF = !0x1);
          var bmH = new bmC(bmE[0x1], bmE[0x2], bmF);
          return new bmC(bmE[0x1], void 0x0, bmF, bmH);
        }
      }, bmC['prototype']['toTraceparent'] = function() {
        var bmC = '';
        return !0x0 === this['_sampled'] ? bmC = '-1' : !0x1 === this['_sampled'] && (bmC = '-0'), this['_traceId'] + '-' + this['_spanId'] + bmC;
      }, bmC['prototype']['toJSON'] = function() {
        return {
          'parent': this['_parent'] && this['_parent']['toJSON']() || void 0x0,
          'sampled': this['_sampled'],
          'span_id': this['_spanId'],
          'trace_id': this['_traceId']
        };
      }, bmC;
    }();
}, function(bmU, bmV) {
  var bmW, bmX, bmY = bmU['exports'] = {};

  function bmZ() {
    throw new Error('setTimeout\x20has\x20not\x20been\x20defined');
  }

  function bn0() {
    throw new Error('clearTimeout\x20has\x20not\x20been\x20defined');
  }

  function bn1(bmU) {
    if (bmW === setTimeout) return setTimeout(bmU, 0x0);
    if ((bmW === bmZ || !bmW) && setTimeout) return bmW = setTimeout, setTimeout(bmU, 0x0);
    try {
      return bmW(bmU, 0x0);
    } catch (bn3) {
      try {
        return bmW['call'](null, bmU, 0x0);
      } catch (bn4) {
        return bmW['call'](this, bmU, 0x0);
      }
    }
  }! function() {
    try {
      bmW = 'function' == typeof setTimeout ? setTimeout : bmZ;
    } catch (bn5) {
      bmW = bmZ;
    }
    try {
      bmX = 'function' == typeof clearTimeout ? clearTimeout : bn0;
    } catch (bn6) {
      bmX = bn0;
    }
  }();
  var bn7, bn8 = [],
    bn9 = !0x1,
    bna = -0x1;

  function bnb() {
    bn9 && bn7 && (bn9 = !0x1, bn7['length'] ? bn8 = bn7['concat'](bn8) : bna = -0x1, bn8['length'] && bnc());
  }

  function bnc() {
    if (!bn9) {
      var bmU = bn1(bnb);
      bn9 = !0x0;
      for (var bmV = bn8['length']; bmV;) {
        for (bn7 = bn8, bn8 = []; ++bna < bmV;) bn7 && bn7[bna]['run']();
        bna = -0x1, bmV = bn8['length'];
      }
      bn7 = null, bn9 = !0x1,
        function(bmU) {
          if (bmX === clearTimeout) return clearTimeout(bmU);
          if ((bmX === bn0 || !bmX) && clearTimeout) return bmX = clearTimeout, clearTimeout(bmU);
          try {
            bmX(bmU);
          } catch (bng) {
            try {
              return bmX['call'](null, bmU);
            } catch (bnh) {
              return bmX['call'](this, bmU);
            }
          }
        }(bmU);
    }
  }

  function bni(bmU, bmV) {
    this['fun'] = bmU, this['array'] = bmV;
  }

  function bnl() {}
  bmY['nextTick'] = function(bmU) {
    var bmV = Array(arguments['length'] - 0x1);
    if (0x1 < arguments['length'])
      for (var bmW = 0x1; bmW < arguments['length']; bmW++) bmV[bmW - 0x1] = arguments[bmW];
    bn8['push'](new bni(bmU, bmV)), 0x1 !== bn8['length'] || bn9 || bn1(bnc);
  }, bni['prototype']['run'] = function() {
    this['fun']['apply'](null, this['array']);
  }, bmY['title'] = 'browser', bmY['browser'] = !0x0, bmY['env'] = {}, bmY['argv'] = [], bmY['version'] = '', bmY['versions'] = {}, bmY['on'] = bnl, bmY['addListener'] = bnl, bmY['once'] = bnl, bmY['off'] = bnl, bmY['removeListener'] = bnl, bmY['removeAllListeners'] = bnl, bmY['emit'] = bnl, bmY['prependListener'] = bnl, bmY['prependOnceListener'] = bnl, bmY['listeners'] = function() {
    return [];
  }, bmY['binding'] = function() {
    throw new Error('process.binding\x20is\x20not\x20supported');
  }, bmY['cwd'] = function() {
    return '/';
  }, bmY['chdir'] = function() {
    throw new Error('process.chdir\x20is\x20not\x20supported');
  }, bmY['umask'] = function() {
    return 0x0;
  };
}, function(bnp, bnq, bnr) {
  var bns = bnr(0x10)['ExtBuffer'],
    bnt = bnr(0x2e),
    bnu = bnr(0x2f),
    bnv = bnr(0xc);

  function bnw() {
    var bnp = this['options'];
    return this['encode'] = function(bnp) {
      var bnq = bnu['getWriteType'](bnp);
      return function(bnp, bnr) {
        var bns = bnq[typeof bnr];
        if (!bns) throw new Error('Unsupported\x20type\x20\x22' + typeof bnr + '\x22:\x20' + bnr);
        bns(bnp, bnr);
      };
    }(bnp), bnp && bnp['preset'] && bnt['setExtPackers'](this), this;
  }
  bnv['install']({
    'addExtPacker': function(bnp, bnq, bnr) {
      function bnt(bnq) {
        return bnr && (bnq = bnr(bnq)), new bns(bnq, bnp);
      }
      bnr = bnv['filter'](bnr);
      var bnu = bnq['name'];
      if (bnu && 'Object' !== bnu) {
        var bnw = this['extPackers'] || (this['extPackers'] = {});
        bnw[bnu] = bnt;
      } else {
        var bnK = this['extEncoderList'] || (this['extEncoderList'] = []);
        bnK['unshift']([bnq, bnt]);
      }
    },
    'getExtPacker': function(bnp) {
      var bnq = this['extPackers'] || (this['extPackers'] = {}),
        bnr = bnp['constructor'],
        bns = bnr && bnr['name'] && bnq[bnr['name']];
      if (bns) return bns;
      for (var bnt, bnu = this['extEncoderList'] || (this['extEncoderList'] = []), bnv = bnu['length'], bnw = 0x0; bnw < bnv; bnw++)
        if (bnt = bnu[bnw], bnr === bnt[0x0]) return bnt[0x1];
    },
    'init': bnw
  }), bnq['preset'] = bnw['call'](bnv['preset']);
}, function(bnT, bnU, bnV) {
  bnU['ExtBuffer'] = function bnT(bnU, bnV) {
    return this instanceof bnT ? (this['buffer'] = bnY['from'](bnU), void(this['type'] = bnV)) : new bnT(bnU, bnV);
  };
  var bnY = bnV(0x3);
}, function(bnZ, bo0) {
  bo0['read'] = function(bnZ, bo0, bo3, bo4, bo5) {
    var bo6, bo7, bo8 = 0x8 * bo5 - bo4 - 0x1,
      bo9 = (0x1 << bo8) - 0x1,
      boa = bo9 >> 0x1,
      bob = -0x7,
      boc = bo3 ? bo5 - 0x1 : 0x0,
      bod = bo3 ? -0x1 : 0x1,
      boe = bnZ[bo0 + boc];
    for (boc += bod, bo6 = boe & (0x1 << -bob) - 0x1, boe >>= -bob, bob += bo8; 0x0 < bob; bo6 = 0x100 * bo6 + bnZ[bo0 + boc], boc += bod, bob -= 0x8);
    for (bo7 = bo6 & (0x1 << -bob) - 0x1, bo6 >>= -bob, bob += bo4; 0x0 < bob; bo7 = 0x100 * bo7 + bnZ[bo0 + boc], boc += bod, bob -= 0x8);
    if (0x0 === bo6) bo6 = 0x1 - boa;
    else {
      if (bo6 === bo9) return bo7 ? NaN : 0x1 / 0x0 * (boe ? -0x1 : 0x1);
      bo7 += Math['pow'](0x2, bo4), bo6 -= boa;
    }
    return (boe ? -0x1 : 0x1) * bo7 * Math['pow'](0x2, bo6 - bo4);
  }, bo0['write'] = function(bnZ, bo0, boh, boi, boj, bok) {
    var bol, bom, bon, boo = 0x8 * bok - boj - 0x1,
      bop = (0x1 << boo) - 0x1,
      boq = bop >> 0x1,
      bor = 0x17 === boj ? Math['pow'](0x2, -0x18) - Math['pow'](0x2, -0x4d) : 0x0,
      bos = boi ? 0x0 : bok - 0x1,
      bot = boi ? 0x1 : -0x1,
      bou = 0x0 > bo0 || 0x0 === bo0 && 0x0 > 0x1 / bo0 ? 0x1 : 0x0;
    for (bo0 = Math['abs'](bo0), isNaN(bo0) || bo0 === 0x1 / 0x0 ? (bom = isNaN(bo0) ? 0x1 : 0x0, bol = bop) : (bol = Math['floor'](Math['log'](bo0) / Math['LN2']), 0x1 > bo0 * (bon = Math['pow'](0x2, -bol)) && (bol--, bon *= 0x2), 0x2 <= (bo0 += 0x1 <= bol + boq ? bor / bon : bor * Math['pow'](0x2, 0x1 - boq)) * bon && (bol++, bon /= 0x2), bol + boq >= bop ? (bom = 0x0, bol = bop) : 0x1 <= bol + boq ? (bom = (bo0 * bon - 0x1) * Math['pow'](0x2, boj), bol += boq) : (bom = bo0 * Math['pow'](0x2, boq - 0x1) * Math['pow'](0x2, boj), bol = 0x0)); 0x8 <= boj; bnZ[boh + bos] = 0xff & bom, bos += bot, bom /= 0x100, boj -= 0x8);
    for (bol = bol << boj | bom, boo += boj; 0x0 < boo; bnZ[boh + bos] = 0xff & bol, bos += bot, bol /= 0x100, boo -= 0x8);
    bnZ[boh + bos - bot] |= 0x80 * bou;
  };
}, function(bov, bow, box) {
  var boy, boz = box(0x2d);
  bow['copy'] = boF, bow['slice'] = boN, bow['toString'] = function() {
    return (!boD && boB['isBuffer'](this) ? this['toString'] : boz['toString'])['apply'](this, arguments);
  }, bow['write'] = (boy = 'write', function() {
    var bov = this[boy] || boz[boy];
    return bov['apply'](this, arguments);
  });
  var boB = box(0x3),
    boC = boB['global'],
    boD = boB['hasBuffer'] && 'TYPED_ARRAY_SUPPORT' in boC,
    boE = boD && !boC['TYPED_ARRAY_SUPPORT'];

  function boF(bov, bow, box, boy) {
    var boC = boB['isBuffer'](this),
      boD = boB['isBuffer'](bov);
    if (boC && boD) return this['copy'](bov, bow, box, boy);
    if (!boE && !boC && !boD && boB['isView'](this) && boB['isView'](bov)) {
      var boF = box || null != boy ? boN['call'](this, box, boy) : this;
      return bov['set'](boF, bow), boF['length'];
    }
    return boz['copy']['call'](this, bov, bow, box, boy);
  }

  function boN(bov, bow) {
    var box = this['slice'] || !boE && this['subarray'];
    if (box) return box['call'](this, bov, bow);
    var boy = boB['alloc']['call'](this, bow - bov);
    return boF['call'](this, boy, 0x0, bov, bow), boy;
  }
}, function(boS, boT, boU) {
  (function(boS) {
    ! function(boT) {
      function boU(boS, boU, bp0) {
        function bp1(boS, boT, boU, bp5) {
          return this instanceof bp1 ? function(boS, boT, boU, bp5, bpa) {
            if (bqG && bqH && (boT instanceof bqH && (boT = new bqG(boT)), bp5 instanceof bqH && (bp5 = new bqG(bp5))), !(boT || boU || bp5 || bqE)) return void(boS['buffer'] = bqh(bqI, 0x0));
            if (!bq7(boT, boU)) {
              var bpb = bqE || Array;
              bpa = boU, bp5 = boT, boU = 0x0, boT = new bpb(0x8);
            }
            boS['buffer'] = boT, boS['offset'] = boU |= 0x0, void 0x0 === bp5 || ('string' == typeof bp5 ? function(boS, boT, boU, bp5) {
              var bpa = 0x0,
                bpb = boU['length'],
                bpi = 0x0,
                bpj = 0x0;
              '-' === boU[0x0] && bpa++;
              for (var bpk, bpl = bpa; bpa < bpb && 0x0 <= (bpk = parseInt(boU[bpa++], bp5));) bpj = bpj * bp5 + bpk, bpi = bpi * bp5 + Math['floor'](bpj / 0x100000000), bpj %= 0x100000000;
              bpl && (bpi = ~bpi, bpj ? bpj = 0x100000000 - bpj : bpi++), bpr(boS, boT + bpy, bpi), bpr(boS, boT + bpz, bpj);
            }(boT, boU, bp5, bpa || 0xa) : bq7(bp5, bpa) ? bqb(boT, boU, bp5, bpa) : 'number' == typeof bpa ? (bpr(boT, boU + bpy, bp5), bpr(boT, boU + bpz, bpa)) : 0x0 < bp5 ? bpE(boT, boU, bp5) : 0x0 > bp5 ? bpF(boT, boU, bp5) : bqb(boT, boU, bqI, 0x0));
          }(this, boS, boT, boU, bp5) : new bp1(boS, boT, boU, bp5);
        }

        function bpm() {
          var boS = this['buffer'],
            boT = this['offset'],
            boU = bpv(boS, boT + bpy),
            bpq = bpv(boS, boT + bpz);
          return bp0 || (boU |= 0x0), boU ? 0x100000000 * boU + bpq : bpq;
        }

        function bpr(boS, boT, boU) {
          boS[boT + bpD] = 0xff & boU, boU >>= 0x8, boS[boT + bpC] = 0xff & boU, boU >>= 0x8, boS[boT + bpB] = 0xff & boU, boU >>= 0x8, boS[boT + bpA] = 0xff & boU;
        }

        function bpv(boS, boT) {
          return 0x1000000 * boS[boT + bpA] + (boS[boT + bpB] << 0x10) + (boS[boT + bpC] << 0x8) + boS[boT + bpD];
        }
        var bpy = boU ? 0x0 : 0x4,
          bpz = boU ? 0x4 : 0x0,
          bpA = boU ? 0x0 : 0x3,
          bpB = boU ? 0x1 : 0x2,
          bpC = boU ? 0x2 : 0x1,
          bpD = boU ? 0x3 : 0x0,
          bpE = boU ? bqk : bqu,
          bpF = boU ? bqp : bqz,
          bpG = bp1['prototype'],
          bpH = 'is' + boS,
          bpI = '_' + bpH;
        return bpG['buffer'] = void 0x0, bpG['offset'] = 0x0, bpG[bpI] = !0x0, bpG['toNumber'] = bpm, bpG['toString'] = function(boS) {
          var boT = this['buffer'],
            boU = this['offset'],
            bpM = bpv(boT, boU + bpy),
            bpN = bpv(boT, boU + bpz),
            bpO = '',
            bpP = !bp0 && 0x80000000 & bpM;
          for (bpP && (bpM = ~bpM, bpN = 0x100000000 - bpN), boS = boS || 0xa;;) {
            var bpQ = bpM % boS * 0x100000000 + bpN;
            if (bpM = Math['floor'](bpM / boS), bpN = Math['floor'](bpQ / boS), bpO = (bpQ % boS)['toString'](boS) + bpO, !bpM && !bpN) break;
          }
          return bpP && (bpO = '-' + bpO), bpO;
        }, bpG['toJSON'] = bpm, bpG['toArray'] = bpS, bqF && (bpG['toBuffer'] = bpW), bqG && (bpG['toArrayBuffer'] = bq1), bp1[bpH] = function(boS) {
          return !(!boS || !boS[bpI]);
        }, boT[boS] = bp1, bp1;
      }

      function bpS(boS) {
        var boT = this['buffer'],
          boU = this['offset'];
        return bqE = null, !0x1 !== boS && 0x0 === boU && 0x8 === boT['length'] && bqJ(boT) ? boT : bqh(boT, boU);
      }

      function bpW(boT) {
        var boU = this['buffer'],
          bpS = this['offset'];
        if (bqE = bqF, !0x1 !== boT && 0x0 === bpS && 0x8 === boU['length'] && boS['isBuffer'](boU)) return boU;
        var bpW = new bqF(0x8);
        return bqb(bpW, 0x0, boU, bpS), bpW;
      }

      function bq1(boS) {
        var boT = this['buffer'],
          boU = this['offset'],
          bpS = boT['buffer'];
        if (bqE = bqG, !0x1 !== boS && 0x0 === boU && bpS instanceof bqH && 0x8 === bpS['byteLength']) return bpS;
        var bpW = new bqG(0x8);
        return bqb(bpW, 0x0, boT, boU), bpW['buffer'];
      }

      function bq7(boS, boT) {
        var boU = boS && boS['length'];
        return boT |= 0x0, boU && boT + 0x8 <= boU && 'string' != typeof boS[boT];
      }

      function bqb(boS, boT, boU, bpS) {
        boT |= 0x0, bpS |= 0x0;
        for (var bpW = 0x0; 0x8 > bpW; bpW++) boS[boT++] = 0xff & boU[bpS++];
      }

      function bqh(boS, boT) {
        return Array['prototype']['slice']['call'](boS, boT, boT + 0x8);
      }

      function bqk(boS, boT, boU) {
        for (var bpS = boT + 0x8; bpS > boT;) boS[--bpS] = 0xff & boU, boU /= 0x100;
      }

      function bqp(boS, boT, boU) {
        var bpS = boT + 0x8;
        for (boU++; bpS > boT;) boS[--bpS] = 0xff ^ 0xff & -boU, boU /= 0x100;
      }

      function bqu(boS, boT, boU) {
        for (var bpS = boT + 0x8; boT < bpS;) boS[boT++] = 0xff & boU, boU /= 0x100;
      }

      function bqz(boS, boT, boU) {
        var bpS = boT + 0x8;
        for (boU++; boT < bpS;) boS[boT++] = 0xff ^ 0xff & -boU, boU /= 0x100;
      }
      var bqE, bqF = void 0x0 !== boS && boS,
        bqG = 'undefined' != typeof Uint8Array && Uint8Array,
        bqH = 'undefined' != typeof ArrayBuffer && ArrayBuffer,
        bqI = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0],
        bqJ = Array['isArray'] || function(boS) {
          return !!boS && '[object\x20Array]' == Object['prototype']['toString']['call'](boS);
        };
      boU('Uint64BE', !0x0, !0x0), boU('Int64BE', !0x0, !0x1), boU('Uint64LE', !0x1, !0x0), boU('Int64LE', !0x1, !0x1);
    }('string' != typeof boT['nodeName'] ? boT : this || {});
  } ['call'](this, boU(0x1c)['Buffer']));
}, function(bqL, bqM, bqN) {
  var bqO = bqN(0x10)['ExtBuffer'],
    bqP = bqN(0x31),
    bqQ = bqN(0x21)['readUint8'],
    bqR = bqN(0x32),
    bqS = bqN(0xc);

  function bqT() {
    var bqL = this['options'];
    return this['decode'] = function(bqL) {
      var bqM = bqR['getReadToken'](bqL);
      return function(bqL) {
        var bqN = bqQ(bqL),
          bqO = bqM[bqN];
        if (!bqO) throw new Error('Invalid\x20type:\x20' + (bqN ? '0x' + bqN['toString'](0x10) : bqN));
        return bqO(bqL);
      };
    }(bqL), bqL && bqL['preset'] && bqP['setExtUnpackers'](this), this;
  }
  bqS['install']({
    'addExtUnpacker': function(bqL, bqM) {
      (this['extUnpackers'] || (this['extUnpackers'] = []))[bqL] = bqS['filter'](bqM);
    },
    'getExtUnpacker': function(bqL) {
      return (this['extUnpackers'] || (this['extUnpackers'] = []))[bqL] || function(bqM) {
        return new bqO(bqM, bqL);
      };
    },
    'init': bqT
  }), bqM['preset'] = bqT['call'](bqS['preset']);
}, function(br4, br5) {
  br4['exports']['verified'] = {
    'clan': '#FBC02D',
    'player': '#40C4FF'
  }, br4['exports']['damage'] = '#DE292F', br4['exports']['critical'] = '#FFD542', br4['exports']['crosshair'] = {
    'background': '#ffffff',
    'shadow': '#000000'
  }, br4['exports']['hudHealth'] = {
    'low': '#eb5656',
    'high': '#9eeb56'
  }, br4['exports']['popupScore'] = '#ffea78', br4['exports']['ping'] = {
    'low': '#9eeb56',
    'medium': '#ffd542',
    'high': '#ff4b42'
  }, br4['exports']['teams'] = ['#9eeb56', '#eb5656'], br4['exports']['creationDate'] = {
    'new': '#0a61f7',
    'recent': '#E040FB',
    'old': '#ed4242'
  }, br4['exports']['matchVote'] = {
    'selected': 'rgba(251,\x20192,\x2045,\x201)',
    'notSelected': 'rgba(255,\x20255,\x20255,\x200.7)'
  }, br4['exports']['killFeed'] = {
    'enemy': '#eb5656',
    'ally': '#9eeb56',
    'you': '#fff'
  }, br4['exports']['interactPopup'] = {
    'key': '#FBC02D',
    'enough': '#9eeb56',
    'notEnough': '#eb5656'
  }, br4['exports']['modeSpecific'] = {
    'infected': {
      'skin': 0x596151
    },
    'stalker': {
      'skin': 0x0,
      'body': [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
    }
  }, br4['exports']['zones'] = {
    'BR': ['#c542d9', '#c542d9', '#c542d9'],
    'sky': ['#74a4b9', '#dce8ed', '#dce8ed']
  };
}, function(br6, br7) {
  var br8 = function() {
    return this;
  }();
  try {
    br8 = br8 || new Function('return\x20this')();
  } catch (br9) {
    'object' == typeof window && (br8 = window);
  }
  br6['exports'] = br8;
}, function(bra, brb) {
  bra['exports'] = [{
    'name': 'Sniper\x20Rifle',
    'src': 'weapon_1',
    'icon': 'icon_1',
    'sound': 'weapon_1',
    'animWhileAim': !0x0,
    'trail': !0x0,
    'flap': {
      'src': 'flap_0',
      'rot': 2.1,
      'scl': 0x1,
      'zOff': 0.43,
      'xOff': 0.17,
      'yOff': 0.53
    },
    'noAo': !0x0,
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'type': 0x0,
    'scope': !0x0,
    'swapTime': 0x12c,
    'aimSpeed': 0x78,
    'spdMlt': 0.95,
    'ammo': 0x3,
    'reload': 0x5dc,
    'dmg': 0x64,
    'pierce': 0.2,
    'range': 0x3e8,
    'dropStart': 0xe6,
    'dmgDrop': 0x1e,
    'scale': 0.00115608717587935,
    'leftHoldY': -0.7,
    'rightHoldY': -0.75,
    'leftHoldZ': 2.4,
    'rightHoldZ': 0.4,
    'xOff': 0.8,
    'yOff': -0.68,
    'zOff': -1.8,
    'xOrg': 0x0,
    'yOrg': -0.55,
    'zOrg': -0.8,
    'cLean': 0.2,
    'cRot': 0.2,
    'cDrop': 0.1,
    'inspectR': 0.2,
    'inspectM': 0.1,
    'muzOff': 0x8,
    'muzMlt': 1.6,
    'rate': 0x384,
    'spread': 0x104,
    'zoom': 2.7,
    'leanMlt': 1.5,
    'recoil': 0.009,
    'recoilR': 0.02,
    'recover': 0.993,
    'recoverY': 0.997,
    'recoverF': 0.975,
    'recoilYM': 0.35,
    'recoilZ': 1.4,
    'recoilAnim': {
      'time': 0x118,
      'aimTime': 0x1f4,
      'recoilTweenY': 0.3
    },
    'jumpYM': 0.15,
    'rumble': 0.9,
    'rumbleDur': 0x1f4,
    'icnPad': 0x9
  }, {
    'name': 'Assault\x20Rifle',
    'src': 'weapon_2',
    'icon': 'icon_2',
    'sound': 'weapon_2',
    'noAo': !0x0,
    'swapWiggle': 0.3,
    'attach': 0x0,
    'attachYOff': -0.1,
    'attachZOff': -0.8,
    'zRot': 0x1,
    'type': 0x0,
    'swapTime': 0x12c,
    'aimSpeed': 0x82,
    'spdMlt': 0.95,
    'ammo': 0x1e,
    'rate': 0x6e,
    'reload': 0x4b0,
    'dmg': 0x17,
    'pierce': 0x1,
    'range': 0x2bc,
    'dmgDrop': 0x5,
    'scale': 0.00095745145728643,
    'leftHoldY': -0.45,
    'rightHoldY': -0.6,
    'leftHoldZ': 0.65,
    'rightHoldZ': -1.3,
    'xOff': 0x1,
    'yOff': -0.7,
    'yRot': 0.0018,
    'zOff': -3.6,
    'xOrg': 0x0,
    'yOrg': -0.625,
    'zOrg': -2.3,
    'cLean': 0.2,
    'cRot': 0.2,
    'cDrop': 0.1,
    'inspectR': 0.1,
    'inspectM': 1.5,
    'caseZOff': -1.7,
    'caseYOff': -0.2,
    'muzOff': 5.1,
    'muzOffY': -0.05,
    'muzMlt': 1.4,
    'spread': 0x64,
    'minSpread': 0x5,
    'zoom': 1.6,
    'leanMlt': 1.5,
    'recoil': 0.003,
    'recoilR': 0.02,
    'recover': 0.978,
    'recoverY': 0.995,
    'recoverF': 0.975,
    'jYMlt': 0.9,
    'recoilYM': 0.32,
    'recoilZ': 0x5,
    'recoilZM': -0.05,
    'aimRecMlt': 0.8,
    'recoilAnim': {
      'time': 0x12c,
      'recoilTweenY': 0.05
    },
    'jumpYM': 0.6,
    'rumble': 0.5,
    'icnPad': 0x5
  }, {
    'name': 'Pistol',
    'src': 'weapon_3',
    'icon': 'icon_3',
    'sound': 'weapon_3',
    'secondary': !0x0,
    'noAo': !0x0,
    'transp': !0x0,
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'kill': ['', 0x4b],
    'swapWiggle': 0.3,
    'type': 0x1,
    'shine': 0xa,
    'swapTime': 0x15e,
    'aimSpeed': 0x78,
    'spdMlt': 1.05,
    'ammo': 0xa,
    'reload': 0x2bc,
    'dmg': 0x14,
    'range': 0x2bc,
    'dmgDrop': 0xa,
    'scale': 0.0003158947055276376,
    'leftHoldY': -1.1,
    'rightHoldY': -0.62,
    'leftHoldZ': -0.55,
    'rightHoldZ': -0.5,
    'xOff': 0.7,
    'yOff': -0.6,
    'zOff': -3.7,
    'xOrg': 0x0,
    'yRot': -0.005,
    'yOrg': -0.23,
    'zOrg': -3.9,
    'jYMlt': 0.1,
    'cLean': 0.3,
    'cRot': 0.3,
    'caseZOff': 0.2,
    'caseYOff': 0x0,
    'inspectR': 0.3,
    'inspectM': 0.8,
    'muzOff': 1.5,
    'muzOffY': 0x0,
    'muzMlt': 0.95,
    'rate': 0x96,
    'spread': 0x5a,
    'zoom': 1.4,
    'leanMlt': 0x1,
    'recoil': 0.006,
    'recoilR': 0.01,
    'recover': 0.98,
    'recoverY': 0.99,
    'recoverF': 0.98,
    'recoilYM': 0.2,
    'aimRecMlt': 0.4,
    'recoilZ': 3.6,
    'recoilZM': -0.4,
    'recoilAnim': {
      'time': 0xc8,
      'recoilTweenY': 0.2
    },
    'rumble': 0.4,
    'icnPad': -0xf
  }, {
    'name': 'Submachine\x20Gun',
    'src': 'weapon_4',
    'icon': 'icon_4',
    'sound': 'weapon_4',
    'swapWiggle': 0.5,
    'attach': 0x0,
    'attachYOff': -0.09,
    'attachZOff': -1.1,
    'zRot': 0.75,
    'noAo': !0x0,
    'type': 0x0,
    'shine': 0x32,
    'swapTime': 0x12c,
    'aimSpeed': 0x78,
    'spdMlt': 1.04,
    'ammo': 0x1c,
    'reload': 0x3e8,
    'dmg': 0x12,
    'pierce': 0x1,
    'range': 0x2bc,
    'dmgDrop': 0xc,
    'scale': 0.000574897587939697,
    'leftHoldY': -0.4,
    'leftHoldX': -0.1,
    'rightHoldY': -0.5,
    'leftHoldZ': 1.1,
    'rightHoldZ': -0.95,
    'xOff': 0.85,
    'yOff': -0.86,
    'zOff': -0x3,
    'xOrg': 0x0,
    'yOrg': -0.59,
    'zOrg': -2.5,
    'cRot': 0.18,
    'cLean': 0.16,
    'inspectR': 0.2,
    'inspectM': 1.2,
    'caseYOff': -0.15,
    'caseZOff': -0.4,
    'muzOff': 2.15,
    'muzOffY': 0.1,
    'rate': 0x5a,
    'spread': 0x46,
    'minSpread': 0x5,
    'zoom': 1.65,
    'jYMlt': 0.8,
    'leanMlt': 0x1,
    'recoil': 0.0034,
    'recoilY': 0.77,
    'recoilR': 0.02,
    'recover': 0.975,
    'recoverY': 0.996,
    'recoverF': 0.975,
    'recoilZ': 3.2,
    'recoilZM': -0.1,
    'aimRecMlt': 0.7,
    'recoilAnim': {
      'time': 0xc8,
      'recoilTweenYM': 0.05,
      'recoilTweenY': 0.06
    },
    'expScale': 0.8,
    'rumble': 0.4,
    'icnPad': 0x0
  }, {
    'name': 'Revolver',
    'src': 'weapon_5',
    'icon': 'icon_5',
    'sound': 'weapon_5',
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'noAo': !0x0,
    'nCase': !0x0,
    'transp': !0x0,
    'kill': ['', 0x32],
    'type': 0x0,
    'swapTime': 0xc8,
    'aimSpeed': 0x6e,
    'spdMlt': 1.04,
    'ammo': 0x6,
    'reload': 0x384,
    'dmg': 0x42,
    'pierce': 0.85,
    'dmgDrop': 0xa,
    'scale': 0.000515531266331653,
    'hDstOff': 0x2,
    'leftHoldY': -1.6,
    'rightHoldY': -0.8,
    'leftHoldZ': -0.6,
    'rightHoldZ': -0.72,
    'rotOff': -0.05,
    'xOff': 0.7,
    'yOff': -0.5,
    'zOff': -3.5,
    'xOrg': 0x0,
    'yOrg': -0.31,
    'zOrg': -3.5,
    'jYMlt': 0.96,
    'cLean': 0.2,
    'cRot': 0.1,
    'cDrop': 0.3,
    'inspectR': 0.1,
    'inspectM': 0.3,
    'muzOff': 2.75,
    'muzOffY': 0.2,
    'muzMlt': 0.95,
    'range': 0x2bc,
    'rate': 0x186,
    'spread': 0x64,
    'zoom': 1.45,
    'leanMlt': 1.6,
    'recoil': 0.013,
    'recoilR': 0.045,
    'recover': 0.982,
    'recoverY': 0.992,
    'recoverF': 0.98,
    'recoilYM': 0.6,
    'aimRecMlt': 0.55,
    'recoilZM': 0.01,
    'recoilZ': 3.4,
    'recoilAnim': {
      'time': 0x12c,
      'recoilTweenY': 0.35
    },
    'expScale': 0.9,
    'rumble': 0.7,
    'icnPad': -0xa
  }, {
    'name': 'Shotgun',
    'src': 'weapon_6',
    'icon': 'icon_6',
    'sound': 'weapon_6',
    'noAo': !0x0,
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'nCase': !0x0,
    'transp': !0x0,
    'nRing': !0x0,
    'swapWiggle': 0.4,
    'shine': 0x23,
    'type': 0x0,
    'physRang': 0x23,
    'physPow': 0.085,
    'swapTime': 0x12c,
    'aimSpeed': 0x78,
    'spdMlt': 0x1,
    'ammo': 0x2,
    'reload': 0x44c,
    'dmg': 0x32,
    'dmgDrop': 0x32,
    'scale': 0.00082934281407035,
    'rightHoldX': 0.1,
    'leftHoldY': -0.5,
    'rightHoldY': -0.7,
    'leftHoldZ': 0.4,
    'rightHoldZ': -1.5,
    'xOff': 0.95,
    'yOff': -0.65,
    'zOff': -3.8,
    'xOrg': 0x0,
    'yOrg': -0.3,
    'zOrg': -2.8,
    'cLean': 0.2,
    'cRot': 0.2,
    'cDrop': 0.1,
    'jYMlt': 0.2,
    'inspectR': 0.1,
    'inspectM': 1.9,
    'muzOff': 0x6,
    'muzMlt': 1.8,
    'range': 0xf0,
    'rate': 0x190,
    'innac': 0x6e,
    'spread': 0x78,
    'shots': 0x5,
    'minSpread': 0x14,
    'zoom': 1.25,
    'leanMlt': 1.6,
    'recoil': 0.016,
    'recoilR': 0.015,
    'recover': 0.99,
    'recoverF': 0.97,
    'recoilZ': 0x2,
    'recoilZM': 0.2,
    'aimRecMlt': 0.5,
    'recoilYM': 0.6,
    'recoilAnim': {
      'time': 0x154,
      'recoilTweenY': 0.2
    },
    'jumpYM': 0.5,
    'rumble': 0.8,
    'icnPad': 0xa
  }, {
    'name': 'Machine\x20Gun',
    'src': 'weapon_7',
    'icon': 'icon_7',
    'sound': 'weapon_7',
    'type': 0x0,
    'attach': 0x0,
    'swapWiggle': 0.3,
    'attachYOff': -0.085,
    'attachZOff': -0.7,
    'zRot': 0.75,
    'noAo': !0x0,
    'swapTime': 0x2bc,
    'aimSpeed': 0xc8,
    'spdMlt': 0.79,
    'ammo': 0x3c,
    'reload': 0xdac,
    'dmg': 0x14,
    'pierce': 0x1,
    'range': 0x2bc,
    'dmgDrop': 0xa,
    'jYMlt': 0.8,
    'scale': 0.0008856008924623108,
    'leftHoldY': -0.85,
    'leftHoldX': 0.4,
    'rightHoldY': -0.75,
    'leftHoldZ': 1.1,
    'rightHoldZ': -0.2,
    'yRot': -0.01,
    'xOff': 0.95,
    'yOff': -0.75,
    'zOff': -2.8,
    'xOrg': 0x0,
    'yOrg': -0.6,
    'zOrg': -1.8,
    'cLean': 0.1,
    'cRot': 0.1,
    'cDrop': 0.1,
    'inspectR': 0.2,
    'inspectM': 0.6,
    'caseInd': 0x2,
    'caseZOff': -0.5,
    'caseYOff': -0.1,
    'muzOff': 5.5,
    'muzOffY': -0.14,
    'muzMlt': 1.7,
    'rate': 0x82,
    'spread': 0x12c,
    'minSpread': 0xa,
    'zoom': 1.3,
    'leanMlt': 1.6,
    'recoil': 0.0032,
    'recoilR': 0.014,
    'recover': 0.98,
    'recoverY': 0.9975,
    'recoverF': 0.975,
    'recoilZ': 3.8,
    'recoilYM': 0.25,
    'recoilZ': 0x3,
    'recoilZM': -0.1,
    'aimRecMlt': 0.5,
    'recoilAnim': {
      'time': 0xc8,
      'recoilTweenY': 0.03
    },
    'jumpYM': 0.5,
    'expScale': 0.85,
    'rumble': 0.65,
    'icnPad': 0xa
  }, {
    'name': 'Semi\x20Auto',
    'src': 'weapon_8',
    'icon': 'icon_8',
    'sound': 'weapon_8',
    'attach': 0x0,
    'attachYOff': -0.08,
    'attachZOff': -1.55,
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'zRot': 0.7,
    'type': 0x0,
    'noAo': !0x0,
    'swapWiggle': 0.4,
    'swapTime': 0x12c,
    'aimSpeed': 0x78,
    'spdMlt': 0x1,
    'ammo': 0x8,
    'reload': 0x5dc,
    'dmg': 0x22,
    'pierce': 0.2,
    'range': 0x3e8,
    'dmgDrop': 0x0,
    'scale': 0.00093686221105528,
    'leftHoldY': -0.5,
    'rightHoldY': -0.45,
    'leftHoldZ': 0.4,
    'rightHoldZ': -1.85,
    'jYMlt': 0.9,
    'xOff': 0.8,
    'yOff': -0.55,
    'zOff': -3.5,
    'xOrg': 0x0,
    'yOrg': -0.395,
    'yRot': -0.005,
    'zOrg': -3.4,
    'cLean': 0.2,
    'cRot': 0.2,
    'cDrop': 0.1,
    'inspectR': 0.2,
    'inspectM': 1.4,
    'muzOff': 0x4,
    'muzOffY': -0.05,
    'muzMlt': 1.1,
    'rate': 0x78,
    'spread': 0xfa,
    'caseZOff': -1.3,
    'zoom': 2.1,
    'recoil': 0.01,
    'recoilR': 0.012,
    'recover': 0.98,
    'recoilY': 0.36,
    'recoverY': 0.994,
    'recoverF': 0.975,
    'recoilYM': 0.6,
    'recoilZ': 0x2,
    'recoilZM': 0.2,
    'aimRecMlt': 0.8,
    'recoilAnim': {
      'time': 0xfa,
      'recoilTweenY': 0.11
    },
    'jumpYM': 0.5,
    'rumble': 0.75,
    'icnPad': 0xa
  }, {
    'name': 'Rocket\x20Launcher',
    'src': 'weapon_9',
    'icon': 'icon_9',
    'sound': 'weapon_9',
    'nInsp': !0x0,
    'nSkill': !0x0,
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'nCase': !0x0,
    'nRing': !0x0,
    'noAo': !0x0,
    'projectile': 0x0,
    'type': 0x0,
    'swapTime': 0x190,
    'swapWiggle': 0.4,
    'aimSpeed': 0xc8,
    'spdMlt': 0.9,
    'physRang': 0x28,
    'physPow': 0.095,
    'ammo': 0x2,
    'shots': 0x0,
    'reload': 0x708,
    'scale': 0.00076263407035176,
    'leftHoldX': -0.1,
    'leftHoldY': -0.36,
    'rightHoldY': -0.3,
    'leftHoldZ': 1.2,
    'rightHoldX': -0.15,
    'rightHoldZ': -0.2,
    'jYMlt': 0.4,
    'xOff': 0.95,
    'yOff': -0.56,
    'zOff': -2.6,
    'xOrg': 0x0,
    'yOrg': -0.945,
    'zOrg': -0x3,
    'zRot': 0.9,
    'cLean': 0.2,
    'cRot': 0.2,
    'cDrop': 0.1,
    'muzOff': 0x5,
    'muzOffY': 0x0,
    'muzMlt': 1.5,
    'rate': 0x15e,
    'spread': 0x78,
    'minSpread': 0xf,
    'zoom': 1.5,
    'leanMlt': 1.4,
    'landBob': 0.8,
    'recoil': 0.008,
    'recoilR': 0.012,
    'recover': 0.99,
    'recoverY': 0.998,
    'recoverF': 0.975,
    'recoilZ': 0x4,
    'recoilZM': -0.5,
    'aimRecMlt': 0.9,
    'recoilAnim': {
      'time': 0x190,
      'recoilTweenY': 0.25
    },
    'jumpYM': 0.3,
    'expScale': 0.7,
    'rumble': 0x1,
    'rumbleDur': 0x2ee,
    'icnPad': 0xa
  }, {
    'name': 'Akimbo\x20Uzi',
    'src': 'weapon_10',
    'icon': 'icon_10',
    'sound': 'weapon_10',
    'nInsp': !0x0,
    'noAim': !0x0,
    'akimbo': !0x0,
    'type': 0x0,
    'swapTime': 0x12c,
    'aimSpeed': 0x78,
    'spdMlt': 1.04,
    'ammo': 0x12,
    'reload': 0x4b0,
    'dmg': 0x12,
    'pierce': 0x1,
    'range': 0x2bc,
    'dmgDrop': 0xc,
    'scale': 0.9,
    'rightHoldY': -0.55,
    'leftHoldZ': 0.3,
    'leftHoldX': -0.25,
    'leftHoldY': -0.55,
    'rightHoldZ': 0.3,
    'rightHoldX': -0.25,
    'holdW': 1.3,
    'xOff': 1.5,
    'yOff': -0.95,
    'zOff': -3.3,
    'xOrg': 0x0,
    'yOrg': -0.62,
    'zOrg': -2.5,
    'zLnM': 0.4,
    'cLean': 0.1,
    'cRot': 0.1,
    'cDrop': 0.2,
    'caseYOff': -0.15,
    'caseZOff': -0.4,
    'muzOff': 3.6,
    'rate': 0x3c,
    'spread': 0x28,
    'spreadInc': 1.5,
    'minSpread': 0xa,
    'zoom': 1.5,
    'leanMlt': 0.6,
    'recoil': 0.0034,
    'recoilR': 0.015,
    'recover': 0.978,
    'recoverY': 0.996,
    'recoverF': 0.975,
    'recoilZ': 0x5,
    'recoilYM': 0.6,
    'recoilAnim': {
      'recoilTweenY': 0.01
    },
    'expScale': 0.7,
    'rumble': 0.4,
    'icnPad': -0x4
  }, {
    'name': 'Desert\x20Eagle',
    'src': 'weapon_11',
    'icon': 'icon_11',
    'sound': 'weapon_11',
    'secondary': !0x0,
    'minRec': 0xf,
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'noAo': !0x0,
    'transp': !0x0,
    'kill': ['', 0x32],
    'type': 0x1,
    'swapTime': 0xc8,
    'aimSpeed': 0x78,
    'spdMlt': 0x1,
    'ammo': 0x6,
    'reload': 0x3e8,
    'dmg': 0x32,
    'pierce': 0.85,
    'dmgDrop': 0xa,
    'scale': 0.94,
    'leftHoldY': -0.9,
    'rightHoldY': -0.7,
    'leftHoldZ': -0.5,
    'rightHoldZ': -0.5,
    'holdW': 0.95,
    'xOff': 0x1,
    'yOff': -0.7,
    'zOff': -4.1,
    'xOrg': 0x0,
    'yOrg': -0.195,
    'zOrg': -3.8,
    'cLean': 0.3,
    'cRot': 0.3,
    'inspectR': 0.35,
    'inspectM': 0.9,
    'muzOff': 0x2,
    'muzMlt': 1.1,
    'range': 0x2bc,
    'rate': 0x190,
    'spread': 0x96,
    'jYMlt': 0.5,
    'zoom': 1.4,
    'leanMlt': 1.6,
    'recoil': 0.01,
    'recoilR': 0.01,
    'recover': 0.985,
    'recoverY': 0.996,
    'recoverF': 0.98,
    'recoilYM': 0.4,
    'aimRecMlt': 0.5,
    'recoilZ': 2.5,
    'recoilZM': 0.2,
    'recoilAnim': {
      'time': 0x122,
      'recoilTweenY': 0.35
    },
    'rumble': 0.8,
    'icnPad': -0xa
  }, {
    'name': 'Alien\x20Blaster',
    'src': 'weapon_13',
    'icon': 'icon_13',
    'sound': 'weapon_13',
    'secondary': !0x0,
    'nRing': !0x0,
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'transp': !0x0,
    'nCase': !0x0,
    'minRec': 0x32,
    'kill': ['', 0x32],
    'type': 0x1,
    'swapTime': 0xc8,
    'aimSpeed': 0x78,
    'spdMlt': 0x1,
    'ammo': 0x4,
    'reload': 0x5dc,
    'dmg': 0x32,
    'pierce': 0.85,
    'dmgDrop': 0xa,
    'scale': 1.1,
    'leftHoldY': -0x1,
    'rightHoldY': -0.65,
    'leftHoldZ': -0.2,
    'rightHoldZ': -0.2,
    'xOff': 1.3,
    'yOff': -0.83,
    'zOff': -4.1,
    'xOrg': 0x0,
    'yRot': -0.01,
    'yOrg': -0.53,
    'zOrg': -3.8,
    'cLean': 0.2,
    'cRot': 0.2,
    'cDrop': 0x0,
    'inspectR': 0.1,
    'inspectM': 0.8,
    'holdW': 0.7,
    'muzOff': 2.2,
    'muzOffY': 0.1,
    'muzID': 0x3,
    'muzMlt': 1.1,
    'jYMlt': 0.8,
    'range': 0x2bc,
    'rate': 0xaa,
    'spread': 0x96,
    'zoom': 1.4,
    'leanMlt': 1.6,
    'recoil': 0.006,
    'recoilR': 0.01,
    'recover': 0.98,
    'recoverY': 0.99,
    'recoverF': 0.98,
    'recoilYM': 0.2,
    'recoilZ': 0x2,
    'aimRecMlt': 0.6,
    'recoilAnim': {
      'time': 0xc8,
      'recoilTweenY': 0.3
    },
    'rumble': 0.4,
    'icnPad': -0x8
  }, {
    'name': 'Combat\x20Knife',
    'icon': 'icon_0',
    'melee': !0x0,
    'nInsp': !0x0,
    'noSkins': !0x0,
    'holdW': 0.9,
    'swapWiggle': 0.3,
    'sounds': ['swish_0', 'swish_1'],
    'noAim': !0x0,
    'anim': function(bra, brb, bre) {
      if (0x1 == bre) {
        bra['handAnimInd'] = -0x1 * (bra['handAnimInd'] || 0x1);
        var brf = !0x1;
        bra['meleeAnim']['anim'] && (bra['meleeAnim']['anim']['stop'](), brf = 0x2 <= bra['meleeAnim']['armM']), bra['resetMeleeAnim']();
        var brg = -1.2,
          brh = 0.7,
          bri = -0.4;
        brf ? (brg += 0.1, bra['meleeAnim']['weaR'] = brg, bri += 0.8, bra['meleeAnim']['armR'] = bri, brh += 0.2, bra['meleeAnim']['weaM'] = brh, bra['meleeAnim']['flipW'] = Math['PI']) : brg -= 0.4, bra['meleeAnim']['anim'] = new brb['Tween'](bra['meleeAnim'])['to']({
          'armR': bri,
          'lArm': 0x1,
          'armT': brf ? -0.2 : -0.8,
          'armY': -0x3,
          'armM': brf ? -0xa : 0xd,
          'armE': -0x2,
          'weaR': brg,
          'weaM': brh
        }, 0xdc * (brf ? 1.3 : 0x1))['easing'](brb['Easing']['Cubic']['Out'])['onComplete'](function() {
          bra['meleeAnim']['anim'] = new brb['Tween'](bra['meleeAnim'])['to']({
            'armR': 0x0,
            'armT': 0x0,
            'armY': 0x0,
            'lArm': 0x0,
            'armM': 0x0,
            'armE': 0x0,
            'weaR': 0x0,
            'weaM': 0x0,
            'flipW': 0x0
          }, 0x15e)['easing'](brb['Easing']['Cubic']['Out'])['start']();
        })['start']();
      } else {
        bra['handAnimInd'] = -0x1 * (bra['handAnimInd'] || 0x1);
        var brj = (0x1 == bra['handAnimInd'] ? 'l' : 'r') + 'HndTween';
        bra[brj] && bra[brj]['stop'](), bra[brj + 'A'] = bra[brj + 'A'] || 0x0, bra[brj] = new brb['Tween'](bra)['to']({
          [brj + 'A']: 2.4
        }, 0x1e)['easing'](brb['Easing']['Linear']['None'])['onComplete'](function() {
          bra[brj] = new brb['Tween'](bra)['to']({
            [brj + 'A']: 0x0
          }, 0xc8)['easing'](brb['Easing']['Linear']['None'])['delay'](0x64)['start']();
        })['start']();
      }
    },
    'type': 0x1,
    'swapTime': 0x118,
    'aimSpeed': 0x78,
    'rate': 0xfa,
    'dmg': 0x32,
    'dmgDrop': 0x0,
    'range': 0xf,
    'spdMlt': 1.1,
    'spread': 0x64,
    'leftHoldY': -0.82,
    'leftHoldX': 1.5,
    'rightHoldX': -1.5,
    'rightHoldY': -0.82,
    'leftHoldZ': -0.5,
    'rightHoldZ': -0.5,
    'xOff': 0x0,
    'yOff': -0.6,
    'zOff': -3.6,
    'xOrg': 0.5,
    'yOrg': 0x0,
    'zOrg': -3.6,
    'zRM': 0.35,
    'zoom': 0x1,
    'leanMlt': 0.8,
    'recoil': 0.006,
    'recoilR': 0.01,
    'recover': 0.98,
    'recoverF': 0.98,
    'rumble': 0.4,
    'rumbleDur': 0x96,
    'icnPad': -0xa
  }, {
    'name': 'Crossbow',
    'src': 'weapon_17',
    'icon': 'icon_17',
    'sound': 'weapon_17',
    'noSkins': !0x0,
    'nInsp': !0x0,
    'nRing': !0x0,
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'noAo': !0x0,
    'nCase': !0x0,
    'nMuz': !0x0,
    'attach': 0x0,
    'attachYOff': -0.1,
    'attachZOff': 0.65,
    'kill': ['', 0x64],
    'type': 0x0,
    'projectile': 0x1,
    'swapTime': 0xc8,
    'aimSpeed': 0x78,
    'spdMlt': 0x1,
    'ammo': 0x1,
    'reload': 0x3e8,
    'dmg': 0x64,
    'pierce': 0x0,
    'dmgDrop': 0x0,
    'scale': 0.0007303348040201011,
    'leftHoldY': -0.33,
    'rightHoldY': -0.28,
    'leftHoldZ': 2.2,
    'leftHoldX': 0x0,
    'rightHoldZ': 0.9,
    'xOff': 1.3,
    'yOff': -0.95,
    'zOff': -1.9,
    'xOrg': 0x0,
    'yOrg': -0.72,
    'zOrg': -0x1,
    'cLean': 0.1,
    'cRot': 0.1,
    'zRot': 0.9,
    'cDrop': 0.2,
    'holdW': 0.5,
    'muzOff': 2.2,
    'muzOffY': 0.1,
    'muzID': 0x3,
    'muzMlt': 1.1,
    'jYMlt': 0.95,
    'range': 0x2bc,
    'rate': 0x96,
    'spread': 0x12c,
    'zoom': 1.4,
    'leanMlt': 0.3,
    'recoil': 0.007,
    'recoilR': 0.01,
    'recover': 0.985,
    'recoverY': 0.996,
    'recoverF': 0.98,
    'recoilZ': 0x4,
    'recoilAnim': {
      'time': 0x12c,
      'recoilTweenY': 0.1
    },
    'rumble': 0.5,
    'icnPad': 0x9
  }, {
    'name': 'Famas',
    'src': 'weapon_15',
    'icon': 'icon_15',
    'sound': 'weapon_15',
    'noAo': !0x0,
    'stgpSgblazSjGwbIakgOcFlZgHYIHWDS': !0x0,
    'burst': {
      'c': 0x3,
      'r': 0x5a
    },
    'swapWiggle': 0.6,
    'attach': 0x0,
    'attachYOff': -0.1,
    'attachZOff': -0.5,
    'zRot': 0x1,
    'type': 0x0,
    'swapTime': 0x12c,
    'aimSpeed': 0x82,
    'spdMlt': 0.95,
    'ammo': 0x1e,
    'rate': 0x118,
    'reload': 0x4b0,
    'dmg': 0x1c,
    'pierce': 0x1,
    'range': 0x384,
    'dmgDrop': 0x5,
    'scale': 0.0008858419597989991,
    'leftHoldY': -0.45,
    'rightHoldY': -0.5,
    'leftHoldZ': 0.72,
    'rightHoldZ': -0x1,
    'xOff': 0x1,
    'yOff': -0.86,
    'yRot': 0.0018,
    'zOff': -0x3,
    'xOrg': 0x0,
    'yOrg': -1.14,
    'zOrg': -0x2,
    'cLean': 0.2,
    'cRot': 0.2,
    'cDrop': 0.1,
    'inspectR': 0.1,
    'inspectM': 1.5,
    'caseZOff': -1.7,
    'caseYOff': -0.2,
    'muzOff': 4.9,
    'muzOffY': -0.05,
    'muzMlt': 1.4,
    'spread': 0x5a,
    'minSpread': 0x5,
    'zoom': 1.5,
    'leanMlt': 1.5,
    'recoil': 0.0032,
    'recoilR': 0.02,
    'recover': 0.978,
    'recoverY': 0.995,
    'recoverF': 0.975,
    'jYMlt': 0.9,
    'recoilYM': 0.32,
    'recoilZ': 0x5,
    'recoilZM': 0.05,
    'aimRecMlt': 0.8,
    'recoilAnim': {
      'time': 0x12c,
      'recoilTweenY': 0.05
    },
    'jumpYM': 0.6,
    'rumble': 0.5,
    'expScale': 0.9,
    'icnPad': 0x9
  }], bra['exports']['findWeaponBySrc'] = function(brb) {
    for (var brl = 0x0; brl < bra['exports']['length']; ++brl)
      if (bra['exports'][brl]['src'] == 'weapon_' + brb) return bra['exports'][brl];
    return null;
  }, bra['exports']['findIndexBySrc'] = function(brb) {
    for (var brn = 0x0; brn < bra['exports']['length']; ++brn)
      if (bra['exports'][brn]['src'] == brb) return brn;
    return null;
  };
}, function(bro, brp, brq) {
  var brr = brq(0x4);
  const brs = brq(0x7);
  brq(0x8);
  var brt = {};
  bro['exports']['getColor'] = function(bro, brp) {
    var brq = bro + '-' + (brp || ''),
      brs = brt[brq];
    return brs || (brs = new brr['Color'](bro), brp && brs['multiplyScalar'](brp), brt[brq] = brs), brs;
  }, bro['exports']['colorize'] = function(brp, brq, brr) {
    brq = brr || bro['exports']['getColor'](brq);
    for (var brs = 0x0; brs < brp['faces']['length']; ++brs) brp['faces'][brs]['vertexColors'][0x0] = brq, brp['faces'][brs]['vertexColors'][0x1] = brq, brp['faces'][brs]['vertexColors'][0x2] = brq;
  };
  var brC, brD = function(bro, brp, brq, brs) {
      for (var brt, brC = new brr['Vector2'](brp, brq)['multiplyScalar'](brs || 0x1), brD = 0x0; brD < bro['faceVertexUvs']['length']; brD++) {
        brt = bro['faceVertexUvs'][brD];
        for (var brE = 0x0; brE < brt['length']; brE++)
          for (var brF, brG = 0x0; 0x3 > brG; brG++)(brF = brt[brE][brG]['multiply'](brC))['x'] = 0.5 + brF['x'] - brC['x'] / 0x2;
      }
    },
    brE = function(bro, brp, brq, brr, brs, brt) {
      return bro >= brq - brs && bro <= brq + brs && brp >= brr - brt && brp <= brr + brt;
    },
    brF = [],
    brG = ['a', 'b', 'c', 'd'];
  bro['exports']['generatePlane'] = function(brp, brq, brt, bs0, bs1, bs2) {
    brp *= brt['ratio'] || 0x1;
    var bs3 = (brt['scale'] ? brp + '_' + brq + '_' : '') + (brt['scale'] || '') + (brt['tilesX'] || '') + (brt['tilesZ'] || '') + (brt['noise'] ? bs0 + '_' + bs1 + '_' + bs2 : '') + (null == brt['colr'] ? '' : brt['colr']) + (brt['dark'] || '');
    if (!(brC = brF[bs3])) {
      if (brC = new brr['PlaneGeometry'](0x1, 0x1, brt['tilesX'] || 0x1, brt['tilesZ'] || 0x1), brt['noise']) {
        for (var bs4 = {}, bs5 = brt['margin'] || 0x0, bs6 = 0x0; bs6 < brC['vertices']['length']; ++bs6) {
          var bs7 = brC['vertices'][bs6]['x'],
            bs8 = brC['vertices'][bs6]['y'];
          if (!brt['pinEdges'] || -0.5 != bs7 && 0.5 != bs7 && -0.5 != bs8 && 0.5 != bs8)
            if (brt['objects']) {
              for (var bs9 = 0x0; bs9 < brt['objects']['length']; ++bs9)
                if (brt['objects'][bs9]['y'] - brt['objects'][bs9]['height'] <= bs1 + 0.1 && brt['objects'][bs9]['y'] + brt['objects'][bs9]['height'] > bs1 + brt['noise'] && brE(bs2 + -bs8 * brp * 0x2, bs0 + bs7 * brq * 0x2, brt['objects'][bs9]['z'], brt['objects'][bs9]['x'], brt['objects'][bs9]['length'] + bs5, brt['objects'][bs9]['width'] + bs5)) {
                  brC['vertices'][bs6]['z'] = Math['random']() * brt['noise'] + 0x1, bs4[bs6] = bro['exports']['getColor'](brt['colr'], 0.6);
                  break;
                }
            } else brC['vertices'][bs6]['z'] = Math['random']() * brt['noise'];
          bs4[bs6] || (bs4[bs6] = bro['exports']['getColor'](brt['colr']));
        }
        for (bs6 = 0x0; bs6 < brC['faces']['length']; bs6++) {
          for (var bsa = brC['faces'][bs6], bsb = 0x0, bsc = 0x0; 0x3 > bsc; bsc++) bsa['vertexColors'][bsc] = bs4[bsa[brG[bsc]]], 0x0 >= brC['vertices'][bsa[brG[bsc]]]['z'] && bsb++;
          0x3 <= bsb && delete brC['faces'][bs6];
        }
        brC['faces'] = brC['faces']['filter'](function(bro) {
          return bro;
        }), brC['elementsNeedUpdate'] = !0x0;
      } else bro['exports']['colorize'](brC, null, bro['exports']['getColor'](brt['colr'] || 0xffffff, brt['dark'] || 0x1));
      brt['scale'] && brD(brC, brq / brs['worldUV'], brp / brs['worldUV'], brt['scale']), brC['computeVertexNormals'](), brF[bs3] = brC;
    }
    return brC;
  };
  var bse = [];
  bro['exports']['generateCube'] = function(brp, brq, brt, brE, brF) {
    brp = brp || [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], brF['flipp'] = (brq > brt || brE > brt) && 'floor_0' == brF['src'], brF['flippW'] = brq > brE && 'floor_0' == brF['src'];
    for (var brG = (brF['scale'] ? brq + '_' + brt + '_' + brE + '_' : '') + (null == brF['colr'] ? '' : brF['colr']) + (brF['scale'] || '') + (brF['flippW'] ? 'flw' : 'fnw') + (brF['flipp'] ? 'fl' : 'fn') + (brF['amb'] || '') + (brF['fAmb'] || '') + (brF['useScale'] || ''), bsl = 0x0; bsl < brp['length']; ++bsl) brG += '_' + brp[bsl];
    if (!(brC = bse[brG])) {
      brF['colr'] = null == brF['colr'] ? 0xffffff : brF['colr'];
      var bsm = bro['exports']['getColor'](brF['colr']),
        bsn = brF['amb'] ? bro['exports']['getColor'](brF['colr'], brF['amb']) : bsm;
      if (brF['fAmb']) {
        var bso = bsm;
        bsm = bsn, bsn = bso;
      }
      brC = new brr['Geometry']();
      var bsp, bsq = [];
      brp[0x0] && ((bsp = new brr['PlaneGeometry'](0x1, 0x1))['rotateY'](Math['PI'] / 0x2), brF['flipp'] && bsp['rotateX'](Math['PI'] / 0x2), bsp['translate'](0.5, 0.5, 0x0), bsp['faces'][0x0]['vertexColors'] = [bsm, bsn, bsm], bsp['faces'][0x1]['vertexColors'] = [bsn, bsn, bsm], brF['scale'] && brD(bsp, (brF['flipp'] ? brt : brE) / brs['worldUV'], (brF['flipp'] ? brE : brt) / brs['worldUV'], brF['scale']), bsq['push'](bsp)), brp[0x1] && ((bsp = new brr['PlaneGeometry'](0x1, 0x1))['rotateY'](-Math['PI'] / 0x2), brF['flipp'] && bsp['rotateX'](Math['PI'] / 0x2), bsp['translate'](-0.5, 0.5, 0x0), bsp['faces'][0x0]['vertexColors'] = [bsm, bsn, bsm], bsp['faces'][0x1]['vertexColors'] = [bsn, bsn, bsm], brF['scale'] && brD(bsp, (brF['flipp'] ? brt : brE) / brs['worldUV'], (brF['flipp'] ? brE : brt) / brs['worldUV'], brF['scale']), bsq['push'](bsp)), brp[0x2] && ((bsp = new brr['PlaneGeometry'](0x1, 0x1))['rotateX'](-Math['PI'] / 0x2), brF['flippW'] && bsp['rotateY'](Math['PI'] / 0x2), bsp['translate'](0x0, 0x1, 0x0), bsp['faces'][0x0]['vertexColors'] = [bsm, bsm, bsm], bsp['faces'][0x1]['vertexColors'] = [bsm, bsm, bsm], brF['scale'] && brD(bsp, (brF['flippW'] ? brE : brq) / brs['worldUV'], (brF['flippW'] ? brq : brE) / brs['worldUV'], brF['scale']), bsq['push'](bsp)), brp[0x3] && ((bsp = new brr['PlaneGeometry'](0x1, 0x1))['rotateX'](Math['PI'] / 0x2), brF['flippW'] && bsp['rotateY'](Math['PI'] / 0x2), bsp['translate'](0x0, 0x0, 0x0), bsp['faces'][0x0]['vertexColors'] = [bsn, bsn, bsn], bsp['faces'][0x1]['vertexColors'] = [bsn, bsn, bsn], brF['scale'] && brD(bsp, (brF['flippW'] ? brE : brq) / brs['worldUV'], (brF['flippW'] ? brq : brE) / brs['worldUV'], brF['scale']), bsq['push'](bsp)), brp[0x4] && (bsp = new brr['PlaneGeometry'](0x1, 0x1), brF['flipp'] && bsp['rotateZ'](Math['PI'] / 0x2), bsp['translate'](0x0, 0.5, 0.5), bsp['faces'][0x0]['vertexColors'] = [bsm, bsn, bsm], bsp['faces'][0x1]['vertexColors'] = [bsn, bsn, bsm], brF['scale'] && brD(bsp, (brF['flipp'] ? brt : brq) / brs['worldUV'], (brF['flipp'] ? brq : brt) / brs['worldUV'], brF['scale']), bsq['push'](bsp)), brp[0x5] && ((bsp = new brr['PlaneGeometry'](0x1, 0x1))['rotateY'](Math['PI']), brF['flipp'] && bsp['rotateZ'](Math['PI'] / 0x2), bsp['translate'](0x0, 0.5, -0.5), bsp['faces'][0x0]['vertexColors'] = [bsm, bsn, bsm], bsp['faces'][0x1]['vertexColors'] = [bsn, bsn, bsm], brF['scale'] && brD(bsp, (brF['flipp'] ? brt : brq) / brs['worldUV'], (brF['flipp'] ? brq : brt) / brs['worldUV'], brF['scale']), bsq['push'](bsp));
      for (bsl = 0x0; bsl < bsq['length']; bsl++) brC['merge'](bsq[bsl], new brr['Matrix4']());
      brF && brF['useScale'] && (brC['scale'](brq, brt, brE), brC['translate'](0x0, -brt / 0x2, 0x0)), bse[brG] = brC;
    }
    return brC;
  };
  var bsr = [];
  bro['exports']['generateCone'] = function(brp, brq, brs, brt) {
    var brD = (brt['scale'] ? brp + '_' + brq + '_' + brs + '_' : '') + (brt['scale'] || '') + (brt['useScale'] || '') + (null == brt['colr'] ? '' : brt['colr']) + (brt['dark'] || '');
    return (brC = bsr[brD]) || (brC = new brr['ConeGeometry'](Math['min'](brp, brs) / 0x2, brq, 0xc, 0xc, !0x0), brt && !brt['useScale'] && brC['translate'](0x0, brq / 0x2, 0x0), bro['exports']['colorize'](brC, null, bro['exports']['getColor'](brt['colr'] || 0xffffff, brt['dark'] || 0x1)), bsr[brD] = brC), brC;
  };
}, function(bsx, bsy, bsz) {
  'use strict';
  bsz['d'](bsy, 'a', function() {
    return bsL;
  });
  var bsA = bsz(0x2),
    bsB = Object(bsA['e'])(),
    bsC = 'Sentry\x20Logger\x20',
    bsD = function() {
      function bsx() {
        this['_enabled'] = !0x1;
      }
      return bsx['prototype']['disable'] = function() {
        this['_enabled'] = !0x1;
      }, bsx['prototype']['enable'] = function() {
        this['_enabled'] = !0x0;
      }, bsx['prototype']['log'] = function() {
        for (var bsx = [], bsy = 0x0; bsy < arguments['length']; bsy++) bsx[bsy] = arguments[bsy];
        this['_enabled'] && Object(bsA['b'])(function() {
          bsB['console']['log'](bsC + '[Log]:\x20' + bsx['join']('\x20'));
        });
      }, bsx['prototype']['warn'] = function() {
        for (var bsx = [], bsy = 0x0; bsy < arguments['length']; bsy++) bsx[bsy] = arguments[bsy];
        this['_enabled'] && Object(bsA['b'])(function() {
          bsB['console']['warn'](bsC + '[Warn]:\x20' + bsx['join']('\x20'));
        });
      }, bsx['prototype']['error'] = function() {
        for (var bsx = [], bsy = 0x0; bsy < arguments['length']; bsy++) bsx[bsy] = arguments[bsy];
        this['_enabled'] && Object(bsA['b'])(function() {
          bsB['console']['error'](bsC + '[Error]:\x20' + bsx['join']('\x20'));
        });
      }, bsx;
    }();
  bsB['__SENTRY__'] = bsB['__SENTRY__'] || {};
  var bsL = bsB['__SENTRY__']['logger'] || (bsB['__SENTRY__']['logger'] = new bsD());
}, function(bsM, bsN, bsO) {
  bsN['encode'] = function(bsM, bsN) {
    var bsO = new bsS(bsN);
    return bsO['write'](bsM), bsO['read']();
  };
  var bsS = bsO(0x1b)['EncodeBuffer'];
}, function(bsT, bsU, bsV) {
  bsU['EncodeBuffer'] = bsX;
  var bsW = bsV(0xf)['preset'];

  function bsX(bsT) {
    if (!(this instanceof bsX)) return new bsX(bsT);
    if (bsT && (this['options'] = bsT, bsT['codec'])) {
      var bsU = this['codec'] = bsT['codec'];
      bsU['bufferish'] && (this['bufferish'] = bsU['bufferish']);
    }
  }
  bsV(0x1e)['FlexEncoder']['mixin'](bsX['prototype']), bsX['prototype']['codec'] = bsW, bsX['prototype']['write'] = function(bsT) {
    this['codec']['encode'](this, bsT);
  };
}, function(bt1, bt2, bt3) {
  'use strict';
  (function(bt1) {
    /*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
     * @license  MIT
     */
    var bt5 = bt3(0x29),
      bt6 = bt3(0x11),
      bt7 = bt3(0xb);

    function bt8() {
      return btc['TYPED_ARRAY_SUPPORT'] ? 0x7fffffff : 0x3fffffff;
    }

    function bt9(bt1, bt2) {
      if (bt8() < bt2) throw new RangeError('Invalid\x20typed\x20array\x20length');
      return btc['TYPED_ARRAY_SUPPORT'] ? (bt1 = new Uint8Array(bt2))['__proto__'] = btc['prototype'] : (null === bt1 && (bt1 = new btc(bt2)), bt1['length'] = bt2), bt1;
    }

    function btc(bt1, bt2, bt3) {
      if (!(btc['TYPED_ARRAY_SUPPORT'] || this instanceof btc)) return new btc(bt1, bt2, bt3);
      if ('number' == typeof bt1) {
        if ('string' == typeof bt2) throw new Error('If\x20encoding\x20is\x20specified\x20then\x20the\x20first\x20argument\x20must\x20be\x20a\x20string');
        return btA(this, bt1);
      }
      return btg(this, bt1, bt2, bt3);
    }

    function btg(bt1, bt2, bt3, bt5) {
      if ('number' == typeof bt2) throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
      return 'undefined' != typeof ArrayBuffer && bt2 instanceof ArrayBuffer ? function(bt1, bt2, bt3, bt5) {
        if (bt2['byteLength'], 0x0 > bt3 || bt2['byteLength'] < bt3) throw new RangeError('\x27offset\x27\x20is\x20out\x20of\x20bounds');
        if (bt2['byteLength'] < bt3 + (bt5 || 0x0)) throw new RangeError('\x27length\x27\x20is\x20out\x20of\x20bounds');
        return bt2 = void 0x0 === bt3 && void 0x0 === bt5 ? new Uint8Array(bt2) : void 0x0 === bt5 ? new Uint8Array(bt2, bt3) : new Uint8Array(bt2, bt3, bt5), btc['TYPED_ARRAY_SUPPORT'] ? (bt1 = bt2)['__proto__'] = btc['prototype'] : bt1 = btE(bt1, bt2), bt1;
      }(bt1, bt2, bt3, bt5) : 'string' == typeof bt2 ? function(bt1, bt2, bt3) {
        if (('string' != typeof bt3 || '' === bt3) && (bt3 = 'utf8'), !btc['isEncoding'](bt3)) throw new TypeError('\x22encoding\x22\x20must\x20be\x20a\x20valid\x20string\x20encoding');
        var bt5 = 0x0 | btL(bt2, bt3),
          bt6 = (bt1 = bt9(bt1, bt5))['write'](bt2, bt3);
        return bt6 !== bt5 && (bt1 = bt1['slice'](0x0, bt6)), bt1;
      }(bt1, bt2, bt3) : function(bt1, bt2) {
        if (btc['isBuffer'](bt2)) {
          var bt3 = 0x0 | btJ(bt2['length']);
          return 0x0 === (bt1 = bt9(bt1, bt3))['length'] ? bt1 : (bt2['copy'](bt1, 0x0, 0x0, bt3), bt1);
        }
        if (bt2) {
          if ('undefined' != typeof ArrayBuffer && bt2['buffer'] instanceof ArrayBuffer || 'length' in bt2) return 'number' != typeof bt2['length'] || function(bt1) {
            return bt1 != bt1;
          }(bt2['length']) ? bt9(bt1, 0x0) : btE(bt1, bt2);
          if ('Buffer' === bt2['type'] && bt7(bt2['data'])) return btE(bt1, bt2['data']);
        }
        throw new TypeError('First\x20argument\x20must\x20be\x20a\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20or\x20array-like\x20object.');
      }(bt1, bt2);
    }

    function bty(bt1) {
      if ('number' != typeof bt1) throw new TypeError('\x22size\x22\x20argument\x20must\x20be\x20a\x20number');
      if (0x0 > bt1) throw new RangeError('\x22size\x22\x20argument\x20must\x20not\x20be\x20negative');
    }

    function btA(bt1, bt2) {
      if (bty(bt2), bt1 = bt9(bt1, 0x0 > bt2 ? 0x0 : 0x0 | btJ(bt2)), !btc['TYPED_ARRAY_SUPPORT'])
        for (var bt3 = 0x0; bt3 < bt2; ++bt3) bt1[bt3] = 0x0;
      return bt1;
    }

    function btE(bt1, bt2) {
      var bt3 = 0x0 > bt2['length'] ? 0x0 : 0x0 | btJ(bt2['length']);
      bt1 = bt9(bt1, bt3);
      for (var bt5 = 0x0; bt5 < bt3; bt5 += 0x1) bt1[bt5] = 0xff & bt2[bt5];
      return bt1;
    }

    function btJ(bt1) {
      if (bt1 >= bt8()) throw new RangeError('Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20size:\x200x' + bt8()['toString'](0x10) + '\x20bytes');
      return 0x0 | bt1;
    }

    function btL(bt1, bt2) {
      if (btc['isBuffer'](bt1)) return bt1['length'];
      if ('undefined' != typeof ArrayBuffer && 'function' == typeof ArrayBuffer['isView'] && (ArrayBuffer['isView'](bt1) || bt1 instanceof ArrayBuffer)) return bt1['byteLength'];
      'string' != typeof bt1 && (bt1 = '' + bt1);
      var bt3 = bt1['length'];
      if (0x0 === bt3) return 0x0;
      for (var bt5 = !0x1;;) switch (bt2) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return bt3;
        case 'utf8':
        case 'utf-8':
        case void 0x0:
          return bzV(bt1)['length'];
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return 0x2 * bt3;
        case 'hex':
          return bt3 >>> 0x1;
        case 'base64':
          return bA3(bt1)['length'];
        default:
          if (bt5) return bzV(bt1)['length'];
          bt2 = ('' + bt2)['toLowerCase'](), bt5 = !0x0;
      }
    }

    function btQ(bt1, bt2, bt3) {
      var bt5 = bt1[bt2];
      bt1[bt2] = bt1[bt3], bt1[bt3] = bt5;
    }

    function btV(bt1, bt2, bt3, bt5, bt6) {
      if (0x0 === bt1['length']) return -0x1;
      if ('string' == typeof bt3 ? (bt5 = bt3, bt3 = 0x0) : 0x7fffffff < bt3 ? bt3 = 0x7fffffff : -0x80000000 > bt3 && (bt3 = -0x80000000), bt3 = +bt3, isNaN(bt3) && (bt3 = bt6 ? 0x0 : bt1['length'] - 0x1), 0x0 > bt3 && (bt3 = bt1['length'] + bt3), bt3 >= bt1['length']) {
        if (bt6) return -0x1;
        bt3 = bt1['length'] - 0x1;
      } else if (0x0 > bt3) {
        if (!bt6) return -0x1;
        bt3 = 0x0;
      }
      if ('string' == typeof bt2 && (bt2 = btc['from'](bt2, bt5)), btc['isBuffer'](bt2)) return 0x0 === bt2['length'] ? -0x1 : bu1(bt1, bt2, bt3, bt5, bt6);
      if ('number' == typeof bt2) return bt2 &= 0xff, btc['TYPED_ARRAY_SUPPORT'] && 'function' == typeof Uint8Array['prototype']['indexOf'] ? bt6 ? Uint8Array['prototype']['indexOf']['call'](bt1, bt2, bt3) : Uint8Array['prototype']['lastIndexOf']['call'](bt1, bt2, bt3) : bu1(bt1, [bt2], bt3, bt5, bt6);
      throw new TypeError('val\x20must\x20be\x20string,\x20number\x20or\x20Buffer');
    }

    function bu1(bt1, bt2, bt3, bt5, bt6) {
      function bt7(bt1, bt2) {
        return 0x1 === bt9 ? bt1[bt2] : bt1['readUInt16BE'](bt2 * bt9);
      }
      var bt8, bt9 = 0x1,
        btc = bt1['length'],
        btg = bt2['length'];
      if (void 0x0 !== bt5 && ('ucs2' === (bt5 = (bt5 + '')['toLowerCase']()) || 'ucs-2' === bt5 || 'utf16le' === bt5 || 'utf-16le' === bt5)) {
        if (0x2 > bt1['length'] || 0x2 > bt2['length']) return -0x1;
        bt9 = 0x2, btc /= 0x2, btg /= 0x2, bt3 /= 0x2;
      }
      if (bt6) {
        var bty = -0x1;
        for (bt8 = bt3; bt8 < btc; bt8++)
          if (bt7(bt1, bt8) !== bt7(bt2, -0x1 === bty ? 0x0 : bt8 - bty)) - 0x1 !== bty && (bt8 -= bt8 - bty), bty = -0x1;
          else if (-0x1 === bty && (bty = bt8), bt8 - bty + 0x1 === btg) return bty * bt9;
      } else
        for (bt3 + btg > btc && (bt3 = btc - btg), bt8 = bt3; 0x0 <= bt8; bt8--) {
          for (var btA = !0x0, btE = 0x0; btE < btg; btE++)
            if (bt7(bt1, bt8 + btE) !== bt7(bt2, btE)) {
              btA = !0x1;
              break;
            } if (btA) return bt8;
        }
      return -0x1;
    }

    function buh(bt1, bt2, bt3, bt5) {
      bt3 = +bt3 || 0x0;
      var bt6 = bt1['length'] - bt3;
      bt5 ? (bt5 = +bt5) > bt6 && (bt5 = bt6) : bt5 = bt6;
      var bt7 = bt2['length'];
      if (0x0 != bt7 % 0x2) throw new TypeError('Invalid\x20hex\x20string');
      bt5 > bt7 / 0x2 && (bt5 = bt7 / 0x2);
      for (var bt8, bt9 = 0x0; bt9 < bt5; ++bt9) {
        if (bt8 = parseInt(bt2['substr'](0x2 * bt9, 0x2), 0x10), isNaN(bt8)) return bt9;
        bt1[bt3 + bt9] = bt8;
      }
      return bt9;
    }

    function buq(bt1, bt2, bt3, bt5) {
      return bA7(bzV(bt2, bt1['length'] - bt3), bt1, bt3, bt5);
    }

    function buv(bt1, bt2, bt3, bt5) {
      return bA7(function(bt1) {
        for (var bt2 = [], bt3 = 0x0; bt3 < bt1['length']; ++bt3) bt2['push'](0xff & bt1['charCodeAt'](bt3));
        return bt2;
      }(bt2), bt1, bt3, bt5);
    }

    function buD(bt1, bt2, bt3, bt5) {
      return buv(bt1, bt2, bt3, bt5);
    }

    function buI(bt1, bt2, bt3, bt5) {
      return bA7(bA3(bt2), bt1, bt3, bt5);
    }

    function buN(bt1, bt2, bt3, bt5) {
      return bA7(function(bt1, bt2) {
        for (var bt3, bt5, bt6, bt7 = [], bt8 = 0x0; bt8 < bt1['length'] && !(0x0 > (bt2 -= 0x2)); ++bt8) bt3 = bt1['charCodeAt'](bt8), bt5 = bt3 >> 0x8, bt6 = bt3 % 0x100, bt7['push'](bt6), bt7['push'](bt5);
        return bt7;
      }(bt2, bt1['length'] - bt3), bt1, bt3, bt5);
    }

    function buZ(bt1, bt2, bt3) {
      return 0x0 === bt2 && bt3 === bt1['length'] ? bt5['fromByteArray'](bt1) : bt5['fromByteArray'](bt1['slice'](bt2, bt3));
    }

    function bv3(bt1, bt2, bt3) {
      bt3 = Math['min'](bt1['length'], bt3);
      for (var bt5 = [], bt6 = bt2; bt6 < bt3;) {
        var bt7, bt8, bt9, btc, btg = bt1[bt6],
          bty = null,
          btA = 0xef < btg ? 0x4 : 0xdf < btg ? 0x3 : 0xbf < btg ? 0x2 : 0x1;
        if (bt6 + btA <= bt3) 0x1 === btA ? 0x80 > btg && (bty = btg) : 0x2 === btA ? 0x80 == (0xc0 & (bt7 = bt1[bt6 + 0x1])) && (0x7f < (btc = (0x1f & btg) << 0x6 | 0x3f & bt7) && (bty = btc)) : 0x3 === btA ? (bt7 = bt1[bt6 + 0x1], bt8 = bt1[bt6 + 0x2], 0x80 == (0xc0 & bt7) && 0x80 == (0xc0 & bt8) && (0x7ff < (btc = (0xf & btg) << 0xc | (0x3f & bt7) << 0x6 | 0x3f & bt8) && (0xd800 > btc || 0xdfff < btc) && (bty = btc))) : 0x4 === btA && (bt7 = bt1[bt6 + 0x1], bt8 = bt1[bt6 + 0x2], bt9 = bt1[bt6 + 0x3], 0x80 == (0xc0 & bt7) && 0x80 == (0xc0 & bt8) && 0x80 == (0xc0 & bt9) && (0xffff < (btc = (0xf & btg) << 0x12 | (0x3f & bt7) << 0xc | (0x3f & bt8) << 0x6 | 0x3f & bt9) && 0x110000 > btc && (bty = btc)));
        null === bty ? (bty = 0xfffd, btA = 0x1) : 0xffff < bty && (bty -= 0x10000, bt5['push'](0xd800 | 0x3ff & bty >>> 0xa), bty = 0xdc00 | 0x3ff & bty), bt5['push'](bty), bt6 += btA;
      }
      return function(bt1) {
        var bt2 = bt1['length'];
        if (bt2 <= bws) return String['fromCharCode']['apply'](String, bt1);
        for (var bt3 = '', bt5 = 0x0; bt5 < bt2;) bt3 += String['fromCharCode']['apply'](String, bt1['slice'](bt5, bt5 += bws));
        return bt3;
      }(bt5);
    }
    bt2['Buffer'] = btc, bt2['SlowBuffer'] = function(bt1) {
      return +bt1 != bt1 && (bt1 = 0x0), btc['alloc'](+bt1);
    }, bt2['INSPECT_MAX_BYTES'] = 0x32, btc['TYPED_ARRAY_SUPPORT'] = void 0x0 === bt1['TYPED_ARRAY_SUPPORT'] ? function() {
      try {
        var bt1 = new Uint8Array(0x1);
        return bt1['__proto__'] = {
          '__proto__': Uint8Array['prototype'],
          'foo': function() {
            return 0x2a;
          }
        }, 0x2a === bt1['foo']() && 'function' == typeof bt1['subarray'] && 0x0 === bt1['subarray'](0x1, 0x1)['byteLength'];
      } catch (bvm) {
        return !0x1;
      }
    }() : bt1['TYPED_ARRAY_SUPPORT'], bt2['kMaxLength'] = bt8(), btc['poolSize'] = 0x2000, btc['_augment'] = function(bt1) {
      return bt1['__proto__'] = btc['prototype'], bt1;
    }, btc['from'] = function(bt1, bt2, bt3) {
      return btg(null, bt1, bt2, bt3);
    }, btc['TYPED_ARRAY_SUPPORT'] && (btc['prototype']['__proto__'] = Uint8Array['prototype'], btc['__proto__'] = Uint8Array, 'undefined' != typeof Symbol && Symbol['species'] && btc[Symbol['species']] === btc && Object['defineProperty'](btc, Symbol['species'], {
      'value': null,
      'configurable': !0x0
    })), btc['alloc'] = function(bt1, bt2, bt3) {
      return function(bt1, bt2, bt3, bt5) {
        return bty(bt2), 0x0 >= bt2 ? bt9(bt1, bt2) : void 0x0 === bt3 ? bt9(bt1, bt2) : 'string' == typeof bt5 ? bt9(bt1, bt2)['fill'](bt3, bt5) : bt9(bt1, bt2)['fill'](bt3);
      }(null, bt1, bt2, bt3);
    }, btc['allocUnsafe'] = function(bt1) {
      return btA(null, bt1);
    }, btc['allocUnsafeSlow'] = function(bt1) {
      return btA(null, bt1);
    }, btc['isBuffer'] = function(bt1) {
      return !(null == bt1 || !bt1['_isBuffer']);
    }, btc['compare'] = function(bt1, bt2) {
      if (!btc['isBuffer'](bt1) || !btc['isBuffer'](bt2)) throw new TypeError('Arguments\x20must\x20be\x20Buffers');
      if (bt1 === bt2) return 0x0;
      for (var bt3 = bt1['length'], bt5 = bt2['length'], bt6 = 0x0, bt7 = Math['min'](bt3, bt5); bt6 < bt7; ++bt6)
        if (bt1[bt6] !== bt2[bt6]) {
          bt3 = bt1[bt6], bt5 = bt2[bt6];
          break;
        } return bt3 < bt5 ? -0x1 : bt5 < bt3 ? 0x1 : 0x0;
    }, btc['isEncoding'] = function(bt1) {
      switch ((bt1 + '')['toLowerCase']()) {
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'latin1':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return !0x0;
        default:
          return !0x1;
      }
    }, btc['concat'] = function(bt1, bt2) {
      if (!bt7(bt1)) throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');
      if (0x0 === bt1['length']) return btc['alloc'](0x0);
      var bt3;
      if (void 0x0 === bt2)
        for (bt2 = 0x0, bt3 = 0x0; bt3 < bt1['length']; ++bt3) bt2 += bt1[bt3]['length'];
      var bt5 = btc['allocUnsafe'](bt2),
        bt6 = 0x0;
      for (bt3 = 0x0; bt3 < bt1['length']; ++bt3) {
        var bt8 = bt1[bt3];
        if (!btc['isBuffer'](bt8)) throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');
        bt8['copy'](bt5, bt6), bt6 += bt8['length'];
      }
      return bt5;
    }, btc['byteLength'] = btL, btc['prototype']['_isBuffer'] = !0x0, btc['prototype']['swap16'] = function() {
      var bt1 = this['length'];
      if (0x0 != bt1 % 0x2) throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits');
      for (var bt2 = 0x0; bt2 < bt1; bt2 += 0x2) btQ(this, bt2, bt2 + 0x1);
      return this;
    }, btc['prototype']['swap32'] = function() {
      var bt1 = this['length'];
      if (0x0 != bt1 % 0x4) throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits');
      for (var bt2 = 0x0; bt2 < bt1; bt2 += 0x4) btQ(this, bt2, bt2 + 0x3), btQ(this, bt2 + 0x1, bt2 + 0x2);
      return this;
    }, btc['prototype']['swap64'] = function() {
      var bt1 = this['length'];
      if (0x0 != bt1 % 0x8) throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits');
      for (var bt2 = 0x0; bt2 < bt1; bt2 += 0x8) btQ(this, bt2, bt2 + 0x7), btQ(this, bt2 + 0x1, bt2 + 0x6), btQ(this, bt2 + 0x2, bt2 + 0x5), btQ(this, bt2 + 0x3, bt2 + 0x4);
      return this;
    }, btc['prototype']['toString'] = function() {
      var bt1 = 0x0 | this['length'];
      return 0x0 == bt1 ? '' : 0x0 === arguments['length'] ? bv3(this, 0x0, bt1) : function(bt1, bt2, bt3) {
        var bt5 = !0x1;
        if ((void 0x0 === bt2 || 0x0 > bt2) && (bt2 = 0x0), bt2 > this['length']) return '';
        if ((void 0x0 === bt3 || bt3 > this['length']) && (bt3 = this['length']), 0x0 >= bt3) return '';
        if ((bt3 >>>= 0x0) <= (bt2 >>>= 0x0)) return '';
        for (bt1 || (bt1 = 'utf8');;) switch (bt1) {
          case 'hex':
            return bwF(this, bt2, bt3);
          case 'utf8':
          case 'utf-8':
            return bv3(this, bt2, bt3);
          case 'ascii':
            return bwt(this, bt2, bt3);
          case 'latin1':
          case 'binary':
            return bwz(this, bt2, bt3);
          case 'base64':
            return buZ(this, bt2, bt3);
          case 'ucs2':
          case 'ucs-2':
          case 'utf16le':
          case 'utf-16le':
            return bwM(this, bt2, bt3);
          default:
            if (bt5) throw new TypeError('Unknown\x20encoding:\x20' + bt1);
            bt1 = (bt1 + '')['toLowerCase'](), bt5 = !0x0;
        }
      } ['apply'](this, arguments);
    }, btc['prototype']['equals'] = function(bt1) {
      if (!btc['isBuffer'](bt1)) throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');
      return this === bt1 || 0x0 === btc['compare'](this, bt1);
    }, btc['prototype']['inspect'] = function() {
      var bt1 = '',
        bt3 = bt2['INSPECT_MAX_BYTES'];
      return 0x0 < this['length'] && (bt1 = this['toString']('hex', 0x0, bt3)['match'](/.{2}/g)['join']('\x20'), this['length'] > bt3 && (bt1 += '\x20...\x20')), '<Buffer\x20' + bt1 + '>';
    }, btc['prototype']['compare'] = function(bt1, bt2, bt3, bt5, bt6) {
      if (!btc['isBuffer'](bt1)) throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');
      if (void 0x0 === bt2 && (bt2 = 0x0), void 0x0 === bt3 && (bt3 = bt1 ? bt1['length'] : 0x0), void 0x0 === bt5 && (bt5 = 0x0), void 0x0 === bt6 && (bt6 = this['length']), 0x0 > bt2 || bt3 > bt1['length'] || 0x0 > bt5 || bt6 > this['length']) throw new RangeError('out\x20of\x20range\x20index');
      if (bt5 >= bt6 && bt2 >= bt3) return 0x0;
      if (bt5 >= bt6) return -0x1;
      if (bt2 >= bt3) return 0x1;
      if (this === bt1) return 0x0;
      for (var bt7 = (bt6 >>>= 0x0) - (bt5 >>>= 0x0), bt8 = (bt3 >>>= 0x0) - (bt2 >>>= 0x0), bt9 = Math['min'](bt7, bt8), btg = this['slice'](bt5, bt6), bty = bt1['slice'](bt2, bt3), btA = 0x0; btA < bt9; ++btA)
        if (btg[btA] !== bty[btA]) {
          bt7 = btg[btA], bt8 = bty[btA];
          break;
        } return bt7 < bt8 ? -0x1 : bt8 < bt7 ? 0x1 : 0x0;
    }, btc['prototype']['includes'] = function(bt1, bt2, bt3) {
      return -0x1 !== this['indexOf'](bt1, bt2, bt3);
    }, btc['prototype']['indexOf'] = function(bt1, bt2, bt3) {
      return btV(this, bt1, bt2, bt3, !0x0);
    }, btc['prototype']['lastIndexOf'] = function(bt1, bt2, bt3) {
      return btV(this, bt1, bt2, bt3, !0x1);
    }, btc['prototype']['write'] = function(bt1, bt2, bt3, bt5) {
      if (void 0x0 === bt2) bt5 = 'utf8', bt3 = this['length'], bt2 = 0x0;
      else if (void 0x0 === bt3 && 'string' == typeof bt2) bt5 = bt2, bt3 = this['length'], bt2 = 0x0;
      else {
        if (!isFinite(bt2)) throw new Error('Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported');
        bt2 |= 0x0, isFinite(bt3) ? (bt3 |= 0x0, void 0x0 === bt5 && (bt5 = 'utf8')) : (bt5 = bt3, bt3 = void 0x0);
      }
      var bt6 = this['length'] - bt2;
      if ((void 0x0 === bt3 || bt3 > bt6) && (bt3 = bt6), 0x0 < bt1['length'] && (0x0 > bt3 || 0x0 > bt2) || bt2 > this['length']) throw new RangeError('Attempt\x20to\x20write\x20outside\x20buffer\x20bounds');
      bt5 || (bt5 = 'utf8');
      for (var bt7 = !0x1;;) switch (bt5) {
        case 'hex':
          return buh(this, bt1, bt2, bt3);
        case 'utf8':
        case 'utf-8':
          return buq(this, bt1, bt2, bt3);
        case 'ascii':
          return buv(this, bt1, bt2, bt3);
        case 'latin1':
        case 'binary':
          return buD(this, bt1, bt2, bt3);
        case 'base64':
          return buI(this, bt1, bt2, bt3);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return buN(this, bt1, bt2, bt3);
        default:
          if (bt7) throw new TypeError('Unknown\x20encoding:\x20' + bt5);
          bt5 = ('' + bt5)['toLowerCase'](), bt7 = !0x0;
      }
    }, btc['prototype']['toJSON'] = function() {
      return {
        'type': 'Buffer',
        'data': Array['prototype']['slice']['call'](this['_arr'] || this, 0x0)
      };
    };
    var bws = 0x1000;

    function bwt(bt1, bt2, bt3) {
      var bt5 = '';
      bt3 = Math['min'](bt1['length'], bt3);
      for (var bt6 = bt2; bt6 < bt3; ++bt6) bt5 += String['fromCharCode'](0x7f & bt1[bt6]);
      return bt5;
    }

    function bwz(bt1, bt2, bt3) {
      var bt5 = '';
      bt3 = Math['min'](bt1['length'], bt3);
      for (var bt6 = bt2; bt6 < bt3; ++bt6) bt5 += String['fromCharCode'](bt1[bt6]);
      return bt5;
    }

    function bwF(bt1, bt2, bt3) {
      var bt5 = bt1['length'];
      (!bt2 || 0x0 > bt2) && (bt2 = 0x0), (!bt3 || 0x0 > bt3 || bt3 > bt5) && (bt3 = bt5);
      for (var bt6 = '', bt7 = bt2; bt7 < bt3; ++bt7) bt6 += bzT(bt1[bt7]);
      return bt6;
    }

    function bwM(bt1, bt2, bt3) {
      for (var bt5 = bt1['slice'](bt2, bt3), bt6 = '', bt7 = 0x0; bt7 < bt5['length']; bt7 += 0x2) bt6 += String['fromCharCode'](bt5[bt7] + 0x100 * bt5[bt7 + 0x1]);
      return bt6;
    }

    function bwT(bt1, bt2, bt3) {
      if (0x0 != bt1 % 0x1 || 0x0 > bt1) throw new RangeError('offset\x20is\x20not\x20uint');
      if (bt1 + bt2 > bt3) throw new RangeError('Trying\x20to\x20access\x20beyond\x20buffer\x20length');
    }

    function bwX(bt1, bt2, bt3, bt5, bt6, bt7) {
      if (!btc['isBuffer'](bt1)) throw new TypeError('\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance');
      if (bt2 > bt6 || bt2 < bt7) throw new RangeError('\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds');
      if (bt3 + bt5 > bt1['length']) throw new RangeError('Index\x20out\x20of\x20range');
    }

    function bx4(bt1, bt2, bt3, bt5) {
      0x0 > bt2 && (bt2 = 0xffff + bt2 + 0x1);
      for (var bt6 = 0x0, bt7 = Math['min'](bt1['length'] - bt3, 0x2); bt6 < bt7; ++bt6) bt1[bt3 + bt6] = (bt2 & 0xff << 0x8 * (bt5 ? bt6 : 0x1 - bt6)) >>> 0x8 * (bt5 ? bt6 : 0x1 - bt6);
    }

    function bxb(bt1, bt2, bt3, bt5) {
      0x0 > bt2 && (bt2 = 0xffffffff + bt2 + 0x1);
      for (var bt6 = 0x0, bt7 = Math['min'](bt1['length'] - bt3, 0x4); bt6 < bt7; ++bt6) bt1[bt3 + bt6] = 0xff & bt2 >>> 0x8 * (bt5 ? bt6 : 0x3 - bt6);
    }

    function bxi(bt1, bt2, bt3, bt5) {
      if (bt3 + bt5 > bt1['length']) throw new RangeError('Index\x20out\x20of\x20range');
      if (0x0 > bt3) throw new RangeError('Index\x20out\x20of\x20range');
    }

    function bxn(bt1, bt2, bt3, bt5, bt7) {
      return bt7 || bxi(bt1, 0x0, bt3, 0x4), bt6['write'](bt1, bt2, bt3, bt5, 0x17, 0x4), bt3 + 0x4;
    }

    function bxt(bt1, bt2, bt3, bt5, bt7) {
      return bt7 || bxi(bt1, 0x0, bt3, 0x8), bt6['write'](bt1, bt2, bt3, bt5, 0x34, 0x8), bt3 + 0x8;
    }
    btc['prototype']['slice'] = function(bt1, bt2) {
      var bt3, bt5 = this['length'];
      if (0x0 > (bt1 = ~~bt1) ? 0x0 > (bt1 += bt5) && (bt1 = 0x0) : bt1 > bt5 && (bt1 = bt5), 0x0 > (bt2 = void 0x0 === bt2 ? bt5 : ~~bt2) ? 0x0 > (bt2 += bt5) && (bt2 = 0x0) : bt2 > bt5 && (bt2 = bt5), bt2 < bt1 && (bt2 = bt1), btc['TYPED_ARRAY_SUPPORT'])(bt3 = this['subarray'](bt1, bt2))['__proto__'] = btc['prototype'];
      else {
        var bt6 = bt2 - bt1;
        bt3 = new btc(bt6, void 0x0);
        for (var bt7 = 0x0; bt7 < bt6; ++bt7) bt3[bt7] = this[bt7 + bt1];
      }
      return bt3;
    }, btc['prototype']['readUIntLE'] = function(bt1, bt2, bt3) {
      bt1 |= 0x0, bt2 |= 0x0, bt3 || bwT(bt1, bt2, this['length']);
      for (var bt5 = this[bt1], bt6 = 0x1, bt7 = 0x0; ++bt7 < bt2 && (bt6 *= 0x100);) bt5 += this[bt1 + bt7] * bt6;
      return bt5;
    }, btc['prototype']['readUIntBE'] = function(bt1, bt2, bt3) {
      bt1 |= 0x0, bt2 |= 0x0, bt3 || bwT(bt1, bt2, this['length']);
      for (var bt5 = this[bt1 + --bt2], bt6 = 0x1; 0x0 < bt2 && (bt6 *= 0x100);) bt5 += this[bt1 + --bt2] * bt6;
      return bt5;
    }, btc['prototype']['readUInt8'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x1, this['length']), this[bt1];
    }, btc['prototype']['readUInt16LE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x2, this['length']), this[bt1] | this[bt1 + 0x1] << 0x8;
    }, btc['prototype']['readUInt16BE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x2, this['length']), this[bt1] << 0x8 | this[bt1 + 0x1];
    }, btc['prototype']['readUInt32LE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x4, this['length']), (this[bt1] | this[bt1 + 0x1] << 0x8 | this[bt1 + 0x2] << 0x10) + 0x1000000 * this[bt1 + 0x3];
    }, btc['prototype']['readUInt32BE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x4, this['length']), 0x1000000 * this[bt1] + (this[bt1 + 0x1] << 0x10 | this[bt1 + 0x2] << 0x8 | this[bt1 + 0x3]);
    }, btc['prototype']['readIntLE'] = function(bt1, bt2, bt3) {
      bt1 |= 0x0, bt2 |= 0x0, bt3 || bwT(bt1, bt2, this['length']);
      for (var bt5 = this[bt1], bt6 = 0x1, bt7 = 0x0; ++bt7 < bt2 && (bt6 *= 0x100);) bt5 += this[bt1 + bt7] * bt6;
      return bt5 >= (bt6 *= 0x80) && (bt5 -= Math['pow'](0x2, 0x8 * bt2)), bt5;
    }, btc['prototype']['readIntBE'] = function(bt1, bt2, bt3) {
      bt1 |= 0x0, bt2 |= 0x0, bt3 || bwT(bt1, bt2, this['length']);
      for (var bt5 = bt2, bt6 = 0x1, bt7 = this[bt1 + --bt5]; 0x0 < bt5 && (bt6 *= 0x100);) bt7 += this[bt1 + --bt5] * bt6;
      return bt7 >= (bt6 *= 0x80) && (bt7 -= Math['pow'](0x2, 0x8 * bt2)), bt7;
    }, btc['prototype']['readInt8'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x1, this['length']), 0x80 & this[bt1] ? -0x1 * (0xff - this[bt1] + 0x1) : this[bt1];
    }, btc['prototype']['readInt16LE'] = function(bt1, bt2) {
      bt2 || bwT(bt1, 0x2, this['length']);
      var bt3 = this[bt1] | this[bt1 + 0x1] << 0x8;
      return 0x8000 & bt3 ? 0xffff0000 | bt3 : bt3;
    }, btc['prototype']['readInt16BE'] = function(bt1, bt2) {
      bt2 || bwT(bt1, 0x2, this['length']);
      var bt3 = this[bt1 + 0x1] | this[bt1] << 0x8;
      return 0x8000 & bt3 ? 0xffff0000 | bt3 : bt3;
    }, btc['prototype']['readInt32LE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x4, this['length']), this[bt1] | this[bt1 + 0x1] << 0x8 | this[bt1 + 0x2] << 0x10 | this[bt1 + 0x3] << 0x18;
    }, btc['prototype']['readInt32BE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x4, this['length']), this[bt1] << 0x18 | this[bt1 + 0x1] << 0x10 | this[bt1 + 0x2] << 0x8 | this[bt1 + 0x3];
    }, btc['prototype']['readFloatLE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x4, this['length']), bt6['read'](this, bt1, !0x0, 0x17, 0x4);
    }, btc['prototype']['readFloatBE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x4, this['length']), bt6['read'](this, bt1, !0x1, 0x17, 0x4);
    }, btc['prototype']['readDoubleLE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x8, this['length']), bt6['read'](this, bt1, !0x0, 0x34, 0x8);
    }, btc['prototype']['readDoubleBE'] = function(bt1, bt2) {
      return bt2 || bwT(bt1, 0x8, this['length']), bt6['read'](this, bt1, !0x1, 0x34, 0x8);
    }, btc['prototype']['writeUIntLE'] = function(bt1, bt2, bt3, bt5) {
      (bt1 = +bt1, bt2 |= 0x0, bt3 |= 0x0, bt5) || bwX(this, bt1, bt2, bt3, Math['pow'](0x2, 0x8 * bt3) - 0x1, 0x0);
      var bt6 = 0x1,
        bt7 = 0x0;
      for (this[bt2] = 0xff & bt1; ++bt7 < bt3 && (bt6 *= 0x100);) this[bt2 + bt7] = 0xff & bt1 / bt6;
      return bt2 + bt3;
    }, btc['prototype']['writeUIntBE'] = function(bt1, bt2, bt3, bt5) {
      (bt1 = +bt1, bt2 |= 0x0, bt3 |= 0x0, bt5) || bwX(this, bt1, bt2, bt3, Math['pow'](0x2, 0x8 * bt3) - 0x1, 0x0);
      var bt6 = bt3 - 0x1,
        bt7 = 0x1;
      for (this[bt2 + bt6] = 0xff & bt1; 0x0 <= --bt6 && (bt7 *= 0x100);) this[bt2 + bt6] = 0xff & bt1 / bt7;
      return bt2 + bt3;
    }, btc['prototype']['writeUInt8'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x1, 0xff, 0x0), btc['TYPED_ARRAY_SUPPORT'] || (bt1 = Math['floor'](bt1)), this[bt2] = 0xff & bt1, bt2 + 0x1;
    }, btc['prototype']['writeUInt16LE'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x2, 0xffff, 0x0), btc['TYPED_ARRAY_SUPPORT'] ? (this[bt2] = 0xff & bt1, this[bt2 + 0x1] = bt1 >>> 0x8) : bx4(this, bt1, bt2, !0x0), bt2 + 0x2;
    }, btc['prototype']['writeUInt16BE'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x2, 0xffff, 0x0), btc['TYPED_ARRAY_SUPPORT'] ? (this[bt2] = bt1 >>> 0x8, this[bt2 + 0x1] = 0xff & bt1) : bx4(this, bt1, bt2, !0x1), bt2 + 0x2;
    }, btc['prototype']['writeUInt32LE'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x4, 0xffffffff, 0x0), btc['TYPED_ARRAY_SUPPORT'] ? (this[bt2 + 0x3] = bt1 >>> 0x18, this[bt2 + 0x2] = bt1 >>> 0x10, this[bt2 + 0x1] = bt1 >>> 0x8, this[bt2] = 0xff & bt1) : bxb(this, bt1, bt2, !0x0), bt2 + 0x4;
    }, btc['prototype']['writeUInt32BE'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x4, 0xffffffff, 0x0), btc['TYPED_ARRAY_SUPPORT'] ? (this[bt2] = bt1 >>> 0x18, this[bt2 + 0x1] = bt1 >>> 0x10, this[bt2 + 0x2] = bt1 >>> 0x8, this[bt2 + 0x3] = 0xff & bt1) : bxb(this, bt1, bt2, !0x1), bt2 + 0x4;
    }, btc['prototype']['writeIntLE'] = function(bt1, bt2, bt3, bt5) {
      if (bt1 = +bt1, bt2 |= 0x0, !bt5) {
        var bt6 = Math['pow'](0x2, 0x8 * bt3 - 0x1);
        bwX(this, bt1, bt2, bt3, bt6 - 0x1, -bt6);
      }
      var bt7 = 0x0,
        bt8 = 0x1,
        bt9 = 0x0;
      for (this[bt2] = 0xff & bt1; ++bt7 < bt3 && (bt8 *= 0x100);) 0x0 > bt1 && 0x0 === bt9 && 0x0 !== this[bt2 + bt7 - 0x1] && (bt9 = 0x1), this[bt2 + bt7] = 0xff & (bt1 / bt8 >> 0x0) - bt9;
      return bt2 + bt3;
    }, btc['prototype']['writeIntBE'] = function(bt1, bt2, bt3, bt5) {
      if (bt1 = +bt1, bt2 |= 0x0, !bt5) {
        var bt6 = Math['pow'](0x2, 0x8 * bt3 - 0x1);
        bwX(this, bt1, bt2, bt3, bt6 - 0x1, -bt6);
      }
      var bt7 = bt3 - 0x1,
        bt8 = 0x1,
        bt9 = 0x0;
      for (this[bt2 + bt7] = 0xff & bt1; 0x0 <= --bt7 && (bt8 *= 0x100);) 0x0 > bt1 && 0x0 === bt9 && 0x0 !== this[bt2 + bt7 + 0x1] && (bt9 = 0x1), this[bt2 + bt7] = 0xff & (bt1 / bt8 >> 0x0) - bt9;
      return bt2 + bt3;
    }, btc['prototype']['writeInt8'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x1, 0x7f, -0x80), btc['TYPED_ARRAY_SUPPORT'] || (bt1 = Math['floor'](bt1)), 0x0 > bt1 && (bt1 = 0xff + bt1 + 0x1), this[bt2] = 0xff & bt1, bt2 + 0x1;
    }, btc['prototype']['writeInt16LE'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x2, 0x7fff, -0x8000), btc['TYPED_ARRAY_SUPPORT'] ? (this[bt2] = 0xff & bt1, this[bt2 + 0x1] = bt1 >>> 0x8) : bx4(this, bt1, bt2, !0x0), bt2 + 0x2;
    }, btc['prototype']['writeInt16BE'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x2, 0x7fff, -0x8000), btc['TYPED_ARRAY_SUPPORT'] ? (this[bt2] = bt1 >>> 0x8, this[bt2 + 0x1] = 0xff & bt1) : bx4(this, bt1, bt2, !0x1), bt2 + 0x2;
    }, btc['prototype']['writeInt32LE'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x4, 0x7fffffff, -0x80000000), btc['TYPED_ARRAY_SUPPORT'] ? (this[bt2] = 0xff & bt1, this[bt2 + 0x1] = bt1 >>> 0x8, this[bt2 + 0x2] = bt1 >>> 0x10, this[bt2 + 0x3] = bt1 >>> 0x18) : bxb(this, bt1, bt2, !0x0), bt2 + 0x4;
    }, btc['prototype']['writeInt32BE'] = function(bt1, bt2, bt3) {
      return bt1 = +bt1, bt2 |= 0x0, bt3 || bwX(this, bt1, bt2, 0x4, 0x7fffffff, -0x80000000), 0x0 > bt1 && (bt1 = 0xffffffff + bt1 + 0x1), btc['TYPED_ARRAY_SUPPORT'] ? (this[bt2] = bt1 >>> 0x18, this[bt2 + 0x1] = bt1 >>> 0x10, this[bt2 + 0x2] = bt1 >>> 0x8, this[bt2 + 0x3] = 0xff & bt1) : bxb(this, bt1, bt2, !0x1), bt2 + 0x4;
    }, btc['prototype']['writeFloatLE'] = function(bt1, bt2, bt3) {
      return bxn(this, bt1, bt2, !0x0, bt3);
    }, btc['prototype']['writeFloatBE'] = function(bt1, bt2, bt3) {
      return bxn(this, bt1, bt2, !0x1, bt3);
    }, btc['prototype']['writeDoubleLE'] = function(bt1, bt2, bt3) {
      return bxt(this, bt1, bt2, !0x0, bt3);
    }, btc['prototype']['writeDoubleBE'] = function(bt1, bt2, bt3) {
      return bxt(this, bt1, bt2, !0x1, bt3);
    }, btc['prototype']['copy'] = function(bt1, bt2, bt3, bt5) {
      if (bt3 || (bt3 = 0x0), bt5 || 0x0 === bt5 || (bt5 = this['length']), bt2 >= bt1['length'] && (bt2 = bt1['length']), bt2 || (bt2 = 0x0), 0x0 < bt5 && bt5 < bt3 && (bt5 = bt3), bt5 === bt3) return 0x0;
      if (0x0 === bt1['length'] || 0x0 === this['length']) return 0x0;
      if (0x0 > bt2) throw new RangeError('targetStart\x20out\x20of\x20bounds');
      if (0x0 > bt3 || bt3 >= this['length']) throw new RangeError('sourceStart\x20out\x20of\x20bounds');
      if (0x0 > bt5) throw new RangeError('sourceEnd\x20out\x20of\x20bounds');
      bt5 > this['length'] && (bt5 = this['length']), bt1['length'] - bt2 < bt5 - bt3 && (bt5 = bt1['length'] - bt2 + bt3);
      var bt6, bt7 = bt5 - bt3;
      if (this === bt1 && bt3 < bt2 && bt2 < bt5)
        for (bt6 = bt7 - 0x1; 0x0 <= bt6; --bt6) bt1[bt6 + bt2] = this[bt6 + bt3];
      else if (0x3e8 > bt7 || !btc['TYPED_ARRAY_SUPPORT'])
        for (bt6 = 0x0; bt6 < bt7; ++bt6) bt1[bt6 + bt2] = this[bt6 + bt3];
      else Uint8Array['prototype']['set']['call'](bt1, this['subarray'](bt3, bt3 + bt7), bt2);
      return bt7;
    }, btc['prototype']['fill'] = function(bt1, bt2, bt3, bt5) {
      if ('string' == typeof bt1) {
        if ('string' == typeof bt2 ? (bt5 = bt2, bt2 = 0x0, bt3 = this['length']) : 'string' == typeof bt3 && (bt5 = bt3, bt3 = this['length']), 0x1 === bt1['length']) {
          var bt6 = bt1['charCodeAt'](0x0);
          0x100 > bt6 && (bt1 = bt6);
        }
        if (void 0x0 !== bt5 && 'string' != typeof bt5) throw new TypeError('encoding\x20must\x20be\x20a\x20string');
        if ('string' == typeof bt5 && !btc['isEncoding'](bt5)) throw new TypeError('Unknown\x20encoding:\x20' + bt5);
      } else 'number' == typeof bt1 && (bt1 &= 0xff);
      if (0x0 > bt2 || this['length'] < bt2 || this['length'] < bt3) throw new RangeError('Out\x20of\x20range\x20index');
      if (bt3 <= bt2) return this;
      var bt7;
      if (bt2 >>>= 0x0, bt3 = void 0x0 === bt3 ? this['length'] : bt3 >>> 0x0, bt1 || (bt1 = 0x0), 'number' == typeof bt1)
        for (bt7 = bt2; bt7 < bt3; ++bt7) this[bt7] = bt1;
      else {
        var bt8 = btc['isBuffer'](bt1) ? bt1 : bzV(new btc(bt1, bt5)['toString']()),
          bt9 = bt8['length'];
        for (bt7 = 0x0; bt7 < bt3 - bt2; ++bt7) this[bt7 + bt2] = bt8[bt7 % bt9];
      }
      return this;
    };
    var bzS = /[^+\/0-9A-Za-z-_]/g;

    function bzT(bt1) {
      return 0x10 > bt1 ? '0' + bt1['toString'](0x10) : bt1['toString'](0x10);
    }

    function bzV(bt1, bt2) {
      bt2 = bt2 || 0x1 / 0x0;
      for (var bt3, bt5 = bt1['length'], bt6 = null, bt7 = [], bt8 = 0x0; bt8 < bt5; ++bt8) {
        if (0xd7ff < (bt3 = bt1['charCodeAt'](bt8)) && 0xe000 > bt3) {
          if (!bt6) {
            if (0xdbff < bt3) {
              -0x1 < (bt2 -= 0x3) && bt7['push'](0xef, 0xbf, 0xbd);
              continue;
            }
            if (bt8 + 0x1 === bt5) {
              -0x1 < (bt2 -= 0x3) && bt7['push'](0xef, 0xbf, 0xbd);
              continue;
            }
            bt6 = bt3;
            continue;
          }
          if (0xdc00 > bt3) {
            -0x1 < (bt2 -= 0x3) && bt7['push'](0xef, 0xbf, 0xbd), bt6 = bt3;
            continue;
          }
          bt3 = 0x10000 + (bt6 - 0xd800 << 0xa | bt3 - 0xdc00);
        } else bt6 && -0x1 < (bt2 -= 0x3) && bt7['push'](0xef, 0xbf, 0xbd);
        if (bt6 = null, 0x80 > bt3) {
          if (0x0 > (bt2 -= 0x1)) break;
          bt7['push'](bt3);
        } else if (0x800 > bt3) {
          if (0x0 > (bt2 -= 0x2)) break;
          bt7['push'](0xc0 | bt3 >> 0x6, 0x80 | 0x3f & bt3);
        } else if (0x10000 > bt3) {
          if (0x0 > (bt2 -= 0x3)) break;
          bt7['push'](0xe0 | bt3 >> 0xc, 0x80 | 0x3f & bt3 >> 0x6, 0x80 | 0x3f & bt3);
        } else {
          if (!(0x110000 > bt3)) throw new Error('Invalid\x20code\x20point');
          if (0x0 > (bt2 -= 0x4)) break;
          bt7['push'](0xf0 | bt3 >> 0x12, 0x80 | 0x3f & bt3 >> 0xc, 0x80 | 0x3f & bt3 >> 0x6, 0x80 | 0x3f & bt3);
        }
      }
      return bt7;
    }

    function bA3(bt1) {
      return bt5['toByteArray'](function(bt1) {
        if (0x2 > (bt1 = function(bt1) {
            return bt1['trim'] ? bt1['trim']() : bt1['replace'](/^\s+|\s+$/g, '');
          }(bt1)['replace'](bzS, ''))['length']) return '';
        for (; 0x0 != bt1['length'] % 0x4;) bt1 += '=';
        return bt1;
      }(bt1));
    }

    function bA7(bt1, bt2, bt3, bt5) {
      for (var bt6 = 0x0; bt6 < bt5 && !(bt6 + bt3 >= bt2['length'] || bt6 >= bt1['length']); ++bt6) bt2[bt6 + bt3] = bt1[bt6];
      return bt6;
    }
  } ['call'](this, bt3(0x16)));
}, function(bAd, bAe) {
  for (var bAf = bAe['uint8'] = Array(0x100), bAg = 0x0; 0xff >= bAg; bAg++) bAf[bAg] = bAh(bAg);

  function bAh(bAd) {
    return function(bAe) {
      var bAf = bAe['reserve'](0x1);
      bAe['buffer'][bAf] = bAd;
    };
  }
}, function(bAl, bAm, bAn) {
  bAm['FlexDecoder'] = bAs, bAm['FlexEncoder'] = bAt;
  var bAo = bAn(0x3),
    bAp = 0x800,
    bAq = 0x10000,
    bAr = 'BUFFER_SHORTAGE';

  function bAs() {
    if (!(this instanceof bAs)) return new bAs();
  }

  function bAt() {
    if (!(this instanceof bAt)) return new bAt();
  }

  function bAu() {
    throw new Error('method\x20not\x20implemented:\x20write()');
  }

  function bAv() {
    throw new Error('method\x20not\x20implemented:\x20fetch()');
  }

  function bAw() {
    return this['buffers'] && this['buffers']['length'] ? (this['flush'](), this['pull']()) : this['fetch']();
  }

  function bAx(bAl) {
    (this['buffers'] || (this['buffers'] = []))['push'](bAl);
  }

  function bAz() {
    return (this['buffers'] || (this['buffers'] = []))['shift']();
  }

  function bAA(bAl) {
    return function(bAm) {
      for (var bAn in bAl) bAm[bAn] = bAl[bAn];
      return bAm;
    };
  }
  bAs['mixin'] = bAA({
    'bufferish': bAo,
    'write': function(bAl) {
      var bAm = this['offset'] ? bAo['prototype']['slice']['call'](this['buffer'], this['offset']) : this['buffer'];
      this['buffer'] = bAm ? bAl ? this['bufferish']['concat']([bAm, bAl]) : bAm : bAl, this['offset'] = 0x0;
    },
    'fetch': bAv,
    'flush': function() {
      for (; this['offset'] < this['buffer']['length'];) {
        var bAl, bAm = this['offset'];
        try {
          bAl = this['fetch']();
        } catch (bAI) {
          if (bAI && bAI['message'] != bAr) throw bAI;
          this['offset'] = bAm;
          break;
        }
        this['push'](bAl);
      }
    },
    'push': bAx,
    'pull': bAz,
    'read': bAw,
    'reserve': function(bAl) {
      var bAm = this['offset'],
        bAn = bAm + bAl;
      if (bAn > this['buffer']['length']) throw new Error(bAr);
      return this['offset'] = bAn, bAm;
    },
    'offset': 0x0
  }), bAs['mixin'](bAs['prototype']), bAt['mixin'] = bAA({
    'bufferish': bAo,
    'write': bAu,
    'fetch': function() {
      var bAl = this['start'];
      if (bAl < this['offset']) {
        var bAm = this['start'] = this['offset'];
        return bAo['prototype']['slice']['call'](this['buffer'], bAl, bAm);
      }
    },
    'flush': function() {
      for (; this['start'] < this['offset'];) {
        var bAl = this['fetch']();
        bAl && this['push'](bAl);
      }
    },
    'push': bAx,
    'pull': function() {
      var bAl = this['buffers'] || (this['buffers'] = []),
        bAm = 0x1 < bAl['length'] ? this['bufferish']['concat'](bAl) : bAl[0x0];
      return bAl['length'] = 0x0, bAm;
    },
    'read': bAw,
    'reserve': function(bAl) {
      var bAm = 0x0 | bAl;
      if (this['buffer']) {
        var bAn = this['buffer']['length'],
          bAo = 0x0 | this['offset'],
          bAp = bAo + bAm;
        if (bAp < bAn) return this['offset'] = bAp, bAo;
        this['flush'](), bAl = Math['max'](bAl, Math['min'](0x2 * bAn, this['maxBufferSize']));
      }
      return bAl = Math['max'](bAl, this['minBufferSize']), this['buffer'] = this['bufferish']['alloc'](bAl), this['start'] = 0x0, this['offset'] = bAm, 0x0;
    },
    'send': function(bAl) {
      var bAm = bAl['length'];
      if (bAm > this['minBufferSize']) this['flush'](), this['push'](bAl);
      else {
        var bAn = this['reserve'](bAm);
        bAo['prototype']['copy']['call'](bAl, this['buffer'], bAn);
      }
    },
    'maxBufferSize': bAq,
    'minBufferSize': bAp,
    'offset': 0x0,
    'start': 0x0
  }), bAt['mixin'](bAt['prototype']);
}, function(bAZ, bB0, bB1) {
  bB0['decode'] = function(bAZ, bB0) {
    var bB1 = new bB5(bB0);
    return bB1['write'](bAZ), bB1['read']();
  };
  var bB5 = bB1(0x20)['DecodeBuffer'];
}, function(bB6, bB7, bB8) {
  bB7['DecodeBuffer'] = bBa;
  var bB9 = bB8(0x14)['preset'];

  function bBa(bB6) {
    if (!(this instanceof bBa)) return new bBa(bB6);
    if (bB6 && (this['options'] = bB6, bB6['codec'])) {
      var bB7 = this['codec'] = bB6['codec'];
      bB7['bufferish'] && (this['bufferish'] = bB7['bufferish']);
    }
  }
  bB8(0x1e)['FlexDecoder']['mixin'](bBa['prototype']), bBa['prototype']['codec'] = bB9, bBa['prototype']['fetch'] = function() {
    return this['codec']['decode'](this);
  };
}, function(bBd, bBe, bBf) {
  var bBg = bBf(0x11),
    bBh = bBf(0x13),
    bBi = bBh['Uint64BE'],
    bBj = bBh['Int64BE'];
  bBe['getReadFormat'] = function(bBd) {
    var bBe = bBn['hasArrayBuffer'] && bBd && bBd['binarraybuffer'],
      bBf = bBd && bBd['int64'];
    return {
      'map': bBp && bBd && bBd['usemap'] ? bBz : bBr,
      'array': bBH,
      'str': bBN,
      'bin': bBe ? bBW : bBR,
      'ext': bC1,
      'uint8': bC8,
      'uint16': bCf,
      'uint32': bCo,
      'uint64': bCw(0x8, bBf ? bCF : bCB),
      'int8': bCb,
      'int16': bCj,
      'int32': bCs,
      'int64': bCw(0x8, bBf ? bCH : bCD),
      'float32': bCw(0x4, bCJ),
      'float64': bCw(0x8, bCL)
    };
  }, bBe['readUint8'] = bC8;
  var bBn = bBf(0x3),
    bBo = bBf(0x12),
    bBp = 'undefined' != typeof Map,
    bBq = !0x0;

  function bBr(bBd, bBe) {
    var bBf, bBg = {},
      bBh = Array(bBe),
      bBi = Array(bBe),
      bBj = bBd['codec']['decode'];
    for (bBf = 0x0; bBf < bBe; bBf++) bBh[bBf] = bBj(bBd), bBi[bBf] = bBj(bBd);
    for (bBf = 0x0; bBf < bBe; bBf++) bBg[bBh[bBf]] = bBi[bBf];
    return bBg;
  }

  function bBz(bBd, bBe) {
    var bBf, bBg = new Map(),
      bBh = Array(bBe),
      bBi = Array(bBe),
      bBj = bBd['codec']['decode'];
    for (bBf = 0x0; bBf < bBe; bBf++) bBh[bBf] = bBj(bBd), bBi[bBf] = bBj(bBd);
    for (bBf = 0x0; bBf < bBe; bBf++) bBg['set'](bBh[bBf], bBi[bBf]);
    return bBg;
  }

  function bBH(bBd, bBe) {
    for (var bBf = Array(bBe), bBg = bBd['codec']['decode'], bBh = 0x0; bBh < bBe; bBh++) bBf[bBh] = bBg(bBd);
    return bBf;
  }

  function bBN(bBd, bBe) {
    var bBf = bBd['reserve'](bBe);
    return bBo['toString']['call'](bBd['buffer'], 'utf-8', bBf, bBf + bBe);
  }

  function bBR(bBd, bBe) {
    var bBf = bBd['reserve'](bBe),
      bBg = bBo['slice']['call'](bBd['buffer'], bBf, bBf + bBe);
    return bBn['from'](bBg);
  }

  function bBW(bBd, bBe) {
    var bBf = bBd['reserve'](bBe),
      bBg = bBo['slice']['call'](bBd['buffer'], bBf, bBf + bBe);
    return bBn['Uint8Array']['from'](bBg)['buffer'];
  }

  function bC1(bBd, bBe) {
    var bBf = bBd['reserve'](bBe + 0x1),
      bBg = bBd['buffer'][bBf++],
      bBh = bBf + bBe,
      bBi = bBd['codec']['getExtUnpacker'](bBg);
    if (!bBi) throw new Error('Invalid\x20ext\x20type:\x20' + (bBg ? '0x' + bBg['toString'](0x10) : bBg));
    return bBi(bBo['slice']['call'](bBd['buffer'], bBf, bBh));
  }

  function bC8(bBd) {
    var bBe = bBd['reserve'](0x1);
    return bBd['buffer'][bBe];
  }

  function bCb(bBd) {
    var bBe = bBd['reserve'](0x1),
      bBf = bBd['buffer'][bBe];
    return 0x80 & bBf ? bBf - 0x100 : bBf;
  }

  function bCf(bBd) {
    var bBe = bBd['reserve'](0x2),
      bBf = bBd['buffer'];
    return bBf[bBe++] << 0x8 | bBf[bBe];
  }

  function bCj(bBd) {
    var bBe = bBd['reserve'](0x2),
      bBf = bBd['buffer'],
      bBg = bBf[bBe++] << 0x8 | bBf[bBe];
    return 0x8000 & bBg ? bBg - 0x10000 : bBg;
  }

  function bCo(bBd) {
    var bBe = bBd['reserve'](0x4),
      bBf = bBd['buffer'];
    return 0x1000000 * bBf[bBe++] + (bBf[bBe++] << 0x10) + (bBf[bBe++] << 0x8) + bBf[bBe];
  }

  function bCs(bBd) {
    var bBe = bBd['reserve'](0x4),
      bBf = bBd['buffer'];
    return bBf[bBe++] << 0x18 | bBf[bBe++] << 0x10 | bBf[bBe++] << 0x8 | bBf[bBe];
  }

  function bCw(bBd, bBe) {
    return function(bBf) {
      var bBg = bBf['reserve'](bBd);
      return bBe['call'](bBf['buffer'], bBg, bBq);
    };
  }

  function bCB(bBd) {
    return new bBi(this, bBd)['toNumber']();
  }

  function bCD(bBd) {
    return new bBj(this, bBd)['toNumber']();
  }

  function bCF(bBd) {
    return new bBi(this, bBd);
  }

  function bCH(bBd) {
    return new bBj(this, bBd);
  }

  function bCJ(bBd) {
    return bBg['read'](this, bBd, !0x1, 0x17, 0x4);
  }

  function bCL(bBd) {
    return bBg['read'](this, bBd, !0x1, 0x34, 0x8);
  }
}, function(bCN, bCO, bCP) {
  ! function(bCO) {
    function bCP(bCN) {
      for (var bCO in bD5) bCN[bCO] = bD5[bCO];
      return bCN;
    }

    function bCU(bCN, bCO) {
      var bCP, bCY = this;
      if (arguments['length']) {
        if (bCO) {
          if (bCP = bD0(bCY, bCN, !0x0)) {
            if (!(bCP = bCP['filter'](function(bCN) {
                return bCN !== bCO && bCN['originalListener'] !== bCO;
              }))['length']) return bCU['call'](bCY, bCN);
            bCY['listeners'][bCN] = bCP;
          }
        } else if ((bCP = bCY['listeners']) && (delete bCP[bCN], !Object['keys'](bCP)['length'])) return bCU['call'](bCY);
      } else delete bCY['listeners'];
      return bCY;
    }

    function bD0(bCN, bCO, bCP) {
      if (!bCP || bCN['listeners']) {
        var bCU = bCN['listeners'] || (bCN['listeners'] = {});
        return bCU[bCO] || (bCU[bCO] = []);
      }
    }
    bCN['exports'] = bCO;
    var bD5 = {
      'on': function(bCN, bCO) {
        return bD0(this, bCN)['push'](bCO), this;
      },
      'once': function(bCN, bCO) {
        function bCP() {
          bCU['call'](bD5, bCN, bCP), bCO['apply'](this, arguments);
        }
        var bD5 = this;
        return bCP['originalListener'] = bCO, bD0(bD5, bCN)['push'](bCP), bD5;
      },
      'off': bCU,
      'emit': function(bCN, bCO) {
        var bCP = this,
          bCU = bD0(bCP, bCN, !0x0);
        if (!bCU) return !0x1;
        var bD5 = arguments['length'];
        if (0x1 === bD5) bCU['forEach'](function(bCN) {
          bCN['call'](bCP);
        });
        else if (0x2 === bD5) bCU['forEach'](function(bCN) {
          bCN['call'](bCP, bCO);
        });
        else {
          var bDj = Array['prototype']['slice']['call'](arguments, 0x1);
          bCU['forEach'](function(bCN) {
            bCN['apply'](bCP, bDj);
          });
        }
        return !!bCU['length'];
      }
    };
    bCP(bCO['prototype']), bCO['mixin'] = bCP;
  }(
    /**
     * event-lite.js - Light-weight EventEmitter (less than 1KB when gzipped)
     *
     * @copyright Yusuke Kawasaki
     * @license MIT
     * @constructor
     * @see https://github.com/kawanet/event-lite
     * @see http://kawanet.github.io/event-lite/EventLite.html
     * @example
     * var EventLite = require("event-lite");
     *
     * function MyClass() {...}             // your class
     *
     * EventLite.mixin(MyClass.prototype);  // import event methods
     *
     * var obj = new MyClass();
     * obj.on("foo", function() {...});     // add event listener
     * obj.once("bar", function() {...});   // add one-time event listener
     * obj.emit("foo");                     // dispatch event
     * obj.emit("bar");                     // dispatch another event
     * obj.off("foo");                      // remove event listener
     */
    function bCN() {
      if (!(this instanceof bCN)) return new bCN();
    });
}, function(bDl) {
  bDl['exports'] = 'YZL9x';
}, function(bDm, bDn, bDo) {
  'use strict';
  bDo['d'](bDn, 'a', function() {
    return bDp;
  });
  var bDp = function() {
    function bDm() {
      this['_hasWeakSet'] = 'function' == typeof WeakSet, this['_inner'] = this['_hasWeakSet'] ? new WeakSet() : [];
    }
    return bDm['prototype']['memoize'] = function(bDm) {
      if (this['_hasWeakSet']) return !!this['_inner']['has'](bDm) || (this['_inner']['add'](bDm), !0x1);
      for (var bDn = 0x0; bDn < this['_inner']['length']; bDn++)
        if (this['_inner'][bDn] === bDm) return !0x0;
      return this['_inner']['push'](bDm), !0x1;
    }, bDm['prototype']['unmemoize'] = function(bDm) {
      if (this['_hasWeakSet']) this['_inner']['delete'](bDm);
      else
        for (var bDn = 0x0; bDn < this['_inner']['length']; bDn++)
          if (this['_inner'][bDn] === bDm) {
            this['_inner']['splice'](bDn, 0x1);
            break;
          }
    }, bDm;
  }();
}, function(bDv, bDw) {
  var bDx, bDy;
  bDv['exports']['events'] = ['onShoot', 'onMelee', 'onDamage', 'onEnter', 'onDestroy', 'onRespawn'], bDv['exports']['actions'] = [{
    'name': 'Give\x20Player\x20Score',
    'execute': function(bDv, bDw, bDx, bDy) {
      bDv['players']['score'](bDx, bDy['triggerConstant'] || 0x1);
    }
  }, {
    'name': 'Kill\x20Player',
    'execute': function(bDv, bDw, bDx) {
      bDv['players']['kill'](bDx);
    }
  }, {
    'name': 'Respawn\x20Player',
    'execute': function(bDv, bDw, bDx) {
      var bDy = bDv['getSpawnPoint'](bDx['team'], bDx);
      bDx['x'] = bDy['x'], bDx['y'] = bDy['y'], bDx['z'] = bDy['z'];
    }
  }, {
    'name': 'Change\x20Player\x20Health',
    'execute': function(bDv, bDw, bDx, bDy) {
      bDv['players']['changeHealth'](bDx, null, -(bDy['triggerConstant'] || 0x0), !0x0) && bDv['players']['kill'](bDx, null, {});
    }
  }, {
    'name': 'Destroy\x20Interface',
    'execute': function(bDv, bDw, bDx, bDR) {
      for (var bDS = 0x0; bDS < bDv['map']['manager']['interfaces']['length']; ++bDS)(bDy = bDv['map']['manager']['objects'][bDv['map']['manager']['interfaces'][bDS]])['sid'] != bDR['sid'] && bDy['health'] && bDy['interface'] != bDR['interface'] && bDy['interface'] == bDR['interfaceT'] && (bDy['active'] = !0x1, bDy['health'] = 0x0, bDy['destroyedBy'] = bDx, bDv['destObjs']['push'](bDy['uid']), bDw['broadcast']('game' + bDv['sid'], 'do', bDy['uid']), (bDy['onDestroy'] || bDy['onDamage']) && bDv['onTrigger'](bDx, bDy));
    }
  }, {
    'name': 'Toggle\x20Interface\x20Gate',
    'execute': function(bDv, bDw, bDx, bDW) {
      for (var bDX = 0x0; bDX < bDv['map']['manager']['interfaces']['length']; ++bDX)(bDy = bDv['map']['manager']['objects'][bDv['map']['manager']['interfaces'][bDX]])['sid'] != bDW['sid'] && bDy['gate'] && bDy['interface'] != bDW['interface'] && bDy['interface'] == bDW['interfaceT'] && (bDy['active'] = !bDy['active'], bDw['broadcast']('game' + bDv['sid'], 'gte', bDy['uid'], bDy['active']));
    }
  }, {
    'name': 'Change\x20Interface\x20Health',
    'execute': function(bDv, bDw, bDx, bE1) {
      for (var bE2 = 0x0; bE2 < bDv['map']['manager']['interfaces']['length']; ++bE2)(bDy = bDv['map']['manager']['objects'][bDv['map']['manager']['interfaces'][bE2]])['sid'] != bE1['sid'] && bDy['health'] && bDy['interface'] != bE1['interface'] && bDy['interface'] == bE1['interfaceT'] && (bDy['health'] -= -(bE1['triggerConstant'] || 0x0), 0x0 >= bDy['health'] && (bDy['active'] = !0x1, bDy['health'] = 0x0, bDy['destroyedBy'] = bDx, bDv['destObjs']['push'](bDy['uid']), bDw['broadcast']('game' + bDv['sid'], 'do', bDy['uid']), bDy && bDy['onDestroy'] && bDv['onTrigger'](bDx, bDy)), bDy && bDy['onDamage'] && bDv['onTrigger'](bDx, bDy));
    }
  }, {
    'name': 'Teleport\x20To\x20Interface',
    'execute': function(bDv, bDw, bDx, bE6) {
      for (var bE7 = 0x0; bE7 < bDv['map']['manager']['interfaces']['length']; ++bE7)(bDy = bDv['map']['manager']['objects'][bDv['map']['manager']['interfaces'][bE7]])['sid'] != bE6['sid'] && bDy['interface'] != bE6['interface'] && bDy['interface'] == bE6['interfaceT'] && bDv['players']['changePosition'](bDx, bDy['x'], bDy['y'] - bDy['height'], bDy['z'], !0x0);
    }
  }, {
    'name': 'Change\x20Interface\x20Deposit\x20Box\x20Amount',
    'execute': function(bDv, bDw, bDx, bEb) {
      for (var bEc = 0x0; bEc < bDv['map']['manager']['interfaces']['length']; ++bEc)(bDy = bDv['map']['manager']['objects'][bDv['map']['manager']['interfaces'][bEc]])['sid'] != bEb['sid'] && bDy['interface'] != bEb['interface'] && bDy['interface'] == bEb['interfaceT'] && bDy['bank'] && (bDy['deposited'] += bEb['triggerConstant'] || 0x0, bDw['broadcast']('game' + bDv['sid'], 'bnk', bDy['uid'], bDy['deposited']));
    }
  }, {
    'name': 'Kill\x20Opposing\x20Team',
    'execute': function(bDv, bDw, bDy) {
      for (var bEg = 0x0; bEg < bDv['players']['list']['length']; ++bEg)(bDx = bDv['players']['list'][bEg])['active'] && bDx != bDy && (!bDx['team'] || bDy['team'] != bDx['team']) && bDv['players']['kill'](bDx, null, null, !0x0);
    }
  }, {
    'name': 'Respawn\x20Opposing\x20Team',
    'execute': function(bDv, bDw, bDy) {
      for (var bEk = 0x0; bEk < bDv['players']['list']['length']; ++bEk)
        if ((bDx = bDv['players']['list'][bEk])['active'] && bDx != bDy && (!bDx['team'] || bDy['team'] != bDx['team'])) {
          var bEl = bDv['getSpawnPoint'](bDx['team'], bDx);
          bDx['x'] = bEl['x'], bDx['y'] = bEl['y'], bDx['z'] = bEl['z'];
        }
    }
  }, {
    'name': 'Respawn\x20Destructible\x20Interface',
    'execute': function(bDv, bDw, bEo, bEp) {
      for (var bEq = 0x0; bEq < bDv['map']['manager']['interfaces']['length']; ++bEq) bDx = bDv['map']['manager']['objects'][bDv['map']['manager']['interfaces'][bEq]], bDy = bDv['destObjs']['indexOf'](bDx['uid']), bDx['sid'] != bEp['sid'] && bDx['startHealth'] && 0x0 == bDx['health'] && -0x1 != bDy && bDx['interface'] != bEp['interface'] && bDx['interface'] == bEp['interfaceT'] && (bDv['destObjs']['splice'](bDy, 0x1), bDx['active'] = !0x0, bDx['respawnT'] = bDx['respawnR'] ? 0x0 : bDx['respawnTStart'], null != bDx['health'] && (bDx['health'] = bDx['startHealth']), bDw['broadcast']('game' + bDv['sid'], 'ro', bDx['uid']), bDx && bDx['onRespawn'] && bDx['destroyedBy'] && bDv['onTrigger'](bDx['destroyedBy'], bDx), bDx['destroyedBy'] = null);
    }
  }, {
    'name': 'Toggle\x20Destructible\x20Interface',
    'execute': function(bDv, bDw, bEt, bEu) {
      for (var bEv = 0x0; bEv < bDv['map']['manager']['interfaces']['length']; ++bEv) bDx = bDv['map']['manager']['objects'][bDv['map']['manager']['interfaces'][bEv]], bDy = bDv['destObjs']['indexOf'](bDx['uid']), bDx['sid'] != bEu['sid'] && bDx['startHealth'] && bDx['interface'] != bEu['interface'] && bDx['interface'] == bEu['interfaceT'] && (-0x1 == bDy ? (bDx['active'] = !0x1, bDx['health'] = 0x0, bDx['destroyedBy'] = bEt, bDv['destObjs']['push'](bDx['uid']), bDw['broadcast']('game' + bDv['sid'], 'do', bDx['uid']), (bDx['onDestroy'] || bDx['onDamage']) && bDv['onTrigger'](bEt, bDx)) : (bDv['destObjs']['splice'](bDy, 0x1), bDx['active'] = !0x0, bDx['respawnT'] = bDx['respawnR'] ? 0x0 : bDx['respawnTStart'], null != bDx['health'] && (bDx['health'] = bDx['startHealth']), bDw['broadcast']('game' + bDv['sid'], 'ro', bDx['uid']), bDx && bDx['onRespawn'] && bDx['destroyedBy'] && bDv['onTrigger'](bDx['destroyedBy'], bDx), bDx['destroyedBy'] = null));
    }
  }];
}, function(bEw, bEx, bEy) {
  let bEz = bEy(0x4);
  const bEA = bEy(0x7),
    bEB = bEy(0x18),
    bEC = bEy(0x8),
    bED = bEy(0x17);
  let bEE = new bEz['TextureLoader'](),
    bEF = new bEz['LoadingManager'](),
    bEG = new bEz['OBJLoader'](bEF);

  function bEH(bEw, bEx, bEy, bEA, bEB, bED = 0x0, bEF = 0x0, bEH = 0x0, bEQ = null) {
    return new Promise(bER => {
      bEG['load'](bEC['assetsUrl'](bEx), bEx => {
        let bEG;
        bEy && (bEG = bEE['load'](bEC['assetsUrl'](bEy), bEw => {
          bEw['wrapS'] = bEz['RepeatWrapping'], bEw['wrapT'] = bEz['RepeatWrapping'], bEw['repeat']['set'](0x1, 0x1), bEw['minFilter'] = bEz['NearestFilter'], bEw['magFilter'] = bEz['NearestFilter'], bEw['needsUpdate'] = !0x0;
        }));
        let bEV = new bEz['StrippedLambertMaterial']({
            'map': bEG
          }),
          bEW = new bEz['Geometry']();
        bEx['traverse'](bEw => {
          bEw instanceof bEz['Mesh'] && (bEw['geometry']['isBufferGeometry'] ? (bEW['fromBufferGeometry'](bEw['geometry']), bEW['computeFlatVertexNormals'](), bEw['geometry']['fromGeometry'](bEW)) : bEw['geometry']['computeFlatVertexNormals'](), bEw['material'] = bEV);
        }), bEV['vertexColors'] = bEz['VertexColors'], bEV['color']['set'](bEB || 0xffffff), bEx['scale']['setScalar'](bEA || 0x1), bEx['position']['y'] += bED, bEx['rotateX'](bEF || 0x0), bEx['rotateY'](bEH || 0x0), bEQ ? (bEw[bEQ] && (bEw['remove'](bEw[bEQ]), bEw[bEQ] = null), bEw[bEQ] = bEx, bEw['add'](bEw[bEQ])) : bEw['add'](bEx), bER(bEx);
      });
    });
  }
  new bEz['BoxBufferGeometry'](0x1, 0x1, 0x1);
  new bEz['PlaneBufferGeometry'](0x1, 0x1)['rotateX'](-Math['PI'] / 0x2);
  new bEz['StrippedLambertMaterial']({
    'color': 0xff00
  }), new bEz['StrippedLambertMaterial']({
    'color': 0x555555
  });

  function bEY(bEw, bEx, bEy, bEA) {
    var bEC = bEB['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], bEw, bEx, bEy, {
      'scale': 0x1,
      'amb': bEA,
      'useScale': !0x0
    });
    return bEC = new bEz['BufferGeometry']()['fromGeometry'](bEC);
  }
  let bF4 = (bEw, bEx, bEy, bEA, bEC, bED, bEE, bEF, bEG, bEH) => {
      (bEE = bEE || {})['premultipliedAlpha'] = !0x0;
      var bEY = new bEz['Mesh'](bEB['generatePlane'](bED, bEC, bEE, bEx, bEy, bEA));
      bEY['position']['set'](bEx, bEy, bEA), bEY['rotateY'](bEF || 0x0), bEY['rotateX']((bEG || 0x0) - Math['PI'] / 0x2), bEY['rotateZ'](bEH || 0x0), bEY['scale']['set'](0x2 * bEC, 0x2 * bED, 0x1), bEY['updateMatrix'](), bEw['merge'](bEY['geometry'], bEY['matrix']);
    },
    bF5 = (bEw, bEx, bEy, bEA, bEC, bED, bEE, bEF, bEG) => {
      bEG = bEG || {};
      var bEH = new bEz['Mesh'](bEB['generateCube'](bEF, bEC, bED, bEE, bEG));
      return bEH['position']['set'](bEx, bEy, bEA), bEH['rotation']['set'](bEG['yR'] || 0x0, bEG['xR'] || 0x0, bEG['zR'] || 0x0), bEH['scale']['set'](bEC, bED, bEE), bEw instanceof bEz['Geometry'] ? (bEH['updateMatrix'](), bEw['merge'](bEH['geometry'], bEH['matrix'])) : bEw['add'](bEH), bEH;
    };
  bEw['exports']['prefabs'] = {
    'CRATE': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'gen': bEw => bEH(bEw, 'models/crate_0.obj', 'textures/crate_0.png', bEA['crateScale'], bEw['color']),
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'STACK': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'gen': bEw => bEH(bEw, 'models/stack_0.obj', 'textures/stack_0.png', bEA['crateScale'], bEw['color']),
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'BARREL': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'gen': bEw => bEH(bEw, 'models/barrel_0.obj', 'textures/barrel_0.png', bEA['barrelScale'], bEw['color']),
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'ACIDBARREL': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'emiss': !0x0,
      'gen': bEw => bEH(bEw, 'models/acidbarrel_0.obj', 'textures/acidbarrel_0.png', bEA['acidbarrelScale'], bEw['color']),
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'TREE': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'complex': !0x0,
      'gen': bEw => bEH(bEw, 'models/tree_0.obj', 'textures/tree_0.png', bEA['treeScale'], bEw['color']),
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'CONE': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'complex': !0x0,
      'gen': bEw => bEH(bEw, 'models/cone_0.obj', 'textures/cone_0.png', bEA['coneScale'], bEw['color']),
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'TEDDY': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'complex': !0x0,
      'gen': bEw => bEH(bEw, 'models/teddy_0.obj', 'textures/teddy_0.png', bEA['teddyScale'], bEw['color']),
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'CONTAINER': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'gen': bEw => bEH(bEw, 'models/container_0.obj', 'textures/container_0.png', bEA['containerScale'], bEw['color']),
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'CONTAINERR': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'gen': bEw => bEH(bEw, 'models/containerr_0.obj', 'textures/containerr_0.png', bEA['containerScale'], bEw['color']),
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'DOOR': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'gen': bEw => bEH(bEw, 'models/door_0.obj', 'textures/door_0.png', bEA['doorScale'], bEw['color']),
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'WINDOW': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'gen': bEw => bEH(bEw, 'models/window_0.obj', 'textures/window_0.png', bEA['windowScale'], bEw['color']),
      'castShadow': !0x0,
      'transparent': !0x0,
      'receiveShadow': !0x0
    },
    'GRASS': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'complex': !0x0,
      'doubleSide': !0x0,
      'transparent': !0x0,
      'gen': bEw => bEH(bEw, 'models/grass_0.obj', 'textures/grass_0.png', bEA['grassScale'], bEw['color']),
      'receiveShadow': !0x0
    },
    'WEAPON_PICKUP': {
      'notStyleable': !0x0,
      'interact': !0x0,
      'customScore': !0x0,
      'defaultSize': [bEA['pickupZoneX'], bEA['pickupZoneH'], bEA['pickupZoneZ']],
      'scalable': !0x1,
      'tool': !0x0,
      'scaleWithSize': !0x1,
      'lineCol': 0x36dbff,
      'noTexture': !0x0,
      'texturable': !0x1,
      'opacity': 0.1,
      'genGeo': async (bEw, bEx) => function(bEw, bEx) {
        let bEy = bEB['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], ...bEw['size'], {
          'scale': 0x1,
          'amb': bEx,
          'useScale': !0x0
        });
        return bEy = new bEz['BufferGeometry']()['fromGeometry'](bEy), bEH(bEw, 'models/weapons/' + bED[bEw['weaponId']]['src'] + '.obj', 'textures/weapons/' + bED[bEw['weaponId']]['src'] + '.png', bED[bEw['weaponId']]['scale'], 0xffffff, -0.5, -1.6, 0x0, 'wepMesh'), bEy;
      }(bEw, bEx),
      'stepSrc': 'a'
    },
    'VEHICLE': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'editColor': !0x0,
      'dontRound': !0x0,
      'complex': !0x0,
      'emiss': !0x0,
      'gen': bEw => bEH(bEw, 'models/vehicle_0.obj', 'textures/vehicle_0.png', bEA['vehicleScale'], bEw['color']),
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'LADDER': {
      'notTechnical': !0x0,
      'defaultSize': [0x2, 0xa, 0x4],
      'scalable': !0x0,
      'scaleWithSize': !0x1,
      'editColor': !0x0,
      'hideBoundingBox': !0x1,
      'texturable': !0x0,
      'genGeo': async bEw => function(bEw, bEx, bEy, bEB) {
        var bED = new bEz['Geometry']();
        bEB = bEB * Math['PI'] / 0x2;
        let bEE = {
          'x': 0x0 + bEA['ladderScale'] * Math['cos'](bEB),
          'z': 0x0 + bEA['ladderScale'] * Math['sin'](bEB),
          'y': 0x0 - bEx / 0x2
        };
        bF5(bED, bEE['x'] + bEA['ladderWidth'] * Math['sin'](bEB), bEE['y'], bEE['z'] + bEA['ladderWidth'] * Math['cos'](bEB), 0x2 * bEA['ladderScale'], bEx + 0x2, 0x2 * bEA['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], {
          'scale': 0.02
        }), bF5(bED, bEE['x'] - bEA['ladderWidth'] * Math['sin'](bEB), bEE['y'], bEE['z'] - bEA['ladderWidth'] * Math['cos'](bEB), 0x2 * bEA['ladderScale'], bEx + 0x2, 0x2 * bEA['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], {
          'scale': 0.02
        });
        for (var bEF = Math['floor'](bEx / 0x6), bEG = 0x0; bEG < bEF; ++bEG) bF4(bED, bEE['x'], bEE['y'] + 0x6 * (bEG + 0x1) + bEC['randFloat'](-0x1, 0x1), bEE['z'], bEA['ladderWidth'], bEA['ladderScale'], {
          'scale': 0.02
        }, -bEB + Math['PI'] / 0x2, Math['PI'] / 0x2, bEC['randFloat'](-0.1, 0.1));
        return bED;
      }(...bEw['size'], bEw['direction']),
      'customDirection': !0x0,
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0
    },
    'CUBE': {
      'canInterface': !0x0,
      'movingTexture': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'hasHealth': !0x0,
      'scalable': !0x0,
      'editAmb': !0x0,
      'scaleWithSize': !0x1,
      'editColor': !0x0,
      'editEmissive': !0x0,
      'editOpac': !0x0,
      'hideBoundingBox': !0x1,
      'editPen': !0x0,
      'texturable': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0,
      'hasBorder': !0x0
    },
    'RAMP': {
      'notTechnical': !0x0,
      'defaultSize': [0xa, 0x5, 0xa],
      'movingTexture': !0x0,
      'scalable': !0x0,
      'scaleWithSize': !0x1,
      'hideBoundingBox': !0x1,
      'boostable': !0x0,
      'editColor': !0x0,
      'editEmissive': !0x0,
      'texturable': !0x0,
      'genGeo': async bEw => function(bEw, bEx, bEy, bEA, bEC, bED, bEE) {
        var bEF = new bEz['Geometry']();
        bEx = 0x0 - bEC / 0x2;
        var bEG = 0x0 != (bEE = bEE * Math['PI'] / 0x2) && bEE != Math['PI'];
        return ((bEw, bEx, bEy, bEA, bEC, bED, bEE, bEG, bEH) => {
          bEG = bEG || {};
          var bEY = new bEz['Mesh'](bEB['generatePlane'](0x2 * bED, bEA, bEG));
          bEY['position']['set'](bEw, bEx + bEC / 0x2, bEy), bED *= 0x2;
          var bF4 = Math['sqrt'](bEC * bEC + bED * bED);
          bEY['scale']['set'](bEA, bF4, 0x2), bEY['rotateY'](-Math['PI'] / 0x2 - bEE), bEY['rotateX'](Math['asin'](bEC / bF4) - Math['PI'] / 0x2), bEY['rotateZ'](bEH || 0x0), bEY['updateMatrix'](), bEF['merge'](bEY['geometry'], bEY['matrix']);
        })(bEw, bEx, bEy, bEG ? bEA : bED, bEC, (bEG ? bED : bEA) / 0x2, bEE, {
          'scale': 0x1
        }), bEF;
      }(0x0, 0x0, 0x0, ...bEw['size'], bEw['direction']),
      'shootable': !0x0,
      'customDirection': !0x0,
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0,
      'doubleSide': !0x0
    },
    'PLANE': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'defaultSize': [0x4, 0.01, 0x4],
      'movingTexture': !0x0,
      'dontRound': !0x0,
      'scalable': !0x0,
      'canTerrain': !0x0,
      'edgeNoise': !0x0,
      'scaleWithSize': !0x0,
      'editColor': !0x0,
      'editPen': !0x0,
      'editEmissive': !0x0,
      'editOpac': !0x0,
      'hideBoundingBox': !0x1,
      'texturable': !0x0,
      'genGeo': async bEw => function(bEw, bEx) {
        let bEy = new bEz['PlaneGeometry'](bEw, bEx);
        return bEy['rotateX'](-Math['PI'] / 0x2), bEy;
      }(bEw['size'][0x0], bEw['size'][0x2]),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0,
      'doubleSide': !0x0
    },
    'OBJECTIVE': {
      'objectiveLink': !0x0,
      'notTechnical': !0x0,
      'notStyleable': !0x0,
      'defaultSize': [0x32, 0x32, 0x32],
      'scalable': !0x0,
      'noTexture': !0x0,
      'opacity': 0.2,
      'lineCol': 0xc800ff,
      'tool': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a'
    },
    'PARTICLES': {
      'customDirection': !0x0,
      'notTechnical': !0x0,
      'defaultSize': [0x14, 0x14, 0x14],
      'hasParticles': !0x0,
      'editColor': !0x0,
      'scalable': !0x0,
      'noTexture': !0x0,
      'opacity': 0.3,
      'lineCol': 0x2effff,
      'tool': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a'
    },
    'BILLBOARD': {
      'canInterface': !0x0,
      'hasHealth': !0x0,
      'defaultSize': [0x28, 0.01, 0xa],
      'lineCol': 0xffff00,
      'dontRound': !0x0,
      'scalable': !0x0,
      'canTerrain': !0x0,
      'scaleWithSize': !0x0,
      'hideBoundingBox': !0x1,
      'genGeo': async bEw => function(bEw, bEx, bEy, bEA, bEB, bEC) {
        var bED = new bEz['Geometry']();
        return bF4(bED, bEw, bEx, bEy, bEA / 0x2, bEC / 0x2), bED;
      }(0x0, 0x0, 0x0, ...bEw['size']),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0,
      'doubleSide': !0x0
    },
    'SCORE_ZONE': {
      'notStyleable': !0x0,
      'customScore': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x0,
      'noTexture': !0x0,
      'opacity': 0.3,
      'lineCol': 0xffff00,
      'tool': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a'
    },
    'DEATH_ZONE': {
      'notTechnical': !0x0,
      'notStyleable': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x0,
      'noTexture': !0x0,
      'opacity': 0.3,
      'lineCol': 0xff0000,
      'tool': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a'
    },
    'SPAWN_POINT': {
      'notTechnical': !0x0,
      'notStyleable': !0x0,
      'scalable': !0x1,
      'alwaysSee': !0x0,
      'tool': !0x0,
      'scaleWithSize': !0x1,
      'teamable': !0x0,
      'noTexture': !0x0,
      'opacity': 0.00001,
      'stepSrc': 'a',
      'customDirection': !0x0,
      'dontRound': !0x0,
      'genGeo': async (bEw, bEx) => function(bEw, bEx) {
        bEH(bEw, 'models/spawn_0.obj', 'textures/spawn_0.png', 0x1, 0xffffff, -5.5, 0x0, -((bEw['direction'] || 0x0) + 0x1) * Math['PI'] / 0x2, 'spwnMesh');
        let bEy = bEB['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], 0x7, 0xb, 0x7, {
          'scale': 0x1,
          'amb': bEx,
          'transparent': !0x0,
          'useScale': !0x0,
          'depthWrite': !0x1,
          'side': 0x2
        });
        return bEy = new bEz['BufferGeometry']()['fromGeometry'](bEy);
      }(bEw, bEx),
      'dummy': !0x1,
      'castShadow': !0x1,
      'receiveShadow': !0x1
    },
    'CHECK_POINT': {
      'notStyleable': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x0,
      'noTexture': !0x0,
      'opacity': 0.3,
      'lineCol': 0x3dac5,
      'tool': !0x0,
      'customDirection': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a'
    },
    'TELEPORTER': {
      'notStyleable': !0x0,
      'hasSignals': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x0,
      'noTexture': !0x0,
      'opacity': 0.3,
      'lineCol': 0xb1fff0,
      'tool': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a'
    },
    'CAMERA_POSITION': {
      'notTechnical': !0x0,
      'notStyleable': !0x0,
      'defaultSize': [0x2, 0x2, 0x2],
      'scalable': !0x1,
      'alwaysSee': !0x0,
      'tool': !0x0,
      'scaleWithSize': !0x1,
      'hideBoundingBox': !0x0,
      'editorGen': bEw => function(bEw, bEx, bEy) {
        let bEA = new bEz['TextureLoader']()['load'](bEx);
        bEA['magFilter'] = bEz['NearestFilter'];
        let bEB = new bEz['SpriteMaterial']({
            'map': bEA,
            'color': 0xffffff
          }),
          bEC = new bEz['Sprite'](bEB);
        bEy && bEC['scale']['set'](bEy, bEy, 0x1), bEw['add'](bEC);
      }(bEw, 'img/crosshair.png', 0x5),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x1,
      'receiveShadow': !0x1
    },
    'SPECTATE_CAM': {
      'objectiveLink': !0x0,
      'isCam': !0x0,
      'notTechnical': !0x0,
      'notStyleable': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x1,
      'tool': !0x0,
      'scaleWithSize': !0x1,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x1,
      'receiveShadow': !0x1
    },
    'FLAG': {
      'notTechnical': !0x0,
      'notStyleable': !0x0,
      'defaultSize': [bEA['flagZoneS'], bEA['flagZoneH'], bEA['flagZoneS']],
      'scalable': !0x1,
      'tool': !0x0,
      'scaleWithSize': !0x1,
      'lineCol': 0xc800ff,
      'teamable': !0x0,
      'noDefault': !0x0,
      'genGeo': async (bEw, bEx) => function(bEw, bEx) {
        bEH(bEw, 'models/crystal_0.obj', 'textures/crystal_0.png', bEA['flagScale'], 0xffffff, bEA['flagOff'] / 0x2);
        var bEy = bEB['generateCube']([0x1, 0x1, 0x0, 0x0, 0x1, 0x1], ...bEw['size'], {
          'scale': 0x1,
          'amb': bEx,
          'useScale': !0x0,
          'transparent': !0x0,
          'depthWrite': !0x1,
          'side': 0x2
        });
        return bEy = new bEz['BufferGeometry']()['fromGeometry'](bEy);
      }(bEw, bEx),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x1,
      'receiveShadow': !0x1
    },
    'GATE': {
      'canInterface': !0x0,
      'canUndo': !0x0,
      'interact': !0x0,
      'customScore': !0x0,
      'movingTexture': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x0,
      'forceCollision': !0x0,
      'editAmb': !0x0,
      'scaleWithSize': !0x1,
      'editColor': !0x0,
      'editEmissive': !0x0,
      'editOpac': !0x0,
      'lineCol': 0xff00ff,
      'texturable': !0x0,
      'tool2': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0,
      'complex': !0x0,
      'hasBorder': !0x0
    },
    'TRIGGER': {
      'canInterface': !0x0,
      'canTargetInterface': !0x0,
      'hasHealth': !0x0,
      'movingTexture': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x0,
      'forceCollision': !0x0,
      'editAmb': !0x0,
      'scaleWithSize': !0x1,
      'editColor': !0x0,
      'editEmissive': !0x0,
      'editOpac': !0x0,
      'lineCol': 0xff00ff,
      'texturable': !0x0,
      'tool2': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0,
      'complex': !0x0
    },
    'SIGN': {
      'notTechnical': !0x0,
      'movingTexture': !0x0,
      'hasText': !0x0,
      'defaultSize': [0x28, 0.01, 0xa],
      'forceCollision': !0x0,
      'lineCol': 0xffff00,
      'scalable': !0x0,
      'scaleWithSize': !0x0,
      'hideBoundingBox': !0x1,
      'tool': !0x0,
      'genGeo': async bEw => function(bEw, bEx, bEy, bEA, bEB, bEC, bED) {
        var bEE = new bEz['Geometry']();
        return bF4(bEE, 0x0, 0x0, 0x0, bEB / 0x2, bED / 0x2), bEE;
      }(bEw, 0x0, 0x0, 0x0, ...bEw['size']),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0,
      'doubleSide': !0x0
    },
    'DEPOSIT_BOX': {
      'canInterface': !0x0,
      'movingTexture': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x0,
      'forceCollision': !0x0,
      'editAmb': !0x0,
      'scaleWithSize': !0x1,
      'editColor': !0x0,
      'editEmissive': !0x0,
      'editOpac': !0x0,
      'lineCol': 0xff00ff,
      'texturable': !0x0,
      'tool2': !0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0,
      'complex': !0x0,
      'hasBorder': !0x0
    },
    'LIGHT_CONE': {
      'notTechnical': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x0,
      'noCollision': !0x0,
      'scaleWithSize': !0x1,
      'editOpac': !0x0,
      'editColor': !0x0,
      'lineCol': 0xff00ff,
      'tool2': !0x0,
      'genGeo': async (bEw, bEx) => function(bEw, bEx, bEy) {
        var bEA = bEB['generateCone'](bEw, bEx, bEy, {
          'scale': 0x1,
          'useScale': !0x0
        });
        return bEA = new bEz['BufferGeometry']()['fromGeometry'](bEA);
      }(...bEw['size'], bEx),
      'stepSrc': 'a',
      'dummy': !0x1,
      'castShadow': !0x0,
      'receiveShadow': !0x0,
      'complex': !0x0,
      'doubleSide': !0x0,
      'blending': bEz['AdditiveBlending']
    },
    'PLACEHOLDER': {
      'notStyleable': !0x0,
      'defaultSize': [0xa, 0xa, 0xa],
      'scalable': !0x0,
      'noTexture': !0x0,
      'noExport': !0x0,
      'tool': !0x0,
      'opacity': 0.1,
      'lineCol': 0x0,
      'genGeo': async (bEw, bEx) => bEY(...bEw['size'], bEx),
      'stepSrc': 'a'
    }
  }, bEw['exports']['texturePrefabs'] = {
    'WALL': {
      'src': 'wall_0',
      'filter': bEz['NearestFilter']
    },
    'DIRT': {
      'src': 'dirt_0',
      'filter': bEz['NearestFilter']
    },
    'FLOOR': {
      'src': 'floor_0',
      'filter': bEz['NearestFilter']
    },
    'GRID': {
      'src': 'grid_0',
      'filter': bEz['NearestFilter']
    },
    'GREY': {
      'src': 'grey_0',
      'filter': bEz['NearestFilter']
    },
    'DEFAULT': {
      'src': 'default',
      'filter': bEz['NearestFilter']
    },
    'ROOF': {
      'src': 'roof_0',
      'filter': bEz['NearestFilter']
    },
    'FLAG': {
      'src': 'flag_0',
      'filter': bEz['NearestFilter']
    },
    'CHECK': {
      'src': 'check_0',
      'filter': bEz['NearestFilter']
    },
    'GRASS': {
      'src': 'grass_1',
      'filter': bEz['NearestFilter']
    },
    'LINES': {
      'src': 'lines_0',
      'filter': bEz['NearestFilter']
    },
    'BRICK': {
      'src': 'brick_0',
      'filter': bEz['NearestFilter']
    },
    'LINK': {
      'src': 'link_0',
      'trans': !0x0,
      'filter': bEz['NearestFilter']
    }
  };
  let bHj = bEw => ({
    'src': bEw,
    'filter': bEz['NearestFilter']
  });
  bEw['exports']['loadTexturePrefab'] = function(bEx, bEy = null) {
    if (bEy['prefab']['hasText']) return (bEw => {
      var bEx = new bEz['Texture'](bEw);
      return bEx['wrapS'] = bEz['RepeatWrapping'], bEx['wrapT'] = bEz['RepeatWrapping'], bEx['repeat']['set'](0x1, 0x1), bEx['minFilter'] = bEz['NearestFilter'], bEx['magFilter'] = bEz['NearestFilter'], bEx['needsUpdate'] = !0x0, bEx;
    })(bEC['createCanvasText'](bEy['size'][0x0], bEy['size'][0x2], bEy['text'] || 'Hello\x20World', bEy['fsize'] || 0xa, bEy['fcolor'] || '#000', bEy['bcolor'] || '#fff', !bEy['backVisible'], bEy['tAlign'] || 0x0));
    let bEB = 'BILLBOARD' == bEy['objType'] ? bHj('pubs/b_' + (bEy['poster'] || bEC['randInt'](0x1, bEA['billboardCnt']))) : bEw['exports']['texturePrefabs'][bEx];
    return bEB = 'FLAG' == bEy['objType'] ? bHj('zone_r') : bEB, bEB = 'LIGHT_CONE' == bEy['objType'] ? bHj('lightcone_0') : bEB, 'default' == (bEB = 'SPECTATE_CAM' == bEy['objType'] ? bHj('spectatecam_0') : bEB)['src'] ? void 0x0 : bEE['load'](bEC['assetsUrl']('/textures/' + bEB['src'] + '.png'), bEw => {
      bEw['wrapS'] = bEz['RepeatWrapping'], bEw['wrapT'] = bEz['RepeatWrapping'], bEw['repeat']['set'](0x1, 0x1), bEw['minFilter'] = bEB['filter'], bEw['magFilter'] = bEB['filter'], bEw['needsUpdate'] = !0x0;
    });
  };
}, function(bHr, bHs, bHt) {
  bHs['encode'] = bHt(0x1a)['encode'], bHs['decode'] = bHt(0x1f)['decode'], bHs['Encoder'] = bHt(0x33)['Encoder'], bHs['Decoder'] = bHt(0x34)['Decoder'], bHs['createCodec'] = bHt(0x35)['createCodec'], bHs['codec'] = bHt(0x36)['codec'];
}, function(bHu, bHv, bHw) {
  (function(bHv) {
    function bHw(bHu) {
      return bHu && bHu['isBuffer'] && bHu;
    }
    bHu['exports'] = bHw(void 0x0 !== bHv && bHv) || bHw(this['Buffer']) || bHw('undefined' != typeof window && window['Buffer']) || this['Buffer'];
  } ['call'](this, bHw(0x1c)['Buffer']));
}, function(bHA, bHB, bHC) {
  'use strict';
  bHB['byteLength'] = function(bHA) {
    var bHB = bI7(bHA),
      bHC = bHB[0x0],
      bHG = bHB[0x1];
    return 0x3 * (bHC + bHG) / 0x4 - bHG;
  }, bHB['toByteArray'] = function(bHA) {
    for (var bHB, bHC = bI7(bHA), bHK = bHC[0x0], bHL = bHC[0x1], bHM = new bI3(function(bHA, bHB, bHC) {
        return 0x3 * (bHB + bHC) / 0x4 - bHC;
      }(0x0, bHK, bHL)), bHN = 0x0, bHO = 0x0 < bHL ? bHK - 0x4 : bHK, bHP = 0x0; bHP < bHO; bHP += 0x4) bHB = bI2[bHA['charCodeAt'](bHP)] << 0x12 | bI2[bHA['charCodeAt'](bHP + 0x1)] << 0xc | bI2[bHA['charCodeAt'](bHP + 0x2)] << 0x6 | bI2[bHA['charCodeAt'](bHP + 0x3)], bHM[bHN++] = 0xff & bHB >> 0x10, bHM[bHN++] = 0xff & bHB >> 0x8, bHM[bHN++] = 0xff & bHB;
    return 0x2 === bHL && (bHB = bI2[bHA['charCodeAt'](bHP)] << 0x2 | bI2[bHA['charCodeAt'](bHP + 0x1)] >> 0x4, bHM[bHN++] = 0xff & bHB), 0x1 === bHL && (bHB = bI2[bHA['charCodeAt'](bHP)] << 0xa | bI2[bHA['charCodeAt'](bHP + 0x1)] << 0x4 | bI2[bHA['charCodeAt'](bHP + 0x2)] >> 0x2, bHM[bHN++] = 0xff & bHB >> 0x8, bHM[bHN++] = 0xff & bHB), bHM;
  }, bHB['fromByteArray'] = function(bHA) {
    for (var bHB, bHC = bHA['length'], bHW = bHC % 0x3, bHX = [], bHY = 0x3fff, bHZ = 0x0, bI0 = bHC - bHW; bHZ < bI0; bHZ += bHY) bHX['push'](bId(bHA, bHZ, bHZ + bHY > bI0 ? bI0 : bHZ + bHY));
    return 0x1 === bHW ? (bHB = bHA[bHC - 0x1], bHX['push'](bI1[bHB >> 0x2] + bI1[0x3f & bHB << 0x4] + '==')) : 0x2 === bHW && (bHB = (bHA[bHC - 0x2] << 0x8) + bHA[bHC - 0x1], bHX['push'](bI1[bHB >> 0xa] + bI1[0x3f & bHB >> 0x4] + bI1[0x3f & bHB << 0x2] + '=')), bHX['join']('');
  };
  for (var bI1 = [], bI2 = [], bI3 = 'undefined' == typeof Uint8Array ? Array : Uint8Array, bI4 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', bI5 = 0x0, bI6 = bI4['length']; bI5 < bI6; ++bI5) bI1[bI5] = bI4[bI5], bI2[bI4['charCodeAt'](bI5)] = bI5;

  function bI7(bHA) {
    var bHB = bHA['length'];
    if (0x0 < bHB % 0x4) throw new Error('Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204');
    var bHC = bHA['indexOf']('=');
    return -0x1 === bHC && (bHC = bHB), [bHC, bHC === bHB ? 0x0 : 0x4 - bHC % 0x4];
  }

  function bIb(bHA) {
    return bI1[0x3f & bHA >> 0x12] + bI1[0x3f & bHA >> 0xc] + bI1[0x3f & bHA >> 0x6] + bI1[0x3f & bHA];
  }

  function bId(bHA, bHB, bHC) {
    for (var bI1, bI2 = [], bI3 = bHB; bI3 < bHC; bI3 += 0x3) bI1 = (0xff0000 & bHA[bI3] << 0x10) + (0xff00 & bHA[bI3 + 0x1] << 0x8) + (0xff & bHA[bI3 + 0x2]), bI2['push'](bIb(bI1));
    return bI2['join']('');
  }
  bI2[0x2d] = 0x3e, bI2[0x5f] = 0x3f;
}, function(bIk, bIl, bIm) {
  var bIn = bIm(0x3);

  function bIo(bIk) {
    return Array(bIk);
  }(bIl = bIk['exports'] = bIo(0x0))['alloc'] = bIo, bIl['concat'] = bIn['concat'], bIl['from'] = function(bIk) {
    if (!bIn['isBuffer'](bIk) && bIn['isView'](bIk)) bIk = bIn['Uint8Array']['from'](bIk);
    else if (bIn['isArrayBuffer'](bIk)) bIk = new Uint8Array(bIk);
    else {
      if ('string' == typeof bIk) return bIn['from']['call'](bIl, bIk);
      if ('number' == typeof bIk) throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
    }
    return Array['prototype']['slice']['call'](bIk);
  };
}, function(bIr, bIs, bIt) {
  var bIu = bIt(0x3),
    bIv = bIu['global'];

  function bIw(bIr) {
    return new bIv(bIr);
  }(bIs = bIr['exports'] = bIu['hasBuffer'] ? bIw(0x0) : [])['alloc'] = bIu['hasBuffer'] && bIv['alloc'] || bIw, bIs['concat'] = bIu['concat'], bIs['from'] = function(bIr) {
    if (!bIu['isBuffer'](bIr) && bIu['isView'](bIr)) bIr = bIu['Uint8Array']['from'](bIr);
    else if (bIu['isArrayBuffer'](bIr)) bIr = new Uint8Array(bIr);
    else {
      if ('string' == typeof bIr) return bIu['from']['call'](bIs, bIr);
      if ('number' == typeof bIr) throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
    }
    return bIv['from'] && 0x1 !== bIv['from']['length'] ? bIv['from'](bIr) : new bIv(bIr);
  };
}, function(bIz, bIA, bIB) {
  var bIC = bIB(0x3);

  function bID(bIz) {
    return new Uint8Array(bIz);
  }(bIA = bIz['exports'] = bIC['hasArrayBuffer'] ? bID(0x0) : [])['alloc'] = bID, bIA['concat'] = bIC['concat'], bIA['from'] = function(bIz) {
    if (bIC['isView'](bIz)) {
      var bIB = bIz['byteOffset'],
        bID = bIz['byteLength'];
      (bIz = bIz['buffer'])['byteLength'] !== bID && (bIz['slice'] ? bIz = bIz['slice'](bIB, bIB + bID) : (bIz = new Uint8Array(bIz))['byteLength'] !== bID && (bIz = Array['prototype']['slice']['call'](bIz, bIB, bIB + bID)));
    } else {
      if ('string' == typeof bIz) return bIC['from']['call'](bIA, bIz);
      if ('number' == typeof bIz) throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
    }
    return new Uint8Array(bIz);
  };
}, function(bII, bIJ) {
  bIJ['copy'] = function(bII, bIJ, bIM, bIN) {
    var bIO;
    bIM || (bIM = 0x0), bIN || 0x0 === bIN || (bIN = this['length']), bIJ || (bIJ = 0x0);
    var bIP = bIN - bIM;
    if (bII === this && bIM < bIJ && bIJ < bIN)
      for (bIO = bIP - 0x1; 0x0 <= bIO; bIO--) bII[bIO + bIJ] = this[bIO + bIM];
    else
      for (bIO = 0x0; bIO < bIP; bIO++) bII[bIO + bIJ] = this[bIO + bIM];
    return bIP;
  }, bIJ['toString'] = function(bII, bIJ, bIS) {
    var bIT = this,
      bIU = 0x0 | bIJ;
    bIS || (bIS = bIT['length']);
    for (var bIV = '', bIW = 0x0; bIU < bIS;) 0x80 > (bIW = bIT[bIU++]) ? bIV += String['fromCharCode'](bIW) : (0xc0 == (0xe0 & bIW) ? bIW = (0x1f & bIW) << 0x6 | 0x3f & bIT[bIU++] : 0xe0 == (0xf0 & bIW) ? bIW = (0xf & bIW) << 0xc | (0x3f & bIT[bIU++]) << 0x6 | 0x3f & bIT[bIU++] : 0xf0 == (0xf8 & bIW) && (bIW = (0x7 & bIW) << 0x12 | (0x3f & bIT[bIU++]) << 0xc | (0x3f & bIT[bIU++]) << 0x6 | 0x3f & bIT[bIU++]), 0x10000 <= bIW ? (bIW -= 0x10000, bIV += String['fromCharCode'](0xd800 + (bIW >>> 0xa), 0xdc00 + (0x3ff & bIW))) : bIV += String['fromCharCode'](bIW));
    return bIV;
  }, bIJ['write'] = function(bII, bIJ) {
    for (var bIZ = this, bJ0 = bIJ || (bIJ |= 0x0), bJ1 = bII['length'], bJ2 = 0x0, bJ3 = 0x0; bJ3 < bJ1;) 0x80 > (bJ2 = bII['charCodeAt'](bJ3++)) ? bIZ[bJ0++] = bJ2 : 0x800 > bJ2 ? (bIZ[bJ0++] = 0xc0 | bJ2 >>> 0x6, bIZ[bJ0++] = 0x80 | 0x3f & bJ2) : 0xd800 > bJ2 || 0xdfff < bJ2 ? (bIZ[bJ0++] = 0xe0 | bJ2 >>> 0xc, bIZ[bJ0++] = 0x80 | 0x3f & bJ2 >>> 0x6, bIZ[bJ0++] = 0x80 | 0x3f & bJ2) : (bJ2 = 0x10000 + (bJ2 - 0xd800 << 0xa | bII['charCodeAt'](bJ3++) - 0xdc00), bIZ[bJ0++] = 0xf0 | bJ2 >>> 0x12, bIZ[bJ0++] = 0x80 | 0x3f & bJ2 >>> 0xc, bIZ[bJ0++] = 0x80 | 0x3f & bJ2 >>> 0x6, bIZ[bJ0++] = 0x80 | 0x3f & bJ2);
    return bJ0 - bIJ;
  };
}, function(bJ4, bJ5, bJ6) {
  bJ5['setExtPackers'] = function(bJ4) {
    bJ4['addExtPacker'](0xe, Error, [bJk, bJd]), bJ4['addExtPacker'](0x1, EvalError, [bJk, bJd]), bJ4['addExtPacker'](0x2, RangeError, [bJk, bJd]), bJ4['addExtPacker'](0x3, ReferenceError, [bJk, bJd]), bJ4['addExtPacker'](0x4, SyntaxError, [bJk, bJd]), bJ4['addExtPacker'](0x5, TypeError, [bJk, bJd]), bJ4['addExtPacker'](0x6, URIError, [bJk, bJd]), bJ4['addExtPacker'](0xa, RegExp, [bJh, bJd]), bJ4['addExtPacker'](0xb, Boolean, [bJf, bJd]), bJ4['addExtPacker'](0xc, String, [bJf, bJd]), bJ4['addExtPacker'](0xd, Date, [Number, bJd]), bJ4['addExtPacker'](0xf, Number, [bJf, bJd]), 'undefined' != typeof Uint8Array && (bJ4['addExtPacker'](0x11, Int8Array, bJb), bJ4['addExtPacker'](0x12, Uint8Array, bJb), bJ4['addExtPacker'](0x13, Int16Array, bJb), bJ4['addExtPacker'](0x14, Uint16Array, bJb), bJ4['addExtPacker'](0x15, Int32Array, bJb), bJ4['addExtPacker'](0x16, Uint32Array, bJb), bJ4['addExtPacker'](0x17, Float32Array, bJb), 'undefined' != typeof Float64Array && bJ4['addExtPacker'](0x18, Float64Array, bJb), 'undefined' != typeof Uint8ClampedArray && bJ4['addExtPacker'](0x19, Uint8ClampedArray, bJb), bJ4['addExtPacker'](0x1a, ArrayBuffer, bJb), bJ4['addExtPacker'](0x1d, DataView, bJb)), bJ9['hasBuffer'] && bJ4['addExtPacker'](0x1b, bJa, bJ9['from']);
  };
  var bJ8, bJ9 = bJ6(0x3),
    bJa = bJ9['global'],
    bJb = bJ9['Uint8Array']['from'],
    bJc = {
      'name': 0x1,
      'message': 0x1,
      'stack': 0x1,
      'columnNumber': 0x1,
      'fileName': 0x1,
      'lineNumber': 0x1
    };

  function bJd(bJ4) {
    return bJ8 || (bJ8 = bJ6(0x1a)['encode']), bJ8(bJ4);
  }

  function bJf(bJ4) {
    return bJ4['valueOf']();
  }

  function bJh(bJ4) {
    (bJ4 = RegExp['prototype']['toString']['call'](bJ4)['split']('/'))['shift']();
    var bJ5 = [bJ4['pop']()];
    return bJ5['unshift'](bJ4['join']('/')), bJ5;
  }

  function bJk(bJ4) {
    var bJ5 = {};
    for (var bJ6 in bJc) bJ5[bJ6] = bJ4[bJ6];
    return bJ5;
  }
}, function(bJo, bJp, bJq) {
  var bJr = bJq(0xb),
    bJs = bJq(0x13),
    bJt = bJs['Uint64BE'],
    bJu = bJs['Int64BE'],
    bJv = bJq(0x3),
    bJw = bJq(0x12),
    bJx = bJq(0x30),
    bJy = bJq(0x1d)['uint8'],
    bJz = bJq(0x10)['ExtBuffer'],
    bJA = 'undefined' != typeof Uint8Array,
    bJB = 'undefined' != typeof Map,
    bJC = [];
  bJC[0x1] = 0xd4, bJC[0x2] = 0xd5, bJC[0x4] = 0xd6, bJC[0x8] = 0xd7, bJC[0x10] = 0xd8, bJp['getWriteType'] = function(bJo) {
    function bJp(bJo, bJp) {
      if (null === bJp) return bJq(bJo, bJp);
      if (bKf(bJp)) return bKg(bJo, bJp);
      if (bJr(bJp)) return function(bJo, bJp) {
        var bJq = bJp['length'];
        bKc[0x10 > bJq ? 0x90 + bJq : 0xffff >= bJq ? 0xdc : 0xdd](bJo, bJq);
        for (var bJr = bJo['codec']['encode'], bJs = 0x0; bJs < bJq; bJs++) bJr(bJo, bJp[bJs]);
      }(bJo, bJp);
      if (bJt['isUint64BE'](bJp)) return function(bJo, bJp) {
        bKc[0xcf](bJo, bJp['toArray']());
      }(bJo, bJp);
      if (bJu['isInt64BE'](bJp)) return function(bJo, bJp) {
        bKc[0xd3](bJo, bJp['toArray']());
      }(bJo, bJp);
      var bJs = bJo['codec']['getExtPacker'](bJp);
      return bJs && (bJp = bJs(bJp)), bJp instanceof bJz ? function(bJo, bJp) {
        var bJq = bJp['buffer'],
          bJr = bJq['length'],
          bJs = bJC[bJr] || (0xff > bJr ? 0xc7 : 0xffff >= bJr ? 0xc8 : 0xc9);
        bKc[bJs](bJo, bJr), bJy[bJp['type']](bJo), bJo['send'](bJq);
      }(bJo, bJp) : void bKh(bJo, bJp);
    }

    function bJq(bJo, bJp) {
      bKc[0xc0](bJo, bJp);
    }

    function bJs(bJo, bJp) {
      var bJq = bJp['length'],
        bJr = 0xff > bJq ? 0xc4 : 0xffff >= bJq ? 0xc5 : 0xc6;
      bKc[bJr](bJo, bJq), bJo['send'](bJp);
    }

    function bK4(bJo, bJp) {
      var bJq = Object['keys'](bJp),
        bJr = bJq['length'],
        bJs = 0x10 > bJr ? 0x80 + bJr : 0xffff >= bJr ? 0xde : 0xdf;
      bKc[bJs](bJo, bJr);
      var bJt = bJo['codec']['encode'];
      bJq['forEach'](function(bJq) {
        bJt(bJo, bJq), bJt(bJo, bJp[bJq]);
      });
    }
    var bKc = bJx['getWriteToken'](bJo),
      bKd = bJo && bJo['useraw'],
      bKe = bJA && bJo && bJo['binarraybuffer'],
      bKf = bKe ? bJv['isArrayBuffer'] : bJv['isBuffer'],
      bKg = bKe ? function(bJo, bJp) {
        bJs(bJo, new Uint8Array(bJp));
      } : bJs,
      bKh = bJB && bJo && bJo['usemap'] ? function(bJo, bJp) {
        if (!(bJp instanceof Map)) return bK4(bJo, bJp);
        var bJq = bJp['size'],
          bJr = 0x10 > bJq ? 0x80 + bJq : 0xffff >= bJq ? 0xde : 0xdf;
        bKc[bJr](bJo, bJq);
        var bJs = bJo['codec']['encode'];
        bJp['forEach'](function(bJp, bJq) {
          bJs(bJo, bJq), bJs(bJo, bJp);
        });
      } : bK4;
    return {
      'boolean': function(bJo, bJp) {
        var bJq = bJp ? 0xc3 : 0xc2;
        bKc[bJq](bJo, bJp);
      },
      'function': bJq,
      'number': function(bJo, bJp) {
        var bJq = 0x0 | bJp;
        bJp === bJq ? bKc[-0x20 <= bJq && 0x7f >= bJq ? 0xff & bJq : 0x0 <= bJq ? 0xff >= bJq ? 0xcc : 0xffff >= bJq ? 0xcd : 0xce : -0x80 <= bJq ? 0xd0 : -0x8000 <= bJq ? 0xd1 : 0xd2](bJo, bJq) : bKc[0xcb](bJo, bJp);
      },
      'object': bKd ? function(bJo, bJq) {
        return bKf(bJq) ? function(bJo, bJp) {
          var bJq = bJp['length'];
          bKc[0x20 > bJq ? 0xa0 + bJq : 0xffff >= bJq ? 0xda : 0xdb](bJo, bJq), bJo['send'](bJp);
        }(bJo, bJq) : void bJp(bJo, bJq);
      } : bJp,
      'string': function(bJo) {
        return function(bJp, bJq) {
          var bJr = bJq['length'],
            bJs = 0x5 + 0x3 * bJr;
          bJp['offset'] = bJp['reserve'](bJs);
          var bJt = bJp['buffer'],
            bJu = bJo(bJr),
            bJv = bJp['offset'] + bJu;
          bJr = bJw['write']['call'](bJt, bJq, bJv);
          var bJx = bJo(bJr);
          if (bJu !== bJx) {
            var bJy = bJv + bJr;
            bJw['copy']['call'](bJt, bJt, bJv + bJx - bJu, bJv, bJy);
          }
          var bJz = 0x1 === bJx ? 0xa0 + bJr : 0x3 >= bJx ? 0xd7 + bJx : 0xdb;
          bKc[bJz](bJp, bJr), bJp['offset'] += bJr;
        };
      }(bKd ? function(bJo) {
        return 0x20 > bJo ? 0x1 : 0xffff >= bJo ? 0x3 : 0x5;
      } : function(bJo) {
        return 0x20 > bJo ? 0x1 : 0xff >= bJo ? 0x2 : 0xffff >= bJo ? 0x3 : 0x5;
      }),
      'symbol': bJq,
      'undefined': bJq
    };
  };
}, function(bKP, bKQ, bKR) {
  var bKS = bKR(0x11),
    bKT = bKR(0x13),
    bKU = bKT['Uint64BE'],
    bKV = bKT['Int64BE'],
    bKW = bKR(0x1d)['uint8'],
    bKX = bKR(0x3),
    bKY = bKX['global'],
    bKZ = bKX['hasBuffer'] && 'TYPED_ARRAY_SUPPORT' in bKY && !bKY['TYPED_ARRAY_SUPPORT'],
    bL0 = bKX['hasBuffer'] && bKY['prototype'] || {};

  function bL1() {
    var bKP = bKW['slice']();
    return bKP[0xc4] = bL3(0xc4), bKP[0xc5] = bL9(0xc5), bKP[0xc6] = bLf(0xc6), bKP[0xc7] = bL3(0xc7), bKP[0xc8] = bL9(0xc8), bKP[0xc9] = bLf(0xc9), bKP[0xca] = bLl(0xca, 0x4, bL0['writeFloatBE'] || bLz, !0x0), bKP[0xcb] = bLl(0xcb, 0x8, bL0['writeDoubleBE'] || bLC, !0x0), bKP[0xcc] = bL3(0xcc), bKP[0xcd] = bL9(0xcd), bKP[0xce] = bLf(0xce), bKP[0xcf] = bLl(0xcf, 0x8, bLt), bKP[0xd0] = bL3(0xd0), bKP[0xd1] = bL9(0xd1), bKP[0xd2] = bLf(0xd2), bKP[0xd3] = bLl(0xd3, 0x8, bLw), bKP[0xd9] = bL3(0xd9), bKP[0xda] = bL9(0xda), bKP[0xdb] = bLf(0xdb), bKP[0xdc] = bL9(0xdc), bKP[0xdd] = bLf(0xdd), bKP[0xde] = bL9(0xde), bKP[0xdf] = bLf(0xdf), bKP;
  }

  function bL3(bKP) {
    return function(bKQ, bKR) {
      var bKS = bKQ['reserve'](0x2),
        bKT = bKQ['buffer'];
      bKT[bKS++] = bKP, bKT[bKS] = bKR;
    };
  }

  function bL9(bKP) {
    return function(bKQ, bKR) {
      var bKS = bKQ['reserve'](0x3),
        bKT = bKQ['buffer'];
      bKT[bKS++] = bKP, bKT[bKS++] = bKR >>> 0x8, bKT[bKS] = bKR;
    };
  }

  function bLf(bKP) {
    return function(bKQ, bKR) {
      var bKS = bKQ['reserve'](0x5),
        bKT = bKQ['buffer'];
      bKT[bKS++] = bKP, bKT[bKS++] = bKR >>> 0x18, bKT[bKS++] = bKR >>> 0x10, bKT[bKS++] = bKR >>> 0x8, bKT[bKS] = bKR;
    };
  }

  function bLl(bKP, bKQ, bKR, bKS) {
    return function(bKT, bKU) {
      var bKV = bKT['reserve'](bKQ + 0x1);
      bKT['buffer'][bKV++] = bKP, bKR['call'](bKT['buffer'], bKU, bKV, bKS);
    };
  }

  function bLt(bKP, bKQ) {
    new bKU(this, bKQ, bKP);
  }

  function bLw(bKP, bKQ) {
    new bKV(this, bKQ, bKP);
  }

  function bLz(bKP, bKQ) {
    bKS['write'](this, bKP, bKQ, !0x1, 0x17, 0x4);
  }

  function bLC(bKP, bKQ) {
    bKS['write'](this, bKP, bKQ, !0x1, 0x34, 0x8);
  }
  bKQ['getWriteToken'] = function(bKP) {
    return bKP && bKP['uint8array'] ? function() {
      var bKP = bL1();
      return bKP[0xca] = bLl(0xca, 0x4, bLz), bKP[0xcb] = bLl(0xcb, 0x8, bLC), bKP;
    }() : bKZ || bKX['hasBuffer'] && bKP && bKP['safe'] ? function() {
      var bKP = bKW['slice']();
      return bKP[0xc4] = bLl(0xc4, 0x1, bKY['prototype']['writeUInt8']), bKP[0xc5] = bLl(0xc5, 0x2, bKY['prototype']['writeUInt16BE']), bKP[0xc6] = bLl(0xc6, 0x4, bKY['prototype']['writeUInt32BE']), bKP[0xc7] = bLl(0xc7, 0x1, bKY['prototype']['writeUInt8']), bKP[0xc8] = bLl(0xc8, 0x2, bKY['prototype']['writeUInt16BE']), bKP[0xc9] = bLl(0xc9, 0x4, bKY['prototype']['writeUInt32BE']), bKP[0xca] = bLl(0xca, 0x4, bKY['prototype']['writeFloatBE']), bKP[0xcb] = bLl(0xcb, 0x8, bKY['prototype']['writeDoubleBE']), bKP[0xcc] = bLl(0xcc, 0x1, bKY['prototype']['writeUInt8']), bKP[0xcd] = bLl(0xcd, 0x2, bKY['prototype']['writeUInt16BE']), bKP[0xce] = bLl(0xce, 0x4, bKY['prototype']['writeUInt32BE']), bKP[0xcf] = bLl(0xcf, 0x8, bLt), bKP[0xd0] = bLl(0xd0, 0x1, bKY['prototype']['writeInt8']), bKP[0xd1] = bLl(0xd1, 0x2, bKY['prototype']['writeInt16BE']), bKP[0xd2] = bLl(0xd2, 0x4, bKY['prototype']['writeInt32BE']), bKP[0xd3] = bLl(0xd3, 0x8, bLw), bKP[0xd9] = bLl(0xd9, 0x1, bKY['prototype']['writeUInt8']), bKP[0xda] = bLl(0xda, 0x2, bKY['prototype']['writeUInt16BE']), bKP[0xdb] = bLl(0xdb, 0x4, bKY['prototype']['writeUInt32BE']), bKP[0xdc] = bLl(0xdc, 0x2, bKY['prototype']['writeUInt16BE']), bKP[0xdd] = bLl(0xdd, 0x4, bKY['prototype']['writeUInt32BE']), bKP[0xde] = bLl(0xde, 0x2, bKY['prototype']['writeUInt16BE']), bKP[0xdf] = bLl(0xdf, 0x4, bKY['prototype']['writeUInt32BE']), bKP;
    }() : bL1();
  };
}, function(bLI, bLJ, bLK) {
  bLJ['setExtUnpackers'] = function(bLI) {
    bLI['addExtUnpacker'](0xe, [bLQ, bLU(Error)]), bLI['addExtUnpacker'](0x1, [bLQ, bLU(EvalError)]), bLI['addExtUnpacker'](0x2, [bLQ, bLU(RangeError)]), bLI['addExtUnpacker'](0x3, [bLQ, bLU(ReferenceError)]), bLI['addExtUnpacker'](0x4, [bLQ, bLU(SyntaxError)]), bLI['addExtUnpacker'](0x5, [bLQ, bLU(TypeError)]), bLI['addExtUnpacker'](0x6, [bLQ, bLU(URIError)]), bLI['addExtUnpacker'](0xa, [bLQ, bLS]), bLI['addExtUnpacker'](0xb, [bLQ, bLZ(Boolean)]), bLI['addExtUnpacker'](0xc, [bLQ, bLZ(String)]), bLI['addExtUnpacker'](0xd, [bLQ, bLZ(Date)]), bLI['addExtUnpacker'](0xf, [bLQ, bLZ(Number)]), 'undefined' != typeof Uint8Array && (bLI['addExtUnpacker'](0x11, bLZ(Int8Array)), bLI['addExtUnpacker'](0x12, bLZ(Uint8Array)), bLI['addExtUnpacker'](0x13, [bM2, bLZ(Int16Array)]), bLI['addExtUnpacker'](0x14, [bM2, bLZ(Uint16Array)]), bLI['addExtUnpacker'](0x15, [bM2, bLZ(Int32Array)]), bLI['addExtUnpacker'](0x16, [bM2, bLZ(Uint32Array)]), bLI['addExtUnpacker'](0x17, [bM2, bLZ(Float32Array)]), 'undefined' != typeof Float64Array && bLI['addExtUnpacker'](0x18, [bM2, bLZ(Float64Array)]), 'undefined' != typeof Uint8ClampedArray && bLI['addExtUnpacker'](0x19, bLZ(Uint8ClampedArray)), bLI['addExtUnpacker'](0x1a, bM2), bLI['addExtUnpacker'](0x1d, [bM2, bLZ(DataView)])), bLN['hasBuffer'] && bLI['addExtUnpacker'](0x1b, bLZ(bLO));
  };
  var bLM, bLN = bLK(0x3),
    bLO = bLN['global'],
    bLP = {
      'name': 0x1,
      'message': 0x1,
      'stack': 0x1,
      'columnNumber': 0x1,
      'fileName': 0x1,
      'lineNumber': 0x1
    };

  function bLQ(bLI) {
    return bLM || (bLM = bLK(0x1f)['decode']), bLM(bLI);
  }

  function bLS(bLI) {
    return RegExp['apply'](null, bLI);
  }

  function bLU(bLI) {
    return function(bLJ) {
      var bLK = new bLI();
      for (var bLM in bLP) bLK[bLM] = bLJ[bLM];
      return bLK;
    };
  }

  function bLZ(bLI) {
    return function(bLJ) {
      return new bLI(bLJ);
    };
  }

  function bM2(bLI) {
    return new Uint8Array(bLI)['buffer'];
  }
}, function(bM4, bM5, bM6) {
  var bM7 = bM6(0x21);

  function bM8(bM4) {
    var bM5, bM6 = Array(0x100);
    for (bM5 = 0x0; 0x7f >= bM5; bM5++) bM6[bM5] = bMc(bM5);
    for (bM5 = 0x80; 0x8f >= bM5; bM5++) bM6[bM5] = bMj(bM5 - 0x80, bM4['map']);
    for (bM5 = 0x90; 0x9f >= bM5; bM5++) bM6[bM5] = bMj(bM5 - 0x90, bM4['array']);
    for (bM5 = 0xa0; 0xbf >= bM5; bM5++) bM6[bM5] = bMj(bM5 - 0xa0, bM4['str']);
    for (bM6[0xc0] = bMc(null), bM6[0xc1] = null, bM6[0xc2] = bMc(!0x1), bM6[0xc3] = bMc(!0x0), bM6[0xc4] = bMe(bM4['uint8'], bM4['bin']), bM6[0xc5] = bMe(bM4['uint16'], bM4['bin']), bM6[0xc6] = bMe(bM4['uint32'], bM4['bin']), bM6[0xc7] = bMe(bM4['uint8'], bM4['ext']), bM6[0xc8] = bMe(bM4['uint16'], bM4['ext']), bM6[0xc9] = bMe(bM4['uint32'], bM4['ext']), bM6[0xca] = bM4['float32'], bM6[0xcb] = bM4['float64'], bM6[0xcc] = bM4['uint8'], bM6[0xcd] = bM4['uint16'], bM6[0xce] = bM4['uint32'], bM6[0xcf] = bM4['uint64'], bM6[0xd0] = bM4['int8'], bM6[0xd1] = bM4['int16'], bM6[0xd2] = bM4['int32'], bM6[0xd3] = bM4['int64'], bM6[0xd4] = bMj(0x1, bM4['ext']), bM6[0xd5] = bMj(0x2, bM4['ext']), bM6[0xd6] = bMj(0x4, bM4['ext']), bM6[0xd7] = bMj(0x8, bM4['ext']), bM6[0xd8] = bMj(0x10, bM4['ext']), bM6[0xd9] = bMe(bM4['uint8'], bM4['str']), bM6[0xda] = bMe(bM4['uint16'], bM4['str']), bM6[0xdb] = bMe(bM4['uint32'], bM4['str']), bM6[0xdc] = bMe(bM4['uint16'], bM4['array']), bM6[0xdd] = bMe(bM4['uint32'], bM4['array']), bM6[0xde] = bMe(bM4['uint16'], bM4['map']), bM6[0xdf] = bMe(bM4['uint32'], bM4['map']), bM5 = 0xe0; 0xff >= bM5; bM5++) bM6[bM5] = bMc(bM5 - 0x100);
    return bM6;
  }

  function bMc(bM4) {
    return function() {
      return bM4;
    };
  }

  function bMe(bM4, bM5) {
    return function(bM6) {
      var bM7 = bM4(bM6);
      return bM5(bM6, bM7);
    };
  }

  function bMj(bM4, bM5) {
    return function(bM6) {
      return bM5(bM6, bM4);
    };
  }
  bM5['getReadToken'] = function(bM4) {
    var bM5 = bM7['getReadFormat'](bM4);
    return bM4 && bM4['useraw'] ? function(bM4) {
      var bM5, bM6 = bM8(bM4)['slice']();
      for (bM6[0xd9] = bM6[0xc4], bM6[0xda] = bM6[0xc5], bM6[0xdb] = bM6[0xc6], bM5 = 0xa0; 0xbf >= bM5; bM5++) bM6[bM5] = bMj(bM5 - 0xa0, bM4['bin']);
      return bM6;
    }(bM5) : bM8(bM5);
  };
}, function(bMs, bMt, bMu) {
  bMt['Encoder'] = bMx;
  var bMv = bMu(0x22),
    bMw = bMu(0x1b)['EncodeBuffer'];

  function bMx(bMs) {
    return this instanceof bMx ? void bMw['call'](this, bMs) : new bMx(bMs);
  }
  bMx['prototype'] = new bMw(), bMv['mixin'](bMx['prototype']), bMx['prototype']['encode'] = function(bMs) {
    this['write'](bMs), this['emit']('data', this['read']());
  }, bMx['prototype']['end'] = function(bMs) {
    arguments['length'] && this['encode'](bMs), this['flush'](), this['emit']('end');
  };
}, function(bMB, bMC, bMD) {
  bMC['Decoder'] = bMG;
  var bME = bMD(0x22),
    bMF = bMD(0x20)['DecodeBuffer'];

  function bMG(bMB) {
    return this instanceof bMG ? void bMF['call'](this, bMB) : new bMG(bMB);
  }
  bMG['prototype'] = new bMF(), bME['mixin'](bMG['prototype']), bMG['prototype']['decode'] = function(bMB) {
    arguments['length'] && this['write'](bMB), this['flush']();
  }, bMG['prototype']['push'] = function(bMB) {
    this['emit']('data', bMB);
  }, bMG['prototype']['end'] = function(bMB) {
    this['decode'](bMB), this['emit']('end');
  };
}, function(bML, bMM, bMN) {
  bMN(0x14), bMN(0xf), bMM['createCodec'] = bMN(0xc)['createCodec'];
}, function(bMO, bMP, bMQ) {
  bMQ(0x14), bMQ(0xf), bMP['codec'] = {
    'preset': bMQ(0xc)['preset']
  };
}, function(bMR, bMS, bMT) {
  const bMU = bMT(0x7),
    bMV = bMT(0x3b),
    bMW = bMT(0x3c),
    bMX = bMT(0x17),
    bMY = bMT(0x25);
  var bMZ = [{
      'id': 'ffa',
      'name': 'Free\x20for\x20All',
      'alias': 'ffa'
    }, {
      'id': 'tdm',
      'name': 'Team\x20Deathmatch',
      'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists', 'reward'],
      'alias': 'tdm',
      'teams': !0x0
    }, {
      'id': 'point',
      'name': 'Hardpoint',
      'alias': 'point',
      'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists', 'reward'],
      'objective': !0x0,
      'teams': !0x0,
      'gameStart': function(bMR) {
        bMR['activeObjective'] = -0x1, bMR['nextObjective'](null, !0x0);
      }
    }, {
      'id': 'ctf',
      'name': 'Capture\x20the\x20Flag',
      'alias': 'ctf',
      'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'caps', 'reward'],
      'onKill': function(bMR, bMS, bMT) {
        bMR['dropFlag'](bMT['flag']);
      },
      'flags': !0x0,
      'teams': !0x0,
      'noScoreC': !0x0
    }, {
      'id': 'bhop',
      'name': 'Parkour',
      'endStats': ['sid', 'name', 'score', 'deaths'],
      'alias': 'bhop',
      'noKick': !0x0,
      'friendly': !0x0
    }, {
      'id': 'hide',
      'name': 'Hide\x20&\x20Seek',
      'alias': 'hide',
      'endStats': ['sid', 'name', 'score', 'found', 'reward'],
      'winCondition': function(bMR) {
        for (var bMS = 0x0, bMT = 0x0; bMT < bMR['players']['list']['length']; ++bMT) bMR['players']['list'][bMT]['active'] && 'hide' == bMR['players']['list'][bMT]['team'] && bMS++;
        return 0x0 < bMS ? 'hide' : 'seek';
      },
      'condition': [function(bMR) {
        for (var bMS = 0x0, bMT = 0x0; bMT < bMR['players']['list']['length']; ++bMT) bMR['players']['list'][bMT]['active'] && 'hide' == bMR['players']['list'][bMT]['team'] && bMS++;
        return 0x0 < bMS;
      }],
      'minPlayers': 0x2,
      'waitTimers': [{
        'time': 0x2710,
        'msg': 'picking\x20seeker\x20in\x20',
        'trigger': function(bMR) {
          bMR['pickSeeker']();
        }
      }, {
        'time': 0xafc8,
        'msg': 'releasing\x20seeker\x20in\x20',
        'trigger': function(bMR) {
          bMR['releaseSeeker']();
        }
      }],
      'spdMlt': {
        'hide': 0.8
      },
      'killConv': !0x0,
      'noKick': !0x0,
      'showTeam': !0x0,
      'startTeam': 'hide',
      'convTeam': 'seek',
      'convWord': 'found',
      'noWeap': !0x0,
      'friendly': !0x0,
      'hideNames': !0x0
    }, {
      'id': 'infect',
      'name': 'Infected',
      'alias': 'infect',
      'endStats': ['sid', 'name', 'score', 'kills', 'infected', 'reward'],
      'winCondition': function(bMR) {
        for (var bMS = 0x0, bMT = 0x0; bMT < bMR['players']['list']['length']; ++bMT) bMR['players']['list'][bMT]['active'] && 'surv' == bMR['players']['list'][bMT]['team'] && bMS++;
        return 0x0 < bMS ? 'surv' : 'inf';
      },
      'condition': [function(bMR) {
        for (var bMS = 0x0, bMT = 0x0; bMT < bMR['players']['list']['length']; ++bMT) bMR['players']['list'][bMT]['active'] && 'surv' == bMR['players']['list'][bMT]['team'] && bMS++;
        return 0x0 < bMS;
      }],
      'minPlayers': 0x2,
      'waitTimers': [{
        'time': 0x4e20,
        'msg': 'infection\x20in\x20',
        'trigger': function(bMR) {
          bMR['infectRandom']();
        }
      }],
      'teamClass': {
        'inf': 0x9
      },
      'spdMlt': {
        'inf': 1.15
      },
      'killConv': !0x0,
      'noKick': !0x0,
      'startTeam': 'surv',
      'convWord': 'infected',
      'convTeam': 'inf'
    }, {
      'id': 'race',
      'name': 'Race',
      'alias': 'race',
      'endStats': ['sid', 'name', 'score', 'time'],
      'gameTime': 0x0,
      'showMS': !0x0,
      'timed': !0x0,
      'endSort': function(bMR, bMS) {
        return bMR['score'] === bMS['score'] && bMR['gameTimer'] && bMS['gameTimer'] ? bMR['gameTimer'] - bMS['gameTimer'] : bMS['score'] - bMR['score'];
      },
      'gameStart': function(bMR) {
        bMR['lockMove'](!0x0), bMR['targetScore'] = 0x0;
        for (var bMS = 0x0; bMS < bMR['map']['manager']['objects']['length']; ++bMS) bMR['map']['manager']['objects'][bMS]['score'] && (bMR['targetScore'] += bMR['map']['manager']['objects'][bMS]['scoreP']);
      },
      'condition': [function(bMR) {
        for (var bMS = 0x0; bMS < bMR['players']['list']['length']; ++bMS) bMR['players']['list'][bMS]['score'] >= bMR['targetScore'] && !bMR['players']['list'][bMS]['timer'] && (bMR['players']['list'][bMS]['timer'] = bMR['lastTimer'], bMR['players']['list'][bMS]['gameTimer'] = bMR['gameTimer'], bMR['waitTimers'] || (bMR['waitTimers'] = [{
          'time': 0x2710,
          'contTime': !0x0,
          'msg': 'race\x20ends\x20in\x20',
          'trigger': function(bMR) {
            bMR['gameTimer'] = 'skip';
          }
        }]));
        return !0x0;
      }],
      'waitTimers': [{
        'time': 0x3a98,
        'msg': 'race\x20starting\x20in\x20',
        'trigger': function(bMR) {
          bMR['lockMove'](!0x1);
        }
      }],
      'noWeap': !0x0,
      'friendly': !0x0
    }, {
      'id': 'lms',
      'name': 'Last\x20Man\x20Standing',
      'alias': 'lms',
      'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists'],
      'noRegen': !0x0,
      'noKick': !0x0,
      'teams': !0x0,
      'lives': 0x1,
      'winCondition': function(bMR) {
        for (var bMS = 0x0, bMT = 0x0, bMU = 0x0; bMU < bMR['players']['list']['length']; ++bMU)
          if (0x0 < bMR['players']['list'][bMU]['lives']) {
            var bMV = bMR['players']['list'][bMU]['lives'];
            0x1 == bMR['players']['list'][bMU]['team'] ? bMS += bMV : bMT += bMV;
          } return bMS > bMT ? 0x1 : 0x2;
      },
      'gameTime': 0x493e0
    }, {
      'id': 'simon',
      'name': 'Simon\x20Says',
      'alias': 'simon',
      'endStats': ['sid', 'name', 'score', 'reward'],
      'condition': [function(bMR) {
        for (var bMS = 0x0, bMT = 0x0; bMT < bMR['players']['list']['length']; ++bMT) bMR['players']['list'][bMT]['active'] && 'foll' == bMR['players']['list'][bMT]['team'] && bMS++;
        return 0x0 < bMS;
      }],
      'minPlayers': 0x3,
      'waitTimers': [{
        'time': 0x2710,
        'msg': 'starts\x20in\x20',
        'trigger': function(bMR) {
          bMR['pickSimon']();
        }
      }],
      'noKick': !0x0,
      'teamSee': ['simon', 'foll'],
      'startTeam': 'foll'
    }, {
      'id': 'gun',
      'name': 'Gun\x20Game',
      'alias': 'gun',
      'endStats': ['sid', 'name', 'weapon', 'kills', 'melees', 'setbacks', 'reward'],
      'leaderStat': 'weaponTier',
      'winCondition': function(bMR) {
        for (var bMS = 0x0; bMS < bMR['players']['list']['length']; ++bMS)
          if (bMR['players']['list'][bMS]['weaponTier'] >= bMR['mode']['weaponOrder']['length']) return bMR['players']['list'][bMS];
        return null;
      },
      'condition': [function(bMR) {
        for (var bMS = 0x0; bMS < bMR['players']['list']['length']; ++bMS)
          if (bMR['players']['list'][bMS]['weaponTier'] >= bMR['mode']['weaponOrder']['length']) return !0x1;
        return !0x0;
      }],
      'onKill': function(bMR, bMS, bMT, bMU, bMV) {
        bMU && bMU != bMT ? bMR['weapons'][null == bMV['weaponId'] ? bMU['loadout'][bMU['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] : bMV['weaponId']]['melee'] ? bMR['decreaseWeapon'](bMT) : bMR['increaseWeapon'](bMU, bMV) : bMR['decreaseWeapon'](bMT), bMS && bMR['players']['syncLeaders']();
      },
      'startingLoadout': [0x2],
      'keepLoadout': !0x0,
      'rewardMlt': 0x32,
      'noReward': !0x0,
      'noAssists': !0x0,
      'noStreaks': !0x0,
      'minPlayers': 0x2,
      'noWeap': !0x0,
      'weaponOrder': [0x2, 0xa, 0x4, 0xb, 0x5, 0x3, 0x9, 0x1, 0xe, 0x6, 0x0, 0x7, 0x8, 0xd]
    }, {
      'id': 'prop',
      'name': 'Prop\x20Hunt',
      'alias': 'prop',
      'genID': 'p',
      'endStats': ['sid', 'name', 'score', 'kills'],
      'noRegen': !0x0,
      'noKick': !0x0,
      'teams': !0x0,
      'lives': 0x1,
      'winCondition': function(bMR) {
        for (var bMS = 0x0, bMT = 0x0; bMT < bMR['players']['list']['length']; ++bMT) bMR['players']['list'][bMT]['active'] && 'prop' == bMR['players']['list'][bMT]['team'] && bMS++;
        return 0x0 < bMS ? 'prop' : 'seek';
      },
      'condition': [function(bMR) {
        for (var bMS = 0x0, bMT = 0x0, bMU = 0x0; bMU < bMR['players']['list']['length']; ++bMU) 0x0 < bMR['players']['list'][bMU]['lives'] && bMR['players']['list'][bMU]['active'] && ('prop' == bMR['players']['list'][bMU]['team'] ? bMS++ : bMT++);
        return 0x1 <= bMS && 0x1 <= bMT;
      }],
      'minPlayers': 0x2,
      'waitTimers': [{
        'time': 0x2710,
        'msg': 'locking\x20seekers\x20in\x20',
        'trigger': function(bMR) {
          bMR['lockSeekers']();
        }
      }, {
        'time': 0x7530,
        'msg': 'releasing\x20seekers\x20in\x20',
        'noJoin': !0x0,
        'trigger': function(bMR) {
          bMR['releaseSeeker']();
        }
      }],
      'teamNs': ['seek', 'prop'],
      'showTeam': !0x0,
      'hideNames': !0x0
    }, {
      'id': 'boss',
      'name': 'Boss\x20Hunt',
      'alias': 'boss',
      'winCondition': function(bMR) {
        for (var bMS = 0x0, bMT = 0x0; bMT < bMR['players']['list']['length']; ++bMT) bMR['players']['list'][bMT]['active'] && 'boss' == bMR['players']['list'][bMT]['team'] && bMS++;
        return 0x0 < bMS ? 'boss' : 'heros';
      },
      'condition': [function(bMR) {
        for (var bMS = 0x0, bMT = 0x0; bMT < bMR['players']['list']['length']; ++bMT) bMR['players']['list'][bMT]['active'] && 'boss' == bMR['players']['list'][bMT]['team'] && bMS++;
        return 0x0 < bMS;
      }],
      'waitTimers': [{
        'time': 0x3a98,
        'msg': 'picking\x20boss\x20in\x20',
        'trigger': function(bMR) {
          bMR['pickBoss']();
        }
      }],
      'noReward': !0x0,
      'minPlayers': 0x2,
      'startTeam': 'heros'
    }, {
      'id': 'ranked',
      'name': 'Ranked',
      'alias': 'ranked',
      'noReward': !0x0,
      'preventCustomGames': !0x0,
      'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'MMR'],
      'isRanked': !0x0,
      'noKick': !0x0,
      'needAll': !0x0,
      'infEndTimer': !0x0,
      'objective': !0x0,
      'teams': !0x0,
      'waitTimers': [{
        'time': 0x2710,
        'msg': 'starts\x20in\x20',
        'trigger': function(bMR) {
          bMR['lockMove'](!0x1);
        }
      }],
      'gameStart': function(bMR) {
        bMR['lockMove'](!0x0), bMR['activeObjective'] = -0x1, bMR['nextObjective'](null, !0x0);
      }
    }, {
      'id': 'ranked',
      'name': 'Ranked',
      'alias': 'ranked',
      'noReward': !0x0,
      'preventCustomGames': !0x0,
      'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'MMR'],
      'isRanked': !0x0,
      'noKick': !0x0,
      'needAll': !0x0,
      'infEndTimer': !0x0,
      'noRegen': !0x0,
      'killSort': !0x0,
      'forceSpawn': 0xf,
      'winCondition': function(bMR) {
        for (var bMS = 0x0, bMT = null, bMU = 0x0; bMU < bMR['players']['list']['length']; ++bMU)(null == bMT || bMR['players']['list'][bMU]['kills'] > bMS) && (bMS = bMR['players']['list'][bMU]['kills'], bMT = bMR['players']['list'][bMU]);
        return 0x0 == bMS ? null : bMT;
      },
      'condition': [function(bMR) {
        for (var bMS = 0x0; bMS < bMR['players']['list']['length']; ++bMS)
          if (0xa <= bMR['players']['list'][bMS]['kills']) return !0x1;
        return !0x0;
      }],
      'waitTimers': [{
        'time': 0x2710,
        'msg': 'starts\x20in\x20',
        'trigger': function(bMR) {
          bMR['lockMove'](!0x1);
        }
      }],
      'gameStart': function(bMR) {
        bMR['lockMove'](!0x0);
      }
    }, {
      'id': 'stalk',
      'name': 'Stalker',
      'alias': 'stalk',
      'endStats': ['sid', 'name', 'score', 'reward'],
      'genID': 'st',
      'ambInd': 0x5,
      'minPlayers': 0x2,
      'fogD': 0xfa,
      'fogC': 0x1c1c1c,
      'skyCol': 0x1c1c1c,
      'lightCol': 0xd0d0d,
      'ambCol': 0x171717,
      'lives': 0x1,
      'condition': [function(bMR) {
        for (var bMS = 0x0, bMT = 0x0, bMU = 0x0; bMU < bMR['players']['list']['length']; ++bMU) 0x0 < bMR['players']['list'][bMU]['lives'] && ('liv' == bMR['players']['list'][bMU]['team'] ? bMS++ : 'stalk' == bMR['players']['list'][bMU]['team'] && bMT++);
        return 0x1 <= bMS && 0x1 <= bMT;
      }],
      'winCondition': function(bMR) {
        for (var bMS = 0x0, bMT = 0x0; bMT < bMR['players']['list']['length']; ++bMT) bMR['players']['list'][bMT]['active'] && 'stalk' == bMR['players']['list'][bMT]['team'] && bMS++;
        return 0x0 < bMS ? 'stalk' : 'liv';
      },
      'waitTimers': [{
        'time': 0x3a98,
        'msg': 'picking\x20stalker\x20in\x20',
        'trigger': function(bMR) {
          bMR['pickStalker']();
        }
      }],
      'onMelee': function(bMR, bMS, bMT) {
        var bMU = bMS && bMT && 'stalk' == bMS['team'];
        return bMU && (bMR['triggerImgSound']('scare_0', 'scare_0', bMT), bMR['players']['changeHealth'](bMS, null, -0x28)), bMU;
      },
      'hideNames': !0x0,
      'noReward': !0x0,
      'noKick': !0x0,
      'startTeam': 'liv',
      'spdMlt': {
        'liv': 0.65
      }
    }],
    bN0 = [0x0, 0x1, 0x2, 0x3];
  bMR['exports']['modes'] = bMZ;
  for (var bOm = [{
      'name': 'Burg',
      'ambInd': 0x1,
      'modURL': '',
      'terrainSeed': '',
      'terrainWidth': 0x800,
      'terrainHeight': 0x800,
      'terrainMntMlt': 0x1,
      'terrainMntCol': '#a0a0a0',
      'terrainGrsCol': '#4a6904',
      'terrainDrtCol': '#8c6835',
      'skyDome': !0x1,
      'skyDomeCol0': '#ffffff',
      'skyDomeCol1': '#7196a2',
      'skyDomeCol2': '#184452',
      'zone': !0x1,
      'zoneSize': 0x1f4,
      'zoneSpeed': 0x1,
      'zoneCol0': '#c542d9',
      'zoneCol1': '#c542d9',
      'zoneCol2': '#c542d9',
      'sizeMlt': 0x2,
      'shadowR': 0x400,
      'ambient': 0x7d6e6c,
      'light': 0xffe8e8,
      'sky': 0xd7c6c6,
      'fog': 0xd2c1c1,
      'fogD': 918.7540927106669,
      'dthY': -0x64,
      'camPos': [0xb, 0x21, -0xd9],
      'spawns': [
        [-0x50, 0x12, 0x23, 0x0],
        [0xb1, 0x0, -0xbc, 0x0],
        [0xd7, 0xa, -0x1f8, 0x0, 0x1],
        [-0xa9, 0x2, -0x202, 0x0, 0x2],
        [-0x148, 0x0, -0xff, 0x0],
        [-0x9a, 0x0, -0x86, 0x0, 0x1],
        [-0x7d, -0x1c, -0x155, 0x0],
        [0x20, -0x1c, -0x1fd, 0x0, 0x1],
        [0x14b, 0x0, -0xe3, 0x0, 0x2],
        [0x66, 0x0, -0x16d, 0x0]
      ],
      'ambO': 0.7,
      'ambS': 0x5,
      'modes': [0x0, 0x1],
      'shadScale': 0xaa,
      'objects': [{
        'p': [-0x60, 0x10, 0x29],
        's': [0x120, 0x2, 0x3e],
        't': 0x1
      }, {
        'p': [0x49, 0x0, 0x21],
        's': [0x32, 0x12, 0x2e],
        'i': 0x9,
        't': 0x1,
        'd': 0x2
      }, {
        'p': [0x1c, 0x0, 0x8],
        's': [0x98, 0x18, 0x4]
      }, {
        'p': [0x0, -0x2, -0x47],
        's': [0x204, 0x2, 0xfc],
        't': 0x1
      }, {
        'p': [-0x4c, 0x0, -0x30],
        's': [0x38, 0x4a, 0x7a],
        'bo': 0x1
      }, {
        'p': [0x25, 0x0, -0x44],
        's': [0x6e, 0x36, 0x50],
        'bo': 0x1
      }, {
        'p': [-0x70, 0x0, 0x4a],
        's': [0x7e, 0x4c, 0x26],
        'bo': 0x1
      }, {
        'p': [0x5a, 0x0, 0x4d],
        's': [0x9e, 0x4c, 0x2c],
        'bo': 0x1
      }, {
        'p': [-0x88, 0x10, -0x10],
        's': [0x40, 0x2, 0x34],
        't': 0x1
      }, {
        'p': [-0x88, 0x0, -0x2c],
        's': [0x40, 0x18, 0x4]
      }, {
        'p': [-0xaa, 0x0, -0x12],
        's': [0x4, 0x18, 0x38]
      }, {
        'p': [-0xea, 0x0, -0x1b],
        's': [0x20, 0x3c, 0x61],
        'bo': 0x1
      }, {
        'p': [-0x102, 0x12, 0x29],
        's': [0x2f, 0x20, 0x2c],
        'c': 0xcfcfcf,
        'bo': 0x1
      }, {
        'p': [-0xda, 0xd, 0x4a],
        's': [0x58, 0x26, 0x36],
        'bo': 0x1
      }, {
        'p': [0xb9, 0x0, -0x9],
        's': [0x10, 0x43, 0x54],
        'bo': 0x1
      }, {
        'p': [0xb4, 0x0, 0x2d],
        's': [0x3c, 0x5c, 0x2c],
        'c': 0xb4b4b4,
        'bo': 0x1
      }, {
        'p': [0xd5, 0x0, -0x3d],
        's': [0x5e, 0x5c, 0x3c],
        'c': 0xb1b1b1,
        'bo': 0x1
      }, {
        'p': [0x60, 0x0, -0xaf],
        's': [0x6e, 0x2c, 0x2c],
        'bo': 0x1
      }, {
        'p': [-0x55, 0x0, -0x8c],
        's': [0x38, 0x54, 0x70],
        'bo': 0x1
      }, {
        'p': [0x7e, -0x4, -0x12c],
        's': [0xe4, 0x4, 0xce],
        't': 0x1
      }, {
        'p': [-0x52, -0x1c, -0xfc],
        's': [0x3c, 0x5e, 0x8a],
        'bo': 0x1
      }, {
        'p': [0x9, -0x1c, -0x112],
        's': [0x6, 0x22, 0xa8]
      }, {
        'p': [0x31, -0x1c, -0x181],
        's': [0x60, 0x68, 0x44],
        'bo': 0x1
      }, {
        'p': [-0x17, -0x1c, -0xfc],
        's': [0x3a, 0x1c, 0x6e],
        'i': 0x9,
        't': 0x1,
        'd': 0x1
      }, {
        'p': [0x3b, -0x20, -0x1c4],
        's': [0xda, 0x4, 0x8a],
        't': 0x1
      }, {
        'p': [-0x6c, -0x1c, -0x179],
        's': [0x82, 0x58, 0x2a],
        'bo': 0x1
      }, {
        'p': [-0x15, 0x6, -0x179],
        's': [0x2c, 0x26, 0x14],
        'bo': 0x1
      }, {
        'p': [-0xf3, 0x0, -0x69],
        's': [0x15, 0x32, 0x60],
        'c': 0xbbb9b9,
        'bo': 0x1
      }, {
        'p': [0xbe, 0x0, -0x15a],
        's': [0x75, 0x3a, 0x76],
        'bo': 0x1
      }, {
        'p': [-0xc3, 0x0, -0x11],
        's': [0x2e, 0x12, 0x36],
        'i': 0x9,
        't': 0x1,
        'd': 0x1
      }, {
        'p': [-0x86, 0x0, -0xbf],
        's': [0x5a, 0x4d, 0x4c],
        'bo': 0x1
      }, {
        'p': [-0x116, 0x0, -0xbf],
        's': [0x82, 0x4d, 0x4c],
        'bo': 0x1
      }, {
        'p': [-0xe3, -0x2, -0xfe],
        's': [0xe8, 0x2, 0x32],
        't': 0x1
      }, {
        'p': [-0xd2, -0x1c, -0x143],
        's': [0x84, 0x5a, 0x42],
        'bo': 0x1
      }, {
        'p': [-0x80, -0x1c, -0x12c],
        's': [0x20, 0x1c, 0x2a],
        'i': 0x9,
        't': 0x1,
        'd': 0x1
      }, {
        'p': [-0xe9, -0x2, -0x1a3],
        's': [0xac, 0x2, 0x118],
        't': 0x1
      }, {
        'p': [-0x146, -0x16, -0x141],
        's': [0x22, 0x54, 0x58],
        'bo': 0x1
      }, {
        'p': [-0x172, -0x2, -0xfd],
        's': [0x37, 0x9b, 0x3a],
        'bo': 0x1
      }, {
        'p': [-0x9e, -0x1c, -0x112],
        's': [0x1c, 0x5a, 0x20],
        'bo': 0x1
      }, {
        'p': [-0x107, -0x14, -0x142],
        's': [0x1e, 0x5e, 0x5e],
        'bo': 0x1
      }, {
        'p': [-0x14a, -0x17, -0x18a],
        's': [0x16, 0x51, 0xd2],
        'bo': 0x1
      }, {
        'p': [-0x58, -0x1c, -0x1ad],
        's': [0x4e, 0x1c, 0x3e],
        'i': 0x9,
        't': 0x1,
        'd': 0x2
      }, {
        'p': [-0x67, -0x16, -0x1f1],
        's': [0x31, 0x54, 0x56],
        'bo': 0x1
      }, {
        'p': [-0x89, -0x2, -0x1cf],
        's': [0x14, 0x2, 0x82],
        't': 0x1
      }, {
        'p': [-0xa4, 0x0, -0x223],
        's': [0x62, 0x56, 0x28],
        'bo': 0x1
      }, {
        'p': [-0x11b, 0x0, -0x1fa],
        's': [0x48, 0xa, 0x56],
        't': 0x1
      }, {
        'p': [-0x105, 0x0, -0x1c4],
        's': [0x1c, 0xa, 0x16],
        't': 0x1
      }, {
        'p': [-0x12a, 0x0, -0x1c2],
        's': [0x2a, 0xa, 0x1a],
        'i': 0x9,
        't': 0x1,
        'd': 0x3
      }, {
        'p': [-0x15b, 0x0, -0x217],
        's': [0x48, 0x48, 0x4c],
        'bo': 0x1
      }, {
        'p': [-0x106, 0x0, -0x237],
        's': [0x62, 0x34, 0x28],
        'bo': 0x1
      }, {
        'p': [-0x13f, 0x0, -0x24b],
        's': [0x30, 0x8b, 0x36],
        'c': 0xb1b1b1
      }, {
        'p': [-0x1, -0x1c, -0x179],
        's': [0x4, 0x22, 0x14],
        'bo': 0x1
      }, {
        'p': [-0x29, -0x1c, -0x179],
        's': [0x4, 0x22, 0x14],
        'bo': 0x1
      }, {
        'p': [-0x3f, -0x1c, -0x1fa],
        's': [0x34, 0x76, 0x5c],
        'bo': 0x1
      }, {
        'p': [0x55, -0x1c, -0x1f2],
        's': [0x20, 0x70, 0x58],
        'bo': 0x1
      }, {
        'p': [0xad, 0x8, -0x1f7],
        's': [0x94, 0x2, 0x54],
        't': 0x1
      }, {
        'p': [0x27, -0x1d, -0x220],
        's': [0xda, 0x5e, 0x2e],
        'bo': 0x1
      }, {
        'p': [0xb6, 0xa, -0x21c],
        's': [0x48, 0x57, 0x3c],
        'bo': 0x1
      }, {
        'p': [0x124, -0x4, -0x149],
        's': [0x68, 0x4, 0x108],
        't': 0x1
      }, {
        'p': [0x118, 0x0, -0x1e5],
        's': [0x3a, 0xa, 0x30],
        'i': 0x9,
        't': 0x1,
        'd': 0x3
      }, {
        'p': [0x116, 0x8, -0x20f],
        's': [0x3e, 0x2, 0x24],
        't': 0x1
      }, {
        'p': [0x108, 0x9, -0x22e],
        's': [0x5e, 0x24, 0x1a],
        'bo': 0x1
      }, {
        'p': [0x14b, -0x17, -0x228],
        's': [0x36, 0x87, 0x6e],
        'c': '#aaaaaa',
        'bo': 0x1
      }, {
        'p': [0x14c, 0x0, -0x1f3],
        's': [0x30, 0x37, 0x6e],
        'bo': 0x1
      }, {
        'p': [0x156, 0x1, -0x19b],
        's': [0x14, 0x1f, 0x6e],
        'bo': 0x1
      }, {
        'p': [0x150, 0x0, -0x12f],
        's': [0x36, 0x3d, 0x6e],
        'bo': 0x1
      }, {
        'p': [0x7f, -0x1c, -0x1a9],
        's': [0x40, 0x23, 0x4]
      }, {
        'p': [0xc4, -0x1c, -0x1cd],
        's': [0x6e, 0x2c, 0x4]
      }, {
        'p': [0xf9, 0x0, -0x1e6],
        's': [0x4, 0x10, 0x2e]
      }, {
        'p': [0xcc, -0x1c, -0x1b8],
        's': [0x48, 0x1c, 0x26],
        'i': 0x9,
        't': 0x1
      }, {
        'p': [0x9c, 0x0, -0xbc],
        's': [0x20, 0x46, 0x52],
        'bo': 0x1
      }, {
        'p': [0xe4, 0x0, -0xbc],
        's': [0x20, 0x56, 0x52],
        'bo': 0x1
      }, {
        'p': [0x16f, 0x0, -0x92],
        's': [0x3a, 0x32, 0x76],
        'c': '#a2a2a2',
        'bo': 0x1
      }, {
        'p': [0x14f, 0x51, -0x3e],
        's': [0x3c, 0x3a, 0x3c]
      }, {
        'p': [0x15c, 0x0, -0xe3],
        's': [0x8, 0x2c, 0x34],
        'bo': 0x1
      }, {
        'p': [0x189, 0x0, -0x1a4],
        's': [0x58, 0x40, 0xc5]
      }, {
        'p': [0x18c, 0x0, -0xc4],
        's': [0x3a, 0x51, 0xba]
      }, {
        'p': [-0x164, 0x0, -0x171],
        's': [0x2a, 0x62, 0x32]
      }, {
        'p': [-0x108, 0x0, -0x54],
        's': [0x2a, 0x7c, 0x32],
        'c': 0xacacac
      }, {
        'p': [0x1, 0x0, 0x0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x2a, 0x0, -0x4f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x2a, 0xc, -0x4f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x2a, 0x0, -0x43],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x0, -0x1c, -0x145],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x0, -0x1c, -0x151],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x0, -0x10, -0x14d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x4c, -0x1c, -0x147],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x4c, -0x10, -0x147],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xed, 0xa, -0x1d9],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xe0, 0xa, -0x208],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x9b, 0xa, -0x1f8],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xa7, 0xa, -0x1f8],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xa3, 0x16, -0x1f8],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xd6, 0xa, -0x1d2],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x138, 0x0, -0x18f],
        's': [0x2, 0x2, 0x5c]
      }, {
        'p': [0x13e, 0x0, -0xf2],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xe3, 0x0, -0x119],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xd7, 0x0, -0x119],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xe0, 0xc, -0x119],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x3b, 0x12, 0x13],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x6e, 0x12, -0x24],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x6e, 0x0, -0x34],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x7a, 0x0, -0x34],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xa5, 0x12, -0x27],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xd7, 0x12, 0xd],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x9a, 0x0, -0xfc],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x139, 0x0, -0xeb],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x85, 0x0, -0x1d5],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [-0xbe, 0x0, -0x1e5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xce, 0x0, -0xcf],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xce, 0x0, -0xc3],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x62, 0x0, -0x3d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x62, 0x0, -0x49],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x5f, 0x0, -0x34],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x85, 0x0, -0x96],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xc0, 0x22, -0xbc],
        's': [0x28, 0x18, 0x52],
        'bo': 0x1
      }, {
        'p': [0x80, -0x4, -0x19f],
        's': [0x44, 0xc, 0x14],
        't': 0x1
      }, {
        'p': [0x5d, -0x1c, -0x1a6],
        's': [0x4, 0x2a, 0xa]
      }, {
        'p': [0x151, -0x4, -0x96],
        's': [0x16, 0x4, 0x5e],
        't': 0x1
      }, {
        'p': [-0xb, -0x1c, -0x180],
        's': [0x14, 0x22, 0x2],
        'pe': 0x1,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x20, -0x1c, -0x172],
        's': [0x12, 0x22, 0x2],
        'pe': 0x1,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xad, 0x0, -0xe9],
        's': [0x2, 0x22, 0x18],
        'pe': 0x1,
        't': 0x2
      }, {
        'p': [0xca, 0x0, -0xe2],
        's': [0x14, 0x22, 0x2],
        'pe': 0x1,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xb6, 0x0, -0x96],
        's': [0x14, 0x22, 0x2],
        'pe': 0x1,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xd3, 0x0, -0xa2],
        's': [0x2, 0x22, 0x18],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x14, -0x1c, -0x1b6],
        's': [0x1c, 0x4c, 0x28],
        'bo': 0x1
      }, {
        'p': [0x72, 0x0, -0x184],
        's': [0x24, 0x8, 0x22],
        'i': 0x9,
        't': 0x1,
        'd': 0x3
      }, {
        'p': [-0x151, 0x8b, -0x233],
        's': [0xc, 0x4, 0x6],
        'l': 0x1,
        'c': 0xaaaaaa
      }, {
        'p': [-0x12b, 0x8b, -0x236],
        's': [0x8, 0x4, 0xc],
        'l': 0x1,
        'c': 0xb1afaf
      }, {
        'p': [-0x129, 0x8b, -0x24a],
        's': [0x4, 0x4, 0xc],
        'l': 0x1,
        'c': 0xb4b4b4
      }, {
        'p': [-0x12c, 0x8b, -0x260],
        's': [0xa, 0x4, 0xc],
        'l': 0x1,
        'c': 0xa5a5a5
      }, {
        'p': [-0x13c, 0x8b, -0x233],
        's': [0xc, 0x2, 0x6],
        'l': 0x1,
        'c': 0xaaaaaa
      }, {
        'p': [-0xce, 0x56, -0x217],
        's': [0xe, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [-0x7e, 0x56, -0x217],
        's': [0x16, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [-0xa5, 0x56, -0x212],
        's': [0x16, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0xd1, 0x56, -0x230],
        's': [0x8, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [-0xe6, 0x34, -0x226],
        's': [0x18, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0x108, 0x34, -0x226],
        's': [0x12, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0x127, 0x34, -0x226],
        's': [0xe, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0x13c, 0x46, -0x1f6],
        's': [0x6, 0xc, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x17a, 0x49, -0x1f6],
        's': [0x6, 0x8, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x13e, 0x48, -0x1f8],
        's': [0xe, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [-0x17a, 0x48, -0x1f8],
        's': [0xa, 0x2, 0xe],
        'l': 0x1
      }, {
        'p': [-0x166, 0x48, -0x1f3],
        's': [0xe, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x13a, 0x48, -0x218],
        's': [0x6, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [-0x141, 0x3a, -0x1e0],
        's': [0x4, 0x2, 0x18],
        'l': 0x1
      }, {
        'p': [-0x141, 0x3a, -0x180],
        's': [0x4, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [-0x141, 0x3a, -0x19d],
        's': [0x4, 0x3, 0x15],
        'l': 0x1
      }, {
        'p': [-0x141, 0x3a, -0x1be],
        's': [0x4, 0x3, 0x13],
        'l': 0x1
      }, {
        'p': [-0x35, 0x3c, -0x188],
        's': [0x14, 0x6, 0xc],
        'l': 0x1
      }, {
        'p': [-0xa6, 0x3c, -0x16c],
        's': [0xe, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [0xe9, 0x2d, -0x224],
        's': [0xc, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [0x106, 0x2d, -0x224],
        's': [0xb, 0x2, 0x6],
        'l': 0x1,
        'c': 0xcacaca
      }, {
        'p': [0x120, 0x2d, -0x224],
        's': [0x10, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0x52, 0x5a, -0x1d2],
        's': [0xe, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [-0x2b, 0x5a, -0x1d3],
        's': [0xc, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [-0x2c, 0x5a, -0x207],
        's': [0xe, 0x6, 0x1e],
        'l': 0x1
      }, {
        'p': [-0x3c, 0x5a, -0x1cf],
        's': [0xe, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0x27, 0x5a, -0x1ea],
        's': [0x4, 0x2, 0x10],
        'l': 0x1
      }, {
        'p': [-0x54, 0x5a, -0x20c],
        's': [0xa, 0x3, 0x1a],
        'l': 0x1
      }, {
        'p': [-0x57, 0x5a, -0x1ec],
        's': [0x4, 0x2, 0xa],
        'l': 0x1
      }, {
        'p': [-0x3f, 0x47, -0x1c2],
        's': [0x4, 0x4, 0x14],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x7a, 0x37, -0x1cb],
        's': [0x6, 0x10, 0x6],
        't': 0x2
      }, {
        'p': [-0x7c, 0x3e, -0x1fb],
        's': [0x6, 0x3, 0x10],
        'l': 0x1,
        'c': 0xdcdcdc
      }, {
        'p': [-0x7c, 0x3e, -0x1dc],
        's': [0x6, 0x2, 0xe],
        'l': 0x1,
        'c': 0xe3e3e3
      }, {
        'p': [-0x58, 0x3e, -0x1c9],
        's': [0x12, 0x3, 0x6],
        'l': 0x1
      }, {
        'p': [-0x74, 0x3c, -0x18c],
        's': [0x1a, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [-0xa4, 0x3c, -0x188],
        's': [0x12, 0x6, 0xc],
        'l': 0x1
      }, {
        'p': [-0x52, 0x3c, -0x18c],
        's': [0xe, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [0x55, 0x42, -0x1bf],
        's': [0x4, 0x4, 0x10],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x1f, 0x2c, -0x179],
        's': [0x9, 0x4, 0x14],
        'bo': 0x1
      }, {
        'p': [-0xe, 0x2c, -0x179],
        's': [0xa, 0x2, 0x14],
        'bo': 0x1
      }, {
        'p': [-0x155, 0x62, -0x183],
        's': [0xc, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [-0x155, 0x62, -0x15e],
        's': [0xc, 0x6, 0xc],
        'l': 0x1
      }, {
        'p': [-0x152, 0x62, -0x171],
        's': [0x6, 0x2, 0xc],
        'l': 0x1
      }, {
        'p': [-0x173, 0x62, -0x185],
        's': [0xc, 0x4, 0xa],
        'l': 0x1
      }, {
        'p': [-0x164, 0x62, -0x188],
        's': [0x8, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0x35, 0x41, -0x20b],
        's': [0x12, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [0x87, 0x41, -0x20b],
        's': [0xc, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [0x72, 0x41, -0x20b],
        's': [0xc, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [0xd3, 0x61, -0x205],
        's': [0xe, 0x6, 0xe],
        'l': 0x1
      }, {
        'p': [0x99, 0x61, -0x206],
        's': [0xe, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [0xb8, 0x61, -0x202],
        's': [0xc, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [0xd7, 0x61, -0x21b],
        's': [0x6, 0x2, 0x12],
        'l': 0x1
      }, {
        'p': [0xd3, 0x61, -0x234],
        's': [0xe, 0x6, 0xc],
        'l': 0x1
      }, {
        'p': [0x99, 0x61, -0x232],
        's': [0xe, 0x6, 0x10],
        'l': 0x1
      }, {
        'p': [0x95, 0x61, -0x21b],
        's': [0x6, 0x2, 0xc],
        'l': 0x1
      }, {
        'p': [0x94, 0x10, -0x1cd],
        's': [0xe, 0x1, 0x4]
      }, {
        'p': [0xf2, 0x10, -0x1cd],
        's': [0x12, 0x2, 0x4]
      }, {
        'p': [0xf9, 0x10, -0x1f1],
        's': [0x4, 0x2, 0xa]
      }, {
        'p': [0x60, 0x54, -0x1cb],
        's': [0x6, 0xc, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x4a, 0x54, -0x1cb],
        's': [0x6, 0xa, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x61, 0x54, -0x219],
        's': [0x6, 0x14, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x5e, 0x54, -0x1cf],
        's': [0xe, 0x4, 0x12],
        'l': 0x1
      }, {
        'p': [0x4a, 0x54, -0x1cf],
        's': [0xa, 0x4, 0x12],
        'l': 0x1
      }, {
        'p': [0x4c, 0x54, -0x215],
        's': [0xe, 0x4, 0x12],
        'l': 0x1
      }, {
        'p': [0x60, 0x54, -0x215],
        's': [0xa, 0x4, 0x12],
        'l': 0x1
      }, {
        'p': [0x62, 0x54, -0x1f2],
        's': [0x6, 0x4, 0x14],
        'l': 0x1
      }, {
        'p': [0x48, 0x54, -0x1f2],
        's': [0x6, 0x4, 0x1a],
        'l': 0x1
      }, {
        'p': [0x5b, 0x4c, -0x19e],
        's': [0x6, 0x10, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x55, 0x4c, -0x19a],
        's': [0x18, 0x6, 0x12],
        'l': 0x1
      }, {
        'p': [0xd, 0x4c, -0x19a],
        's': [0x18, 0x6, 0x12],
        'l': 0x1
      }, {
        'p': [0x30, 0x4c, -0x1a0],
        's': [0x14, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [0xc, 0x4c, -0x166],
        's': [0x16, 0x6, 0xe],
        'l': 0x1
      }, {
        'p': [0x5, 0x4c, -0x17e],
        's': [0x8, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [0x35, 0x4c, -0x162],
        's': [0x16, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [0x55, 0x4c, -0x168],
        's': [0x18, 0x6, 0x12],
        'l': 0x1
      }, {
        'p': [0x5d, 0x4c, -0x183],
        's': [0x8, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [0x6, 0x4c, -0x19e],
        's': [0x6, 0x14, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x6, 0x4c, -0x164],
        's': [0x6, 0xe, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x14e, 0x20, -0x1b0],
        's': [0x4, 0x2, 0x12],
        'l': 0x1
      }, {
        'p': [0x14e, 0x20, -0x178],
        's': [0x4, 0x3, 0x12],
        'l': 0x1
      }, {
        'p': [0x14e, 0x20, -0x196],
        's': [0x4, 0x2, 0x16],
        'l': 0x1
      }, {
        'p': [0x93, 0x3a, -0x192],
        's': [0x1f, 0x9, 0x6],
        'l': 0x1
      }, {
        'p': [0x88, 0x3a, -0x17a],
        's': [0x9, 0xc, 0x2a],
        'l': 0x1
      }, {
        'p': [0xc6, 0x3a, -0x1a2],
        's': [0xa, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [0xf5, 0x3a, -0x177],
        's': [0x7, 0x4, 0x14],
        'l': 0x1
      }, {
        'p': [0xea, 0x3a, -0x19d],
        's': [0x1d, 0x5, 0x10],
        'l': 0x1
      }, {
        'p': [0xec, 0x3a, -0x12b],
        's': [0x19, 0x4, 0x18],
        'l': 0x1
      }, {
        'p': [0xf5, 0x3a, -0x155],
        's': [0x7, 0x4, 0x14],
        'l': 0x1
      }, {
        'p': [0xf3, 0x3a, -0x1a0],
        's': [0x6, 0x13, 0x6],
        't': 0x2
      }, {
        'p': [0x13a, 0x3d, -0x15d],
        's': [0xa, 0x4, 0x12],
        'l': 0x1
      }, {
        'p': [0x14d, 0x3d, -0x164],
        's': [0xb, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [0x162, 0x3d, -0x15d],
        's': [0x12, 0x4, 0x12],
        'l': 0x1
      }, {
        'p': [0x138, 0x3d, -0x132],
        's': [0x6, 0x4, 0x1c],
        'l': 0x1
      }, {
        'p': [0x13c, 0x3d, -0x103],
        's': [0xe, 0x4, 0x16],
        'l': 0x1
      }, {
        'p': [0x14e, 0x3d, -0xfa],
        's': [0xb, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [0x164, 0x3d, -0x101],
        's': [0xe, 0x3, 0x12],
        'l': 0x1
      }, {
        'p': [0x11d, 0x3a, -0x58],
        's': [0x2, 0x28, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x11d, 0x3a, -0x28],
        's': [0x2, 0x28, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x126, 0x5d, -0x40],
        's': [0x16, 0x2, 0x35],
        't': 0x2
      }, {
        'p': [0xc1, 0x3a, -0x122],
        's': [0x18, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [0x88, 0x3a, -0x14c],
        's': [0x9, 0x6, 0x18],
        'l': 0x1
      }, {
        'p': [0x15c, 0x2c, -0xec],
        's': [0x8, 0x4, 0x10],
        'l': 0x1,
        'c': 0xe6e6e6
      }, {
        'p': [0x15c, 0x2c, -0xd8],
        's': [0x8, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [0x160, 0x40, -0x17b],
        's': [0x6, 0x4, 0x14],
        'l': 0x1
      }, {
        'p': [0x160, 0x40, -0x19f],
        's': [0x6, 0x3, 0xe],
        'l': 0x1
      }, {
        'p': [0x136, 0x37, -0x1ea],
        's': [0x4, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [0x13b, 0x37, -0x1c3],
        's': [0xe, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [0x136, 0x37, -0x1d9],
        's': [0x4, 0x2, 0xa],
        'l': 0x1
      }, {
        'p': [0x156, 0x37, -0x1be],
        's': [0xe, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [0x133, 0x70, -0x240],
        's': [0x6, 0x4, 0x16],
        'l': 0x1,
        'c': '#b1b1b1'
      }, {
        'p': [0x14f, 0x8b, -0x59],
        's': [0xc, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [0x139, 0x8b, -0x54],
        's': [0x10, 0x6, 0x10],
        'l': 0x1
      }, {
        'p': [0x165, 0x8b, -0x54],
        's': [0x10, 0x6, 0x10],
        'l': 0x1
      }, {
        'p': [0x139, 0x8b, -0x28],
        's': [0x10, 0x6, 0x10],
        'l': 0x1
      }, {
        'p': [0x134, 0x8b, -0x3e],
        's': [0x6, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [0xe4, 0x30, -0x66],
        's': [0xa, 0x2, 0xe],
        'l': 0x1
      }, {
        'p': [-0x125, 0x28, -0x141],
        's': [0x20, 0x16, 0x58],
        'bo': 0x1
      }, {
        'p': [-0xc0, 0x3e, -0x143],
        's': [0x14, 0x4, 0x42],
        'l': 0x1
      }, {
        'p': [-0x148, 0x3e, -0x169],
        's': [0x14, 0x4, 0x8],
        'l': 0x1
      }, {
        'p': [-0x128, 0x3e, -0x169],
        's': [0x14, 0x4, 0x8],
        'l': 0x1
      }, {
        'p': [-0xfd, 0x49, -0x16c],
        's': [0x6, 0xa, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x112, 0x49, -0x16c],
        's': [0x6, 0xe, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x112, 0x4a, -0x142],
        's': [0x8, 0x4, 0x5e],
        'l': 0x1
      }, {
        'p': [-0xfc, 0x4a, -0x11b],
        's': [0x8, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [0x9, 0x6, -0x139],
        's': [0x6, 0x2, 0x12]
      }, {
        'p': [0x9, 0x6, -0xc7],
        's': [0x6, 0x2, 0x12]
      }, {
        'p': [0x9, 0x6, -0xfc],
        's': [0x6, 0x2, 0xa]
      }, {
        'p': [0xa4, 0x0, -0x3d],
        's': [0x4, 0x3e, 0x4],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9a, 0x36, -0x3d],
        's': [0x10, 0x4, 0x4],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x33, -0x3d],
        's': [0x10, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -0.7],
        't': 0x2
      }, {
        'p': [-0x107, 0x0, -0x111],
        's': [0x4, 0x36, 0x4],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x107, 0x2f, -0x107],
        's': [0x4, 0x4, 0x10],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x107, 0x2b, -0x10c],
        's': [0x2, 0x2, 0x10],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [0xee, 0x56, -0xe0],
        's': [0xc, 0x4, 0xa],
        'l': 0x1
      }, {
        'p': [0xf0, 0x56, -0x98],
        's': [0x8, 0x4, 0xa],
        'l': 0x1
      }, {
        'p': [0xd9, 0x56, -0xde],
        's': [0xa, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [0xf2, 0x56, -0xbd],
        's': [0x4, 0x4, 0x1c],
        'l': 0x1
      }, {
        'p': [0xfb, 0x5c, -0x52],
        's': [0x12, 0x6, 0x12],
        'l': 0x1,
        'c': 0xaaaaaa
      }, {
        'p': [0xb0, 0x5c, -0x54],
        's': [0x14, 0x4, 0xe],
        'l': 0x1,
        'c': 0xb1b1b1
      }, {
        'p': [0xad, 0x5c, -0x26],
        's': [0xe, 0x4, 0xe],
        'l': 0x1,
        'c': 0xbbbbbb
      }, {
        'p': [0xcf, 0x5c, -0x58],
        's': [0x14, 0x4, 0x6],
        'l': 0x1,
        'c': 0xb9b9b9
      }, {
        'p': [0xa8, 0x5c, -0x3d],
        's': [0x4, 0x2, 0xc],
        'l': 0x1,
        'c': 0xa7a7a7
      }, {
        'p': [0xfe, 0x5c, -0x29],
        's': [0xc, 0x4, 0x14],
        'l': 0x1,
        'c': 0xb6b6b6
      }, {
        'p': [0xd6, 0x5c, -0x22],
        's': [0x18, 0x4, 0x6],
        'l': 0x1,
        'c': 0xafafaf
      }, {
        'p': [0x91, 0x46, -0x9e],
        's': [0xa, 0x4, 0x16],
        'l': 0x1
      }, {
        'p': [0xa8, 0x46, -0x9a],
        's': [0x8, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [0x91, 0x46, -0xda],
        's': [0xa, 0x4, 0x16],
        'l': 0x1
      }, {
        'p': [0xa8, 0x46, -0xde],
        's': [0x8, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [0xd6, 0x56, -0xb8],
        's': [0x4, 0x2, 0x18],
        'l': 0x1
      }, {
        'p': [0xd8, 0x56, -0x98],
        's': [0x8, 0x4, 0xa],
        'l': 0x1
      }, {
        'p': [0xb3, 0x43, 0x0],
        's': [0x4, 0x2, 0xa],
        'l': 0x1
      }, {
        'p': [0xb3, 0x43, 0x11],
        's': [0x4, 0x6, 0xf],
        'l': 0x1
      }, {
        'p': [0x88, 0x2c, -0x9d],
        's': [0x4, 0x26, 0x4],
        't': 0x2
      }, {
        'p': [0x2d, 0x2c, -0x9d],
        's': [0x4, 0x26, 0x4],
        't': 0x2
      }, {
        'p': [0x2d, 0x2c, -0xc1],
        's': [0x4, 0x26, 0x4],
        't': 0x2
      }, {
        'p': [0x88, 0x2c, -0xc1],
        's': [0x4, 0x2a, 0x4],
        't': 0x2
      }, {
        'p': [0x5b, 0x3a, -0xaf],
        's': [0x64, 0x2, 0x2c],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x7f, 0x2c, -0x9b],
        's': [0x1a, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [0x30, 0x2c, -0x9f],
        's': [0xe, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [0x2e, 0x2c, -0xbf],
        's': [0xa, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [0x5a, 0x2c, -0x9b],
        's': [0x12, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0xc3, 0x3a, -0xe2],
        's': [0x12, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [0xba, 0x3a, -0x96],
        's': [0x12, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0x3, 0x36, -0x64],
        's': [0x1e, 0x6, 0x10],
        'l': 0x1
      }, {
        'p': [0x4d, 0x36, -0x62],
        's': [0x1e, 0x6, 0x14],
        'l': 0x1
      }, {
        'p': [0x4f, 0x36, -0x23],
        's': [0x1a, 0x6, 0xe],
        'l': 0x1
      }, {
        'p': [-0x5, 0x36, -0x23],
        's': [0x1a, 0x6, 0xe],
        'l': 0x1
      }, {
        'p': [0x59, 0x36, -0x42],
        's': [0x6, 0x4, 0x14],
        'l': 0x1
      }, {
        'p': [0x25, 0x36, -0x69],
        's': [0x1e, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0xf, 0x36, -0x42],
        's': [0x6, 0x4, 0x14],
        'l': 0x1
      }, {
        'p': [0x26, 0x36, -0x1f],
        's': [0x12, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0x35, 0x3c, -0x16c],
        's': [0x14, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [-0xed, 0x32, 0x23],
        's': [0x5, 0x2, 0xa],
        'l': 0x1,
        'c': 0xc8c8c8
      }, {
        'p': [0xa4, 0x5c, 0x1f],
        's': [0x1c, 0x6, 0x10],
        'l': 0x1,
        'c': 0xb4b4b4
      }, {
        'p': [0xcd, 0x5c, 0x1f],
        's': [0xa, 0x4, 0x10],
        'l': 0x1,
        'c': 0xd2d2d2
      }, {
        'p': [0x9c, 0x5c, 0x3c],
        's': [0xc, 0x6, 0xe],
        'l': 0x1,
        'c': 0xc8c8c8
      }, {
        'p': [-0x104, 0x2f, 0x13],
        's': [0x4, 0x36, 0x9e]
      }, {
        'p': [-0xc5, 0x2f, 0x61],
        's': [0x9e, 0x36, 0x4]
      }, {
        'p': [-0xb2, 0xd, 0x33],
        's': [0x4, 0x4a, 0x4],
        't': 0x2
      }, {
        'p': [-0xfe, 0xd, 0x33],
        's': [0x4, 0x4a, 0x4],
        't': 0x2
      }, {
        'p': [-0xd8, 0x50, 0x48],
        's': [0x54, 0x2, 0x32],
        't': 0x2
      }, {
        'p': [-0x37, 0x4a, 0x2],
        's': [0xe, 0x6, 0x16],
        'l': 0x1
      }, {
        'p': [-0x61, 0x4a, 0x1],
        's': [0xe, 0x6, 0x18],
        'l': 0x1
      }, {
        'p': [-0x66, 0x4a, -0x2a],
        's': [0x4, 0x4, 0x18],
        'l': 0x1
      }, {
        'p': [-0x66, 0x4a, -0x4b],
        's': [0x4, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [-0x4d, 0x4a, 0xb],
        's': [0xe, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [-0x32, 0x4a, -0x2d],
        's': [0x4, 0x4, 0x18],
        'l': 0x1
      }, {
        'p': [-0x36, 0x4a, -0x61],
        's': [0xc, 0x4, 0x18],
        'l': 0x1
      }, {
        'p': [-0xec, 0x32, -0x83],
        's': [0x7, 0x4, 0x18],
        'l': 0x1,
        'c': 0xc8c6c6
      }, {
        'p': [-0xec, 0x32, -0x60],
        's': [0x7, 0x4, 0x16],
        'l': 0x1,
        'c': 0xb6b6b6
      }, {
        'p': [-0xdd, 0x3c, 0xe],
        's': [0x6, 0x2, 0xf],
        'l': 0x1
      }, {
        'p': [-0xf4, 0x3c, 0xd],
        's': [0xc, 0x2, 0x11],
        'l': 0x1
      }, {
        'p': [-0xe0, 0x3c, -0x3d],
        's': [0xc, 0x2, 0x1d],
        'l': 0x1
      }, {
        'p': [-0xdc, 0x3c, -0x11],
        's': [0x4, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [-0xfb, 0x7c, -0x40],
        's': [0x10, 0x4, 0xa],
        'l': 0x1,
        'c': 0xb9b7b7
      }, {
        'p': [-0x117, 0x7c, -0x42],
        's': [0xc, 0x4, 0xe],
        'l': 0x1,
        'c': 0xc3c3c3
      }, {
        'p': [-0x116, 0x7c, -0x69],
        's': [0xe, 0x3, 0x8],
        'l': 0x1
      }, {
        'p': [-0x6d, 0x3c, -0x167],
        's': [0x22, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0x82, 0x4d, -0x9c],
        's': [0xe, 0x3, 0x6],
        'l': 0x1
      }, {
        'p': [0x165, 0x8b, -0x28],
        's': [0x10, 0x6, 0x10],
        'l': 0x1
      }, {
        'p': [-0x128, 0x3e, -0x119],
        's': [0x14, 0x4, 0x8],
        'l': 0x1
      }, {
        'p': [-0x143, 0x3e, -0x119],
        's': [0xe, 0x4, 0x8],
        'l': 0x1
      }, {
        'p': [0x9, 0x0, -0xb4],
        's': [0x4, 0x36, 0x4],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9, 0x2c, -0xaf],
        's': [0x2, 0x2, 0xc],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [-0x6a, 0x54, -0x60],
        's': [0xe, 0x6, 0x18],
        'l': 0x1
      }, {
        'p': [-0x6e, 0x54, -0x89],
        's': [0x6, 0x4, 0x18],
        'l': 0x1
      }, {
        'p': [-0x40, 0x54, -0x60],
        's': [0xe, 0x6, 0x18],
        'l': 0x1
      }, {
        'p': [-0x40, 0x54, -0xb8],
        's': [0xe, 0x6, 0x18],
        'l': 0x1
      }, {
        'p': [-0x3c, 0x54, -0x89],
        's': [0x6, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [-0xb6, 0x33, 0x37],
        's': [0x10, 0x4, 0x10],
        'l': 0x1
      }, {
        'p': [-0xfa, 0x33, 0x32],
        's': [0x10, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0xd4, 0x33, 0x32],
        's': [0x10, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0xfc, 0x33, 0x3c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x157, 0x20, -0x16c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xf3, 0x38, -0x124],
        's': [0x6, 0x1c, 0x6],
        't': 0x2
      }, {
        'p': [0xa, 0x18, 0x8],
        's': [0x12, 0x2, 0x4]
      }, {
        'p': [0x52, 0x18, 0x8],
        's': [0x14, 0x2, 0x4]
      }, {
        'p': [-0x23, 0x18, 0x8],
        's': [0x9, 0x1, 0x4]
      }, {
        'p': [-0x81, 0x18, -0x2c],
        's': [0x10, 0x2, 0x4]
      }, {
        'p': [-0xa4, 0x18, -0x2c],
        's': [0x10, 0x2, 0x4]
      }, {
        'p': [-0xaa, 0x18, -0x1f],
        's': [0x4, 0x2, 0x16]
      }, {
        'p': [-0xaa, 0x18, 0x4],
        's': [0x4, 0x2, 0xc]
      }, {
        'p': [-0xe3, 0x3e, -0x143],
        's': [0x14, 0x4, 0x42],
        'l': 0x1
      }, {
        'p': [-0x6c, 0x53, -0x59],
        's': [0x6, 0x1a, 0x6],
        't': 0x2
      }, {
        'p': [-0xfa, 0x2c, -0x7c],
        's': [0x4, 0x29, 0x4],
        't': 0x2
      }, {
        'p': [-0x118, 0x2c, -0x7c],
        's': [0x4, 0x28, 0x4],
        't': 0x2
      }, {
        'p': [-0x109, 0x4a, -0x75],
        's': [0x26, 0x2, 0x16],
        't': 0x2
      }, {
        'p': [-0x39, 0x42, -0xc9],
        's': [0xa, 0x6, 0x24],
        'l': 0x1
      }, {
        'p': [-0x39, 0x42, -0x104],
        's': [0xa, 0x4, 0x1a],
        'l': 0x1
      }, {
        'p': [-0x3d, 0x42, -0x134],
        's': [0x12, 0x4, 0x1a],
        'l': 0x1
      }, {
        'p': [-0x67, 0x42, -0x134],
        's': [0x12, 0x4, 0x1a],
        'l': 0x1
      }, {
        'p': [-0x6b, 0x42, -0xfb],
        's': [0xa, 0x4, 0x16],
        'l': 0x1
      }, {
        'p': [-0xa8, 0x3e, -0x10c],
        's': [0x8, 0x2, 0x14],
        'l': 0x1
      }, {
        'p': [-0x96, 0x3e, -0x10c],
        's': [0xc, 0x4, 0x14],
        'l': 0x1
      }, {
        'p': [-0x94, 0x3e, -0x130],
        's': [0x8, 0x4, 0x14],
        'l': 0x1
      }, {
        'p': [-0x94, 0x3e, -0x156],
        's': [0x8, 0x4, 0x1c],
        'l': 0x1
      }, {
        'p': [0x14f, 0x64, -0x5c],
        's': [0x6, 0x14, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0xc4, 0x33, -0x5b],
        's': [0x6, 0x14, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0xf3, 0x5e, -0x54],
        's': [0x2, 0x10, 0x6],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x127, 0x70, -0x24b],
        's': [0x2, 0xe, 0x6],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x13f, 0x70, -0x230],
        's': [0x5, 0xe, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0x131, 0x64, -0x3e],
        's': [0x2, 0x14, 0x6],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0x130, 0x4e, -0x206],
        's': [0x2, 0xe, 0x6],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0xcb, 0x46, -0x1fe],
        's': [0x5, 0xe, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0xb7, 0x46, -0x1fe],
        's': [0x5, 0xe, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0xa2, 0x46, -0x1fe],
        's': [0x5, 0xe, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0x26, 0x12, 0x34],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x12c, 0x31, -0x12d],
        's': [0x12, 0x4, 0x4],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xd2, 0x0, -0x9b],
        's': [0x4, 0x1, 0x6],
        'l': 0x1
      }, {
        'p': [-0xb1, 0x0, -0x102],
        's': [0x4, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0x10f, 0x0, -0x10e],
        's': [0x6, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0xf2, 0x0, -0x1af],
        's': [0x8, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0xae, 0x0, -0x193],
        's': [0x4, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [-0x9a, -0x1, -0x194],
        's': [0x8, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [-0x5, -0x1c, -0x189],
        's': [0x6, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0x133, 0x0, -0x1b7],
        's': [0x4, 0x1, 0x6],
        'l': 0x1
      }, {
        'p': [0x152, 0x0, -0xd4],
        's': [0x4, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [0x131, 0x0, -0xfe],
        's': [0x4, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [0xdf, 0x0, -0xe8],
        's': [0x8, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0xcb, 0x0, -0x11c],
        's': [0x8, 0x2, 0x4],
        'c': 0xacacac
      }, {
        'p': [0x65, 0x0, -0x163],
        's': [0x4, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [0xf, 0x0, -0x159],
        's': [0x4, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [0xf, 0x0, -0xd3],
        's': [0x4, 0x2, 0x8]
      }, {
        'p': [-0x32, 0x0, -0xaf],
        's': [0x6, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [0x61, 0x0, -0x57],
        's': [0x6, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [0x5e, 0x0, 0x0],
        's': [0xa, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x2b, 0x0, -0x1],
        's': [0x6, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [-0xb, 0x12, 0xf],
        's': [0xa, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x9a, 0x12, -0x26],
        's': [0x6, 0x1, 0x3],
        'l': 0x1
      }, {
        'p': [-0x6c, 0x12, -0x7],
        's': [0x4, 0x2, 0xa],
        'l': 0x1
      }, {
        'p': [-0x88, 0x0, -0x34],
        's': [0x8, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [0xa2, 0x0, -0x34],
        's': [0x3, 0x2, 0x5],
        'l': 0x1
      }, {
        'p': [0x2e, 0x0, -0x95],
        's': [0x6, 0x1, 0x5],
        'l': 0x1
      }, {
        'p': [-0x132, 0x0, -0x15d],
        's': [0x4, 0x1, 0x7],
        'l': 0x1
      }, {
        'p': [-0x14c, 0x0, -0x10e],
        's': [0x4, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [-0x3b, -0x1c, -0x145],
        's': [0x4, 0x2, 0x4]
      }, {
        'p': [-0x8d, -0x1c, -0x15f],
        's': [0x4, 0x2, 0x8]
      }, {
        'p': [-0xb6, 0x0, -0xda],
        's': [0x4, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [-0xda, 0x12, 0x2b],
        's': [0x8, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [-0x28, 0x12, 0x34],
        's': [0x6, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [0x77, 0x0, -0x95],
        's': [0x6, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0xc4, 0x0, -0x20c],
        's': [0x5, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [0xa0, 0x0, -0x46],
        's': [0x4, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x34, 0x0, -0xa3],
        's': [0x4, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0xfb, 0x0, -0x197],
        's': [0x4, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0x5, -0x1c, -0x198],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xfb, 0x0, -0x120],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': 0xc3c3c3
      }, {
        'p': [0x139, 0x0, -0x158],
        's': [0x3, 0x1, 0x4]
      }, {
        'p': [0x141, 0x0, -0x16c],
        's': [0x4, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0xca, 0x0, -0x5e],
        's': [0x4, 0x1, 0x4]
      }, {
        'p': [0x10, 0x0, -0x108],
        's': [0x4, 0x1, 0x6]
      }, {
        'p': [0x25, 0x0, -0x133],
        's': [0x4, 0x6, 0x26]
      }, {
        'p': [0x5e, 0x0, -0x145],
        's': [0x16, 0x6, 0x4]
      }, {
        'p': [0x6b, 0x0, -0x13a],
        's': [0x4, 0x6, 0x1a]
      }, {
        'p': [0x25, 0x6, -0x13c],
        's': [0x4, 0x2, 0xa]
      }, {
        'p': [0x6b, 0x6, -0x141],
        's': [0x4, 0x2, 0xc]
      }, {
        'p': [0x63, 0x6, -0x145],
        's': [0xc, 0x4, 0x4]
      }, {
        'p': [0x4c, 0x0, -0x145],
        's': [0xe, 0x2, 0x4]
      }, {
        'p': [0x9, 0x2f, -0xab],
        's': [0x4, 0x4, 0xe],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x55, -0x1, -0xe2],
        's': [0x6, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0x41, -0x1, -0xc8],
        's': [0x6, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x7c, 0x3d, -0x72],
        's': [0x16, 0x4, 0x4],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x16, 0x2d, -0x15f],
        's': [0x6, 0xe, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0x33, 0x2d, -0x15f],
        's': [0x6, 0xe, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0x4f, 0x2d, -0x15f],
        's': [0x6, 0xe, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x3f, 0x44, -0x1c8],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [-0x73, 0x39, -0x72],
        's': [0xe, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -0.7],
        't': 0x2
      }, {
        'p': [0x5b, 0x4d, -0xaf],
        's': [0x64, 0x2, 0x2c],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x6b, 0xa, -0x1d5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xcb, -0x1c, -0x19d],
        's': [0x5b, 0x56, 0x10],
        'bo': 0x1
      }, {
        'p': [0xa5, 0x3a, -0x19d],
        's': [0xb, 0x6, 0x10],
        'l': 0x1
      }, {
        'p': [0xb3, 0x10, -0x1cd],
        's': [0x14, 0x2, 0x4]
      }, {
        'p': [0x158, 0x32, -0xc4],
        's': [0xc, 0x3, 0x12],
        'l': 0x1,
        'c': '#b1b1b1'
      }, {
        'p': [0x154, 0x32, -0xa0],
        's': [0x4, 0x2, 0x12],
        'l': 0x1,
        'c': '#b9b9b9'
      }, {
        'p': [0x154, 0x32, -0x7b],
        's': [0x4, 0x4, 0x16],
        'l': 0x1,
        'c': '#b9b9b9'
      }, {
        'p': [0x142, -0x1, -0x191],
        's': [0x14, 0x2, 0x60],
        'c': 0xa7a7a7,
        't': 0x1
      }, {
        'p': [0x90, 0x3a, -0x126],
        's': [0x19, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [0x131, 0x2d, -0x12d],
        's': [0xe, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -0.7],
        't': 0x2
      }, {
        'p': [0x55, 0x3e, -0x1c5],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [-0x16, 0x41, -0x20b],
        's': [0x12, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [0x10, 0x41, -0x20b],
        's': [0x14, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x92, 0x0, -0x1db],
        's': [0x8, 0x1a, 0x2],
        'i': 0x3,
        't': 0x2,
        'd': 0x1
      }, {
        'p': [-0xd2, 0x0, -0x114],
        's': [0x4c, 0x5, 0x2],
        'c': 0xc8c8c8
      }, {
        'p': [-0xd2, 0x0, -0x11c],
        's': [0x4c, 0x4, 0xe],
        'l': 0x1,
        'c': 0x1d3d5a,
        'o': 0.8,
        't': 0x5
      }, {
        'p': [-0xfd, 0x0, -0x10d],
        's': [0x4, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0xaf, 0x0, -0x10e],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x12e, 0x0, -0xe8],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x80, 0x0, -0x73],
        's': [0x6, 0x2, 0x42],
        't': 0x2
      }, {
        'p': [-0x79, 0x0, -0x72],
        's': [0x6, 0x2, 0x42],
        'c': 0xcacaca,
        't': 0x2
      }, {
        'p': [-0x84, 0x2, -0x71],
        's': [0x6, 0x2, 0x42],
        't': 0x2
      }, {
        'p': [-0x7d, 0x2, -0x72],
        's': [0x6, 0x2, 0x42],
        't': 0x2
      }, {
        'p': [-0x80, 0x4, -0x70],
        's': [0x6, 0x2, 0x42],
        'c': 0xc0c0c0,
        't': 0x2
      }, {
        'p': [-0x87, 0x0, -0x70],
        's': [0x6, 0x2, 0x42],
        'c': 0xbbbbbb,
        't': 0x2
      }, {
        'p': [-0x84, 0x26, -0x72],
        's': [0x1, 0x19, 0x1],
        'l': 0x1,
        'c': 0xb1b1b1,
        't': 0x2
      }, {
        'p': [-0xc4, 0x2e, -0xbf],
        's': [0x22, 0x1f, 0x4c],
        'bo': 0x1
      }, {
        'p': [-0xb7, 0x28, -0x9d],
        's': [0x2, 0x6, 0x2],
        'l': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [-0xc0, 0x2a, -0x9d],
        's': [0x2, 0x6, 0x2],
        'l': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [-0xc9, 0x29, -0x9d],
        's': [0x2, 0x6, 0x2],
        'l': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [-0xd1, 0x28, -0x9d],
        's': [0x2, 0x6, 0x2],
        'l': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [-0xc0, 0x29, -0xe3],
        's': [0x2, 0x6, 0x2],
        'l': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [-0xb7, 0x28, -0xe3],
        's': [0x2, 0x6, 0x2],
        'l': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [-0xc9, 0x2a, -0xe3],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [-0xd1, 0x28, -0xe3],
        's': [0x2, 0x6, 0x2],
        'l': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [-0x1ba, 0x0, 0x9d],
        's': [0x3e, 0xce, 0x48],
        'l': 0x1
      }, {
        'p': [-0x1a2, 0xce, 0x81],
        's': [0xe, 0x6, 0x10],
        'l': 0x1
      }, {
        'p': [-0x19e, 0xce, 0x9d],
        's': [0x6, 0x6, 0x16],
        'l': 0x1
      }, {
        'p': [-0x19e, 0xce, 0xba],
        's': [0x6, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [-0x1bc, 0xce, 0x7b],
        's': [0x14, 0x6, 0x4],
        'l': 0x1
      }, {
        'p': [-0x1d4, 0xce, 0x7b],
        's': [0xa, 0x6, 0x4],
        'l': 0x1
      }, {
        'p': [-0x1ba, 0xa3, 0x79],
        's': [0x8, 0x14, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0xb2, 0xd, 0x5d],
        's': [0x4, 0x4a, 0x4],
        't': 0x2
      }, {
        'p': [-0xfe, 0xd, 0x5d],
        's': [0x4, 0x4a, 0x4],
        't': 0x2
      }, {
        'p': [-0x13, 0x40, 0x4a],
        's': [0x3c, 0xc, 0x26],
        'bo': 0x1
      }, {
        'p': [0x7b, 0x4c, 0x39],
        's': [0x1c, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [0x46, 0x4c, 0x39],
        's': [0x22, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0x15, 0x4c, 0x39],
        's': [0x1a, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [-0x29, 0x4c, 0x39],
        's': [0xc, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x4b, 0x4c, 0x39],
        's': [0x10, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x7f, 0x4c, 0x39],
        's': [0x1a, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [-0x13, 0x0, 0x49],
        's': [0x3c, 0x40, 0x2],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x2e, 0x12, 0x3d],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xd, 0x20, 0x47],
        's': [0x4, 0x4, 0x2],
        'l': 0x1,
        'c': 0x2f2f2f,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x1a, 0x20, 0x47],
        's': [0x4, 0x4, 0x2],
        'l': 0x1,
        'c': 0x2f2f2f,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x13, 0x3f, 0x30],
        's': [0x4, 0x4, 0x10],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x38, 0x3f, 0x30],
        's': [0x4, 0x4, 0x10],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x38, 0x3b, 0x35],
        's': [0x2, 0x2, 0xc],
        'l': 0x1,
        'r': [0.87, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [0x13, 0x3b, 0x35],
        's': [0x2, 0x2, 0xc],
        'l': 0x1,
        'r': [0.87, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [-0x8b, 0x12d, 0x195],
        's': [0x6e, 0x42, 0x56],
        't': 0x5
      }, {
        'p': [-0x49, 0x119, 0x169],
        's': [0x46, 0x2a, 0x38],
        't': 0x5
      }, {
        'p': [-0x20f, 0x19c, 0x175],
        's': [0x92, 0x5a, 0x74],
        't': 0x5
      }, {
        'p': [-0x23b, 0x171, 0x129],
        's': [0x76, 0x48, 0x5e],
        't': 0x5
      }, {
        'p': [0x2a1, 0x13f, 0x78],
        's': [0x6e, 0x42, 0x56],
        't': 0x5
      }, {
        'p': [0x1e5, 0x151, 0xe2],
        's': [0x92, 0x58, 0xc6],
        't': 0x5
      }, {
        'p': [0x14e, 0x151, 0x5f],
        's': [0x3a, 0x1e, 0x61],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x362, 0x143, -0x115],
        's': [0x92, 0x5a, 0xc4],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x39e, 0x12f, -0x204],
        's': [0x7a, 0x4c, 0xa0],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x7ce, 0x168, -0x23],
        's': [0x104, 0x4c, 0x170],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x639, 0x18d, -0x8c],
        's': [0xda, 0x84, 0x100],
        't': 0x5
      }, {
        'p': [0x639, 0x179, -0x10b],
        's': [0x76, 0x48, 0x5c],
        't': 0x5
      }, {
        'p': [-0x82, 0xea, -0x392],
        's': [0x92, 0x5a, 0x74],
        't': 0x5
      }, {
        'p': [-0x2e, 0xcc, -0x3b8],
        's': [0x76, 0x4a, 0x5e],
        't': 0x5
      }, {
        'p': [0x62, 0xcc, -0x3b8],
        's': [0x60, 0x26, 0x30],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x2df, 0x16b, -0x4e1],
        's': [0xe0, 0x68, 0xb2],
        't': 0x5
      }, {
        'p': [0xba, 0x107, 0x1f4],
        's': [0x68, 0x3a, 0x70],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x51, 0x107, 0x1f4],
        's': [0x30, 0x1c, 0x34],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x231, 0xcc, -0x353],
        's': [0x76, 0x4a, 0x5e],
        't': 0x5
      }, {
        'p': [-0x16, -0x1c, -0x206],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x22, -0x10, -0x206],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x1f, -0x1c, -0x203],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x3c, -0x1c, -0x1a9],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x3f, -0x1c, -0x203],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x3f, -0x1c, -0x1f7],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x36, -0x1c, -0x206],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xda, 0x46, -0x21d],
        's': [0x2, 0xe, 0x6],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0xd, 0x4c, 0x39],
        's': [0xa, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [-0x13, 0x46, 0x66],
        's': [0xdc, 0x28, 0x3a],
        'c': 0xbbbbbb,
        'bo': 0x1
      }, {
        'p': [0x59, 0x6e, 0x6c],
        's': [0x4, 0x4, 0x12],
        'l': 0x1,
        'c': 0xd2cbcb
      }, {
        'p': [-0x77, 0x6e, 0x50],
        's': [0x14, 0x4, 0xe],
        'l': 0x1,
        'c': 0xbbbbbb
      }, {
        'p': [0x24, 0x6e, 0x4b],
        's': [0x10, 0x4, 0x4],
        'l': 0x1,
        'c': 0xbebcbc
      }, {
        'p': [-0x2, 0x6e, 0x4b],
        's': [0x18, 0x2, 0x4],
        'l': 0x1,
        'c': 0xc0bcbc
      }, {
        'p': [-0x4e, 0x6e, 0x4b],
        's': [0xe, 0x2, 0x4],
        'l': 0x1,
        'c': 0x9d9d9d
      }, {
        'p': [-0x2c, 0x6e, 0x4b],
        's': [0xe, 0x4, 0x4],
        'l': 0x1,
        'c': 0xc5c5c5
      }, {
        'p': [0x51, 0x6e, 0x50],
        's': [0x14, 0x4, 0xe],
        'l': 0x1,
        'c': 0xbbbbbb
      }, {
        'p': [-0x7f, 0x6e, 0x6c],
        's': [0x4, 0x4, 0x12],
        'l': 0x1,
        'c': 0xb1b1b1
      }, {
        'p': [-0x79, 0x63, 0x46],
        's': [0x4, 0x4, 0x8],
        't': 0x2
      }, {
        'p': [0x52, 0x63, 0x46],
        's': [0x4, 0x4, 0x8],
        't': 0x2
      }, {
        'p': [0x5c, 0x63, 0x52],
        's': [0xc, 0x4, 0x4],
        't': 0x2
      }, {
        'p': [-0x83, 0x63, 0x52],
        's': [0xa, 0x4, 0x4],
        't': 0x2
      }, {
        'p': [0x124, 0x2d, -0x71],
        's': [0x3c, 0x2, 0x14],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x108, 0x0, -0x79],
        's': [0x2, 0x31, 0x2],
        't': 0x2
      }, {
        'p': [0xc, -0x1c, -0x1cd],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x8a, -0x1c, -0x1c8],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x14, 0x30, -0x1b1],
        's': [0x1c, 0x4, 0xe],
        'l': 0x1
      }, {
        'p': [0x14, 0x30, -0x1c5],
        's': [0x1c, 0x2, 0xa],
        'l': 0x1
      }, {
        'p': [0xa1, -0x1c, -0x1a8],
        's': [0x4, 0x2a, 0x6]
      }, {
        'p': [-0x6d, 0x28, -0x194],
        's': [0x4, 0x4, 0xe],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x6d, 0x25, -0x190],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [0x14, 0x22, -0x1cd],
        's': [0x4, 0x4, 0x14],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x14, 0x20, -0x1cd],
        's': [0x2, 0x2, 0xc],
        'l': 0x1,
        'r': [0.87, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [0x15, -0x1c, -0x1d0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x15, -0x10, -0x1d0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xfd, 0x39, -0x22f],
        's': [0x4a, 0x20, 0x2],
        'c': 0x695b48,
        't': 0x5
      }, {
        'p': [-0x11e, 0x34, -0x232],
        's': [0x4, 0x28, 0x4],
        't': 0x2
      }, {
        'p': [-0xdd, 0x34, -0x232],
        's': [0x4, 0x28, 0x4],
        't': 0x2
      }, {
        'p': [0x104, 0x33, -0x238],
        's': [0x4a, 0x20, 0x2],
        'c': 0x705b4d,
        't': 0x5
      }, {
        'p': [0x104, 0x43, -0x236],
        's': [0x45, 0x0, 0x1d],
        'i': 0xb,
        'l': 0x1,
        'r': [1.57, 0x0, 0x0]
      }, {
        'p': [-0x102, 0x45, -0x12],
        's': [0x2, 0x1a, 0x3e],
        'c': 0x695743,
        't': 0x5
      }, {
        'p': [-0x100, 0x52, -0x12],
        's': [0x39, 0x0, 0x17],
        'i': 0xb,
        'l': 0x1,
        'r': [1.57, 0x0, 1.57]
      }, {
        'p': [0x48, 0x0, -0x115],
        's': [0x40, 0x29, 0x5a],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [-0x11b, 0xa, -0x1f9],
        's': [0x45, 0x29, 0x4e],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0xae, 0xa, -0x1f8],
        's': [0x8e, 0x29, 0x4e],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [-0x88, 0x12, -0x10],
        's': [0x3b, 0x29, 0x31],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0x150, 0x4f, -0x12f],
        's': [0x36, 0x2, 0x6e],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x138, 0x3c, -0xfb],
        's': [0x4, 0x19, 0x4],
        't': 0x2
      }, {
        'p': [0x138, 0x3e, -0x163],
        's': [0x4, 0x19, 0x4],
        't': 0x2
      }, {
        'p': [0x168, 0x3d, -0x163],
        's': [0x4, 0x18, 0x4],
        't': 0x2
      }, {
        'p': [0x168, 0x3d, -0xfb],
        's': [0x4, 0x1a, 0x4],
        't': 0x2
      }, {
        'p': [0x101, 0x2f, -0x160],
        's': [0x12, 0x4, 0x4],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xfc, 0x2c, -0x160],
        's': [0xe, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, 0.7],
        't': 0x2
      }, {
        'p': [0xd5, 0x0, -0x61],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xd2, 0x38, -0x124],
        's': [0x6, 0x1e, 0x6],
        't': 0x2
      }, {
        'p': [0xf3, 0x38, -0x146],
        's': [0x6, 0x1d, 0x6],
        't': 0x2
      }, {
        'p': [0xd2, 0x38, -0x146],
        's': [0x6, 0x1a, 0x6],
        't': 0x2
      }, {
        'p': [0xe3, 0x4d, -0x135],
        's': [0x2a, 0x2, 0x2b],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x89, 0x38, -0x124],
        's': [0x6, 0x16, 0x6],
        't': 0x2
      }, {
        'p': [-0xb, -0x1c, -0x202],
        's': [0x6, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0x115, 0xa, -0x21c],
        's': [0x8, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [0x2, -0x1c, -0x1c0],
        's': [0x6, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x93, 0x3e, -0x105],
        's': [0x4, 0xc, 0x4],
        't': 0x2
      }, {
        'p': [-0xa9, 0x3e, -0x105],
        's': [0x4, 0xf, 0x4],
        't': 0x2
      }, {
        'p': [-0xa9, 0x3e, -0x11e],
        's': [0x4, 0xb, 0x4],
        't': 0x2
      }, {
        'p': [-0x93, 0x3e, -0x11f],
        's': [0x4, 0xd, 0x4],
        't': 0x2
      }, {
        'p': [-0x9e, 0x46, -0x112],
        's': [0x1c, 0x1, 0x20],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x76, 0x3d, -0xc5],
        's': [0x30, 0x57, 0x2f],
        'c': 0xa7a7a7
      }, {
        'p': [-0x77, 0x60, -0xc5],
        's': [0x55, 0x2, 0x2e],
        't': 0x2
      }, {
        'p': [-0x9f, 0x48, -0xda],
        's': [0x3, 0x1e, 0x3],
        't': 0x2
      }, {
        'p': [-0x8f, 0x48, -0xda],
        's': [0x3, 0x1c, 0x3],
        't': 0x2
      }, {
        'p': [-0x8f, 0x48, -0xb0],
        's': [0x3, 0x1d, 0x3],
        't': 0x2
      }, {
        'p': [-0x9f, 0x48, -0xb0],
        's': [0x3, 0x1c, 0x3],
        't': 0x2
      }, {
        'p': [0x107, 0x23, -0x160],
        's': [0x1, 0xd, 0x1],
        'l': 0x1,
        'c': 0xb1b1b1,
        't': 0x2
      }, {
        'p': [-0x6d, 0x1c, -0x199],
        's': [0x1, 0xd, 0x1],
        'l': 0x1,
        'c': 0xb1b1b1,
        't': 0x2
      }, {
        'p': [-0xae, 0x0, -0x1d8],
        's': [0x6, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [-0x93, 0x12, 0x34],
        's': [0x6, 0x1, 0x5],
        'l': 0x1
      }, {
        'p': [0xc8, 0xdc, -0x38f],
        's': [0xae, 0x4a, 0x9b],
        't': 0x5
      }, {
        'p': [0x5c, 0x4c, -0x164],
        's': [0x6, 0x11, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x30, 0x3b, -0x169],
        's': [0x6, 0xe, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0xe4, 0x30, -0x89],
        's': [0xa, 0x3, 0xb],
        'l': 0x1
      }, {
        'p': [0x25, 0x0, -0xa0],
        's': [0x8, 0xd, 0x4]
      }, {
        'p': [0x1d, 0x0, -0xa0],
        's': [0x8, 0x6, 0x4]
      }, {
        'p': [0x7, 0x0, -0xad],
        's': [0x4, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [-0x4f, 0x42, -0xda],
        's': [0x3, 0x21, 0x3],
        't': 0x2
      }, {
        'p': [-0x4f, 0x54, -0xb1],
        's': [0x3, 0x11, 0x3],
        't': 0x2
      }, {
        'p': [-0x5d, 0x54, -0xb1],
        's': [0x3, 0x11, 0x3],
        't': 0x2
      }, {
        'p': [-0x5d, 0x42, -0xda],
        's': [0x3, 0x23, 0x3],
        't': 0x2
      }, {
        'p': [-0x60, 0x94, -0xc5],
        's': [0x4, 0x3, 0xb],
        'l': 0x1,
        'c': 0xa7a7a7
      }, {
        'p': [-0x8c, 0x94, -0xca],
        's': [0x4, 0x3, 0xf],
        'l': 0x1,
        'c': 0x898989
      }, {
        'p': [-0x89, 0x94, -0xb2],
        's': [0xa, 0x3, 0x9],
        'l': 0x1,
        'c': 0xafafaf
      }, {
        'p': [-0x63, 0x94, -0xb2],
        's': [0xa, 0x3, 0x9],
        'l': 0x1,
        'c': 0xb6b2b2
      }, {
        'p': [-0x63, 0x94, -0xd8],
        's': [0xa, 0x4, 0x9],
        'l': 0x1,
        'c': 0xa7a7a7
      }, {
        'p': [-0x75, 0x94, -0xda],
        's': [0xc, 0x2, 0x5],
        'l': 0x1,
        'c': 0xb6b6b6
      }, {
        'p': [-0x8a, 0x94, -0xd9],
        's': [0x8, 0x3, 0x7],
        'l': 0x1,
        'c': 0x9b9b9b
      }, {
        'p': [-0x78, 0x94, -0xb0],
        's': [0x9, 0x2, 0x5],
        'l': 0x1,
        'c': 0xafafaf
      }, {
        'p': [-0x76, 0x75, -0xc5],
        's': [0x32, 0x10, 0x5],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x76, 0x75, -0xc5],
        's': [0x5, 0x10, 0x31],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x2b, 0x2b, -0x12a],
        's': [0x12, 0x4, 0x4],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x30, 0x27, -0x12a],
        's': [0xe, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, 0.7],
        'c': 0xe6e6e6,
        't': 0x2
      }, {
        'p': [-0x25, 0x1f, -0x12a],
        's': [0x1, 0xd, 0x1],
        'l': 0x1,
        'c': 0xb1b1b1,
        't': 0x2
      }, {
        'p': [-0xd4, 0x32, -0x3f],
        's': [0xe, 0x4, 0x4],
        't': 0x2
      }, {
        'p': [-0xa6, 0x0, -0x96],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x16, 0x2a, -0x15e],
        's': [0x9, 0x3, 0x3],
        'c': 0xe3e3e3,
        'bo': 0x1
      }, {
        'p': [0x33, 0x2a, -0x15e],
        's': [0x9, 0x3, 0x3],
        'bo': 0x1
      }, {
        'p': [0x4f, 0x2a, -0x15e],
        's': [0x9, 0x3, 0x3],
        'bo': 0x1
      }, {
        'p': [0xb7, 0x43, -0x1fd],
        's': [0x9, 0x3, 0x3],
        'bo': 0x1
      }, {
        'p': [0xcb, 0x43, -0x1fd],
        's': [0x9, 0x3, 0x3],
        'bo': 0x1
      }, {
        'p': [0xa2, 0x43, -0x1fd],
        's': [0x9, 0x3, 0x3],
        'bo': 0x1
      }, {
        'p': [-0x36, 0x0, -0x73],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [-0x36, 0x0, -0x79],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0x8, 0x12, 0x45],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0x132, 0x0, -0x141],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0xfb, 0x0, -0x160],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [-0xa0, 0x0, -0x96],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [-0x9a, 0x0, -0x96],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0x47, 0x0, -0x159],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x77, 0x12, -0x27],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [-0x49, 0x11, 0x10],
        's': [0x5, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x74, 0x0, -0xe9],
        's': [0x4, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0xa9, 0x3e, -0x189],
        's': [0x6, 0xc, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0xae, 0x0, -0x1c],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0xae, 0x0, -0x17],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0xb0, 0x0, -0x10],
        's': [0x2, 0x13, 0x4],
        't': 0x2
      }, {
        'p': [0x70, 0x0, -0xd1],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [0x37, -0x1, -0xff],
        's': [0x6, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [0x38, 0x0, -0xf9],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0x3e, 0x0, -0x15c],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0x56, 0x0, -0x129],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0x56, 0x0, -0x124],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [-0xdc, 0x0, -0x68],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0xe3, 0x0, -0x8b],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0x4e, 0x0, -0xcb],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [-0xad, 0x0, -0x46],
        's': [0x4, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [0xa9, 0x0, 0x11],
        's': [0x6, 0x2, 0x8],
        'l': 0x1
      }, {
        'p': [0x93, 0x0, 0x1c],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x121, 0xa, -0x21e],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0x127, 0xa, -0x21e],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [-0xb5, 0x0, -0x1d9],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [-0x34, 0x15, -0x10d],
        's': [0x1, 0xf, 0x6],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x34, 0x1d, -0xda],
        's': [0x1, 0xf, 0x6],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x35, 0x12, -0x10d],
        's': [0x6, 0x3, 0x9],
        'l': 0x1,
        'c': 0xe3e3e3
      }, {
        'p': [-0x35, 0x1a, -0xda],
        's': [0x6, 0x3, 0x9],
        'l': 0x1,
        'c': 0xe3e3e3
      }, {
        'p': [0xd9, 0x43, -0x21d],
        's': [0x6, 0x3, 0x9],
        'c': 0xe3e3e3,
        'bo': 0x1
      }, {
        'p': [0x130, 0x4c, -0x206],
        's': [0x6, 0x3, 0x9],
        'c': 0xb1b1b1,
        'bo': 0x1
      }, {
        'p': [0x5a, 0x2c, -0xc3],
        's': [0x10, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0x7f, 0x2c, -0xc3],
        's': [0x1a, 0x4, 0x4],
        'l': 0x1
      }, {
        'p': [0x42, 0x2c, -0xc3],
        's': [0xc, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [-0x13d, 0x0, -0x19f],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [-0x35, 0x0, -0x9f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d5e371'
      }, {
        'p': [-0x36, 0x0, -0xa9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.04, -3.14],
        'c': '#d5e371'
      }, {
        'p': [0x24, 0x0, -0xa5],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#d5e371'
      }, {
        'p': [0x25, 0x0, -0xaf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.18, 0x0],
        'c': '#d5e371'
      }, {
        'p': [0x5, 0x0, -0xbc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.09, -3.14],
        'c': '#d5e371'
      }, {
        'p': [-0x2a, 0x0, -0x39],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.18, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [-0x9, 0x0, 0x2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.18, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [-0x13, 0x0, -0x1a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.18, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0x15, 0x0, -0x15a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [0x3b, 0x0, -0x158],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0x50, 0x0, -0xd4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0x1d, 0x0, -0x15a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0]
      }, {
        'p': [0x81, 0x0, -0x11e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0x65, 0x0, -0x13e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0x3b, 0x0, -0xf3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.04, 0x0]
      }, {
        'p': [0x8b, 0x0, -0xe7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [-0x2a, -0x1c, -0x163],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.18, 0x0]
      }, {
        'p': [-0x5, -0x1c, -0x15b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0]
      }, {
        'p': [-0x56, -0x1c, -0x145],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.34, 0x0]
      }, {
        'p': [-0x104, 0x0, -0x10d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x12a, 0x0, -0xec],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x133, 0x0, -0x113],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xb6, 0x0, -0x10f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [-0xb0, 0x0, -0x108],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xd9, 0x0, -0x88],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [-0xd6, 0x0, -0x48],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [-0x93, 0x0, -0x95],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [-0x6d, 0x0, -0x3e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [-0x6d, 0x12, -0x19],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [-0xd7, 0x12, 0x13],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [-0xe6, 0x12, 0x2b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.7, 0x0]
      }, {
        'p': [-0x2e, 0x12, 0x36],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.22, -3.14]
      }, {
        'p': [0xa, 0x12, 0x36],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x30, 0x12, 0x10],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.7, 0x0]
      }, {
        'p': [0xa0, 0x0, -0x3e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0]
      }, {
        'p': [0xa9, 0x0, -0x1b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0xa2, 0x0, 0x14],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0xad, 0x0, 0xb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.38, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0xa6, 0x0, -0x5c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.34, 0x0]
      }, {
        'p': [0x7e, 0x0, -0x96],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.34, 0x0]
      }, {
        'p': [0x7f, 0x0, -0x41],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0x86, 0x0, -0x46],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0x80, 0x0, -0x4d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.23, 3.14],
        'c': '#c9d47c'
      }, {
        'p': [0x60, 0x0, -0x2e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0x82, 0x0, -0x47],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xae, 0x0, 0x14],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0xb, 0x0, 0x3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0xce, 0x0, -0xda],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.34, 0x0]
      }, {
        'p': [0xd0, 0x0, -0xba],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.51, 0x0]
      }, {
        'p': [0xae, 0x0, -0x9c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.51, 0x0]
      }, {
        'p': [0x65, 0x0, 0x2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0]
      }, {
        'p': [0xcd, 0x0, -0x117],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0xed, 0x0, -0x11b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.88, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0x133, -0x1, -0xf7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.41, 3.14],
        'c': '#c9d47c'
      }, {
        'p': [0xfd, 0x0, -0x6c],
        's': [0x6, 0x1, 0x6],
        'l': 0x1
      }, {
        'p': [0x132, 0x0, -0x13c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0x112, 0x0, -0x15e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.13, -1.41, -3.13]
      }, {
        'p': [0x140, 0x1, -0x1b8],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14]
      }, {
        'p': [0x140, 0x1, -0x1a4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0]
      }, {
        'p': [0x13f, 0x1, -0x1ae],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.56, 0x0]
      }, {
        'p': [0x142, 0x1, -0x174],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.04, 0x0]
      }, {
        'p': [0x13e, 0x1, -0x181],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.39, 0x0]
      }, {
        'p': [0x146, 0x1, -0x185],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [0x149, 0x1, -0x169],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [0xfb, 0x0, -0x165],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14]
      }, {
        'p': [0x147, 0x1, -0x1a6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.39, 0x0]
      }, {
        'p': [0x13e, 0x1, -0x18b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.18, 3.14]
      }, {
        'p': [0x146, 0x1, -0x1b2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-0.1, -1.56, -0.1]
      }, {
        'p': [0x12d, 0xa, -0x21d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14]
      }, {
        'p': [0xde, 0xa, -0x1ff],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14]
      }, {
        'p': [0xdd, 0xa, -0x1d3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14]
      }, {
        'p': [-0x28, -0x1c, -0x16a],
        's': [0x4, 0x1, 0x6]
      }, {
        'p': [-0xd6, 0x0, -0x44],
        's': [0x2, 0x1, 0x2],
        'l': 0x1
      }, {
        'p': [-0x118, 0x0, -0x128],
        's': [0x3, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [0xc3, 0x0, -0x11c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [0x131, 0x0, -0x133],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.88, 0x0],
        'c': '#c9d47c'
      }, {
        'p': [0xa4, -0x1c, -0x1ad],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.36, -3.14]
      }, {
        'p': [0x69, -0x1c, -0x1c8],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.88, -3.14]
      }, {
        'p': [0x81, -0x1c, -0x1c7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.88, -3.14]
      }, {
        'p': [0xde, 0xa, -0x211],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14]
      }, {
        'p': [0xdc, 0xa, -0x21f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.51, -3.14]
      }, {
        'p': [0x3d, -0x1d, -0x1b3],
        's': [0x6, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0x114, 0x0, -0x15a],
        's': [0x2, 0x1, 0x3],
        'l': 0x1
      }, {
        'p': [0x86, 0x0, -0x4d],
        's': [0x2, 0x1, 0x3],
        'l': 0x1
      }, {
        'p': [-0x9d, 0x0, -0x93],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0xf7, 0x0, -0x10f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [0x32, -0x1c, -0x1a7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.88, -3.14]
      }, {
        'p': [0x35, -0x1c, -0x1ff],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14]
      }, {
        'p': [0x31, -0x1c, -0x205],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.51, 0x0]
      }, {
        'p': [-0xf, -0x1c, -0x205],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.06, 0x0]
      }, {
        'p': [-0x15, -0x1c, -0x200],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.16, 0x0]
      }, {
        'p': [-0x20, -0x1c, -0x1f9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.56, -3.14]
      }, {
        'p': [0x6, -0x1c, -0x1ce],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.21, -3.14]
      }, {
        'p': [0xb, 0x0, -0xba],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.04, -3.14],
        'c': '#d5e371'
      }, {
        'p': [0x3, -0x1c, -0x13b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0]
      }, {
        'p': [-0x6, -0x1c, -0x13e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.39, 0x0]
      }, {
        'p': [0x2, -0x1c, -0x15b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.22, 0x0]
      }, {
        'p': [-0x43, -0x1c, -0x145],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.34, 0x0]
      }, {
        'p': [0x3, -0x1c, -0x1a6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.21, -3.14]
      }, {
        'p': [-0xbb, 0x0, -0x1dd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [-0x13c, 0x0, -0x170],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [-0x13c, 0x0, -0x178],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x13b, 0x0, -0x19a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.7, -3.14]
      }, {
        'p': [-0xaf, 0x0, -0x18e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.7, 3.14]
      }, {
        'p': [-0xba, 0x0, -0x1f3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.7, 3.14]
      }, {
        'p': [-0xf5, 0x0, -0x168],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.7, 3.14]
      }, {
        'p': [-0x2, -0x1c, -0x1a1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.16, -3.14]
      }, {
        'p': [-0xf9, 0x0, -0x1b2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.7, -3.14]
      }, {
        'p': [-0xc2, 0x0, -0x1dc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.52, 3.14]
      }, {
        'p': [0x85, 0x0, -0xe0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [0x125, 0x27, -0x12d],
        's': [0x1, 0xa, 0x1],
        'l': 0x1,
        'c': 0xb1b1b1,
        't': 0x2
      }, {
        'p': [-0xa5, 0x12, -0x21],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [0x47, 0x0, -0x112],
        's': [0x39, 0x1a, 0x19],
        'i': 0x13,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x47, 0x0, -0x112],
        's': [0x19, 0x2, 0x39],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x47, 0x18, -0x112],
        's': [0x19, 0x2, 0x39],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x3b, 0x2, -0x112],
        's': [0x1, 0x16, 0x39],
        'pe': 0x1,
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x53, 0x2, -0x112],
        's': [0x1, 0x16, 0x39],
        'pe': 0x1,
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x47, -0x1, -0x112],
        's': [0x16, 0x2, 0x36],
        'c': 0x752717,
        't': 0x5
      }, {
        'p': [-0x34, -0x1c, -0x142],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0]
      }, {
        'p': [-0x30, -0x1c, -0x13b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.7, 3.14]
      }, {
        'p': [0x57, 0x0, -0x11f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [0xfb, 0x0, -0x19e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14]
      }, {
        'p': [0x44, 0x0, -0x72],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0xe4, 0x30, -0x7c],
        's': [0xa, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [0xdf, 0x0, -0x8f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.34, 0x0]
      }, {
        'p': [0x105, 0x0, -0x141],
        's': [0x39, 0x1a, 0x19],
        'i': 0x13,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x105, 0x0, -0x141],
        's': [0x19, 0x2, 0x39],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x105, 0x18, -0x141],
        's': [0x19, 0x2, 0x39],
        'pe': 0x1,
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x111, 0x2, -0x141],
        's': [0x1, 0x16, 0x39],
        'pe': 0x1,
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0xf9, 0x2, -0x141],
        's': [0x1, 0x16, 0x37],
        'pe': 0x1,
        't': 0x5
      }, {
        'p': [0x105, 0x0, -0x141],
        's': [0x17, 0x1, 0x36],
        'c': 0x913c31,
        't': 0x5
      }, {
        'p': [0x113, 0x0, -0x123],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.19, -3.14],
        'c': '#c9d47c'
      }, {
        'p': [-0xca, 0x0, -0x1e5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xbe, 0xc, -0x1e5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xbb, 0x0, -0x1ee],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x9c, 0x0, -0x202],
        's': [0x39, 0x1a, 0x19],
        'i': 0x13,
        'l': 0x1
      }, {
        'p': [-0x9c, 0x0, -0x20f],
        's': [0x39, 0x34, 0x2],
        'c': 0x1b1b1b,
        't': 0x5
      }, {
        'p': [-0x99, 0x0, -0x202],
        's': [0x3f, 0x1, 0x17],
        'c': 0x1b1b1b,
        't': 0x5
      }, {
        'p': [-0xd9, 0x0, -0x220],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.52, 3.14]
      }, {
        'p': [-0xbb, 0x0, -0x20c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.52, 3.14]
      }, {
        'p': [-0x9b, 0x1, -0x1f6],
        's': [0x36, 0x18, 0x2],
        'v': 0x1,
        'c': 0x1b1b1b,
        't': 0x5
      }, {
        'p': [-0x9b, 0x18, -0x202],
        's': [0x39, 0x2, 0x19],
        'pe': 0x1,
        'v': 0x1,
        'c': 0x1b1b1b,
        't': 0x5
      }, {
        'p': [-0xf5, 0x0, -0x1c5],
        's': [0x4, 0xb, 0x17]
      }, {
        'p': [0x144, -0x12, -0x9e],
        's': [0x4, 0x19, 0x50]
      }, {
        'p': [0x104, -0x12, -0x9e],
        's': [0x4, 0x19, 0x50]
      }, {
        'p': [0x124, -0xe, -0xaf],
        's': [0x3d, 0xe, 0x2c],
        'i': 0x9,
        'c': '#ffffff',
        't': 0x1,
        'd': 0x3
      }, {
        'p': [-0x131, 0xa, -0x209],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x10e, 0xa, -0x1bd],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x109, 0x0, -0x177],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xa5, 0x0, -0x194],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x113, 0x0, -0x1c5],
        's': [0x4, 0x10, 0x18]
      }, {
        'p': [0x144, 0x7, -0x96],
        's': [0x4, 0x2, 0x16]
      }, {
        'p': [0x144, 0x7, -0xb6],
        's': [0x4, 0x2, 0x10]
      }, {
        'p': [-0xf5, 0x10, -0x20a],
        's': [0x4, 0x2, 0xc]
      }, {
        'p': [-0xf5, 0x10, -0x1df],
        's': [0x4, 0x2, 0xc]
      }, {
        'p': [-0xf5, 0x0, -0x1fb],
        's': [0x4, 0x10, 0x50]
      }, {
        'p': [-0xf5, 0x0, -0x1d3],
        's': [0x5, 0x11, 0x5]
      }, {
        'p': [-0x113, 0x10, -0x1c3],
        's': [0x4, 0x2, 0xc]
      }, {
        'p': [0xe4, 0x0, -0x62],
        's': [0xa, 0x30, 0x12],
        'bo': 0x1
      }, {
        'p': [0x124, -0x1, -0x70],
        's': [0x44, 0x1, 0x16],
        't': 0x1
      }, {
        'p': [0x124, -0x12, -0x79],
        's': [0x3c, 0x13, 0x6],
        'c': '#525252',
        't': 0x5
      }, {
        'p': [0xe4, 0x14, -0x6d],
        's': [0xa, 0x1c, 0x4],
        'bo': 0x1
      }, {
        'p': [0x124, 0x24, -0x40],
        's': [0x32, 0x2, 0x50],
        'c': '#3e3e3e',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x124, -0x3, -0x49],
        's': [0x32, 0x4, 0x5a],
        'c': '#525252',
        't': 0x5
      }, {
        'p': [0x103, 0x0, -0x3f],
        's': [0x12, 0x25, 0x50],
        'bo': 0x1
      }, {
        'p': [0x17c, 0x0, -0x3f],
        's': [0x80, 0x25, 0x50],
        'bo': 0x1
      }, {
        'p': [0x131, 0xa, -0x45],
        's': [0x42, 0x16, 0x2],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x124, 0xa, -0x45],
        's': [0x42, 0x2, 0x18],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': 0x2c3f55,
        't': 0x5
      }, {
        'p': [0x124, 0x20, -0x45],
        's': [0x42, 0x2, 0x1c],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x124, 0x3, -0x4e],
        's': [0x4, 0x4, 0x1b],
        'r': [0x0, -1.57, 0x0],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x12f, 0x1, -0x4e],
        's': [0x8, 0x8, 0x4],
        'r': [0x0, -1.57, 0x0],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x12a, 0x1, -0x4e],
        's': [0x8, 0x8, 0x4],
        'r': [0x0, -1.57, 0x0],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x119, 0x1, -0x4e],
        's': [0x8, 0x8, 0x4],
        'r': [0x0, -1.57, 0x0],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x11e, 0x1, -0x4e],
        's': [0x8, 0x8, 0x4],
        'r': [0x0, -1.57, 0x0],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x124, 0x6, -0x43],
        's': [0x42, 0x4, 0x5],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x124, 0x6, -0x65],
        's': [0x3, 0x4, 0x18],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x11d, 0xc, -0x66],
        's': [0x2, 0x14, 0xc],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#6b6b6b',
        't': 0x5
      }, {
        'p': [0x132, 0xc, -0x61],
        's': [0xc, 0x14, 0x2],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#6b6b6b',
        't': 0x5
      }, {
        'p': [0x124, 0x5, -0x65],
        's': [0x4, 0x1, 0x1b],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x11a, 0x7, -0x66],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': 0xff4b00,
        'e': 0xff0000,
        'o': 0.8,
        't': 0x5
      }, {
        'p': [0x12e, 0x7, -0x66],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#ff4b00',
        'e': 0xff0000,
        'o': 0.8,
        't': 0x5
      }, {
        'p': [0x13c, 0x0, -0x40],
        's': [0x2, 0x24, 0x50],
        'c': '#3e3e3e',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x124, 0x0, -0x26],
        's': [0x2e, 0x24, 0x1],
        'c': 0x0,
        't': 0x5
      }, {
        'p': [0x124, 0x0, -0x39],
        's': [0x2e, 0x24, 0x1],
        'c': 0x0,
        'o': 0.4,
        't': 0x5
      }, {
        'p': [0x124, 0x0, -0x49],
        's': [0x2e, 0x24, 0x1],
        'c': 0x0,
        'o': 0.4,
        't': 0x5
      }, {
        'p': [0x124, 0x0, -0x49],
        's': [0x2e, 0x24, 0x1],
        'c': 0x0,
        'o': 0.4,
        't': 0x5
      }, {
        'p': [0x124, -0x12, -0x8b],
        's': [0x3c, 0x4, 0x1e],
        'c': '#b6b6b6',
        't': 0x1
      }, {
        'p': [0x124, 0x0, -0x67],
        's': [0x2e, 0x24, 0x1],
        'c': 0x0,
        'o': 0.4,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x124, 0x0, -0x5b],
        's': [0x2e, 0x24, 0x1],
        'c': 0x0,
        'o': 0.4,
        't': 0x5
      }, {
        'p': [0xe4, 0x0, -0x8e],
        's': [0xa, 0x30, 0xe],
        'bo': 0x1
      }, {
        'p': [0xe4, 0x13, -0x85],
        's': [0xa, 0x1d, 0x4],
        'bo': 0x1
      }, {
        'p': [0xe4, 0x1a, -0x79],
        's': [0xa, 0x16, 0x14],
        'bo': 0x1
      }, {
        'p': [0xde, 0x0, -0x83],
        's': [0x7, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [-0x9c, 0x0, -0x1e8],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0x109, 0xa, -0x1bb],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0x140, 0x0, -0x79],
        's': [0x2, 0x32, 0x2],
        't': 0x2
      }, {
        'p': [0x13d, -0xe, -0x82],
        's': [0x4, 0x1, 0x4],
        'l': 0x1,
        'c': '#c5c5c5'
      }, {
        'p': [0x139, 0x1, -0x64],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [0x13b, 0x1, -0x77],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x36, 0x0, -0x76],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#d5e371'
      }, {
        'p': [0xec, 0x0, -0x5e],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xec, 0x0, -0x90],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0]
      }, {
        'p': [-0xfd, 0x49, -0x22d],
        's': [0x45, 0x0, 0x1c],
        'i': 0xb,
        'l': 0x1,
        'r': [1.57, 0x0, 0x0]
      }, {
        'p': [-0xfa, 0xa, -0x220],
        's': [0x4, 0x7, 0x4],
        'i': 0x10
      }, {
        'p': [-0x81, 0x2, -0x202],
        's': [0x1, 0x18, 0x17],
        'l': 0x1,
        'c': 0x0,
        'o': 0.7000000000000001,
        't': 0x5
      }, {
        'p': [-0x7a, 0x3a, -0x20c],
        's': [0x6, 0xe, 0x6],
        't': 0x2
      }, {
        'p': [-0x53, 0x3e, -0x1cb],
        's': [0x6, 0x10, 0x6],
        't': 0x2
      }, {
        'p': [-0x9c, 0x1a, -0x202],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0x88, -0x1c, -0x15e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.7, 0x0]
      }, {
        'p': [0xb0, 0x0, -0xa],
        's': [0x2, 0x12, 0x4],
        'c': 0xd7d7d7,
        't': 0x2
      }, {
        'p': [-0x38, 0x0, -0x80],
        's': [0x2, 0x12, 0x4],
        'c': 0xd7d7d7,
        't': 0x2
      }, {
        'p': [0x8a, 0x0, -0x11e],
        's': [0x5, 0x13, 0x2],
        't': 0x2
      }, {
        'p': [0x91, 0x0, -0x11e],
        's': [0x5, 0x12, 0x2],
        't': 0x2
      }, {
        'p': [0x1a, 0x0, -0x15e],
        's': [0x5, 0x12, 0x2],
        't': 0x2
      }, {
        'p': [0x135, 0x0, -0x132],
        's': [0x2, 0x13, 0x4],
        't': 0x2
      }, {
        'p': [0x134, 0x0, -0x13c],
        's': [0x2, 0x13, 0x4],
        't': 0x2
      }, {
        'p': [-0x104, 0x0, -0x1b7],
        's': [0x1a, 0x10, 0x4]
      }, {
        'p': [-0x10d, 0xa, -0x1c4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.7, -3.14]
      }, {
        'p': [-0xd4, 0x0, -0x181],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0xd4, 0x0, -0x180],
        's': [0x31, 0x8, 0x10],
        'v': 0x1
      }, {
        'p': [-0xd9, 0x8, -0x180],
        's': [0x18, 0x7, 0x10],
        'v': 0x1
      }, {
        'p': [-0x9b, 0x0, -0x19c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.87, 3.14]
      }, {
        'p': [-0xf1, 0x0, -0x184],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.7, 3.14]
      }, {
        'p': [-0xc0, 0x0, -0x173],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.7, 3.14]
      }, {
        'p': [0x117, 0xa, -0x45],
        's': [0x42, 0x16, 0x2],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x157, 0x20, -0x178],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x157, 0x2c, -0x171],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xb7, 0x58, -0x4],
        's': [0x4, 0x2, 0x36],
        't': 0x2
      }, {
        'p': [0xc7, 0x58, -0x4],
        's': [0x4, 0x2, 0x36],
        't': 0x2
      }, {
        'p': [0xbe, 0x5a, -0x1b],
        's': [0x1a, 0x1, 0x4],
        'c': 0xd9d9d9,
        't': 0x2
      }, {
        'p': [0xbe, 0x5a, -0x14],
        's': [0x19, 0x1, 0x4],
        't': 0x2
      }, {
        'p': [0xbf, 0x5a, -0xc],
        's': [0x1a, 0x1, 0x4],
        'c': 0xc8c8c8,
        't': 0x2
      }, {
        'p': [0xbf, 0x5a, 0x13],
        's': [0x1a, 0x1, 0x4],
        't': 0x2
      }, {
        'p': [0xbe, 0x5a, -0x5],
        's': [0x18, 0x1, 0x4],
        't': 0x2
      }, {
        'p': [0xbe, 0x5a, 0xc],
        's': [0x17, 0x1, 0x4],
        't': 0x2
      }, {
        'p': [0xbe, 0x5a, 0x4],
        's': [0x17, 0x1, 0x4],
        'c': 0xbbbbbb,
        't': 0x2
      }, {
        'p': [0xaa, 0x57, -0x57],
        's': [0x6, 0x13, 0x6],
        't': 0x2
      }, {
        'p': [0xb1, 0x2b, -0x5],
        's': [0x2, 0xd, 0x4],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0x13e, 0x1, -0x193],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0]
      }, {
        'p': [0x144, 0x1, -0x19a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [0x92, 0x0, 0x33],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0]
      }, {
        'p': [0x12, 0x1c, -0x208],
        's': [0xb, 0x3, 0x3],
        'bo': 0x1
      }, {
        'p': [-0x11, 0x1f, -0x208],
        's': [0xb, 0x3, 0x3],
        'bo': 0x1
      }, {
        'p': [0x33, 0x1f, -0x208],
        's': [0xb, 0x3, 0x3],
        'bo': 0x1
      }, {
        'p': [0x12, 0x1f, -0x209],
        's': [0x7, 0x10, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0x33, 0x22, -0x209],
        's': [0x7, 0x10, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x11, 0x22, -0x209],
        's': [0x7, 0x10, 0x2],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [0x96, 0x7, -0x1a9],
        's': [0x12, 0x7, 0x4]
      }, {
        'p': [0x64, 0x7, -0x1a9],
        's': [0xa, 0x7, 0x4]
      }, {
        'p': [0x65, 0xa, -0x1cd],
        's': [0x8, 0x6, 0x4]
      }, {
        'p': [0x70, -0x1c, -0x1cd],
        's': [0x3a, 0x24, 0x4]
      }, {
        'p': [0x7b, 0x4, -0x1bb],
        's': [0x24, 0x1, 0x20]
      }, {
        'p': [0x8f, 0x4, -0x1bb],
        's': [0x4, 0xa, 0x20]
      }, {
        'p': [0x67, 0x4, -0x1bb],
        's': [0x4, 0xa, 0x20]
      }, {
        'p': [0x8f, 0xe, -0x1b3],
        's': [0x4, 0x2, 0x9]
      }, {
        'p': [0x67, 0xe, -0x1c1],
        's': [0x4, 0x2, 0x9]
      }, {
        'p': [0x67, 0xe, -0x1b1],
        's': [0x4, 0x2, 0x9]
      }, {
        'p': [0x7b, 0x8, -0x1bb],
        's': [0x24, 0x2, 0x24],
        'i': 0x9,
        't': 0x1,
        'd': 0x3
      }, {
        'p': [0x98, 0xe, -0x1a9],
        's': [0x8, 0x2, 0x4]
      }, {
        'p': [0x8b, 0x1, -0x1bc],
        's': [0x4, 0x3, 0x22],
        't': 0x2
      }, {
        'p': [0x6b, 0x1, -0x1bc],
        's': [0x4, 0x3, 0x22],
        't': 0x2
      }, {
        'p': [0x8b, -0x1, -0x1c7],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        'c': 0xd4d4d4,
        't': 0x2
      }, {
        'p': [0x6b, -0x1, -0x1c7],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        'c': 0xd9d9d9,
        't': 0x2
      }, {
        'p': [0x6b, -0x1, -0x1ad],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [0.7, 0x0, 0x0],
        'c': 0xe6e6e6,
        't': 0x2
      }, {
        'p': [0x8b, -0x1, -0x1ae],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [0.7, 0x0, 0x0],
        'c': 0xe1e1e1,
        't': 0x2
      }, {
        'p': [0x9a, 0x8, -0x198],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [0x65, 0x8, -0x1a3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0xf1, 0x0, -0x1c5],
        's': [0x4, 0x8, 0x19],
        'l': 0x1
      }, {
        'p': [-0xed, 0x0, -0x1c5],
        's': [0x4, 0x5, 0x19],
        'l': 0x1
      }, {
        'p': [-0xe9, 0x0, -0x1c5],
        's': [0x4, 0x2, 0x19]
      }, {
        'p': [-0xec, 0x0, -0x1c5],
        's': [0xe, 0xb, 0x17],
        'i': 0x9,
        'v': 0x1,
        't': 0x1,
        'd': 0x2
      }, {
        'p': [-0xc1, 0x0, -0x1ee],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.53, 3.14]
      }, {
        'p': [0x171, 0x51, -0x79],
        's': [0x4, 0x3, 0x11],
        'l': 0x1
      }, {
        'p': [-0x94, 0x65, 0x61],
        's': [0x14, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0xee, -0x1, -0x24a],
        's': [0xaf, 0x5a, 0xb]
      }, {
        'p': [-0x118, 0x59, -0x24a],
        's': [0x16, 0x4, 0xb],
        'l': 0x1
      }, {
        'p': [-0xfc, 0x32, 0x1b],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xf8, 0xf, -0x23e],
        's': [0x81, 0x4b, 0xb]
      }, {
        'p': [0xdf, 0x5a, -0x23e],
        's': [0x15, 0x3, 0xb],
        'l': 0x1
      }, {
        'p': [0xfd, 0x5a, -0x23e],
        's': [0x15, 0x2, 0xb],
        'l': 0x1
      }, {
        'p': [0x11f, 0x5a, -0x23e],
        's': [0x11, 0x4, 0xb],
        'l': 0x1
      }, {
        'p': [-0xf9, 0x7c, -0x67],
        's': [0xc, 0x4, 0xc],
        'l': 0x1,
        'c': 0xbebaba
      }, {
        'p': [-0xf6, 0x7c, -0x54],
        's': [0x6, 0x2, 0xc],
        'l': 0x1,
        'c': 0xd7d7d7
      }, {
        'p': [-0xb2, 0x65, 0x61],
        's': [0xd, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0xcf, 0x65, 0x61],
        's': [0xd, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [-0xed, 0x65, 0x61],
        's': [0x10, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x104, 0x65, 0x49],
        's': [0x4, 0x2, 0x11],
        'l': 0x1
      }, {
        'p': [-0x104, 0x65, 0x29],
        's': [0x4, 0x2, 0xd],
        'l': 0x1
      }, {
        'p': [-0x104, 0x65, 0xc],
        's': [0x4, 0x3, 0xb],
        'l': 0x1
      }, {
        'p': [-0x104, 0x65, -0x15],
        's': [0x4, 0x2, 0x17],
        'l': 0x1
      }, {
        'p': [-0xf3, 0x5b, -0x54],
        's': [0x6, 0x3, 0xa],
        'c': 0xb9b9b9
      }, {
        'p': [-0x9f, 0x4d, -0x9c],
        's': [0xe, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0xb9, 0x4d, -0x9c],
        's': [0xb, 0x3, 0x6],
        'l': 0x1
      }, {
        'p': [-0xdc, 0x4d, -0x9e],
        's': [0xe, 0x3, 0xa],
        'l': 0x1
      }, {
        'p': [-0x116, 0x4d, -0xe2],
        's': [0x17, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0x136, 0x4d, -0x9c],
        's': [0x1b, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [0x165, 0x62, -0x1c2],
        's': [0x10, 0x3, 0x10],
        'l': 0x1
      }, {
        'p': [0x160, 0x62, -0x1e7],
        's': [0x6, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [0x171, 0x51, -0xeb],
        's': [0x4, 0x3, 0x11],
        'l': 0x1
      }, {
        'p': [0x171, 0x51, -0xca],
        's': [0x4, 0x2, 0xb],
        'l': 0x1
      }, {
        'p': [0x171, 0x51, -0xa5],
        's': [0x4, 0x2, 0x15],
        'l': 0x1
      }, {
        'p': [0x148, 0x25, -0x3f],
        's': [0x9c, 0x2c, 0x50],
        'bo': 0x1
      }, {
        'p': [0x15b, 0x51, -0x65],
        's': [0xd, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [0x101, 0x51, -0x64],
        's': [0xe, 0x3, 0x6],
        'l': 0x1
      }, {
        'p': [0x13e, 0x51, -0x65],
        's': [0x10, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [0x11d, 0x51, -0x65],
        's': [0xe, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [0x169, 0x32, -0xbc],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x169, 0x32, -0xb0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xf2, 0x59, -0x24a],
        's': [0x16, 0x3, 0xb],
        'l': 0x1
      }, {
        'p': [-0xc8, 0x59, -0x24a],
        's': [0x12, 0x4, 0xb],
        'l': 0x1
      }, {
        'p': [-0x100, 0x4d, -0x9c],
        's': [0x11, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0xea, 0x4d, -0xe2],
        's': [0x10, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [-0x13f, 0x4d, -0xe2],
        's': [0x14, 0x3, 0x6],
        'l': 0x1
      }, {
        'p': [-0xc1, 0x4d, -0xe2],
        's': [0x13, 0x2, 0x6],
        'l': 0x1
      }, {
        'p': [-0x97, 0x4d, -0xe2],
        's': [0x13, 0x3, 0x6],
        'l': 0x1
      }, {
        'p': [-0xab, 0x12, 0x33],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0]
      }, {
        'p': [-0x76, 0x74, -0xc5],
        's': [0x9, 0x3, 0x34],
        'c': 0xafafaf
      }, {
        'p': [-0x76, 0x74, -0xc5],
        's': [0x34, 0x3, 0x9],
        'c': 0x969696
      }, {
        'p': [-0x8f, 0x0, -0x31],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.05, -3.14]
      }, {
        'p': [-0x15c, 0x99, -0xe6],
        's': [0xb, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [-0x15d, 0x99, -0x114],
        's': [0xd, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [-0x188, 0x99, -0xe6],
        's': [0xb, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [-0x186, 0x99, -0x114],
        's': [0xf, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [-0x172, 0x6e, -0xfd],
        's': [0x48, 0x2, 0x4c],
        't': 0x2
      }, {
        'p': [-0x172, 0x6a, -0xfd],
        's': [0x43, 0x4, 0x4],
        't': 0x2
      }, {
        'p': [-0x172, 0x6a, -0xeb],
        's': [0x43, 0x4, 0x4],
        't': 0x2
      }, {
        'p': [-0x172, 0x6a, -0x110],
        's': [0x43, 0x4, 0x4],
        't': 0x2
      }, {
        'p': [-0x172, 0x6a, -0xfd],
        's': [0x4, 0x4, 0x48],
        't': 0x2
      }, {
        'p': [-0x162, 0x6a, -0xfd],
        's': [0x4, 0x4, 0x48],
        't': 0x2
      }, {
        'p': [-0x183, 0x6a, -0xfd],
        's': [0x4, 0x4, 0x48],
        't': 0x2
      }, {
        'p': [-0x157, 0x7b, -0xfe],
        's': [0x2, 0x10, 0x6],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x159, 0x99, -0xfc],
        's': [0x5, 0x3, 0xc],
        'l': 0x1
      }, {
        'p': [-0x170, 0x99, -0xe2],
        's': [0xe, 0x2, 0x4],
        'l': 0x1
      }, {
        'p': [-0x170, 0x99, -0x118],
        's': [0xb, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [-0x13f, 0x67, -0x24b],
        's': [0x3e, 0x2, 0x43],
        'c': 0xbebebe,
        't': 0x2
      }, {
        'p': [-0x13f, 0x64, -0x24b],
        's': [0x4, 0x3, 0x3f],
        'c': 0xe1dede,
        't': 0x2
      }, {
        'p': [-0x14e, 0x64, -0x24b],
        's': [0x4, 0x3, 0x3f],
        'c': 0xd9d5d5,
        't': 0x2
      }, {
        'p': [-0x12f, 0x64, -0x24b],
        's': [0x4, 0x3, 0x3f],
        'c': 0xdcdcdc,
        't': 0x2
      }, {
        'p': [-0x13f, 0x64, -0x24b],
        's': [0x3a, 0x3, 0x3],
        'c': 0xc3c3c3,
        't': 0x2
      }, {
        'p': [-0x13f, 0x64, -0x239],
        's': [0x3a, 0x3, 0x3],
        'c': 0xc8c8c8,
        't': 0x2
      }, {
        'p': [-0x13f, 0x64, -0x25b],
        's': [0x3a, 0x3, 0x3],
        'c': 0xcfcfcf,
        't': 0x2
      }, {
        'p': [0xb7, 0x55, -0x1c],
        's': [0x2, 0x2, 0xb],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [0xc7, 0x55, -0x1c],
        's': [0x2, 0x2, 0xb],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [0xc7, 0x55, 0x14],
        's': [0x2, 0x2, 0xb],
        'l': 0x1,
        'r': [0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [0xb7, 0x55, 0x14],
        's': [0x2, 0x2, 0xb],
        'l': 0x1,
        'r': [0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [0x10e, -0xe, -0x82],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [-0xe7, 0x0, -0x18e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.05, 0x0]
      }, {
        'p': [-0xca, 0x0, -0x18d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.05, 0x0]
      }, {
        'p': [-0x104, 0x10, -0x1b7],
        's': [0xc, 0x2, 0x4]
      }, {
        'p': [-0xf5, 0x0, -0x1b7],
        's': [0x5, 0x11, 0x5]
      }, {
        'p': [-0x113, 0x0, -0x1b7],
        's': [0x5, 0x11, 0x5]
      }, {
        'p': [-0xec, 0x0, -0x1d3],
        's': [0xe, 0xd, 0x3]
      }, {
        'p': [-0xec, 0x0, -0x1b7],
        's': [0xe, 0xd, 0x3]
      }, {
        'p': [-0xef, 0x0, -0x1d8],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0xe5, 0x0, -0x1b7],
        's': [0x4, 0xe, 0x4]
      }, {
        'p': [-0xe5, 0x0, -0x1d3],
        's': [0x4, 0xe, 0x4]
      }, {
        'p': [-0xb2, 0x0, -0x169],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.7, 3.14]
      }, {
        'p': [-0xcb, 0x0, -0x174],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0.01, -1.39, 0.01]
      }, {
        'p': [-0xdd, 0x0, -0x173],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0.01, -1.39, 0.01]
      }, {
        'p': [-0xe8, 0x1, -0x174],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.23, 0.01]
      }, {
        'p': [-0xb8, 0x0, -0x184],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0]
      }, {
        'p': [-0xb9, 0x0, -0x17a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.88, -3.14]
      }, {
        'p': [-0xe3, 0x0, -0x165],
        's': [0x4, 0x13, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xd9, 0x0, -0x164],
        's': [0x4, 0x13, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xde, 0x0, -0x165],
        's': [0x4, 0xe, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x90, -0x1c, -0x1c7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.21, 0x0]
      }, {
        'p': [-0xef, 0x0, -0x1df],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.88, 0x0]
      }, {
        'p': [0x104, 0x7, -0xb6],
        's': [0x4, 0x2, 0x10]
      }, {
        'p': [0x104, 0x7, -0x96],
        's': [0x4, 0x2, 0x16]
      }, {
        'p': [0x14f, 0x8b, -0x23],
        's': [0xc, 0x4, 0x6],
        'l': 0x1
      }, {
        'p': [0x16a, 0x8b, -0x3e],
        's': [0x6, 0x4, 0xc],
        'l': 0x1
      }, {
        'p': [0xd4, 0x10, -0x1cd],
        's': [0x14, 0x2, 0x4]
      }, {
        'p': [0x8f, 0xe, -0x1c2],
        's': [0x4, 0x2, 0x9]
      }, {
        'p': [0x10c, 0x0, -0x40],
        's': [0x2, 0x24, 0x50],
        'c': '#3e3e3e',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x45, -0x20, -0x159],
        's': [0x96, 0x4, 0x4c],
        't': 0x1
      }, {
        'p': [-0xc4, -0x2, -0xd5],
        's': [0x22, 0x2, 0x20],
        't': 0x1
      }, {
        'p': [-0xd2, 0x2a, -0x169],
        's': [0x4c, 0x1, 0xc],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xf7, 0x26, -0x168],
        's': [0x2, 0x2, 0xc],
        'l': 0x1,
        'r': [0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [-0xd2, 0x26, -0x168],
        's': [0x2, 0x2, 0xc],
        'l': 0x1,
        'r': [0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [-0xae, 0x26, -0x168],
        's': [0x2, 0x2, 0xc],
        'l': 0x1,
        'r': [0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [-0xb2, 0x2b, -0x16a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xb8, 0x2b, -0x168],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xb4, 0x33, -0x168],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xe4, 0x1c, -0x170],
        's': [0x1, 0xd, 0x1],
        'l': 0x1,
        'c': 0xb1b1b1,
        't': 0x2
      }, {
        'p': [-0xd7, 0x0, -0x18b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.05, 0x0]
      }, {
        'p': [-0x19f, 0x0, -0x1bc],
        's': [0x3a, 0x7f, 0x5a],
        'c': 0xa7a5a5
      }, {
        'p': [-0x18a, 0x7f, -0x196],
        's': [0x10, 0x3, 0xe],
        'l': 0x1,
        'c': 0xb1b1b1
      }, {
        'p': [-0x18a, 0x7f, -0x1e1],
        's': [0x10, 0x4, 0x10],
        'l': 0x1,
        'c': 0xb1b1b1
      }, {
        'p': [-0x18a, 0x7f, -0x1bc],
        's': [0x10, 0x3, 0x10],
        'l': 0x1,
        'c': 0xaaaaaa
      }, {
        'p': [-0x1b2, 0x7f, -0x197],
        's': [0x14, 0x3, 0x10],
        'l': 0x1,
        'c': 0xa5a3a3
      }, {
        'p': [-0x1b4, 0x7f, -0x1e1],
        's': [0x10, 0x3, 0x10],
        'l': 0x1,
        'c': 0xb1b1b1
      }, {
        'p': [-0xd2, 0x29, -0x170],
        's': [0x4c, 0x2, 0x2],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x159, 0x48, -0x20e],
        's': [0x28, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x159, 0x48, -0x21c],
        's': [0x28, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x159, 0x48, -0x215],
        's': [0x3, 0x3, 0x28],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x160, 0x5a, -0x20e],
        's': [0x28, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x159, 0x48, -0x20e],
        's': [0x3, 0x2a, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x151, 0x5a, -0x20e],
        's': [0x28, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, -1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x151, 0x5a, -0x21c],
        's': [0x28, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, -1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x160, 0x5a, -0x21c],
        's': [0x28, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x159, 0x48, -0x21c],
        's': [0x3, 0x26, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x159, 0x56, -0x215],
        's': [0x3, 0x3, 0x21],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x159, 0x56, -0x21c],
        's': [0x15, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x159, 0x56, -0x20e],
        's': [0x15, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x159, 0x48, -0x202],
        's': [0x3, 0x11, 0x3],
        'l': 0x1,
        'r': [-0.26, 0x0, 0x0],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x159, 0x48, -0x228],
        's': [0x3, 0x11, 0x3],
        'l': 0x1,
        'r': [0.26, 0x0, 0x0],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x62, -0x16a],
        's': [0x28, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x62, -0x178],
        's': [0x28, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x62, -0x171],
        's': [0x3, 0x3, 0x28],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x16b, 0x74, -0x16a],
        's': [0x28, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x62, -0x16a],
        's': [0x3, 0x2a, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x15c, 0x74, -0x16a],
        's': [0x28, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, -1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x15c, 0x74, -0x178],
        's': [0x28, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, -1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x16b, 0x74, -0x178],
        's': [0x28, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x62, -0x178],
        's': [0x3, 0x2a, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x70, -0x171],
        's': [0x3, 0x3, 0x21],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x70, -0x178],
        's': [0x15, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x70, -0x16a],
        's': [0x15, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x8c, -0x171],
        's': [0x3, 0x3, 0x14],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x167, 0x7d, -0x171],
        's': [0x9, 0xb, 0x6],
        'c': '#757575'
      }, {
        'p': [-0x15a, 0x97, -0x171],
        's': [0x29, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, -2.45],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x147, 0xa4, -0x171],
        's': [0x5, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, 0.7],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x146, 0x84, -0x171],
        's': [0x1, 0x22, 0x1],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x146, 0x81, -0x171],
        's': [0x2, 0x3, 0x2],
        'c': '#343434',
        't': 0x5
      }, {
        'p': [-0x164, 0x62, -0x15e],
        's': [0x3, 0x11, 0x3],
        'l': 0x1,
        'r': [-0.26, 0x0, 0x0],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x164, 0x62, -0x184],
        's': [0x3, 0x11, 0x3],
        'l': 0x1,
        'r': [0.26, 0x0, 0x0],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [-0x168, 0x88, -0x171],
        's': [0x5, 0x3, 0x6],
        'c': '#757575'
      }, {
        'p': [-0x182, 0x5a, -0x1bd],
        's': [0x2, 0x13, 0x6],
        'l': 0x1,
        'c': 0x0
      }, {
        'p': [-0x182, 0x58, -0x1bd],
        's': [0x6, 0x4, 0xc],
        'c': 0xaaa3a3
      }, {
        'p': [-0xd8, 0x30, -0x3f],
        's': [0x8, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, 0.7],
        't': 0x2
      }, {
        'p': [-0xcf, 0x22, -0x3f],
        's': [0x1, 0x12, 0x1],
        'l': 0x1,
        'c': 0xb1b1b1,
        't': 0x2
      }, {
        'p': [0x17a, 0x62, -0x1cf],
        's': [0x28, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17a, 0x62, -0x1dd],
        's': [0x28, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17a, 0x62, -0x1d6],
        's': [0x3, 0x3, 0x28],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x173, 0x74, -0x1cf],
        's': [0x28, 0x3, 0x3],
        'r': [0x0, 0x0, 1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17a, 0x62, -0x1cf],
        's': [0x3, 0x2a, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x182, 0x74, -0x1cf],
        's': [0x28, 0x3, 0x3],
        'r': [0x0, 0x0, -1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x182, 0x74, -0x1dd],
        's': [0x28, 0x3, 0x3],
        'r': [0x0, 0x0, -1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x173, 0x74, -0x1dd],
        's': [0x28, 0x3, 0x3],
        'r': [0x0, 0x0, 1.05],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17a, 0x62, -0x1dd],
        's': [0x3, 0x2a, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17a, 0x70, -0x1d6],
        's': [0x3, 0x3, 0x21],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17a, 0x70, -0x1dd],
        's': [0x15, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17a, 0x70, -0x1cf],
        's': [0x15, 0x3, 0x3],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17a, 0x8c, -0x1d6],
        's': [0x3, 0x3, 0x14],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17f, 0x7d, -0x1d6],
        's': [0x9, 0xb, 0x6],
        'c': '#757575'
      }, {
        'p': [0x16f, 0x96, -0x1d6],
        's': [0x29, 0x3, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, -0.7],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x161, 0xa5, -0x1d6],
        's': [0x5, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, 2.45],
        'c': '#522505',
        't': 0x5
      }, {
        'p': [0x15f, 0x83, -0x1d6],
        's': [0x1, 0x22, 0x1],
        'c': '#522505',
        't': 0x5
      }, {
        'p': [0x15f, 0x80, -0x1d6],
        's': [0x2, 0x3, 0x2],
        'c': '#343434',
        't': 0x5
      }, {
        'p': [0x17a, 0x62, -0x1c3],
        's': [0x3, 0x11, 0x3],
        'r': [-0.26, 0x0, 0x0],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17a, 0x62, -0x1e9],
        's': [0x3, 0x11, 0x3],
        'r': [0.26, 0x0, 0x0],
        'c': '#ffffff',
        't': 0x2
      }, {
        'p': [0x17f, 0x88, -0x1d6],
        's': [0x5, 0x3, 0x6],
        'c': '#757575'
      }, {
        'p': [0x137, 0x70, -0x1fc],
        's': [0xe, 0x4, 0x16],
        'l': 0x1,
        'c': '#b1b1b1'
      }, {
        'p': [0x15b, 0x70, -0x1f4],
        's': [0x16, 0x3, 0x6],
        'l': 0x1,
        'c': '#b1b1b1'
      }, {
        'p': [0x133, 0x70, -0x21b],
        's': [0x6, 0x3, 0x12],
        'l': 0x1,
        'c': '#b1b1b1'
      }, {
        'p': [0xfd, 0x0, -0x1c9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.04, 0x0]
      }, {
        'p': [0xdb, 0x0, -0x6a],
        's': [0x4, 0x2, 0x3],
        'l': 0x1
      }, {
        'p': [0xea, 0x0, -0x70],
        's': [0x3, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [0xdb, 0x0, -0x8e],
        's': [0x3, 0x1, 0x4],
        'l': 0x1
      }, {
        'p': [0x139, 0x3a, -0x1c1],
        's': [0x6, 0xa, 0x6],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x189, 0x40, -0x1dd],
        's': [0x58, 0x22, 0x46]
      }, {
        'p': [0x181, 0x62, -0x1bc],
        's': [0x12, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [0x19b, 0x62, -0x1bc],
        's': [0x10, 0x3, 0x4],
        'l': 0x1
      }, {
        'p': [0x1b0, 0x62, -0x1bf],
        's': [0xa, 0x3, 0xa],
        'l': 0x1
      }, {
        'p': [0x184, 0x59, -0x1b3],
        's': [0x4, 0x4, 0x10],
        't': 0x2
      }, {
        'p': [0x184, 0x55, -0x1b9],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        't': 0x2
      }, {
        'p': [0x11a, -0xe, -0x80],
        's': [0x7, 0x1, 0x4],
        'l': 0x1,
        'c': '#c5c5c5'
      }, {
        'p': [0xb3, 0x43, -0x18],
        's': [0x4, 0x5, 0xf],
        'l': 0x1
      }, {
        'p': [-0xe0, 0x0, -0x68],
        's': [0x1f, 0x18, 0x36],
        'c': 0x414141,
        't': 0x5
      }, {
        'p': [-0x12, 0x12, 0x24],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': 0x0
      }, {
        'p': [-0x114, 0xa, -0x206],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': '1'
      }, {
        'p': [0x60, 0x8, -0x1a5],
        's': [0x2, 0x6, 0x4],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [0xdd, 0x0, -0x61],
        's': [0x4, 0xc, 0xc],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [0x140, 0x0, -0x78],
        's': [0x4, 0x7, 0x4],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [0x8a, 0x0, -0x96],
        's': [0x4, 0x8, 0x6],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x9c, 0x1a, -0x202],
        's': [0x39, 0x1, 0x1a],
        'v': 0x1,
        'bo': 0x1
      }, {
        'p': [-0x132, 0xa, -0x1ff],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.7, -3.14]
      }, {
        'p': [-0xfd, 0xa, -0x21e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.17, -3.14]
      }, {
        'p': [-0x130, 0xa, -0x21e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.17, -3.14]
      }, {
        'p': [-0xfc, 0xa, -0x1db],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.17, -3.14]
      }]
    }, {
      'name': 'Littletown',
      'ambInd': 0x1,
      'modURL': '',
      'terrainSeed': '',
      'terrainWidth': 0x800,
      'terrainHeight': 0x800,
      'terrainMntMlt': 0x1,
      'terrainMntCol': '#a0a0a0',
      'terrainGrsCol': '#4a6904',
      'terrainDrtCol': '#8c6835',
      'skyDome': !0x1,
      'skyDomeCol0': '#3fb1b7',
      'skyDomeCol1': '#00cffc',
      'skyDomeCol2': '#1faedc',
      'zone': !0x1,
      'zoneSize': 0x1f4,
      'zoneSpeed': 0x1,
      'zoneCol0': '#c542d9',
      'zoneCol1': '#c542d9',
      'zoneCol2': '#c542d9',
      'sizeMlt': 0x2,
      'shadowR': 0x400,
      'ambient': 0x7b7e8c,
      'light': 0x535566,
      'sky': 0x667a96,
      'fog': 0x7784a2,
      'fogD': 722.1829102596926,
      'dthY': -0x64,
      'nAmb': 0x1,
      'camPos': [0x24, 0x35, 0xfc],
      'spawns': [
        [0x1a8, 0x0, -0x66, 0x0, 0x2],
        [-0x114, 0x0, 0xc, 0x0, 0x3],
        [-0x112, 0x0, 0xba, 0x0, 0x3],
        [0x11f, 0x26, 0x20, 0x0, 0x2],
        [-0x9c, 0x26, 0x21, 0x0, 0x3],
        [-0x5f, 0x26, -0x4, 0x0],
        [0x180, 0x0, 0x57, 0x0, 0x2],
        [0x8d, 0x0, 0x151, 0x0, 0x2]
      ],
      'ambO': 0.7,
      'ambS': 0x5,
      'objects': [{
        'p': [0x8a, 0x2, 0x6],
        's': [0x4, 0x24, 0x3c],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0xcd, 0x24, 0x1e],
        's': [0x3e, 0x2, 0x6c],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0xee, 0x26, 0x2d],
        's': [0x4, 0x26, 0x4a],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0xaa, 0x2, 0x7b],
        's': [0x1e, 0x74, 0x12],
        'c': 0x707070,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x41, 0x2, 0x45],
        's': [0x4, 0x1e, 0xa],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x130, 0x2, -0x7],
        's': [0x2, 0x34, 0xc],
        'i': 0x3,
        't': 0x2
      }, {
        'p': [0x8a, 0x26, 0x3],
        's': [0x4, 0x6, 0x26],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x8a, 0x26, 0x51],
        's': [0x4, 0x6, 0x22],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x8a, 0x26, 0x2b],
        's': [0x4, 0x2e, 0x2a],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x8a, 0x26, 0x68],
        's': [0x4, 0x28, 0xc],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x8a, 0x26, -0x14],
        's': [0x4, 0x33, 0x8],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x8a, 0x42, 0x3],
        's': [0x4, 0x15, 0x26],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x8a, 0x2, 0x51],
        's': [0x4, 0x24, 0x3a],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x8a, 0x1a, 0x2c],
        's': [0x4, 0xc, 0x10],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xdc, 0x2, 0x70],
        's': [0xa8, 0x4a, 0x4],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xcd, 0x2, -0x1a],
        's': [0x8a, 0x58, 0x4],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x129, 0x2, -0x1a],
        's': [0xe, 0x58, 0x4],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x11a, 0x1a, -0x1a],
        's': [0x10, 0x40, 0x4],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x12e, 0x26, 0x10],
        's': [0x4, 0x2e, 0x50],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x12e, 0x4f, 0x4a],
        's': [0x4, 0x3, 0x4],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x12e, 0x3e, 0x40],
        's': [0x4, 0x14, 0x10],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x12e, 0x2, 0x19],
        's': [0x4, 0x24, 0x62],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x12e, 0x2, 0x64],
        's': [0x4, 0x24, 0x14],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x12e, 0x1a, 0x52],
        's': [0x4, 0xc, 0x10],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xee, 0x26, -0x10],
        's': [0x4, 0x26, 0x10],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0xee, 0x40, 0x0],
        's': [0x4, 0xc, 0x10],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0xb0, 0x22, 0x62],
        's': [0x4, 0x2a, 0x18],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0x123, 0x26, 0x54],
        's': [0x12, 0x26, 0x4],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0x106, 0x26, 0x54],
        's': [0x8, 0x26, 0x4],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0x112, 0x3e, 0x54],
        's': [0x10, 0xe, 0x4],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0xd8, 0x2, 0x54],
        's': [0x54, 0x4a, 0x4],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0x100, 0x2, 0x62],
        's': [0x4, 0x24, 0x18],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0xee, 0x2, 0x43],
        's': [0x4, 0x24, 0x1e],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0xee, 0x2, -0x5],
        's': [0x4, 0x24, 0x26],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0xee, 0x1a, 0x21],
        's': [0x4, 0xc, 0x26],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0x9d, 0x24, 0x2b],
        's': [0x22, 0x2, 0x86],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x10e, 0x24, 0x1e],
        's': [0x3c, 0x2, 0x6c],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x117, 0x24, 0x61],
        's': [0x2a, 0x2, 0x1a],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0xdc, 0x0, 0x2b],
        's': [0xac, 0x2, 0x92],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0xb7, 0x0, -0x4b],
        's': [0x96, 0x2, 0x62],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x9e, 0x2, -0x1f],
        's': [0x4, 0x1e, 0x6],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x2, -0x4a],
        's': [0x4, 0x1e, 0x4],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x2, -0x75],
        's': [0x4, 0x1e, 0x2],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x20, -0x49],
        's': [0x4, 0xc, 0x5a],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xfe, 0x2, -0x3c],
        's': [0x4, 0x2a, 0x40],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xfe, 0x2, -0x71],
        's': [0x4, 0x2a, 0xa],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xfe, 0x1a, -0x64],
        's': [0x4, 0x12, 0x10],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xce, 0x2, -0x78],
        's': [0x64, 0x2a, 0x4],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x2, -0x60],
        's': [0x2, 0x1e, 0x2a],
        'pe': 0x1,
        'c': '#ffffff',
        't': 0xa
      }, {
        'p': [0xaa, 0x0, 0x7d],
        's': [0x22, 0x2, 0x12],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x104, 0x0, -0x64],
        's': [0x4, 0x2, 0x14],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x134, 0x0, 0x52],
        's': [0x4, 0x2, 0x14],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x29, 0x0, -0x18],
        's': [0x4, 0x2, 0x14],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x11a, 0x0, -0x20],
        's': [0x14, 0x2, 0x4],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x1d, -0x1, 0x143],
        's': [0x6a, 0x2, 0x34d],
        'c': 0x393939,
        't': 0x5
      }, {
        'p': [-0x41, 0x20, 0x73],
        's': [0x4, 0xc, 0x66],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x41, 0x2, 0x73],
        's': [0x4, 0x1e, 0xa],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x41, 0x2, 0xa1],
        's': [0x4, 0x1e, 0xa],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x91, 0x2, 0xa1],
        's': [0x4, 0x2a, 0xa],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x91, 0x2, 0x66],
        's': [0x4, 0x2a, 0x4c],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x69, 0x2, 0xa8],
        's': [0x54, 0x2a, 0x4],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x91, 0x1a, 0x94],
        's': [0x4, 0x12, 0x10],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x41, 0x2, 0x8b],
        's': [0x2, 0x1e, 0x2a],
        'pe': 0x1,
        't': 0xa
      }, {
        'p': [-0x5b, 0x0, 0x76],
        's': [0x74, 0x2, 0x6c],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x71, 0x0, -0x10],
        's': [0x8c, 0x2, 0xa4],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x8e, 0x2, 0x3e],
        's': [0x1e, 0x4a, 0x4],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x4e, 0x2, 0x3e],
        's': [0x42, 0x4a, 0x4],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x71, 0x2, -0x5e],
        's': [0x88, 0x4a, 0x4],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x2f, 0x42, -0x10],
        's': [0x4, 0xa, 0x98],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x2f, 0x26, -0x4d],
        's': [0x4, 0x1c, 0x1e],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x2f, 0x26, -0x3],
        's': [0x4, 0x1c, 0x2a],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x2f, 0x26, 0x23],
        's': [0x4, 0x6, 0x22],
        'c': 0x587fc8,
        't': 0x5
      }, {
        'p': [-0x2f, 0x26, -0x2b],
        's': [0x4, 0x6, 0x26],
        'c': 0x587fc8,
        't': 0x5
      }, {
        'p': [-0x2f, 0x26, 0x38],
        's': [0x4, 0x1c, 0x8],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x2f, 0x2, -0x3e],
        's': [0x4, 0x24, 0x3c],
        'c': 0x587fc8,
        't': 0x5
      }, {
        'p': [-0x2f, 0x1a, -0x18],
        's': [0x4, 0xc, 0x10],
        'c': 0x587fc8,
        't': 0x5
      }, {
        'p': [-0xb1, 0x2, 0x3e],
        's': [0x8, 0x4a, 0x4],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0xb3, 0x2, 0x5],
        's': [0x4, 0x4a, 0x6e],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0xb3, 0x2, -0x4f],
        's': [0x4, 0x4a, 0x1a],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x77, 0x1a, 0x3e],
        's': [0x10, 0x32, 0x4],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0xa5, 0x1a, 0x3e],
        's': [0x10, 0x32, 0x4],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x8c, 0x2, -0x50],
        's': [0x4, 0x24, 0x18],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [-0x69, 0x2, -0x42],
        's': [0x4a, 0x4a, 0x4],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [-0x46, 0x22, -0x50],
        's': [0x4, 0x2a, 0x18],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [-0xb3, 0x1a, -0x3a],
        's': [0x4, 0xc, 0x10],
        'c': 0x587fc8,
        't': 0x5
      }, {
        'p': [-0x3a, 0x24, -0x10],
        's': [0x14, 0x2, 0x98],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x86, 0x2, 0x20],
        's': [0x4, 0x1c, 0x38],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [-0x86, 0x2, -0x31],
        's': [0x4, 0x1c, 0x1e],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [-0x86, 0x1e, -0x2],
        's': [0x4, 0x8, 0x7c],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [-0x64, 0x24, -0x2],
        's': [0x40, 0x2, 0x7c],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x9d, 0x24, -0x3],
        's': [0x2a, 0x2, 0x7e],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0xa0, 0x24, -0x4f],
        's': [0x24, 0x2, 0x1a],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0xb3, 0x3e, -0x3a],
        's': [0x4, 0xe, 0x10],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x86, 0x26, -0x39],
        's': [0x4, 0x26, 0xe],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [-0x86, 0x26, 0xd],
        's': [0x4, 0x26, 0x5e],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [-0x86, 0x3c, -0x2a],
        's': [0x4, 0x10, 0x10],
        'c': 0xffd8b6,
        't': 0x5
      }, {
        'p': [0x151, -0x2, 0x63],
        's': [0x4, 0x28, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x132, -0x2, 0x63],
        's': [0x4, 0x28, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x151, -0x2, 0x5],
        's': [0x4, 0x28, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x132, -0x2, 0x5],
        's': [0x4, 0x28, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x142, 0x22, 0x34],
        's': [0x24, 0x2, 0x64],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xc7, 0x22, -0x2f],
        's': [0x24, 0x2, 0x52],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xd6, -0x1, -0x9],
        's': [0x4, 0x26, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xd6, -0x1, -0x55],
        's': [0x4, 0x26, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xb7, -0x1, -0x55],
        's': [0x4, 0x26, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xb7, -0x1, -0x9],
        's': [0x4, 0x26, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x84, 0x0, 0x2c],
        's': [0x4, 0x2, 0x14],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0xb9, 0x0, -0x3a],
        's': [0x4, 0x2, 0x14],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x97, 0x0, 0x94],
        's': [0x4, 0x2, 0x14],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0xa5, 0x0, 0x44],
        's': [0x12, 0x2, 0x4],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x71, 0x4c, -0x10],
        's': [0x92, 0x4, 0xaa],
        'c': 0x505050,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x69, 0x2c, 0x77],
        's': [0x5e, 0x4, 0x70],
        'c': 0x505050,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xdc, 0x4b, 0x2a],
        's': [0xa5, 0x4, 0x89],
        'c': 0x505050,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xce, 0x2c, -0x4d],
        's': [0x6c, 0x4, 0x62],
        'c': 0x505050,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x4f, 0x2, -0x69],
        's': [0x1e, 0x76, 0x12],
        'c': 0x707070,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x4f, 0x0, -0x6b],
        's': [0x22, 0x2, 0x12],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x20, 0x2, -0xcf],
        's': [0x7c, 0x4a, 0x96],
        'c': 0xc5b960,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x20, 0x4a, -0xcf],
        's': [0x88, 0x4, 0xa2],
        'c': 0x505050,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x20, 0x0, -0xcf],
        's': [0x80, 0x2, 0x9a],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x5e, -0x1, 0x9f],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x5e, -0x1, 0xd9],
        's': [0x2, 0x18, 0x71],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0xf6, -0x1, 0x9f],
        's': [0x12e, 0x18, 0x2],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x25, -0x1, 0xeb],
        's': [0x2, 0x18, 0x3a],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x25, -0x1, 0xcd],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xa3, -0x1, 0xcd],
        's': [0xfe, 0x18, 0x2],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x18e, -0x1, 0x9f],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x18f, -0x1, 0x3b],
        's': [0x2, 0x18, 0xce],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x18f, -0x1, -0x9c],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x104, -0x1, -0x9d],
        's': [0x154, 0x18, 0x2],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0xa1, -0x1, -0x9d],
        's': [0x106, 0x18, 0x2],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x122, -0x1, 0xcc],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x123, -0x1, 0x18],
        's': [0x2, 0x18, 0x166],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x122, -0x1, -0x9c],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xb5, 0x2, 0x3],
        's': [0x2, 0x34, 0xc],
        'i': 0x3,
        't': 0x2,
        'd': 0x2
      }, {
        'p': [0x20, 0x0, -0x79],
        's': [0x30, 0x2, 0x12],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x20, 0x27, -0x7b],
        's': [0x2e, 0x3, 0x13],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [-0xfb, -0x1, 0xad],
        's': [0x2, 0x18, 0x3f],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0xa
      }, {
        'p': [-0x10b, 0x0, 0x49],
        's': [0x2e, 0x1e, 0x2a],
        'c': 0x587fc8,
        't': 0x5
      }, {
        'p': [-0x10b, 0x1e, 0x49],
        's': [0x36, 0x2, 0x32],
        'c': 0x525252,
        't': 0x5
      }, {
        'p': [0x157, 0x0, -0x8a],
        's': [0x34, 0x20, 0x24],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x157, 0x20, -0x8a],
        's': [0x38, 0x2, 0x28],
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x18f, -0x1, -0x2e],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x1a0, -0x1, -0x2d],
        's': [0x1e, 0x18, 0x2],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x1af, -0x1, -0x2e],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x1b0, -0x1, -0x65],
        's': [0x2, 0x18, 0x6e],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x1af, -0x1, -0x9c],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xfa, -0x1, 0x10],
        's': [0x8, 0x18, 0x48],
        'pe': 0x1,
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [-0xd5, -0x1, -0x78],
        's': [0x8, 0xa, 0x14],
        'pe': 0x1,
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [-0xe8, 0x1a, -0x8f],
        's': [0x3a, 0x2, 0x20],
        'c': 0x6b6b6b,
        't': 0x5
      }, {
        'p': [-0xe8, 0x0, -0x8f],
        's': [0x34, 0x1a, 0x1a],
        'c': 0x587fc8,
        't': 0x5
      }, {
        'p': [-0xe9, -0x1, 0x56],
        's': [0x16, 0xa, 0x8],
        'pe': 0x1,
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [0x139, -0x1, -0x86],
        's': [0x8, 0xa, 0x2c],
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [-0x90, -0x1, -0x9a],
        's': [0x7c, 0xa, 0x5],
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [0x1b3, 0x0, -0x10],
        's': [0x34, 0x20, 0x24],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x1b3, 0x20, -0x10],
        's': [0x38, 0x2, 0x28],
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x18f, -0x2, -0x64],
        's': [0x8, 0x14, 0x38],
        'pe': 0x1,
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [0x156, -0x1, 0x34],
        's': [0x6, 0xa, 0x68],
        'pe': 0x1,
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [-0xfb, -0x1, 0xcd],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xfb, -0x1, 0x6a],
        's': [0x2, 0x18, 0x19],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0xa
      }, {
        'p': [0x97, 0x2, -0x63],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x154, 0x0, -0x72],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x6c, 0x0, 0x98],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x6c, 0xc, 0x98],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xbf, 0x2, -0x70],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xf6, 0x2, -0x32],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x89, 0x2, 0x74],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x68, 0x2, 0xa0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x38, 0x0, 0xc6],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x38, 0xc, 0xc6],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x8c, 0x2, 0x6a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xf9, 0x2, -0x3b],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xca, 0x0, -0x94],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x5c, 0x2, 0xa0],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0xcb, 0x2, -0x70],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0x82, 0x22, 0x4f],
        's': [0xc, 0x2, 0x2a],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x88, 0x2, 0x69],
        's': [0x2, 0x2a, 0x8],
        'i': 0x3,
        't': 0x2,
        'd': 0x2
      }, {
        'p': [-0x2f, 0x2c, 0x23],
        's': [0x1, 0x16, 0x22],
        'pe': 0x1,
        'c': 0x91765b,
        't': 0xa
      }, {
        'p': [-0xdb, -0x1, 0xb0],
        's': [0x4, 0x20, 0x4],
        'pe': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0xdb, 0x1e, 0xb0],
        's': [0x1a, 0x1a, 0x1c],
        'c': 0x5e822b,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0xdb, 0x14, 0xb5],
        's': [0x2, 0x2, 0x8],
        'pe': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0xdb, 0x13, 0xbc],
        's': [0x6, 0x6, 0x8],
        'pe': 0x1,
        'c': 0x5e822b,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0xe0, 0x12, 0xb0],
        's': [0x6, 0x2, 0x2],
        'pe': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0xe5, 0x11, 0xb0],
        's': [0x6, 0x4, 0x6],
        'pe': 0x1,
        'c': 0x5e822b,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x177, -0x1, 0x8a],
        's': [0x4, 0x20, 0x4],
        'pe': 0x1,
        'c': 0x64523f,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x177, 0x1d, 0x8a],
        's': [0x1a, 0x1a, 0x1c],
        'c': 0x5e822b,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x177, 0x13, 0x85],
        's': [0x2, 0x2, 0x8],
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x177, 0x12, 0x7f],
        's': [0x6, 0x6, 0x8],
        'c': 0x5e822b,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x173, 0xf, 0x8a],
        's': [0x6, 0x2, 0x2],
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x16d, 0xe, 0x8a],
        's': [0x6, 0x4, 0x6],
        'c': 0x5e822b,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x25, 0x1, -0x4e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x31, 0x1, -0x4e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x2c, 0x1, -0x42],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0x29, 0xd, -0x4e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x82, 0x2, 0x33],
        's': [0x10, 0x18, 0x2],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x27, 0x2, -0x1f],
        's': [0x10, 0x18, 0x2],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x1d, 0x1, 0xe1],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1
      }, {
        'p': [-0x7d, -0x1, 0xaf],
        's': [0x4, 0x16, 0x2],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x71, 0x0, 0xaf],
        's': [0x4, 0x16, 0x2],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x9a, 0x2, -0x2e],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x3c, 0x2, 0x73],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xa9, 0x0, -0x96],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x5a, 0x0, 0xaf],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x18b, 0x0, 0x1c],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xf6, 0x0, 0x70],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x1d, 0x1, 0xe1],
        's': [0x30, 0x8, 0x10],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x22, 0x8, 0xe1],
        's': [0x18, 0x8, 0x10],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x94, 0x9, -0x2d],
        's': [0x18, 0x8, 0x10],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x9a, 0x3, -0x2d],
        's': [0x30, 0x8, 0x10],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x8a, 0x2c, 0x3],
        's': [0x1, 0x16, 0x26],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0xa
      }, {
        'p': [0x75, 0x15, 0xb4],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [0x75, -0x1, 0xb4],
        's': [0x4, 0x1c, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x40, -0x1, 0xeb],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x40, 0x15, 0xeb],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x75a236,
        't': 0x5
      }, {
        'p': [-0x2a, 0x17, 0x120],
        's': [0x1b, 0x1c, 0x18],
        'pe': 0x1,
        'c': 0x5e822b,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x25, -0x1, 0x109],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x5e, -0x1, 0x113],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x2a, -0x1, 0x121],
        's': [0x4, 0x1f, 0x4],
        'pe': 0x1,
        'c': 0x64523f,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x13b, -0x1, 0xd],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x141, -0x1, -0x84],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x1cb, 0xe, -0x3e],
        's': [0x1a, 0x1b, 0x23],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0xcf, 0x11, -0xbc],
        's': [0x1a, 0x19, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0x66, 0x10, -0xb5],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0x140, 0x13, 0xaf],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x75a236,
        't': 0x5
      }, {
        'p': [0x55, 0x0, 0xbc],
        's': [0x2, 0x49, 0x2],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x4f, 0x47, 0xbc],
        's': [0xa, 0x2, 0x2],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x4b, 0x46, 0x1f2],
        's': [0xa, 0x2, 0x4],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x4b, 0x45, 0xbc],
        's': [0x9, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x1b, 0x0, 0x14c],
        's': [0x2, 0x49, 0x2],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x15, 0x47, 0x14c],
        's': [0xa, 0x2, 0x2],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x11, 0x46, 0x14c],
        's': [0xa, 0x2, 0x4],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x11, 0x45, 0x14c],
        's': [0x9, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x9, 0x0, -0x68],
        's': [0x2, 0x49, 0x2],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x9, 0x47, -0x63],
        's': [0x2, 0x2, 0x8],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x9, 0x45, -0x60],
        's': [0x2, 0x1, 0x8],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x9, 0x46, -0x60],
        's': [0x3, 0x2, 0x9],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x117, 0xf, 0xb8],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [-0x141, 0xb, -0x84],
        's': [0x1a, 0x1e, 0x1c],
        'l': 0x1,
        'c': 0x75a236,
        't': 0x5
      }, {
        'p': [0xe6, 0x2, 0x2],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xf6, 0x2, 0x3e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xf6, 0x26, 0x1c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xbe, 0x26, 0x4c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x7e, 0x26, 0x24],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xab, 0x26, -0x10],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x7e, 0x2, -0x3a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x37, 0x2, -0x1],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x54, 0x26, 0x38],
        's': [0x4, 0x16, 0x2],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x4c, 0x26, 0x38],
        's': [0x4, 0x16, 0x2],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x60, 0x26, 0x38],
        's': [0x4, 0x16, 0x2],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x72, 0x27, 0x1d],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0],
        'c': 0xa7a7a7,
        't': 0x5
      }, {
        'p': [-0x51, 0x27, 0x2f],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0xb1b1b1,
        't': 0x5
      }, {
        'p': [-0x90, 0x27, -0x39],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [-0x6d, 0x3, -0x35],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0xaaaaaa,
        't': 0x5
      }, {
        'p': [0x3c, 0x2, -0x3e],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [0x8, 0x2, 0xb2],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x9d9d9d,
        't': 0x5
      }, {
        'p': [-0x78, 0x26, 0x1c],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x43, 0x27, -0x3b],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [-3.14, 1.05, -3.14],
        'c': 0xa7a7a7,
        't': 0x5
      }, {
        'p': [-0x78, 0x28, 0x1c],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x35, 0x26, 0x37],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x35, 0x28, 0x37],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x50, 0x26, -0x3e],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x50, 0x28, -0x3e],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x8a, 0x26, -0xb],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x8a, 0x28, -0xb],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x8e, 0x27, -0x5],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [3.14, -1.04, 3.14],
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [-0x59, 0x26, -0x3a],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [-0x46, 0x3, 0x6c],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [-3.14, 1.05, -3.14],
        'c': 0xa7a7a7,
        't': 0x5
      }, {
        'p': [-0x56, 0x2, 0x42],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x56, 0x4, 0x42],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x6a, 0x3, 0x7f],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [-3.14, 1.05, -3.14],
        'c': 0xa7a7a7,
        't': 0x5
      }, {
        'p': [-0x67, 0x3, 0x77],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'c': 0xa7a7a7,
        't': 0x5
      }, {
        'p': [-0x5c, 0x4, 0x3a],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x5c, 0x2, 0x3a],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [0xad, 0x2, -0x14],
        's': [0x1, 0x8, 0x7],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0xc3, 0x2, -0x14],
        's': [0x1, 0x8, 0x7],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0xb8, 0x9, -0x14],
        's': [0xb, 0x1, 0x4],
        'pe': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [0xb8, 0x8, -0x14],
        's': [0x15, 0x1, 0x6],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0xb8, 0xa, -0x14],
        's': [0x2, 0x1, 0x1],
        'pe': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [0xb8, 0xb, -0x14],
        's': [0x16, 0xb, 0x1],
        'pe': 0x1,
        'c': 0x343434,
        't': 0x5
      }, {
        'p': [0xb8, 0xc, -0x13],
        's': [0x14, 0x9, 0x1],
        'pe': 0x1,
        'c': 0x343434,
        'e': 0xffffff,
        't': 0x5
      }, {
        'p': [0xa4, 0x3, -0xd],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [0xeb, 0x3, 0x30],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [-3.14, 1.4, -3.14],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [0x8f, 0x2, 0x54],
        's': [0x1, 0x11, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x8f, 0x2, 0x50],
        's': [0x1, 0x11, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0xe1, 0x3, 0x44],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [0x102, 0x1e, -0x64],
        's': [0x8, 0x1, 0x1],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0x105, 0x1c, -0x64],
        's': [0x5, 0x2, 0x3],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0x105, 0x1b, -0x64],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x98, 0x1b, 0x94],
        's': [0x5, 0x2, 0x3],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0x96, 0x1d, 0x94],
        's': [0x6, 0x1, 0x1],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0x98, 0x1a, 0x94],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0xf2, 0x1a, 0x49],
        's': [0x4, 0x1, 0x1],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0xf0, 0x18, 0x49],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0xf0, 0x17, 0x49],
        's': [0x3, 0x1, 0x2],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0xea, 0x16, -0x80],
        's': [0x1, 0x1, 0x4],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0xea, 0x14, -0x7e],
        's': [0x3, 0x2, 0x4],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0xea, 0x13, -0x7e],
        's': [0x2, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x132, 0x41, 0x3f],
        's': [0x8, 0x1, 0x1],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0x135, 0x3f, 0x3f],
        's': [0x5, 0x2, 0x3],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0x135, 0x3e, 0x3f],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0xc6, 0x0, 0xf2],
        's': [0x7b, 0x2a, 0x78],
        'c': 0x587fc8,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xc6, 0x2a, 0xf2],
        's': [0x82, 0x2, 0x80],
        'c': 0x828282,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xa7, 0x0, 0x137],
        's': [0x1e, 0x3d, 0x12],
        'c': 0x707070,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x12f, 0x6, 0xba],
        's': [0x17, 0x1b, 0x17],
        'l': 0x1,
        'c': 0x486126,
        't': 0x5
      }, {
        'p': [0x14b, 0xa, 0xcd],
        's': [0x1f, 0x1e, 0x1e],
        'l': 0x1,
        'c': 0x739b3b,
        't': 0x5
      }, {
        'p': [-0x79, 0x0, 0x142],
        's': [0x7b, 0x3c, 0x78],
        'c': 0xc5a15e,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x79, 0x3c, 0x142],
        's': [0x82, 0x2, 0x7e],
        'c': 0x696969,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x3a, 0x23, 0x164],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x3a, 0x24, 0x164],
        's': [0x1, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x3b, 0x24, 0x16a],
        's': [0x2, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x3b, 0x24, 0x15e],
        's': [0x2, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x3b, 0x30, 0x164],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x3b, 0x24, 0x164],
        's': [0x1, 0xc, 0xb],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x70, 0x23, 0x105],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x70, 0x24, 0x106],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x6a, 0x24, 0x106],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x76, 0x24, 0x106],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x70, 0x30, 0x106],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x70, 0x24, 0x106],
        's': [0xb, 0xc, 0x1],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x4d, 0x31, -0x83],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x4d, 0x32, -0x84],
        's': [0xb, 0xc, 0x1],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x47, 0x32, -0x84],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x53, 0x32, -0x84],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x4d, 0x3e, -0x84],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x4d, 0x32, -0x84],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x5f, 0x2f, -0xa3],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x5e, 0x30, -0xa3],
        's': [0x1, 0xc, 0xb],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x5d, 0x30, -0x9d],
        's': [0x4, 0xd, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x5e, 0x3c, -0xa3],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x5d, 0x30, -0xa9],
        's': [0x4, 0xd, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x5d, 0x30, -0xa3],
        's': [0x4, 0xd, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x20, 0x0, -0x6d],
        's': [0x17, 0x2, 0x6],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x71, -0x1, 0x12a],
        's': [0x4, 0x1c, 0x4],
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x72, 0x16, 0x12a],
        's': [0x1a, 0x1c, 0x1c],
        'c': 0x4f6b27,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x79, 0x0, 0x142],
        's': [0x87, 0x8, 0x85],
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [0x7c, 0xb, -0xc6],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [0x1a2, 0xf, -0xb7],
        's': [0x1a, 0x21, 0x1c],
        'l': 0x1,
        'c': 0x6e9636,
        't': 0x5
      }, {
        'p': [0xa3, 0x2, 0x1a6],
        's': [0x71, 0x4e, 0x74],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xa5, 0x0, 0x1a3],
        's': [0x86, 0x8, 0x7e],
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [0x55, 0x0, 0x1f2],
        's': [0x2, 0x49, 0x2],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x4f, 0x47, 0x1f2],
        's': [0xa, 0x2, 0x2],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x4b, 0x46, 0xbc],
        's': [0xa, 0x2, 0x4],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x4b, 0x45, 0x1f2],
        's': [0x9, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0xa3, 0x50, 0x1a6],
        's': [0x7b, 0x3, 0x7d],
        'l': 0x1,
        'c': 0x5a5a5a,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x6a, 0x36, 0x183],
        's': [0x1, 0xc, 0xb],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x69, 0x35, 0x183],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x69, 0x42, 0x183],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x6a, 0x36, 0x189],
        's': [0x2, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x6a, 0x36, 0x17d],
        's': [0x2, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x6a, 0x36, 0x183],
        's': [0x2, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x6a, 0x36, 0x1c4],
        's': [0x1, 0xc, 0xb],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x69, 0x35, 0x1c4],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x69, 0x42, 0x1c4],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x6a, 0x36, 0x1be],
        's': [0x2, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x6a, 0x36, 0x1ca],
        's': [0x2, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x6a, 0x36, 0x1c4],
        's': [0x2, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xfd, -0x1, 0x178],
        's': [0x4, 0x1c, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0xfd, 0x16, 0x178],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0xe0, 0x13, 0xf8],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x75a236,
        't': 0x5
      }, {
        'p': [-0xe0, -0x1, 0xf8],
        's': [0x4, 0x17, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x59, 0x0, 0x1d6],
        's': [0x68, 0x87, 0x74],
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [-0x1e, -0x1, 0x188],
        's': [0x4, 0x1f, 0x4],
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x1e, 0x17, 0x188],
        's': [0x1b, 0x1c, 0x18],
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [-0x59, 0x87, 0x1d6],
        's': [0x6e, 0x3, 0x7a],
        'l': 0x1,
        'c': 0x5a5a5a,
        't': 0x5
      }, {
        'p': [-0x59, 0x41, 0x1d6],
        's': [0x6f, 0x5, 0x7c],
        'c': 0x5a5a5a,
        't': 0x5
      }, {
        'p': [-0x1b, 0x0, 0x28b],
        's': [0x2, 0x49, 0x2],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x15, 0x47, 0x28b],
        's': [0xa, 0x2, 0x2],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x11, 0x46, 0x28b],
        's': [0xa, 0x2, 0x4],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x11, 0x45, 0x28b],
        's': [0x9, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x6b, -0x1, 0x1f8],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x6b, 0x15, 0x1f8],
        's': [0x1b, 0x1c, 0x18],
        'l': 0x1,
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [0x9c, 0x0, 0x26d],
        's': [0x7b, 0x54, 0x78],
        'l': 0x1,
        'c': 0xc5a15e,
        't': 0x5
      }, {
        'p': [-0x61, 0x0, 0x2ae],
        's': [0x7b, 0x34, 0x78],
        'l': 0x1,
        'c': 0x587fc8,
        't': 0x5
      }, {
        'p': [-0x61, 0x34, 0x2ae],
        's': [0x83, 0x4, 0x84],
        'l': 0x1,
        'c': 0x575757,
        't': 0x5
      }, {
        'p': [0x9c, 0x54, 0x26d],
        's': [0x83, 0x5, 0x84],
        'l': 0x1,
        'c': 0x575757,
        't': 0x5
      }, {
        'p': [0x1e9, 0x16, 0x13],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x1a8, 0x12, 0x65],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x1ab, 0xf, 0x1a],
        's': [0x1b, 0x1e, 0x1e],
        'l': 0x1,
        'c': 0x739b3b,
        't': 0x5
      }, {
        'p': [0x183, 0xd, 0xbb],
        's': [0x17, 0x1b, 0x17],
        'l': 0x1,
        'c': 0x486126,
        't': 0x5
      }, {
        'p': [0x1ca, 0x12, 0x45],
        's': [0x17, 0x18, 0x1b],
        'l': 0x1,
        'c': 0x486126,
        't': 0x5
      }, {
        'p': [0x2d7, 0x0, -0x29],
        's': [0x68, 0x4a, 0x4f],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x2af, 0x4a, -0x29],
        's': [0x18, 0x30, 0x1a],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x2d7, 0x4a, -0x29],
        's': [0x69, 0x6, 0x4c],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x2af, 0x79, -0x29],
        's': [0x1f, 0x6, 0x20],
        'l': 0x1,
        'c': 0x786452,
        't': 0x5
      }, {
        'p': [0x2af, 0x7f, -0x29],
        's': [0x16, 0xd, 0x13],
        'l': 0x1,
        'c': 0x786452,
        't': 0x5
      }, {
        'p': [0x2d7, 0x50, -0x29],
        's': [0x69, 0x6, 0x36],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x2d7, 0x54, -0x3d],
        's': [0x73, 0x6, 0x35],
        'l': 0x1,
        'r': [-0.52, 0x0, 0x0],
        'c': 0x786452,
        't': 0x5
      }, {
        'p': [0x2a9, 0x9a, -0x29],
        's': [0x2, 0x19, 0x2],
        'l': 0x1,
        'c': 0x786452,
        't': 0x5
      }, {
        'p': [0x2a9, 0xab, -0x29],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'c': 0x786452,
        't': 0x5
      }, {
        'p': [0x2af, 0x7c, -0x1e],
        's': [0x16, 0x21, 0xb],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x786452,
        't': 0x5
      }, {
        'p': [0x2af, 0x7c, -0x34],
        's': [0x16, 0x21, 0xb],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x786452,
        't': 0x5
      }, {
        'p': [0x2d7, 0x54, -0x16],
        's': [0x73, 0x6, 0x33],
        'l': 0x1,
        'r': [0.53, 0x0, 0x0],
        'c': 0x786452,
        't': 0x5
      }, {
        'p': [0x2d7, 0x50, -0x29],
        's': [0x69, 0xc, 0x22],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x2a2, 0x0, -0x29],
        's': [0x2, 0x39, 0x20],
        'l': 0x1,
        'c': 0x786452,
        't': 0x5
      }, {
        'p': [0x2b4, 0x10, -0x6a],
        's': [0x1a, 0x1f, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x2b3, -0x1, -0x6a],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x288, 0x11, 0x8],
        's': [0x1a, 0x22, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x288, -0x1, 0x9],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x1ca, 0x11, -0x8c],
        's': [0x1a, 0x1f, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x26d, 0x12, -0x9a],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x26d, -0x1, -0x9a],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0xd0, 0x0, -0x178],
        's': [0x79, 0x45, 0x53],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x2a2, 0x6c, -0x29],
        's': [0x1, 0x9, 0x9],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x2a1, 0x71, -0x29],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'c': 0x2d2d2d,
        't': 0x5
      }, {
        'p': [0x2a1, 0x71, -0x29],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'r': [2.09, 0x0, 0x0],
        'c': 0x2d2d2d,
        't': 0x5
      }, {
        'p': [0x2a2, 0x40, -0x29],
        's': [0x2, 0x13, 0x4],
        'l': 0x1,
        'c': 0x202020,
        't': 0x5
      }, {
        'p': [0x2f0, 0x12, 0xa7],
        's': [0x27, 0x18, 0x49e],
        'l': 0x1,
        'c': 0x486126,
        't': 0x5
      }, {
        'p': [0x263, 0x12, -0x191],
        's': [0x101, 0x1f, 0x1b],
        'l': 0x1,
        'c': 0x5c7a34,
        't': 0x5
      }, {
        'p': [0x250, 0x1f, -0x18b],
        's': [0x26, 0x22, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x2e1, 0xf, -0x17f],
        's': [0x2f, 0x24, 0x31],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x2ea, 0x16, -0xc8],
        's': [0x26, 0x1c, 0x26],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x2ea, 0x16, -0x124],
        's': [0x26, 0x21, 0x26],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x2ec, 0x0, -0x8e],
        's': [0x4, 0x17, 0x84],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x2f6, 0x0, -0x12a],
        's': [0x4, 0x17, 0xdb],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x2df, -0x1, -0x11f],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x1b, 0x0, 0xac],
        's': [0x5e2, 0x0, 0x4bc],
        'i': 0x4,
        'c': '#728447',
        't': 0x5
      }, {
        'p': [0x280, 0x0, -0x195],
        's': [0x133, 0x17, 0x5],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x21e, -0x1, -0x187],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x262, 0x12, -0xeb],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x262, -0x1, -0xeb],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x1cc, -0x1, -0x144],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x1cc, 0x12, -0x144],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x2ec, 0x0, 0x14b],
        's': [0x4, 0x17, 0x354],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x1f5, 0x11, -0x71],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x1cb, 0x9, -0x66],
        's': [0x19, 0x1a, 0x19],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0x1c3, 0x16, 0x5d],
        's': [0x1a, 0x18, 0x19],
        'l': 0x1,
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [0x1ab, 0xa, 0x3c],
        's': [0x1a, 0x1c, 0x1d],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x1a8, 0xf, 0x87],
        's': [0x1e, 0x1c, 0x1b],
        'l': 0x1,
        'c': 0x486126,
        't': 0x5
      }, {
        'p': [0x1f5, 0x10, -0x8],
        's': [0x1d, 0x19, 0x1d],
        'l': 0x1,
        'c': 0x4b662d,
        't': 0x5
      }, {
        'p': [0x212, 0x9, -0x34],
        's': [0x1d, 0x19, 0x1d],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0x253, 0x9, 0x6b],
        's': [0x1d, 0x19, 0x1d],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0x1a2, 0xd, 0xb7],
        's': [0x1d, 0x19, 0x1d],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0x1dd, 0x14, 0xa6],
        's': [0x1b, 0x1e, 0x1e],
        'l': 0x1,
        'c': 0x739b3b,
        't': 0x5
      }, {
        'p': [0x2ea, 0x16, 0x4d],
        's': [0x26, 0x1c, 0x2c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x2ea, 0x16, 0x8c],
        's': [0x26, 0x1d, 0x29],
        'l': 0x1,
        'c': 0x648930,
        't': 0x5
      }, {
        'p': [0x1b7, 0x8, 0x2e],
        's': [0x1d, 0x19, 0x1d],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0x2ea, 0x17, 0xfe],
        's': [0x26, 0x1c, 0x22],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x2ea, 0x12, 0x15d],
        's': [0x26, 0x1d, 0x4a],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x1c2, 0xe, -0xb1],
        's': [0x19, 0x1e, 0x19],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0xa6, 0x0, -0x1ad],
        's': [0x6fa, 0x17, 0x5],
        'l': 0x1,
        'c': 0x5a4b3b,
        't': 0x5
      }, {
        'p': [-0x51, 0x13, -0x1a2],
        's': [0x4d1, 0x1f, 0x1b],
        'l': 0x1,
        'c': 0x5c7a34,
        't': 0x5
      }, {
        'p': [0x1b4, 0x10, -0x197],
        's': [0x26, 0x25, 0x1c],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [0x13f, 0x11, -0x197],
        's': [0x26, 0x25, 0x1c],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [0x1b5, -0x1, -0x191],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x13e, -0x1, -0x191],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x123, -0x1, -0x19c],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x173, -0x1, -0x19c],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x178, 0x1f, -0x1b7],
        's': [0x26, 0x21, 0x1c],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [0x123, -0x1, -0xea],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x123, 0x8, -0xed],
        's': [0x1f, 0x21, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0xd0, 0x45, -0x178],
        's': [0x80, 0x3, 0x59],
        'l': 0x1,
        'c': 0x616161,
        't': 0x5
      }, {
        'p': [0x18f, -0x1, 0x2d],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x198, -0x1, -0x19f],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0xf2, 0x2f, -0x14e],
        's': [0xb, 0xc, 0x1],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0xad, 0x2f, -0x14e],
        's': [0xb, 0xc, 0x1],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0xad, 0x2e, -0x14d],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xad, 0x3b, -0x14d],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xf2, 0x3b, -0x14d],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xf2, 0x2e, -0x14d],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xa7, 0x2f, -0x14e],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xb3, 0x2f, -0x14e],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xec, 0x2f, -0x14e],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xf8, 0x2f, -0x14e],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xf2, 0x2f, -0x14e],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xad, 0x2f, -0x14e],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x18, 0x70, 0x1d4],
        's': [0x2, 0x9, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1b, 0x42, 0x1d6],
        's': [0xe, 0x39, 0x3],
        'l': 0x1,
        'c': 0x5a5a5a,
        't': 0x5
      }, {
        'p': [-0x1e, 0x70, 0x1d4],
        's': [0x2, 0x9, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1b, 0x74, 0x1d4],
        's': [0x4, 0x2, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x18, 0x65, 0x1d4],
        's': [0x2, 0x9, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1e, 0x65, 0x1d4],
        's': [0x2, 0x9, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1b, 0x65, 0x1d4],
        's': [0x4, 0x2, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1b, 0x6c, 0x1d4],
        's': [0x4, 0x2, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1b, 0x5a, 0x1d4],
        's': [0x2, 0x9, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1b, 0x61, 0x1d4],
        's': [0x8, 0x2, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x19, 0x4f, 0x1d4],
        's': [0x2, 0x9, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1b, 0x56, 0x1d4],
        's': [0x6, 0x2, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1b, 0x4f, 0x1d4],
        's': [0x6, 0x2, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1b, 0x52, 0x1d4],
        's': [0x6, 0x2, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x19, 0x44, 0x1d4],
        's': [0x2, 0x9, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x1c, 0x44, 0x1d4],
        's': [0x6, 0x2, 0x1],
        'l': 0x1,
        'c': 0x575757,
        'e': 0xff0000,
        't': 0x5
      }, {
        'p': [-0x25, 0x6c, 0x1d6],
        's': [0x6, 0x3, 0x3],
        'l': 0x1,
        'c': 0x5a5a5a,
        't': 0x5
      }, {
        'p': [-0x25, 0x4d, 0x1d6],
        's': [0x6, 0x3, 0x3],
        'l': 0x1,
        'c': 0x5a5a5a,
        't': 0x5
      }, {
        'p': [0x41, 0x1, 0x28e],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0x20, 0x0, 0x32e],
        's': [0x4f, 0x87, 0x74],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x20, 0x87, 0x32e],
        's': [0x57, 0x3, 0x7c],
        'l': 0x1,
        'c': 0x5c5c5c,
        't': 0x5
      }, {
        'p': [0x58, -0x1, 0x2c5],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x5a, 0x11, 0x2c4],
        's': [0x1b, 0x1c, 0x18],
        'l': 0x1,
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [-0x21, -0x1, 0x302],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x22, 0x10, 0x302],
        's': [0x1b, 0x1c, 0x18],
        'l': 0x1,
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [0x73, -0x2, 0x3be],
        's': [0x71, 0x41, 0x74],
        'l': 0x1,
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x73, 0x3f, 0x3be],
        's': [0x7c, 0x5, 0x7e],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x5
      }, {
        'p': [-0x3f, -0x12, 0x3a0],
        's': [0x7b, 0x70, 0x78],
        'l': 0x1,
        'c': 0xc5a15e,
        't': 0x5
      }, {
        'p': [-0x3f, 0x5d, 0x3a0],
        's': [0x83, 0x4, 0x7f],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x9b, -0x4b, 0x4e3],
        's': [0x4f, 0x121, 0x3d],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x97, -0x1f, 0x460],
        's': [0x6c, 0x8e, 0x3d],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x134, 0x0, 0x460],
        's': [0x4f, 0xdc, 0x3d],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [-0x10d, -0x1f, 0x3f0],
        's': [0x6c, 0x8e, 0x71],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x1b5, 0x0, 0x2eb],
        's': [0x2a5, 0x17, 0x5],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x261, 0x15, 0x2ef],
        's': [0x13b, 0x18, 0x2c],
        'l': 0x1,
        'c': 0x486126,
        't': 0x5
      }, {
        'p': [0x10d, 0x15, 0x2ef],
        's': [0x176, 0x1b, 0x35],
        'l': 0x1,
        'c': 0x486126,
        't': 0x5
      }, {
        'p': [0x20d, 0x14, 0x2e8],
        's': [0x26, 0x1d, 0x29],
        'l': 0x1,
        'c': 0x648930,
        't': 0x5
      }, {
        'p': [0x2e8, 0x12, 0x2e3],
        's': [0x2b, 0x23, 0x2e],
        'l': 0x1,
        'c': 0x648930,
        't': 0x5
      }, {
        'p': [0x14d, 0x16, 0x2e7],
        's': [0x26, 0x20, 0x29],
        'l': 0x1,
        'c': 0x648930,
        't': 0x5
      }, {
        'p': [0x27c, 0x14, 0x2e8],
        's': [0x26, 0x1d, 0x29],
        'l': 0x1,
        'c': 0x648930,
        't': 0x5
      }, {
        'p': [0x2ea, 0x17, 0x22d],
        's': [0x26, 0x1c, 0x22],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x1bb, 0x18, 0x102],
        's': [0x17, 0x18, 0x17],
        'l': 0x1,
        'c': 0x486126,
        't': 0x5
      }, {
        'p': [0x167, 0xb, 0xc5],
        's': [0x18, 0x18, 0x1e],
        'l': 0x1,
        'c': 0x618234,
        't': 0x5
      }, {
        'p': [0x139, 0xd, 0xf5],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [0x171, 0x3c, 0x143],
        's': [0x84, 0x3, 0x82],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x171, -0x4, 0x143],
        's': [0x7b, 0x40, 0x78],
        'l': 0x1,
        'c': 0xc5a15e,
        't': 0x5
      }, {
        'p': [0xfc, 0xc, -0xd1],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4b612b,
        't': 0x5
      }, {
        'p': [0xd0, -0x1, -0x172],
        's': [0x89, 0xa, 0x59],
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [0x175, 0x12, -0x103],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0xf7, 0x18, 0x2e7],
        's': [0x26, 0x20, 0x29],
        'l': 0x1,
        'c': 0x648930,
        't': 0x5
      }, {
        'p': [0x23b, -0x39, 0x4ee],
        's': [0x4f, 0xdc, 0x3d],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x233, 0xd, 0x35],
        's': [0x1d, 0x19, 0x1d],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0x1b7, 0x5, 0xa],
        's': [0x1d, 0x19, 0x1d],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0x120, 0x9, -0xb9],
        's': [0x19, 0x1a, 0x19],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0x151, 0xe, -0xb7],
        's': [0x19, 0x1a, 0x19],
        'l': 0x1,
        'c': 0x668c3c,
        't': 0x5
      }, {
        'p': [0xa4, 0x6, -0xdd],
        's': [0x19, 0x1e, 0x19],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0xd5, 0xc, -0xfa],
        's': [0x15, 0x19, 0x15],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0x170, 0xf, -0xb7],
        's': [0x1a, 0x1b, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x188, 0xb, -0xc2],
        's': [0x19, 0x1a, 0x19],
        'l': 0x1,
        'c': 0x567533,
        't': 0x5
      }, {
        'p': [0x13c, 0x5, -0xcb],
        's': [0x19, 0x1a, 0x19],
        'l': 0x1,
        'c': 0x567533,
        't': 0x5
      }, {
        'p': [0x1b7, 0x8, 0x53],
        's': [0x1d, 0x19, 0x1d],
        'l': 0x1,
        'c': 0x577832,
        't': 0x5
      }, {
        'p': [0xd4, 0x12, -0x13f],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x33, 0x1f, -0x1b7],
        's': [0x26, 0x21, 0x1c],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [0x6f, 0x11, -0x197],
        's': [0x26, 0x25, 0x1c],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [0x19, -0x1, -0x19c],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x6f, -0x1, -0x191],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x49, -0x1, -0x197],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x5c, 0x11, -0x197],
        's': [0x26, 0x25, 0x1c],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0xaf, 0x1b, -0x1ab],
        's': [0x26, 0x21, 0x1c],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0xaf, 0x1b, -0x1ab],
        's': [0x26, 0x21, 0x1c],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x5a, -0x1, -0x190],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0xae, -0x1, -0x1a2],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x43, 0x16, -0x112],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0x42, -0x1, -0x111],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0xc, 0x32, -0x84],
        's': [0xb, 0xc, 0x1],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0xc, 0x31, -0x83],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0xc, 0x3e, -0x84],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x12, 0x32, -0x84],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x6, 0x32, -0x84],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0xc, 0x32, -0x84],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x3f, 0xa, -0xb5],
        's': [0x19, 0x1e, 0x19],
        'l': 0x1,
        'c': 0x688c40,
        't': 0x5
      }, {
        'p': [0x20, 0x1a, -0x7e],
        's': [0x10, 0xd, 0x16],
        'c': 0xc5b960,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x7d, -0x1, 0x2],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x80, 0x0, 0x59],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x58, -0x1, 0x52],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x8e, -0x1, 0x80],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x25, -0x1, -0x37],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0xef, 0x3, -0x42],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [-0x26, 0x3, 0x9d],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [-0xf7, -0x1, -0x19e],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x155, -0x1, -0x19d],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0xfc, 0xf, -0x1ab],
        's': [0x33, 0x3a, 0x1c],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x174, 0xf, -0x19b],
        's': [0x30, 0x29, 0x23],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0xd4, 0xa, -0xb1],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0x9c, -0x1, 0xeb],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x9d, 0xf, 0xeb],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x75a236,
        't': 0x5
      }, {
        'p': [0xa5, -0x1, -0xd5],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0xcb, -0x1, -0xba],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x7c, -0x1, -0xbc],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x11d, -0x1, -0xb9],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0xfa, -0x1, -0xca],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x7d, -0x1, -0x69],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x106, -0x1, -0x11],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0xf5, -0x1, 0xbe],
        's': [0x4, 0x2, 0x6],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x188, -0x1, 0x28],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x109, -0x1, -0x41],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x6d, -0x1, -0x92],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0xd5, -0x1, -0x13e],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0xd5, -0x1, -0xf8],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x37, -0x1, -0x197],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x18, 0x1, 0x18b],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1,
        'r': [3.14, -1.22, 3.14]
      }, {
        'p': [-0x103, 0x11, 0xe7],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x75a236,
        't': 0x5
      }, {
        'p': [-0xcb, 0x12, 0x123],
        's': [0x1a, 0x1a, 0x1c],
        'l': 0x1,
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [-0xcb, -0x1, 0x124],
        's': [0x4, 0x17, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x9b, -0x4b, 0x4e3],
        's': [0x4, 0x155, 0x4],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x134, 0x55, 0x460],
        's': [0x4, 0xbd, 0x2],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [-0x66, -0x1, -0xb4],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x40, -0x1, -0xb4],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x11d, -0x1, -0x4e],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x27, -0x1, -0x8d],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x15e, -0x1, 0x5],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x1ab, -0x1, -0x88],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x147, -0x1, 0x9a],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0xc8, -0x1, 0x79],
        's': [0x4, 0x2, 0x4],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0xb, 0x0, -0x4b],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x85, 0x0, 0xf],
        's': [0x1, 0xf, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, -0.17],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x85, 0x0, 0xb],
        's': [0x1, 0xf, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, -0.17],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x2f, 0x2, 0x16],
        's': [0x4, 0x24, 0x4c],
        'c': 0x587fc8,
        't': 0x5
      }, {
        'p': [-0xfd, 0x10, -0xb0],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0xb6, 0x0, -0xf5],
        's': [0x79, 0x33, 0x53],
        'c': 0xcfcfcf,
        't': 0x5
      }, {
        'p': [-0xd1, -0x1, -0xb0],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0xb7, 0x42, -0x3a],
        's': [0x4, 0x1, 0x1],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0xb9, 0x40, -0x3a],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0xb9, 0x3f, -0x3a],
        's': [0x3, 0x1, 0x2],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0xb6, 0x33, -0xf5],
        's': [0x82, 0x3, 0x5f],
        'c': 0x6b6b6b,
        't': 0x5
      }, {
        'p': [-0xad, 0x1f, -0xcb],
        's': [0xb, 0xc, 0x1],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0xb3, 0x1f, -0xcb],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0xa7, 0x1f, -0xcb],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0xad, 0x1f, -0xcb],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0xad, 0x1e, -0xcb],
        's': [0xe, 0x1, 0x4],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0xad, 0x2b, -0xcb],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x188, 0x0, 0x2eb],
        's': [0x2a5, 0x17, 0x5],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x181, 0x15, 0x2ef],
        's': [0x2b3, 0x1b, 0x35],
        'l': 0x1,
        'c': 0x486126,
        't': 0x5
      }, {
        'p': [-0x195, 0x0, -0x33],
        's': [0x7b, 0x3c, 0x78],
        'c': 0xc5a15e,
        't': 0x5
      }, {
        'p': [-0x193, 0x3c, -0x33],
        's': [0x82, 0x2, 0x82],
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [-0x13c, 0xf, 0xb],
        's': [0x1a, 0x1e, 0x1c],
        'l': 0x1,
        'c': 0x75a236,
        't': 0x5
      }, {
        'p': [-0x140, -0x1, 0xad],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x2c3, 0x13, 0xa5],
        's': [0x2c, 0x1f, 0x514],
        'l': 0x1,
        'c': 0x5c7a34,
        't': 0x5
      }, {
        'p': [-0x2b6, 0x0, 0xb7],
        's': [0x1, 0x17, 0x4b8],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x157, 0x28, -0x53],
        's': [0x1, 0xc, 0xb],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x158, 0x34, -0x53],
        's': [0x4, 0x1, 0xd],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x157, 0x27, -0x53],
        's': [0x4, 0x1, 0xe],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x158, 0x28, -0x59],
        's': [0x4, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x158, 0x28, -0x4d],
        's': [0x4, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x158, 0x28, -0x53],
        's': [0x4, 0xc, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x13b, 0x5, -0x2d],
        's': [0x1a, 0x1e, 0x1c],
        'l': 0x1,
        'c': 0x678e30,
        't': 0x5
      }, {
        'p': [-0x173, -0x19, 0x10],
        's': [0x1b, 0x69, 0xf],
        'c': 0x646464,
        't': 0x5
      }, {
        'p': [-0x136, 0x10, -0xa6],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0x136, -0x1, -0xa7],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x122, 0xb, -0xd5],
        's': [0x1a, 0x1e, 0x1c],
        'l': 0x1,
        'c': 0x75a236,
        't': 0x5
      }, {
        'p': [-0x10e, 0x10, -0x112],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0x10d, -0x1, -0x10f],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x14e, 0x10, -0xd8],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0x148, -0x1, -0xdb],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x2a, 0x0, 0x19],
        's': [0x6, 0x9, 0x4e],
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [0x11, 0x2, -0x7e],
        's': [0xe, 0x25, 0x16],
        'c': 0xc5b960,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x20, 0x2, -0x77],
        's': [0x10, 0x18, 0x2],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x2f, 0x2, -0x7e],
        's': [0xe, 0x25, 0x16],
        'c': 0xc5b960,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0xff, -0x1, 0xe6],
        's': [0x4, 0x17, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x113, -0x1, 0xb7],
        's': [0x4, 0x1c, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x20, 0x2a, -0x84],
        's': [0x1d, 0x12, 0x1],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x11, 0x2a, -0x84],
        's': [0x1, 0x12, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x20, 0x2a, -0x84],
        's': [0x1, 0x12, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x20, 0x3c, -0x84],
        's': [0x1f, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0xb, 0x2a, -0x74],
        's': [0x2, 0x8, 0x2],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x35, 0x2a, -0x74],
        's': [0x2, 0x8, 0x2],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x35, 0x2a, -0x83],
        's': [0x2, 0x8, 0x2],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0xb, 0x2a, -0x83],
        's': [0x2, 0x8, 0x2],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0xb, 0x2a, -0x7b],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x35, 0x2a, -0x7c],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x2e, 0x2a, -0x74],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x12, 0x2a, -0x74],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x1b, 0x2a, -0x74],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x24, 0x2a, -0x74],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x20, 0x31, -0x74],
        's': [0x2a, 0x1, 0x2],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0x35, 0x31, -0x7c],
        's': [0x2, 0x1, 0xe],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [0xb, 0x31, -0x7b],
        's': [0x2, 0x1, 0xe],
        'l': 0x1,
        'c': 0x505050,
        't': 0x5
      }, {
        'p': [-0xb7, 0x24, -0x3a],
        's': [0x4, 0x2, 0x14],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x132, 0x24, 0x40],
        's': [0x4, 0x2, 0x14],
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x2f, 0x2a, -0x84],
        's': [0x1, 0x12, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x154, -0x1, -0xb6],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x171, -0x1, -0xb6],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x1a3, -0x1, -0xb7],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x187, -0x1, -0xc1],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x46, 0x2, 0xa0],
        's': [0x3, 0x6, 0x6],
        'l': 0x1,
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [-0x46, 0x7, 0xa2],
        's': [0x1, 0x3, 0x1],
        'l': 0x1,
        'c': 0x878787,
        't': 0x5
      }, {
        'p': [0x62, 0x2, -0xd4],
        's': [0xe, 0x64, 0x19],
        'c': 0x707070,
        't': 0xb
      }, {
        'p': [-0x18d, 0x10, -0x80],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0x185, -0x1, -0x80],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x2b1, 0xf, -0x133],
        's': [0x30, 0x29, 0x3a],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x2b1, 0x11, -0xd0],
        's': [0x30, 0x29, 0x29],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x23e, 0x11, -0x19d],
        's': [0x30, 0x29, 0x23],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x194, 0x11, -0xb0],
        's': [0x1a, 0x1f, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [-0x195, -0x1, -0xb1],
        's': [0x4, 0x22, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x1cc, 0xf, -0x19b],
        's': [0x24, 0x2b, 0x23],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [0x171, 0x27, 0x107],
        's': [0xb, 0xc, 0x1],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x171, 0x26, 0x106],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x171, 0x33, 0x107],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x177, 0x27, 0x107],
        's': [0x1, 0xc, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x16b, 0x27, 0x107],
        's': [0x1, 0xc, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x171, 0x27, 0x107],
        's': [0x1, 0xc, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x174, 0x0, 0x62],
        's': [0x68, 0x6a, 0x74],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [-0x174, 0x69, 0x62],
        's': [0x73, 0x3, 0x7e],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x16e, 0x11, 0x2e1],
        's': [0x30, 0x29, 0x29],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x1e9, 0x11, 0x2e1],
        's': [0x42, 0x24, 0x29],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0xcd, 0x11, 0x2e1],
        's': [0x42, 0x24, 0x29],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x270, 0x11, 0x2e1],
        's': [0x42, 0x27, 0x29],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x2b1, 0x11, 0xca],
        's': [0x30, 0x29, 0x29],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x2b1, 0x11, 0x13e],
        's': [0x30, 0x29, 0x29],
        'l': 0x1,
        'c': 0x56732d,
        't': 0x5
      }, {
        'p': [-0x132, 0x17, 0xcd],
        's': [0x1a, 0x1a, 0x1c],
        'l': 0x1,
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [-0x132, -0x1, 0xcd],
        's': [0x4, 0x1f, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [-0x122, 0xc, 0xf3],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x84af48,
        't': 0x5
      }, {
        'p': [-0x120, -0x1, 0xf9],
        's': [0x4, 0x17, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0x7e, 0x0, 0x3c],
        's': [0x2, 0x25, 0x2],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x7e, 0x0, 0x62],
        's': [0x2, 0x25, 0x2],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xa1, -0x1, 0xcd],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x122, -0x1, -0x31],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0xee, -0x1, -0x9c],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0xb6, -0x1, 0x9f],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x128, -0x1, 0x9f],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x3f1, 0xa, 0x86],
        's': [0x41, 0x4c, 0x4c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x3e3, 0x15, -0x182],
        's': [0x41, 0x35, 0x4c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x22b, 0x15, -0x22f],
        's': [0x89, 0x36, 0x4c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x39c, 0xa, 0x25e],
        's': [0x4a, 0x4a, 0x57],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [-0x121, -0x7, 0x135],
        's': [0x52, 0x6a, 0x56],
        'l': 0x1,
        'c': 0xa2a2a2,
        't': 0x5
      }, {
        'p': [0x351, -0x8, -0x208],
        's': [0x41, 0x54, 0x4c],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [0x295, -0x4, 0xa5],
        's': [0x7b, 0x40, 0x78],
        'l': 0x1,
        'c': 0xc5a15e,
        't': 0x5
      }, {
        'p': [0x295, 0x3c, 0xa5],
        's': [0x84, 0x4, 0x83],
        'l': 0x1,
        'c': 0x616161,
        't': 0x5
      }, {
        'p': [-0x121, 0x63, 0x135],
        's': [0x59, 0x4, 0x5d],
        'l': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x159, 0x12, 0xf7],
        's': [0x1a, 0x1a, 0x1c],
        'l': 0x1,
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [-0x1af, 0xe, 0xa6],
        's': [0x1a, 0x1a, 0x1c],
        'l': 0x1,
        'c': 0x5e822b,
        't': 0x5
      }, {
        'p': [-0x10d, 0x4a, 0x10a],
        's': [0xb, 0xc, 0x1],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x10d, 0x49, 0x109],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x10d, 0x56, 0x10a],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x107, 0x4a, 0x10a],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x113, 0x4a, 0x10a],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x10d, 0x4a, 0x10a],
        's': [0x1, 0xc, 0x2],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x3e3, 0x11, -0x99],
        's': [0x41, 0x44, 0x2f],
        'l': 0x1,
        'c': 0x608230,
        't': 0x5
      }, {
        'p': [-0x88, 0x3, -0x50],
        's': [0x7, 0x20, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x82, 0x3, -0x50],
        's': [0x7, 0x1d, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x7c, 0x3, -0x50],
        's': [0x7, 0x1a, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x76, 0x3, -0x50],
        's': [0x7, 0x17, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x70, 0x3, -0x50],
        's': [0x7, 0x14, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x6a, 0x3, -0x50],
        's': [0x7, 0x11, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x64, 0x3, -0x50],
        's': [0x7, 0xe, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x5e, 0x3, -0x50],
        's': [0x7, 0xb, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x58, 0x3, -0x50],
        's': [0x7, 0x8, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x52, 0x3, -0x50],
        's': [0x7, 0x5, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x4c, 0x2, -0x50],
        's': [0x7, 0x3, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [-0x66, 0x2, -0x50],
        's': [0x48, 0x24, 0x18],
        'i': 0x9,
        'v': 0x1,
        't': 0x5,
        'd': 0x2
      }, {
        'p': [-0x7d, 0x3, 0x36],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, 1.04, 0x0],
        'c': 0xaaaaaa,
        't': 0x5
      }, {
        'p': [0xfb, 0x3, 0x62],
        's': [0x7, 0x20, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xf4, 0x3, 0x62],
        's': [0x7, 0x1d, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xed, 0x3, 0x62],
        's': [0x7, 0x1a, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xe6, 0x3, 0x62],
        's': [0x7, 0x17, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xdf, 0x3, 0x62],
        's': [0x7, 0x14, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xd8, 0x3, 0x62],
        's': [0x7, 0x11, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xd1, 0x3, 0x62],
        's': [0x7, 0xe, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xca, 0x3, 0x62],
        's': [0x7, 0xb, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xc3, 0x3, 0x62],
        's': [0x7, 0x8, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xbc, 0x3, 0x62],
        's': [0x7, 0x5, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xb5, 0x2, 0x62],
        's': [0x7, 0x3, 0x17],
        'c': 0x7f7f7f,
        't': 0x5
      }, {
        'p': [0xd4, 0x2, 0x62],
        's': [0x54, 0x24, 0x18],
        'i': 0x9,
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0x140, 0x48, 0x43],
        's': [0x1, 0x14, 0x17],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x140, 0x48, 0x7d],
        's': [0x1, 0x14, 0x17],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x13f, 0x47, 0x43],
        's': [0x3, 0x1, 0x1b],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x140, 0x5c, 0x43],
        's': [0x2, 0x1, 0x1b],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x140, 0x48, 0x37],
        's': [0x2, 0x14, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x140, 0x48, 0x4f],
        's': [0x2, 0x14, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x140, 0x48, 0x43],
        's': [0x2, 0x14, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x13f, 0x47, 0x7d],
        's': [0x3, 0x1, 0x1b],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x140, 0x5c, 0x7d],
        's': [0x2, 0x1, 0x1b],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x140, 0x48, 0x89],
        's': [0x2, 0x14, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x140, 0x48, 0x71],
        's': [0x2, 0x14, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [-0x140, 0x48, 0x7d],
        's': [0x2, 0x14, 0x1],
        'l': 0x1,
        'c': 0x5f5f5f,
        't': 0x5
      }, {
        'p': [0x89, -0x1, -0x9c],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x77, 0x0, -0xf],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x2f, -0x1, 0x165],
        's': [0x26, 0x18, 0x2],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x74, -0x1, 0x113],
        's': [0x29, 0x18, 0x2],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x46, 0x2, 0x165],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -1.23, 0x0],
        'c': 0x9d9d9d,
        't': 0x5
      }, {
        'p': [-0xc, 0x2, 0xf9],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x9d9d9d,
        't': 0x5
      }, {
        'p': [-0x31, -0x1, 0x109],
        's': [0x15, 0x18, 0x2],
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x1d, -0x1, 0x165],
        's': [0x4, 0x1a, 0x4],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x29, -0x1, 0x16d],
        's': [0x3, 0xc, 0x1],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [0x3a, 0x9, 0x171],
        's': [0x28, 0x3, 0x1],
        'l': 0x1,
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [0x29, -0x1, 0x175],
        's': [0x3, 0xc, 0x1],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [0x4b, -0x1, 0x16d],
        's': [0x3, 0xc, 0x1],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [0x4b, -0x1, 0x175],
        's': [0x3, 0xc, 0x1],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [0x3, 0x9, 0x171],
        's': [0x28, 0x3, 0x1],
        'l': 0x1,
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [-0xe, -0x1, 0x16d],
        's': [0x3, 0xc, 0x1],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [0x14, -0x1, 0x16d],
        's': [0x3, 0xc, 0x1],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [-0xe, -0x1, 0x175],
        's': [0x3, 0xc, 0x1],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [0x14, -0x1, 0x175],
        's': [0x3, 0xc, 0x1],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0xc8c8c8,
        't': 0x5
      }, {
        'p': [0x3a, 0x1, 0x17e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x1f, 0x0, 0x171],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x5, 0x1, 0x179],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x2f, 0x1, 0x17a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x22, 0x1, 0x170],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x59, 0x0, 0x175],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x49, 0x2, 0x196],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [3.14, -1.39, 3.14],
        'c': 0x9d9d9d,
        't': 0x5
      }, {
        'p': [0x4b, 0x2, 0x11a],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -1.4, 0x0],
        'c': 0x9d9d9d,
        't': 0x5
      }, {
        'p': [0x5a, 0x0, 0x10a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x64, -0x1, 0x15c],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0xa4, -0x1, 0x156],
        's': [0x2, 0x1b, 0x30],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x85, 0x0, 0x124],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x18, -0x1, 0x1ac],
        's': [0xa8, 0xd, 0x77],
        'v': 0x1,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x2f, -0x1, 0x16b],
        's': [0x25, 0xd, 0xe],
        'v': 0x1,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x14, 0x1, 0x174],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xbc, -0x1, 0x153],
        's': [0x4, 0x1c, 0x4],
        'l': 0x1,
        'c': 0x64523f,
        't': 0x5
      }, {
        'p': [0xbd, 0x16, 0x155],
        's': [0x1a, 0x1c, 0x1c],
        'l': 0x1,
        'c': 0x4f6b27,
        't': 0x5
      }, {
        'p': [0xdd, -0x1, 0x15f],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [0x121, -0x1, 0x16e],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'c': 0x6a933b,
        't': 0x5
      }, {
        'p': [0x71, 0x3, -0x25],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [0xa7, 0x3, -0x4b],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [0xa4, 0x27, -0xd],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [0xf9, 0x27, 0x2f],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [-0x8e, 0x2, 0x19],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xaf, 0x2, -0x1c],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0xaf, 0x4, -0x1c],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [0xf3, 0x2, 0x8],
        's': [0x1, 0x11, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x81, 0x2, 0xc],
        's': [0x1, 0x11, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x8b, 0x2, 0x4a],
        's': [0x1, 0x11, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0x8b, 0x2, 0x51],
        's': [0x1, 0x11, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x9e, 0x26, -0x16],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [0x9e, 0x28, -0x16],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [0xca, 0x26, 0x4d],
        's': [0x4, 0x16, 0x2],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0xd1, 0x26, 0x4d],
        's': [0x4, 0x16, 0x2],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x91, 0x2, -0x16],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [0x91, 0x4, -0x16],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [0xbc, 0x8, 0x58],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [0xbc, 0xa, 0x58],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x5d, 0xe, -0x46],
        's': [0x2, 0x4, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [-0x5d, 0x10, -0x46],
        's': [0x1, 0x4, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': 0x4f8444,
        't': 0x5
      }, {
        'p': [0x91, 0x27, 0x69],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [0x0, 1.39, 0x0],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [0xa8, 0x26, 0x6a],
        's': [0x4, 0x16, 0x2],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0x23, 0x1, 0x130],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x17, 0x1, 0x130],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x1d, 0xd, 0x130],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x5c, 0x20, -0x2],
        's': [0x7, 0x2, 0x7],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0x5c, 0x22, -0x2],
        's': [0x3, 0x2, 0x3],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0x5c, 0x1f, -0x2],
        's': [0x3, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [-0x5c, 0x4a, -0x2],
        's': [0x3, 0x2, 0x3],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0x5c, 0x48, -0x2],
        's': [0x7, 0x2, 0x7],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0x5c, 0x47, -0x2],
        's': [0x3, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0xb7, 0x4a, 0x27],
        's': [0x3, 0x2, 0x3],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0xb7, 0x48, 0x27],
        's': [0x7, 0x2, 0x7],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0xb7, 0x47, 0x27],
        's': [0x3, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0xb7, 0x22, 0x27],
        's': [0x3, 0x2, 0x3],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0x110, 0x20, 0x27],
        's': [0x7, 0x2, 0x7],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0xb7, 0x1f, 0x27],
        's': [0x3, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x110, 0x22, 0x27],
        's': [0x3, 0x2, 0x3],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0xb7, 0x20, 0x27],
        's': [0x7, 0x2, 0x7],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [0x110, 0x1f, 0x27],
        's': [0x3, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x126, 0x2, 0x17],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x120, 0x3, 0x9],
        's': [0x4, 0x0, 0x5],
        'i': 0x4,
        'l': 0x1,
        'r': [-3.14, 1.4, -3.14],
        'c': 0x939393,
        't': 0x5
      }, {
        'p': [-0xa3, 0x20, -0x2],
        's': [0x7, 0x2, 0x7],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0xa3, 0x22, -0x2],
        's': [0x3, 0x2, 0x3],
        'c': 0x898686,
        't': 0x5
      }, {
        'p': [-0xa3, 0x1f, -0x2],
        's': [0x3, 0x1, 0x3],
        'l': 0x1,
        'c': 0x0,
        'e': 0xffd87a,
        't': 0x5
      }, {
        'p': [0x1c, 0x1, 0x131],
        's': [0x48, 0x32, 0x3f],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [-0x59, 0x26, -0x8],
        's': [0x3d, 0x26, 0x41],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0xb8, 0x2, 0x25],
        's': [0x3d, 0x21, 0x3b],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0x16f, 0x0, 0x20],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': 0x0
      }, {
        'p': [-0xd7, 0x0, 0x23],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': '1'
      }, {
        'p': [-0x64, 0xe, 0x46],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x64, 0x2, 0x46],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [-0x23, -0x1, -0x12],
        's': [0x3, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x23, -0x1, -0x1c],
        's': [0x3, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x23, -0x1, -0x17],
        's': [0x4, 0x2, 0x5],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x1d, -0x1, -0x1c],
        's': [0x5, 0x2, 0x4],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x1d, -0x1, -0x12],
        's': [0x5, 0x2, 0x4],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0x1d, -0x1, -0x17],
        's': [0x3, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x7f, -0x1, 0x27],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x7f, -0x1, 0x31],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x7f, -0x1, 0x2c],
        's': [0x4, 0x2, 0x5],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x6d, -0x1, 0x28],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x79, -0x1, 0x30],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x73, -0x1, 0x2c],
        's': [0x4, 0x2, 0x5],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x67, -0x1, 0x2c],
        's': [0x4, 0x2, 0x5],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x79, -0x1, 0x28],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x6d, -0x1, 0x30],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x73, -0x1, 0x31],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x73, -0x1, 0x27],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x61, -0x1, 0x30],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x61, -0x1, 0x28],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x5b, -0x1, 0x2c],
        's': [0x4, 0x2, 0x5],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x55, -0x1, 0x28],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x55, -0x1, 0x30],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x67, -0x1, 0x31],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x5b, -0x1, 0x31],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x5b, -0x1, 0x27],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [0x67, -0x1, 0x27],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': 0x707070,
        't': 0x5
      }, {
        'p': [-0xfb, -0x1, 0x8d],
        's': [0x4, 0x1a, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [-0xfb, -0x1, 0x76],
        's': [0x4, 0x1a, 0x4],
        'pe': 0x1,
        'c': 0x755f47,
        't': 0x5
      }, {
        'p': [0xdc, 0x52, 0x2b],
        's': [0xb2, 0x4, 0x98],
        'r': [0.09, 0x0, 0x0],
        'c': 0x505050,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x12e, 0x54, -0x1],
        's': [0x4, 0x3, 0x2e],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x12e, 0x57, -0xd],
        's': [0x4, 0x3, 0x16],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x12e, 0x26, 0x5b],
        's': [0x4, 0x26, 0x26],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x12e, 0x4c, 0x5b],
        's': [0x4, 0x3, 0x26],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x8a, 0x42, 0x51],
        's': [0x4, 0xf, 0x22],
        'c': 0xc54343,
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x8a, 0x57, -0xe],
        's': [0x4, 0x1, 0x4],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x38, 0x1, 0x73],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x38, 0x6, 0x6f],
        's': [0x1, 0x3, 0x1],
        'c': 0x878787,
        't': 0x5
      }, {
        'p': [0x38, 0x1, 0x6d],
        's': [0x3, 0x6, 0x6],
        'c': 0xc54343,
        't': 0x5
      }, {
        'p': [0x28, 0xa, 0x30],
        's': [0x18, 0x2, 0x64],
        'pe': 0x1,
        'c': 0x2c3f55,
        't': 0x5
      }, {
        'p': [0x28, 0x25, 0x30],
        's': [0x1c, 0x2, 0x64],
        'pe': 0x1,
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x28, 0x3, 0x26],
        's': [0x1b, 0x4, 0x4],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x28, 0x3, 0x16],
        's': [0x1b, 0x4, 0x4],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x1d, 0x1, 0x16],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x1d, 0x1, 0x26],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x22, 0x1, 0x26],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x22, 0x1, 0x16],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x33, 0x1, 0x26],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x2e, 0x1, 0x26],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x33, 0x1, 0x16],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x2e, 0x1, 0x16],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x28, 0xc, 0x61],
        's': [0x18, 0x19, 0x2],
        'pe': 0x1,
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x28, 0x6, 0x3b],
        's': [0x5, 0x4, 0x55],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x28, 0x6, -0x1],
        's': [0x18, 0x4, 0x3],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x2f, 0xc, -0x2],
        's': [0xc, 0x19, 0x2],
        'pe': 0x1,
        'c': '#6b6b6b',
        't': 0x5
      }, {
        'p': [0x1a, 0xc, 0x3],
        's': [0x2, 0x19, 0xc],
        'c': '#6b6b6b',
        't': 0x5
      }, {
        'p': [0x28, 0x5, -0x1],
        's': [0x1b, 0x1, 0x4],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x28, 0x3, 0x6e],
        's': [0x1b, 0x4, 0x4],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x33, 0x1, 0x6e],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x1d, 0x1, 0x6e],
        's': [0x4, 0x8, 0x8],
        'c': 0x161616,
        't': 0x5
      }, {
        'p': [0x32, 0x7, -0x2],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'c': 0xff4b00,
        'e': 0xff0000,
        'o': 0.8,
        't': 0x5
      }, {
        'p': [0x1e, 0x7, -0x2],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'c': '#ff4b00',
        'e': 0xff0000,
        'o': 0.8,
        't': 0x5
      }, {
        'p': [0x28, 0x5, 0x66],
        's': [0x18, 0x1c, 0x4],
        'c': '#bbbbbb',
        't': 0x5
      }, {
        'p': [0x28, 0x5, 0x76],
        's': [0x18, 0x18, 0x4],
        'c': '#bbbbbb',
        't': 0x5
      }, {
        'p': [0x28, 0x6, 0x6f],
        's': [0x11, 0x6, 0xe],
        'c': '#595959',
        't': 0x5
      }, {
        'p': [0x28, 0x5, 0x79],
        's': [0x19, 0x6, 0x3],
        'c': '#5c5c5c',
        't': 0x5
      }, {
        'p': [0x28, 0x11, 0x7a],
        's': [0x16, 0xa, 0x1],
        'l': 0x1,
        'c': '#22272d',
        't': 0x5
      }, {
        'p': [0x28, 0xb, 0x79],
        's': [0x18, 0x6, 0x2],
        'c': '#bbbbbb',
        't': 0x5
      }, {
        'p': [0x28, 0x11, 0x79],
        's': [0x18, 0xb, 0x2],
        'l': 0x1,
        'c': '#bbbbbb',
        't': 0x5
      }, {
        'p': [0x28, 0x11, 0x79],
        's': [0x18, 0xb, 0x2],
        'v': 0x1,
        'c': '#213041',
        't': 0x5
      }, {
        'p': [0x32, 0xc, 0x7a],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'e': 0xffd100,
        'o': 0.8,
        't': 0x5
      }, {
        'p': [0x1e, 0xc, 0x7a],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'e': 0xffd100,
        'o': 0.8,
        't': 0x5
      }, {
        'p': [0x28, 0xc, 0x7a],
        's': [0xe, 0x4, 0x2],
        'c': '#6e6e6e',
        't': 0x5
      }, {
        'p': [0x28, 0x14, 0x76],
        's': [0x1c, 0x4, 0x1],
        'c': '#6e6e6e',
        't': 0x5
      }, {
        'p': [0x28, 0x3, 0x56],
        's': [0x16, 0x6, 0x16],
        'c': 0x827d7d,
        't': 0x5
      }, {
        'p': [0x1e, 0xc, 0x64],
        's': [0x1, 0x19, 0x1],
        'c': '#666666',
        'e': 0x181818,
        't': 0x5
      }, {
        'p': [0x32, 0xc, 0x64],
        's': [0x1, 0x19, 0x1],
        'c': '#666666',
        'e': 0x181818,
        't': 0x5
      }, {
        'p': [0x28, 0x8, 0x31],
        's': [0x1c, 0x2, 0x62],
        'pe': 0x1,
        'v': 0x1,
        'c': 0x2c3f55,
        't': 0x5
      }, {
        'p': [0x28, 0x14, 0x71],
        's': [0x19, 0x8, 0x8],
        'c': '#22272d',
        't': 0x5
      }, {
        'p': [0x28, 0xc, 0x6f],
        's': [0x18, 0x12, 0xe],
        'c': '#bbbbbb',
        't': 0x5
      }, {
        'p': [0x2d, 0xc, 0x2e],
        's': [0x6, 0x2, 0x5c],
        'l': 0x1,
        'c': 0x6b5946,
        't': 0x2
      }, {
        'p': [0x2f, 0xc, -0x3],
        's': [0x4, 0x19, 0x2],
        'i': 0x3,
        't': 0x2,
        'd': 0x3
      }, {
        'p': [0xb, 0x1, 0x16],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [0x38, 0x1, -0xc],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [0x17, 0x1, -0xc],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [0x23, 0xc, 0x57],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0x1b, 0xa, 0x4e],
        's': [0x2, 0x1b, 0x28],
        'pe': 0x1,
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x1b, 0xa, 0x13],
        's': [0x2, 0x1b, 0x2a],
        'pe': 0x1,
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x35, 0xa, 0x59],
        's': [0x2, 0x1b, 0x12],
        'pe': 0x1,
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x35, 0xa, 0x1e],
        's': [0x2, 0x1b, 0x40],
        'pe': 0x1,
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x35, 0x20, 0x47],
        's': [0x1, 0x5, 0x12],
        'c': '#ffffff',
        't': 0xa
      }, {
        'p': [0x1b, 0x20, 0x31],
        's': [0x1, 0x5, 0x12],
        'c': '#ffffff',
        't': 0xa
      }, {
        'p': [0x35, 0xa, 0x47],
        's': [0x2, 0x2, 0x12],
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x1b, 0xa, 0x31],
        's': [0x2, 0x2, 0x12],
        'c': '#2c3f55',
        't': 0x5
      }, {
        'p': [0x12, 0x1, 0x4b],
        's': [0x6, 0x2, 0x5c],
        'c': 0x846c53,
        't': 0x2
      }, {
        'p': [0xb, 0x1, 0x4a],
        's': [0x6, 0x2, 0x5c],
        'c': 0x755f47,
        't': 0x2
      }, {
        'p': [0x4, 0x1, 0x4c],
        's': [0x6, 0x2, 0x5c],
        'c': 0x503f2e,
        't': 0x2
      }, {
        'p': [0x6, 0x3, 0x4b],
        's': [0x6, 0x2, 0x5c],
        'c': 0x755f47,
        't': 0x2
      }, {
        'p': [0xe, 0x3, 0x4c],
        's': [0x6, 0x2, 0x5c],
        'c': 0x755f47,
        't': 0x2
      }, {
        'p': [0xa, 0x5, 0x4c],
        's': [0x6, 0x2, 0x5c],
        'c': 0x6b5946,
        't': 0x2
      }, {
        'p': [0xb, 0x1, 0x7d],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0x22, 0x0, 0x3d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [-0x25, 0x0, -0x3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [-0x1a, 0x0, 0x25],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [-0x1a, 0x0, -0x2c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [-0x27, 0x0, -0x60],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [-0xe, 0x0, -0x69],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [-0x5, 0x0, -0x66],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x6, 0x0, -0x7f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x24, -0x1, -0x65],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x3c, 0x0, -0x7c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x5a, 0x0, -0x80],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x63, 0x0, -0x88],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.79, 0x0],
        'c': '#d1f777'
      }, {
        'p': [0x6a, 0x0, -0x76],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x6a, 0x0, -0x54],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x55, 0x0, -0x1d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x83, -0x1, -0x16],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x54, 0x0, 0xc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x83, 0x0, 0x1b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x53, 0x0, 0x3b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x56, 0x0, 0x77],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x9e, 0x0, -0x99],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x5a, 0x0, 0xa6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x57, 0x0, 0xee],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x1b, 0x0, 0xed],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x21, 0x0, 0xca],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x1f, 0x0, 0x95],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [-0x19, 0x0, 0x7a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [-0x45, 0x0, 0xae],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x60, 0x0, 0xc9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x43, 0x0, 0xc9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xaa, 0x0, 0xc9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x93, 0x0, 0xae],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xd8, 0x0, 0xb4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xd8, 0x0, 0xac],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xf7, 0x0, 0xc6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xf7, 0x0, 0x76],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xb4, 0x0, 0x44],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x97, 0x0, 0x45],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x97, 0x0, 0x7d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xf3, 0x0, 0x32],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xf1, 0x0, 0x4f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xd7, 0x0, -0x5],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xb8, 0x0, -0x2e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x101, 0x0, -0xc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xfe, 0x0, -0x80],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xda, 0x0, -0x58],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xc4, 0x0, -0x93],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xcc, 0x0, -0x8f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x86, 0x0, -0x95],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x63, 0x0, -0x71],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x9e, 0x0, -0x64],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x23, 0x0, -0x99],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x41, 0x0, -0x76],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x1c, 0x0, 0x134],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x67, 0x0, 0x117],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x6d, 0x0, 0x12e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x55, 0x0, 0x152],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x5e, 0x0, 0x16a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x90, 0x0, 0x161],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0xa0, 0x0, 0x143],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x1a, -0x1, 0x17d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x21, -0x1, 0x19d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x54, -0x1, 0x19e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x85, 0x0, 0x45],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x84, 0x0, 0x70],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x97, 0x0, 0x83],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0xbd, 0x0, 0x84],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0xe5, 0x0, 0x9c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x10f, 0x0, 0x76],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x11e, 0x0, 0x9c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x14e, 0x0, 0x9c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x134, 0x0, 0x72],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x134, 0x0, 0x3b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x15d, 0x0, 0x26],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x173, 0x0, 0x87],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x18b, 0x0, 0x74],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x187, 0x0, 0x16],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x18c, 0x0, -0x1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x133, 0x0, -0x12],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x128, 0x0, -0x22],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x104, 0x0, -0x23],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x104, 0x0, -0x48],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x18a, 0x0, -0x2b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x194, 0x0, -0x31],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x1ad, 0x0, -0x3c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x195, 0x0, -0x99],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x124, 0x0, -0x9a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0xce, 0x0, -0x7d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0xb1, 0x0, -0x9a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0xb1, 0x0, -0x93],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xa, 0x0, -0x6c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x40, 0x0, -0x7e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [-0x11f, 0x0, -0x36],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x6c, -0x1, 0x76],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x63, -0x1, 0x98],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x7c, 0x0, 0x97],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x6e, 0x0, 0x90],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x5a, 0x0, 0xb3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x58, 0x0, 0x108],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x1f, 0x0, 0x109],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x20, 0x0, 0xff],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x21, 0x0, 0xdf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x69, -0x1, 0x52],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x6d, 0x0, 0xa],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x5f, 0x0, -0x3e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x4a, -0x1, -0x71],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x60, 0x0, -0x67],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#d1f777'
      }, {
        'p': [0x88, 0x0, -0x94],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x63, 0x0, -0x9a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#d1f777'
      }, {
        'p': [0xaa, 0x0, -0x7e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0xd3, 0x0, -0x9a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0xf3, 0x0, -0x7e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x106, 0x0, -0x98],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x134, 0x0, -0x76],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x11f, 0x0, -0x59],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x145, 0x0, -0x24],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x14d, 0x0, -0x69],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x133, 0x0, -0x40],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x167, 0x0, -0x4c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x16c, 0x0, -0x1e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x178, 0x0, 0x37],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x166, 0x0, 0x71],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x182, 0x0, 0x9b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x16b, 0x0, -0x76],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x17a, 0x0, -0x94],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x1a7, 0x0, -0x94],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x1ad, 0x0, -0x69],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x195, 0x0, -0x62],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x188, 0x0, -0x79],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x187, 0x0, -0x63],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x187, 0x0, -0x4f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x154, 0x0, 0x0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x153, 0x0, 0x37],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [0x152, 0x0, 0x56],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x83, 0x0, 0xc8],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xd5, 0x0, 0xc8],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xab, 0x0, 0xac],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xca, 0x0, 0x83],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xb4, 0x0, 0x6b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xd3, 0x0, 0x46],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xd7, 0x0, 0x12],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x11c, 0x0, 0x66],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x104, 0x0, 0x66],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x120, 0x0, 0x8e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x121, 0x0, 0xbf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x108, 0x0, 0xca],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xfe, 0x0, 0xb3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x102, 0x0, 0x99],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xb7, 0x2, 0x2e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xb9, 0x0, 0x6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x100, 0x0, 0xf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xff, 0x0, 0x26],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x120, 0x0, 0x24],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x11f, 0x0, 0x1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x11f, 0x0, -0x1e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x102, 0x0, -0x51],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xea, 0x0, -0x2b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xd0, 0x0, -0x2c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xc5, 0x0, -0x58],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x10c, 0x0, -0x71],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x116, 0x0, -0x8b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0xa5, 0x0, -0x7c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x5b, 0x0, -0x86],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x2f, 0x0, 0x15e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1
      }, {
        'p': [-0x71, 0x55, -0x10],
        's': [0x89, 0xa, 0x9f],
        'i': 0xc,
        'l': 0x1
      }, {
        'p': [0xdb, 0x55, 0x2b],
        's': [0xaa, 0xa, 0x92],
        'i': 0xc,
        'l': 0x1
      }, {
        'p': [0xd0, 0x32, -0x4e],
        's': [0x5d, 0xa, 0x57],
        'i': 0xc,
        'l': 0x1
      }, {
        'p': [-0x69, 0x32, 0x77],
        's': [0x57, 0xa, 0x63],
        'i': 0xc,
        'l': 0x1
      }]
    }, {
      'name': 'Sandstorm',
      'ambInd': 0x3,
      'modURL': '',
      'terrainSeed': '',
      'terrainWidth': 0x800,
      'terrainHeight': 0x800,
      'terrainMntMlt': 0x1,
      'terrainMntCol': '#a0a0a0',
      'terrainGrsCol': '#4a6904',
      'terrainDrtCol': '#8c6835',
      'skyDome': !0x0,
      'skyDomeCol0': '#7bd7ff',
      'skyDomeCol1': '#f7d4b4',
      'skyDomeCol2': '#dce8ed',
      'zone': !0x1,
      'zoneSize': 0x1f4,
      'zoneSpeed': 0x1,
      'zoneCol0': '#c542d9',
      'zoneCol1': '#c542d9',
      'zoneCol2': '#c542d9',
      'sizeMlt': 0x2,
      'shadowR': 0x400,
      'ambient': 0xa29290,
      'light': 0xffffff,
      'sky': 0xdce8ed,
      'fog': 0xbb9999,
      'fogD': 633.4396002067896,
      'dthY': -0x64,
      'modes': [0x0],
      'camPos': [-0x7c, 0x3e, -0x10d],
      'spawns': [
        [0x0, 0xd, -0x3, 0x0],
        [-0x4d, 0x21, -0x15b, 0x0, 0x1],
        [0x116, 0x21, 0x7a, 0x0, 0x2],
        [-0x69, 0x30, 0x56, 0x0, 0x1],
        [0xf1, 0x21, -0x142, 0x0, 0x1],
        [-0x2a, 0x30, 0x30, 0x0],
        [-0x27, 0x21, -0xd2, 0x0, 0x3]
      ],
      'ambO': 0.7,
      'ambS': 0x5,
      'shadLength': 0x183,
      'shadWidth': 0x1a9,
      'objects': [{
        'p': [-0x5, 0xc, 0x0],
        's': [0x5e, 0x1, 0x72],
        't': 0x1
      }, {
        'p': [-0x43, 0xc, 0x0],
        's': [0x1e, 0x1, 0x2c],
        't': 0x1
      }, {
        'p': [-0xb2, 0x20, 0x0],
        's': [0x7a, 0x1, 0x96],
        't': 0x1
      }, {
        'p': [-0xa3, 0xe, 0x9d],
        's': [0x9a, 0x22, 0x38],
        't': 0x1
      }, {
        'p': [-0x1c, 0x9, 0x68],
        's': [0x138, 0x27, 0x32],
        't': 0x1
      }, {
        'p': [0x1, 0x2f, -0x1a],
        's': [0x68, 0x1, 0xd2],
        't': 0x1
      }, {
        'p': [0xc2, -0x4, 0x38],
        's': [0xd8, 0x25, 0xdd],
        't': 0x1
      }, {
        'p': [-0xaf, 0x13, -0x89],
        's': [0x35, 0x19, 0x40],
        't': 0x1
      }, {
        'p': [0x40, 0xd, -0x4],
        's': [0x2c, 0x14, 0x24],
        'i': 0x9,
        't': 0x1
      }, {
        'p': [-0xd0, 0x21, 0x65],
        's': [0x24, 0xf, 0x38],
        'i': 0x9,
        't': 0x1,
        'd': 0x1
      }, {
        'p': [-0xae, 0x21, -0x59],
        's': [0x30, 0xb, 0x20],
        'i': 0x9,
        't': 0x1,
        'd': 0x3
      }, {
        'p': [-0xaf, 0x21, -0xb9],
        's': [0x35, 0xb, 0x20],
        'i': 0x9,
        't': 0x1,
        'd': 0x1
      }, {
        'p': [0x50, 0x21, -0x6a],
        's': [0x36, 0xf, 0x31],
        'i': 0x9,
        't': 0x1,
        'd': 0x2
      }, {
        'p': [0x6e, 0x21, 0x36],
        's': [0x24, 0xf, 0x32],
        'i': 0x9,
        't': 0x1,
        'd': 0x1
      }, {
        'p': [-0x8a, 0x1a, 0x4c],
        's': [0x68, 0x1d, 0x6],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0xbb, 0x1a, 0x68],
        's': [0x6, 0x1d, 0x32],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x9f, 0x20, 0x67],
        's': [0x26, 0x1, 0x37],
        't': 0x1
      }, {
        'p': [-0x32, 0x10, -0xe1],
        's': [0x6, 0x16, 0x19],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x10, -0xf6],
        's': [0x6, 0x24, 0x7],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x1f, -0xcf],
        's': [0x6, 0x13, 0xb],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x26, -0xd8],
        's': [0x6, 0x4, 0x7],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0xdc, 0x21, 0x7d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x67, 0x20, -0x80],
        's': [0x60, 0x2, 0x6f],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x67, 0x6d, -0x81],
        's': [0x64, 0x3, 0x75],
        'c': '#393939',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x3d, 0x57, -0xf5],
        's': [0x57, 0x4, 0x4d],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x14, 0x57, -0xa7],
        's': [0xa9, 0x4, 0x4f],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x3d, 0x1e, -0xf2],
        's': [0x52, 0x4, 0x4f],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x14, 0x1e, -0xa6],
        's': [0xa4, 0x4, 0x49],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0x2
      }, {
        'p': [0x14, 0x20, -0xa6],
        's': [0xa2, 0x37, 0x47],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x21, 0x33, -0xca],
        's': [0xf, 0x1, 0x1],
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [-0x28, 0x22, -0xca],
        's': [0x1, 0x11, 0x1],
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [-0x1a, 0x22, -0xca],
        's': [0x1, 0x11, 0x1],
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [-0x21, 0x22, -0xc9],
        's': [0xd, 0x11, 0x2],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [-0x93, 0x70, -0x78],
        's': [0x23, 0x3, 0xf],
        'c': 0x505050,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x85, 0x21, -0xc2],
        's': [0x24, 0x1, 0x15],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0x9f, 0x28, -0x134],
        's': [0x57, 0x1, 0x39],
        't': 0x1
      }, {
        'p': [-0xbb, 0x21, -0x10c],
        's': [0x1f, 0x8, 0x17],
        'i': 0x9,
        't': 0x1,
        'd': 0x3
      }, {
        'p': [-0x8d, 0x28, -0x10e],
        's': [0x33, 0x1, 0x13],
        't': 0x1
      }, {
        'p': [-0xa9, 0x11, -0x10e],
        's': [0x5, 0x1d, 0x13],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x8d, 0x11, -0x102],
        's': [0x3d, 0x1d, 0x5],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x71, 0x11, -0x12b],
        's': [0x5, 0x1d, 0x4d],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x67, 0x11, -0x81],
        's': [0x5e, 0x5c, 0x70],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x61, 0x21, -0x15d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xc5, 0x2c, -0x9b],
        's': [0x1, 0x13, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0xe5, 0x20, -0xa2],
        's': [0x38, 0x2d, 0x6f],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0xe5, 0x4d, -0xa2],
        's': [0x3d, 0x3, 0x73],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xf8, 0x20, -0x135],
        's': [0x5e, 0x5e, 0x70],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0xf8, 0x7e, -0x135],
        's': [0x66, 0x3, 0x75],
        'c': 0x575757,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xf1, 0x20, -0xed],
        's': [0x38, 0x21, 0x6f],
        'c': '#9d8672',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xf1, 0x41, -0xed],
        's': [0x3e, 0x3, 0x6f],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xf1, 0x1f, -0xec],
        's': [0x3a, 0x3, 0x23],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0xe5, 0x1f, -0xa2],
        's': [0x3a, 0x3, 0x70],
        'l': 0x1,
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [-0x154, 0x20, -0xc7],
        's': [0x5b, 0x49, 0x74],
        'c': '#ffd5b1'
      }, {
        'p': [-0xc5, 0x2c, -0xa3],
        's': [0x1, 0x13, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0x3f, 0x20, -0x19b],
        's': [0x51, 0x55, 0x70],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0xaa, 0x61, -0x188],
        's': [0x8c, 0x4, 0x78],
        'c': 0x434343,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x6e, 0x52, -0x14f],
        's': [0x4, 0x4, 0x8],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xaa, 0x20, -0x188],
        's': [0x85, 0x41, 0x70],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x3f, 0x75, -0x19b],
        's': [0x57, 0x4, 0x77],
        'c': 0x4d4d4d,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x3f, 0x9a, -0x19b],
        's': [0x3a, 0x3, 0x38],
        'c': 0x4a4a4a,
        't': 0xb
      }, {
        'p': [0x16, 0x3d, -0x17d],
        's': [0x5b, 0x20, 0x58],
        'c': '#ffd5b1'
      }, {
        'p': [-0xcb, 0x86, -0x1e3],
        's': [0x61, 0x5, 0x5e],
        'c': 0x525252,
        't': 0xb
      }, {
        'p': [-0x67, 0x54, -0x81],
        's': [0x5f, 0x2, 0x71],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x67, 0x3b, -0x81],
        's': [0x60, 0x2, 0x71],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x3f, 0x7b, -0x19b],
        's': [0x34, 0x20, 0x31],
        'c': '#ffd5b1'
      }, {
        'p': [0x3d, 0x20, -0xf1],
        's': [0x50, 0x37, 0x4f],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x3f, 0x59, -0x19b],
        's': [0x53, 0x2, 0x71],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0x3f, 0x3b, -0x19b],
        's': [0x53, 0x2, 0x71],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0xfa, 0x52, -0x135],
        's': [0x64, 0x2, 0x71],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x3d, 0x3b, -0xf2],
        's': [0x52, 0x2, 0x4f],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x14, 0x3b, -0xa6],
        's': [0xa4, 0x2, 0x49],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0x3f, 0x20, -0x19b],
        's': [0x53, 0x2, 0x71],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0x97, 0x52, -0x14f],
        's': [0x4, 0x4, 0x9],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xbd, 0x52, -0x14f],
        's': [0x4, 0x4, 0xa],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x85, 0x20, -0xc2],
        's': [0x22, 0x1b, 0x12],
        'c': '#ffd5b1'
      }, {
        'p': [0xf, 0x2d, -0xd0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xf, 0x21, -0xdc],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xcc, 0x20, -0x1e5],
        's': [0x5b, 0x66, 0x57],
        'c': '#ffd5b1'
      }, {
        'p': [0x16, 0x5a, -0x17d],
        's': [0x62, 0x4, 0x5d],
        'c': '#525252',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x16, 0x3b, -0x17d],
        's': [0x5c, 0x2, 0x59],
        'l': 0x1,
        'c': '#525252',
        't': 0xb
      }, {
        'p': [0x16, 0x20, -0x17d],
        's': [0x5d, 0x2, 0x59],
        'l': 0x1,
        'c': '#525252',
        't': 0xb
      }, {
        'p': [0xfd, 0x20, -0xa0],
        's': [0x40, 0x35, 0x48],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xc1, 0x5f, -0x125],
        's': [0x46, 0x3, 0x75],
        'c': '#4a4a4a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xc1, 0x36, -0x124],
        's': [0x45, 0x2, 0x73],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0xc1, 0x20, -0x11d],
        's': [0x46, 0x2, 0x65],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x9a, 0x3b, -0x111],
        's': [0x12, 0x2, 0x2c],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x93, 0x21, -0x125],
        's': [0x2, 0x1d, 0x2],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x93, 0x21, -0xfd],
        's': [0x2, 0x1d, 0x2],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x9e, 0x21, -0xf4],
        's': [0x1, 0x26, 0x4],
        'i': 0x3,
        't': 0x2,
        'd': 0x2
      }, {
        'p': [0x81, 0x20, -0x193],
        's': [0x7c, 0x49, 0x5d],
        'c': '#ffd5b1'
      }, {
        'p': [0x81, 0x69, -0x194],
        's': [0x84, 0x4, 0x73],
        'c': '#525252',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xa8, 0x21, -0x194],
        's': [0x2c, 0x1, 0x73],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x81, 0x21, -0x163],
        's': [0x25, 0x24, 0x6],
        'c': 0x828282,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xec, 0x20, -0x16f],
        's': [0x5a, 0x20, 0x3d],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xec, 0x40, -0x16f],
        's': [0x61, 0x5, 0x44],
        'c': 0x525252,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xec, 0x1d, -0x16f],
        's': [0x5c, 0x5, 0x3f],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x4a, 0x21, -0x155],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x39, 0x21, -0x120],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x105, 0x21, -0x14a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x111, 0x21, -0x14a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xd5, 0x3b, -0xf6],
        's': [0xa, 0x4, 0x4],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xd5, 0x3b, -0xe1],
        's': [0xa, 0x4, 0x4],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x3b, 0x21, -0x150],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x3b, 0x21, -0x15c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x32, 0x10, -0x168],
        's': [0x6, 0x28, 0xf],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x10, -0x10e],
        's': [0x6, 0x28, 0x29],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x10, -0xf0],
        's': [0x6, 0x1d, 0x5],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x26, -0xea],
        's': [0x6, 0x2, 0x7],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x32, -0xcc],
        's': [0x6, 0x6, 0x5],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x38, -0x11e],
        's': [0x6, 0x3, 0x9],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x38, -0x10e],
        's': [0x6, 0x2, 0x9],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x38, -0xfe],
        's': [0x6, 0x3, 0x9],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x38, -0xc8],
        's': [0x6, 0x3, 0x9],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x38, -0x13f],
        's': [0x6, 0x2, 0x9],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x38, -0x14e],
        's': [0x6, 0x3, 0x7],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0xf, 0x21, -0xd0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x3, 0x21, -0xd0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x9, 0x21, -0xd0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x9e, 0x29, -0x14a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x92, 0x29, -0x14a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x7c, 0x29, -0x10d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xa9, 0x20, -0x160],
        's': [0x2c, 0x49, 0x9],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x5a, 0x20, -0x160],
        's': [0x2e, 0x49, 0x9],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x82, 0x45, -0x160],
        's': [0x22, 0x24, 0x9],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x56, 0x21, -0x155],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x13f, 0x20, -0x13d],
        's': [0x4f, 0x3a, 0xb7],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x13f, 0x5a, -0x13d],
        's': [0x57, 0x4, 0xbd],
        'c': '#4a4a4a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x13f, 0x3c, -0x119],
        's': [0x50, 0x2, 0x70],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x13f, 0x20, -0x119],
        's': [0x51, 0x2, 0x71],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x119, 0x46, -0xf0],
        's': [0x4, 0xe, 0x9],
        'l': 0x1,
        'c': 0x828282,
        't': 0x2
      }, {
        'p': [0x119, 0x46, -0x10e],
        's': [0x4, 0xe, 0x9],
        'l': 0x1,
        'c': 0x828282,
        't': 0x2
      }, {
        'p': [0x11a, 0x45, -0x10e],
        's': [0x7, 0x1, 0xa],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x11a, 0x45, -0xf0],
        's': [0x7, 0x1, 0xa],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x7e, 0x2b, -0x163],
        's': [0x3, 0x5, 0x8],
        'c': '#464646',
        't': 0x5
      }, {
        'p': [0x147, 0x20, -0x1d6],
        's': [0x8e, 0x63, 0x57],
        'c': '#ffd5b1'
      }, {
        'p': [0x148, 0x82, -0x1d6],
        's': [0x98, 0x4, 0x60],
        'c': 0x4a4a4a,
        't': 0xb
      }, {
        'p': [0xbf, 0x20, -0x22b],
        's': [0x6d, 0x4c, 0x57],
        'c': '#ffd5b1'
      }, {
        'p': [0xbf, 0x69, -0x22d],
        's': [0x71, 0x5, 0x64],
        'c': 0x525252,
        't': 0xb
      }, {
        'p': [0x145, 0x20, -0xba],
        's': [0x50, 0x4d, 0x4f],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x146, 0x6d, -0xb9],
        's': [0x58, 0x3, 0x56],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x146, 0x56, -0xba],
        's': [0x53, 0x2, 0x50],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x146, 0x3c, -0xba],
        's': [0x53, 0x2, 0x50],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0xa8, 0x3e, -0xa0],
        's': [0x14, 0x2, 0x2c],
        'c': '#7d7d7d',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xb0, 0x40, -0xb4],
        's': [0x2, 0x7, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xb0, 0x47, -0xa0],
        's': [0x3, 0x1, 0x2c],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xab, 0x47, -0xb5],
        's': [0x7, 0x1, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa7, 0x40, -0xa0],
        's': [0x1, 0x11, 0xd],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [0xa7, 0x51, -0xa0],
        's': [0x2, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [0xa7, 0x40, -0xa7],
        's': [0x2, 0x11, 0x1],
        'l': 0x1,
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [0x12b, 0x20, -0x64],
        's': [0x34, 0x3f, 0x5d],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x146, 0x20, -0xb9],
        's': [0x54, 0x2, 0x4f],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x12b, 0x5f, -0x64],
        's': [0x39, 0x3, 0x61],
        'c': 0x525252,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x116, 0x1d, -0x64],
        's': [0xc, 0x5, 0x5f],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x109, 0x27, -0x100],
        's': [0x3, 0x1, 0x1e],
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x109, 0x21, -0x100],
        's': [0x1, 0x6, 0x1e],
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0xf1, 0x21, -0x119],
        's': [0x1, 0x6, 0x1e],
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0xf1, 0x27, -0x119],
        's': [0x3, 0x1, 0x1e],
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0xe9, 0x3f, -0x109],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x432316,
        't': 0x5
      }, {
        'p': [0xe9, 0x3f, -0x10d],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x666666,
        't': 0x5
      }, {
        'p': [0xe9, 0x3f, -0x115],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x666666,
        't': 0x5
      }, {
        'p': [0xe9, 0x3f, -0x125],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x666666,
        't': 0x5
      }, {
        'p': [0xe9, 0x3f, -0x111],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x432316,
        't': 0x5
      }, {
        'p': [0xe9, 0x3f, -0x119],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x432316,
        't': 0x5
      }, {
        'p': [0xe9, 0x3f, -0x121],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x432316,
        't': 0x5
      }, {
        'p': [0xe9, 0x3f, -0x129],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x432316,
        't': 0x5
      }, {
        'p': [-0x85, 0x3b, -0xc3],
        's': [0x24, 0x2, 0x13],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0x85, 0x3c, -0xc2],
        's': [0x22, 0x1, 0x13],
        'pe': 0x1,
        'v': 0x1,
        'c': 0x434343,
        't': 0x2
      }, {
        'p': [0xd7, 0x21, -0xb3],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xd7, 0x21, -0xa7],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xc7, 0x21, -0x56],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xad, 0x1e, -0x155],
        's': [0x2, 0x8, 0x2],
        'l': 0x1,
        'c': 0x5b5f4c,
        't': 0x5
      }, {
        'p': [0x145, 0x20, -0xe],
        's': [0x50, 0x37, 0x4f],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x13f, 0x20, 0x87],
        's': [0x44, 0x4c, 0x73],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x145, 0x57, -0xe],
        's': [0x56, 0x3, 0x55],
        'c': '#525252',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x145, 0x1d, -0xe],
        's': [0x52, 0x5, 0x51],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x130, 0x20, 0x1e],
        's': [0xd, 0x2b, 0x9],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x130, 0x20, 0x49],
        's': [0xd, 0x2b, 0x9],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x130, 0x4b, 0x33],
        's': [0xd, 0x9, 0x35],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x12e, 0x2b, 0x2f],
        's': [0x3, 0x8, 0x3],
        'c': '#4d4d4d',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x12e, 0x21, 0x33],
        's': [0x1, 0x2a, 0x27],
        'c': 0x828282,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x145, 0x3c, -0xe],
        's': [0x51, 0x2, 0x50],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x130, 0x4d, 0x33],
        's': [0x1a, 0x4, 0x4],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x130, 0x4d, 0x3e],
        's': [0x1a, 0x4, 0x4],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x130, 0x4d, 0x48],
        's': [0x1a, 0x4, 0x4],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x130, 0x4d, 0x28],
        's': [0x1a, 0x4, 0x4],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x130, 0x4d, 0x1e],
        's': [0x1a, 0x4, 0x4],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x1af, 0xc, -0x60],
        's': [0x5c, 0x66, 0xa0],
        'c': '#ffd5b1'
      }, {
        'p': [0x1af, 0x71, -0x60],
        's': [0x63, 0x4, 0xa5],
        'c': 0x4a4a4a,
        't': 0xb
      }, {
        'p': [0x13f, 0x6c, 0x87],
        's': [0x4a, 0x3, 0x79],
        'c': 0x525252,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x13f, 0x53, 0x87],
        's': [0x45, 0x2, 0x74],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x13f, 0x38, 0x87],
        's': [0x45, 0x2, 0x74],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x5e, -0x2, -0x34],
        's': [0x50, 0x72, 0x3c],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xb4, 0x20, -0x30],
        's': [0x5c, 0x28, 0x40],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xb4, 0x48, -0x30],
        's': [0x5f, 0x4, 0x42],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x5e, 0x6f, -0x34],
        's': [0x58, 0x4, 0x43],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x5e, 0x20, -0x34],
        's': [0x52, 0x2, 0x3d],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0xb4, 0x20, -0x30],
        's': [0x5e, 0x2, 0x41],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x13f, 0x20, 0x87],
        's': [0x46, 0x2, 0x75],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x5c, 0x21, -0x194],
        's': [0x2c, 0x1, 0x73],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0x90, 0x20, -0x159],
        's': [0x53, 0x2, 0x14],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x10d, 0x1d, -0x4c],
        's': [0x6, 0x5, 0x19],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0x9c, 0x2c, -0x88],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x118, 0x21, 0x0],
        's': [0x1, 0x17, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [0x119, 0x21, 0xa],
        's': [0x1, 0x12, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [0xf0, 0x20, 0xa3],
        's': [0x5c, 0x33, 0x40],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xf0, 0x53, 0xa3],
        's': [0x61, 0x3, 0x46],
        'c': 0x525252,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xef, 0x38, 0xa3],
        's': [0x5b, 0x2, 0x41],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0xf0, 0x20, 0xa3],
        's': [0x5a, 0x2, 0x42],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0xeb, 0x39, 0x7b],
        's': [0x31, 0x2, 0x11],
        'pe': 0x1,
        'c': '#616161',
        't': 0x2
      }, {
        'p': [0xd5, 0x20, 0x75],
        's': [0x2, 0x1c, 0x2],
        'pe': 0x1,
        'c': '#616161',
        't': 0x2
      }, {
        'p': [0x101, 0x20, 0x75],
        's': [0x2, 0x1c, 0x2],
        'pe': 0x1,
        'c': '#616161',
        't': 0x2
      }, {
        'p': [0xcd, 0x21, 0x82],
        's': [0x5, 0x22, 0x1],
        'i': 0x3,
        't': 0x2,
        'd': 0x3
      }, {
        'p': [0x5e, 0x3b, -0x34],
        's': [0x51, 0x2, 0x3d],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x5e, 0x56, -0x34],
        's': [0x51, 0x2, 0x3d],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0xe2, 0x22, -0x43],
        's': [0x1, 0x11, 0xd],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [0xe2, 0x22, -0x3c],
        's': [0x2, 0x11, 0x1],
        'l': 0x1,
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [0xe2, 0x33, -0x43],
        's': [0x2, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [0xe2, 0x22, -0x4a],
        's': [0x2, 0x11, 0x1],
        'l': 0x1,
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [-0x9f, 0x4c, -0x78],
        's': [0x2, 0x26, 0x2],
        'l': 0x1,
        'c': 0xbbbbbb,
        't': 0x2
      }, {
        'p': [0x9e, 0x20, 0x48],
        's': [0x3c, 0x44, 0x5d],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x9e, 0x43, 0x48],
        's': [0x3d, 0x2, 0x5e],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x8e, 0x4b, 0x1f],
        's': [0x5, 0xe, 0x9],
        'l': 0x1,
        'c': 0x828282,
        't': 0x2
      }, {
        'p': [0x8e, 0x4a, 0x1f],
        's': [0x6, 0x1, 0xa],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xc2, 0x21, 0x22],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x95, 0x26, 0x9e],
        's': [0x46, 0x3c, 0x4f],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x4d, 0x20, 0xa9],
        's': [0x4a, 0x45, 0x50],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xc0, 0x21, 0x7d],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x4d, 0x65, 0xa9],
        's': [0x51, 0x4, 0x57],
        'c': '#525252',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x4d, 0x4c, 0xa9],
        's': [0x4a, 0x2, 0x51],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x4d, 0x2f, 0xa9],
        's': [0x4a, 0x2, 0x51],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x9a, 0x21, 0x73],
        's': [0x2f, 0x1, 0x5],
        'l': 0x1,
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [0x73, 0x21, -0x10],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x7f, 0x21, -0x10],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x4f, 0x3d, 0xe],
        's': [0xa, 0x1, 0x2],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xb6, 0x4f, 0x20],
        's': [0x5, 0xe, 0x9],
        'l': 0x1,
        'c': 0x828282,
        't': 0x2
      }, {
        'p': [0xb6, 0x4e, 0x20],
        's': [0x6, 0x1, 0xa],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x61, 0x21, -0xc7],
        's': [0x1e, 0x6, 0x1],
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x71, 0x21, -0xc7],
        's': [0x2, 0x19, 0x2],
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x51, 0x21, -0xc7],
        's': [0x2, 0x19, 0x2],
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x61, 0x27, -0xc7],
        's': [0x1e, 0x1, 0x3],
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x51, 0x3a, -0xc1],
        's': [0x4, 0x2, 0x14],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x3e4659,
        't': 0x5
      }, {
        'p': [-0x71, 0x3a, -0xc1],
        's': [0x4, 0x2, 0x14],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x3e4659,
        't': 0x5
      }, {
        'p': [-0x55, 0x3a, -0xc1],
        's': [0x4, 0x2, 0x14],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x7a7a7a,
        't': 0x5
      }, {
        'p': [-0x6d, 0x3a, -0xc1],
        's': [0x4, 0x2, 0x14],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x7a7a7a,
        't': 0x5
      }, {
        'p': [-0x69, 0x3a, -0xc1],
        's': [0x4, 0x2, 0x14],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x3e4659,
        't': 0x5
      }, {
        'p': [-0x65, 0x3a, -0xc1],
        's': [0x4, 0x2, 0x14],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x7a7a7a,
        't': 0x5
      }, {
        'p': [-0x61, 0x3a, -0xc1],
        's': [0x4, 0x2, 0x14],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x3e4659,
        't': 0x5
      }, {
        'p': [-0x59, 0x3a, -0xc1],
        's': [0x4, 0x2, 0x14],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x3e4659,
        't': 0x5
      }, {
        'p': [-0x5d, 0x3a, -0xc1],
        's': [0x4, 0x2, 0x14],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': 0x7a7a7a,
        't': 0x5
      }, {
        'p': [0x41, 0x5b, 0x33],
        's': [0x3a, 0x4, 0x50],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x85, 0x21, 0x16],
        's': [0x4, 0x11, 0x1],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [0x8c, 0x21, 0x16],
        's': [0x4, 0x11, 0x1],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [0x41, 0x36, 0x33],
        's': [0x37, 0x2, 0x4b],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x4f, 0x3e, 0x10],
        's': [0x9, 0xe, 0x5],
        'l': 0x1,
        'c': 0x828282,
        't': 0x2
      }, {
        'p': [-0x66, 0x22, -0x11],
        's': [0x2a, 0x3d, 0x3e],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x66, 0x5c, -0x11],
        's': [0x2f, 0x4, 0x43],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x66, 0x20, -0x12],
        's': [0x2c, 0x2, 0x3e],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0xce, 0xd, -0xf],
        's': [0xf, 0x4a, 0x7],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xce, 0x20, -0xd],
        's': [0x11, 0x2, 0x5],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0xb4, 0x1e, 0x73],
        's': [0x2, 0x9, 0x2],
        'l': 0x1,
        'c': 0x5b5f4c,
        't': 0x5
      }, {
        'p': [-0x57, 0x64, 0x2f],
        's': [0x43, 0x4, 0x48],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x57, 0x66, 0x30],
        's': [0x2d, 0xa, 0x37],
        'c': '#ffd5b1'
      }, {
        'p': [-0x57, 0x70, 0x30],
        's': [0x33, 0x4, 0x3d],
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0x57, 0x4c, 0x2f],
        's': [0x3f, 0x2, 0x43],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x57, 0x34, 0x2f],
        's': [0x3f, 0x2, 0x43],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x43, 0x54, 0x1a],
        's': [0x9, 0xe, 0x7],
        'l': 0x1,
        'c': 0x828282,
        't': 0x2
      }, {
        'p': [-0x43, 0x53, 0x17],
        's': [0xa, 0x1, 0x2],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x49, 0x20, 0x34],
        's': [0x28, 0x2, 0x4e],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x41, 0xd, 0x33],
        's': [0x36, 0x4f, 0x4a],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x1c, 0xc, -0x2e],
        's': [0xa9, 0x2, 0x36],
        'c': '#6e6e6e',
        't': 0x2
      }, {
        'p': [0x1b, 0xc, 0x25],
        's': [0xa7, 0x2, 0x34],
        'c': '#6e6e6e',
        't': 0x2
      }, {
        'p': [-0x34, 0x2e, -0x20],
        's': [0x8, 0x1f, 0xd2],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x32, 0x2e, -0x1c],
        's': [0x8, 0x1f, 0x75],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x32, 0x4d, -0x50],
        's': [0x8, 0x2, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x32, 0x4d, -0x3a],
        's': [0x8, 0x3, 0xf],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x32, 0x4d, -0x24],
        's': [0x8, 0x5, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x32, 0x4d, -0xe],
        's': [0x8, 0x3, 0x10],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x32, 0x4d, 0x8],
        's': [0x8, 0x4, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, 0x8],
        's': [0x8, 0x4, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, 0x1e],
        's': [0x8, 0x4, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, 0x4a],
        's': [0x8, 0x4, 0xe],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, 0x34],
        's': [0x8, 0x3, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, -0xe],
        's': [0x8, 0x2, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, -0x24],
        's': [0x8, 0x4, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, -0x3a],
        's': [0x8, 0x3, 0x10],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, -0x50],
        's': [0x8, 0x4, 0xa],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, -0x66],
        's': [0x8, 0x3, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x34, 0x4d, -0x7c],
        's': [0x8, 0x4, 0xd],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x1, 0xc, 0x13],
        's': [0x6e, 0x22, 0xe],
        'c': '#786555',
        't': 0xb
      }, {
        'p': [-0x1, 0xb, -0x33],
        's': [0x6e, 0x23, 0x3e],
        'c': '#786555',
        't': 0xb
      }, {
        'p': [-0x1, 0x2e, -0x2],
        's': [0x5e, 0x1, 0x39],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x33, 0x20, 0xbc],
        's': [0x49, 0x4c, 0x74],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x7c, 0x20, 0xd7],
        's': [0x49, 0x4c, 0x3e],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x20, 0xd9],
        's': [0x49, 0x34, 0x4f],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xd, 0x2f, 0xa3],
        's': [0x3c, 0x2, 0x51],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x34, 0x2f, 0x9d],
        's': [0x49, 0x2, 0x38],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x7e, 0x2f, 0xd3],
        's': [0x4b, 0x2, 0x37],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x109, -0x3, 0xb7],
        's': [0x3f, 0x68, 0x6c],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x10c, 0x3e, 0x4a],
        's': [0x54, 0x37, 0x6f],
        'c': '#ffd5b1'
      }, {
        'p': [-0x10c, 0x20, -0xa],
        's': [0x49, 0x38, 0x3c],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0xe8, 0x3d, -0x49],
        's': [0x44, 0x31, 0x44],
        'c': '#ffd5b1'
      }, {
        'p': [-0x33, 0x6c, 0xbb],
        's': [0x51, 0x3, 0x79],
        'c': '#393939',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x80, 0x6c, 0xd6],
        's': [0x49, 0x3, 0x44],
        'c': 0x525252,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x46, 0x20, 0x7f],
        's': [0x1c, 0x40, 0xa],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x46, 0x2f, 0x7d],
        's': [0x1e, 0x2, 0x8],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x33, 0x4d, 0x9d],
        's': [0x4b, 0x2, 0x38],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x7e, 0x4d, 0xd3],
        's': [0x4b, 0x2, 0x37],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x75, 0x32, 0x9a],
        's': [0x19, 0x1, 0x19],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [-0xe, 0x18, -0xf5],
        's': [0x1d, 0xd, 0x3],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x75, 0x18, 0xa8],
        's': [0x1f, 0x1c, 0x3],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x67, 0x18, 0x9a],
        's': [0x3, 0x1c, 0x19],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x83, 0x18, 0x9a],
        's': [0x3, 0x1c, 0x19],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0xc4, 0x2f, 0xb4],
        's': [0x49, 0x2, 0x7],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xf2, 0x2f, 0x9a],
        's': [0x13, 0x2, 0x39],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xf2, 0x49, 0x9a],
        's': [0x13, 0x2, 0x39],
        'l': 0x1,
        'h': 0xbe,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xc4, 0x54, 0xd6],
        's': [0x50, 0x3, 0x51],
        'c': 0x525252,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x43, 0x21, -0x11d],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x109, 0x65, 0xb2],
        's': [0x46, 0x3, 0x7c],
        'c': 0x525252,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xe4, 0x20, 0x31],
        's': [0x5, 0x2, 0x3e],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xea, 0x20, -0x9],
        's': [0x7, 0x2, 0x3f],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xd6, 0x20, -0x47],
        's': [0x22, 0x2, 0x41],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x109, 0x75, 0x4a],
        's': [0x56, 0x3, 0x77],
        'c': '#393939',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x1af, 0x28, -0x60],
        's': [0x42, 0x66, 0x7d],
        'c': '#ffd5b1'
      }, {
        'p': [0x1af, 0x8d, -0x60],
        's': [0x4d, 0x4, 0x87],
        'c': 0x4a4a4a,
        't': 0xb
      }, {
        'p': [-0x10a, 0x4e, -0xb],
        's': [0x4e, 0x3, 0x3b],
        'c': 0x525252,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xe8, 0x6d, -0x49],
        's': [0x4a, 0x3, 0x48],
        'c': '#393939',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xef, 0x3e, 0x4a],
        's': [0x1b, 0x2, 0x70],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x10c, 0x58, 0x4a],
        's': [0x55, 0x2, 0x70],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xe8, 0x3c, -0x49],
        's': [0x45, 0x2, 0x45],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xe8, 0x54, -0x49],
        's': [0x45, 0x2, 0x45],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xe3, 0x30, 0xab],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xd7, 0x30, 0xab],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x4e, 0x30, 0x56],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xb0, 0x30, 0x57],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x7d, 0x21, 0x43],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x89, 0x21, 0x43],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x5a, 0x30, 0x56],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xe1, 0x21, -0x22],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xd5, 0x21, -0x22],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x81, 0x21, -0x21],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xb3, 0x30, 0xae],
        's': [0x6, 0x13, 0x1],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0xbd, 0x30, 0xae],
        's': [0x6, 0x13, 0x1],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0xe4, 0x78, 0x2a],
        's': [0x23, 0x3, 0xf],
        'c': 0x505050,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xd9, 0x45, 0x2a],
        's': [0x2, 0x35, 0x2],
        'l': 0x1,
        'c': 0xbbbbbb,
        't': 0x2
      }, {
        'p': [-0xe8, 0x22, 0x3],
        's': [0x2, 0x11, 0xd],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [-0xe7, 0x22, -0x4],
        's': [0x1, 0x11, 0x1],
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [-0xe7, 0x22, 0xa],
        's': [0x1, 0x11, 0x1],
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [-0xe7, 0x33, 0x3],
        's': [0x1, 0x1, 0xf],
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [-0xe8, 0x48, 0xe],
        's': [0xa, 0x3, 0x3],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe8, 0x48, -0xb],
        's': [0xa, 0x3, 0x3],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe8, 0x48, 0x1],
        's': [0xa, 0x3, 0x3],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe8, 0x48, -0x18],
        's': [0xa, 0x3, 0x3],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe8, 0x48, -0x23],
        's': [0xa, 0x3, 0x3],
        'pe': 0x1,
        'c': 0x6b6b6b,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xde, 0x20, 0x3b],
        's': [0x1, 0x17, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0xde, 0x21, 0x34],
        's': [0x1, 0x10, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0x37, 0xd, -0x13],
        's': [0x4, 0x22, 0x2],
        'l': 0x1,
        'c': '#575757',
        't': 0x2
      }, {
        'p': [-0x37, 0x2d, -0x4],
        's': [0x4, 0x2, 0x1c],
        'l': 0x1,
        'c': '#575757',
        't': 0x2
      }, {
        'p': [0x2f, 0x30, 0x7b],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x6e, 0x30, 0x7d],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x28, 0x30, -0x4e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x1d, 0x2f, -0x1c],
        's': [0x2, 0x1f, 0x2],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x1d, 0x2f, 0x4],
        's': [0x2, 0x1f, 0x2],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x24, 0x4e, 0x4],
        's': [0x15, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x522e37,
        't': 0x5
      }, {
        'p': [0x24, 0x4e, -0x4],
        's': [0x15, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x522e37,
        't': 0x5
      }, {
        'p': [0x24, 0x4e, 0x0],
        's': [0x15, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x6e6e6e,
        't': 0x5
      }, {
        'p': [0x24, 0x4e, -0x8],
        's': [0x15, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x6e6e6e,
        't': 0x5
      }, {
        'p': [0x24, 0x4e, -0xc],
        's': [0x15, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x522e37,
        't': 0x5
      }, {
        'p': [0x24, 0x4e, -0x10],
        's': [0x15, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x6e6e6e,
        't': 0x5
      }, {
        'p': [0x24, 0x4e, -0x14],
        's': [0x15, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x522e37,
        't': 0x5
      }, {
        'p': [0x24, 0x4e, -0x18],
        's': [0x15, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x6e6e6e,
        't': 0x5
      }, {
        'p': [0x24, 0x4e, -0x1c],
        's': [0x15, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x522e37,
        't': 0x5
      }, {
        'p': [0x1d, 0x2f, -0xc],
        's': [0x1, 0x7, 0x1e],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x1d, 0x36, -0xc],
        's': [0x3, 0x1, 0x1e],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x28, 0x30, -0x42],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x2e, 0x2f, 0x4],
        's': [0x2, 0x21, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x2e, 0x2f, -0x1c],
        's': [0x2, 0x21, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x1e, 0x2f, 0x8],
        's': [0x2, 0x1f, 0x2],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x26, 0x4e, 0x8],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x2e3e52,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, 0xc],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, 0x14],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, 0x10],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x2e3e52,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, 0x18],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x2e3e52,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, 0x1c],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, 0x20],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x2e3e52,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, 0x24],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, 0x28],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x2e3e52,
        't': 0x5
      }, {
        'p': [-0x1e, 0x2f, 0x28],
        's': [0x2, 0x1f, 0x2],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x1e, 0x2f, 0x18],
        's': [0x1, 0x7, 0x1e],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x1e, 0x36, 0x18],
        's': [0x3, 0x1, 0x1e],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x30, 0x2f, 0x8],
        's': [0x2, 0x21, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x30, 0x2f, 0x28],
        's': [0x2, 0x21, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x1e, 0x2f, -0x3b],
        's': [0x2, 0x1f, 0x2],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x26, 0x4e, -0x3b],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x59412a,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, -0x3f],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, -0x43],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x59412a,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, -0x47],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, -0x4b],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x59412a,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, -0x4f],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, -0x53],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x59412a,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, -0x57],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x26, 0x4e, -0x5b],
        's': [0x16, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x59412a,
        't': 0x5
      }, {
        'p': [-0x1e, 0x2f, -0x5b],
        's': [0x2, 0x1f, 0x2],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x30, 0x2f, -0x3b],
        's': [0x2, 0x21, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x30, 0x2f, -0x5b],
        's': [0x2, 0x21, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x1e, 0x2f, -0x4b],
        's': [0x1, 0x7, 0x1e],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x1e, 0x36, -0x4b],
        's': [0x3, 0x1, 0x1e],
        'pe': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x2c, 0x2f, -0x11],
        's': [0x1, 0x17, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0x2c, 0x2f, -0x8],
        's': [0x1, 0x17, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [0x23, 0x5b, -0x8f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1,
        'r': [0x0, -0.35, 0x0]
      }, {
        'p': [0x20, 0x30, 0x2b],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x20, 0x30, 0x43],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x20, 0x30, 0x37],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x28, 0x2e, 0x4d],
        's': [0x20, 0x1f, 0x8],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x1a, 0x2e, 0x4d],
        's': [0x18, 0x1f, 0x8],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x2e, 0x4d, 0x4d],
        's': [0x4, 0x4, 0x8],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x1e, 0x4d, 0x4d],
        's': [0x8, 0x3, 0xc],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x14, 0x4d, 0x4d],
        's': [0x8, 0x2, 0xc],
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x24, 0x4d, 0x4d],
        's': [0x4, 0x2, 0x8],
        'l': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x2a, 0x30, 0x43],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xe3, 0x21, -0x129],
        's': [0x3, 0x20, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0xe3, 0x21, -0x109],
        's': [0x3, 0x20, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x118, 0x21, -0xf0],
        's': [0x4, 0x20, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x9f, 0x29, -0x134],
        's': [0x53, 0x32, 0x37],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0xf0, 0x21, 0x6a],
        's': [0x57, 0x32, 0x2d],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [-0x97, 0x30, 0x68],
        's': [0x40, 0x32, 0x30],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [-0x1, 0x30, -0x17],
        's': [0x59, 0x32, 0x48],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [-0x1, 0x30, -0x23],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x1, 0x30, -0x17],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xc3, 0x29, -0x135],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xc3, 0x35, -0x135],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x9e, 0x64, 0x48],
        's': [0x43, 0x3, 0x65],
        'c': 0x4a4a4a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x20, 0x48],
        's': [0x3e, 0x2, 0x5f],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x7e, 0x29, 0x5e],
        's': [0x6, 0x30, 0x18],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xa9, 0x20, -0x155],
        's': [0x16, 0x2, 0xb],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x99, 0x21, -0x145],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xbc, 0x20, -0xde],
        's': [0x123, 0x1, 0x14f],
        't': 0x1
      }, {
        'p': [0x86, 0x20, -0xa0],
        's': [0x42, 0x4c, 0x48],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xc1, 0x36, -0x124],
        's': [0x44, 0x2b, 0x72],
        'c': '#ffd5b1'
      }, {
        'p': [0x111, 0x3f, -0xf0],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x5d537f,
        't': 0x1
      }, {
        'p': [0x111, 0x3f, -0xf4],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [0x111, 0x3f, -0xfc],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [0x111, 0x3f, -0xf8],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x5d537f,
        't': 0x1
      }, {
        'p': [0x111, 0x3f, -0x100],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x5d537f,
        't': 0x1
      }, {
        'p': [0x111, 0x3f, -0x108],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x5d537f,
        't': 0x1
      }, {
        'p': [0x111, 0x3f, -0x104],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [0x111, 0x3f, -0x110],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x5d537f,
        't': 0x1
      }, {
        'p': [0x111, 0x3f, -0x10c],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [0x118, 0x21, -0x110],
        's': [0x4, 0x20, 0x2],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x86, 0x6c, -0xa0],
        's': [0x47, 0x4, 0x4d],
        'c': '#4a4a4a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xf6, 0x1d, -0xa0],
        's': [0x34, 0x5, 0x4a],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x116, 0x1d, -0xae],
        's': [0xc, 0x5, 0x2e],
        'l': 0x1,
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [0xfc, 0x3c, -0xa0],
        's': [0x3f, 0x2, 0x49],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x11c, 0x3c, -0xa0],
        's': [0x1, 0x2, 0x49],
        'l': 0x1,
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [0xfd, 0x55, -0xa0],
        's': [0x43, 0x3, 0x4b],
        'c': '#4a4a4a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x87, 0x1d, -0xa0],
        's': [0x42, 0x5, 0x4a],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x87, 0x3b, -0xa0],
        's': [0x42, 0x2, 0x49],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x65, 0x3b, -0x7e],
        's': [0x2, 0x2, 0x5],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x65, 0x3b, -0x81],
        's': [0x2, 0x2, 0x1],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x86, 0x54, -0xa0],
        's': [0x43, 0x2, 0x49],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0xb0, 0x40, -0x8c],
        's': [0x2, 0x7, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0xab, 0x47, -0x8b],
        's': [0x7, 0x1, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa7, 0x40, -0x99],
        's': [0x2, 0x11, 0x1],
        'l': 0x1,
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [0xab, 0x21, -0x9b],
        's': [0x1, 0x14, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': '#616161',
        't': 0x2
      }, {
        'p': [0xab, 0x21, -0x8e],
        's': [0x1, 0x14, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': '#616161',
        't': 0x2
      }, {
        'p': [0x90, 0x21, -0xca],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x90, 0x2d, -0xca],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xb5, 0x21, -0xe5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x10b, 0x21, -0x76],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x15, 0x21, -0x14b],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x15, 0x2d, -0x14b],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x29, 0x21, -0x15d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xe, 0x23, -0x102],
        's': [0x17, 0x1, 0x17],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [-0x75, 0x18, 0x8c],
        's': [0x1f, 0x1c, 0x3],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x1b, 0x18, -0x102],
        's': [0x3, 0xd, 0x17],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0xe, 0x18, -0x10f],
        's': [0x1d, 0xd, 0x3],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x1, 0x18, -0x102],
        's': [0x3, 0xd, 0x17],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x119, 0x20, 0x50],
        's': [0x9, 0xe, 0x4],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0xda, 0x20, 0x50],
        's': [0x5, 0x10, 0x5],
        'c': '#9d8672'
      }, {
        'p': [0x94, 0x21, -0x76],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xe9, 0x3f, -0x11d],
        's': [0x14, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.18],
        'c': 0x666666,
        't': 0x5
      }, {
        'p': [0x117, 0x21, 0x6c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xcb, 0x20, 0x50],
        's': [0x1e, 0xf, 0x4],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0xff, 0x20, 0x50],
        's': [0x5, 0x10, 0x5],
        'c': '#9d8672'
      }, {
        'p': [-0xa6, 0x30, 0x55],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xe5, 0x30, 0x86],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xe5, 0x30, 0x8d],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xe5, 0x30, 0x94],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x93, 0x21, 0x45],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x29, 0xd, 0x8],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x22, 0xd, 0x8],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x5c, 0x30, 0xb4],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x5c, 0x30, 0xad],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x99, 0x2c, -0x7f],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x86, 0x29, -0x10b],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xc6, 0x29, -0x12b],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xd0, 0x21, -0xf9],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xd0, 0x21, -0xf2],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x1e, 0x21, -0x15e],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xb, 0x21, -0x14d],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x60, 0x21, -0x157],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x9a, 0x21, -0x11a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x9a, 0x21, -0x113],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xbf, 0x21, -0xe7],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x118, 0x21, -0xc9],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x118, 0x21, -0xd0],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x101, 0x21, -0x78],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xbd, 0x21, -0x54],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xe6, 0x21, -0x24],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xe6, 0x21, -0x1d],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xc1, 0x21, 0x2c],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xe6, 0x21, 0x7f],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xed, 0x21, 0x7f],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x44, 0x30, 0x54],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x16, 0x30, 0x45],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x2c, 0x30, 0x39],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x2c, 0x30, -0x1a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x2c, 0x30, -0x72],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x9, 0x30, -0x18],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x18b, 0x7, 0x67],
        's': [0x50, 0x58, 0x3b],
        'c': '#ffd5b1'
      }, {
        'p': [0x18c, 0x5f, 0x68],
        's': [0x58, 0x4, 0x43],
        'c': 0x4a4a4a,
        't': 0xb
      }, {
        'p': [0xb8, 0x20, 0xeb],
        's': [0x66, 0x4c, 0x31],
        'c': '#ffd5b1'
      }, {
        'p': [0xb8, 0x6c, 0xeb],
        's': [0x6d, 0x5, 0x39],
        'c': 0x525252,
        't': 0xb
      }, {
        'p': [-0x59, 0x21, -0x89],
        's': [0x36, 0x1, 0x61],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [-0x79, 0x20, 0xe],
        's': [0x6, 0x2, 0x2],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x44, 0x20, 0x2f],
        's': [0x1a, 0x2, 0x44],
        'l': 0x1,
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [-0x66, 0x3e, -0x11],
        's': [0x2b, 0x2, 0x3f],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x7b, 0x22, 0x0],
        's': [0x1, 0x11, 0xd],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [-0x7a, 0x22, -0x7],
        's': [0x4, 0x11, 0x1],
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [-0x7a, 0x22, 0x7],
        's': [0x4, 0x11, 0x1],
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [-0x7a, 0x33, 0x0],
        's': [0x4, 0x1, 0xf],
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [-0x3c, 0x18, -0x45],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x54, 0x2b, -0x22],
        's': [0x7, 0xe, 0x9],
        'l': 0x1,
        'c': 0x828282,
        't': 0x2
      }, {
        'p': [-0x54, 0x2a, -0x22],
        's': [0x8, 0x1, 0xa],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x6f, 0xa, -0x3e],
        's': [0xc, 0x17, 0x2b],
        't': 0x1
      }, {
        'p': [-0x5d, 0x18, -0x3e],
        's': [0x18, 0x9, 0x1c],
        'i': 0x9,
        't': 0x1,
        'd': 0x2
      }, {
        'p': [0xf1, 0x21, -0x129],
        's': [0x2, 0x1e, 0x2],
        'c': 0x919191,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xf1, 0x21, -0x109],
        's': [0x2, 0x1e, 0x2],
        'c': 0x919191,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x109, 0x21, -0x110],
        's': [0x2, 0x1e, 0x2],
        'c': 0x919191,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x109, 0x21, -0xf0],
        's': [0x2, 0x1e, 0x2],
        'c': 0x919191,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x3d, 0x3, -0x3d],
        's': [0x28, 0x15, 0x1a],
        't': 0x1
      }, {
        'p': [-0x45, 0xd, -0x23],
        's': [0x1a, 0xb, 0x1a],
        'i': 0x9,
        't': 0x1,
        'd': 0x3
      }, {
        'p': [-0x55, 0x20, -0x13e],
        's': [0xff, 0x1, 0x119],
        'c': '#ffffff',
        't': 0x1
      }, {
        'p': [0x34, 0x21, -0x6a],
        's': [0x2, 0xe, 0x32],
        't': 0x1
      }, {
        'p': [0x12e, 0x2b, 0x39],
        's': [0x3, 0x8, 0x3],
        'c': '#4d4d4d',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x86, 0x2b, -0x163],
        's': [0x3, 0x5, 0x8],
        'c': '#464646',
        't': 0x5
      }, {
        'p': [-0x28, 0x21, -0xdb],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'r': [0x0, 0.52, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x3b, 0x21, -0xe6],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -0.52, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x40, 0x21, -0xdf],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'c': '#9d8672'
      }, {
        'p': [0x190, 0x7b, -0x44],
        's': [0x5, 0xe, 0x9],
        'l': 0x1,
        'c': 0x828282,
        't': 0x2
      }, {
        'p': [0x190, 0x7a, -0x44],
        's': [0x6, 0x1, 0xa],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xec, 0x21, 0x65],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': 0x0
      }, {
        'p': [-0x90, 0x29, -0x12d],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': '1'
      }, {
        'p': [-0xcd, 0x20, -0xed],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.96, 0x0],
        'c': '#d2b559'
      }, {
        'p': [-0xd0, 0x20, -0xe0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.13, -3.14],
        'c': '#d2b559'
      }, {
        'p': [-0x41, 0x20, -0xbf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.13, -3.14]
      }, {
        'p': [-0x4e, 0x20, -0xc6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.62, -3.14]
      }, {
        'p': [-0x39, 0x20, -0xcd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.62, -3.14]
      }, {
        'p': [-0x64, 0x20, -0x154],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.62, -3.14]
      }, {
        'p': [-0x43, 0x20, -0x15f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.3, 0x0]
      }, {
        'p': [-0x57, 0x20, -0x160],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0]
      }, {
        'p': [-0x32, 0x10, -0x146],
        's': [0x6, 0x28, 0x17],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x32, 0x10, -0x159],
        's': [0x6, 0x22, 0xf],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x1c, 0x20, -0x157],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0]
      }, {
        'p': [-0x13, 0x20, -0xce],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0]
      }, {
        'p': [-0x16, 0x23, -0xfc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.6, 0x0]
      }, {
        'p': [-0x9, 0x23, -0x109],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.97, 3.14]
      }, {
        'p': [-0xbf, 0x27, -0x12c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.61, -3.14]
      }, {
        'p': [-0xa7, 0x28, -0x14b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.61, -3.14]
      }, {
        'p': [-0x88, 0x29, -0x14c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.61, -3.14]
      }, {
        'p': [-0xc5, 0x28, -0x14d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.61, -3.14]
      }, {
        'p': [-0x78, 0x28, -0x116],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.61, -3.14]
      }, {
        'p': [-0x86, 0x28, -0x111],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.05, -3.14]
      }, {
        'p': [-0x98, 0x20, -0xcd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.36, -3.14]
      }, {
        'p': [0x17, 0x20, -0x11e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0]
      }, {
        'p': [0x4, 0x20, -0xd9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0]
      }, {
        'p': [0x10, 0x20, -0xe5],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.16, 0x0]
      }, {
        'p': [-0x6b, 0x20, -0x102],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.88, -3.14]
      }, {
        'p': [-0x6a, 0x21, -0x128],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x5, 0x20, -0x14d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0]
      }, {
        'p': [0xc, 0x20, -0x146],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.1, 0x0]
      }, {
        'p': [0x1f, 0x20, -0x14d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0]
      }, {
        'p': [0x30, 0x20, -0x123],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0]
      }, {
        'p': [0x44, 0x20, -0x14d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0]
      }, {
        'p': [0x49, 0x20, -0x11c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0]
      }, {
        'p': [0x9c, 0x20, -0x13c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0]
      }, {
        'p': [0x95, 0x20, -0x116],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.8, 0x0]
      }, {
        'p': [0x9c, 0x20, -0x158],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0]
      }, {
        'p': [0x67, 0x20, -0x11a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.08, 0x0]
      }, {
        'p': [0x69, 0x20, -0xf9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0]
      }, {
        'p': [-0x46, 0x60, 0x82],
        's': [0x1e, 0x4, 0x17],
        'l': 0x1,
        'r': [-0.52, 0x0, 0x0],
        'c': 0x525252,
        't': 0xb
      }, {
        'p': [-0x46, 0x45, 0x7b],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x46, 0x44, 0x79],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x27, 0x20, -0x11b],
        's': [0x19, 0x2, 0x9],
        'l': 0x1,
        'c': '#4a4a4a',
        't': 0xb
      }, {
        'p': [0x27, 0xe, -0x11a],
        's': [0x18, 0x40, 0xa],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x27, 0x4f, -0x116],
        's': [0x19, 0x3, 0x16],
        'r': [-0.35, 0x0, 0x0],
        'c': 0x525252,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x26, 0x33, -0x11e],
        's': [0xf, 0x1, 0x7],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x26, 0x32, -0x120],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x107, 0xe, -0xc5],
        's': [0x18, 0x40, 0xa],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x107, 0x4f, -0xc1],
        's': [0x1a, 0x3, 0x16],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x525252,
        't': 0xb
      }, {
        'p': [0x106, 0x33, -0xc9],
        's': [0xf, 0x1, 0x7],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x106, 0x32, -0xcb],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x92, 0x57, 0xb9],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x92, 0x56, 0xb7],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x64, 0x52, 0x82],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x64, 0x51, 0x80],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x52, 0x5b, -0xb8],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x52, 0x5a, -0xba],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x85, 0x25, -0xbc],
        's': [0x1c, 0x40, 0xa],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x85, 0x34, -0xbe],
        's': [0x1e, 0x2, 0x8],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [-0x85, 0x65, -0xb9],
        's': [0x1e, 0x4, 0x17],
        'l': 0x1,
        'r': [-0.52, 0x0, 0x0],
        'c': 0x525252,
        't': 0xb
      }, {
        'p': [-0x85, 0x4a, -0xc0],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x85, 0x49, -0xc2],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x57, 0x42, -0x119],
        's': [0xf, 0x1, 0x4],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x57, 0x41, -0x11a],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0xd, 0x20, 0xa0],
        's': [0x37, 0x6e, 0x3c],
        'c': '#ffd5b1'
      }, {
        'p': [0xd, 0x25, 0x80],
        's': [0x38, 0x40, 0xa],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xd, 0x62, 0x7e],
        's': [0x3b, 0x4, 0xe],
        'l': 0x1,
        'r': [-0.52, 0x0, 0x0],
        'c': 0x525252,
        't': 0xb
      }, {
        'p': [0x1b, 0x4a, 0x7c],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x1b, 0x49, 0x7a],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0xd, 0x8d, 0xa0],
        's': [0x3a, 0x3, 0x3e],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x2, 0x49, 0x7a],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x2, 0x4a, 0x7c],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x2b, 0x83, 0x95],
        's': [0x3a, 0x1, 0x22],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x2b, 0x6f, 0x95],
        's': [0x3a, 0x5, 0x22],
        'c': '#ffd5b1'
      }, {
        'p': [-0x45, 0x6f, 0x87],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [-0x11, 0x6f, 0x87],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [-0x2c, 0x6f, 0x87],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [-0x2c, 0x6f, 0xa4],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [-0x45, 0x6f, 0xa3],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [-0x11, 0x6f, 0xa3],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [-0x1d, 0x74, 0x85],
        's': [0xb, 0x1, 0x3],
        'l': 0x1,
        'c': '#d28181',
        't': 0x2
      }, {
        'p': [-0x1d, 0x70, 0x83],
        's': [0xb, 0x5, 0x1],
        'l': 0x1,
        'c': '#d28181',
        't': 0x2
      }, {
        'p': [-0x3c, 0x7d, 0x83],
        's': [0x8, 0x8, 0x1],
        'l': 0x1,
        'c': '#b2d4b2',
        't': 0x2
      }, {
        'p': [-0x3c, 0x84, 0x85],
        's': [0x8, 0x1, 0x3],
        'l': 0x1,
        'c': '#b2d4b2',
        't': 0x2
      }, {
        'p': [-0x4b, 0x6f, 0x83],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [-0x56, 0x6f, 0x84],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [0xd, 0x71, 0x7e],
        's': [0x28, 0x2, 0x9],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x1f, 0x71, 0x7b],
        's': [0x2, 0x8, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [-0x5, 0x71, 0x7b],
        's': [0x2, 0x8, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0xd, 0x79, 0x7b],
        's': [0x28, 0x1, 0x3],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x1f, 0x79, 0x81],
        's': [0x3, 0x1, 0x9],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [-0x5, 0x79, 0x81],
        's': [0x3, 0x1, 0x9],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x14, 0x74, 0x83],
        's': [0xd, 0x11, 0x3],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [0xd, 0x74, 0x82],
        's': [0x1, 0x11, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0x1b, 0x74, 0x82],
        's': [0x1, 0x11, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0x14, 0x85, 0x82],
        's': [0xf, 0x1, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0x14, 0x73, 0x82],
        's': [0xf, 0x1, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0x5, 0x6c, 0x79],
        's': [0x6, 0xe, 0x1],
        'l': 0x1,
        'c': '#dec28f',
        't': 0x2
      }, {
        'p': [0x1, 0x6c, 0x79],
        's': [0x2, 0xe, 0x1],
        'l': 0x1,
        'c': '#a4be8d',
        't': 0x2
      }, {
        'p': [0x1, 0x7a, 0x7b],
        's': [0x2, 0x1, 0x5],
        'l': 0x1,
        'c': '#a4be8d',
        't': 0x2
      }, {
        'p': [0x5, 0x7a, 0x7b],
        's': [0x6, 0x1, 0x5],
        'l': 0x1,
        'c': '#dec28f',
        't': 0x2
      }, {
        'p': [0x28, 0x66, 0x8f],
        's': [0x8, 0x32, 0xe],
        'c': '#ffd5b1'
      }, {
        'p': [-0x8, 0xa1, 0x9d],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x15, 0x84, 0x8e],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0x4c, 0x67, 0x8d],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x4c, 0x7b, 0x8d],
        's': [0x1, 0x1, 0x9],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x3b, 0x7b, 0x89],
        's': [0x21, 0x1, 0x1],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x41, 0x71, 0x8e],
        's': [0x6, 0xb, 0x1],
        'l': 0x1,
        'c': '#d28181',
        't': 0x2
      }, {
        'p': [0x34, 0x71, 0x88],
        's': [0x7, 0xb, 0x1],
        'l': 0x1,
        'c': '#7ec382',
        't': 0x2
      }, {
        'p': [0x41, 0x7c, 0x8b],
        's': [0x6, 0x1, 0x7],
        'l': 0x1,
        'c': '#d28181',
        't': 0x2
      }, {
        'p': [0x41, 0x79, 0x88],
        's': [0x6, 0x3, 0x1],
        'l': 0x1,
        'c': '#d28181',
        't': 0x2
      }, {
        'p': [0x34, 0x7c, 0x8b],
        's': [0x7, 0x1, 0x7],
        'l': 0x1,
        'c': '#7ec382',
        't': 0x2
      }, {
        'p': [0x34, 0x7a, 0x8e],
        's': [0x7, 0x2, 0x1],
        'c': '#7ec382',
        't': 0x2
      }, {
        'p': [0x3b, 0x7b, 0x8d],
        's': [0x21, 0x1, 0x1],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x3b, 0x7b, 0x91],
        's': [0x21, 0x1, 0x1],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [-0xd4, 0x77, 0xf7],
        's': [0x78, 0x3, 0x21],
        'l': 0x1,
        'r': [-0.52, 0x0, 0x0],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xd4, 0x50, 0x101],
        's': [0x78, 0x23, 0x2d],
        'c': '#ffd5b1'
      }, {
        'p': [-0xd4, 0x73, 0x101],
        's': [0x78, 0x14, 0xf],
        'c': '#ffd5b1'
      }, {
        'p': [-0xd4, 0x88, 0x100],
        's': [0x79, 0x3, 0x11],
        'l': 0x1,
        'r': [-0.52, 0x0, 0x0],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x84, 0x34, 0xfe],
        's': [0x28, 0x59, 0x28],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x76, 0x8f, 0xfe],
        's': [0xc, 0xe, 0x28],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x84, 0x9e, 0xfe],
        's': [0x28, 0x8, 0x28],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x84, 0x8d, 0xfe],
        's': [0x29, 0x2, 0x29],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x84, 0xa5, 0xfe],
        's': [0x29, 0x2, 0x29],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x92, 0x8f, 0xfe],
        's': [0xc, 0xe, 0x28],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x91, 0xa7, 0xf1],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x91, 0xa7, 0x10b],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x77, 0xa7, 0x10b],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x77, 0xa7, 0xf0],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x84, 0x9d, 0xfe],
        's': [0x29, 0x2, 0x29],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x83, 0x89, 0xe4],
        's': [0x4, 0x4, 0xf],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x83, 0x86, 0xe8],
        's': [0x3, 0x2, 0xd],
        'l': 0x1,
        'r': [0.7, 0x0, 0x0],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x124, 0x34, 0xfe],
        's': [0x28, 0x5b, 0x28],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x124, 0x8f, 0xfe],
        's': [0x28, 0x17, 0x28],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x124, 0x8d, 0xfe],
        's': [0x29, 0x2, 0x29],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x124, 0xa5, 0xfe],
        's': [0x29, 0x2, 0x29],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x131, 0xa7, 0xf1],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x131, 0xa7, 0x10b],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x117, 0xa7, 0x10b],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x117, 0xa7, 0xf0],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x124, 0x9d, 0xfe],
        's': [0x29, 0x2, 0x29],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [0x73, 0x61, -0x66],
        's': [0x2, 0x2, 0x45],
        'l': 0x1,
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x7b, 0x61, -0x66],
        's': [0x2, 0x2, 0x42],
        'l': 0x1,
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x83, 0x61, -0x66],
        's': [0x2, 0x2, 0x41],
        'l': 0x1,
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x76, 0x63, -0x68],
        's': [0xb, 0x1, 0xc],
        'l': 0x1,
        'c': '#acb1af',
        'e': '#502323',
        't': 0x2
      }, {
        'p': [0x7f, 0x63, -0x5a],
        's': [0xb, 0x1, 0xc],
        'l': 0x1,
        'c': '#868785',
        'e': '#0e110b',
        't': 0x2
      }, {
        'p': [0x84, 0x51, -0x5a],
        's': [0x1, 0x12, 0xc],
        'l': 0x1,
        'c': '#868785',
        'e': '#0e110b',
        't': 0x2
      }, {
        'p': [0x7e, 0x63, -0x74],
        's': [0xb, 0x1, 0x6],
        'l': 0x1,
        'c': '#617187',
        'e': '#0f1b2d',
        't': 0x2
      }, {
        'p': [0x79, 0x56, -0x74],
        's': [0x1, 0xd, 0x6],
        'l': 0x1,
        'c': '#617187',
        'e': '#0f1b2d',
        't': 0x2
      }, {
        'p': [0x71, 0x5a, -0x68],
        's': [0x1, 0x9, 0xc],
        'l': 0x1,
        'c': '#acb1af',
        'e': '#502323',
        't': 0x2
      }, {
        'p': [-0x6f, 0x44, -0x40],
        's': [0x2, 0x2, 0x45],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x67, 0x44, -0x40],
        's': [0x2, 0x2, 0x42],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x6c, 0x46, -0x40],
        's': [0xb, 0x1, 0x8],
        'c': '#bb5d5d',
        't': 0x2
      }, {
        'p': [-0x64, 0x46, -0x52],
        's': [0xb, 0x1, 0x6],
        'l': 0x1,
        'c': '#617187',
        'e': '#0f1b2d',
        't': 0x2
      }, {
        'p': [-0x69, 0x41, -0x52],
        's': [0x1, 0x5, 0x6],
        'l': 0x1,
        'c': '#617187',
        'e': '#0f1b2d',
        't': 0x2
      }, {
        'p': [-0x71, 0x3d, -0x40],
        's': [0x1, 0x9, 0x8],
        'l': 0x1,
        'c': '#bb5d5d',
        't': 0x2
      }, {
        'p': [-0x10c, 0x21, 0x4a],
        's': [0x54, 0x1f, 0x6f],
        'c': '#9d8672',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x77, 0x1a, 0x9a],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 0.35, 0x0],
        'c': '#7f6e38'
      }, {
        'p': [-0xaf, 0x2f, 0xab],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0xe5, 0x2f, 0x9a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.04, 3.14]
      }, {
        'p': [-0x9b, 0x2f, 0xb3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0x9f, 0x2f, 0x54],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0xb3, 0x2f, 0x61],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.7, 0x0]
      }, {
        'p': [-0x65, 0x2f, 0x57],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0x58, 0x2f, 0x7f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0x34, 0x2f, 0x7d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0x3c, 0x2f, 0x53],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.88, 0x0]
      }, {
        'p': [0x1f, 0x2f, 0x55],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [0x24, 0x2f, 0x77],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [-0x13, 0x2f, 0x7d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [-0x38, 0x2d, -0x2f],
        's': [0x2, 0x2, 0x36],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xe8, 0x20, -0x49],
        's': [0x44, 0x1c, 0x43],
        'c': '#9d8672',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x8, 0x8e, 0x9d],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x18, 0x2d, 0x81],
        's': [0x2, 0x3a, 0x2],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x29, 0x67, 0x81],
        's': [0x24, 0x2, 0x2],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x3a, 0x69, 0x81],
        's': [0x2, 0x9, 0x2],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x57, 0x22, 0x2f],
        's': [0x3e, 0x42, 0x42],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [-0x57, 0xd, 0x2f],
        's': [0x3e, 0x13, 0x42],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x66, 0xd, -0x11],
        's': [0x2a, 0x13, 0x3e],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x154, 0x69, -0xc7],
        's': [0x5d, 0x4, 0x77],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x16, 0x20, -0x17d],
        's': [0x5b, 0x1b, 0x58],
        'c': '#9d8672',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x124, 0x34, 0x70],
        's': [0x28, 0x59, 0x28],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x124, 0x8f, 0x62],
        's': [0x28, 0xe, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x124, 0x9e, 0x70],
        's': [0x28, 0x8, 0x28],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x124, 0x8d, 0x70],
        's': [0x29, 0x2, 0x29],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x124, 0xa5, 0x70],
        's': [0x29, 0x2, 0x29],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x131, 0xa7, 0x63],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x131, 0xa7, 0x7d],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x117, 0xa7, 0x7d],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x117, 0xa7, 0x62],
        's': [0xc, 0x6, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x124, 0x9d, 0x70],
        's': [0x29, 0x2, 0x29],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x10c, 0x89, 0x6f],
        's': [0xf, 0x4, 0x4],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x124, 0x8f, 0x7e],
        's': [0x28, 0xe, 0xc],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x11d, 0x77, 0xb8],
        's': [0x78, 0x3, 0x21],
        'l': 0x1,
        'r': [-1.57, -1.05, -1.57],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x128, 0x73, 0xbe],
        's': [0xf, 0x14, 0x78],
        'c': '#ffd5b1'
      }, {
        'p': [-0x128, 0x88, 0xbb],
        's': [0x79, 0x3, 0x11],
        'l': 0x1,
        'r': [-1.57, -1.05, -1.57],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x127, 0x50, 0xbb],
        's': [0x2d, 0x23, 0x78],
        'c': '#ffd5b1'
      }, {
        'p': [-0xe2, 0x2d, 0x7a],
        's': [0x2, 0x3a, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xe2, 0x67, 0x7c],
        's': [0x2, 0x2, 0x6],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xe2, 0x69, 0x7e],
        's': [0x2, 0x12, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xa4, 0x22, 0x8e],
        's': [0x3c, 0x69, 0x30],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0xa4, 0x8b, 0x8e],
        's': [0x3f, 0x5, 0x33],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [0xa4, 0x90, 0x8e],
        's': [0x38, 0x15, 0x28],
        'c': '#ffd5b1'
      }, {
        'p': [0xa4, 0xa5, 0x8e],
        's': [0x1e, 0x23, 0x1e],
        'c': '#ffd5b1'
      }, {
        'p': [0xa4, 0xc8, 0x8e],
        's': [0x22, 0x6, 0x22],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0xa4, 0xce, 0x8e],
        's': [0x1d, 0x6, 0x1c],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0xa4, 0xd4, 0x8e],
        's': [0x17, 0x6, 0x16],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0xa4, 0xda, 0x8e],
        's': [0x11, 0x6, 0x10],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0xa4, 0xe0, 0x8e],
        's': [0x5, 0xd, 0x9],
        'c': '#ffd5b1'
      }, {
        'p': [0xa4, 0xed, 0x8e],
        's': [0x3, 0x20, 0x4],
        'c': '#ffd5b1'
      }, {
        'p': [0xa4, 0xa5, 0x8e],
        's': [0x3a, 0x3, 0x2a],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [0xa4, 0xa5, 0x9d],
        's': [0xa, 0x14, 0x1],
        'c': '#3c3c3c'
      }, {
        'p': [0x8e, 0x81, 0x8e],
        's': [0x4, 0x4, 0x3a],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xba, 0x81, 0x8e],
        's': [0x4, 0x4, 0x3a],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa4, 0x81, 0x80],
        's': [0x44, 0x4, 0x4],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa4, 0x81, 0x9c],
        's': [0x44, 0x4, 0x4],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa4, 0x32, 0xa5],
        's': [0x10, 0x2, 0x8],
        'l': 0x1,
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa4, 0x5e, 0xa5],
        's': [0x10, 0x2, 0x8],
        'l': 0x1,
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa1, 0x22, 0x1a],
        's': [0xd, 0x11, 0x3],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [0x9a, 0x22, 0x19],
        's': [0x1, 0x11, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0xa8, 0x22, 0x19],
        's': [0x1, 0x11, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0xa1, 0x33, 0x19],
        's': [0xf, 0x1, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0xa1, 0x21, 0x19],
        's': [0xf, 0x1, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0x95, 0x60, 0x9e],
        's': [0x47, 0x4, 0x51],
        'c': '#525252',
        't': 0xb
      }, {
        'p': [-0x77, 0x39, 0x1f],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x75, 0x3a, 0x1f],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x77, 0x39, 0x3e],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x75, 0x3a, 0x3e],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x97, 0x59, -0x5a],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x95, 0x5a, -0x5a],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0xd8, 0x5a, 0xe9],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0xd8, 0x5b, 0xeb],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0xb1, 0x5a, 0xe9],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0xb1, 0x5b, 0xeb],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0xd8, 0x59, -0x26],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0xd8, 0x5a, -0x28],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0xc5, 0x59, -0x5d],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0xc7, 0x5a, -0x5d],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0xe1, 0x20, 0xf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.04, 3.14]
      }, {
        'p': [-0xcb, 0x20, -0x23],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.04, 3.14]
      }, {
        'p': [-0x80, 0x20, -0x17],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0]
      }, {
        'p': [-0x7b, 0x20, 0x12],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0]
      }, {
        'p': [-0x7b, 0x20, 0x37],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.39, 0x0]
      }, {
        'p': [-0x95, 0x20, 0x3d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.39, 0x0]
      }, {
        'p': [-0xbb, 0x20, 0x45],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0xde, 0x20, 0x2c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0x99, 0x20, -0x48],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.18, 0x0]
      }, {
        'p': [-0x8c, 0x21, -0x48],
        's': [0x2, 0x2d, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x84, 0x59, -0x48],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x84, 0x5a, -0x4a],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x8f, 0x4e, -0x48],
        's': [0x8, 0x2, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x92, 0x50, -0x48],
        's': [0x2, 0x22, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xc5, 0x21, -0x2c],
        's': [0x2, 0x52, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x23d, 0xd, -0xa2],
        's': [0x37, 0x28, 0x3c],
        'c': '#ffd5b1'
      }, {
        'p': [0x23d, 0x34, -0xa2],
        's': [0x3a, 0x3, 0x3e],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x205, 0x2a, -0xad],
        's': [0x3a, 0x1, 0x22],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0x205, 0x16, -0xad],
        's': [0x3a, 0x5, 0x22],
        'c': '#ffd5b1'
      }, {
        'p': [0x1eb, 0x16, -0xbb],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x21f, 0x16, -0xbb],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x204, 0x16, -0xbb],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x204, 0x16, -0x9e],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x1eb, 0x16, -0x9f],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x21f, 0x16, -0x9f],
        's': [0x2, 0x16, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x213, 0x1b, -0xbd],
        's': [0xb, 0x1, 0x3],
        'c': '#e63f3f',
        't': 0x2
      }, {
        'p': [0x213, 0x17, -0xbf],
        's': [0xb, 0x5, 0x1],
        'c': '#e63f3f',
        't': 0x2
      }, {
        'p': [0x1f4, 0x24, -0xbf],
        's': [0x8, 0x8, 0x1],
        'c': '#a1e1a1',
        't': 0x2
      }, {
        'p': [0x1f4, 0x2b, -0xbd],
        's': [0x8, 0x1, 0x3],
        'c': '#a1e1a1',
        't': 0x2
      }, {
        'p': [0x1ff, 0x1b, -0xbb],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0x23d, 0x18, -0xc4],
        's': [0x28, 0x2, 0x9],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x24f, 0x18, -0xc7],
        's': [0x2, 0x8, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x22b, 0x18, -0xc7],
        's': [0x2, 0x8, 0x2],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x23d, 0x20, -0xc7],
        's': [0x28, 0x1, 0x3],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x24f, 0x20, -0xc1],
        's': [0x3, 0x1, 0x9],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x22b, 0x20, -0xc1],
        's': [0x3, 0x1, 0x9],
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x244, 0x1b, -0xbf],
        's': [0xd, 0x11, 0x3],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [0x23d, 0x1b, -0xc0],
        's': [0x1, 0x11, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0x24b, 0x1b, -0xc0],
        's': [0x1, 0x11, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0x244, 0x2c, -0xc0],
        's': [0xf, 0x1, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0x244, 0x1a, -0xc0],
        's': [0xf, 0x1, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [0x235, 0x13, -0xc9],
        's': [0x6, 0xe, 0x1],
        'c': '#e6ab3e',
        't': 0x2
      }, {
        'p': [0x231, 0x13, -0xc9],
        's': [0x2, 0xe, 0x1],
        'c': '#8de63e',
        't': 0x2
      }, {
        'p': [0x231, 0x21, -0xc7],
        's': [0x2, 0x1, 0x5],
        'c': '#8de63e',
        't': 0x2
      }, {
        'p': [0x235, 0x21, -0xc7],
        's': [0x6, 0x1, 0x5],
        'c': '#e6ab3e',
        't': 0x2
      }, {
        'p': [0x228, 0x48, -0xa5],
        's': [0x1, 0x7, 0x1],
        'r': [0x0, 0x0, 0.17],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x21b, 0x2b, -0xb4],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0x228, 0x35, -0xa5],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x132, 0x58, -0xa9],
        's': [0x36, 0x2c, 0x38],
        'c': '#ffd5b1'
      }, {
        'p': [0x132, 0x82, -0xa9],
        's': [0x3a, 0x3, 0x3e],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0xfa, 0x6c, -0xb4],
        's': [0x3a, 0x1, 0x22],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0xfa, 0x58, -0xb4],
        's': [0x3a, 0x5, 0x22],
        'c': '#ffd5b1'
      }, {
        'p': [0xe0, 0x58, -0xc2],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x114, 0x58, -0xc2],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xf9, 0x58, -0xc2],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xf9, 0x58, -0xa5],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xe0, 0x58, -0xa6],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x114, 0x58, -0xa6],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x108, 0x5d, -0xc4],
        's': [0xb, 0x1, 0x3],
        'c': '#dc7c7c',
        't': 0x2
      }, {
        'p': [0x108, 0x55, -0xc6],
        's': [0xb, 0x9, 0x1],
        'c': '#d26262',
        't': 0x2
      }, {
        'p': [0xdd, 0x66, -0xad],
        's': [0x1, 0x8, 0x7],
        'c': '#e63f3f',
        't': 0x2
      }, {
        'p': [0xf4, 0x5d, -0xc2],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0x11d, 0x95, -0xac],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x110, 0x6d, -0xbb],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [0x11d, 0x83, -0xac],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xdf, 0x6d, -0xad],
        's': [0x3, 0x1, 0x7],
        'c': '#e63f3f',
        't': 0x2
      }, {
        'p': [0x88, 0x54, -0xc6],
        's': [0x28, 0x2, 0x9],
        'c': '#7d7d7d',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9a, 0x54, -0xc9],
        's': [0x2, 0x8, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x76, 0x54, -0xc9],
        's': [0x2, 0x8, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x88, 0x5c, -0xc9],
        's': [0x28, 0x1, 0x3],
        'c': '#7d7d7d',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9a, 0x5c, -0xc3],
        's': [0x3, 0x1, 0x9],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x76, 0x5c, -0xc3],
        's': [0x3, 0x1, 0x9],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x7c, 0x4f, -0xcb],
        's': [0x5, 0xe, 0x1],
        'l': 0x1,
        'c': '#8de63e',
        't': 0x2
      }, {
        'p': [0x7c, 0x5d, -0xc9],
        's': [0x5, 0x1, 0x5],
        'l': 0x1,
        'c': '#8de63e',
        't': 0x2
      }, {
        'p': [0x110, 0x58, -0x9c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [0x110, 0x64, -0x9c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [0x88, 0x56, -0xc5],
        's': [0x1, 0x11, 0x1],
        'l': 0x1,
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x96, 0x56, -0xc5],
        's': [0x1, 0x11, 0x1],
        'l': 0x1,
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x8f, 0x67, -0xc5],
        's': [0xf, 0x1, 0x1],
        'l': 0x1,
        'c': '#393939',
        't': 0x2
      }, {
        'p': [0x8f, 0x56, -0xc4],
        's': [0xd, 0x11, 0x2],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [-0xe8, 0x50, 0x91],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0xea, 0x51, 0x91],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0xe1, 0x5f, 0x65],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0xe3, 0x60, 0x65],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x7f, 0x58, 0x5e],
        's': [0x8, 0x3, 0x1a],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': '#525252',
        't': 0xb
      }, {
        'p': [0x7a, 0x42, 0x5e],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0x7c, 0x43, 0x5e],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0xd, 0xb, -0x101],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, -0.35, 3.14],
        'c': '#846d22'
      }, {
        'p': [0x6f, 0x4e, 0x1c],
        's': [0x2f, 0x2, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x6f, 0x4e, 0x24],
        's': [0x2f, 0x2, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x77, 0x50, 0x20],
        's': [0x8, 0x1, 0xb],
        'l': 0x1,
        'c': '#d28d8d',
        't': 0x2
      }, {
        'p': [0x77, 0x47, 0x1b],
        's': [0x8, 0x9, 0x1],
        'l': 0x1,
        'c': '#d28d8d',
        't': 0x2
      }, {
        'p': [0x63, 0x47, 0x25],
        's': [0x3, 0x9, 0x1],
        'l': 0x1,
        'c': '#bbd9bb',
        't': 0x2
      }, {
        'p': [0x63, 0x50, 0x20],
        's': [0x3, 0x1, 0xb],
        'l': 0x1,
        'c': '#bbd9bb',
        't': 0x2
      }, {
        'p': [0x63, 0x4b, 0x1b],
        's': [0x3, 0x5, 0x1],
        'l': 0x1,
        'c': '#bbd9bb',
        't': 0x2
      }, {
        'p': [0x77, 0x4d, 0x25],
        's': [0x8, 0x3, 0x1],
        'l': 0x1,
        'c': '#d28d8d',
        't': 0x2
      }, {
        'p': [-0xc8, 0x5f, -0x114],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0xca, 0x60, -0x114],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0xc8, 0x5f, -0x138],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0xca, 0x60, -0x138],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x7c, 0x44, -0x21],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x7a, 0x45, -0x21],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x14, 0x41, -0xe1],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0x16, 0x42, -0xe1],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x9e, 0x46, -0x13e],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0xa0, 0x47, -0x13e],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x2a, 0x60, -0x162],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x2a, 0x61, -0x164],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x8, 0x43, -0x150],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x8, 0x44, -0x152],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x5a, 0x4e, -0x15a],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0x5a, 0x4f, -0x15c],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x37, 0xd, 0xb],
        's': [0x4, 0x22, 0x2],
        'l': 0x1,
        'c': '#575757',
        't': 0x2
      }, {
        'p': [0x35, 0xd, -0x13],
        's': [0x4, 0x22, 0x2],
        'l': 0x1,
        'c': '#575757',
        't': 0x2
      }, {
        'p': [0x35, 0xd, 0xb],
        's': [0x4, 0x22, 0x2],
        'l': 0x1,
        'c': '#575757',
        't': 0x2
      }, {
        'p': [0x35, 0x2d, -0x4],
        's': [0x4, 0x2, 0x1c],
        'l': 0x1,
        'c': '#575757',
        't': 0x2
      }, {
        'p': [-0x1, 0xd, 0xb],
        's': [0x4, 0x22, 0x2],
        'l': 0x1,
        'c': '#575757',
        't': 0x2
      }, {
        'p': [-0x1, 0xd, -0x13],
        's': [0x4, 0x22, 0x2],
        'l': 0x1,
        'c': '#575757',
        't': 0x2
      }, {
        'p': [-0x1, 0x2d, -0x4],
        's': [0x4, 0x2, 0x1c],
        'l': 0x1,
        'c': '#575757',
        't': 0x2
      }, {
        'p': [-0x70, 0x2d, 0x51],
        's': [0x2, 0x42, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xe1, 0x67, -0x80],
        's': [0x2b, 0x2, 0x48],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xe1, 0x50, -0x80],
        's': [0x2b, 0x8, 0x48],
        'c': '#ffd5b1'
      }, {
        'p': [-0xce, 0x58, -0xa2],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xce, 0x58, -0x6d],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xf4, 0x58, -0xa2],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xf4, 0x58, -0x6d],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xf4, 0x58, -0x88],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xce, 0x58, -0x88],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xc9, 0x7c, -0x68],
        's': [0x1, 0x7, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xc9, 0x69, -0x68],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xd5, 0x69, -0x71],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [-0xcd, 0x50, -0xa9],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [-0xd8, 0x50, -0xaa],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [-0xcf, 0x69, -0x91],
        's': [0x9, 0x1, 0xd],
        'l': 0x1,
        'c': '#6383ed',
        't': 0x2
      }, {
        'p': [-0xcb, 0x5f, -0x91],
        's': [0x1, 0xa, 0xd],
        'l': 0x1,
        'c': '#6383ed',
        't': 0x2
      }, {
        'p': [-0xc8, 0x21, -0x102],
        's': [0x2, 0x53, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xc8, 0x74, -0x106],
        's': [0x2, 0x12, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xc8, 0x74, -0x103],
        's': [0x2, 0x2, 0x4],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xe2, 0x44, -0xf4],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1,
        'r': [0x0, -0.35, 0x0]
      }, {
        'p': [-0xda, 0x44, -0xea],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [0x10e, 0x22, -0x4c],
        's': [0x6, 0x30, 0x18],
        'c': '#ffd5b1',
        'bo': 0x1
      }, {
        'p': [0x10f, 0x51, -0x4c],
        's': [0xc, 0x3, 0x1a],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': '#525252',
        't': 0xb
      }, {
        'p': [0x10a, 0x3b, -0x4c],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0x10c, 0x3c, -0x4c],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x11c, 0x3e, 0x5e],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0x11e, 0x3f, 0x5e],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x11c, 0x41, 0x3],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0x11e, 0x42, 0x3],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xbd, 0x4b, 0x61],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0xbb, 0x4c, 0x61],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xbd, 0x4b, 0x33],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0xbb, 0x4c, 0x33],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xdc, 0x41, -0xb5],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0xde, 0x42, -0xb5],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xc1, 0x22, -0x124],
        's': [0x44, 0x14, 0x71],
        'c': '#9d8672',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xa1, 0x8d, 0x107],
        's': [0x11, 0x5, 0x3],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x107, 0x8d, 0x107],
        's': [0x11, 0x5, 0x3],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0xc3, 0x8d, 0x107],
        's': [0x11, 0x5, 0x3],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0xe4, 0x8d, 0x107],
        's': [0x11, 0x5, 0x3],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x130, 0x8d, 0xe1],
        's': [0x5, 0x5, 0x11],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x130, 0x8d, 0x8d],
        's': [0x5, 0x5, 0x11],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x130, 0x8d, 0xb3],
        's': [0x5, 0x5, 0x11],
        'c': '#313131',
        't': 0xb
      }, {
        'p': [-0x13f, 0x22, -0x46],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 0.87, 0x0]
      }, {
        'p': [-0x14f, 0x2e, 0x4],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, 1.4, -3.14]
      }, {
        'p': [-0x181, 0x32, -0x2f],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.23, 0x0]
      }, {
        'p': [0xb5, 0x78, -0x128],
        's': [0x2b, 0x2, 0x48],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [0xb5, 0x61, -0x127],
        's': [0x2b, 0x8, 0x48],
        'c': '#ffd5b1'
      }, {
        'p': [0xc8, 0x69, -0x143],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa1, 0x69, -0x106],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa1, 0x69, -0x121],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa1, 0x69, -0x13d],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xc2, 0x7a, -0x108],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [0xc9, 0x61, -0x14a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [0xbe, 0x61, -0x14b],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xa3, 0x7a, -0x132],
        's': [0x9, 0x1, 0xd],
        'l': 0x1,
        'c': '#3661f0',
        't': 0x2
      }, {
        'p': [0x9f, 0x70, -0x132],
        's': [0x1, 0xa, 0xd],
        'l': 0x1,
        'c': '#3661f0',
        't': 0x2
      }, {
        'p': [0xac, 0x7a, -0x10a],
        's': [0x9, 0x1, 0xd],
        'l': 0x1,
        'c': '#66b18e',
        't': 0x2
      }, {
        'p': [0xac, 0x6e, -0x104],
        's': [0x9, 0xc, 0x1],
        'l': 0x1,
        'c': '#66b18e',
        't': 0x2
      }, {
        'p': [0xb5, 0x5f, -0x15a],
        's': [0x2c, 0x20, 0x36],
        'c': '#ffd5b1'
      }, {
        'p': [0xb5, 0x7f, -0x15a],
        's': [0x2e, 0x2, 0x38],
        'c': '#525252',
        't': 0xb
      }, {
        'p': [0xc9, 0x69, -0x121],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xc9, 0x69, -0x106],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xc8, 0x69, -0x13d],
        's': [0x2, 0x13, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xc5, 0x62, -0xfd],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [0xa4, 0x69, -0x10a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, -1.05, 0x0]
      }, {
        'p': [0x9e, 0x21, -0x155],
        's': [0x2, 0x50, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x9e, 0x71, -0x14b],
        's': [0x2, 0x13, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x9e, 0x71, -0x151],
        's': [0x2, 0x2, 0xa],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xb1, 0x7d, -0x15a],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xb1, 0x90, -0x15a],
        's': [0x1, 0x6, 0x1],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xb1, 0x95, -0x158],
        's': [0x1, 0x3, 0x1],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xa6, 0x30, -0x50],
        's': [0xf, 0x1, 0x4],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xa6, 0x2f, -0x51],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x46, 0x5c, -0x52],
        's': [0xf, 0x1, 0x4],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x46, 0x5b, -0x53],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x10c, 0x3e, 0x83],
        's': [0xf, 0x1, 0x4],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x10c, 0x3d, 0x82],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x43, 0x52, 0xe],
        's': [0xf, 0x1, 0x4],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x43, 0x51, 0xd],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x50, 0x47, -0x13],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0x52, 0x48, -0x13],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x87, 0x5a, -0x27],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0x85, 0x5b, -0x27],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x66, 0x41, -0x106],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0x64, 0x42, -0x106],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xe4, 0x46, -0x13c],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0xe2, 0x47, -0x13c],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x97, 0x40, -0x7b],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0x97, 0x41, -0x7d],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xe9, 0x41, -0x7b],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0xe9, 0x42, -0x7d],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x97, 0x30, -0xf],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0x97, 0x31, -0x11],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xd3, 0x43, -0xea],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0xd2, 0x44, -0xec],
        's': [0x6, 0x1, 0x10],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0xc8, 0x36, -0xcc],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0xca, 0x37, -0xcc],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x44, 0x5b, -0x15],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0x44, 0x5c, -0x17],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x35, 0x5b, -0x36],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0x37, 0x5c, -0x36],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x3f, 0x40, -0x81],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0x3f, 0x41, -0x83],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x10, 0x40, -0x81],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0x10, 0x41, -0x83],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x4f, 0x40, -0x48],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x4f, 0x41, -0x4a],
        's': [0x6, 0x1, 0xf],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x1c, 0x21, -0x82],
        's': [0x2, 0x3d, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x11c, 0x21, 0x17],
        's': [0x2, 0x2b, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x11c, 0x4e, 0x11],
        's': [0x2, 0xf, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x11c, 0x4c, 0x14],
        's': [0x2, 0x2, 0x8],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xdb, 0x21, -0x51],
        's': [0x2, 0x2f, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xdc, 0x20, -0x84],
        's': [0x2, 0x28, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xdc, 0x48, -0x87],
        's': [0x2, 0x2, 0x8],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xdc, 0x4a, -0x8a],
        's': [0x2, 0x10, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x8c, 0x22, -0xcb],
        's': [0x1, 0x11, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [-0x7e, 0x22, -0xcb],
        's': [0x1, 0x11, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [-0x85, 0x33, -0xcb],
        's': [0xf, 0x1, 0x2],
        'l': 0x1,
        'c': '#a5a5a5',
        't': 0x2
      }, {
        'p': [-0x85, 0x22, -0xca],
        's': [0xd, 0x11, 0x3],
        'l': 0x1,
        'c': 0x7d736b,
        't': 0x2
      }, {
        'p': [0x161, 0x15, -0x4d],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, -0.17, -3.14]
      }, {
        'p': [0x168, 0x1d, -0x7f],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-0.01, -1.4, -0.01]
      }, {
        'p': [0x10a, 0xb, 0xe7],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, -0.17, -3.14]
      }, {
        'p': [0xe2, 0x0, -0x1b2],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, -0.17, -3.14]
      }, {
        'p': [-0x9c, 0x2b, -0x93],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.13, -3.14]
      }, {
        'p': [-0x9b, 0x2b, -0xa4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.79, -3.14]
      }, {
        'p': [-0xc6, 0x2b, -0x71],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.79, -3.14]
      }, {
        'p': [-0xa0, 0x2b, -0x7c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.79, -3.14]
      }, {
        'p': [-0xc4, 0x2b, -0x93],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.79, -3.14]
      }, {
        'p': [0x69, 0x20, -0xcb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0]
      }, {
        'p': [0x84, 0x20, -0xcb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.08, -3.14]
      }, {
        'p': [0xac, 0x20, -0xe7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.97, -3.14]
      }, {
        'p': [0x9a, 0x20, -0xc8],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.8, 0x0]
      }, {
        'p': [0xbf, 0x20, -0xe1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.8, 0x0]
      }, {
        'p': [0xc7, 0x20, -0xe7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.45, 3.14]
      }, {
        'p': [0xd8, 0x20, -0xbf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.45, 3.14]
      }, {
        'p': [0xf7, 0x20, -0xc9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.97, 3.14]
      }, {
        'p': [0x111, 0x20, -0xce],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.97, 3.14]
      }, {
        'p': [0x118, 0x20, -0xdd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.97, 3.14]
      }, {
        'p': [0x108, 0x20, -0xed],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.95, 0x0]
      }, {
        'p': [0xe6, 0x20, -0xea],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.47, -3.14]
      }, {
        'p': [0xef, 0x20, -0x106],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.47, -3.14]
      }, {
        'p': [0x113, 0x20, -0x10f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.97, -3.14]
      }, {
        'p': [0xf0, 0x20, -0x12d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.97, -3.14]
      }, {
        'p': [0x113, 0x20, -0x140],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.97, -3.14]
      }, {
        'p': [0xfd, 0x20, -0x14b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.62, 0x0]
      }, {
        'p': [0xac, 0x20, -0xa1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.45, 3.14]
      }, {
        'p': [0xd8, 0x20, -0x9d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.77, 0x0]
      }, {
        'p': [0xab, 0x20, -0x89],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.59, -3.14]
      }, {
        'p': [0xbd, 0x20, -0x5b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.59, -3.14]
      }, {
        'p': [0xb6, 0x20, -0x54],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.98, -3.14]
      }, {
        'p': [0x9e, 0x20, -0x78],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.98, -3.14]
      }, {
        'p': [0xe1, 0x20, -0x54],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.59, -3.14]
      }, {
        'p': [0xd8, 0x20, -0x80],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.12, -1.5, -3.12]
      }, {
        'p': [0xfa, 0x20, -0x77],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.59, 0x0]
      }, {
        'p': [0x101, 0x20, -0x70],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.11, 0x0]
      }, {
        'p': [0x10d, 0x20, -0x6d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.24, 0x0]
      }, {
        'p': [0x10a, 0x20, -0x5a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.41, 0x0]
      }, {
        'p': [0xe6, 0x20, -0x2b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.41, -3.14]
      }, {
        'p': [0x10e, 0x20, -0x3d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.41, -3.14]
      }, {
        'p': [0x118, 0x20, -0x31],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.41, -3.14]
      }, {
        'p': [0x118, 0x20, -0x6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.11, 0x0]
      }, {
        'p': [0xe7, 0x20, -0x17],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.06, 0x0]
      }, {
        'p': [0xda, 0x20, -0xc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.81, 0x0]
      }, {
        'p': [0x126, 0x20, 0x1f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.76, 0x0]
      }, {
        'p': [0x126, 0x20, 0x48],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.76, 0x0]
      }, {
        'p': [0xfb, 0x20, 0x4d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.28, 0x0]
      }, {
        'p': [0xc7, 0x20, 0x2b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.58, -3.14]
      }, {
        'p': [0xbf, 0x20, 0x19],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.58, -3.14]
      }, {
        'p': [0xc0, 0x20, 0x4a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.58, -3.14]
      }, {
        'p': [0xc0, 0x20, 0x55],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.58, -3.14]
      }, {
        'p': [0xc2, 0x20, 0x71],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.58, -3.14]
      }, {
        'p': [0xd2, 0x20, 0x7e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.82, -3.14]
      }, {
        'p': [0xc5, 0x20, 0x7e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.82, -3.14]
      }, {
        'p': [0xe4, 0x20, 0x78],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.34, -3.14]
      }, {
        'p': [0xf2, 0x20, 0x7f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.75, 0x0]
      }, {
        'p': [0xd9, 0x20, 0x73],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.34, -3.14]
      }, {
        'p': [0x117, 0x20, 0x62],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.34, -3.14]
      }, {
        'p': [0x11a, 0x20, 0x56],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.75, 0x0]
      }, {
        'p': [0x89, 0x20, -0xc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.58, -3.14]
      }, {
        'p': [0x90, 0x20, 0x15],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.58, -3.14]
      }, {
        'p': [0x60, 0x20, 0x1a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.99, -3.14]
      }, {
        'p': [0x6a, 0x20, -0x11],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.99, -3.14]
      }, {
        'p': [0x39, 0x2f, 0x7c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [0x67, 0x2f, 0x7d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.88, 0x0]
      }, {
        'p': [0x7b, 0x2f, 0x74],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.34, 0x0]
      }, {
        'p': [0x5e, 0x2f, 0x57],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0]
      }, {
        'p': [-0x30, 0x44, 0x18],
        's': [0x2, 0x2, 0x1e],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [-0x2d, 0x37, -0x19],
        's': [0x2, 0x3, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [0x2e, 0x44, -0xc],
        's': [0x2, 0x2, 0x1e],
        'l': 0x1,
        'c': 0x919191,
        't': 0x2
      }, {
        'p': [0x17, 0x37, 0x46],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [0x15, 0x37, 0x46],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [0x16, 0x36, 0x44],
        's': [0x2, 0x3, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [-0xe, 0x5b, -0x84],
        's': [0x2, 0x17, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x1c, 0x5b, -0x84],
        's': [0x2, 0x17, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x7, 0x5c, -0x82],
        's': [0x2d, 0x14, 0x1],
        'c': '#4d4d4d',
        't': 0x2
      }, {
        'p': [-0x2a, 0x30, -0x7c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x2f, 0x5b, -0x87],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.17, 0x0]
      }, {
        'p': [-0x11, 0x5b, -0x87],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.69, 0x0]
      }, {
        'p': [0x7, 0x5c, -0x82],
        's': [0x2e, 0x1, 0x2],
        'c': '#4d4d4d',
        't': 0x2
      }, {
        'p': [0x26, 0x67, -0x8f],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.17, 0x0]
      }, {
        'p': [-0x10, 0x62, -0x88],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.69, 0x0]
      }, {
        'p': [-0x4c, 0x6a, -0x96],
        's': [0x22, 0x14, 0x28],
        'c': '#ffd5b1'
      }, {
        'p': [-0x4c, 0x7e, -0x96],
        's': [0x24, 0x3, 0x2a],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x3f, 0x7a, -0x87],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x3f, 0x8d, -0x87],
        's': [0x1, 0x6, 0x1],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x3f, 0x92, -0x85],
        's': [0x1, 0x3, 0x1],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x46, 0x6b, 0x19],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x46, 0x7e, 0x19],
        's': [0x1, 0x6, 0x1],
        'r': [0.35, 0x0, 0x0],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x46, 0x83, 0x1b],
        's': [0x1, 0x3, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x1e, 0x5e, -0x82],
        's': [0x6, 0x2, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x20, 0x60, -0x82],
        's': [0x2, 0x6, 0x2],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xfa, 0x62, -0x12],
        's': [0x1f, 0x2, 0x48],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xec, 0x58, -0x25],
        's': [0x2, 0xd, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xec, 0x58, 0x10],
        's': [0x2, 0xd, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xec, 0x58, -0xa],
        's': [0x2, 0xd, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x108, 0x58, -0xa],
        's': [0x2, 0xd, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x108, 0x58, 0x10],
        's': [0x2, 0xd, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x107, 0x58, -0x25],
        's': [0x2, 0xd, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xf4, 0x64, -0x1e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1,
        'r': [0x0, -0.35, 0x0]
      }, {
        'p': [-0xeb, 0x6f, -0x2b],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [-0xef, 0x58, 0xb],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0]
      }, {
        'p': [-0xa6, 0x79, -0x15f],
        's': [0x3a, 0x1, 0x22],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0xa6, 0x65, -0x15f],
        's': [0x3a, 0x5, 0x22],
        'c': '#ffd5b1'
      }, {
        'p': [-0xc0, 0x65, -0x16d],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x8c, 0x65, -0x16d],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xa7, 0x65, -0x16d],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xa7, 0x65, -0x150],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xc0, 0x65, -0x151],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x8c, 0x65, -0x151],
        's': [0x2, 0x16, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0x88, 0x73, -0x158],
        's': [0x1, 0x8, 0x7],
        'l': 0x1,
        'c': '#e63f3f',
        't': 0x2
      }, {
        'p': [-0xb3, 0x6a, -0x153],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [-0x90, 0x7a, -0x166],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [-0x8a, 0x7a, -0x158],
        's': [0x3, 0x1, 0x7],
        'l': 0x1,
        'c': '#e63f3f',
        't': 0x2
      }, {
        'p': [-0x5f, 0x79, -0x17f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [-0x6e, 0x65, -0x161],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [-0xde, 0x65, -0x16a],
        's': [0x36, 0x2c, 0x38],
        'c': '#ffd5b1'
      }, {
        'p': [-0xde, 0x8f, -0x16a],
        's': [0x3a, 0x3, 0x3e],
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x2b, 0x37, -0x19],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [-0x2d, 0x37, -0x1b],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [-0x2b, 0x37, -0x1b],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [0xde, 0x55, 0x84],
        's': [0x2, 0x17, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0x108, 0x55, 0x84],
        's': [0x2, 0x17, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xf3, 0x57, 0x83],
        's': [0x2d, 0x14, 0x1],
        'c': '#4d4d4d',
        't': 0x2
      }, {
        'p': [0xd9, 0x55, 0x86],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.69, 0x0]
      }, {
        'p': [0xf3, 0x57, 0x82],
        's': [0x2e, 0x1, 0x2],
        'c': '#4d4d4d',
        't': 0x2
      }, {
        'p': [0xd5, 0x5d, 0x89],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 1.21, 0x0]
      }, {
        'p': [0x145, 0x39, -0x4],
        's': [0x12, 0x2e, 0x26],
        'c': '#ffd5b1'
      }, {
        'p': [0x145, 0x67, -0x4],
        's': [0x15, 0x3, 0x28],
        'c': '#525252',
        't': 0xb
      }, {
        'p': [0x144, 0x5f, 0xa],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x144, 0x72, 0xa],
        's': [0x1, 0x6, 0x1],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0x144, 0x77, 0xc],
        's': [0x1, 0x3, 0x1],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x53, 0x79, -0x17c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [-0xcc, 0x89, -0x131],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.88, 0x0]
      }, {
        'p': [-0xcb, 0x81, -0x130],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [-0xcc, 0x7f, -0x126],
        's': [0x2, 0x19, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xcb, 0x83, -0x116],
        's': [0x1, 0x14, 0x2c],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xcb, 0x83, -0x116],
        's': [0x3, 0x1, 0x2d],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xcc, 0x7f, -0x106],
        's': [0x2, 0x19, 0x2],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [-0xca, 0x81, -0x137],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.18, 0x0]
      }, {
        'p': [-0xd6, 0x81, -0x103],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1,
        'r': [0x0, -0.35, 0x0]
      }, {
        'p': [-0xe3, 0x81, -0xff],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0]
      }, {
        'p': [-0xc9, 0x88, -0x153],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xc9, 0x9b, -0x153],
        's': [0x1, 0x6, 0x1],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0xc9, 0xa0, -0x151],
        's': [0x1, 0x3, 0x1],
        'l': 0x1,
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [0xd2, 0x55, 0x8a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1,
        'r': [0x0, 0.34, 0x0]
      }, {
        'p': [0x27, 0xc, -0x10],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.16, 0x0]
      }, {
        'p': [-0x1b, 0xc, 0x7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.76, -3.14]
      }, {
        'p': [-0x3d, 0xc, 0xa],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.81, -3.14]
      }, {
        'p': [-0x3b, 0x16, -0x3f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.24, 0x0]
      }, {
        'p': [-0x4d, 0x16, -0x46],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.41, 0x0]
      }, {
        'p': [-0x80, 0x20, -0x2a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0]
      }, {
        'p': [-0x57, 0x20, 0x2f],
        's': [0x3f, 0x2, 0x43],
        'l': 0x1,
        'c': '#393939',
        't': 0xb
      }, {
        'p': [-0x76, 0x18, 0x99],
        's': [0x5, 0x7f, 0x6],
        'v': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0xe, 0x24, -0x101],
        's': [0x5, 0x7b, 0x6],
        'v': 0x1,
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x1b6, 0x20, 0x42],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, -0.17, -3.14]
      }, {
        'p': [0x18d, 0x20, 0xf],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0]
      }, {
        'p': [0x16, 0x2f, 0x3f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [0x22, 0x2f, 0x22],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [-0x20, 0x2f, 0x44],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0]
      }, {
        'p': [-0x2d, 0x2f, 0x33],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.86, 3.14]
      }, {
        'p': [-0x1d, 0x2f, 0x2a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.06, 1.56, 3.06]
      }, {
        'p': [-0x2a, 0x2f, -0xd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.06, 1.56, 3.06]
      }, {
        'p': [-0x2a, 0x2f, -0x22],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.86, 3.14]
      }, {
        'p': [0x9, 0x2f, -0x1f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.86, 3.14]
      }, {
        'p': [-0x2c, 0x2f, -0x5b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.86, 3.14]
      }, {
        'p': [-0x20, 0x2f, -0x7e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.86, 3.14]
      }, {
        'p': [0x2a, 0x2f, -0x38],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.86, 3.14]
      }, {
        'p': [0x2a, 0x2f, -0x58],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.86, 3.14]
      }, {
        'p': [0x20, 0x2f, -0x1d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.23, 3.14]
      }, {
        'p': [0x8a, 0x20, -0x77],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.98, -3.14]
      }, {
        'p': [0x8a, 0x20, -0x55],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.98, -3.14]
      }, {
        'p': [-0xa, 0x2f, -0x29],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.19, 3.14]
      }, {
        'p': [0xa, 0x2f, -0x11],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.06, 0x0]
      }, {
        'p': [0x105, 0x20, 0x50],
        's': [0x9, 0xe, 0x4],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x10f, 0x20, 0x50],
        's': [0xc, 0x3, 0x4],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [0x10f, 0x2c, 0x50],
        's': [0xb, 0x3, 0x4],
        'c': '#7a6a5d',
        't': 0xb
      }, {
        'p': [0x113, 0x23, 0x4e],
        's': [0x3, 0xa, 0x1],
        'pe': 0x1,
        'c': '#b4b4b4',
        't': 0x2
      }, {
        'p': [0x110, 0x22, 0x4e],
        's': [0x3, 0xc, 0x1],
        'pe': 0x1,
        'c': '#898989',
        't': 0x2
      }, {
        'p': [0x10d, 0x23, 0x4e],
        's': [0x3, 0xa, 0x1],
        'pe': 0x1,
        'c': '#cacaca',
        't': 0x2
      }, {
        'p': [0x10a, 0x23, 0x4e],
        's': [0x3, 0xb, 0x1],
        'pe': 0x1,
        'c': '#898989',
        't': 0x2
      }, {
        'p': [0xcb, 0x2f, 0x50],
        's': [0xb, 0x1, 0x4],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x71, 0x2e, -0x13f],
        's': [0x5, 0x1, 0xb],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x71, 0x2e, -0x123],
        's': [0x5, 0x2, 0xb],
        'c': '#9d8672',
        't': 0xb
      }, {
        'p': [-0x68, 0x21, -0x149],
        's': [0x7, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0.36, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x32, 0x4d, -0x24],
        's': [0x8, 0x1, 0x65],
        'i': 0x9,
        'v': 0x1,
        'b': -0.1
      }, {
        'p': [-0x34, 0x4d, -0x19],
        's': [0x8, 0x1, 0xd4],
        'i': 0x9,
        'v': 0x1,
        'b': -0.1,
        'd': 0x2
      }, {
        'p': [-0x29, 0x4d, 0x4d],
        's': [0x22, 0x1, 0x8],
        'i': 0x9,
        'v': 0x1,
        'b': -0.1,
        'd': 0x1
      }, {
        'p': [0x1a, 0x4d, 0x4d],
        's': [0x18, 0x1, 0x8],
        'i': 0x9,
        'v': 0x1,
        'b': -0.1,
        'd': 0x1
      }, {
        'p': [0xb0, 0x43, -0xea],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0xb0, 0x44, -0xec],
        's': [0x6, 0x1, 0x10],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [-0x2e, 0x5a, -0xc3],
        's': [0x1, 0x13, 0x1],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x2e, 0x6d, -0xc3],
        's': [0x1, 0x5, 0x1],
        'l': 0x1,
        'r': [-0.44, 0x0, 0x0],
        'c': '#2f2f2f',
        't': 0x5
      }, {
        'p': [-0x34, 0xc, -0x12],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.76, -3.14]
      }, {
        'p': [0x2, 0xc, -0xf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.16, 0x0]
      }, {
        'p': [-0xd9, 0x20, -0x19],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.53, 0x0]
      }, {
        'p': [-0x95, 0x20, -0xfc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.62, 0x0],
        'c': '#d2b559'
      }, {
        'p': [-0x6e, 0x32, 0x92],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0]
      }, {
        'p': [-0x7c, 0x32, 0xa1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.26, 0x0]
      }, {
        'p': [0xc3, 0x20, -0xc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.28, 0x0]
      }, {
        'p': [-0xe1, 0x2f, 0x84],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.04, 3.14]
      }, {
        'p': [-0x87, 0x20, -0x46],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0]
      }, {
        'p': [0xa4, 0xc0, 0x8e],
        's': [0x4, 0x4, 0x28],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xa4, 0xc0, 0x8e],
        's': [0x29, 0x4, 0x4],
        'c': '#7d7d7d',
        't': 0x2
      }, {
        'p': [0xf0, 0x21, -0xca],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x10b, 0x21, -0x65],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0xd8, 0x20, -0x7],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x11e, 0x20, 0x1f],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x10d, 0x20, -0x35],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x103, 0x20, 0x4a],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -0.43, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x15, 0xc, 0x7],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -0.43, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x8, 0xd, -0xf],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0.27, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x9d, 0x20, 0x42],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -0.43, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0xdd, 0x21, 0x17],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [3.14, -1.49, 3.14],
        'c': '#9d8672'
      }, {
        'p': [-0x88, 0x30, 0x8a],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 1.14, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x81, 0x21, -0xe],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.04, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x8f, 0x21, -0xfb],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'c': '#9d8672'
      }, {
        'p': [-0xcc, 0x21, -0xe7],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'c': '#9d8672'
      }, {
        'p': [0x99, 0x21, -0x137],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x7c, 0x21, -0xcb],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0xd8, 0x21, -0x8d],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x96, 0x21, 0x15],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x16, 0x30, 0x55],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -0.34, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x24, 0x30, 0x39],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -0.34, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x36, 0x30, 0x55],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 0.18, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x28, 0x30, -0x15],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [0x11, 0x30, 0x47],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [0xa, 0x37, -0x17],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [0xa, 0x37, -0x19],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [0x8, 0x35, -0x18],
        's': [0x2, 0x3, 0x2],
        'l': 0x1,
        'c': '#571f1f',
        't': 0x5
      }, {
        'p': [-0xc1, 0x20, -0x29],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0xc3, 0x20, -0x23],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, -0.43, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x85, 0x20, -0x14],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, -0.43, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x97, 0x21, -0xd0],
        's': [0x4, 0x2, 0x4],
        'l': 0x1,
        'c': '#9d8672'
      }, {
        'p': [0xdf, 0x20, 0x4d],
        's': [0x3, 0x2, 0x3],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0xf8, 0x20, 0x4b],
        's': [0x2, 0x2, 0x2],
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0xb9, 0x30, 0x84],
        's': [0x3, 0x1, 0x3],
        'l': 0x1,
        'r': [0x0, 1.14, 0x0],
        'c': '#9d8672'
      }, {
        'p': [-0x14, 0x30, 0x4c],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'r': [0x0, 1.49, 0x0],
        'c': '#9d8672'
      }, {
        'p': [0x2c, 0x2f, -0x7e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.86, 3.14]
      }, {
        'p': [0x7, 0x2f, -0x7f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.32, 0x0]
      }]
    }, {
      'name': 'Subzero',
      'ambInd': 0x1,
      'modURL': '',
      'terrainSeed': '',
      'terrainWidth': 0x800,
      'terrainHeight': 0x800,
      'terrainMntMlt': 0x1,
      'terrainMntCol': '#a0a0a0',
      'terrainGrsCol': '#4a6904',
      'terrainDrtCol': '#8c6835',
      'skyDome': !0x1,
      'skyDomeCol0': '#ffffff',
      'skyDomeCol1': '#7196a2',
      'skyDomeCol2': '#184452',
      'zone': !0x1,
      'zoneSize': 0x1f4,
      'zoneSpeed': 0x1,
      'zoneCol0': '#c542d9',
      'zoneCol1': '#c542d9',
      'zoneCol2': '#c542d9',
      'sizeMlt': 0x2,
      'shadowR': 0x400,
      'ambient': 0x828c96,
      'light': 0xf5f8fa,
      'sky': 0xd3d9dc,
      'fog': 0xc6d3d9,
      'fogD': 601.943118216585,
      'dthY': -0x64,
      'camPos': [-0xd, 0x5d, -0x6],
      'spawns': [
        [-0x29, 0x43, -0x3a, 0x0, 0x0, 0x0],
        [-0xbb, 0x36, -0xee, 0x0, 0x2, 0x0],
        [-0x12b, 0x36, 0x2, 0x0, 0x3, 0x0],
        [0x83, 0x43, -0xcb, 0x0, 0x3, 0x0],
        [0xbb, 0x43, -0x150, 0x0, 0x1, 0x0],
        [0x15e, 0x43, -0x11f, 0x0, 0x1, 0x0],
        [0x13f, 0x56, -0x3b, 0x0, 0x0, 0x0],
        [0xb2, 0x54, -0x31, 0x0, 0x0, 0x0],
        [0x8c, 0x54, -0xd, 0x0, 0x1, 0x0],
        [-0xa2, 0x43, 0x3f, 0x0, 0x0, 0x0]
      ],
      'ambO': 0x1,
      'ambS': 0x5,
      'objects': [{
        'p': [-0x1, 0x40, 0x0],
        's': [0x8c, 0x2, 0x8e],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x64, 0x40, 0x32],
        's': [0x3a, 0x2, 0x2a],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x95, 0x35, 0x8],
        's': [0x28, 0xd, 0x7e],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x8b, 0x33, -0x6f],
        's': [0xac, 0x2, 0x82],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x115, 0x33, -0x4d],
        's': [0x68, 0x2, 0xca],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x5, 0x40, -0x7b],
        's': [0x3c, 0x2, 0x68],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x36, 0x33, -0x8f],
        's': [0x3a, 0xf, 0x2a],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xf0, 0x41, -0x145],
        's': [0x84, 0x2, 0x26],
        'c': 0x575757,
        't': 0xb
      }, {
        'p': [0xd5, 0x40, -0xcf],
        's': [0x28, 0x2, 0x3f],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xd5, 0x40, -0x70],
        's': [0x27, 0x14, 0x25],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x7c, 0x33, -0x11d],
        's': [0xcb, 0x2, 0x32],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xc6, 0x32, -0xda],
        's': [0x26, 0x2, 0x54],
        'c': 0x737373,
        't': 0x1
      }, {
        'p': [0x157, 0x40, -0x106],
        's': [0x4d, 0x2, 0x48],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x157, 0x40, -0x7a],
        's': [0x52, 0x2, 0xd9],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x147, 0x40, -0xb],
        's': [0x8c, 0x14, 0x81],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x146, 0xb, -0x4d],
        's': [0x9, 0x2f, 0x278],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [-0xaab, 0xb, -0x4d],
        's': [0x14f2, 0x1f, 0x2d05],
        'l': 0x1,
        'c': 0x4f677d,
        't': 0x5
      }, {
        'p': [-0x122, 0x33, -0xd9],
        's': [0x4e, 0x38, 0x50],
        'c': 0x8e8d7a,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0xfc, 0x33, -0xb2],
        's': [0x4, 0x38, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x148, 0x38, -0xb2],
        's': [0x4, 0x33, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xfc, 0x33, -0x100],
        's': [0x4, 0x38, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x122, 0x4c, -0xb2],
        's': [0x48, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x122, 0x67, -0xb2],
        's': [0x48, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x122, 0x33, -0xb2],
        's': [0x4, 0x46, 0x5],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xfc, 0x4c, -0xd9],
        's': [0x4, 0x4, 0x4a],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0xfc, 0x67, -0xd9],
        's': [0x4, 0x4, 0x4a],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x10c, 0x71, -0xd9],
        's': [0x2d, 0x2, 0x54],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x6b6b6b,
        't': 0x2
      }, {
        'p': [-0x138, 0x71, -0xd9],
        's': [0x2d, 0x2, 0x54],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x6b6b6b,
        't': 0x2
      }, {
        'p': [-0x122, 0x6b, -0xd9],
        's': [0x4d, 0x4, 0x50],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [-0x122, 0x78, -0xd9],
        's': [0x5, 0x5, 0x59],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x10b, 0x73, -0xd9],
        's': [0x2d, 0x2, 0x54],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [-0x139, 0x73, -0xd9],
        's': [0x2d, 0x2, 0x54],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [-0x122, 0x7d, -0xd9],
        's': [0x5, 0x2, 0x59],
        't': 0x5
      }, {
        'p': [-0x114, 0x33, -0xb2],
        's': [0x2, 0x14, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x108, 0x33, -0xb2],
        's': [0x2, 0x14, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x10e, 0x47, -0xb2],
        's': [0xe, 0x2, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x122, 0x6f, -0xd9],
        's': [0x37, 0x4, 0x50],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [-0x122, 0x73, -0xd9],
        's': [0x22, 0x4, 0x50],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [-0x122, 0x77, -0xd9],
        's': [0xd, 0x2, 0x50],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [-0x13f, 0x38, -0xc6],
        's': [0x9, 0x48, 0x14],
        'c': 0x7f7f7f,
        't': 0xb
      }, {
        'p': [-0xea, 0x33, -0xd4],
        's': [0x22, 0x28, 0x60],
        'c': 0x878787,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x97, 0x33, -0xd4],
        's': [0x3c, 0x28, 0x60],
        'c': 0x7f7f7f,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xba, 0x5a, -0xd4],
        's': [0x80, 0x1f, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0xf9, 0x5b, -0xa6],
        's': [0x4, 0x1e, 0x4],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xcf, 0x5b, -0xa6],
        's': [0x4, 0x1a, 0x4],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xa5, 0x5b, -0xa6],
        's': [0x4, 0x1a, 0x4],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x7b, 0x5b, -0xa6],
        's': [0x4, 0x1e, 0x4],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0xd9, 0x35, -0xa4],
        's': [0x3, 0x1f, 0x3],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xb5, 0x35, -0xa4],
        's': [0x3, 0x1f, 0x3],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc7, 0x51, -0xa4],
        's': [0x21, 0x3, 0x3],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xdd, 0x83, -0xd4],
        's': [0x46, 0x3, 0x64],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x787777,
        't': 0x2
      }, {
        'p': [-0xba, 0x8d, -0xd4],
        's': [0x7, 0x7, 0x6c],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0x96, 0x83, -0xd4],
        's': [0x49, 0x3, 0x64],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x787777,
        't': 0x2
      }, {
        'p': [-0x95, 0x86, -0xd4],
        's': [0x49, 0x3, 0x64],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [-0xba, 0x94, -0xd4],
        's': [0x7, 0x3, 0x6c],
        't': 0x5
      }, {
        'p': [-0xa5, 0x79, -0xa6],
        's': [0x4, 0x10, 0x4],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xcf, 0x79, -0xa6],
        's': [0x4, 0x11, 0x4],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xba, 0x79, -0xd4],
        's': [0x7d, 0x6, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [-0xba, 0x7f, -0xd4],
        's': [0x5d, 0x6, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [-0xba, 0x85, -0xd4],
        's': [0x3c, 0x6, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [-0xba, 0x8b, -0xd4],
        's': [0x20, 0x4, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [-0x87, 0x4c, -0xec],
        's': [0x9, 0x48, 0x14],
        'c': 0x575757,
        't': 0xb
      }, {
        'p': [-0x102, 0x33, -0x11e],
        's': [0x42, 0x3a, 0x38],
        'c': 0x7a858c,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x7b, 0x5b, -0x102],
        's': [0x4, 0x1e, 0x4],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xf9, 0x5b, -0x102],
        's': [0x4, 0x1e, 0x4],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0xcf, 0x5b, -0x102],
        's': [0x4, 0x1a, 0x4],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xa5, 0x5b, -0x102],
        's': [0x4, 0x1a, 0x4],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xcf, 0x79, -0x102],
        's': [0x4, 0x11, 0x4],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0xa5, 0x79, -0x102],
        's': [0x4, 0x11, 0x4],
        'c': 0x848484,
        't': 0x2
      }, {
        'p': [-0xe2, 0x35, -0x105],
        's': [0x4, 0x38, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe2, 0x4d, -0x120],
        's': [0x4, 0x4, 0x32],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0xe2, 0x69, -0x120],
        's': [0x4, 0x4, 0x32],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x101, 0x76, -0x11f],
        's': [0x48, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x101, 0x71, -0x12f],
        's': [0x44, 0x2, 0x20],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x575757,
        't': 0x2
      }, {
        'p': [-0x101, 0x70, -0x10b],
        's': [0x44, 0x2, 0x28],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x575757,
        't': 0x2
      }, {
        'p': [-0x102, 0x6d, -0x11f],
        's': [0x42, 0x3, 0x38],
        'c': 0x7a858c,
        't': 0xa
      }, {
        'p': [-0x101, 0x73, -0x12f],
        's': [0x44, 0x2, 0x21],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0x101, 0x7a, -0x11f],
        's': [0x48, 0x2, 0x4],
        't': 0x5
      }, {
        'p': [-0x102, 0x70, -0x11e],
        's': [0x42, 0x4, 0x26],
        'c': 0x7a858c,
        't': 0xa
      }, {
        'p': [-0x102, 0x74, -0x11f],
        's': [0x42, 0x3, 0x15],
        'c': 0x7a858c,
        't': 0xa
      }, {
        'p': [-0x101, 0x72, -0x10a],
        's': [0x44, 0x2, 0x29],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0xe1, 0x33, -0x10f],
        's': [0x2, 0x14, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe1, 0x33, -0x11b],
        's': [0x2, 0x14, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe1, 0x47, -0x115],
        's': [0x2, 0x2, 0xe],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc1, 0x33, -0x149],
        's': [0x42, 0x26, 0x38],
        'c': 0x6c7f76,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0xdf, 0x35, -0x12e],
        's': [0x4, 0x2a, 0x4],
        'c': 0x898989,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xa1, 0x35, -0x12e],
        's': [0x4, 0x2a, 0x4],
        'c': 0x898989,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc0, 0x57, -0x12e],
        's': [0x3a, 0x8, 0x4],
        'c': 0x898989,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe2, 0x35, -0x13b],
        's': [0x4, 0x38, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc0, 0x60, -0x147],
        's': [0x44, 0x2, 0x39],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': 0x555555,
        't': 0x2
      }, {
        'p': [-0xc0, 0x62, -0x147],
        's': [0x44, 0x2, 0x39],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0xc1, 0x59, -0x149],
        's': [0x42, 0x6, 0x38],
        'c': 0x6c7f76,
        't': 0xa
      }, {
        'p': [-0xc1, 0x5c, -0x153],
        's': [0x42, 0x3, 0x24],
        'c': 0x6c7f76,
        't': 0x5
      }, {
        'p': [-0xc1, 0x5f, -0x15b],
        's': [0x42, 0x3, 0x14],
        'c': 0x6c7f76,
        't': 0xa
      }, {
        'p': [-0xba, 0x33, -0x12e],
        's': [0x2, 0x14, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xae, 0x33, -0x12e],
        's': [0x2, 0x14, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xb4, 0x47, -0x12e],
        's': [0xe, 0x2, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xd8, 0x33, -0xfe],
        's': [0x13, 0x2, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xc3, 0x33, -0x101],
        's': [0xc, 0x2, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xb9, 0x33, -0xfe],
        's': [0x8, 0x2, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xd3, 0x33, -0xb7],
        's': [0xc, 0x2, 0xe],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xc9, 0x33, -0xb3],
        's': [0x8, 0x2, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xb7, 0x33, -0xb6],
        's': [0x8, 0x2, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xc5, 0x33, -0x3e],
        's': [0x38, 0x39, 0x50],
        'c': 0x877960,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0xe0, 0x33, -0x65],
        's': [0x4, 0x3a, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe0, 0x33, -0x17],
        's': [0x4, 0x3a, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xaa, 0x33, -0x17],
        's': [0x4, 0x3a, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xaa, 0x33, -0x65],
        's': [0x4, 0x3a, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x4d, -0x65],
        's': [0x32, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0xc5, 0x69, -0x65],
        's': [0x32, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x69, -0x3e],
        's': [0x3a, 0x4, 0x4a],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x79, -0x3e],
        's': [0x41, 0x6, 0x6],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x74, -0x54],
        's': [0x3f, 0x2, 0x2b],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x666666,
        't': 0x2
      }, {
        'p': [-0xc5, 0x74, -0x28],
        's': [0x3f, 0x2, 0x2c],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x666666,
        't': 0x2
      }, {
        'p': [-0xc5, 0x76, -0x27],
        's': [0x3f, 0x2, 0x2c],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0xc5, 0x76, -0x55],
        's': [0x3f, 0x2, 0x2b],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0xc5, 0x7f, -0x3e],
        's': [0x41, 0x2, 0x6],
        't': 0x5
      }, {
        'p': [-0xc5, 0x6d, -0x3e],
        's': [0x38, 0x3, 0x52],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [-0xba, 0x75, -0xd4],
        's': [0x7a, 0x4, 0x60],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x70, -0x3e],
        's': [0x38, 0x3, 0x42],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [-0xc5, 0x73, -0x3e],
        's': [0x38, 0x4, 0x32],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [-0xc5, 0x77, -0x3e],
        's': [0x38, 0x4, 0x1c],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [-0xe0, 0x33, -0x3e],
        's': [0x5, 0x47, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xaa, 0x33, -0x3e],
        's': [0x5, 0x47, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xb0, 0x5c, -0x5a],
        's': [0x7, 0x27, 0xc],
        'c': 0x5f5f5f,
        't': 0xb
      }, {
        'p': [-0xe1, 0x33, -0x24],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe1, 0x33, -0x30],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe1, 0x47, -0x2a],
        's': [0x2, 0x2, 0xa],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x33, 0xe],
        's': [0x4a, 0x48, 0x46],
        'c': 0x607060,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0xe9, 0x33, -0x14],
        's': [0x4, 0x49, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xe9, 0x33, 0x30],
        's': [0x4, 0x49, 0x4],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [-0xa1, 0x33, 0x30],
        's': [0x4, 0x49, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xa1, 0x33, -0x14],
        's': [0x4, 0x49, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x35, 0xe],
        's': [0x4d, 0xc, 0x49],
        'c': 0x5f5f5f,
        't': 0xb
      }, {
        'p': [-0xa0, 0x5b, 0xe],
        's': [0x2, 0x4, 0x40],
        'l': 0x1,
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0xc5, 0x78, 0xe],
        's': [0x4c, 0x4, 0x40],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xa0, 0x42, -0x9],
        's': [0x2, 0x14, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xa0, 0x42, 0x3],
        's': [0x2, 0x14, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xa0, 0x54, -0x3],
        's': [0x2, 0x2, 0xa],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x78, -0x14],
        's': [0x44, 0x4, 0x4],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x78, 0x30],
        's': [0x44, 0x4, 0x4],
        'l': 0x1,
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0xc5, 0x88, 0xe],
        's': [0x5, 0x5, 0x50],
        'c': 0x969696,
        't': 0x2
      }, {
        'p': [-0xdb, 0x82, 0xe],
        's': [0x2a, 0x2, 0x4d],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [-0xb0, 0x82, 0xe],
        's': [0x29, 0x2, 0x4d],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [-0xc5, 0x7c, 0xe],
        's': [0x4a, 0x4, 0x46],
        'c': 0x607060,
        't': 0xa
      }, {
        'p': [-0xb0, 0x84, 0xe],
        's': [0x2b, 0x2, 0x4d],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [-0xdb, 0x84, 0xe],
        's': [0x2c, 0x2, 0x4d],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [-0xc5, 0x8d, 0xe],
        's': [0x5, 0x2, 0x50],
        't': 0x5
      }, {
        'p': [-0xc5, 0x80, 0xe],
        's': [0x35, 0x4, 0x46],
        'c': 0x607060,
        't': 0xa
      }, {
        'p': [-0xc5, 0x88, 0xe],
        's': [0xb, 0x3, 0x46],
        'c': 0x607060,
        't': 0xa
      }, {
        'p': [-0xc5, 0x84, 0xe],
        's': [0x1f, 0x4, 0x46],
        'c': 0x607060,
        't': 0xa
      }, {
        'p': [-0xc5, 0x5b, -0x14],
        's': [0x44, 0x4, 0x4],
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x119, 0x33, 0x40],
        's': [0x60, 0x3a, 0x50],
        'c': 0x735656,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x11a, 0x4e, 0x19],
        's': [0x58, 0x4, 0x4],
        'c': 0x898989,
        't': 0x2
      }, {
        'p': [-0x11a, 0x78, 0x40],
        's': [0x66, 0x7, 0x7],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x11a, 0x74, 0x2b],
        's': [0x64, 0x2, 0x30],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x575757,
        't': 0x2
      }, {
        'p': [-0x11a, 0x73, 0x57],
        's': [0x64, 0x2, 0x31],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x575757,
        't': 0x2
      }, {
        'p': [-0x11a, 0x76, 0x2a],
        's': [0x64, 0x2, 0x30],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0x11a, 0x75, 0x58],
        's': [0x64, 0x2, 0x31],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0x11a, 0x7f, 0x40],
        's': [0x66, 0x2, 0x7],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x119, 0x6d, 0x40],
        's': [0x60, 0x4, 0x50],
        'c': 0x695555,
        't': 0xa
      }, {
        'p': [-0x119, 0x71, 0x40],
        's': [0x60, 0x4, 0x3a],
        'c': 0x695555,
        't': 0xa
      }, {
        'p': [-0x119, 0x75, 0x40],
        's': [0x60, 0x4, 0x23],
        'c': 0x695555,
        't': 0xa
      }, {
        'p': [-0x119, 0x79, 0x40],
        's': [0x60, 0x3, 0xf],
        'c': 0x695555,
        't': 0xa
      }, {
        'p': [-0x108, 0x33, 0x19],
        's': [0x2, 0x16, 0x4],
        'c': 0x898888,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xfc, 0x33, 0x19],
        's': [0x2, 0x16, 0x4],
        'c': 0x898989,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x102, 0x47, 0x19],
        's': [0xa, 0x2, 0x4],
        'c': 0x919191,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x146, 0x3a, -0x4d],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0x3d],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0x5d],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0x6d],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0x7e],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0x8f],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0xa0],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0xb1],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0x2c],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0x1b],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, -0xa],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, 0x7],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3a, 0x18],
        's': [0x5, 0x7, 0x5],
        'c': 0x7d7c7c,
        't': 0xb
      }, {
        'p': [-0x146, 0x3d, -0x4f],
        's': [0x2, 0x2, 0xcd],
        'c': 0xcfcfcf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x78, 0x33, -0x9f],
        's': [0x4, 0x37, 0x4],
        'c': 0x939393,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x18, 0x33, -0x9f],
        's': [0x4, 0x37, 0x4],
        'c': 0x898989,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x18, 0x33, -0x109],
        's': [0x4, 0x37, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x78, 0x33, -0x109],
        's': [0x4, 0x37, 0x4],
        'c': 0x7a7a7a,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x48, 0x33, -0x109],
        's': [0x4, 0x48, 0x5],
        'c': 0x919191,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x48, 0x33, -0x9f],
        's': [0x4, 0x48, 0x5],
        'c': 0x8c8c8c,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x64, 0x72, -0xd4],
        's': [0x38, 0x3, 0x72],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [-0x48, 0x7a, -0xd4],
        's': [0x6, 0x6, 0x77],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x2d, 0x72, -0xd4],
        's': [0x38, 0x3, 0x72],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [-0x48, 0x4e, -0x109],
        's': [0x5c, 0x4, 0x4],
        'c': 0x757575,
        't': 0x2
      }, {
        'p': [-0x18, 0x4e, -0xd4],
        's': [0x4, 0x4, 0x66],
        'c': 0x7f7f7f,
        't': 0x2
      }, {
        'p': [-0x48, 0x4e, -0x9f],
        's': [0x5c, 0x4, 0x4],
        'c': 0x8c8c8c,
        't': 0x2
      }, {
        'p': [-0x78, 0x4e, -0xd4],
        's': [0x4, 0x4, 0x66],
        'l': 0x1,
        'c': 0x828282,
        't': 0x2
      }, {
        'p': [-0x48, 0x66, -0x9f],
        's': [0x5c, 0x4, 0x4],
        'c': 0x919191,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x48, 0x66, -0x109],
        's': [0x5c, 0x4, 0x4],
        'c': 0x939393,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x18, 0x33, -0xd4],
        's': [0x5, 0x37, 0x4],
        'c': 0x7f7f7f,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x18, 0x66, -0xd4],
        's': [0x4, 0x4, 0x66],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x78, 0x66, -0xd4],
        's': [0x4, 0x4, 0x66],
        'c': 0x898989,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x2c, 0x75, -0xd4],
        's': [0x38, 0x3, 0x72],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [-0x65, 0x75, -0xd4],
        's': [0x38, 0x3, 0x72],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [-0x48, 0x80, -0xd4],
        's': [0x6, 0x2, 0x77],
        't': 0x5
      }, {
        'p': [-0x6f, 0x33, -0x109],
        's': [0x2, 0x17, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x63, 0x33, -0x109],
        's': [0x2, 0x17, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x69, 0x48, -0x109],
        's': [0xa, 0x2, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x6c, 0x33, -0x164],
        's': [0x66, 0x3c, 0x5c],
        'c': 0x7d6565,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x3a, 0x35, -0x137],
        's': [0x4, 0x3b, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x9e, 0x35, -0x137],
        's': [0x4, 0x3b, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x9e, 0x35, -0x165],
        's': [0x4, 0x37, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x7c, 0x35, -0x137],
        's': [0x4, 0x4a, 0x5],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x5c, 0x35, -0x137],
        's': [0x4, 0x4b, 0x5],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x6c, 0x4f, -0x137],
        's': [0x60, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x6c, 0x6c, -0x137],
        's': [0x60, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x6c, 0x81, -0x164],
        's': [0x6, 0x6, 0x69],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x88, 0x79, -0x164],
        's': [0x39, 0x3, 0x63],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x595959,
        't': 0x2
      }, {
        'p': [-0x3a, 0x6c, -0x166],
        's': [0x4, 0x4, 0x5a],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x9e, 0x6c, -0x163],
        's': [0x4, 0x4, 0x54],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x89, 0x7c, -0x164],
        's': [0x39, 0x2, 0x63],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [-0x6c, 0x87, -0x164],
        's': [0x6, 0x2, 0x69],
        't': 0x5
      }, {
        'p': [-0x4f, 0x7c, -0x164],
        's': [0x39, 0x2, 0x63],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [-0x50, 0x79, -0x164],
        's': [0x39, 0x3, 0x63],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x5c5c5c,
        't': 0x2
      }, {
        'p': [-0x6c, 0x70, -0x164],
        's': [0x66, 0x5, 0x5c],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [-0x6c, 0x75, -0x164],
        's': [0x4d, 0x5, 0x5c],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [-0x6c, 0x7a, -0x164],
        's': [0x31, 0x5, 0x5c],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [-0x6c, 0x7f, -0x164],
        's': [0x16, 0x5, 0x5c],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [-0x94, 0x33, -0x137],
        's': [0x2, 0x16, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x88, 0x33, -0x137],
        's': [0x2, 0x16, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x8e, 0x47, -0x137],
        's': [0xa, 0x2, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x65, 0x33, -0x14],
        's': [0x3c, 0x3e, 0x64],
        'c': 0x6a686e,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x65, 0x82, -0x14],
        's': [0x5, 0x5, 0x6c],
        'c': 0x969696,
        't': 0x2
      }, {
        'p': [-0x82, 0x33, 0x1d],
        's': [0x4, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x48, 0x33, 0x1d],
        's': [0x4, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x48, 0x33, -0x47],
        's': [0x4, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x1a, 0x33, -0x47],
        's': [0x4, 0x46, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x1a, 0x33, -0x79],
        's': [0x4, 0x46, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x80, 0x33, -0x79],
        's': [0x4, 0x46, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x4e, 0x33, -0x79],
        's': [0x4, 0x46, 0x5],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x48, 0x33, -0x13],
        's': [0x4, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x65, 0x57, 0x1d],
        's': [0x36, 0x4, 0x4],
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x65, 0x6e, 0x1d],
        's': [0x36, 0x4, 0x4],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x67, 0x5b, -0x79],
        's': [0x2e, 0x4, 0x4],
        'l': 0x1,
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x34, 0x5b, -0x79],
        's': [0x30, 0x4, 0x4],
        'l': 0x1,
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x31, 0x5b, -0x47],
        's': [0x2a, 0x4, 0x4],
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x34, 0x75, -0x79],
        's': [0x30, 0x4, 0x4],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x67, 0x75, -0x79],
        's': [0x2e, 0x4, 0x4],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x65, 0x57, 0x5],
        's': [0x3e, 0x4, 0x2c],
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x80, 0x5b, -0x5f],
        's': [0x4, 0x4, 0x30],
        'l': 0x1,
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x1a, 0x75, -0x60],
        's': [0x4, 0x4, 0x2e],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x1a, 0x5b, -0x60],
        's': [0x4, 0x4, 0x2e],
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x54, 0x7a, -0x14],
        's': [0x27, 0x2, 0x69],
        'l': 0x1,
        'r': [0x0, 0x0, -0.52],
        'c': 0x484848,
        't': 0x2
      }, {
        'p': [-0x76, 0x7a, -0x14],
        's': [0x27, 0x2, 0x69],
        'l': 0x1,
        'r': [0x0, 0x0, 0.53],
        'c': 0x484848,
        't': 0x2
      }, {
        'p': [-0x34, 0x75, -0x47],
        's': [0x30, 0x4, 0x4],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x82, 0x33, -0x45],
        's': [0x4, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x82, 0x33, -0x13],
        's': [0x5, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x65, 0x72, -0x14],
        's': [0x3d, 0x4, 0x64],
        'c': 0x6a686e,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x65, 0x76, -0x14],
        's': [0x32, 0x4, 0x64],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [-0x65, 0x7a, -0x14],
        's': [0x23, 0x4, 0x64],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [-0x65, 0x7e, -0x14],
        's': [0x16, 0x4, 0x64],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [-0x65, 0x82, -0x14],
        's': [0x9, 0x1, 0x64],
        'c': 0x6a686e,
        't': 0x5
      }, {
        'p': [-0x77, 0x7c, -0x14],
        's': [0x27, 0x2, 0x69],
        'l': 0x1,
        'r': [0x0, 0x0, 0.53],
        't': 0x5
      }, {
        'p': [-0x53, 0x7c, -0x14],
        's': [0x27, 0x2, 0x69],
        'l': 0x1,
        'r': [0x0, 0x0, -0.52],
        't': 0x5
      }, {
        'p': [-0x65, 0x87, -0x14],
        's': [0x5, 0x2, 0x6c],
        't': 0x5
      }, {
        'p': [-0x4d, 0x33, -0x60],
        's': [0x68, 0x44, 0x34],
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x80, 0x75, -0x5f],
        's': [0x4, 0x4, 0x30],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x4d, 0x77, -0x60],
        's': [0x68, 0x5, 0x34],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [-0x4d, 0x81, -0x60],
        's': [0x72, 0x5, 0x5],
        'l': 0x1,
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x4d, 0x7d, -0x70],
        's': [0x6c, 0x2, 0x1f],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x575757,
        't': 0x2
      }, {
        'p': [-0x4d, 0x7d, -0x50],
        's': [0x6c, 0x2, 0x1f],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x575757,
        't': 0x2
      }, {
        'p': [-0x4d, 0x7f, -0x71],
        's': [0x6c, 0x2, 0x1f],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0x4d, 0x7f, -0x4f],
        's': [0x6c, 0x2, 0x1f],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0x4d, 0x86, -0x60],
        's': [0x72, 0x2, 0x5],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x4d, 0x7c, -0x60],
        's': [0x68, 0x4, 0x26],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [-0x4d, 0x80, -0x60],
        's': [0x68, 0x4, 0x10],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [-0x2e, 0x41, -0x4b],
        's': [0xc, 0x4d, 0x6],
        'c': 0xa2a2a2,
        't': 0xb
      }, {
        'p': [-0x19, 0x40, -0x66],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x19, 0x40, -0x5a],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x19, 0x54, -0x60],
        's': [0x2, 0x2, 0xa],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x5c, 0x35, -0x57],
        's': [0x4d, 0xc, 0x49],
        'c': 0x5f5f5f,
        't': 0xb
      }, {
        'p': [0xaf, 0x42, -0xfe],
        's': [0x6, 0x5, 0x2e],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xaf, 0x67, -0x14e],
        's': [0x6, 0x15, 0x1b],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xf2, 0x42, -0x15b],
        's': [0x80, 0x3e, 0x7],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x10b, 0x42, -0xec],
        's': [0x4e, 0x31, 0x9],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x42, -0x148],
        's': [0x6, 0x25, 0x2e],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xb7, 0x42, -0xd4],
        's': [0x26, 0x66, 0x26],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xef, 0x41, -0x103],
        's': [0x7d, 0x2, 0x26],
        'c': 0x575757,
        't': 0xb
      }, {
        'p': [0xf0, 0x41, -0x124],
        's': [0x7b, 0x2, 0x1c],
        'c': 0x662828,
        't': 0x5
      }, {
        'p': [-0x66, 0x42, 0x76],
        's': [0x7e, 0x26, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0xa4, 0x42, 0x48],
        's': [0x4, 0x26, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x28, 0x42, 0x48],
        's': [0x4, 0x26, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x66, 0x42, 0x48],
        's': [0x4, 0x3e, 0x5],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x66, 0x64, 0x48],
        's': [0x78, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x66, 0x7e, 0x75],
        's': [0x6, 0x6, 0x66],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x43, 0x73, 0x75],
        's': [0x47, 0x3, 0x63],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x505050,
        't': 0x2
      }, {
        'p': [-0x89, 0x73, 0x75],
        's': [0x45, 0x3, 0x63],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x505050,
        't': 0x2
      }, {
        'p': [-0x89, 0x76, 0x75],
        's': [0x47, 0x2, 0x63],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [-0x66, 0x84, 0x75],
        's': [0x6, 0x2, 0x66],
        't': 0x5
      }, {
        'p': [-0x42, 0x76, 0x75],
        's': [0x47, 0x2, 0x63],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [-0x66, 0x68, 0x76],
        's': [0x82, 0x6, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x66, 0x6e, 0x76],
        's': [0x61, 0x5, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [-0x66, 0x73, 0x76],
        's': [0x46, 0x5, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [-0x66, 0x78, 0x76],
        's': [0x2b, 0x5, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [-0x66, 0x7d, 0x76],
        's': [0x11, 0x3, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [-0x7f, 0x42, 0x48],
        's': [0x2, 0x15, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x8b, 0x42, 0x48],
        's': [0x2, 0x15, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x85, 0x55, 0x48],
        's': [0xa, 0x2, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc2, 0x33, 0x4d],
        's': [0x38, 0x31, 0x41],
        'c': 0x877960,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0xb3, 0x69, 0x3b],
        's': [0x27, 0x2, 0x69],
        'l': 0x1,
        'r': [0x0, 0x0, -0.52],
        'c': 0x484848,
        't': 0x2
      }, {
        'p': [-0xb2, 0x6b, 0x3b],
        's': [0x27, 0x2, 0x69],
        'l': 0x1,
        'r': [0x0, 0x0, -0.52],
        't': 0x5
      }, {
        'p': [-0xa7, 0x5d, 0x3c],
        's': [0x4, 0x4, 0x16],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x4c, 0x33, -0x8d],
        's': [0x54, 0x3e, 0x8e],
        'c': 0x877960,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x3e, -0x81],
        's': [0x52, 0x32, 0x80],
        'c': 0x7d6565,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x30, 0x5c, 0x58],
        's': [0x7, 0x22, 0xc],
        'c': 0x666666,
        't': 0xb
      }, {
        'p': [0x23, 0x42, -0xd3],
        's': [0x4, 0x30, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x75, 0x42, -0xd3],
        's': [0x4, 0x30, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x23, 0x42, -0x47],
        's': [0x4, 0x30, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x23, 0x42, -0xa5],
        's': [0x5, 0x45, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x23, 0x42, -0x75],
        's': [0x5, 0x45, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x4c, 0x42, -0xd3],
        's': [0x4, 0x30, 0x5],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xc5, 0x4d, -0x3e],
        's': [0x3a, 0x4, 0x4a],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x4c, 0x57, -0xd3],
        's': [0x4e, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x4c, 0x6e, -0xd3],
        's': [0x4e, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x23, 0x6e, -0x8d],
        's': [0x4, 0x4, 0x88],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x23, 0x57, -0x8d],
        's': [0x4, 0x4, 0x88],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x4c, 0x57, -0x47],
        's': [0x4e, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x4c, 0x6e, -0x47],
        's': [0x4e, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x4c, 0x8a, -0x8d],
        's': [0x66, 0x6, 0x6],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x4c, 0x7e, -0xb3],
        's': [0x5c, 0x3, 0x51],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x464545,
        't': 0x2
      }, {
        'p': [0x4c, 0x7e, -0x67],
        's': [0x5c, 0x3, 0x51],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x464545,
        't': 0x2
      }, {
        'p': [0x4c, 0x81, -0x66],
        's': [0x5c, 0x2, 0x51],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x4c, 0x90, -0x8d],
        's': [0x66, 0x2, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x4c, 0x72, -0x8d],
        's': [0x54, 0x14, 0x2f],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x4c, 0x86, -0x8d],
        's': [0x54, 0x5, 0x21],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x4c, 0x81, -0xb4],
        's': [0x5c, 0x2, 0x51],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0xdd, 0x86, -0xd4],
        's': [0x48, 0x3, 0x64],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [0x75, 0x6e, -0x8d],
        's': [0x4, 0x4, 0x88],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0xc6, 0x42, -0xc0],
        's': [0x4, 0x2f, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xc6, 0x42, -0x42],
        's': [0x4, 0x2f, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9f, 0x54, -0x42],
        's': [0x4, 0x33, 0x5],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xc6, 0x42, -0x81],
        's': [0x5, 0x2f, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x42, -0x9e],
        's': [0x55, 0x11, 0x4a],
        'c': 0x6e665e,
        't': 0xb
      }, {
        'p': [0x75, 0x57, -0xbc],
        's': [0x4, 0x4, 0x2a],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x9f, 0x86, -0x81],
        's': [0x5, 0x5, 0x8c],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xb5, 0x7c, -0x81],
        's': [0x32, 0x2, 0x87],
        'l': 0x1,
        'r': [0x0, 0x0, -0.52],
        'c': 0x696969,
        't': 0x2
      }, {
        'p': [0x9f, 0x6d, -0x42],
        's': [0x4a, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9f, 0x53, -0xc0],
        's': [0x4, 0x33, 0x5],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9f, 0x6d, -0xc0],
        's': [0x4a, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x78, 0x42, -0xc0],
        's': [0x4, 0x2f, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x88, 0x7e, -0x81],
        's': [0x33, 0x2, 0x87],
        'l': 0x1,
        'r': [0x0, 0x0, 0.52],
        't': 0x5
      }, {
        'p': [0x88, 0x7c, -0x81],
        's': [0x30, 0x2, 0x87],
        'l': 0x1,
        'r': [0x0, 0x0, 0.52],
        'c': 0x696969,
        't': 0x2
      }, {
        'p': [0xb6, 0x7e, -0x81],
        's': [0x33, 0x2, 0x87],
        'l': 0x1,
        'r': [0x0, 0x0, -0.52],
        't': 0x5
      }, {
        'p': [0x9f, 0x8b, -0x81],
        's': [0x5, 0x2, 0x8c],
        't': 0x5
      }, {
        'p': [0xc6, 0x6d, -0x81],
        's': [0x4, 0x4, 0x7a],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x70, -0x81],
        's': [0x52, 0x5, 0x80],
        'l': 0x1,
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x9e, 0x75, -0x81],
        's': [0x45, 0x4, 0x80],
        'l': 0x1,
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x9e, 0x79, -0x81],
        's': [0x37, 0x4, 0x80],
        'l': 0x1,
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x9e, 0x7d, -0x81],
        's': [0x28, 0x4, 0x80],
        'l': 0x1,
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x9e, 0x81, -0x81],
        's': [0x1a, 0x4, 0x80],
        'l': 0x1,
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x9e, 0x85, -0x81],
        's': [0xd, 0x4, 0x80],
        'l': 0x1,
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x22, 0x3f, -0x87],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x22, 0x3f, -0x93],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x22, 0x53, -0x8d],
        's': [0x2, 0x2, 0xa],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x66, 0x40, -0xd4],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x60, 0x54, -0xd4],
        's': [0xa, 0x2, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x5a, 0x40, -0xd4],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xb7, 0x76, -0xd4],
        's': [0x21, 0x66, 0x21],
        'c': 0xd2c2b8,
        't': 0xb
      }, {
        'p': [0xb7, 0xdb, -0xd4],
        's': [0x26, 0x7, 0x26],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0x100, -0xd4],
        's': [0x3, 0x3, 0x25],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0xe3, -0xe7],
        's': [0x26, 0x27, 0x3],
        'l': 0x1,
        'r': [0.52, 0x0, 0x0],
        'c': 0x696969,
        't': 0x2
      }, {
        'p': [0xb7, 0xe3, -0xc0],
        's': [0x26, 0x27, 0x3],
        'l': 0x1,
        'r': [-0.52, 0x0, 0x0],
        'c': 0x696969,
        't': 0x2
      }, {
        'p': [0xcb, 0xe3, -0xd4],
        's': [0x3, 0x27, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, 0.52],
        'c': 0x696969,
        't': 0x2
      }, {
        'p': [0xa3, 0xe3, -0xd4],
        's': [0x3, 0x27, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, -0.52],
        'c': 0x696969,
        't': 0x2
      }, {
        'p': [0xb7, 0xe3, -0xd4],
        's': [0x25, 0xb, 0x1d],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0xee, -0xd4],
        's': [0x25, 0x6, 0x17],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0xf4, -0xd4],
        's': [0x25, 0x6, 0x10],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0xfa, -0xd4],
        's': [0x25, 0x6, 0x9],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0x100, -0xd4],
        's': [0x25, 0x5, 0x3],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0xe3, -0xd4],
        's': [0x1f, 0xb, 0x25],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0xee, -0xd4],
        's': [0x18, 0x6, 0x25],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0xf4, -0xd4],
        's': [0x11, 0x6, 0x25],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0xfa, -0xd4],
        's': [0xa, 0x6, 0x25],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb7, 0x76, -0xd4],
        's': [0x24, 0x66, 0xa],
        'c': 0x8e8b89,
        't': 0x2
      }, {
        'p': [0xb7, 0x76, -0xd4],
        's': [0xb, 0x66, 0x24],
        'c': 0x8e8b89,
        't': 0x2
      }, {
        'p': [0xb7, 0x103, -0xd4],
        's': [0x3, 0x3, 0x29],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xb7, 0x103, -0xd4],
        's': [0x28, 0x3, 0x3],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0xa1, 0xe4, -0xd4],
        's': [0x2, 0x27, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, -0.52],
        't': 0x5
      }, {
        'p': [0xcd, 0xe4, -0xd4],
        's': [0x2, 0x27, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, 0.52],
        't': 0x5
      }, {
        'p': [0xb7, 0xe4, -0xe9],
        's': [0x26, 0x27, 0x2],
        'l': 0x1,
        'r': [0.52, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0xb7, 0xe4, -0xbe],
        's': [0x26, 0x27, 0x2],
        'l': 0x1,
        'r': [-0.52, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0xb7, 0x106, -0xd4],
        's': [0x3, 0x2, 0x29],
        't': 0x5
      }, {
        'p': [0xb7, 0x106, -0xd4],
        's': [0x28, 0x2, 0x3],
        't': 0x5
      }, {
        'p': [0xb7, 0xa2, -0xd4],
        's': [0x2a, 0x7, 0x2a],
        'c': 0x7d7068,
        'bo': 0x1
      }, {
        'p': [0xb7, 0xa9, -0xd4],
        's': [0x2a, 0x2, 0x2a],
        't': 0x5
      }, {
        'p': [0xb7, 0x41, -0xd4],
        's': [0x28, 0x45, 0x28],
        'c': 0x7d7068,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x41, -0x15b],
        's': [0x9, 0x44, 0xa],
        'c': 0x5c514a,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x41, -0xed],
        's': [0x9, 0x43, 0xa],
        'c': 0x615751,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x78, -0x149],
        's': [0x9, 0x5, 0x1a],
        'c': 0x7d7068,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xc7, 0x73, -0xec],
        's': [0x27, 0x9, 0xc],
        'c': 0x645750,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xef, 0x78, -0x15b],
        's': [0x77, 0x9, 0xa],
        'c': 0x736760,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x12f, 0x42, -0x130],
        's': [0x6, 0x2c, 0x50],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x12f, 0x42, -0xf5],
        's': [0x6, 0x28, 0x6],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x11f, 0x41, -0x124],
        's': [0x1d, 0xa, 0x31],
        'c': 0x898989,
        't': 0x2
      }, {
        'p': [0x10f, 0x41, -0x124],
        's': [0x3, 0x8, 0x18],
        'c': 0x898989,
        't': 0x2
      }, {
        'p': [0x109, 0x41, -0x124],
        's': [0x3, 0x4, 0x18],
        'c': 0x898989,
        't': 0x2
      }, {
        'p': [0x10c, 0x41, -0x124],
        's': [0x3, 0x6, 0x18],
        'c': 0x898989,
        't': 0x2
      }, {
        'p': [0x111, 0x41, -0x13c],
        's': [0x3, 0xb, 0x3],
        'l': 0x1,
        'c': 0x6b6b6b,
        't': 0x2
      }, {
        'p': [0x111, 0x41, -0x10c],
        's': [0x3, 0xb, 0x3],
        'l': 0x1,
        'c': 0x6b6b6b,
        't': 0x2
      }, {
        'p': [0xea, 0x46, -0x104],
        's': [0x7, 0x1, 0x19],
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xea, 0x43, -0x111],
        's': [0x7, 0x6, 0x1],
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xea, 0x43, -0xf7],
        's': [0x7, 0x6, 0x1],
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xef, 0x46, -0x144],
        's': [0x7, 0x1, 0x19],
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xcf, 0x47, -0x144],
        's': [0x1, 0x5, 0x19],
        'pe': 0x1,
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xe7, 0x47, -0x104],
        's': [0x1, 0x5, 0x19],
        'pe': 0x1,
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xef, 0x43, -0x137],
        's': [0x7, 0x6, 0x1],
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xef, 0x43, -0x151],
        's': [0x7, 0x6, 0x1],
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xd2, 0x46, -0x144],
        's': [0x7, 0x1, 0x19],
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xd2, 0x43, -0x137],
        's': [0x7, 0x6, 0x1],
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xd2, 0x43, -0x151],
        's': [0x7, 0x6, 0x1],
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xec, 0x47, -0x144],
        's': [0x1, 0x5, 0x19],
        'pe': 0x1,
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xc3, 0x42, -0xec],
        's': [0x22, 0x34, 0x9],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x12f, 0x41, -0x15b],
        's': [0x9, 0x45, 0xa],
        'c': 0x5a524e,
        't': 0xb
      }, {
        'p': [0x12f, 0x41, -0xec],
        's': [0x9, 0x3f, 0xc],
        'c': 0x5f5149,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x130, 0x42, -0x100],
        's': [0x5, 0x1, 0x13],
        'c': 0x7d7068,
        't': 0xb
      }, {
        'p': [0xdc, 0x42, -0xeb],
        's': [0x13, 0x1, 0xa],
        'c': 0x7d7068,
        't': 0xb
      }, {
        'p': [0xaf, 0x41, -0x131],
        's': [0x7, 0x22, 0x5],
        'c': 0x756961,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x41, -0x117],
        's': [0x7, 0x22, 0x5],
        'c': 0x6e625b,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x63, -0x12e],
        's': [0x7, 0x5, 0xb],
        'c': 0x6e6159,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x42, -0x124],
        's': [0x7, 0x1, 0x15],
        'c': 0x7d7068,
        't': 0xb
      }, {
        'p': [0x142, 0x33, -0x12e],
        's': [0x1e, 0x47, 0x3a],
        'c': 0x6a686e,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x16c, 0x42, -0x112],
        's': [0x4, 0x38, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x150, 0x42, -0x112],
        's': [0x4, 0x41, 0x5],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x134, 0x42, -0x112],
        's': [0x4, 0x38, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x150, 0x5c, -0x112],
        's': [0x34, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x158, 0x40, -0x128],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x150, 0x82, -0x12e],
        's': [0x6, 0x6, 0x44],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x140, 0x7f, -0x12e],
        's': [0x20, 0x2, 0x41],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x595959,
        't': 0x2
      }, {
        'p': [0x150, 0x76, -0x112],
        's': [0x34, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x164, 0x40, -0x128],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x15e, 0x54, -0x128],
        's': [0xa, 0x2, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x150, 0x7a, -0x12e],
        's': [0x3a, 0x3, 0x3a],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x150, 0x7d, -0x12e],
        's': [0x2d, 0x3, 0x3a],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x150, 0x80, -0x12e],
        's': [0x1c, 0x3, 0x3a],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x150, 0x83, -0x12e],
        's': [0xf, 0x3, 0x3a],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x13f, 0x81, -0x12e],
        's': [0x20, 0x2, 0x41],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [0x162, 0x81, -0x12e],
        's': [0x20, 0x2, 0x41],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [0x161, 0x7f, -0x12e],
        's': [0x20, 0x2, 0x41],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x595959,
        't': 0x2
      }, {
        'p': [0x150, 0x88, -0x12e],
        's': [0x6, 0x2, 0x44],
        't': 0x5
      }, {
        'p': [0xb9, 0x54, -0x41],
        's': [0x2, 0x14, 0x2],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xad, 0x54, -0x41],
        's': [0x2, 0x14, 0x2],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xb3, 0x66, -0x41],
        's': [0xa, 0x2, 0x2],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x115, 0x33, -0xbe],
        's': [0x58, 0x3f, 0x56],
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x140, 0x33, -0xe8],
        's': [0x4, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x119, 0x33, -0x6e],
        's': [0x6a, 0x48, 0x50],
        'c': 0x877960,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x14d, 0x42, -0x95],
        's': [0x4, 0x3a, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x140, 0x33, -0x98],
        's': [0x4, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x140, 0x33, -0xc0],
        's': [0x5, 0x4d, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xea, 0x33, -0xc0],
        's': [0x5, 0x4d, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xea, 0x33, -0x98],
        's': [0x4, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xea, 0x33, -0xe8],
        's': [0x4, 0x3f, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xe5, 0x42, -0x95],
        's': [0x4, 0x3a, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x118, 0x42, 0x26],
        's': [0x4, 0x41, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xe5, 0x42, -0x47],
        's': [0x4, 0x3a, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x14d, 0x42, -0x6e],
        's': [0x5, 0x48, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x140, 0x58, -0xc0],
        's': [0x4, 0x4, 0x4c],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x140, 0x6e, -0xc0],
        's': [0x4, 0x4, 0x4c],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xea, 0x58, -0xc0],
        's': [0x4, 0x4, 0x4c],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0xea, 0x6e, -0xc0],
        's': [0x4, 0x4, 0x4c],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x12d, 0x6e, -0xe8],
        's': [0x22, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x12d, 0x58, -0xe8],
        's': [0x22, 0x4, 0x4],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x115, 0x7f, -0xc0],
        's': [0x66, 0x5, 0x5],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x115, 0x77, -0xa6],
        's': [0x61, 0x2, 0x3b],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [0x115, 0x79, -0xd6],
        's': [0x61, 0x2, 0x2f],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [0x115, 0x72, -0xbe],
        's': [0x58, 0x3, 0x56],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x115, 0x75, -0xbe],
        's': [0x58, 0x3, 0x44],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x115, 0x78, -0xbe],
        's': [0x58, 0x3, 0x32],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x115, 0x7b, -0xbe],
        's': [0x58, 0x3, 0x1e],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x115, 0x7e, -0xbe],
        's': [0x58, 0x2, 0x10],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x115, 0x79, -0xa5],
        's': [0x61, 0x2, 0x3b],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x115, 0x7b, -0xd7],
        's': [0x61, 0x2, 0x2f],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x115, 0x84, -0xc0],
        's': [0x66, 0x2, 0x5],
        't': 0x5
      }, {
        'p': [0x14d, 0x5d, -0x6e],
        's': [0x4, 0x4, 0x4a],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x14d, 0x78, -0x6e],
        's': [0x4, 0x4, 0x4a],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xb, 0x89, -0x1bc],
        's': [0x64, 0x5, 0x5],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0xb, 0x8e, -0x1bc],
        's': [0x64, 0x2, 0x5],
        't': 0x5
      }, {
        'p': [0xa, 0x80, -0x1a0],
        's': [0x61, 0x2, 0x3d],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [0xa, 0x82, -0x1a0],
        's': [0x61, 0x2, 0x3e],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x2b, 0x45, -0x190],
        's': [0xd, 0x46, 0x7],
        'c': 0x616161,
        't': 0xb
      }, {
        'p': [0xe5, 0x42, -0x6e],
        's': [0x5, 0x48, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xe5, 0x5d, -0x6e],
        's': [0x4, 0x4, 0x4a],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xe5, 0x78, -0x6e],
        's': [0x4, 0x4, 0x4a],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x119, 0x78, -0x95],
        's': [0x64, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x119, 0x78, -0x47],
        's': [0x64, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x119, 0x5d, -0x95],
        's': [0x64, 0x4, 0x4],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x119, 0x89, -0x6e],
        's': [0x78, 0x5, 0x5],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x119, 0x83, -0x84],
        's': [0x71, 0x2, 0x32],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x646464,
        't': 0x2
      }, {
        'p': [0x119, 0x85, -0x85],
        's': [0x71, 0x2, 0x32],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x119, 0x83, -0x59],
        's': [0x71, 0x2, 0x32],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x646464,
        't': 0x2
      }, {
        'p': [0x119, 0x85, -0x58],
        's': [0x71, 0x2, 0x32],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x119, 0x8e, -0x6e],
        's': [0x78, 0x2, 0x5],
        't': 0x5
      }, {
        'p': [0x119, 0x7c, -0x6e],
        's': [0x6a, 0x4, 0x50],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x119, 0x80, -0x6e],
        's': [0x6a, 0x3, 0x3c],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x119, 0x83, -0x6e],
        's': [0x6a, 0x4, 0x2b],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x119, 0x87, -0x6e],
        's': [0x6a, 0x3, 0x15],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x107, 0x33, -0x2b],
        's': [0x3c, 0x3e, 0x48],
        'c': 0x6a686e,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x107, 0x7d, -0x28],
        's': [0x47, 0x2, 0x46],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x696969,
        't': 0x2
      }, {
        'p': [0x106, 0x7f, -0x28],
        's': [0x47, 0x2, 0x46],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [0x119, 0x5d, -0x47],
        's': [0x64, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x124, 0x42, -0x44],
        's': [0x4, 0x47, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x124, 0x42, -0x8],
        's': [0x4, 0x47, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xea, 0x42, -0x8],
        's': [0x4, 0x2f, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xea, 0x42, -0x44],
        's': [0x4, 0x2f, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x107, 0x6d, -0x8],
        's': [0x36, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xea, 0x6d, -0x26],
        's': [0x4, 0x4, 0x38],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x124, 0x6d, -0x26],
        's': [0x4, 0x4, 0x38],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x106, 0x71, -0x2b],
        's': [0x3b, 0x4, 0x48],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x10b, 0x75, -0x2b],
        's': [0x32, 0x4, 0x48],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x110, 0x79, -0x2b],
        's': [0x26, 0x4, 0x48],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x115, 0x7d, -0x26],
        's': [0x1c, 0x4, 0x3e],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x11b, 0x81, -0x26],
        's': [0x11, 0x4, 0x3e],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x120, 0x85, -0x26],
        's': [0x6, 0x3, 0x3e],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x124, 0x71, -0x25],
        's': [0x2, 0x17, 0x3d],
        'c': 0x6a686e,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0xe9, 0x54, -0x20],
        's': [0x2, 0x14, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xe9, 0x54, -0x2c],
        's': [0x2, 0x14, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xe9, 0x66, -0x26],
        's': [0x2, 0x2, 0xa],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x141, 0x42, -0xa6],
        's': [0x2, 0x14, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x141, 0x42, -0xb2],
        's': [0x2, 0x14, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x141, 0x54, -0xac],
        's': [0x2, 0x2, 0xa],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x19b, 0x42, -0xd4],
        's': [0x5a, 0x26, 0x8a],
        'c': 0x7d5d5d,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x19d, 0x42, -0x6],
        's': [0x5a, 0x32, 0x58],
        'c': 0x7d5d5d,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0xd0, 0x42, 0x5a],
        's': [0x8c, 0x50, 0x58],
        'c': 0x7d5d5d,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x14, 0x42, 0x60],
        's': [0x74, 0x35, 0x50],
        'c': 0x8e8d7a,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x1a9, 0x33, -0x60],
        's': [0x5a, 0x47, 0x5c],
        'c': 0x6a686e,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x14e, 0x33, 0x50],
        's': [0x6e, 0x4f, 0x56],
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [-0x25, 0x33, 0x39],
        's': [0x4, 0x45, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x14, 0x33, 0x39],
        's': [0x4, 0x59, 0x5],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x14, 0x5b, 0x39],
        's': [0x6e, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x14, 0x8b, 0x60],
        's': [0x5, 0x5, 0x5c],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xb, 0x82, 0x60],
        's': [0x41, 0x2, 0x58],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x484848,
        't': 0x2
      }, {
        'p': [0x33, 0x82, 0x60],
        's': [0x41, 0x2, 0x58],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x484848,
        't': 0x2
      }, {
        'p': [0x14, 0x90, 0x60],
        's': [0x5, 0x2, 0x5c],
        't': 0x5
      }, {
        'p': [-0xc, 0x84, 0x60],
        's': [0x41, 0x2, 0x58],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [0x34, 0x84, 0x60],
        's': [0x41, 0x2, 0x58],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [0x14, 0x74, 0x39],
        's': [0x6e, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x25, 0x5b, 0x60],
        's': [0x4, 0x4, 0x4a],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [-0x25, 0x74, 0x60],
        's': [0x4, 0x4, 0x4a],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x14, 0x77, 0x60],
        's': [0x71, 0x6, 0x50],
        'c': 0x8e8d7a,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x14, 0x7d, 0x60],
        's': [0x5b, 0x4, 0x50],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [0x14, 0x81, 0x60],
        's': [0x45, 0x4, 0x50],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [0x14, 0x85, 0x60],
        's': [0x2e, 0x4, 0x50],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [0x14, 0x89, 0x60],
        's': [0x19, 0x4, 0x50],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [-0xf, 0x42, 0x39],
        's': [0x2, 0x15, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x3, 0x42, 0x39],
        's': [0x2, 0x15, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x9, 0x55, 0x39],
        's': [0xa, 0x2, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x16f, 0x42, -0x90],
        's': [0x4, 0x26, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x16f, 0x42, -0xd4],
        's': [0x5, 0x3e, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x16f, 0x64, -0xd4],
        's': [0x4, 0x4, 0x84],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x179, 0x64, -0x90],
        's': [0x10, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x19c, 0x7f, -0xd4],
        's': [0x6a, 0x5, 0x5],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x19c, 0x74, -0xf8],
        's': [0x62, 0x2, 0x4b],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x464646,
        't': 0x2
      }, {
        'p': [0x19c, 0x76, -0xf9],
        's': [0x62, 0x2, 0x4b],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x19c, 0x76, -0xae],
        's': [0x62, 0x2, 0x4d],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x19c, 0x74, -0xaf],
        's': [0x62, 0x2, 0x4d],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x464646,
        't': 0x2
      }, {
        'p': [0x19c, 0x84, -0xd4],
        's': [0x6a, 0x2, 0x5],
        't': 0x5
      }, {
        'p': [0x19b, 0x68, -0xd4],
        's': [0x5a, 0x4, 0x8a],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19b, 0x6c, -0xd4],
        's': [0x5a, 0x4, 0x75],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19b, 0x70, -0xd4],
        's': [0x5a, 0x4, 0x5e],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19b, 0x74, -0xd4],
        's': [0x5a, 0x4, 0x49],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19b, 0x7c, -0xd4],
        's': [0x5a, 0x4, 0x1d],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19b, 0x78, -0xd4],
        's': [0x5a, 0x4, 0x33],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19b, 0x80, -0xd4],
        's': [0x5a, 0x1, 0xb],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x16e, 0x42, -0xed],
        's': [0x2, 0x14, 0x2],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x16e, 0x42, -0xf9],
        's': [0x2, 0x14, 0x2],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x16e, 0x54, -0xf3],
        's': [0x2, 0x2, 0xa],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x17d, 0x42, -0x8d],
        's': [0x4, 0x39, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x17d, 0x42, -0x33],
        's': [0x4, 0x39, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x17d, 0x42, -0x60],
        's': [0x5, 0x49, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x17d, 0x77, -0x60],
        's': [0x4, 0x4, 0x56],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x1ab, 0x77, -0x60],
        's': [0x58, 0x4, 0x5e],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x1ab, 0x8a, -0x60],
        's': [0x6c, 0x6, 0x6],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x1ab, 0x83, -0x79],
        's': [0x66, 0x2, 0x34],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x5c5c5c,
        't': 0x2
      }, {
        'p': [0x1ab, 0x83, -0x46],
        's': [0x66, 0x2, 0x34],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x5c5c5c,
        't': 0x2
      }, {
        'p': [0x1ab, 0x85, -0x45],
        's': [0x66, 0x2, 0x34],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x1ab, 0x85, -0x7a],
        's': [0x66, 0x2, 0x34],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x1ab, 0x90, -0x60],
        's': [0x6c, 0x2, 0x6],
        't': 0x5
      }, {
        'p': [0x1a9, 0x7b, -0x60],
        's': [0x5a, 0x5, 0x5b],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x1a9, 0x80, -0x60],
        's': [0x5a, 0x4, 0x45],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x1a9, 0x84, -0x60],
        's': [0x5a, 0x4, 0x2f],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x1a9, 0x88, -0x60],
        's': [0x5a, 0x4, 0x19],
        'c': 0x6a686e,
        't': 0xa
      }, {
        'p': [0x171, 0x42, -0x31],
        's': [0x4, 0x33, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x171, 0x42, 0x23],
        's': [0x4, 0x33, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x171, 0x42, -0x7],
        's': [0x5, 0x41, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x171, 0x71, -0x7],
        's': [0x4, 0x4, 0x50],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x178, 0x71, -0x31],
        's': [0xa, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x14d, 0x42, -0x47],
        's': [0x4, 0x3a, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x184, 0x42, 0x26],
        's': [0x4, 0x41, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x14e, 0x42, 0x26],
        's': [0x4, 0x53, 0x5],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x14e, 0x5f, 0x26],
        's': [0x68, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x14e, 0x7f, 0x26],
        's': [0x68, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x118, 0x7f, 0x31],
        's': [0x4, 0x4, 0x12],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x118, 0x5f, 0x31],
        's': [0x4, 0x4, 0x12],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x115, 0x42, 0x2f],
        's': [0x4, 0x51, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x8b, 0x42, 0x2f],
        's': [0x4, 0x51, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x6b, 0x42, -0xc],
        's': [0x5c, 0x13, 0x91],
        'c': 0x5f5f5f,
        't': 0xb
      }, {
        'p': [0x40, 0x55, 0x1c],
        's': [0x2, 0x26, 0x3b],
        'pe': 0x1,
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x40, 0x55, -0x2b],
        's': [0x2, 0x26, 0x35],
        'pe': 0x1,
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x96, 0x55, -0x1b],
        's': [0x2, 0x26, 0x4d],
        'pe': 0x1,
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x96, 0x55, 0x22],
        's': [0x2, 0x26, 0x13],
        'pe': 0x1,
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0xd0, 0x42, 0x2f],
        's': [0x4, 0x68, 0x5],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xd0, 0x70, 0x2f],
        's': [0x86, 0x4, 0x4],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0xd0, 0x8f, 0x2f],
        's': [0x86, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xfc, 0x42, 0x51],
        's': [0x55, 0x11, 0x49],
        'c': 0x5f5f5f
      }, {
        'p': [0x115, 0x8f, 0x57],
        's': [0x4, 0x4, 0x4c],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x19d, 0x82, -0x7],
        's': [0x6b, 0x5, 0x5],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x19d, 0x7c, -0x1d],
        's': [0x63, 0x2, 0x33],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x19d, 0x7c, 0x10],
        's': [0x63, 0x2, 0x36],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x4d4d4d,
        't': 0x2
      }, {
        'p': [0x19d, 0x7e, 0x11],
        's': [0x63, 0x2, 0x36],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x19d, 0x7e, -0x1e],
        's': [0x63, 0x2, 0x33],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x19d, 0x87, -0x7],
        's': [0x6b, 0x2, 0x5],
        't': 0x5
      }, {
        'p': [0x19d, 0x75, -0x6],
        's': [0x5a, 0x3, 0x58],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19d, 0x78, -0x6],
        's': [0x5a, 0x3, 0x47],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19d, 0x7b, -0x6],
        's': [0x5a, 0x3, 0x3a],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19d, 0x7e, -0x6],
        's': [0x5a, 0x3, 0x25],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x19d, 0x81, -0x6],
        's': [0x5a, 0x3, 0x16],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0x14e, 0x95, 0x50],
        's': [0x5, 0x5, 0x6a],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x16c, 0x8c, 0x50],
        's': [0x3d, 0x2, 0x61],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x6b6b6b,
        't': 0x2
      }, {
        'p': [0x12f, 0x8c, 0x50],
        's': [0x3d, 0x2, 0x61],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x6b6b6b,
        't': 0x2
      }, {
        'p': [0x14e, 0x9a, 0x50],
        's': [0x5, 0x2, 0x6a],
        't': 0x5
      }, {
        'p': [0x130, 0x8f, 0x50],
        's': [0x3f, 0x2, 0x61],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [0x16c, 0x8e, 0x50],
        's': [0x3f, 0x2, 0x61],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [0x14e, 0x82, 0x50],
        's': [0x6e, 0x5, 0x56],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x14e, 0x87, 0x50],
        's': [0x59, 0x4, 0x56],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x14e, 0x8b, 0x50],
        's': [0x43, 0x4, 0x56],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x14e, 0x8f, 0x50],
        's': [0x2d, 0x4, 0x56],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x14e, 0x93, 0x50],
        's': [0x17, 0x4, 0x56],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0xd0, 0xa9, 0x5a],
        's': [0x6, 0x6, 0x68],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xf6, 0x9e, 0x5a],
        's': [0x51, 0x2, 0x61],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x464646,
        't': 0x2
      }, {
        'p': [0xaa, 0x9f, 0x5a],
        's': [0x51, 0x2, 0x61],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x464646,
        't': 0x2
      }, {
        'p': [0xa9, 0xa1, 0x5a],
        's': [0x51, 0x2, 0x61],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [0xf7, 0xa0, 0x5a],
        's': [0x51, 0x2, 0x61],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [0xd0, 0xaf, 0x5a],
        's': [0x6, 0x2, 0x68],
        't': 0x5
      }, {
        'p': [0xd0, 0x93, 0x5a],
        's': [0x8c, 0x3, 0x58],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0xd0, 0x96, 0x5a],
        's': [0x7c, 0x4, 0x58],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0xd0, 0x9a, 0x5a],
        's': [0x66, 0x4, 0x58],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0xd0, 0x9e, 0x5a],
        's': [0x51, 0x4, 0x58],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0xd0, 0xa2, 0x5a],
        's': [0x3a, 0x4, 0x58],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0xd0, 0xa6, 0x5a],
        's': [0x24, 0x4, 0x58],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [0xd0, 0xaa, 0x5a],
        's': [0xf, 0x3, 0x58],
        'c': 0x7d5d5d,
        't': 0xa
      }, {
        'p': [-0x48, 0x57, -0x2d],
        's': [0x4, 0x4, 0x30],
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x65, 0x6e, 0x5],
        's': [0x3e, 0x4, 0x2c],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x170, 0x54, -0x16],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x170, 0x54, -0x22],
        's': [0x2, 0x16, 0x2],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x170, 0x68, -0x1c],
        's': [0x2, 0x2, 0xa],
        'c': 0xafafaf,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xb3, 0x54, 0x2f],
        's': [0x2, 0x15, 0x4],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xa7, 0x54, 0x2f],
        's': [0x2, 0x15, 0x4],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xad, 0x67, 0x2f],
        's': [0xa, 0x2, 0x4],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x6b, 0x92, -0x9],
        's': [0x65, 0x5, 0x5],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x6b, 0x86, 0x1a],
        's': [0x5d, 0x2, 0x4a],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [0x96, 0x42, -0x40],
        's': [0x4, 0x3a, 0x4],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x97, 0x42, -0x9],
        's': [0x3, 0x51, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x96, 0x42, 0x2c],
        's': [0x4, 0x3a, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x6b, 0x55, 0x32],
        's': [0x54, 0x26, 0x13],
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x6b, 0x55, -0x2c],
        's': [0x54, 0x26, 0x33],
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x40, 0x42, -0x2],
        's': [0x5, 0x36, 0x2],
        'pe': 0x1,
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x40, 0x42, -0x10],
        's': [0x5, 0x36, 0x2],
        'pe': 0x1,
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x40, 0x69, -0x9],
        's': [0x5, 0x2, 0xc],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x96, 0x42, 0xb],
        's': [0x4, 0x36, 0x2],
        'pe': 0x1,
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x96, 0x42, 0x19],
        's': [0x4, 0x36, 0x2],
        'pe': 0x1,
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x96, 0x69, 0x12],
        's': [0x4, 0x2, 0xc],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x96, 0x6a, 0x12],
        's': [0x2, 0xf, 0xd],
        'pe': 0x1,
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x40, 0x6b, -0x9],
        's': [0x2, 0x10, 0xf],
        'pe': 0x1,
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x3f, 0x7b, -0x9],
        's': [0x2, 0x18, 0x4],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x40, 0x55, -0x44],
        's': [0x5, 0x27, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x40, 0x55, 0x36],
        's': [0x5, 0x27, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x40, 0x78, -0x9],
        's': [0x5, 0x4, 0x72],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x40, 0x78, 0x32],
        's': [0x5, 0x4, 0x4],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x6b, 0x87, -0x29],
        's': [0x5d, 0x2, 0x46],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x4a4a4a,
        't': 0x2
      }, {
        'p': [0x96, 0x78, -0xa],
        's': [0x4, 0x4, 0x68],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x6b, 0x73, 0xa],
        's': [0x55, 0x1, 0x47],
        'c': 0x5f5f5f,
        't': 0x2
      }, {
        'p': [0x6b, 0x7c, -0x9],
        's': [0x58, 0x4, 0x7a],
        'c': 0x5f6e68,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x6b, 0x88, 0x1b],
        's': [0x5d, 0x2, 0x4a],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x6b, 0x97, -0x9],
        's': [0x65, 0x2, 0x5],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x6b, 0x89, -0x2a],
        's': [0x5d, 0x2, 0x46],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0x6b, 0x80, -0x9],
        's': [0x58, 0x4, 0x68],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x6b, 0x84, -0x9],
        's': [0x58, 0x4, 0x52],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x6b, 0x88, -0x9],
        's': [0x58, 0x4, 0x3c],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x6b, 0x8c, -0x9],
        's': [0x58, 0x4, 0x26],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x6b, 0x90, -0x9],
        's': [0x58, 0x3, 0x10],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x32, 0x53, -0x9],
        's': [0x16, 0x2, 0x58],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x29, 0x42, -0x33],
        's': [0x2, 0x14, 0x2],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x29, 0x42, 0x21],
        's': [0x2, 0x14, 0x2],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x5c, 0x42, 0x28],
        's': [0x2, 0x27, 0x2],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x50, 0x42, 0x28],
        's': [0x2, 0x27, 0x2],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x79, 0x42, -0x12],
        's': [0x2, 0x27, 0x2],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x85, 0x42, -0x12],
        's': [0x2, 0x27, 0x2],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x7f, 0x69, -0x12],
        's': [0xe, 0x2, 0x2],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x56, 0x69, 0x28],
        's': [0xe, 0x2, 0x2],
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xa, 0x80, -0x1d7],
        's': [0x61, 0x2, 0x3b],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [0xa, 0x82, -0x1d8],
        's': [0x61, 0x2, 0x3b],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [0xa, 0x33, -0x1bc],
        's': [0x5c, 0x43, 0x6b],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0xa, 0x76, -0x1bc],
        's': [0x5c, 0x2, 0x6b],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0xa, 0x7b, -0x1bc],
        's': [0x5c, 0x5, 0x4b],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0xa, 0x80, -0x1bc],
        's': [0x5c, 0x5, 0x31],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0xa, 0x85, -0x1bc],
        's': [0x5c, 0x5, 0x16],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x37, 0x72, -0x1bc],
        's': [0x4, 0x4, 0x6b],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x47, 0x33, -0x189],
        's': [0x4, 0x3f, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xcf, 0x33, -0x189],
        's': [0x4, 0x40, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x74, 0x33, -0x189],
        's': [0x4, 0x4d, 0x5],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x47, 0x33, -0x1bd],
        's': [0x4, 0x3f, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x47, 0x33, -0x1ef],
        's': [0x4, 0x3e, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x8b, 0x6f, -0x189],
        's': [0x84, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x47, 0x6e, -0x1bc],
        's': [0x4, 0x4, 0x62],
        'l': 0x1,
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x8b, 0x86, -0x1bb],
        's': [0x7, 0x7, 0x79],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x65, 0x79, -0x1bb],
        's': [0x4f, 0x3, 0x71],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x464646,
        't': 0x2
      }, {
        'p': [0x64, 0x7c, -0x1bb],
        's': [0x4f, 0x2, 0x71],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [0x8b, 0x8d, -0x1bb],
        's': [0x7, 0x2, 0x79],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xb2, 0x7c, -0x1bb],
        's': [0x4e, 0x3, 0x71],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [0x8b, 0x42, -0x1bc],
        's': [0x88, 0x31, 0x68],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [0x8b, 0x73, -0x1bc],
        's': [0x6b, 0x5, 0x68],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [0x8b, 0x78, -0x1bc],
        's': [0x53, 0x5, 0x68],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [0x8b, 0x7d, -0x1bc],
        's': [0x37, 0x5, 0x68],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [0x8b, 0x82, -0x1bc],
        's': [0x1c, 0x4, 0x68],
        'c': 0x8e8d7a,
        't': 0xa
      }, {
        'p': [0xa1, 0x33, -0x189],
        's': [0x4, 0x4d, 0x5],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xd6, 0x71, -0x181],
        's': [0x30, 0x2, 0x46],
        'l': 0x1,
        'r': [0x0, 0x0, 0.52],
        'c': 0x696969,
        't': 0x2
      }, {
        'p': [0xd5, 0x73, -0x181],
        's': [0x30, 0x2, 0x46],
        'l': 0x1,
        'r': [0x0, 0x0, 0.52],
        't': 0x5
      }, {
        'p': [0xe9, 0x7d, -0x182],
        's': [0x5, 0x5, 0x47],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xe9, 0x82, -0x182],
        's': [0x5, 0x2, 0x47],
        't': 0x5
      }, {
        'p': [0x37, 0x41, 0xd],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x37, 0x41, -0x40],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x41, 0x41, -0x40],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x41, 0x41, -0x34],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x48, 0x6e, -0x2d],
        's': [0x4, 0x4, 0x30],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x82, 0x57, -0x2c],
        's': [0x4, 0x4, 0x2e],
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [-0x82, 0x6e, -0x2c],
        's': [0x4, 0x4, 0x2e],
        'c': 0x727272,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x1c, 0x41, -0x5f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x58, 0x41, 0x24],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x1c, 0x41, 0x32],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x1c, 0x4d, 0x32],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x92, 0x55, 0x23],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x3c, 0x55, -0x24],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x3c, 0x55, -0x1c],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x11, 0x41, -0xb2],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x38, 0x41, -0x80],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xa4, 0x34, -0x9e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x98, 0x34, -0x9e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x13b, 0x34, -0x56],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x13b, 0x34, -0x4a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x13b, 0x34, 0x12],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x13b, 0x34, 0x6],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x13b, 0x40, 0x12],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xe7, 0x34, -0x5d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x119, 0x34, -0x31],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x10d, 0x34, -0x31],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x80, 0x34, -0x10a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x74, 0x34, -0x130],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x74, 0x40, -0x130],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xa2, 0x41, -0x1c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x13, 0x41, -0x1c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xd8, 0x53, 0x28],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x9d, 0x53, -0x38],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x12c, 0x53, -0x32],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x12c, 0x53, -0x3e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x169, 0x53, 0x1f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x168, 0x41, -0xc6],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x2d, 0x41, -0x42],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x37, 0x41, -0x42],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x44, 0x41, 0x16],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x44, 0x41, 0xe],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xa3, 0x41, 0x36],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xa5, 0x41, -0x26],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x10d, 0x34, -0x3b],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x13d, 0x34, -0x40],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x13d, 0x34, -0x38],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x13d, 0x34, -0xad],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x131, 0x34, 0x14],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xb8, 0x34, -0xcc],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xb8, 0x34, -0xc4],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x4b, 0x47, -0x137],
        's': [0x1f, 0x3, 0x7],
        'c': 0x7d7068
      }, {
        'p': [0x5e, 0x42, -0x124],
        's': [0x6, 0x7, 0x2c],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0x38, 0x42, -0x124],
        's': [0x6, 0x7, 0x2c],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0x4b, 0x42, -0x111],
        's': [0x20, 0x7, 0x6],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0x4b, 0x42, -0x137],
        's': [0x20, 0x7, 0x6],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0x4b, 0x47, -0x111],
        's': [0x1f, 0x3, 0x7],
        'c': 0x7d7068
      }, {
        'p': [0x38, 0x47, -0x124],
        's': [0x7, 0x3, 0x2d],
        'c': 0x7d7068,
        't': 0xb
      }, {
        'p': [0x5e, 0x47, -0x124],
        's': [0x7, 0x3, 0x2d],
        'c': 0x7d7068
      }, {
        'p': [0x4b, 0x42, -0x124],
        's': [0x20, 0x1, 0x21],
        'c': 0xa7988e
      }, {
        'p': [0x4b, 0x42, -0x124],
        's': [0x9, 0x17, 0x9],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0x4b, 0x4d, -0x124],
        's': [0x14, 0x3, 0x14],
        'c': 0x7d7068,
        't': 0xb
      }, {
        'p': [0x4b, 0x56, -0x124],
        's': [0xe, 0x3, 0xe],
        'c': 0x7d7068,
        't': 0xb
      }, {
        'p': [0x4b, 0x4a, -0x137],
        's': [0x1f, 0x1, 0x7],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x4b, 0x4a, -0x111],
        's': [0x1f, 0x1, 0x7],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x5e, 0x4a, -0x124],
        's': [0x7, 0x1, 0x2d],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x38, 0x4a, -0x124],
        's': [0x7, 0x1, 0x2d],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x4b, 0x50, -0x124],
        's': [0x14, 0x1, 0x14],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x4b, 0x59, -0x124],
        's': [0xe, 0x1, 0xe],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x4b, 0x43, -0x124],
        's': [0x20, 0x2, 0x21],
        'c': 0x8bd9d4,
        'o': 0.7000000000000001,
        't': 0x5
      }, {
        'p': [0x3f, 0x3e, -0x235],
        's': [0xad, 0x3f, 0x80],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x15f, 0x53, 0x22],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x128, 0x53, -0x19],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x128, 0x53, -0x11],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x177, 0x41, -0x8b],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x145, 0x41, -0xca],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x145, 0x41, -0xd2],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xce, 0x41, -0xe3],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xce, 0x41, -0xdc],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xde, 0x34, -0x127],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x11, 0x41, -0xbe],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x9d, 0x41, -0xc9],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x9d, 0x41, -0xd5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x1, 0x41, -0x16a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xb, 0x41, -0x16a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x17, 0x41, -0x16a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x1, 0x4d, -0x16b],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x4d, 0x41, -0x16a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x59, 0x41, -0x16a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x87, 0x41, -0x16a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x87, 0x4d, -0x16b],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x68, 0x41, -0x12d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x41, 0x41, -0xda],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xb, 0x42, -0x16d],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x91, 0x41, -0x16d],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x98, 0x41, -0x16d],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x66, 0x41, -0x123],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x93, 0x41, -0xc6],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x37, 0x41, -0xd7],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x43, 0x41, -0x9],
        's': [0x1, 0x12, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [-0x1f, 0x41, -0x1c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x1f, 0x41, -0x10],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x27, 0x42, -0x23],
        's': [0x1, 0x13, 0x5],
        'pe': 0x1,
        'v': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x27, 0x42, -0x23],
        's': [0x1, 0x13, 0x3],
        'i': 0x3,
        't': 0x2,
        'd': 0x2
      }, {
        'p': [-0xa1, 0x57, -0x135],
        's': [0x4, 0x8, 0xa],
        'c': 0x898989,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x17d, 0x5b, -0x60],
        's': [0x4, 0x4, 0x56],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xca, 0x52, -0xb],
        's': [0x6e, 0x2, 0xa5],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xb1, 0x79, -0x1bb],
        's': [0x4f, 0x3, 0x71],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x464646,
        't': 0x2
      }, {
        'p': [0x17f, 0x41, 0x1a],
        's': [0xc, 0x46, 0x6],
        'c': 0xac5353
      }, {
        'p': [0x3f, 0x79, -0x1f6],
        's': [0xae, 0x4, 0x4],
        'c': 0x616161,
        't': 0x2
      }, {
        'p': [-0x16, 0x60, -0x1f6],
        's': [0x4, 0x22, 0x4],
        'c': 0x616161,
        't': 0x2
      }, {
        'p': [0x3f, 0x9c, -0x238],
        's': [0x6, 0x6, 0x91],
        'c': 0x616161,
        't': 0x2
      }, {
        'p': [0x12, 0x8c, -0x238],
        's': [0x61, 0x3, 0x8a],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': 0x616161,
        't': 0x2
      }, {
        'p': [0x6c, 0x8c, -0x238],
        's': [0x66, 0x3, 0x8a],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x616161,
        't': 0x2
      }, {
        'p': [0x3f, 0xa2, -0x238],
        's': [0x6, 0x2, 0x91],
        't': 0x5
      }, {
        'p': [0x6d, 0x8f, -0x238],
        's': [0x66, 0x2, 0x8a],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        't': 0x5
      }, {
        'p': [0x11, 0x8f, -0x238],
        's': [0x61, 0x2, 0x8a],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        't': 0x5
      }, {
        'p': [0x5d, 0x60, -0x1f6],
        's': [0x4, 0x32, 0x4],
        'c': 0x616161,
        't': 0x2
      }, {
        'p': [0x3f, 0x7d, -0x235],
        's': [0xad, 0x4, 0x80],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x3f, 0x85, -0x235],
        's': [0x83, 0x4, 0x80],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x3f, 0x81, -0x235],
        's': [0x99, 0x4, 0x80],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x3f, 0x89, -0x235],
        's': [0x6d, 0x4, 0x80],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x3f, 0x8d, -0x235],
        's': [0x56, 0x4, 0x80],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x3f, 0x91, -0x235],
        's': [0x41, 0x4, 0x80],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x3f, 0x95, -0x235],
        's': [0x2b, 0x4, 0x80],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [0x3f, 0x99, -0x235],
        's': [0x16, 0x3, 0x80],
        'c': 0x7d6565,
        't': 0xa
      }, {
        'p': [-0x6c, 0x6b, -0x1bf],
        's': [0x61, 0x2, 0x3b],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': 0x525252,
        't': 0x2
      }, {
        'p': [-0x6c, 0x6c, -0x1be],
        's': [0x61, 0x2, 0x3b],
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        't': 0x5
      }, {
        'p': [-0x6c, 0x74, -0x1db],
        's': [0x64, 0x5, 0x5],
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [-0x6c, 0x79, -0x1db],
        's': [0x64, 0x2, 0x5],
        't': 0x5
      }, {
        'p': [0xa, 0x72, -0x188],
        's': [0x5e, 0x4, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x37, 0x33, -0x188],
        's': [0x4, 0x3f, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [-0x23, 0x33, -0x188],
        's': [0x4, 0x3f, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0xb, 0x33, -0x188],
        's': [0x4, 0x3f, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x1e, 0x60, -0x1f6],
        's': [0x4, 0x34, 0x4],
        'c': 0x616161,
        't': 0x2
      }, {
        'p': [0x3f, 0x6d, -0x1f6],
        's': [0xae, 0x4, 0x4],
        'c': 0x616161,
        't': 0x2
      }, {
        'p': [0xa, 0x78, -0x1bc],
        's': [0x5c, 0x3, 0x66],
        'c': 0x5f6e68,
        't': 0xa
      }, {
        'p': [0x37, 0x33, -0x1bc],
        's': [0x4, 0x56, 0x4],
        'c': 0xafafaf,
        't': 0x2
      }, {
        'p': [0x128, 0x42, -0x124],
        's': [0x9, 0x13, 0x22],
        'c': 0x786b62,
        't': 0xb
      }, {
        'p': [0x12a, 0x65, -0x124],
        's': [0x3, 0x9, 0xc],
        'c': 0x5c5551,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x12a, 0x55, -0x12d],
        's': [0x4, 0x16, 0x6],
        'c': 0x5c5551,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x12a, 0x55, -0x11b],
        's': [0x4, 0x17, 0x6],
        'c': 0x5c5551,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x12c, 0x55, -0x124],
        's': [0x1, 0x16, 0x17],
        'c': 0x554f4c,
        't': 0xb
      }, {
        'p': [0x125, 0x55, -0x129],
        's': [0x1, 0x3, 0x1],
        'l': 0x1,
        'c': 0x988e62,
        't': 0x5
      }, {
        'p': [0x126, 0x55, -0x12d],
        's': [0x1, 0x2, 0x1],
        'l': 0x1,
        'r': [0x0, -0.35, 0x0],
        'c': 0x988e62,
        't': 0x5
      }, {
        'p': [0x125, 0x55, -0x132],
        's': [0x1, 0x3, 0x1],
        'l': 0x1,
        'r': [0x0, 0.35, 0x0],
        'c': 0x988e62,
        't': 0x5
      }, {
        'p': [0x126, 0x55, -0x120],
        's': [0x1, 0x2, 0x1],
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': 0x988e62,
        't': 0x5
      }, {
        'p': [0x125, 0x55, -0x11b],
        's': [0x1, 0x2, 0x1],
        'l': 0x1,
        'r': [0x0, 1.05, 0x0],
        'c': 0x988e62,
        't': 0x5
      }, {
        'p': [0x126, 0x55, -0x116],
        's': [0x1, 0x3, 0x1],
        'l': 0x1,
        'r': [0x0, 0.35, 0x0],
        'c': 0x988e62,
        't': 0x5
      }, {
        'p': [0x128, 0x55, -0x124],
        's': [0x1, 0x1, 0x3],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0xc0b896,
        't': 0x5
      }, {
        'p': [0x129, 0x55, -0x124],
        's': [0x3, 0x4, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0xc0b896,
        't': 0x5
      }, {
        'p': [0x129, 0x56, -0x125],
        's': [0x3, 0x1, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x0,
        't': 0x5
      }, {
        'p': [0x129, 0x56, -0x123],
        's': [0x3, 0x1, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': 0x0,
        't': 0x5
      }, {
        'p': [-0xe0, 0x35, -0x4a],
        's': [0xd8, 0x0, 0xe5],
        'i': 0x4,
        'l': 0x1,
        'en': 1.8,
        't': 0x5
      }, {
        'p': [-0x115, 0x33, -0x4d],
        's': [0x68, 0x2, 0xca],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0x8b, 0x33, -0x6f],
        's': [0xac, 0x2, 0x82],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0xd3, 0x33, -0xb7],
        's': [0xc, 0x2, 0xe],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0xc9, 0x33, -0xb3],
        's': [0x8, 0x2, 0x6],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0xb7, 0x33, -0xb6],
        's': [0x8, 0x2, 0xc],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x16, 0x42, -0x30],
        's': [0xd2, 0x0, 0x102],
        'i': 0x4,
        'l': 0x1,
        'en': 1.8,
        't': 0x5
      }, {
        'p': [-0x1, 0x40, 0x0],
        's': [0x8c, 0x2, 0x8e],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0x64, 0x40, 0x32],
        's': [0x3a, 0x2, 0x2a],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0x95, 0x35, 0x8],
        's': [0x28, 0xd, 0x7e],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0x36, 0x33, -0x8f],
        's': [0x3a, 0xf, 0x2a],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x5, 0x40, -0x7b],
        's': [0x3c, 0x2, 0x68],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0x7c, 0x33, -0x11d],
        's': [0xcb, 0x2, 0x32],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x157, 0x40, -0x106],
        's': [0x4d, 0x2, 0x48],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x157, 0x40, -0x7a],
        's': [0x52, 0x2, 0xd9],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x147, 0x40, -0xb],
        's': [0x8c, 0x14, 0x81],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0xca, 0x52, -0xb],
        's': [0x6e, 0x2, 0xa5],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0xd5, 0x40, -0x70],
        's': [0x27, 0x14, 0x25],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0xd5, 0x40, -0xcf],
        's': [0x28, 0x2, 0x3f],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0x83, 0x42, 0x32],
        's': [0x77, 0x0, 0xd2],
        'i': 0x4,
        'l': 0x1,
        'en': 1.8,
        't': 0x5
      }, {
        'p': [0x4a, 0x42, -0x10f],
        's': [0xd6, 0x0, 0xdf],
        'i': 0x4,
        'l': 0x1,
        'en': 1.8,
        't': 0x5
      }, {
        'p': [0x50, 0x33, -0x110],
        's': [0xe2, 0xf, 0xc2],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x50, 0x33, -0x110],
        's': [0xe2, 0xf, 0xc2],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xb9, 0x33, -0xfe],
        's': [0x8, 0x2, 0xc],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0xc3, 0x33, -0x101],
        's': [0xc, 0x2, 0x6],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0xd8, 0x33, -0xfe],
        's': [0x13, 0x2, 0xc],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [-0xc3, 0x35, -0x130],
        's': [0xc9, 0x0, 0x61],
        'i': 0x4,
        'l': 0x1,
        'en': 1.8,
        't': 0x5
      }, {
        'p': [-0x41, 0x35, -0x121],
        's': [0x40, 0xd, 0xc3],
        'i': 0x9,
        't': 0x5
      }, {
        'p': [-0x95, 0x35, -0x4e],
        's': [0x91, 0xd, 0x2e],
        'i': 0x9,
        't': 0x5,
        'd': 0x1
      }, {
        'p': [-0x65, 0x35, -0x8c],
        's': [0x24, 0xd, 0xb6],
        'i': 0x9,
        't': 0x5
      }, {
        'p': [0xd8, 0x42, -0x9d],
        's': [0xc5, 0x12, 0x35],
        'i': 0x9,
        't': 0x5,
        'd': 0x1
      }, {
        'p': [0x165, 0x42, -0x67],
        's': [0xf4, 0x12, 0x37],
        'i': 0x9,
        't': 0x5,
        'd': 0x1
      }, {
        'p': [0x158, 0x42, -0xf6],
        's': [0x52, 0x0, 0xea],
        'i': 0x4,
        'l': 0x1,
        'en': 1.8,
        't': 0x5
      }, {
        'p': [0xdc, 0x42, -0xd0],
        's': [0x58, 0x0, 0x34],
        'i': 0x4,
        'l': 0x1,
        'en': 1.8,
        't': 0x5
      }, {
        'p': [0x156, 0x54, 0x24],
        's': [0xaa, 0x0, 0xdf],
        'i': 0x4,
        'l': 0x1,
        'en': 1.8,
        't': 0x5
      }, {
        'p': [0xd0, 0x54, -0xa],
        's': [0x83, 0x0, 0xf0],
        'i': 0x4,
        'l': 0x1,
        'en': 1.8,
        't': 0x5
      }, {
        'p': [-0x48, 0x34, -0xd4],
        's': [0x62, 0x32, 0x6c],
        'c': 0x827256,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x41, 0x4d, -0xda],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x9d, 0x4d, -0xcf],
        's': [0xc, 0x1, 0x18],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x53, 0x4d, -0x16b],
        's': [0x18, 0x1, 0xe],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x11, 0x4d, -0x16b],
        's': [0x18, 0x1, 0xe],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x1, 0x59, -0x16b],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x87, 0x59, -0x16b],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x68, 0x4d, -0x12d],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x11, 0x4d, -0xb8],
        's': [0xc, 0x1, 0x18],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x1c, 0x4d, -0x5f],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x37, 0x4d, -0x40],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x1f, 0x4d, -0x16],
        's': [0xc, 0x1, 0x18],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x13, 0x4d, -0x1c],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x41, 0x4d, -0x3a],
        's': [0xc, 0x1, 0x18],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x1c, 0x59, 0x32],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x58, 0x4d, 0x24],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xa2, 0x4d, -0x1c],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x9e, 0x40, -0x9e],
        's': [0x18, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x113, 0x40, -0x31],
        's': [0x18, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x13b, 0x40, 0x6],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x13b, 0x40, -0x50],
        's': [0xc, 0x1, 0x18],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x13b, 0x4c, 0x12],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xe7, 0x40, -0x5d],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x80, 0x40, -0x10a],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x74, 0x4c, -0x130],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xd8, 0x5f, 0x28],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x9d, 0x5f, -0x38],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x169, 0x5f, 0x1f],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x12c, 0x5f, -0x32],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x168, 0x4d, -0xc6],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x38, 0x4d, -0x80],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x11a, 0x69, 0x19],
        's': [0x58, 0x4, 0x4],
        'c': 0x7d7d7d,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x11a, 0x35, 0x19],
        's': [0x5, 0x39, 0x5],
        'c': 0x898989,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xec, 0x35, 0x19],
        's': [0x4, 0x38, 0x4],
        'c': 0x828282,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x148, 0x35, 0x19],
        's': [0x4, 0x38, 0x4],
        'c': 0x898989,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xea, 0x5b, 0xe],
        's': [0x2, 0x4, 0x40],
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [0x4c, 0x72, -0xbc],
        's': [0x54, 0x6, 0x2b],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x4c, 0x72, -0x5e],
        's': [0x54, 0x6, 0x2b],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x4c, 0x78, -0x65],
        's': [0x54, 0x5, 0x1d],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x4c, 0x7d, -0x6c],
        's': [0x54, 0x3, 0x10],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x4c, 0x80, -0x70],
        's': [0x54, 0x3, 0x7],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x4c, 0x78, -0xb5],
        's': [0x54, 0x5, 0x1d],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x4c, 0x7d, -0xaf],
        's': [0x54, 0x3, 0x10],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [0x4c, 0x80, -0xaa],
        's': [0x54, 0x3, 0x7],
        'c': 0x877960,
        't': 0xa
      }, {
        'p': [-0x10e, 0x33, -0xb1],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x102, 0x33, 0x18],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0xe1, 0x33, -0x2a],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0xa0, 0x40, -0x3],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1
      }, {
        'p': [-0x85, 0x41, 0x47],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x22, 0x3f, -0x8d],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x19, 0x40, -0x60],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1
      }, {
        'p': [-0x9, 0x41, 0x38],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x38, 0x55, -0x2],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x9d, 0x55, 0xb],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0xad, 0x53, 0x2e],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x56, 0x55, 0x28],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0xb3, 0x52, -0x41],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0xe9, 0x52, -0x26],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1
      }, {
        'p': [0x170, 0x54, -0x1c],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1
      }, {
        'p': [0x60, 0x40, -0xd4],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x69, 0x34, -0x10a],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x8e, 0x33, -0x136],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0xb4, 0x33, -0x12d],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0xe1, 0x33, -0x115],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1
      }, {
        'p': [0x16e, 0x40, -0xf3],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1
      }, {
        'p': [0x15e, 0x40, -0x128],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x141, 0x40, -0xac],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [3.14, 0x0, 3.14]
      }, {
        'p': [-0x48, 0x68, -0xd4],
        's': [0x63, 0x8, 0x6c],
        'c': 0x827256,
        't': 0xa
      }, {
        'p': [-0x48, 0x70, -0xd4],
        's': [0x41, 0x6, 0x6c],
        'c': 0x827256,
        't': 0xa
      }, {
        'p': [-0x48, 0x76, -0xd4],
        's': [0x23, 0x6, 0x6c],
        'c': 0x827256,
        't': 0xa
      }, {
        'p': [0x7f, 0x55, -0x12],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x103, 0x55, 0x17],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x131, 0x55, 0x17],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0xeb, 0x46, 0x4],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0xe2, 0x54, -0x2c],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0xe2, 0x54, -0x51],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x10f, 0x53, -0xb0],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x134, 0x53, -0xb0],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0xe4, 0x60, -0xa4],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x91, 0x60, -0xa4],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0xc5, 0x54, -0x67],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x66, 0x61, -0x7b],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x82, 0x61, -0x60],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x84, 0x5c, 0x4],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x9f, 0x63, 0xe],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0xa8, 0x55, -0x2c],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0x32, 0x54, -0x9d],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x16, 0x53, -0xb9],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0x18, 0x62, -0x61],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0xe0, 0x54, -0x116],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0xbb, 0x60, -0x104],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0xcc, 0x40, -0x12c],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x8d, 0x57, -0x135],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x4c, 0x57, -0x135],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x31, 0x53, -0x10b],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x8c, 0x58, -0xc2],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x38, 0x5c, -0xd5],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x21, 0x5c, -0xbc],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0x21, 0x5c, -0x5d],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [-0x49, 0x4c, 0x46],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x46, 0x5c, 0x5],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0x2a, 0x61, 0x37],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0xf2, 0x79, 0x2d],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0xe3, 0x64, -0x5a],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0xe8, 0x5c, -0xd3],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14]
      }, {
        'p': [0xc8, 0x58, -0xa1],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0x134, 0x69, 0x24],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x142, 0x62, -0x110],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0x16f, 0x5c, 0xd],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [3.14, 0x0, 3.14]
      }, {
        'p': [0x126, 0x74, -0x19],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0x14f, 0x64, -0x5c],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0x142, 0x5c, -0xd4],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [0x17b, 0x63, -0x76],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [3.14, 0x0, 3.14]
      }, {
        'p': [0x16d, 0x4e, -0xb3],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [3.14, 0x0, 3.14]
      }, {
        'p': [0xaf, 0x63, -0x119],
        's': [0x7, 0x5, 0x9],
        'c': 0x5f544e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x67, -0x138],
        's': [0x6, 0xa, 0x11],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xa6, 0x41, -0x151],
        's': [0x7, 0x3, 0x4],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0xa5, 0x41, -0x15c],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0xaf, 0x6b, -0xf6],
        's': [0x6, 0x5, 0xc],
        'l': 0x1,
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xaf, 0x6b, -0x109],
        's': [0x6, 0x3, 0xe],
        'l': 0x1,
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xaf, 0x78, -0xf4],
        's': [0x9, 0x5, 0x4],
        'c': 0x5f5651,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xa5, 0x41, -0xed],
        's': [0x7, 0x3, 0x4],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0xb7, 0x41, -0x12c],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0xa7, 0x41, -0x118],
        's': [0x5, 0x2, 0x4],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0x30, 0x40, -0x10f],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0x66, 0x40, -0x115],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0xe5, 0x40, -0xe0],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0x10b, 0x81, -0x15b],
        's': [0x16, 0x3, 0xa],
        'c': 0x7d7068,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xd6, 0x69, -0xec],
        's': [0x4, 0x5, 0x9],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x11f, 0x73, -0xec],
        's': [0x17, 0x5, 0xc],
        'c': 0x5a4f48,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xed, 0x73, -0xec],
        's': [0x1e, 0x4, 0x9],
        'c': 0x736860,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x40, 0x40, -0x16c],
        's': [0x6, 0x3, 0x3],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [-0x14, 0x40, -0x148],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0xaf, 0x78, -0x163],
        's': [0x9, 0x5, 0x6],
        'c': 0x7d7068,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xb0, 0x4d, -0x16b],
        's': [0x5, 0x1f, 0x16],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x82, 0x4d, -0x173],
        's': [0x5a, 0x1f, 0x4],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x44, 0x4d, -0x173],
        's': [0x22, 0x18, 0x4],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xc, 0x4d, -0x173],
        's': [0x4e, 0x1b, 0x4],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x1c, 0x4d, -0x159],
        's': [0x5, 0x1d, 0x3a],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x2c, 0x4d, -0x13b],
        's': [0x1b, 0x1d, 0x4],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x1c, 0x6a, -0x147],
        's': [0x5, 0x3, 0xe],
        'l': 0x1,
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [-0x1c, 0x6a, -0x16b],
        's': [0x5, 0x2, 0x16],
        'l': 0x1,
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [-0x24, 0x6a, -0x13b],
        's': [0xf, 0x3, 0x4],
        'l': 0x1,
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0x45, 0x65, -0x173],
        's': [0x10, 0x3, 0x4],
        'l': 0x1,
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0xb1, 0x41, -0x167],
        's': [0x9, 0xc, 0x18],
        'c': 0x645750,
        't': 0xb
      }, {
        'p': [0x40, 0x41, -0x174],
        's': [0xdc, 0xc, 0x8],
        'c': 0x615852,
        't': 0xb
      }, {
        'p': [-0x2b, 0x33, -0x155],
        's': [0x25, 0x1a, 0x3a],
        'c': 0x645851,
        't': 0xb
      }, {
        'p': [-0x1d, 0x4d, -0x13d],
        's': [0x9, 0x25, 0xa],
        'c': 0x5f554f,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x12f, 0x6e, -0x14f],
        's': [0x6, 0x4, 0x17],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x123, 0x4a, -0x139],
        's': [0x7, 0x3, 0x4],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0x126, 0x41, -0xf6],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0x12f, 0x6e, -0x10e],
        's': [0x6, 0x4, 0x18],
        'c': 0x665c56,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xb6, 0x41, -0x107],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0x126, 0x41, -0x14f],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0x10e, 0x41, -0x153],
        's': [0x8, 0x3, 0x4],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [0x12f, 0x7b, -0x154],
        's': [0x9, 0x6, 0x4],
        'c': 0x7d7068,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xe3, 0x5f, -0xec],
        's': [0x2, 0x5, 0x9],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x12f, 0x5f, -0xf9],
        's': [0x6, 0x5, 0x2],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x12f, 0x65, -0x107],
        's': [0x6, 0x4, 0x2],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x61, 0x68, -0xd9],
        's': [0x2, 0x2, 0xd],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x61, 0x61, -0xda],
        's': [0x1, 0x6, 0x9],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [0x61, 0x67, -0xdd],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [0x61, 0x67, -0xd7],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [0x70, 0x40, -0xda],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x413b38,
        't': 0x5
      }, {
        'p': [-0x60, 0x62, -0x10f],
        's': [0x2, 0x2, 0xd],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [-0x60, 0x5b, -0x110],
        's': [0x1, 0x6, 0x9],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [-0x60, 0x61, -0x113],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x60, 0x61, -0x10d],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x8, 0x6b, 0x34],
        's': [0x2, 0x2, 0x11],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [-0x8, 0x64, 0x31],
        's': [0x1, 0x6, 0x9],
        'l': 0x1,
        'c': 0x787878,
        't': 0x2
      }, {
        'p': [-0x8, 0x6a, 0x2e],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x8, 0x6a, 0x34],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0xd5, 0x32, -0xc5],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x2f2f2f,
        't': 0x5
      }, {
        'p': [-0xb9, 0x32, -0xed],
        's': [0x4, 0x3, 0x7],
        'l': 0x1,
        'c': 0x2f2f2f,
        't': 0x5
      }, {
        'p': [-0xc7, 0x51, -0x104],
        's': [0x21, 0x3, 0x3],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xb5, 0x35, -0x104],
        's': [0x3, 0x1f, 0x3],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0xd9, 0x35, -0x104],
        's': [0x3, 0x1f, 0x3],
        'c': 0x848484,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x82, 0x6c, -0x173],
        's': [0x5a, 0x1, 0x4],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xc, 0x68, -0x173],
        's': [0x4e, 0x1, 0x4],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x45, 0x68, -0x173],
        's': [0x10, 0x1, 0x4],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xaf, 0x7d, -0x163],
        's': [0x9, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x1c, 0x6a, -0x157],
        's': [0x5, 0x1, 0x12],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x1c, 0x6c, -0x16b],
        's': [0x5, 0x1, 0x16],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x1c, 0x6d, -0x147],
        's': [0x5, 0x1, 0xe],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x26, 0x6d, -0x13b],
        's': [0xb, 0x1, 0x4],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x32, 0x6a, -0x13b],
        's': [0xd, 0x1, 0x4],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xb0, 0x6c, -0x169],
        's': [0x5, 0x1, 0x19],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xaf, 0x7d, -0x149],
        's': [0x9, 0x1, 0x1a],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xaf, 0x85, -0x15b],
        's': [0x9, 0x1, 0xa],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xaf, 0x71, -0x138],
        's': [0x6, 0x1, 0x11],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xaf, 0x6e, -0x109],
        's': [0x6, 0x1, 0xe],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xaf, 0x70, -0xf5],
        's': [0x6, 0x1, 0xe],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x12f, 0x72, -0x10b],
        's': [0x6, 0x1, 0x12],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x12f, 0x80, -0xec],
        's': [0x9, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xc7, 0x7c, -0xec],
        's': [0x27, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xaf, 0x84, -0xec],
        's': [0x9, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x12f, 0x86, -0x15b],
        's': [0x9, 0x1, 0xa],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x124, 0x81, -0x15b],
        's': [0xd, 0x1, 0xa],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xd3, 0x81, -0x15b],
        's': [0x3f, 0x1, 0xa],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x12c, 0x6e, -0x124],
        's': [0x7, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x12c, 0x6b, -0x12d],
        's': [0x8, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x9d, 0x55, 0xb],
        's': [0xa, 0x14, 0x1],
        'pe': 0x1,
        'v': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [0x38, 0x55, -0x2],
        's': [0xa, 0x14, 0x1],
        'pe': 0x1,
        'v': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [0x12f, 0x72, -0x14d],
        's': [0x6, 0x1, 0x13],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x12f, 0x81, -0x154],
        's': [0x9, 0x1, 0x4],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x12c, 0x5f, -0x3e],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x128, 0x5a, -0x19],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x128, 0x5a, -0x11],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x15f, 0x5a, 0x22],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x177, 0x48, -0x8b],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x145, 0x48, -0xd2],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x145, 0x48, -0xca],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x66, 0x48, -0x123],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x93, 0x48, -0xc6],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x98, 0x48, -0x16d],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x91, 0x48, -0x16d],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x2d, 0x48, -0x42],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x37, 0x48, -0x42],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x44, 0x48, 0xe],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x44, 0x48, 0x16],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xa3, 0x48, 0x36],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xa5, 0x48, -0x26],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x13d, 0x3b, -0xad],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x13d, 0x3b, -0x38],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x13d, 0x3b, -0x40],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x131, 0x3b, 0x14],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x10d, 0x3b, -0x3b],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xde, 0x3b, -0x127],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xce, 0x48, -0xe3],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0xce, 0x48, -0xdc],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xcd, 0x33, -0x102],
        's': [0x3, 0x2, 0x4],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xbd, 0x33, -0xb4],
        's': [0x4, 0x2, 0x8],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0xbd, 0x33, -0xb4],
        's': [0x4, 0x2, 0x8],
        'v': 0x1,
        't': 0x5
      }, {
        'p': [0x3d, 0x59, -0x2],
        's': [0x1, 0x2, 0x1],
        'pe': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [0x3d, 0x63, -0x2],
        's': [0x1, 0x2, 0x1],
        'pe': 0x1,
        'c': 0x787878,
        't': 0x5
      }, {
        'p': [-0x8, 0x6d, 0x34],
        's': [0x2, 0x1, 0x11],
        'l': 0x1,
        'c': '#ffffff',
        't': 0x5
      }, {
        'p': [-0x60, 0x64, -0x10f],
        's': [0x2, 0x1, 0xd],
        'l': 0x1,
        'c': '#ffffff',
        't': 0x5
      }, {
        'p': [0x61, 0x6a, -0xd9],
        's': [0x2, 0x1, 0xd],
        'l': 0x1,
        'c': '#ffffff',
        't': 0x5
      }, {
        'p': [-0xea, 0x5f, 0xe],
        's': [0x3, 0x19, 0x40],
        'v': 0x1,
        'c': 0x727272,
        't': 0x2
      }, {
        'p': [0x37, 0x48, -0xd7],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x4b, 0x5a, -0x124],
        's': [0x3, 0x10, 0x3],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0x4b, 0x63, -0x124],
        's': [0x2, 0x3, 0xc],
        'c': 0xa7988e,
        't': 0xb
      }, {
        'p': [0x4b, 0x66, -0x124],
        's': [0x2, 0x1, 0xc],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [0x4b, 0x6a, -0x124],
        's': [0x3, 0x1, 0x3],
        'l': 0x1,
        't': 0x5
      }, {
        'p': [-0x114, 0x35, -0x10],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': 0x0
      }, {
        'p': [0xf5, 0x43, -0x125],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': '1'
      }, {
        'p': [0x61, 0x61, -0xd9],
        's': [0x2, 0x10, 0xd],
        'v': 0x1,
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x60, 0x5b, -0x10f],
        's': [0x2, 0x10, 0xd],
        'v': 0x1,
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x8, 0x64, 0x32],
        's': [0x2, 0x10, 0xd],
        'v': 0x1,
        'c': 0x787878,
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0xee, 0x42, -0x124],
        's': [0x72, 0x32, 0x5f],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [-0x111, 0x35, -0x16],
        's': [0x5b, 0x32, 0x56],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0x4a, 0x42, -0x124],
        's': [0x5b, 0x32, 0x56],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0xc0, 0x54, -0x9],
        's': [0x49, 0x32, 0x67],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [-0xc7, 0x53, -0xd4],
        's': [0x24, 0x8, 0x60],
        'c': 0x7f7f7f,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x149, 0x57, 0x41],
        's': [0x3e, 0x1, 0xd],
        'i': 0x1e,
        'r': [1.57, 0x0, 1.57],
        'st': 'Map\x20By\x20\x20CrispyCrust',
        'sc': '#ffffff',
        'bv': 0x1,
        'sf': 0x46
      }, {
        'p': [0xaf, 0x56, -0x103],
        's': [0x6, 0x15, 0x23],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x47, -0x111],
        's': [0x6, 0xf, 0x7],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xaf, 0x47, -0xf7],
        's': [0x6, 0xf, 0xa],
        'c': 0xa7988e,
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x15f, 0x5d, -0x12e],
        's': [0x1c, 0x1c, 0x3a],
        'c': 0x6a686e,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x16d, 0x33, -0x12e],
        's': [0x4, 0x2d, 0x3a],
        'c': 0x6a686e,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0x15e, 0x33, -0x129],
        's': [0x1e, 0x30, 0x2],
        'c': 0x6a686e,
        't': 0xa,
        'bo': 0x1
      }, {
        'p': [0xac, 0x46, -0xfd],
        's': [0x1, 0x11, 0x4],
        'pe': 0x1,
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xac, 0x46, -0x101],
        's': [0x1, 0x13, 0x4],
        'pe': 0x1,
        'c': '#483b2d',
        't': 0x5
      }, {
        'p': [0xac, 0x45, -0x105],
        's': [0x1, 0x12, 0x4],
        'pe': 0x1,
        'c': '#574837',
        't': 0x5
      }, {
        'p': [0xac, 0x45, -0x109],
        's': [0x1, 0x13, 0x4],
        'pe': 0x1,
        'c': '#483b2d',
        't': 0x5
      }, {
        'p': [0xac, 0x46, -0x10d],
        's': [0x1, 0x11, 0x4],
        'pe': 0x1,
        'c': 0x372f26,
        't': 0x5
      }, {
        'p': [0xa3, 0x41, -0xf8],
        's': [0x4, 0x2, 0xe],
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#5a4938',
        't': 0x5
      }, {
        'p': [0xa5, 0x41, -0x147],
        's': [0x4, 0x2, 0xe],
        'l': 0x1,
        'r': [3.14, -0.52, 3.14],
        'c': '#5a4938',
        't': 0x5
      }]
    }, {
      'name': 'Undergrowth',
      'ambInd': '3',
      'modURL': '',
      'terrainSeed': '',
      'terrainWidth': 0xbb8,
      'terrainHeight': 0xbb8,
      'terrainMntMlt': 0x1,
      'terrainMntCol': '#707070',
      'terrainGrsCol': '#5e692f',
      'terrainDrtCol': '#7f6238',
      'skyDome': !0x0,
      'skyDomeCol0': '#3983a2',
      'skyDomeCol1': '#87ceeb',
      'skyDomeCol2': '#dce8ed',
      'zone': !0x1,
      'zoneSize': 0x1f4,
      'zoneSpeed': 0x1,
      'zoneCol0': '#c542d9',
      'zoneCol1': '#c542d9',
      'zoneCol2': '#c542d9',
      'sizeMlt': 0x2,
      'shadowR': 1297.054320662896,
      'ambient': '#97a0a8',
      'light': '#f2f8fc',
      'sky': '#dce8ed',
      'fog': 0x8d9aa0,
      'fogD': 0x7d0,
      'dthY': -0x64,
      'camPos': [0x0, 0x26, -0x183],
      'spawns': [
        [0x159, 0x2, -0xa9, 0x0, 0x1, 0x0],
        [0x64, 0x2, -0xe5, 0x0, 0x2, 0x0],
        [0x38, 0xd, -0x1c1, 0x0, 0x1, 0x0],
        [0x14c, 0x2, -0x21f, 0x0, 0x0, 0x0],
        [0x14c, 0x2, -0xbd, 0x0, 0x0, 0x0],
        [0x118, 0xd, -0xb1, 0x0, 0x2, 0x0],
        [-0x12, 0x2, -0x68, 0x0, 0x1, 0x0],
        [0xb6, 0x2, 0x1a, 0x0, 0x3, 0x0]
      ],
      'objects': [{
        'p': [0x3, 0x0, -0xd3],
        's': [0xe0, 0x2, 0xbe],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0xbe, 0x0, -0x3a],
        's': [0x86, 0x2, 0xc8],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0xd2, -0x10, -0xe2],
        's': [0xa2, 0x1d, 0x78],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0xe9, 0x2, -0x8d],
        's': [0x2c, 0xb, 0x32],
        'i': 0x9,
        'c': '#9d9d9d',
        't': 0x1,
        'd': 0x3
      }, {
        'p': [0xda, -0xb, -0x141],
        's': [0x3e, 0x18, 0x46],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x6b, 0xb, -0x14e],
        's': [0x2c, 0x2, 0x39],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [-0x5, 0xb, -0x181],
        's': [0xb4, 0x2, 0x9e],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x127, 0x0, -0x20],
        's': [0x4c, 0x2, 0x32],
        'c': '#434343',
        'e': '#18180a'
      }, {
        'p': [0x197, 0x0, -0x5a],
        's': [0x94, 0x2, 0xb0],
        'c': '#434343',
        'e': '#18180a'
      }, {
        'p': [-0x5, 0x13, -0x1b8],
        's': [0x4a, 0x2, 0x4d],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x100, 0x0, -0x190],
        's': [0x7e, 0x2, 0x80],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0xde, 0x2, -0x17a],
        's': [0x2e, 0xb, 0x2c],
        'i': 0x9,
        'c': '#9d9d9d',
        't': 0x1,
        'd': 0x1
      }, {
        'p': [0x17b, 0x0, -0x1e1],
        's': [0x78, 0x2, 0xe6],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x3d, 0x0, -0x57],
        's': [0x7c, 0x2, 0x3a],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x17, 0x0, -0x2a],
        's': [0x30, 0x2, 0x20],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x190, 0x0, -0x15e],
        's': [0x2e, 0x2, 0x20],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x14f, 0x0, -0x10c],
        's': [0x91, 0x2, 0x2c],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x17a, 0x0, -0x138],
        's': [0x5a, 0x2, 0x2c],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [-0x31, -0x4, -0x120],
        's': [0x30, 0x11, 0x24],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x136, 0x2, -0x107],
        's': [0x26, 0xb, 0x2e],
        'i': 0x9,
        'c': '#9d9d9d',
        't': 0x1,
        'd': 0x2
      }, {
        'p': [0x126, 0x0, 0x11],
        's': [0x4e, 0x26, 0x32],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x72, 0x0, -0x28],
        's': [0x22, 0x2e, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x198, 0x8, -0x4],
        's': [0x93, 0x32, 0x3],
        'c': '#ffffff',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1d7, 0x0, -0x143],
        's': [0x60, 0x36, 0x9a],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x196, 0x0, -0x10c],
        's': [0x23, 0x36, 0x2c],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x129, 0x0, -0x216],
        's': [0x2c, 0x29, 0xa2],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x173, 0x0, -0x25d],
        's': [0x68, 0x29, 0x20],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x26, 0x26, -0x31],
        's': [0x4c, 0x4, 0x1c],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x17, 0x0, -0x18],
        's': [0x30, 0x17, 0x4]
      }, {
        'p': [0x79, 0x0, -0xc9],
        's': [0x11, 0x22, 0x58],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0xaa, 0x0, -0x90],
        's': [0x52, 0x22, 0x2c],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x6f, 0x0, -0x1c0],
        's': [0x3e, 0x43, 0x9c],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x2e, 0x0, -0x1f6],
        's': [0x50, 0x31, 0x30],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x28, 0x0, -0x1ee],
        's': [0x5c, 0x43, 0x40],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x20, 0xd, -0x1b0],
        's': [0x4, 0xa, 0x44],
        'e': '#18180a'
      }, {
        'p': [-0x5, 0xd, -0x190],
        's': [0x46, 0xa, 0x4],
        'e': '#18180a'
      }, {
        'p': [-0x2a, 0xd, -0x19a],
        's': [0x4, 0xa, 0x18],
        'e': '#18180a'
      }, {
        'p': [-0x3d, 0x13, -0x1c3],
        's': [0x26, 0x2, 0x3a],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [-0x3e, 0xd, -0x19a],
        's': [0x24, 0x8, 0x18],
        'i': 0x9,
        'c': '#9d9d9d',
        't': 0x1,
        'd': 0x3
      }, {
        'p': [0xbb, 0xd, -0x11f],
        's': [0x4, 0x13, 0xc],
        'e': '#18180a'
      }, {
        'p': [0xbb, 0xd, -0x13f],
        's': [0x4, 0xf, 0x4],
        'e': '#18180a'
      }, {
        'p': [0xbb, 0xd, -0x15e],
        's': [0x4, 0x13, 0xc],
        'e': '#18180a'
      }, {
        'p': [0xbb, 0xd, -0x157],
        's': [0x4, 0x7, 0x2],
        'e': '#18180a'
      }, {
        'p': [0xbb, 0xd, -0x117],
        's': [0x4, 0x7, 0x4],
        'e': '#18180a'
      }, {
        'p': [0xbb, 0xd, -0xe9],
        's': [0x4, 0x13, 0x17],
        'e': '#18180a'
      }, {
        'p': [0xbb, 0xd, -0xfb],
        's': [0x4, 0xb, 0xd],
        'e': '#18180a'
      }, {
        'p': [0x163, 0x0, -0x15e],
        's': [0x2c, 0x36, 0x20],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x121, 0x0, -0x157],
        's': [0x58, 0x36, 0x72],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x182, 0x6, -0x43],
        's': [0xa, 0x32, 0xa],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x182, 0x6, -0x76],
        's': [0xa, 0x15, 0xa],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xd0, 0x0, 0x25],
        's': [0x6, 0x27, 0x7],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0xe6, 0x0, 0x25],
        's': [0x6, 0x27, 0x7],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0xf8, 0x0, 0x28],
        's': [0x8, 0x2d, 0x8],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xbe, 0x0, 0x28],
        's': [0x8, 0x2d, 0x8],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xbf, 0x27, 0x28],
        's': [0x70, 0x4, 0x7],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xbf, 0x1e, 0x28],
        's': [0x70, 0x4, 0x7],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xbf, 0x22, 0x28],
        's': [0x72, 0x5, 0x4],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x95, 0x0, 0x25],
        's': [0x6, 0x27, 0x7],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0xab, 0x0, 0x25],
        's': [0x6, 0x27, 0x7],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x85, 0x0, 0x28],
        's': [0x8, 0x2d, 0x8],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xbf, 0x0, 0x28],
        's': [0x70, 0x20, 0x4],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x85, 0x2, 0xc],
        's': [0x15, 0x1, 0x47],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x86, 0x2, -0x27],
        's': [0xf, 0x1, 0x1f],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xbc, 0x2, -0x32],
        's': [0x31, 0x1, 0x29],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xd3, 0x2, 0x1c],
        's': [0x1d, 0x1, 0x14],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf1, 0x2, 0x1c],
        's': [0x1f, 0x1, 0x28],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x96, 0x2, -0x3],
        's': [0xd, 0x1, 0xc],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x5c, 0x2, -0x3d],
        's': [0x5a, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x8f, 0x3, 0x22],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.35, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x82, 0x3, 0x1c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.05, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xa5, 0x3, 0x23],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.35, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x88, 0x3, -0x2f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x6e, 0x0, -0x6],
        's': [0x1c, 0x27, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x6e, 0x0, 0x1b],
        's': [0x26, 0x31, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x72, 0x0, -0x17],
        's': [0x26, 0x1f, 0x19],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x6e, 0x27, -0x6],
        's': [0x1c, 0x2, 0x24],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x72, 0x1f, -0x17],
        's': [0x26, 0x2, 0x19],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x72, 0x2e, -0x28],
        's': [0x22, 0x2, 0x24],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x6e, 0x31, 0x1b],
        's': [0x26, 0x2, 0x24],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x58, 0x0, -0x2d],
        's': [0x1c, 0x26, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x42, 0x0, -0x28],
        's': [0x26, 0x2a, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x2e, 0x0, -0xe],
        's': [0x26, 0x24, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x8, 0x0, -0x9],
        's': [0x26, 0x1f, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [-0x4, 0x0, -0x13],
        's': [0x1e, 0x36, 0x20],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x58, 0x26, -0x2d],
        's': [0x1c, 0x2, 0x24],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x42, 0x2a, -0x28],
        's': [0x26, 0x2, 0x24],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x2e, 0x24, -0xe],
        's': [0x26, 0x2, 0x24],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x8, 0x1f, -0x9],
        's': [0x26, 0x2, 0x24],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [-0x4, 0x36, -0x13],
        's': [0x1e, 0x2, 0x20],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x4e, 0x2, -0x46],
        's': [0x2d, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x27, 0x2, -0x2c],
        's': [0x10, 0x1, 0x28],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf, 0x2, -0x26],
        's': [0x20, 0x1, 0x1a],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc1, 0x0, -0x30],
        's': [0x1a, 0x35, 0x1a],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0xc1, 0x2, -0x30],
        's': [0x1c, 0x7, 0x1c],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0xcd, 0x0, -0x24],
        's': [0x6, 0x35, 0x6],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5
      }, {
        'p': [0xcd, 0x0, -0x3c],
        's': [0x6, 0x35, 0x6],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5
      }, {
        'p': [0xb5, 0x0, -0x3c],
        's': [0x6, 0x35, 0x6],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5
      }, {
        'p': [0xb5, 0x0, -0x24],
        's': [0x6, 0x35, 0x6],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5
      }, {
        'p': [0xc1, 0x35, -0x30],
        's': [0x20, 0x4, 0x20],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xc1, 0x3d, -0x30],
        's': [0x20, 0x4, 0x20],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xc1, 0x39, -0x30],
        's': [0x1e, 0x4, 0x1e],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xaa, 0x2, 0x15],
        's': [0x35, 0x1, 0x24],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc2, 0x2, -0x18],
        's': [0x1f, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xd8, 0x2, -0x33],
        's': [0x7, 0x1, 0x19],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xbe, 0x2, -0x4a],
        's': [0x25, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc8, 0x2, -0x45],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0xbc, 0x2, -0x45],
        's': [0xc, 0xc, 0xc],
        'i': 0x8,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0xc2, 0x8, -0x45],
        's': [0x18, 0x7, 0xc],
        'l': 0x1,
        'c': '#3964a2',
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [0x10d, 0x0, 0x2b],
        's': [0x23, 0x35, 0x29],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x101, 0x0, 0x1a],
        's': [0x15, 0x1d, 0x15],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0xf7, 0x2, 0x3],
        's': [0x12, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x101, 0x1d, 0x1a],
        's': [0x15, 0x2, 0x15],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x10d, 0x35, 0x2b],
        's': [0x23, 0x2, 0x29],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0xf2, 0x3, 0x22],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.22, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xfb, 0x3, 0xb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.04, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xc7, 0x3, -0x1e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.39, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xd1, 0x3, -0x42],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.36, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xab, 0x3, -0x3e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.88, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x46, 0x3, -0x3d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.23, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x2b, 0x3, -0x24],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.39, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xe, 0x3, -0x1e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.88, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x94, 0x0, 0x4b],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'c': '#4c663e'
      }, {
        'p': [0xd4, -0x9, 0x4b],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x102, -0x1e, 0x65],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.35, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x9c, -0x24, 0x74],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.35, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x101, 0x0, -0xe],
        's': [0x5, 0x1e, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x101, 0x0, -0x32],
        's': [0x5, 0x1e, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x101, 0x1e, -0x20],
        's': [0x5, 0x5, 0x2b],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x101, 0x0, -0x38],
        's': [0x8, 0x38, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x101, 0x0, -0x8],
        's': [0x8, 0x38, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x102, 0x0, -0xa3],
        's': [0x8, 0x26, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x102, 0x0, -0x6d],
        's': [0x8, 0x26, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x110, 0x26, -0x70],
        's': [0x24, 0x4, 0x6e],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x123, 0x2e, -0x6e],
        's': [0x4a, 0x4, 0x72],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x125, 0x2a, -0x6f],
        's': [0x4a, 0x4, 0x6c],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xff, 0x2, -0x67],
        's': [0x15, 0x1, 0x5c],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf2, 0x2, -0x53],
        's': [0x5, 0x1, 0x1d],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x105, 0x2, -0x32],
        's': [0x19, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x116, 0x2, -0x35],
        's': [0x9, 0x1, 0x6],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x102, 0x2, -0xb],
        's': [0xf, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x111, 0x2, -0xb],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xb9, 0x2, -0x73],
        's': [0x41, 0x1, 0x17],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x86, 0x2, -0x73],
        's': [0x25, 0x1, 0xc],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc4, 0x2, -0x65],
        's': [0x1d, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x59, 0x2, -0x82],
        's': [0x35, 0x1, 0x2f],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x60, 0x2, -0x67],
        's': [0x14, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x126, 0x26, 0x11],
        's': [0x50, 0x4, 0x38],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x126, 0x2e, 0x11],
        's': [0x50, 0x4, 0x38],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x126, 0x2a, 0x11],
        's': [0x4c, 0x4, 0x32],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x159, 0x3d, -0x20],
        's': [0xb4, 0x5, 0x32],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x101, 0x23, -0x20],
        's': [0x3, 0x15, 0x2b],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x123, 0x38, -0x20],
        's': [0x4c, 0x5, 0x38],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x123, 0x42, -0x20],
        's': [0x4c, 0x5, 0x38],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x125, 0x32, -0x8],
        's': [0x4d, 0x7, 0x6],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x125, 0x32, -0x38],
        's': [0x4d, 0x7, 0x6],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x108, 0x3, -0x33],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.4, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xfb, 0x3, -0x40],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.18, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xd0, 0x3, -0x70],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x107, 0x28, -0x20],
        's': [0x9, 0x5, 0x32],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x127, 0x28, -0x33],
        's': [0x37, 0x5, 0xc],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x147, 0x28, -0x20],
        's': [0x9, 0x5, 0x32],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14d, 0x2, -0x32],
        's': [0x5, 0x1c, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14d, 0x1e, -0x20],
        's': [0x5, 0x5, 0x29],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14d, 0x2, -0xe],
        's': [0x5, 0x1c, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14d, 0x23, -0x20],
        's': [0x3, 0x19, 0x37],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x127, 0x28, -0xd],
        's': [0x37, 0x5, 0xc],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14d, 0x8, -0x38],
        's': [0x7, 0x26, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x14d, 0x0, -0x8],
        's': [0x7, 0x2d, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0xfb, 0x2, -0x58],
        's': [0x1, 0x13, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.17],
        'c': '#bbbbbb',
        't': 0x2
      }, {
        'p': [0xfb, 0x2, -0x60],
        's': [0x1, 0x13, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, -0.17],
        'c': '#bbbbbb',
        't': 0x2
      }, {
        'p': [0x125, 0x1e, -0x9],
        's': [0x4d, 0x5, 0x2],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x125, 0x1e, -0x37],
        's': [0x4d, 0x5, 0x2],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x102, 0x0, -0x6d],
        's': [0x7, 0xc, 0x65],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x102, 0x0, 0xa],
        's': [0x7, 0xc, 0x1c],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x173, 0x0, -0xd4],
        's': [0xa1, 0x2, 0x44],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x14d, 0x8, -0x4b],
        's': [0x5, 0x30, 0x1f],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1ad, 0x2a, -0x5b],
        's': [0x10, 0x6, 0xad],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x1a6, 0x38, -0x5e],
        's': [0x1e, 0x5, 0xb2],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x17f, 0x3d, -0x69],
        's': [0x68, 0x5, 0x60],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x156, 0x2a, -0x4d],
        's': [0x12, 0x6, 0x90],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x182, 0x2a, -0xc],
        's': [0x46, 0x6, 0x10],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x193, 0x2a, -0xa9],
        's': [0x24, 0x6, 0xf],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x182, 0x0, -0x43],
        's': [0xc, 0x6, 0xc],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x182, 0x38, -0x76],
        's': [0xc, 0x5, 0xc],
        'c': '#e1e1e1',
        'e': '#18180a'
      }, {
        'p': [0x182, 0x2, -0x76],
        's': [0xc, 0x4, 0xc],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x14d, 0x8, -0xac],
        's': [0x7, 0x26, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x14d, 0x0, -0xb4],
        's': [0x8, 0x35, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x17f, 0x42, -0x51],
        's': [0x6c, 0x5, 0x98],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1b9, 0x1e, -0xd6],
        's': [0x7, 0x4, 0x31],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1b9, 0x22, -0xd5],
        's': [0x4, 0x5, 0x33],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1b9, 0x2, -0xd7],
        's': [0x4, 0x1d, 0x30],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1b9, 0x0, -0xbb],
        's': [0x8, 0x2d, 0x8],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x1b9, 0x0, -0xf2],
        's': [0x8, 0x2d, 0x8],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x1b5, -0x5, -0xcc],
        's': [0x7, 0x27, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, -0.17],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x1b5, -0x5, -0xe1],
        's': [0x7, 0x27, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, -0.17],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x154, 0x8, -0xb1],
        's': [0x8, 0x22, 0x3],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x164, 0x12, -0xbd],
        's': [0x30, 0x1, 0xc],
        'pe': 0x1,
        'c': '#878787',
        't': 0x2
      }, {
        'p': [0x15a, 0x22, -0xbd],
        's': [0x1c, 0x1, 0xc],
        'pe': 0x1,
        'c': '#878787',
        't': 0x2
      }, {
        'p': [0x167, 0x1, -0xc2],
        's': [0x1, 0x23, 0x1],
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x14d, 0x1, -0xc2],
        's': [0x1, 0x23, 0x1],
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x14d, 0x1, -0xb8],
        's': [0x1, 0x23, 0x1],
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x167, 0x1, -0xb8],
        's': [0x1, 0x23, 0x1],
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x17b, 0x1, -0xc2],
        's': [0x1, 0x13, 0x1],
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x17b, 0x1, -0xb8],
        's': [0x1, 0x13, 0x1],
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x167, 0x9, -0xc2],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x14d, 0x9, -0xc2],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x14d, 0x1a, -0xc2],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x167, 0x1a, -0xc2],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x17b, 0x9, -0xc2],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x17b, 0x9, -0xb8],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x167, 0x9, -0xb8],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x14d, 0x9, -0xb8],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x14d, 0x1a, -0xb8],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x167, 0x1a, -0xb8],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#757575',
        't': 0x5
      }, {
        'p': [0x17f, 0x2, -0xbd],
        's': [0xf, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x160, 0x2, -0xc0],
        's': [0x2f, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x150, 0x2, -0xd7],
        's': [0xf, 0x1, 0x19],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x161, 0x2, -0xce],
        's': [0x13, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x149, 0x2, -0xec],
        's': [0x14, 0x1, 0x11],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x185, 0x3, -0xbc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.22, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x14d, 0x3, -0xbb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x142, 0x0, -0xcd],
        's': [0x12, 0x1d, 0x15],
        'c': '#595959',
        'e': '#11110c'
      }, {
        'p': [0x136, 0x0, -0xe0],
        's': [0x26, 0x39, 0x20],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x131, 0x0, -0xcc],
        's': [0x26, 0x32, 0x20],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x135, 0x42, -0xb7],
        's': [0x28, 0x2, 0x24],
        'c': '#8e8e8e',
        'e': '#11110c',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x131, 0x32, -0xcc],
        's': [0x26, 0x2, 0x20],
        'c': '#8e8e8e',
        'e': '#11110c',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x136, 0x39, -0xe0],
        's': [0x26, 0x2, 0x20],
        'c': '#8e8e8e',
        'e': '#11110c',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x142, 0x1d, -0xcd],
        's': [0x12, 0x2, 0x15],
        'c': '#8e8e8e',
        'e': '#11110c',
        't': 0x8
      }, {
        'p': [0x14c, 0x3, -0xdb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.4, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x154, 0x8, -0x3],
        's': [0x8, 0x22, 0x7],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x1b0, 0x8, -0x3],
        's': [0x8, 0x22, 0x7],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x182, 0x8, -0x5],
        's': [0x8, 0x22, 0x3],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x182, 0x8, -0xb1],
        's': [0x8, 0x22, 0x3],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14b, 0x2d, -0xa],
        's': [0x4, 0xb, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x14b, 0x2d, -0x36],
        's': [0x4, 0xb, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x14f, 0x31, -0x20],
        's': [0x1, 0x7, 0x37],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x14d, 0x8, -0x85],
        's': [0x7, 0x23, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x14d, 0x8, -0x5e],
        's': [0x7, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x1a3, 0x29, -0x5b],
        's': [0x4, 0x8, 0x8e],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x182, 0x29, -0x16],
        's': [0x3e, 0x8, 0x4],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x161, 0x29, -0x4f],
        's': [0x4, 0x8, 0x76],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x190, 0x29, -0xa0],
        's': [0x22, 0x8, 0x4],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x15b, 0x38, -0x4c],
        's': [0x24, 0x5, 0x8e],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x182, 0x38, -0x98],
        's': [0x2a, 0x5, 0x12],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x182, 0x38, -0x17],
        's': [0x2a, 0x5, 0x24],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x182, 0x39, -0x43],
        's': [0xc, 0x4, 0xc],
        'c': '#e1e1e1',
        'e': '#18180a'
      }, {
        'p': [0xbc, 0xb, -0xdd],
        's': [0x1a, 0x35, 0x1a],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0xbc, 0xd, -0xdd],
        's': [0x1c, 0x7, 0x1c],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0xc8, 0xb, -0xd1],
        's': [0x6, 0x35, 0x6],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5
      }, {
        'p': [0xc8, 0xb, -0xe9],
        's': [0x6, 0x35, 0x6],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5
      }, {
        'p': [0xb0, 0xb, -0xe9],
        's': [0x6, 0x35, 0x6],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5
      }, {
        'p': [0xb0, 0xb, -0xd1],
        's': [0x6, 0x35, 0x6],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5
      }, {
        'p': [0xbc, 0x40, -0xdd],
        's': [0x20, 0x4, 0x20],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xbc, 0x48, -0xdd],
        's': [0x20, 0x4, 0x20],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xbc, 0x44, -0xdd],
        's': [0x1e, 0x4, 0x1e],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xab, 0xe, -0xd7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.88, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x11b, 0xd, -0xc1],
        's': [0x10, 0x1, 0x1c],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x115, 0xd, -0xac],
        's': [0x19, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x104, 0xd, -0xa9],
        's': [0x9, 0x1, 0x8],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x10e, 0xd, -0xd5],
        's': [0x25, 0x1, 0xc],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf1, 0xd, -0xdc],
        's': [0x15, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xcc, 0xd, -0xd3],
        's': [0x17, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x110, 0xd, -0xca],
        's': [0x6, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xb4, 0xd, -0xd3],
        's': [0x19, 0x1, 0x18],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc1, 0xd, -0xe7],
        's': [0x2d, 0x1, 0x10],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xa6, 0xd, -0xd1],
        's': [0x3, 0x1, 0x10],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xb7, 0xd, -0xc5],
        's': [0xd, 0x1, 0x4],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xb9, 0xd, -0xf9],
        's': [0xf, 0x1, 0x14],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc7, 0xd, -0xf2],
        's': [0xd, 0x1, 0x6],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xba, 0xd, -0x105],
        's': [0x9, 0x1, 0x4],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x100, 0xe, -0xd6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.18, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x11a, 0xe, -0xd4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.69, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x11e, 0xe, -0xaa],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.71, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x108, 0xe, -0xa9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.38, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xba, -0x2f, 0x4b],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0xd5, -0x28, 0x7e],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x63, -0x14, 0x41],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x13e, -0xd, 0x4b],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.35, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x10a, 0xd, -0xd5],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'c': '#4c663e'
      }, {
        'p': [0x49, -0x2, -0x1ca],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, 0.53, 3.14],
        'c': '#4c663e'
      }, {
        'p': [0x16, -0x17, -0x1f],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 1.4, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x2c, -0x1f, 0x55],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 0.35, 0x0],
        'c': '#4c663e'
      }, {
        'p': [-0x2, -0x2a, 0x55],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'c': '#4c663e'
      }, {
        'p': [0x16, 0x0, -0x20],
        's': [0x6, 0x31, 0x6],
        'v': 0x1,
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5
      }, {
        'p': [0x16, 0x0, -0x20],
        's': [0x7, 0x31, 0x7],
        'v': 0x1,
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xd0, 0x0, -0x77],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x4c, 0x0, -0x77],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x4c, 0x0, -0xd5],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x7e, 0x0, -0xab],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x86, 0x0, -0xa3],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0xd0, 0x0, -0xa3],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x8f, 0x0, -0x77],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x8e, 0x0, -0x77],
        's': [0x7f, 0xc, 0x6],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x8e, 0x19, -0x77],
        's': [0x7f, 0x9, 0x6],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x8e, 0xc, -0x77],
        's': [0x7f, 0x2, 0x7],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x8e, 0x17, -0x77],
        's': [0x7f, 0x2, 0x7],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x8e, 0x9, -0x7a],
        's': [0x7f, 0xf, 0x1],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x6e, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0x87, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0x54, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0x60, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0x7b, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0x97, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0xc8, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0xb0, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0xa3, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0xbc, 0xe, -0x77],
        's': [0x3, 0x9, 0x3],
        'c': '#c5c5c5',
        'e': '#18180a'
      }, {
        'p': [0x8e, 0x22, -0x8d],
        's': [0x8c, 0x4, 0x34],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x8e, 0x26, -0x8d],
        's': [0x88, 0x4, 0x30],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x8e, 0x2a, -0x8d],
        's': [0x8c, 0x4, 0x34],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x7, 0x2, -0xd6],
        's': [0x18, 0x1, 0x1c],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x11, 0x2, -0xed],
        's': [0x22, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x6, 0x2, -0x3c],
        's': [0xd, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x10, 0x2, -0x38],
        's': [0x7, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x3, 0x2, -0x6f],
        's': [0xa, 0x1, 0x8],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x5, 0x2, -0x76],
        's': [0x1a, 0x1, 0x6],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x19, 0x2, -0x74],
        's': [0xe, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0xd, 0x2, -0x7b],
        's': [0xa, 0x1, 0x4],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x45, 0x2, -0x80],
        's': [0x15, 0x1, 0x19],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x48, 0x2, -0x9f],
        's': [0x11, 0x1, 0x25],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x3e, 0x2, -0x96],
        's': [0x3, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x11, 0x2, -0xd4],
        's': [0x18, 0x1, 0x11],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x4c, 0x2, -0xd4],
        's': [0x16, 0x1, 0x27],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x4a, 0x2, -0xb9],
        's': [0xa, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x3d, 0x2, -0x7c],
        's': [0x3, 0x1, 0x16],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x10, 0x2, -0xaf],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0x1c, 0x2, -0xaf],
        's': [0xc, 0xc, 0xc],
        'i': 0x8,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x16, 0x8, -0xaf],
        's': [0x18, 0x7, 0xc],
        'l': 0x1,
        'c': '#3964a2',
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [0x45, 0x3, -0x99],
        's': [0x1, 0x12, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, -0.17],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [0x45, 0x3, -0x91],
        's': [0x1, 0x12, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, -0.17],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [-0x31, 0x36, -0x102],
        's': [0x30, 0x7, 0x60],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x4, 0x0, -0x71],
        's': [0x8, 0x26, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x2, 0x0, -0x5d],
        's': [0x2, 0x26, 0x4],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x26, 0x2e, -0x4a],
        's': [0x4c, 0x4, 0x56],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x27, 0x2a, -0x4b],
        's': [0x4a, 0x4, 0x50],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x26, 0x32, -0x4c],
        's': [0x2a, 0xd, 0x32],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x26, 0x3f, -0x4c],
        's': [0x2c, 0x4, 0x34],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x26, 0x43, -0x4c],
        's': [0x29, 0x4, 0x30],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x26, 0x47, -0x4c],
        's': [0x2c, 0x4, 0x34],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x10, 0x0, -0x74],
        's': [0x14, 0xc, 0x1],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x13, 0x32, -0x63],
        's': [0x6, 0xd, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x39, 0x32, -0x63],
        's': [0x6, 0xd, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x13, 0x32, -0x35],
        's': [0x6, 0xd, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x39, 0x32, -0x35],
        's': [0x6, 0xd, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x1e, -0x22, 0x6],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#4c663e'
      }, {
        'p': [-0x2, -0x18, 0x29],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.22, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x44, 0x0, -0x112],
        's': [0x7a, 0x3d, 0x40],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x56, 0x0, -0x9a],
        's': [0x1c, 0x25, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [-0x59, 0x0, -0x82],
        's': [0x1c, 0x35, 0x26],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [-0x5d, 0x0, -0xb2],
        's': [0x1c, 0x2e, 0x26],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [-0x5b, 0x0, -0xcb],
        's': [0x1c, 0x29, 0x1b],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [-0x56, 0x25, -0x9a],
        's': [0x1c, 0x2, 0x24],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [-0x5d, 0x2e, -0xb2],
        's': [0x1c, 0x2, 0x26],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [-0x5b, 0x29, -0xcb],
        's': [0x1c, 0x2, 0x1b],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [-0x59, 0x35, -0x82],
        's': [0x1c, 0x2, 0x26],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x4, 0x3, -0x70],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.88, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x4, 0x3, -0x3f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.39, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [-0x46, 0x3, -0x79],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.71, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [-0x47, 0x3, -0x85],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.51, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [-0x4c, 0x3, -0xb0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.21, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [-0x48, 0x3, -0xcd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.88, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x45, 0x3, -0x7e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.04, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [-0x94, -0x17, -0x8f],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, -1.23, -3.14],
        'c': '#4c663e'
      }, {
        'p': [-0x94, -0x23, -0xd1],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14],
        'c': '#4c663e'
      }, {
        'p': [-0x94, -0x19, -0x53],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.04, 0x0],
        'c': '#4c663e'
      }, {
        'p': [-0x57, -0x19, -0x9],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.56, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x67, -0x24, 0x80],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x13, 0x34, -0x1c2],
        's': [0x1, 0x1c, 0x1],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x2
      }, {
        'p': [-0x32, 0x32, -0x74],
        's': [0x2, 0x2, 0x14],
        'c': '#c8c8c8',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x32, 0x29, -0x73],
        's': [0x1, 0xd, 0x2],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [0x6, 0x2, -0x35],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x6, 0x2, -0x29],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x46, 0x2e, -0x8a],
        's': [0x15, 0x2, 0x2],
        'c': '#c8c8c8',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x4a, 0x25, -0x8a],
        's': [0x2, 0xd, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, 0.7],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [0x3d, 0x17, -0x8a],
        's': [0x1, 0x17, 0x1],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x2
      }, {
        'p': [-0x7c, -0xc, -0x2a],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14],
        'c': '#4c663e'
      }, {
        'p': [-0x9, 0x0, -0x102],
        's': [0x20, 0x3d, 0x60],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x44, 0x0, -0xf2],
        's': [0x7a, 0x22, 0x4],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x16, 0x0, -0xd5],
        's': [0x8, 0x2e, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x4c, 0x0, -0xd5],
        's': [0x8, 0x2e, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x31, 0x2e, -0xd5],
        's': [0x3e, 0x8, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x31, 0x2e, -0x12f],
        's': [0x3e, 0x8, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x4c, 0x0, -0x12f],
        's': [0x8, 0x2e, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x16, 0x0, -0x12f],
        's': [0x8, 0x2e, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x4, 0x0, -0xd5],
        's': [0x8, 0x3d, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x7e, 0x0, -0xd0],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x65, 0x2a, -0xbc],
        's': [0x3a, 0x4, 0x2a],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x7e, 0x0, -0xf5],
        's': [0x8, 0x3d, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x7e, 0xd, -0x12f],
        's': [0x8, 0x30, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x66, 0xd, -0x12f],
        's': [0x8, 0x30, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x66, 0x0, -0xd5],
        's': [0x8, 0x3d, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x45, 0x22, -0xe1],
        's': [0x7a, 0x4, 0x20],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x45, 0x2a, -0xe1],
        's': [0x7a, 0x4, 0x20],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x44, 0x26, -0xe3],
        's': [0x78, 0x4, 0x20],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x31, 0x3d, -0x102],
        's': [0x72, 0x4, 0x62],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x30, 0x41, -0x102],
        's': [0x70, 0x4, 0x5e],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x31, 0x45, -0x102],
        's': [0x72, 0x4, 0x62],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x45, 0x3d, -0x112],
        's': [0x7a, 0x4, 0x42],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x45, 0x45, -0x112],
        's': [0x7a, 0x4, 0x42],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x44, 0x41, -0x112],
        's': [0x78, 0x4, 0x3e],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x9, 0x0, -0x102],
        's': [0x21, 0xc, 0x61],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xab, 0x0, -0xa3],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x65, 0x26, -0xbc],
        's': [0x36, 0x4, 0x2e],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x65, 0x22, -0xbc],
        's': [0x3a, 0x4, 0x2a],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x4c, 0x0, -0xa3],
        's': [0x8, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x31, 0x2f, -0x127],
        's': [0x30, 0x7, 0x8],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x45, 0x2f, -0x102],
        's': [0x8, 0x8, 0x42],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x31, 0x2f, -0xdd],
        's': [0x30, 0x7, 0x8],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x1d, 0x2f, -0x102],
        's': [0x8, 0x8, 0x42],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x31, 0x34, -0x102],
        's': [0x21, 0x7, 0x43],
        'c': '#8c8c8c',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x31, 0x2, -0xf1],
        's': [0x30, 0xb, 0x3a],
        'i': 0x9,
        'c': '#9d9d9d',
        't': 0x1,
        'd': 0x3
      }, {
        'p': [-0x4d, 0x24, -0xf8],
        's': [0x8, 0xe, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x4d, 0x24, -0xe4],
        's': [0x8, 0xe, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x4d, 0x24, -0x120],
        's': [0x8, 0xe, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x4d, 0x24, -0x10c],
        's': [0x8, 0xe, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, -0.35],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x15, 0x24, -0xe4],
        's': [0x8, 0xe, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x15, 0x24, -0x120],
        's': [0x8, 0xe, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x15, 0x24, -0x10c],
        's': [0x8, 0xe, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x15, 0x24, -0xf8],
        's': [0x8, 0xe, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, 0.35],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x4c, 0x0, -0xe4],
        's': [0x8, 0x26, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x4c, 0x0, -0xf8],
        's': [0x8, 0x26, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x4c, 0x0, -0x10c],
        's': [0x8, 0x26, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x4c, 0x0, -0x120],
        's': [0x8, 0x26, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x16, 0x0, -0xe4],
        's': [0x8, 0x26, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x16, 0x0, -0xf8],
        's': [0x8, 0x26, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x16, 0x0, -0x10c],
        's': [0x8, 0x26, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x16, 0x0, -0x120],
        's': [0x8, 0x26, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x16, 0x24, -0xe4],
        's': [0x9, 0x2, 0x6],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x16, 0x24, -0xf8],
        's': [0x9, 0x2, 0x6],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x16, 0x24, -0x10c],
        's': [0x9, 0x2, 0x6],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x16, 0x24, -0x120],
        's': [0x9, 0x2, 0x6],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x49, 0x24, -0x120],
        's': [0x3, 0x2, 0x6],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x49, 0x24, -0x10c],
        's': [0x3, 0x2, 0x6],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x49, 0x24, -0xf8],
        's': [0x3, 0x2, 0x6],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x49, 0x24, -0xe4],
        's': [0x3, 0x2, 0x6],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x31, 0x33, -0x120],
        's': [0x20, 0x1, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x31, 0x33, -0xe4],
        's': [0x20, 0x1, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x24, 0x33, -0x102],
        's': [0x6, 0x1, 0x36],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x3e, 0x33, -0x102],
        's': [0x6, 0x1, 0x36],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0xaa, 0xd, -0xa3],
        's': [0x21, 0x1, 0x18],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc2, 0xd, -0xa9],
        's': [0xf, 0x1, 0x6],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x95, 0xd, -0xa3],
        's': [0x9, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x86, 0xd, -0xa3],
        's': [0x15, 0x1, 0x29],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x82, 0xd, -0xc8],
        's': [0x15, 0x1, 0x21],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x7e, 0xd, -0xe0],
        's': [0x15, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x81, 0xd, -0xf5],
        's': [0x15, 0x1, 0x1b],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xa5, 0xd, -0xb0],
        's': [0xe, 0x1, 0x2],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xcd, 0xd, -0xa7],
        's': [0x7, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x81, 0xd, -0x10d],
        's': [0x12, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x81, 0xd, -0x122],
        's': [0x15, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x81, 0xd, -0x134],
        's': [0x1d, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x8d, 0xd, -0xf7],
        's': [0x3, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x87, 0xd, -0x13d],
        's': [0xd, 0x1, 0x3],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x68, 0xd, -0x139],
        's': [0x15, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x56, 0xd, -0x137],
        's': [0xf, 0x1, 0x1a],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x45, 0xd, -0x139],
        's': [0x13, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x24, 0xd, -0x134],
        's': [0x15, 0x1, 0x1b],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x35, 0xd, -0x136],
        's': [0xd, 0x1, 0x8],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf, 0xd, -0x13e],
        's': [0x15, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0xa, 0xd, -0x136],
        's': [0xb, 0x1, 0x16],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x18, 0xd, -0x12f],
        's': [0x11, 0x1, 0x10],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x15, 0xd, -0x139],
        's': [0xb, 0x1, 0x4],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x1b, 0xd, -0x121],
        's': [0x4, 0x1, 0xc],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x51, 0xd, -0x137],
        's': [0x1b, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x4a, 0xd, -0x12b],
        's': [0x13, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x4a, 0xd, -0x122],
        's': [0xc, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xd, 0x3, -0xea],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.71, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [-0x55, 0xe, -0x137],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.41, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [-0xf, 0xe, -0x137],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.89, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x83, 0xe, -0x136],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.2, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x86, 0xe, -0xaa],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.68, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x85, 0xe, -0xb5],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.07, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xb3, 0xe, -0xaa],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.19, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x85, 0xe, -0xfc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.2, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xf6, 0x20, -0xdd],
        's': [0x5a, 0x2, 0x5],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xbb, 0x20, -0xee],
        's': [0x5, 0x2, 0xa],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xbb, 0x20, -0x12b],
        's': [0x5, 0x2, 0x20],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xbb, 0x20, -0x15f],
        's': [0x5, 0x2, 0xa],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xbc, 0xd, -0x117],
        's': [0xb, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xbb, 0xd, -0x12b],
        's': [0x11, 0x1, 0x1e],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xbb, 0xd, -0x13f],
        's': [0xd, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xb1, 0xd, -0x127],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xbc, 0xd, -0x146],
        's': [0x7, 0x1, 0x4],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xbb, 0xd, -0x15b],
        's': [0xc, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xad, 0xd, -0x15f],
        's': [0x10, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc3, 0xd, -0x15f],
        's': [0x4, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x3d, 0x2a, -0xf2],
        's': [0x79, 0x4, 0x2],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x34, 0xd, -0x12f],
        's': [0x8, 0x30, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xf, 0xc, -0x13c],
        's': [0x35, 0x8, 0x3],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0xf, 0x14, -0x13c],
        's': [0x36, 0x2, 0x4],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0xa, 0xc, -0x136],
        's': [0x3, 0x8, 0x9],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x28, 0xc, -0x136],
        's': [0x3, 0x8, 0x9],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0xa, 0x14, -0x136],
        's': [0x4, 0x2, 0x8],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x28, 0x14, -0x136],
        's': [0x4, 0x2, 0x8],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x0, 0xd, -0x138],
        's': [0x9, 0x1, 0x16],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf, 0xc, -0x136],
        's': [0x33, 0x4, 0x9],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x3b, 0xe, -0x136],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.03, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x59, 0xc, -0x13c],
        's': [0x35, 0x8, 0x3],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x59, 0x14, -0x13c],
        's': [0x36, 0x2, 0x4],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x40, 0xc, -0x136],
        's': [0x3, 0x8, 0x9],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x72, 0xc, -0x136],
        's': [0x3, 0x8, 0x9],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x40, 0x14, -0x136],
        's': [0x4, 0x2, 0x8],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x72, 0x14, -0x136],
        's': [0x4, 0x2, 0x8],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x59, 0xc, -0x136],
        's': [0x33, 0x4, 0x9],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x75, 0xd, -0x13e],
        's': [0x5, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x2d, 0xe, -0x136],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.06, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x0, 0xd, -0x12f],
        's': [0x4, 0x21, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1e, 0xd, -0x12f],
        's': [0x4, 0x21, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xf, 0x2e, -0x12f],
        's': [0x25, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x4a, 0xd, -0x12f],
        's': [0x4, 0x21, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x68, 0xd, -0x12f],
        's': [0x4, 0x21, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x59, 0x2e, -0x12f],
        's': [0x25, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x84, 0x49, -0x121],
        's': [0x11, 0x2, 0x2],
        'c': '#c8c8c8',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x80, 0x41, -0x121],
        's': [0x2, 0xc, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, -0.7],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [0x8b, 0x2a, -0x121],
        's': [0x1, 0x1f, 0x1],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x2
      }, {
        'p': [0x85, 0xc, -0x10d],
        's': [0x1, 0x12, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.18],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [0x85, 0xc, -0x105],
        's': [0x1, 0x12, 0x4],
        'l': 0x1,
        'r': [0x0, 0x0, 0.18],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [-0x5e, 0xd, -0x16e],
        's': [0x8, 0x2d, 0x8],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x5e, 0x34, -0x152],
        's': [0x7, 0x4, 0x30],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x5e, 0x2b, -0x153],
        's': [0x7, 0x4, 0x32],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x5e, 0x2f, -0x152],
        's': [0x4, 0x5, 0x32],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x5b, 0xd, -0x146],
        's': [0x7, 0x27, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x5b, 0xd, -0x15c],
        's': [0x7, 0x27, 0x6],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x5e, 0xd, -0x136],
        's': [0x8, 0x2d, 0x8],
        'c': '#6e6e6e',
        'e': '#18180a',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x5e, 0xd, -0x153],
        's': [0x4, 0x20, 0x34],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x57, 0xd, -0x146],
        's': [0xb, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x56, 0xd, -0x158],
        's': [0xd, 0x1, 0x11],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x57, 0xd, -0x166],
        's': [0xb, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x54, 0xd, -0x175],
        's': [0x10, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x54, 0xd, -0x18a],
        's': [0x14, 0x1, 0x17],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x4f, 0xd, -0x140],
        's': [0x5, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x58, 0xe, -0x164],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.68, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [-0x85, -0x8, -0x146],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.04, 0x0],
        'c': '#4c663e'
      }, {
        'p': [-0xb7, -0x14, -0x165],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, -0.88, 3.14],
        'c': '#4c663e'
      }, {
        'p': [-0xae, -0x9, -0xf5],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, 0.17, 3.14],
        'c': '#4c663e'
      }, {
        'p': [-0xae, -0x1e, -0x127],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, 0.87, 3.14],
        'c': '#4c663e'
      }, {
        'p': [-0x5, 0x17, -0x190],
        's': [0x45, 0x2, 0x5],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x2a, 0x17, -0x19a],
        's': [0x5, 0x2, 0x19],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x20, 0x17, -0x1b0],
        's': [0x5, 0x2, 0x45],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x5, 0xd, -0x1af],
        's': [0x4f, 0x7, 0x43],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xe6, 0xd, -0xd8],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x53, 0xd, -0x175],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x56, 0xe, -0x16d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.38, 3.13],
        'c': '#85aa6c'
      }, {
        'p': [-0x8b, 0xd, -0x175],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x53, 0xd, -0x1e1],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x53, 0xd, -0x20b],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x53, 0xd, -0x1a9],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x3, 0xd, -0x1d1],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x53, 0xd, -0x1d1],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x53, 0xd, -0x20b],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x3, 0xd, -0x20b],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x6f, 0x43, -0x1c0],
        's': [0x40, 0x4, 0x9e],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x6f, 0x0, -0x1c0],
        's': [0x3f, 0x14, 0x9d],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x3b, 0x0, -0x1ec],
        's': [0x31, 0x14, 0x3d],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x6f, 0x47, -0x1c0],
        's': [0x3c, 0x4, 0x9a],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x6f, 0x4b, -0x1c0],
        's': [0x40, 0x4, 0x9e],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x2d, 0x31, -0x1f0],
        's': [0x50, 0x4, 0x3e],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x2d, 0x35, -0x1f0],
        's': [0x50, 0x4, 0x3a],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [-0x2d, 0x39, -0x1f0],
        's': [0x50, 0x4, 0x3e],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x28, 0x43, -0x1ee],
        's': [0x5e, 0x4, 0x42],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x28, 0x4b, -0x1ee],
        's': [0x5e, 0x4, 0x42],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x28, 0x47, -0x1ee],
        's': [0x5a, 0x4, 0x3e],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x28, 0xd, -0x1d1],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x11, 0x15, -0x1d8],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x11, 0x2d, -0x1d8],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x46, 0x15, -0x1d8],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x46, 0x2d, -0x1d8],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x2b, 0x15, -0x1d8],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [-0x2b, 0x2d, -0x1d8],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x44, -0x8, -0x222],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0],
        'c': '#4c663e'
      }, {
        'p': [-0x13, -0x12, -0x223],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, -1.23, 3.14],
        'c': '#4c663e'
      }, {
        'p': [0x13, 0x4f, -0x1cb],
        's': [0x2, 0x2, 0x15],
        'c': '#c8c8c8',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x13, 0x47, -0x1cf],
        's': [0x1, 0xe, 0x2],
        'l': 0x1,
        'r': [0.87, 0x0, 0x0],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [-0x32, 0x1d, -0x7c],
        's': [0x1, 0x15, 0x1],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x2
      }, {
        'p': [-0x4b, 0x2e, -0x18f],
        's': [0x9, 0x1, 0x1a],
        'pe': 0x1,
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [-0x4b, 0x2f, -0x183],
        's': [0x1, 0x28, 0x1],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x2
      }, {
        'p': [-0x4b, 0x2f, -0x19b],
        's': [0x1, 0x27, 0x1],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x2
      }, {
        'p': [-0x49, 0x2f, -0x189],
        's': [0x5, 0x1, 0x5],
        'l': 0x1,
        'c': '#5f3232',
        't': 0x5
      }, {
        'p': [-0x46, 0x2b, -0x189],
        's': [0x1, 0x5, 0x5],
        'l': 0x1,
        'c': '#5f3232',
        't': 0x5
      }, {
        'p': [-0x54, 0x56, -0x19b],
        's': [0x16, 0x2, 0x2],
        'c': '#c8c8c8',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x5e, 0x4f, -0x19b],
        's': [0x2, 0x7, 0x2],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [-0x5e, 0x4f, -0x183],
        's': [0x2, 0x7, 0x2],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [-0x54, 0x56, -0x183],
        's': [0x16, 0x2, 0x2],
        'c': '#c8c8c8',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [-0x5e, 0x4f, -0x183],
        's': [0x2, 0x10, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, -1.05],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [-0x5e, 0x4f, -0x19b],
        's': [0x2, 0x10, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, -1.05],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [0x7, 0x15, -0x1c6],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x7, 0x21, -0x1c6],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x20, 0x15, -0x19a],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [-0x14, 0x15, -0x19a],
        's': [0xc, 0xc, 0xc],
        'i': 0x8,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x1a, 0x1b, -0x19a],
        's': [0x18, 0x7, 0xc],
        'l': 0x1,
        'c': '#3964a2',
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [0xf2, 0xd, -0x128],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x4b, 0xd, -0x1bc],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x41, 0x15, -0x1da],
        's': [0x2c, 0x1, 0x1f],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x22, 0x15, -0x1da],
        's': [0x12, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x8, 0x15, -0x1da],
        's': [0x2e, 0x1, 0x27],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x14, 0x15, -0x1da],
        's': [0xa, 0x1, 0x1e],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x18, 0x15, -0x1bd],
        's': [0xc, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a, 0x15, -0x1ae],
        's': [0x9, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a, 0x15, -0x1a2],
        's': [0xb, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x11, 0x15, -0x196],
        's': [0x1b, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x2, 0x15, -0x196],
        's': [0xb, 0x1, 0x8],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x18, 0x15, -0x19b],
        's': [0x21, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x13, 0x15, -0x1a6],
        's': [0xe, 0x1, 0x4],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf, 0x15, -0x19f],
        's': [0xb, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x6, 0x15, -0x1c2],
        's': [0x18, 0x1, 0x9],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x4b, 0x15, -0x1c0],
        's': [0xc, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x40, 0x15, -0x1c7],
        's': [0xa, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x4d, 0x15, -0x1b0],
        's': [0x6, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x23, 0xd, -0x194],
        's': [0x1e, 0x1, 0x17],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x7, 0xd, -0x194],
        's': [0x1a, 0x1, 0x1d],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x17, 0xd, -0x196],
        's': [0x22, 0x1, 0x1d],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x27, 0xd, -0x1af],
        's': [0xc, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x2a, 0xd, -0x1c4],
        's': [0x10, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1e, 0xd, -0x186],
        's': [0xe, 0x1, 0x3],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x38, 0xd, -0x1cc],
        's': [0xc, 0x1, 0xc],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x47, 0xd, -0x1c4],
        's': [0x12, 0x1, 0x21],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x4f, 0xd, -0x1a3],
        's': [0x15, 0x1, 0x21],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x50, 0xd, -0x188],
        's': [0xb, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x4a, 0xd, -0x174],
        's': [0x13, 0x1, 0x14],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x5c, 0xd, -0x1be],
        's': [0x1c, 0x27, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x60, 0xd, -0x1a0],
        's': [0x1c, 0x22, 0x1d],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x61, 0xd, -0x17b],
        's': [0x24, 0x2c, 0x2e],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x7c, 0xd, -0x177],
        's': [0x23, 0x24, 0x1f],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x9e, 0xd, -0x175],
        's': [0x28, 0x29, 0x1f],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x8f, 0xd, -0x172],
        's': [0x17, 0x1d, 0x21],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0xba, -0x9, -0x175],
        's': [0x1a, 0x3a, 0x22],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0xbc, -0x9, -0x191],
        's': [0x1a, 0x32, 0x1b],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0xb2, -0x9, -0x1af],
        's': [0x22, 0x38, 0x28],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0xc7, -0x9, -0x1d4],
        's': [0x31, 0x32, 0x28],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0xef, -0x9, -0x1d6],
        's': [0x1f, 0x2a, 0x28],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0xe2, -0x9, -0x1d0],
        's': [0x19, 0x23, 0x28],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x9e, 0xb, -0x143],
        's': [0x3a, 0x2, 0x4a],
        'c': '#9d9d9d',
        't': 0x1
      }, {
        'p': [0x61, 0x39, -0x17b],
        's': [0x24, 0x2, 0x2e],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x60, 0x2f, -0x1a0],
        's': [0x1c, 0x2, 0x1d],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x5c, 0x34, -0x1be],
        's': [0x1c, 0x2, 0x24],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x7c, 0x31, -0x177],
        's': [0x23, 0x2, 0x1f],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x9e, 0x36, -0x175],
        's': [0x28, 0x2, 0x1f],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1,
        'ab': 0x1
      }, {
        'p': [0x91, 0xd, -0x164],
        's': [0x28, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x63, 0xd, -0x162],
        's': [0x34, 0x1, 0x10],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x6c, 0xd, -0x159],
        's': [0x19, 0x1, 0x2],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x8f, 0x2a, -0x172],
        's': [0x17, 0x2, 0x21],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0xba, 0x31, -0x175],
        's': [0x1a, 0x2, 0x22],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [-0x3d, 0x16, -0x1da],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.85, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [-0x4b, 0x16, -0x1cf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.16, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [-0x23, 0x16, -0x1d9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.15, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [-0x1a, 0x16, -0x1da],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.37, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [-0x9, 0x16, -0x1d9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.55, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x11, 0x16, -0x1cb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 1.07, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x18, 0x16, -0x198],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.02, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [-0x8, 0x16, -0x198],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.42, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x28, 0xe, -0x1c8],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.37, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x4a, 0xe, -0x1b4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.33, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x4d, 0xe, -0x196],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.37, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x7f, 0xe, -0x164],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.33, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xb4, 0xe, -0x160],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.37, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x10a, 0xd, -0xd5],
        's': [0x7, 0x39, 0x7],
        'v': 0x1,
        'e': '#18180a'
      }, {
        'p': [0x10a, 0xd, -0xd5],
        's': [0x8, 0x39, 0x8],
        'v': 0x1,
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x48, 0xd, -0x1ca],
        's': [0x6, 0x29, 0x6],
        'v': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x48, 0xd, -0x1ca],
        's': [0x7, 0x29, 0x7],
        'v': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x108, 0xd, -0xe4],
        's': [0x19, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x11d, 0xd, -0xe6],
        's': [0x11, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x10a, -0x9, -0x1e0],
        's': [0x23, 0x3b, 0x2e],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0xbc, 0x29, -0x191],
        's': [0x1a, 0x2, 0x1b],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0xb2, 0x2f, -0x1af],
        's': [0x22, 0x2, 0x28],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0xc7, 0x29, -0x1d4],
        's': [0x31, 0x2, 0x28],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x80, -0x16, -0x1bf],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, 0x0, 3.14],
        'c': '#4c663e'
      }, {
        'p': [0x82, -0x1b, -0x1e7],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.13, 1.4, 3.13],
        'c': '#4c663e'
      }, {
        'p': [0xb5, -0x4, -0x1f2],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 0.34, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0xdf, -0x27, -0x201],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.41, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x106, -0x1c, -0x23e],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.36, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0xa9, -0x24, -0x223],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.23, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x87, -0x25, -0x20a],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, 1.41, -3.14],
        'c': '#4c663e'
      }, {
        'p': [0xe2, 0x1a, -0x1d0],
        's': [0x19, 0x2, 0x28],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0xef, 0x21, -0x1d6],
        's': [0x1f, 0x2, 0x28],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x10a, 0x32, -0x1e0],
        's': [0x23, 0x2, 0x2e],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x182, 0x0, -0xb4],
        's': [0x8, 0x38, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x2b, 0x0, -0x1d8],
        's': [0x8, 0x2d, 0x8],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x11, 0x0, -0x1d8],
        's': [0x8, 0x2d, 0x8],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x46, 0x0, -0x1d8],
        's': [0x8, 0x2d, 0x8],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x26, 0x3b, -0x32],
        's': [0x12, 0x1, 0x6],
        'i': 0x1e,
        'r': [1.57, 0x0, 0x0],
        'st': 'Map\x20By\x20CrispyCrust',
        'sb': '#ffffff',
        'bv': 0x1,
        'sf': 0x4a,
        'sa': 0x1
      }, {
        'p': [0x67, 0xd, -0x162],
        's': [0x4, 0x25, 0x4],
        'c': '#939393',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x59, 0xd, -0x162],
        's': [0x4, 0x25, 0x4],
        'c': '#939393',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x59, 0x32, -0x14b],
        's': [0x4, 0x2, 0x32],
        'c': '#939393',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x67, 0x32, -0x14b],
        's': [0x4, 0x2, 0x32],
        'c': '#939393',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x60, 0x34, -0x13f],
        's': [0x11, 0x1, 0xf],
        'pe': 0x1,
        'c': '#414f91',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x57, 0x2b, -0x13f],
        's': [0x1, 0xa, 0xf],
        'pe': 0x1,
        'c': '#414f91',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x69, 0x2d, -0x13f],
        's': [0x1, 0x8, 0xf],
        'pe': 0x1,
        'c': '#414f91',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x59, 0x29, -0x161],
        's': [0x2, 0x10, 0x2],
        'l': 0x1,
        'r': [0.87, 0x0, 0x0],
        'c': '#939393',
        't': 0x2
      }, {
        'p': [0x67, 0x29, -0x161],
        's': [0x2, 0x10, 0x2],
        'l': 0x1,
        'r': [0.87, 0x0, 0x0],
        'c': '#939393',
        't': 0x2
      }, {
        'p': [0xf0, 0x1c, -0xdd],
        's': [0xe, 0x4, 0x4],
        'e': '#18180a'
      }, {
        'p': [0xd9, 0xd, -0xdd],
        's': [0x20, 0x13, 0x4],
        'e': '#18180a'
      }, {
        'p': [0x10e, 0xd, -0xdd],
        's': [0x2e, 0x13, 0x4],
        'e': '#18180a'
      }, {
        'p': [0x14d, 0x2f, -0x74],
        's': [0x5, 0x9, 0x33],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x125, 0x0, -0x6f],
        's': [0x4c, 0x26, 0x6e],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x135, 0x0, -0xb7],
        's': [0x28, 0x42, 0x24],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x127, 0x26, -0x37],
        's': [0x46, 0x4, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14e, 0x8, -0x85],
        's': [0x3, 0x22, 0x46],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x154, 0x2, -0x6f],
        's': [0x1, 0x17, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': '#a7a7a7',
        't': 0x2
      }, {
        'p': [0x16b, 0x0, -0xb1],
        's': [0x37, 0x8, 0x4],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x19b, 0x0, -0x5],
        's': [0x94, 0x8, 0x4],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x14d, 0x0, -0x9],
        's': [0x8, 0x8, 0x7],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x166, 0x0, -0xb5],
        's': [0x31, 0xc, 0x2],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x19e, 0x23, -0xb3],
        's': [0x20, 0x15, 0x5],
        'c': '#ffffff',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x87, -0xf, -0x19b],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.18, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0xa7, -0xe, -0x1d8],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x7d, 0x22, -0x187],
        's': [0x2, 0x8, 0x3],
        'c': '#939393',
        't': 0x2
      }, {
        'p': [0x7d, 0x22, -0x1ad],
        's': [0x2, 0x8, 0x2],
        'c': '#939393',
        't': 0x2
      }, {
        'p': [0x9a, -0x26, -0x197],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 1.39, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x60, 0x33, -0x162],
        's': [0xa, 0x1, 0x2],
        'c': '#939393',
        't': 0x2
      }, {
        'p': [0x60, 0x33, -0x134],
        's': [0xa, 0x1, 0x2],
        'c': '#939393',
        't': 0x2
      }, {
        'p': [0x60, 0x33, -0x14a],
        's': [0xa, 0x1, 0x2],
        'c': '#939393',
        't': 0x2
      }, {
        'p': [0x60, 0x33, -0x13e],
        's': [0xa, 0x1, 0x2],
        'c': '#939393',
        't': 0x2
      }, {
        'p': [0x60, 0x33, -0x156],
        's': [0xa, 0x1, 0x2],
        'c': '#939393',
        't': 0x2
      }, {
        'p': [0xf, 0x1f, -0x12f],
        's': [0x5, 0x1, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0xf, 0x22, -0x12f],
        's': [0x5, 0x1, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xc, 0x1f, -0x12f],
        's': [0x1, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x12, 0x1f, -0x12f],
        's': [0x1, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xf, 0x12, -0x134],
        's': [0x5, 0xf, 0x1],
        'l': 0x1,
        'c': '#2787ca',
        'o': 0.7000000000000001,
        't': 0x8,
        'ts': 0x5,
        'td': '1',
        'ab': 0x1
      }, {
        'p': [0xf, 0x10, -0x136],
        's': [0x2f, 0x2, 0xa],
        'l': 0x1,
        'c': '#2787ca',
        'o': 0.7000000000000001,
        't': 0x8,
        'ts': -0.1,
        'td': '1',
        'ab': 0x1
      }, {
        'p': [0x59, 0x10, -0x136],
        's': [0x2f, 0x2, 0xa],
        'l': 0x1,
        'c': '#2787ca',
        'o': 0.7000000000000001,
        't': 0x8,
        'ts': -0.1,
        'td': '1',
        'ab': 0x1
      }, {
        'p': [0xf, 0x20, -0x12f],
        's': [0x5, 0x2, 0x8],
        'c': '#000000',
        'e': '#18180a'
      }, {
        'p': [0x59, 0x1f, -0x12f],
        's': [0x5, 0x1, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x59, 0x22, -0x12f],
        's': [0x5, 0x1, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x56, 0x1f, -0x12f],
        's': [0x1, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x5c, 0x1f, -0x12f],
        's': [0x1, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x59, 0x12, -0x134],
        's': [0x5, 0xf, 0x1],
        'l': 0x1,
        'c': '#2787ca',
        'o': 0.7000000000000001,
        't': 0x8,
        'ts': 0x5,
        'td': '1',
        'ab': 0x1
      }, {
        'p': [0x59, 0x20, -0x12f],
        's': [0x5, 0x2, 0x8],
        'c': '#000000',
        'e': '#18180a'
      }, {
        'p': [0x182, 0x1b, -0x74],
        's': [0xa, 0x4, 0x6],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x185, 0x1b, -0x79],
        's': [0x4, 0x2, 0x4],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x182, 0x37, -0x76],
        's': [0xa, 0x4, 0xa],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x182, 0x35, -0x73],
        's': [0xa, 0x2, 0x4],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x57, 0x2a, -0x153],
        's': [0x1, 0xb, 0x16],
        'pe': 0x1,
        'c': '#612424',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x69, 0x2b, -0x153],
        's': [0x1, 0xa, 0x16],
        'pe': 0x1,
        'c': '#612424',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x60, 0x34, -0x153],
        's': [0x11, 0x1, 0x16],
        'pe': 0x1,
        'c': '#612424',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x19b, 0x42, -0xaa],
        's': [0x34, 0x5, 0x1a],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x175, 0x42, -0xa2],
        's': [0x18, 0x5, 0xa],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x19c, 0x3d, -0xa7],
        's': [0x2e, 0x5, 0x1c],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x178, 0x3d, -0x9f],
        's': [0x1a, 0x5, 0xc],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x190, 0x38, -0xa9],
        's': [0xe, 0x5, 0x10],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x173, 0x8, -0xb3],
        's': [0x1a, 0x2d, 0x5],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x15b, 0x8, -0xb3],
        's': [0x16, 0x2a, 0x5],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x14c, 0x2f, -0xa0],
        's': [0x7, 0x5, 0x25],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x152, 0x2a, -0xa3],
        's': [0x8, 0x6, 0x1c],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x175, 0x2a, -0xae],
        's': [0x18, 0x6, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x15d, 0x2, -0x9f],
        's': [0x4, 0x2, 0x6],
        'l': 0x1,
        'r': [0x0, 0.35, 0x0],
        'c': '#8c8c8c',
        'e': '#18180a'
      }, {
        'p': [0x176, 0x2, -0x9f],
        's': [0x7, 0x3, 0x5],
        'l': 0x1,
        'r': [0x0, 0.87, 0x0],
        'c': '#8c8c8c',
        'e': '#18180a'
      }, {
        'p': [0x18e, 0x2, -0x4a],
        's': [0x4, 0x2, 0x5],
        'l': 0x1,
        'r': [-3.14, 0.17, -3.14],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x161, 0x2, -0x85],
        's': [0x5, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, 0.52, 0x0],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x168, 0x38, -0x95],
        's': [0xa, 0x5, 0x4],
        'c': '#8c8c8c',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1a3, 0x2, -0x202],
        's': [0xf, 0xe, 0x4],
        'e': '#18180a'
      }, {
        'p': [0x174, 0x0, -0x24d],
        's': [0x6e, 0xa, 0x35],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x138, 0x10, -0x202],
        's': [0x46, 0x2, 0x5],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x19e, 0x10, -0x202],
        's': [0x26, 0x2, 0x5],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0xf8, 0x0, -0x18d],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xf8, 0x0, -0x121],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14a, 0x0, -0x121],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14a, 0x0, -0x149],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x152, 0x0, -0x151],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x176, 0x0, -0x151],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14a, 0x0, -0x173],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x152, 0x0, -0x16b],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14a, 0x0, -0x18d],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x176, 0x0, -0x16b],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x0, -0x173],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1a3, 0x0, -0x15e],
        's': [0x8, 0x36, 0x20],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1a2, 0x0, -0x151],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1a2, 0x0, -0x16b],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x0, -0x149],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x18c, 0x29, -0x15e],
        's': [0x26, 0xd, 0x20],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1aa, 0x0, -0x127],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1a2, 0x0, -0x11f],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x188, 0x0, -0x11f],
        's': [0x9, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x188, 0x0, -0xf9],
        's': [0x9, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x204, 0x0, -0xf9],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1b1, 0x0, -0xf9],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1de, 0x0, -0xf9],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xf8, 0x0, -0x156],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x0, -0x18d],
        's': [0x8, 0x36, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1c4, -0x9, -0x19a],
        's': [0x1a, 0x33, 0x22],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x1c2, -0x9, -0x1b6],
        's': [0x1c, 0x2e, 0x20],
        'c': '#595959',
        'e': '#11110c',
        'bo': 0x1
      }, {
        'p': [0x1c2, 0x25, -0x1b6],
        's': [0x1c, 0x2, 0x20],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x1c4, 0x2a, -0x19a],
        's': [0x1a, 0x2, 0x22],
        'c': '#8e8e8e',
        't': 0x8,
        'bo': 0x1
      }, {
        'p': [0x121, 0x36, -0x157],
        's': [0x5a, 0x4, 0x74],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x121, 0x3a, -0x157],
        's': [0x56, 0x4, 0x70],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x121, 0x3e, -0x157],
        's': [0x5a, 0x4, 0x74],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x17a, 0x36, -0x15e],
        's': [0x58, 0x4, 0x22],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1d7, 0x36, -0x143],
        's': [0x62, 0x4, 0x9c],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x195, 0x36, -0x10c],
        's': [0x23, 0x4, 0x2e],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x197, 0x3a, -0x10c],
        's': [0x23, 0x4, 0x2a],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1d7, 0x3a, -0x143],
        's': [0x5e, 0x4, 0x98],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x17a, 0x3a, -0x15e],
        's': [0x5c, 0x4, 0x1e],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x17a, 0x3e, -0x15e],
        's': [0x58, 0x4, 0x22],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1d7, 0x3e, -0x143],
        's': [0x62, 0x4, 0x9c],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x195, 0x3e, -0x10c],
        's': [0x23, 0x4, 0x2e],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x121, 0x0, -0x157],
        's': [0x59, 0xc, 0x73],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x163, 0x0, -0x15e],
        's': [0x2d, 0xc, 0x21],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x18c, 0x25, -0x151],
        's': [0x24, 0x4, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x179, 0x25, -0x15e],
        's': [0x2, 0x4, 0x12],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x19f, 0x25, -0x15e],
        's': [0x2, 0x4, 0x12],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x196, 0x0, -0x10c],
        's': [0x21, 0xc, 0x2d],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x1d7, 0x0, -0x143],
        's': [0x61, 0xc, 0x9b],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x185, 0x0, -0x10c],
        's': [0x2, 0xc, 0x22],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x1a3, 0x0, -0x15e],
        's': [0x9, 0xc, 0x20],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x18c, 0x2, -0xf6],
        's': [0x1a, 0x1, 0x1d],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x185, 0x2, -0x117],
        's': [0x13, 0x1, 0x25],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a3, 0x2, -0x12a],
        's': [0x13, 0x1, 0x17],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x194, 0x2, -0x125],
        's': [0xb, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a8, 0x2, -0x13c],
        's': [0x13, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a8, 0x2, -0x15d],
        's': [0x1e, 0x1, 0x35],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x197, 0x2, -0x166],
        's': [0x4, 0x1, 0x18],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x17a, 0x2, -0x11c],
        's': [0x3, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x189, 0x2, -0xe6],
        's': [0xd, 0x1, 0x3],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1ac, 0x2, -0x189],
        's': [0x17, 0x1, 0x23],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a4, 0x2, -0x201],
        's': [0x1e, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x19f, 0x2, -0x17f],
        's': [0x3, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1b1, 0x2, -0x1ac],
        's': [0xf, 0x1, 0x23],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x18d, 0x2, -0x202],
        's': [0x10, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x14a, 0x2, -0x20d],
        's': [0x18, 0x1, 0x9],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a7, 0x2, -0x1b6],
        's': [0x5, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x174, 0x0, -0x231],
        's': [0x1a, 0x8, 0x3],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x174, 0x0, -0x22e],
        's': [0x1a, 0x6, 0x3],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x174, 0x0, -0x22b],
        's': [0x1a, 0x4, 0x3],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x194, 0x9, -0x233],
        's': [0x26, 0x2, 0x2],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x182, 0x2, -0x233],
        's': [0x2, 0x7, 0x2],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1a6, 0x2, -0x233],
        's': [0x2, 0x7, 0x2],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x166, 0x2, -0x233],
        's': [0x2, 0x7, 0x2],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x140, 0x2, -0x233],
        's': [0x2, 0x7, 0x2],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x153, 0x9, -0x233],
        's': [0x28, 0x2, 0x2],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1aa, 0x0, -0x1c8],
        's': [0x8, 0x29, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x0, -0x248],
        's': [0x8, 0x29, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1a2, 0x0, -0x250],
        's': [0x8, 0x29, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x144, 0x0, -0x250],
        's': [0x8, 0x29, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x13c, 0x0, -0x248],
        's': [0x8, 0x29, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x13c, 0x0, -0x1c8],
        's': [0x8, 0x29, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x129, 0x29, -0x20f],
        's': [0x2e, 0x4, 0x96],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x173, 0x29, -0x24e],
        's': [0x66, 0x4, 0x3a],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x129, 0x2d, -0x20f],
        's': [0x2a, 0x4, 0x92],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x173, 0x2d, -0x24e],
        's': [0x6a, 0x4, 0x36],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x129, 0x31, -0x217],
        's': [0x2e, 0x4, 0xa6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x173, 0x31, -0x24e],
        's': [0x66, 0x4, 0x3a],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1a4, 0x2, -0x210],
        's': [0xd, 0x1, 0x11],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a4, 0x2, -0x230],
        's': [0x26, 0x1, 0x11],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a4, 0x2, -0x220],
        's': [0x9, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x18b, 0x2, -0x230],
        's': [0xc, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x174, 0x2, -0x22c],
        's': [0x22, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x16f, 0x2, -0x223],
        's': [0x10, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x140, 0x2, -0x231],
        's': [0x16, 0x1, 0x11],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x15c, 0x2, -0x230],
        's': [0xe, 0x1, 0x9],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x150, 0x2, -0x230],
        's': [0xa, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x140, 0x2, -0x21d],
        's': [0xc, 0x1, 0x17],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x141, 0x2, -0x201],
        's': [0x19, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x156, 0x2, -0x203],
        's': [0x11, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x160, 0x2, -0x202],
        's': [0x3, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x199, 0x2, -0x20c],
        's': [0x9, 0x1, 0x9],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x19d, 0x2, -0x225],
        's': [0x5, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x112, 0x2, -0x205],
        's': [0x23, 0x1, 0x20],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x12c, 0x2, -0x205],
        's': [0x11, 0x1, 0x14],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x11d, 0xd, -0xe5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x112, 0xe, -0xe3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.4, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xce, 0xe, -0xe3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.69, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xc1, 0xe, -0xf0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.18, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xc1, 0xe, -0x125],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.87, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xc1, 0xe, -0x160],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xe2, 0x2, -0x1c8],
        's': [0x23, 0x1, 0x24],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xfa, 0x2, -0x1c4],
        's': [0xd, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc8, 0x2, -0x1b6],
        's': [0x11, 0x1, 0x16],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc8, 0x2, -0x196],
        's': [0xb, 0x1, 0x1a],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xc6, 0x2, -0x1a7],
        's': [0xb, 0x1, 0x8],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xd9, 0x2, -0x1b4],
        's': [0x11, 0x1, 0x4],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x107, 0x2, -0x1c8],
        's': [0xd, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf9, 0xd, -0x12b],
        's': [0x15, 0x1, 0x27],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf5, 0xd, -0x143],
        's': [0xb, 0x1, 0x9],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf5, 0xd, -0x152],
        's': [0x8, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xed, 0xd, -0x128],
        's': [0x3, 0x1, 0x1a],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x111, 0xd, -0x11c],
        's': [0x1b, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x4b, 0xd, -0x1c2],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xf2, 0xd, -0x12e],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xf2, 0xe, -0x135],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xfd, 0x2, -0x18e],
        's': [0x1d, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x11e, 0x2, -0x192],
        's': [0x25, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x148, 0x2, -0x180],
        's': [0x15, 0x1, 0x2f],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x137, 0x2, -0x192],
        's': [0xd, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x15b, 0x2, -0x174],
        's': [0x11, 0x1, 0x11],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x172, 0x2, -0x16a],
        's': [0x1d, 0x1, 0x1c],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x156, 0x2, -0x185],
        's': [0x7, 0x1, 0x11],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x121, 0x2, -0x19c],
        's': [0x18, 0x1, 0x6],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xf9, 0x2, -0x197],
        's': [0xd, 0x1, 0x3],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x170, 0x2, -0x153],
        's': [0x1d, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x153, 0x2, -0x14c],
        's': [0x1d, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x14e, 0x2, -0x13c],
        's': [0x17, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x14a, 0x2, -0x127],
        's': [0x13, 0x1, 0x1c],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x16b, 0x2, -0x149],
        's': [0x13, 0x1, 0x2],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x182, 0x2, -0x16d],
        's': [0x3, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x15d, 0x2, -0x17e],
        's': [0x7, 0x1, 0x3],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x16b, 0x2, -0x179],
        's': [0xf, 0x1, 0x2],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a1, 0x3, -0x173],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.7, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x1a1, 0x3, -0x127],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.52, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x1a1, 0x3, -0x148],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.35, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x15c, 0x3, -0x149],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.17, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x153, 0x3, -0x148],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.53, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x1ae, 0x3, -0x195],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.13, -1.4, 3.13],
        'c': '#85aa6c'
      }, {
        'p': [0x1ab, 0x3, -0x1be],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.04, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x120, 0x3, -0x1fc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.71, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xf3, 0x3, -0x1be],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.54, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xc8, 0x3, -0x1bb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.19, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xd2, 0x3, -0x1bc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.86, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xc6, 0x3, -0x1a3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.06, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x129, 0x3, -0x195],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.71, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x11f, 0x2, -0x197],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x11f, 0xe, -0x197],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x152, 0x3, -0x173],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.21, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x170, 0x3, -0x173],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.41, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x163, 0x3, -0x22e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.54, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x186, 0x3, -0x22e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.06, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x1a2, 0x3, -0x22e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.38, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x1a2, 0x3, -0x208],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x142, 0x3, -0x209],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.34, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x143, 0x3, -0x22f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x14e, 0xa, -0x23a],
        's': [0x9, 0x4, 0x9],
        'l': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x14e, 0x25, -0x23a],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14e, -0xb, -0x23a],
        's': [0x8, 0x30, 0x8],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x188, 0xa, -0x23a],
        's': [0x9, 0x4, 0x9],
        'l': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x188, 0x25, -0x23a],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x188, -0xb, -0x23a],
        's': [0x8, 0x30, 0x8],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x160, 0xa, -0x23a],
        's': [0x9, 0x4, 0x9],
        'l': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x160, 0x25, -0x23a],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x160, -0xb, -0x23a],
        's': [0x8, 0x30, 0x8],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x19a, 0xa, -0x23a],
        's': [0x9, 0x4, 0x9],
        'l': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x19a, 0x25, -0x23a],
        's': [0x9, 0x4, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x19a, -0xb, -0x23a],
        's': [0x8, 0x30, 0x8],
        'c': '#707070',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x169, 0xa, -0x24e],
        's': [0x4, 0x16, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x17f, 0xa, -0x24e],
        's': [0x4, 0x16, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x174, 0x20, -0x24e],
        's': [0x1b, 0x4, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x173, 0x2, -0x24e],
        's': [0x17, 0x1e, 0x3],
        'c': '#b9b9b9',
        't': 0x2
      }, {
        'p': [0x145, -0x7, -0x283],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.36, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x1af, -0xe, -0x283],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, -1.04, 3.14],
        'c': '#4c663e'
      }, {
        'p': [0x1e3, -0xe, -0x1f2],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, -1.04, 3.14],
        'c': '#4c663e'
      }, {
        'p': [0x1f5, -0x19, -0x1e9],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, 1.05, -3.14],
        'c': '#4c663e'
      }, {
        'p': [0x211, -0x1e, -0x19e],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, 1.05, -3.14],
        'c': '#4c663e'
      }, {
        'p': [0x1e2, -0x1f, -0x257],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, 0.36, -3.14],
        'c': '#4c663e'
      }, {
        'p': [0x17a, -0x14, -0x293],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, -0.86, 3.14],
        'c': '#4c663e'
      }, {
        'p': [0x10e, -0x15, -0x283],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.41, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x164, -0x17, -0x180],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.06, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x14d, 0x2, -0x20a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x165, 0x0, -0x17f],
        's': [0x5, 0x23, 0x5],
        'v': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x165, 0x0, -0x17f],
        's': [0x6, 0x23, 0x6],
        'v': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x19d, 0x21, -0xea],
        's': [0x1, 0x21, 0x1],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x2
      }, {
        'p': [0x19d, 0x42, -0xf3],
        's': [0x2, 0x2, 0x15],
        'c': '#c8c8c8',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x19d, 0x3a, -0xf7],
        's': [0x1, 0xe, 0x2],
        'l': 0x1,
        'r': [0.87, 0x0, 0x0],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [0x110, 0x42, -0x191],
        's': [0x2, 0x2, 0x14],
        'c': '#c8c8c8',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x110, 0x39, -0x18e],
        's': [0x1, 0xd, 0x2],
        'l': 0x1,
        'r': [-0.7, 0x0, 0x0],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [0x110, 0x27, -0x19a],
        's': [0x1, 0x1b, 0x1],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x2
      }, {
        'p': [0x18c, 0x25, -0x16b],
        's': [0x24, 0x4, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x19b, 0x25, -0x15e],
        's': [0x6, 0x4, 0x14],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x17d, 0x25, -0x15e],
        's': [0x6, 0x4, 0x14],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x18b, 0x28, -0x15e],
        's': [0x1a, 0x1, 0x14],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x111, 0xd, -0x11b],
        's': [0x3, 0xf, 0x1],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': '#a7a7a7',
        't': 0x2
      }, {
        'p': [0x10a, 0xd, -0x11b],
        's': [0x3, 0xf, 0x1],
        'l': 0x1,
        'r': [-0.17, 0x0, 0x0],
        'c': '#a7a7a7',
        't': 0x2
      }, {
        'p': [-0x2a, 0x2, -0x4b],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': 0x0
      }, {
        'p': [0x174, 0x2, -0x211],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'l': 0x1,
        'tm': '1'
      }, {
        'p': [-0x5, 0x15, -0x1b0],
        's': [0x44, 0x32, 0x39],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0x1c9, 0x2, -0x43],
        's': [0x2f, 0x23, 0x77],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0x173, 0x2, -0x21b],
        's': [0x64, 0x23, 0x2c],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0x3c, 0x2, -0xcb],
        's': [0x67, 0x23, 0x47],
        'i': 0xe,
        'l': 0x1
      }, {
        'p': [0x60, 0x0, -0x90],
        's': [0x2f, 0x22, 0x2c],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x33, 0x2, -0xf0],
        's': [0x22, 0x1, 0x12],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x4f, 0x2, -0xf0],
        's': [0x16, 0x1, 0x17],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x4d, 0x2, -0xd1],
        's': [0x14, 0x1, 0x6],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x4c, 0x2, -0xd8],
        's': [0xf, 0x1, 0x8],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x4b, 0x2, -0xcd],
        's': [0xb, 0x1, 0x2],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x66, 0x2, -0xf0],
        's': [0x18, 0x1, 0x2d],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x6a, 0x2, -0xd4],
        's': [0xf, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x6c, 0x2, -0xc4],
        's': [0x9, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x68, 0x2, -0xaf],
        's': [0x13, 0x1, 0x15],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x51, 0x2, -0xa3],
        's': [0x1b, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x58, 0x2, -0xaf],
        's': [0xd, 0x1, 0x5],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x5, 0x2, -0xc7],
        's': [0xc, 0x1, 0x2],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x16, 0x2, -0xdd],
        's': [0x6, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x3c, 0x0, -0xf0],
        's': [0x69, 0xc, 0x1],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x71, 0x0, -0xca],
        's': [0x2, 0xc, 0x4b],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x60, 0x0, -0xa6],
        's': [0x20, 0xc, 0x1],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x69, 0x2, -0xae],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x6c, 0x2, -0xb7],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x6c, 0x2, -0xbd],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x6b, 0x3, -0xea],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.86, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x6c, 0x3, -0xdf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.36, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x6c, 0x3, -0xc4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.51, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x5e, 0x3, -0xab],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.21, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [-0x37, -0x23, -0x23a],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x1ef, -0x29, -0x1b7],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, -0.34, -3.14],
        'c': '#4c663e'
      }, {
        'p': [0x42, 0x2, -0xd3],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x36, 0x2, -0xd3],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x18e, 0x2, -0x202],
        's': [0x5, 0xe, 0x4],
        'e': '#18180a'
      }, {
        'p': [0x196, 0x2, -0x202],
        's': [0xb, 0x3, 0x4],
        'e': '#18180a'
      }, {
        'p': [0x196, 0xe, -0x202],
        's': [0xb, 0x2, 0x4],
        'e': '#18180a'
      }, {
        'p': [0x196, 0x5, -0x200],
        's': [0x5, 0xb, 0x1],
        'pe': 0x1,
        'c': '#acaaaa',
        't': 0x2
      }, {
        'p': [0x192, 0x4, -0x200],
        's': [0x3, 0xb, 0x1],
        'pe': 0x1,
        'c': '#acaaaa',
        't': 0x2
      }, {
        'p': [0x19a, 0x4, -0x200],
        's': [0x3, 0xb, 0x1],
        'pe': 0x1,
        'c': '#acaaaa',
        't': 0x2
      }, {
        'p': [0x19a, 0x2, -0x209],
        's': [0x5, 0x3, 0x4],
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'e': '#18180a'
      }, {
        'p': [0x8e, 0x0, -0x77],
        's': [0x7f, 0x2, 0x8],
        'v': 0x1,
        'c': '#ffffff',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x7, 0x22, -0xe4],
        's': [0x2, 0xc, 0x1a],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x199, 0x1e, -0xb3],
        's': [0x28, 0x5, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x188, 0x0, -0xb3],
        's': [0x5, 0x1e, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1ab, 0x0, -0xb3],
        's': [0x5, 0x1e, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1b1, 0x0, -0xb4],
        's': [0x8, 0x38, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1b5, 0x8, -0x98],
        's': [0x1, 0x32, 0x22],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1b7, 0x0, -0x34],
        's': [0x8, 0x8, 0x9],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1b4, 0x0, -0xac],
        's': [0x1, 0x38, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x187, 0x23, -0xb3],
        's': [0xe, 0x12, 0x5],
        'c': '#ffffff',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x158, 0x2a, -0xac],
        's': [0x4, 0x6, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x1b0, 0x0, -0xb1],
        's': [0x7, 0x8, 0x4],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1b1, 0x0, -0xb0],
        's': [0x8, 0x38, 0x1],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0xd6, -0x37, -0x141],
        's': [0x26b, 0x23, 0x3a1],
        'c': '#f70000',
        't': 0x5
      }, {
        'p': [0x1b7, 0x8, -0x34],
        's': [0x7, 0x25, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x1b7, 0x8, -0x5c],
        's': [0x7, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x1b7, 0x8, -0x84],
        's': [0x7, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x1b5, 0x2f, -0x44],
        's': [0x1, 0xb, 0x86],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1b9, 0x27, -0xd6],
        's': [0x7, 0x4, 0x31],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1cf, 0x2a, -0x47],
        's': [0x34, 0x4, 0x82],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1de, 0x8, -0x3],
        's': [0x7, 0x22, 0x7],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1e5, 0x8, -0xa],
        's': [0x7, 0x22, 0x7],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1de, 0x8, -0x83],
        's': [0x7, 0x22, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1e5, 0x8, -0x7c],
        's': [0x7, 0x22, 0x7],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1b7, 0x0, -0x5c],
        's': [0x8, 0x8, 0x9],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1cc, 0x0, -0x98],
        's': [0x32, 0x8, 0x31],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1cb, 0x8, -0x84],
        's': [0x21, 0x23, 0x7],
        'c': '#ffffff',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1e5, 0x0, -0x43],
        's': [0x8, 0x8, 0x7d],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1e5, 0x8, -0x43],
        's': [0x6, 0x22, 0x7d],
        'c': '#ffffff',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1d1, -0x11, -0xbc],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 0.87, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x1f8, -0x1d, -0xd8],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.05, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x220, -0xd, -0xfd],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [3.14, -0.7, 3.14],
        'c': '#4c663e'
      }, {
        'p': [0x210, -0x24, -0xa7],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, 0.53, -3.14],
        'c': '#4c663e'
      }, {
        'p': [0x1d7, -0x25, -0x9f],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.18, 0x0],
        'c': '#4c663e'
      }, {
        'p': [0x210, -0x42, -0xcb],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [-3.14, 0.53, -3.14],
        'c': '#4c663e'
      }, {
        'p': [0x116, 0x0, -0x1c8],
        's': [0x8, 0x29, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1bd, 0x0, -0x216],
        's': [0x2c, 0x29, 0xa2],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1bd, 0x29, -0x20f],
        's': [0x2e, 0x4, 0x96],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1bd, 0x2d, -0x20f],
        's': [0x2a, 0x4, 0x92],
        'c': '#e8e8e8',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1bd, 0x31, -0x218],
        's': [0x2e, 0x4, 0xa8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x13c, 0x0, -0x202],
        's': [0x8, 0x29, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x0, -0x202],
        's': [0x8, 0x29, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x13d, 0x2, -0x1c4],
        's': [0x1d, 0x1, 0xf],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x11e, 0x2, -0x1c8],
        's': [0x21, 0x1, 0x10],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x121, 0x2, -0x1bf],
        's': [0xe, 0x1, 0x2],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x141, 0x2, -0x1bb],
        's': [0x11, 0x1, 0x3],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1b1, 0x2, -0x1c9],
        's': [0x25, 0x1, 0x17],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x19a, 0x2, -0x1d5],
        's': [0x9, 0x1, 0x19],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x196, 0x2, -0x1ed],
        's': [0x4, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x19a, 0x2, -0x1ee],
        's': [0x4, 0x1, 0x19],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x18a, 0x2, -0xb5],
        's': [0x7, 0x1, 0x14],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x181, 0x2, -0xaf],
        's': [0xb, 0x1, 0x6],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x18f, 0x2, -0xb3],
        's': [0x3, 0x1, 0xc],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a1, 0x2, -0xf6],
        's': [0x10, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1b1, 0x2, -0xea],
        's': [0x10, 0x1, 0x22],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1b2, 0x2, -0xd4],
        's': [0xa, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1b2, 0x2, -0xb6],
        's': [0x1a, 0x1, 0x16],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1b2, 0x2, -0xc8],
        's': [0x10, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1a4, 0x2, -0xb3],
        's': [0x2, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x1b2, 0x2, -0xa9],
        's': [0xc, 0x1, 0x4],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xdd, 0xd, -0xe5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xdd, 0xd, -0xd5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xd1, 0xd, -0xd5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x1a5, 0x35, -0x1e3],
        's': [0x15, 0x2, 0x2],
        'c': '#c8c8c8',
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x1a9, 0x2c, -0x1e3],
        's': [0x2, 0xd, 0x1],
        'l': 0x1,
        'r': [0x0, 0x0, 0.7],
        'c': '#c8c8c8',
        't': 0x2
      }, {
        'p': [0x19c, 0x1e, -0x1e3],
        's': [0x1, 0x17, 0x1],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x2
      }, {
        'p': [0x1a2, 0x2, -0x203],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.89, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x19d, 0x0, -0x1e5],
        's': [0x3, 0x8, 0x2d],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x19d, 0x8, -0x1e5],
        's': [0x4, 0x2, 0x2e],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1a3, 0x0, -0x1fa],
        's': [0x9, 0x8, 0x3],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1a3, 0x0, -0x1d0],
        's': [0x9, 0x8, 0x3],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1a3, 0x8, -0x1fa],
        's': [0x8, 0x2, 0x4],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1a3, 0x8, -0x1d0],
        's': [0x8, 0x2, 0x4],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x1a3, 0x0, -0x1e5],
        's': [0x9, 0x4, 0x28],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x1a3, 0x2, -0x1c7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.06, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x1aa, 0x1, -0x1f4],
        's': [0x8, 0x21, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x1, -0x1d6],
        's': [0x8, 0x21, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x22, -0x1e5],
        's': [0x9, 0x4, 0x25],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x13, -0x1e5],
        's': [0x9, 0x1, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x1aa, 0x16, -0x1e5],
        's': [0x9, 0x1, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x13, -0x1e8],
        's': [0x9, 0x4, 0x1],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1aa, 0x13, -0x1e2],
        's': [0x9, 0x4, 0x1],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x1a5, 0x6, -0x1e5],
        's': [0x1, 0xf, 0x5],
        'l': 0x1,
        'c': '#2787ca',
        'o': 0.7000000000000001,
        't': 0x8,
        'ts': 0x5,
        'td': '1',
        'ab': 0x1
      }, {
        'p': [0x1a3, 0x4, -0x1e5],
        's': [0xa, 0x2, 0x27],
        'l': 0x1,
        'c': '#2787ca',
        'o': 0.7000000000000001,
        't': 0x8,
        'ts': -0.1,
        'td': '1',
        'ab': 0x1
      }, {
        'p': [0x1aa, 0x14, -0x1e5],
        's': [0x8, 0x2, 0x5],
        'c': '#000000',
        'e': '#18180a'
      }, {
        'p': [0x149, 0x0, -0x1e5],
        's': [0x3, 0x8, 0x2d],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x149, 0x8, -0x1e5],
        's': [0x4, 0x2, 0x2e],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x143, 0x0, -0x1d0],
        's': [0x9, 0x8, 0x3],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x143, 0x0, -0x1fa],
        's': [0x9, 0x8, 0x3],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x143, 0x8, -0x1d0],
        's': [0x8, 0x2, 0x4],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x143, 0x8, -0x1fa],
        's': [0x8, 0x2, 0x4],
        'c': '#939393',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x143, 0x0, -0x1e5],
        's': [0x9, 0x4, 0x28],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x13c, 0x1, -0x1d6],
        's': [0x8, 0x21, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x13c, 0x1, -0x1f4],
        's': [0x8, 0x21, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x13c, 0x22, -0x1e5],
        's': [0x9, 0x4, 0x25],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x13c, 0x13, -0x1e5],
        's': [0x9, 0x1, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x13c, 0x16, -0x1e5],
        's': [0x9, 0x1, 0x5],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x13c, 0x13, -0x1e2],
        's': [0x9, 0x4, 0x1],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x13c, 0x13, -0x1e8],
        's': [0x9, 0x4, 0x1],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x141, 0x6, -0x1e5],
        's': [0x1, 0xf, 0x5],
        'l': 0x1,
        'c': '#2787ca',
        'o': 0.7000000000000001,
        't': 0x8,
        'ts': 0x5,
        'td': '1',
        'ab': 0x1
      }, {
        'p': [0x143, 0x4, -0x1e5],
        's': [0xa, 0x2, 0x27],
        'l': 0x1,
        'c': '#2787ca',
        'o': 0.7000000000000001,
        't': 0x8,
        'ts': -0.1,
        'td': '1',
        'ab': 0x1
      }, {
        'p': [0x13c, 0x14, -0x1e5],
        's': [0x8, 0x2, 0x5],
        'c': '#000000',
        'e': '#18180a'
      }, {
        'p': [0x140, 0x2, -0x1d9],
        's': [0x21, 0x1, 0x1b],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x140, 0x2, -0x1f0],
        's': [0x1e, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x152, 0x2, -0x1dc],
        's': [0x3, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x144, 0x3, -0x1ca],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.13, -1.41, 3.13],
        'c': '#85aa6c'
      }, {
        'p': [0x1b1, 0x3, -0xbc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.7, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x1b0, 0x3, -0xf0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.17, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x1a6, 0x3, -0xf1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.53, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xf0, 0xd, -0xdd],
        's': [0xe, 0x3, 0x4],
        'e': '#18180a'
      }, {
        'p': [0xf1, 0x10, -0xdb],
        's': [0x4, 0xd, 0x1],
        'pe': 0x1,
        'c': '#b1b1b1',
        't': 0x2
      }, {
        'p': [0xf5, 0x10, -0xdb],
        's': [0x4, 0xc, 0x1],
        'pe': 0x1,
        'c': '#b1b1b1',
        't': 0x2
      }, {
        'p': [0xec, 0xf, -0xdb],
        's': [0x6, 0xd, 0x1],
        'pe': 0x1,
        'c': '#b1b1b1',
        't': 0x2
      }, {
        'p': [0x154, 0x2, -0x4a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x1dd, 0x2, -0x25],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x14d, 0x0, -0x72],
        's': [0x8, 0x8, 0x7d],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb
      }, {
        'p': [0x154, 0x2, -0x79],
        's': [0x1, 0x17, 0x5],
        'l': 0x1,
        'r': [0x0, 0x0, 0.17],
        'c': '#a7a7a7',
        't': 0x2
      }, {
        'p': [0x1da, 0x2, -0x78],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x1da, 0x2, -0x6c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x1da, 0x2, -0x1c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x1da, 0xe, -0x1c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x154, 0x2, -0x50],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x11, 0x0, -0x73],
        's': [0x12, 0x26, 0x2],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x44, 0x0, -0x74],
        's': [0x14, 0xc, 0x1],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x1c, 0x0, -0x73],
        's': [0x4, 0x1a, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x2a, 0x1a, -0x73],
        's': [0x20, 0x4, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x38, 0x0, -0x73],
        's': [0x4, 0x1a, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x1, 0x0, -0x6b],
        's': [0x1, 0xc, 0x4],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x2, 0x0, -0x59],
        's': [0x4, 0x1a, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x2, 0x0, -0x3d],
        's': [0x4, 0x1a, 0x4],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x2, 0x1a, -0x4b],
        's': [0x4, 0x4, 0x20],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x1, 0x0, -0x2e],
        's': [0x1, 0xc, 0x1e],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x2, 0x0, -0x2f],
        's': [0x2, 0x26, 0x18],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x2, 0x1e, -0x4b],
        's': [0x2, 0x8, 0x20],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x43, 0x0, -0x73],
        's': [0x12, 0x26, 0x2],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x2a, 0x1e, -0x73],
        's': [0x20, 0x8, 0x2],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x2, 0x2, -0x58],
        's': [0x9, 0x1, 0xa],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x25, 0x0, -0x50],
        's': [0x48, 0x2, 0x48],
        'c': '#434343',
        'e': '#18180a'
      }, {
        'p': [-0x37, 0x2, -0x73],
        's': [0x7, 0x1, 0xb],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x40, 0x2, -0x71],
        's': [0xb, 0x1, 0x3],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x2, 0x2, -0x64],
        's': [0x5, 0x1, 0xe],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0xf, 0x2, -0x71],
        's': [0x6, 0x1, 0x4],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x3, 0x2, -0x61],
        's': [0x4, 0x1, 0x8],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x4, 0x2, -0x3d],
        's': [0x7, 0x1, 0xd],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x26, 0x0, -0x2b],
        's': [0x46, 0x26, 0x2],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x4a, 0x0, -0x4f],
        's': [0x2, 0x26, 0x46],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x48, 0x0, -0x71],
        's': [0x8, 0x26, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x5, 0x0, -0x2d],
        's': [0x6, 0x26, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x48, 0x0, -0x2d],
        's': [0x8, 0x26, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x21, 0x2, -0x74],
        's': [0x2, 0x1, 0x8],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x26, 0x22, -0x70],
        's': [0x3c, 0x4, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x26, 0x22, -0x2e],
        's': [0x3c, 0x4, 0x6],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x47, 0x22, -0x4f],
        's': [0x6, 0x4, 0x3c],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x5, 0x22, -0x4f],
        's': [0x6, 0x4, 0x3c],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x26, 0x26, -0x6a],
        's': [0x4c, 0x4, 0x16],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x4, 0x0, -0x27],
        's': [0x8, 0x26, 0x8],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0xb, 0x26, -0x4f],
        's': [0x16, 0x4, 0x20],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x41, 0x26, -0x4f],
        's': [0x16, 0x4, 0x20],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [-0x11, 0x2, -0x2f],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': '#989898',
        't': 0x2
      }, {
        'p': [-0x18, 0x2, -0x2f],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0.17, 0x0, 0x0],
        'c': '#989898',
        't': 0x2
      }, {
        'p': [-0x46, 0x2, -0x34],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x46, 0x2, -0x3a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x171, 0x2, -0x1ca],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0x17d, 0x2, -0x1ca],
        's': [0xc, 0xc, 0xc],
        'i': 0x8,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [0x177, 0x8, -0x1ca],
        's': [0x18, 0x7, 0xc],
        'l': 0x1,
        'c': '#3964a2',
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [0x1d, 0x33, -0x1d],
        's': [0xc, 0x8, 0x1],
        'l': 0x1,
        'c': '#2f241a',
        'e': '#18180a',
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [0x1d, 0x3b, -0x1d],
        's': [0xe, 0x6, 0x1],
        'l': 0x1,
        'c': '#2f241a',
        'e': '#18180a',
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [0x1d, 0x34, -0x1d],
        's': [0xa, 0x8, 0x2],
        'l': 0x1,
        'c': '#7d634b',
        'e': '#18180a',
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [0x1d, 0x3c, -0x1d],
        's': [0xc, 0x4, 0x2],
        'l': 0x1,
        'c': '#7d634b',
        'e': '#18180a',
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [0x14d, 0x2, -0x202],
        's': [0x1b, 0xe, 0x4],
        'e': '#18180a'
      }, {
        'p': [0x148, 0x2, -0x215],
        's': [0x4, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0xdf, 0xd, -0xdd],
        's': [0xf, 0x1, 0x22],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x59, 0x0, -0x102],
        's': [0x21, 0xc, 0x61],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x1, 0x0, -0x5d],
        's': [0x1, 0xc, 0x4],
        'c': '#696969',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x1, 0x0, -0x64],
        's': [0x1, 0x5, 0xa],
        'c': '#464646',
        'e': '#18180a',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0x2, 0x0, -0x6b],
        's': [0x2, 0x26, 0x4],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x2, 0xf, -0x64],
        's': [0x2, 0x17, 0xa],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x2, 0x0, -0x64],
        's': [0x2, 0x5, 0xa],
        'c': '#bebebe',
        'e': '#18180a'
      }, {
        'p': [-0x1, 0x5, -0x63],
        's': [0x1, 0xa, 0x4],
        'pe': 0x1,
        'c': '#afafaf',
        't': 0x2
      }, {
        'p': [-0x1, 0x5, -0x67],
        's': [0x1, 0xb, 0x4],
        'pe': 0x1,
        'c': '#afafaf',
        't': 0x2
      }, {
        'p': [-0x1, 0x5, -0x60],
        's': [0x1, 0xb, 0x2],
        'pe': 0x1,
        'c': '#afafaf',
        't': 0x2
      }, {
        'p': [0xbb, 0xd, -0x12c],
        's': [0x4, 0x4, 0xe],
        'e': '#18180a'
      }, {
        'p': [0xbb, 0xd, -0x138],
        's': [0x4, 0x13, 0xa],
        'e': '#18180a'
      }, {
        'p': [0xbb, 0x1c, -0x12c],
        's': [0x4, 0x4, 0xe],
        'e': '#18180a'
      }, {
        'p': [0xb9, 0x10, -0x12d],
        's': [0x1, 0xc, 0x4],
        'pe': 0x1,
        'c': '#b1b1b1',
        't': 0x2
      }, {
        'p': [0xb9, 0x11, -0x131],
        's': [0x1, 0xc, 0x4],
        'pe': 0x1,
        'c': '#b1b1b1',
        't': 0x2
      }, {
        'p': [-0x59, 0x0, -0x102],
        's': [0x20, 0x3d, 0x60],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x17f, 0x2, -0xba],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x16b, 0x13, -0xba],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xb9, 0x11, -0x128],
        's': [0x1, 0xc, 0x6],
        'pe': 0x1,
        'c': '#b1b1b1',
        't': 0x2
      }, {
        'p': [0x187, 0x30, -0xab],
        's': [0x8, 0x5, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x17e, 0x30, -0xad],
        's': [0x4, 0x1, 0x3],
        'l': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x155, 0x30, -0x8f],
        's': [0x8, 0x5, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x153, 0x30, -0x96],
        's': [0x4, 0x1, 0x3],
        'l': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x15c, 0x30, -0x92],
        's': [0x4, 0x2, 0x3],
        'l': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x144, 0x32, -0x9e],
        's': [0xa, 0xa, 0xe],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x145, 0x32, -0x93],
        's': [0xc, 0xd, 0x9],
        'c': '#a7a7a7',
        'e': '#18180a',
        'bo': 0x1
      }, {
        'p': [0x14c, 0x34, -0xad],
        's': [0x5, 0x1, 0x5],
        'l': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x8b, 0x26, -0x1b9],
        's': [0x23, 0x48, 0x74],
        'v': 0x1,
        'c': '#8e8e8e',
        't': 0x8
      }, {
        'p': [0x14c, 0x34, -0x9d],
        's': [0x2, 0x1, 0x2],
        'l': 0x1,
        'c': '#a7a7a7',
        'e': '#18180a'
      }, {
        'p': [0x16f, 0x2, -0x90],
        's': [0x4, 0x2, 0x5],
        'l': 0x1,
        'r': [-3.14, 0.17, -3.14],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [0x120, 0x2, -0x33],
        's': [0x4, 0x2, 0x5],
        'l': 0x1,
        'r': [-3.14, 0.17, -3.14],
        'c': '#ffffff',
        'e': '#18180a'
      }, {
        'p': [-0x43, 0xd, -0x116],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x49, 0xd, -0x173],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x17e, 0x2, -0x109],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x10, 0xd, -0x165],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x4, 0xd, -0x165],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xa, 0x19, -0x165],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xb, 0xd, -0x15c],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x10, 0xd, -0x163],
        's': [0x16, 0x1, 0x18],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x0, 0xd, -0x164],
        's': [0xa, 0x1, 0x13],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [-0x4, 0xe, -0x15b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.06, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [-0x11, 0xe, -0x15c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.06, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [-0x17, 0xe, -0x16c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.41, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x52, 0xe, -0x15f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.33, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xb, 0xe, -0x141],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.97, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xbb, 0x18, -0xff],
        's': [0x4, 0x1, 0x3],
        'l': 0x1,
        'e': '#18180a'
      }, {
        'p': [-0x45, 0xe, -0x12c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.03, 3.14],
        'c': '#85aa6c'
      }, {
        'p': [0xf7, 0x3, -0x195],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.86, -3.14],
        'c': '#85aa6c'
      }, {
        'p': [0x189, 0x3, -0x1ff],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.38, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x7c, 0x2, -0x40],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xa8, 0x3, -0x24],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.53, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xbd, 0x3, 0x9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.35, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0x7c, 0xe, -0x40],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x7c, 0x2, -0x47],
        's': [0x12, 0x1, 0x7],
        'l': 0x1,
        'c': '#8e8e8e',
        't': 0x8,
        'ab': 0x1
      }, {
        'p': [0x59, 0x3, -0x68],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.23, 0x0],
        'c': '#85aa6c'
      }, {
        'p': [0xa1, 0x3, -0x6d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#85aa6c'
      }]
    }, {
      'name': 'Shipyard',
      'ambInd': '1',
      'modURL': '',
      'terrainSeed': '',
      'terrainWidth': 0xbb8,
      'terrainHeight': 0xbb8,
      'terrainMntMlt': 0x1,
      'terrainMntCol': '#707070',
      'terrainGrsCol': '#5e692f',
      'terrainDrtCol': '#7f6238',
      'skyDome': !0x0,
      'skyDomeCol0': '#74a4b9',
      'skyDomeCol1': '#dce8ed',
      'skyDomeCol2': '#dce8ed',
      'zone': !0x1,
      'zoneSize': 0x1f4,
      'zoneSpeed': 0x1,
      'zoneCol0': '#c542d9',
      'zoneCol1': '#c542d9',
      'zoneCol2': '#c542d9',
      'sizeMlt': 0x2,
      'shadowR': 0x400,
      'ambient': 0x958981,
      'light': 0xead8cc,
      'sky': 0xdcebf4,
      'fog': 0xcdb5a6,
      'fogD': 666.357503003984,
      'dthY': -0x64,
      'camPos': [-0x4d, 0x2e, 0x2d],
      'spawns': [
        [0xf, 0x1, 0x3e, 0x0, 0x2, 0x0],
        [-0xc6, 0x1, 0x21, 0x0, 0x0, 0x0],
        [-0x4f, 0x1, 0xc9, 0x0, 0x2, 0x0],
        [0x3d, 0x1, 0xcf, 0x0, 0x2, 0x0],
        [-0x50, 0x1b, 0x73, 0x0, 0x0, 0x0],
        [0x6c, 0x1, -0x37, 0x0, 0x2, 0x0],
        [-0xbb, 0x0, 0x8d, 0x0, 0x3, 0x0],
        [-0x36, 0x1, -0x36, 0x0, 0x2, 0x0],
        [-0x2a, 0x1, 0x81, 0x0, 0x3, 0x0]
      ],
      'objects': [{
        'p': [-0x29, -0xa, 0x56],
        's': [0x152, 0xa, 0x134],
        'c': '#f0f0f0',
        't': 0x1
      }, {
        'p': [0x0, -0x1, 0x24],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [0x0, -0x1, 0x3e],
        's': [0x39, 0x1a, 0x19],
        'i': 0x13,
        'l': 0x1,
        'h': 0x1f4
      }, {
        'p': [0x0, 0x19, 0x3e],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [0x0, 0x18, 0x24],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [0x1a, 0x1, 0x46],
        's': [0x5, 0x17, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': '#282828',
        't': 0x5
      }, {
        'p': [0x26, 0x0, 0x1b],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x0, 0x0, 0x4a],
        's': [0x3a, 0x19, 0x1],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x53, -0x1, 0x24],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0x53, -0x1, 0x3e],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [0x0, -0x1, 0x72],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [0x0, -0x1, 0x8c],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0x53, -0x1, 0x73],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0x53, 0x18, 0x8d],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0x37, -0x1, -0x35],
        's': [0x39, 0x1a, 0x19],
        'i': 0x13,
        'l': 0x1,
        'h': 0x1f4
      }, {
        'p': [-0x37, 0x0, -0x29],
        's': [0x39, 0x19, 0x1],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x37, 0x18, -0x35],
        's': [0x39, 0x1, 0x17],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [0x20, 0x0, 0x79],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x3c, 0x0, 0xed],
        's': [0x39, 0x19, 0x1],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x3c, 0x18, 0xe1],
        's': [0x39, 0x1, 0x17],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x37, 0x0, -0x41],
        's': [0x39, 0x19, 0x1],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x2a, -0x1, 0xc7],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0x29, 0x0, 0xef],
        's': [0x14e, 0x14, 0x2],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xd1, 0x0, 0xbe],
        's': [0x2, 0x14, 0x64],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xb3, -0x1, 0x49],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0xc4, 0x0, 0xb9],
        's': [0x18, 0x8, 0x2],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [-0xbd, 0x0, 0xe6],
        's': [0x26, 0x3, 0x10],
        'c': '#969696',
        'e': '#373737',
        't': 0x6
      }, {
        'p': [-0xa9, 0x0, 0xe9],
        's': [0x2, 0x8, 0xa],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [-0xa9, 0x0, 0xe0],
        's': [0x2, 0x5, 0x8],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [-0x9e, 0x0, 0xe8],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xfc, 0x0, 0xa0],
        's': [0xe, 0x36, 0x12],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0xf7, 0x0, 0xbb],
        's': [0x3, 0x1a, 0x24],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0xf7, 0x0, 0xd2],
        's': [0x4, 0x36, 0xa],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0xf7, 0x1a, 0xbb],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0xbb],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0xf7, 0x2f, 0xbb],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0xf7, 0x21, 0xbf],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0xb7],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0xaf],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0xc7],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x6, 0xe9],
        's': [0x3, 0x14, 0x24],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0xf7, 0x1a, 0xe9],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0x117],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0xf7, 0x21, 0xdd],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0xed],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0xe5],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0xf5],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x0, 0x100],
        's': [0x4, 0x36, 0xa],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0xf7, 0x1a, 0x117],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0xf7, 0x0, 0x117],
        's': [0x3, 0x1a, 0x24],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0xf7, 0x21, 0x10b],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0x113],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0x11b],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0x123],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xf7, 0x21, 0xe9],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0xf7, 0x2f, 0xe9],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0xf7, 0x2f, 0x117],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0xd1, 0x0, 0x31],
        's': [0x2, 0x14, 0x4a],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xd1, 0x5, 0xb],
        's': [0x2, 0x13, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x130, -0xa, 0x56],
        's': [0xbc, 0xa, 0x134],
        'c': '#757370',
        'e': '#373737',
        't': 0x6
      }, {
        'p': [-0x49, -0xa, 0x139],
        's': [0x28a, 0xa, 0x92],
        'c': '#969696',
        'e': '#373737',
        't': 0x6
      }, {
        'p': [-0xd1, 0x5, -0xf],
        's': [0x2, 0x13, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xd1, 0x5, -0x29],
        's': [0x2, 0x13, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xd1, 0x5, -0x1c],
        's': [0x1, 0x12, 0x4d],
        'l': 0x1,
        'pe': 0x1,
        't': 0xc
      }, {
        'p': [-0xd1, 0x5, -0x43],
        's': [0x2, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xd1, 0x0, -0x1c],
        's': [0x2, 0x5, 0x50],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x0, 0x0, 0x32],
        's': [0x3a, 0x19, 0x1],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0xa4, 0x0, 0x8a],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0xc9, 0x0, 0x36],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xa3, 0x0, 0x8a],
        's': [0x10, 0x8, 0x30],
        'v': 0x1
      }, {
        'p': [-0xa3, 0x8, 0x8f],
        's': [0x10, 0x7, 0x18],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0xb, 0x0, 0xca],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x5, 0x0, 0xca],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x1, 0x0, 0xca],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x7, 0x0, 0xca],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x2, 0x2, 0xd2],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x2, 0x2, 0xce],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x2, 0x2, 0xca],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x2, 0x2, 0xc6],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x2, 0x2, 0xc2],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x64, 0x0, 0xb1],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x6c, 0x0, 0xb1],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x74, 0x0, 0xb1],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x6c, 0x2, 0xb9],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x6c, 0x2, 0xb5],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x6c, 0x2, 0xb1],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x6c, 0x2, 0xad],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x6c, 0x2, 0xa9],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xc9, 0x0, -0x2b],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xc3, 0x0, -0x2b],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xbd, 0x0, -0x2b],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xb7, 0x0, -0x2b],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xc0, 0x2, -0x23],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xc0, 0x2, -0x27],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xc0, 0x2, -0x2b],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xc0, 0x2, -0x2f],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0xc0, 0x2, -0x33],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x117, 0x0, 0x2f],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x111, 0x0, 0x2f],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x10b, 0x0, 0x2f],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x105, 0x0, 0x2f],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x10e, 0x2, 0x37],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x10e, 0x2, 0x33],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x10e, 0x2, 0x2f],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x10e, 0x2, 0x2b],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x10e, 0x2, 0x27],
        's': [0x14, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x7d, 0x10, -0x39],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [0x0, 0x0, -0.09],
        't': 0x2
      }, {
        'p': [0x7c, 0x9, -0x39],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [0x0, 0x0, -0.09],
        't': 0x2
      }, {
        'p': [0x7b, 0x0, -0x39],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [0x0, 0x0, -0.09],
        't': 0x2
      }, {
        'p': [0x7d, 0x9, -0x33],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -1.66],
        't': 0x2
      }, {
        'p': [0x7d, 0x9, -0x37],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -1.66],
        't': 0x2
      }, {
        'p': [0x7d, 0x9, -0x3b],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -1.66],
        't': 0x2
      }, {
        'p': [0x7d, 0x9, -0x3f],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -1.66],
        't': 0x2
      }, {
        'p': [0x7d, 0x0, -0x39],
        's': [0x3, 0x12, 0xe],
        'l': 0x1,
        'v': 0x1
      }, {
        'p': [0x55, 0x0, -0x2],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x5d, 0x0, -0x2],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x65, 0x0, -0x2],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x5d, 0x2, 0x6],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x5d, 0x2, 0x2],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x5d, 0x2, -0x2],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x5d, 0x2, -0x6],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x5d, 0x2, -0xa],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x5c, 0x3, 0x6],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        'r': [0x0, 1.48, 0x0],
        't': 0x2
      }, {
        'p': [0x5d, 0x3, -0x2],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        'r': [0x0, 1.48, 0x0],
        't': 0x2
      }, {
        'p': [0x5e, 0x3, -0xa],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        'r': [0x0, 1.48, 0x0],
        't': 0x2
      }, {
        'p': [0x65, 0x5, -0x1],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 1.48, 0x0],
        't': 0x2
      }, {
        'p': [0x61, 0x5, -0x2],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 1.48, 0x0],
        't': 0x2
      }, {
        'p': [0x5d, 0x5, -0x2],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 1.48, 0x0],
        't': 0x2
      }, {
        'p': [0x59, 0x5, -0x2],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 1.48, 0x0],
        't': 0x2
      }, {
        'p': [0x55, 0x5, -0x3],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 1.48, 0x0],
        't': 0x2
      }, {
        'p': [0x55, 0x6, -0x1],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [0x5d, 0x6, -0x2],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [0x65, 0x6, -0x3],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [0x5e, 0x8, 0x6],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [0x5d, 0x8, 0x2],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [0x5d, 0x8, -0x2],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [0x5d, 0x8, -0x6],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [0x5c, 0x8, -0xa],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [0x5d, 0x0, -0x2],
        's': [0x12, 0x9, 0x12],
        'l': 0x1,
        'v': 0x1
      }, {
        'p': [0x7f, 0x0, 0x83],
        's': [0x2, 0x14, 0xd6],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xd1, 0x0, 0x71],
        's': [0x2, 0x5, 0x36],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xd1, 0x5, 0x8b],
        's': [0x2, 0x13, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xd1, 0x5, 0x71],
        's': [0x1, 0x12, 0x33],
        'pe': 0x1,
        't': 0xc
      }, {
        'p': [-0xd1, 0x5, 0x71],
        's': [0x2, 0x13, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x7f, 0x0, -0x2],
        's': [0x2, 0x5, 0x34],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x7f, 0x5, 0x18],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x7f, 0x0, -0x30],
        's': [0x2, 0x14, 0x28],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x7f, 0x5, -0x1c],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x7f, 0x5, -0x2],
        's': [0x1, 0x12, 0x33],
        'l': 0x1,
        'pe': 0x1,
        't': 0xc
      }, {
        'p': [0x7f, 0x5, -0x2],
        's': [0x1, 0x13, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x35, 0x0, -0x1f],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0x5d, 0x0, -0x12],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0x4c, 0x0, 0x45],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [0x3a, 0x0, 0xbf],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1
      }, {
        'p': [0x3a, 0x0, 0xbf],
        's': [0x2f, 0x8, 0x10],
        'v': 0x1
      }, {
        'p': [0x3f, 0x8, 0xbf],
        's': [0x19, 0x7, 0x10],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x3b, -0xa, -0x5a],
        's': [0x301, 0xa, 0x2c],
        'l': 0x1,
        'c': '#827c6c'
      }, {
        'p': [-0x29, -0x12, -0x23d],
        's': [0x7db, 0xa, 0x7a6],
        'l': 0x1,
        'c': '#2a4957',
        'o': 0.9,
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [-0x115, 0x0, 0x98],
        's': [0x24, 0x1a, 0x1],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x12c, 0x0, 0xa0],
        's': [0xa, 0x36, 0x12],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x143, 0x8, 0x98],
        's': [0x24, 0x17, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x115, 0x1a, 0x99],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x115, 0x21, 0x9a],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x109, 0x21, 0x99],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x111, 0x21, 0x99],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x119, 0x21, 0x99],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x121, 0x21, 0x99],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x143, 0x1a, 0x99],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x143, 0x21, 0x9a],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x14f, 0x21, 0x99],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x147, 0x21, 0x99],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x13f, 0x21, 0x99],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x137, 0x21, 0x99],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x15a, 0x0, 0x99],
        's': [0xa, 0x36, 0x4],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x115, 0x2f, 0x99],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x143, 0x2f, 0x99],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x15d, 0x0, 0xe9],
        's': [0x4, 0x36, 0x9c],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x115, 0x0, 0x13a],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0xfc, 0x0, 0x132],
        's': [0xe, 0x36, 0x12],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x12c, 0x0, 0x132],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x15a, 0x0, 0x139],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x143, 0x0, 0x13a],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x115, 0x1a, 0x139],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x143, 0x1a, 0x139],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x143, 0x2f, 0x139],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x115, 0x2f, 0x139],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x115, 0x21, 0x138],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x109, 0x21, 0x139],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x111, 0x21, 0x139],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x119, 0x21, 0x139],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x121, 0x21, 0x139],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x143, 0x21, 0x138],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x137, 0x21, 0x139],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x13f, 0x21, 0x139],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x147, 0x21, 0x139],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x14f, 0x21, 0x139],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x12a, 0x36, 0xe9],
        's': [0x70, 0x2, 0xaa],
        'l': 0x1,
        'c': '#554242',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x15d, 0x0, 0x2b],
        's': [0x2, 0x36, 0xda],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [-0xe, 0x0, -0x6f],
        's': [0xce, 0x5, 0x2],
        'l': 0x1,
        'c': '#706857',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [-0xab, 0x0, -0x4f],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1
      }, {
        'p': [0x7d, 0x10, 0xcc],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [0x0, 0x0, -0.09],
        't': 0x2
      }, {
        'p': [0x7c, 0x9, 0xcc],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [0x0, 0x0, -0.09],
        't': 0x2
      }, {
        'p': [0x7b, 0x0, 0xcc],
        's': [0x2, 0x2, 0xe],
        'l': 0x1,
        'r': [0x0, 0x0, -0.09],
        't': 0x2
      }, {
        'p': [0x7d, 0x9, 0xd2],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -1.66],
        't': 0x2
      }, {
        'p': [0x7d, 0x9, 0xce],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -1.66],
        't': 0x2
      }, {
        'p': [0x7d, 0x9, 0xca],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -1.66],
        't': 0x2
      }, {
        'p': [0x7d, 0x9, 0xc6],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0x0, -1.66],
        't': 0x2
      }, {
        'p': [0x7d, 0x0, 0xcc],
        's': [0x3, 0x12, 0xe],
        'l': 0x1,
        'v': 0x1
      }, {
        'p': [-0xe, 0x5, -0x6f],
        's': [0xce, 0x2, 0x3],
        'l': 0x1,
        'c': '#aca596',
        'e': '#313131'
      }, {
        'p': [-0x83, -0x74, -0xc0],
        's': [0x1c, 0x74, 0xa0],
        'l': 0x1,
        'c': '#827c6c'
      }, {
        'p': [-0x143, -0x54, -0xc0],
        's': [0x1c, 0x54, 0xa0],
        'l': 0x1,
        'c': '#827c6c'
      }, {
        'p': [0x67, -0xb0, -0xc0],
        's': [0x1c, 0xb0, 0xa0],
        'l': 0x1,
        'c': '#827c6c'
      }, {
        'p': [0xbc, 0x0, -0x54],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1
      }, {
        'p': [0x7b, 0x0, -0x64],
        's': [0xc, 0xc, 0xc],
        'i': 0x8,
        'l': 0x1
      }, {
        'p': [-0xf, 0x0, -0x50],
        's': [0xc, 0xc, 0xc],
        'i': 0x8,
        'l': 0x1
      }, {
        'p': [-0x3c, 0x0, -0x67],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [-0x43, 0xc, -0x66],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [-0x49, 0x0, -0x64],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1
      }, {
        'p': [-0x7d, 0x0, -0x65],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x75, 0x0, -0x65],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x6d, 0x0, -0x65],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x75, 0x2, -0x5d],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x75, 0x2, -0x61],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x75, 0x2, -0x65],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x75, 0x2, -0x69],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [-0x75, 0x2, -0x6d],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        't': 0x2
      }, {
        'p': [0x27, 0x0, -0x62],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1
      }, {
        'p': [-0xe9, 0x0, -0x6a],
        's': [0x6, 0x8, 0x6],
        'i': 0x2,
        'l': 0x1
      }, {
        'p': [0xdc, 0x0, -0x6f],
        's': [0xce, 0x5, 0x2],
        'l': 0x1,
        'c': '#706857',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [0xdc, 0x5, -0x6f],
        's': [0xce, 0x2, 0x3],
        'l': 0x1,
        'c': '#aca596',
        'e': '#313131'
      }, {
        'p': [-0xe3, 0x0, -0x6f],
        's': [0xa4, 0x5, 0x2],
        'l': 0x1,
        'c': '#706857',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [-0xe3, 0x5, -0x6f],
        's': [0xa4, 0x2, 0x3],
        'l': 0x1,
        'c': '#aca596',
        'e': '#313131'
      }, {
        'p': [-0x2af, -0xa, -0xc0],
        's': [0x1e7, 0xa, 0xf8],
        'l': 0x1,
        'c': '#827c6c'
      }, {
        'p': [-0x29, 0x5, -0x43],
        's': [0x14e, 0x12, 0x1],
        'l': 0x1,
        'pe': 0x1,
        't': 0xc
      }, {
        'p': [-0xb7, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x9d, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x83, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x57, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x3d, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x23, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x9, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x11, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x29, 0x0, -0x43],
        's': [0x14e, 0x5, 0x2],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x2f, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x49, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x63, 0x5, -0x43],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x7d, 0x5, -0x43],
        's': [0x2, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x186, 0x0, -0x6f],
        's': [0x6b, 0x5, 0x2],
        'l': 0x1,
        'c': '#706857',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [-0x186, 0x5, -0x6f],
        's': [0x6b, 0x2, 0x3],
        'l': 0x1,
        'c': '#aca596',
        'e': '#313131'
      }, {
        'p': [0x19, 0x0, 0x15],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [0x7b, 0x0, 0x1c],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [0x7c, 0x0, 0xd6],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0xad, 0x3, 0xec],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0xd7, 0x0, -0xc],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0x10d, 0x3, 0x29],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0x156, 0x0, 0x5e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x156, 0x0, 0x6a],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x156, 0xc, 0x63],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x121, 0x0, 0x48],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x102, 0x0, 0x8d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x156, 0x0, 0x87],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x10c, 0x0, 0x89],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0x14a, 0x1, 0x3e],
        's': [0x2, 0x1, 0x1],
        'l': 0x1,
        'r': [-0.01, -1.48, -0.02],
        'c': '#d2cdc3',
        'e': '#313131'
      }, {
        'p': [-0x118, 0x0, -0x43],
        's': [0x8c, 0x1d, 0x2],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0x87, 0x0, 0x121],
        's': [0xe, 0x36, 0x12],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x82, 0x0, 0x106],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0x82, 0x0, 0xef],
        's': [0x4, 0x36, 0xa],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x82, 0x1a, 0x106],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0x106],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x82, 0x2f, 0x106],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x82, 0x21, 0x102],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0x10a],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0x112],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0xfa],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x0, 0xd8],
        's': [0x4, 0x21, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0xaa],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x82, 0x21, 0xe4],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0xd4],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0xdc],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0xcc],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x0, 0xc1],
        's': [0x4, 0x36, 0xa],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x82, 0x0, 0xaa],
        's': [0x4, 0x21, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0xb6],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0xae],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0xa6],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0x9e],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0xd8],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x82, 0x2f, 0xd8],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x82, 0x2f, 0xaa],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xa0, 0x0, 0x129],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xb7, 0x0, 0x121],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xce, 0x8, 0x129],
        's': [0x24, 0x17, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xa0, 0x1a, 0x128],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xa0, 0x21, 0x127],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x94, 0x21, 0x128],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x9c, 0x21, 0x128],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0x128],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xac, 0x21, 0x128],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x1a, 0x128],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xce, 0x21, 0x127],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xda, 0x21, 0x128],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xd2, 0x21, 0x128],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xca, 0x21, 0x128],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xc2, 0x21, 0x128],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xe5, 0x0, 0x128],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xa0, 0x2f, 0x128],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xce, 0x2f, 0x128],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xe8, 0x0, 0xd8],
        's': [0x4, 0x36, 0x9c],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xa0, 0x0, 0x87],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0x87, 0x0, 0x8f],
        's': [0xe, 0x36, 0x12],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xb7, 0x0, 0x8f],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xe5, 0x0, 0x88],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xce, 0x0, 0x87],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xa0, 0x1a, 0x88],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xce, 0x1a, 0x88],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xce, 0x2f, 0x88],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xa0, 0x2f, 0x88],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xa0, 0x21, 0x89],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x94, 0x21, 0x88],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x9c, 0x21, 0x88],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0x88],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xac, 0x21, 0x88],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x21, 0x89],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xc2, 0x21, 0x88],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xca, 0x21, 0x88],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xd2, 0x21, 0x88],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xda, 0x21, 0x88],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xb5, 0x36, 0xd8],
        's': [0x70, 0x2, 0xaa],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#554242',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x91, 0x0, 0x115],
        's': [0xe, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x76, 0x0, 0x110],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x5f, 0x0, 0x110],
        's': [0x4, 0x36, 0xa],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x76, 0x1a, 0x110],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x76, 0x21, 0x110],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x76, 0x2f, 0x110],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x72, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x7a, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x82, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x6a, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x48, 0x0, 0x110],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x48, 0x1a, 0x110],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x1a, 0x21, 0x110],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x54, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x44, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x4c, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x3c, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x31, 0x0, 0x110],
        's': [0x4, 0x36, 0xa],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x1a, 0x1a, 0x110],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x1a, 0x0, 0x110],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x26, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x1e, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x16, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xe, 0x21, 0x110],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x48, 0x21, 0x110],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x48, 0x2f, 0x110],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x1a, 0x2f, 0x110],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x99, 0x0, 0x12e],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x91, 0x0, 0x145],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x99, 0x8, 0x15c],
        's': [0x24, 0x17, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x98, 0x1a, 0x12e],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x97, 0x21, 0x12e],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x98, 0x21, 0x122],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x98, 0x21, 0x12a],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x98, 0x21, 0x132],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x98, 0x21, 0x13a],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x98, 0x1a, 0x15c],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x97, 0x21, 0x15c],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x98, 0x21, 0x168],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x98, 0x21, 0x160],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x98, 0x21, 0x158],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x98, 0x21, 0x150],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x98, 0x0, 0x173],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x98, 0x2f, 0x12e],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x98, 0x2f, 0x15c],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x48, 0x0, 0x176],
        's': [0x4, 0x36, 0x9c],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x9, 0x0, 0x12e],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0x1, 0x0, 0x115],
        's': [0xe, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x1, 0x0, 0x145],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x8, 0x0, 0x173],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x9, 0x0, 0x15c],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0x8, 0x1a, 0x12e],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x8, 0x1a, 0x15c],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x8, 0x2f, 0x15c],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x8, 0x2f, 0x12e],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x7, 0x21, 0x12e],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x8, 0x21, 0x122],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x8, 0x21, 0x12a],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x8, 0x21, 0x132],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x8, 0x21, 0x13a],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x7, 0x21, 0x15c],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x8, 0x21, 0x150],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x8, 0x21, 0x158],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x8, 0x21, 0x160],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x8, 0x21, 0x168],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x48, 0x36, 0x143],
        's': [0x70, 0x2, 0xaa],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#554242',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xa9, 0x0, 0x57],
        's': [0xe, 0x36, 0x12],
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xa4, 0x0, 0x3c],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xa4, 0x0, 0x25],
        's': [0x4, 0x36, 0xa],
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xa4, 0x1a, 0x3c],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0x3c],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xa4, 0x2f, 0x3c],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xa4, 0x21, 0x38],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0x40],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0x48],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0x30],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x0, 0xe],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xa4, 0x1a, 0xe],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, -0x20],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xa4, 0x21, 0x1a],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0xa],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0x12],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0x2],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x0, -0x9],
        's': [0x4, 0x36, 0xa],
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xa4, 0x1a, -0x20],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xa4, 0x0, -0x20],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xa4, 0x21, -0x14],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, -0x1c],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, -0x24],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, -0x2c],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa4, 0x21, 0xe],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xa4, 0x2f, 0xe],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xa4, 0x2f, -0x20],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xc2, 0x0, 0x5f],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xd9, 0x0, 0x57],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xf0, 0x8, 0x5f],
        's': [0x24, 0x17, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xc2, 0x1a, 0x5e],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xc2, 0x21, 0x5d],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xb6, 0x21, 0x5e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xbe, 0x21, 0x5e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xc6, 0x21, 0x5e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x21, 0x5e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xf0, 0x1a, 0x5e],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xf0, 0x21, 0x5d],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xfc, 0x21, 0x5e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xf4, 0x21, 0x5e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xec, 0x21, 0x5e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xe4, 0x21, 0x5e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x107, 0x0, 0x5e],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xc2, 0x2f, 0x5e],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xf0, 0x2f, 0x5e],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x10a, 0x0, 0xe],
        's': [0x4, 0x36, 0x9c],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xc2, 0x0, -0x43],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xa9, 0x0, -0x3b],
        's': [0xe, 0x36, 0x12],
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xd9, 0x0, -0x3b],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x107, 0x0, -0x42],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xf0, 0x0, -0x43],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xc2, 0x1a, -0x42],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xf0, 0x1a, -0x42],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xf0, 0x2f, -0x42],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xc2, 0x2f, -0x42],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xc2, 0x21, -0x41],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xb6, 0x21, -0x42],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xbe, 0x21, -0x42],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xc6, 0x21, -0x42],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x21, -0x42],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xf0, 0x21, -0x41],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xe4, 0x21, -0x42],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xec, 0x21, -0x42],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xf4, 0x21, -0x42],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xfc, 0x21, -0x42],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xd7, 0x36, 0xe],
        's': [0x70, 0x2, 0xaa],
        'l': 0x1,
        'r': [-3.14, 0x0, -3.14],
        'c': '#554242',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x131, -0xa, 0xa8],
        's': [0x2a, 0xa, 0x1d8],
        'l': 0x1,
        'c': '#827c6c'
      }, {
        'p': [0x144, 0x0, -0x1f],
        's': [0x2, 0x5, 0xa2],
        'l': 0x1,
        'c': '#706857',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [0x144, 0x5, -0x21],
        's': [0x2, 0x2, 0x9f],
        'l': 0x1,
        'c': '#aca596',
        'e': '#313131'
      }, {
        'p': [0x10a, 0x0, 0x73],
        's': [0x2, 0x1d, 0x2c],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [0xf9, 0x0, 0x88],
        's': [0x20, 0x1d, 0x2],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [0x91, 0x0, -0x43],
        's': [0x22, 0x14, 0x2],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb,
        'bo': 0x1
      }, {
        'p': [0xab, 0x0, 0x7f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x87, 0x0, 0x2f],
        's': [0xc, 0xc, 0xc],
        'i': 0x8,
        'l': 0x1
      }, {
        'p': [0x63, 0x0, 0x81],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x57, 0x0, 0x81],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x5c, 0xc, 0x81],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x2a0, -0xa, 0x9f],
        's': [0x224, 0xa, 0x1c6],
        'l': 0x1,
        'c': '#f0f0f0',
        't': 0x8
      }, {
        'p': [-0x15a, -0xa, 0x246],
        's': [0x4b0, 0xa, 0x188],
        'l': 0x1,
        'c': '#f0f0f0',
        't': 0x8
      }, {
        'p': [-0x121, 0x0, 0xf],
        's': [0x10, 0x18, 0x66],
        'c': '#c1c2c3',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x119, 0x0, -0xe],
        's': [0x3, 0x14, 0xa],
        'i': 0x15,
        'l': 0x1
      }, {
        'p': [-0x128, 0x1b, -0x18],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0x121, 0x17, 0xf],
        's': [0x12, 0x2, 0x67],
        'l': 0x1,
        'r': [0x0, 0x0, -0.09],
        'c': '#55504d',
        'e': '#212b31',
        't': 0xa
      }, {
        'p': [-0x13a, 0x0, 0xf],
        's': [0x22, 0x2e, 0x66],
        'l': 0x1,
        'c': '#c1c2c3',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x154, 0x0, 0xf],
        's': [0x12, 0x21, 0x66],
        'l': 0x1,
        'c': '#c1c2c3',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x128, 0x1b, 0x36],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0x128, 0x1b, 0x2],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0x128, 0x1b, 0x1c],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1
      }, {
        'p': [-0x13a, 0x0, 0x42],
        's': [0x1b, 0x17, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x131, 0x2d, 0xf],
        's': [0x12, 0x3, 0x67],
        'l': 0x1,
        'r': [0x0, 0x0, -0.09],
        'c': '#55504d',
        'e': '#212b31',
        't': 0xa
      }, {
        'p': [-0x143, 0x30, 0xf],
        's': [0x12, 0x3, 0x67],
        'l': 0x1,
        'r': [0x0, 0x0, -3.06],
        'c': '#55504d',
        'e': '#212b31',
        't': 0xa
      }, {
        'p': [-0x154, 0x22, 0xf],
        's': [0x12, 0x3, 0x67],
        'l': 0x1,
        'r': [0x0, 0x0, -3.06],
        'c': '#55504d',
        'e': '#212b31',
        't': 0xa
      }, {
        'p': [-0x13a, 0x1a, 0x43],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0]
      }, {
        'p': [-0x13a, 0x1a, -0x26],
        's': [0x1, 0x11, 0x11],
        'i': 0x16,
        'l': 0x1,
        'r': [0x0, 1.57, 0x0]
      }, {
        'p': [-0x13a, 0x0, -0x24],
        's': [0x1b, 0x17, 0x1],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x156, 0x0, -0x33],
        's': [0xa, 0x9, 0x12],
        'l': 0x1,
        'c': '#ffedde',
        't': 0xa
      }, {
        'p': [-0x156, 0x9, -0x33],
        's': [0xb, 0x1, 0x14],
        'l': 0x1,
        'r': [0x0, 0x0, -0.09],
        'c': '#312d2a',
        't': 0xa
      }, {
        'p': [-0x151, 0x3, -0x33],
        's': [0x1, 0x1, 0x11],
        'l': 0x1,
        'c': '#ffedde',
        't': 0xa,
        'ab': 0x1
      }, {
        'p': [-0x151, 0x6, -0x33],
        's': [0x1, 0x1, 0x11],
        'l': 0x1,
        'c': '#ffedde',
        't': 0xa,
        'ab': 0x1
      }, {
        'p': [-0x156, 0x6, -0x3c],
        's': [0xb, 0x1, 0x1],
        'l': 0x1,
        'c': '#ffedde',
        't': 0xa,
        'ab': 0x1
      }, {
        'p': [-0x156, 0x3, -0x3c],
        's': [0xb, 0x1, 0x1],
        'l': 0x1,
        'c': '#ffedde',
        't': 0xa,
        'ab': 0x1
      }, {
        'p': [-0x156, 0x3, -0x2a],
        's': [0xb, 0x1, 0x1],
        'l': 0x1,
        'c': '#ffedde',
        't': 0xa,
        'ab': 0x1
      }, {
        'p': [-0x156, 0x6, -0x2a],
        's': [0xb, 0x1, 0x1],
        'l': 0x1,
        'c': '#ffedde',
        't': 0xa,
        'ab': 0x1
      }, {
        'p': [-0x15b, 0x3, -0x33],
        's': [0x1, 0x1, 0x11],
        'l': 0x1,
        'c': '#ffedde',
        't': 0xa,
        'ab': 0x1
      }, {
        'p': [-0x15b, 0x6, -0x33],
        's': [0x1, 0x1, 0x11],
        'l': 0x1,
        'c': '#ffedde',
        't': 0xa,
        'ab': 0x1
      }, {
        'p': [-0xe5, 0x0, 0x13b],
        's': [0x2a, 0x1d, 0x2],
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [-0xd1, 0x0, 0x115],
        's': [0x2, 0x1d, 0x4a],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [-0xff, 0x0, -0x15],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [-0xf7, 0x0, -0x16],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [-0xef, 0x0, -0x17],
        's': [0x2, 0x2, 0x12],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [-0xf6, 0x2, -0xe],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [-0xf7, 0x2, -0x12],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [-0xf7, 0x2, -0x16],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [-0xf7, 0x2, -0x1a],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [-0xf8, 0x2, -0x1e],
        's': [0x12, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, 0.09, 0x0],
        't': 0x2
      }, {
        'p': [-0x108, 0x0, -0x3c],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xda, 0x0, -0x3],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xee, 0x0, 0x132],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0xde, 0x0, -0x3b],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [-0xc0, 0x0, 0x3a],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0x8e, 0x0, -0x40],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0x116, 0x0, -0x1],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x83, 0x1, -0x103],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x83, 0x0, -0x103],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x83, 0x5, -0x103],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x83, 0x0, -0x103],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x141, 0x1, -0x103],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x141, 0x0, -0x103],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x141, 0x5, -0x103],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x141, 0x0, -0x103],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x1cc, 0x1, -0x12d],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x1cc, 0x0, -0x12d],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x1cc, 0x5, -0x12d],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x1cc, 0x0, -0x12d],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x67, 0x1, -0x103],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x67, 0x0, -0x103],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x67, 0x5, -0x103],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x67, 0x0, -0x103],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xf1, 0x0, 0x18e],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'c': '#52452e'
      }, {
        'p': [0x7, -0xf, 0x18d],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x156, -0xa, 0x1e0],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 0.44, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x178, -0x2, 0x18b],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -1.13, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x1d1, -0x2, 0x11e],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x1c5, -0x17, 0x9d],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x248, -0x2, 0x152],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#52452e'
      }, {
        'p': [0x7b, -0xf, 0x1cf],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x204, 0x0, -0x106],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11,
        'l': 0x1
      }, {
        'p': [-0x204, 0x0, -0xcb],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11,
        'l': 0x1
      }, {
        'p': [-0x204, 0x0, -0xae],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11,
        'l': 0x1
      }, {
        'p': [-0x205, 0x19, -0xbc],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11,
        'l': 0x1
      }, {
        'p': [-0x26b, 0x0, -0x89],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11,
        'l': 0x1
      }, {
        'p': [-0x266, 0x0, -0xe1],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11,
        'l': 0x1
      }, {
        'p': [-0x1d7, 0x0, -0x10e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1,
        'r': [0x0, -0.18, 0x0]
      }, {
        'p': [-0x1de, 0x0, -0xe7],
        's': [0xc, 0xc, 0xc],
        'i': 0x1,
        'l': 0x1,
        'r': [0x0, 0.26, 0x0]
      }, {
        'p': [-0x1da, 0x0, -0xac],
        's': [0xc, 0xc, 0xc],
        'i': 0x8,
        'l': 0x1
      }, {
        'p': [-0xfd, 0x39, 0xa8],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x38, 0xa8],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x3d, 0xa8],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x38, 0xa8],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x39, 0xb7],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x38, 0xb7],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x3d, 0xb7],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x38, 0xb7],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x39, 0x122],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x38, 0x122],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x3d, 0x122],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0xfd, 0x38, 0x122],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x135, 0x31, 0x2c],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x135, 0x30, 0x2c],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x135, 0x35, 0x2c],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x135, 0x30, 0x2c],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x93, 0x39, 0x121],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x93, 0x38, 0x121],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x93, 0x3d, 0x121],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x93, 0x38, 0x121],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x87, 0x39, 0x121],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x87, 0x38, 0x121],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x87, 0x3d, 0x121],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x87, 0x38, 0x121],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x5, 0x39, 0x121],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x5, 0x38, 0x121],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x5, 0x3d, 0x121],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [-0x5, 0x38, 0x121],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x39, 0x11a],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x38, 0x11a],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x3d, 0x11a],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x38, 0x11a],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x39, 0x9f],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x38, 0x9f],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x3d, 0x9f],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x38, 0x9f],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x39, 0x92],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x38, 0x92],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x3d, 0x92],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x92, 0x38, 0x92],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x39, 0x54],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x38, 0x54],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x3d, 0x54],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x38, 0x54],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x39, 0x47],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x38, 0x47],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x3d, 0x47],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x38, 0x47],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x39, -0x39],
        's': [0x4, 0x4, 0x4],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x38, -0x39],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x3d, -0x39],
        's': [0x6, 0x3, 0x6],
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0xac, 0x38, -0x39],
        's': [0x8, 0x8, 0x8],
        'l': 0x1,
        'v': 0x1,
        'c': '#483d3d',
        't': 0x6
      }, {
        'p': [0x1e, 0x0, -0x40],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffc765'
      }, {
        'p': [-0x18, 0x0, -0x2b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.7, -3.14],
        'c': '#ffffff'
      }, {
        'p': [0x2d, 0x0, -0x1a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xe, 0x0, -0xd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x14, 0x0, 0x14],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.17, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x3a, 0x0, -0x18],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.61, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x51, -0x1, -0x3e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.87, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x79, -0x1, -0x31],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x7b, 0x0, 0x19],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x52, 0x0, 0x7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.17, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x20, 0x0, 0x16],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x1c, 0x0, 0x64],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x57, 0x0, 0x5e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x1e, 0x0, 0x80],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x50, 0x0, 0x79],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x7b, 0x0, 0x70],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.96, -3.14],
        'c': '#ffffff'
      }, {
        'p': [0x4e, 0x0, 0x86],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x69, 0x0, 0x87],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x64, 0x0, 0xbb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x6d, 0x0, 0xb1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x66, 0x0, 0xac],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x3a, 0x0, 0xcc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x52, 0x0, 0xc9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x27, 0x0, 0xb4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x4, 0x0, 0xc1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x8, 0x0, 0xd2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x1d, 0x0, 0x9a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x1d, 0x0, 0x9a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x35, 0x0, 0x9b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x27, 0x0, 0xb8],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xc, 0x0, 0xb9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x13, 0x0, 0xd7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x13, 0x0, 0xea],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x21, 0x0, 0xea],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x7b, 0x0, 0xeb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x35, 0x0, 0x7f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x32, 0x0, 0x44],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x1d, 0x0, 0x65],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x1f, 0x0, 0x8d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x1e, 0x0, 0x30],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x1d, 0x0, 0x16],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.22, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x15, 0x0, -0xc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.44, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x4b, 0x0, -0xd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x70, 0x0, 0x9c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.17, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x5a, 0x0, 0xd3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x49, 0x0, 0xd1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x97, 0x0, 0xe2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x9a, 0x0, 0xa3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xad, 0x0, 0xa3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xa4, 0x0, 0xde],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xcd, 0x0, 0x8c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.05, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xca, 0x0, 0xb3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xbf, 0x0, 0xb5],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xcb, 0x0, 0x59],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xaa, 0x0, 0x71],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.35, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x72, 0x0, 0x7f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x9a, 0x0, 0x8c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x96, 0x0, 0x3b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x70, 0x0, 0x4c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x5f, 0x0, 0x63],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.79, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x36, 0x0, 0x66],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xc, 0x0, 0x4e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x4c, 0x0, -0x1b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x59, 0x0, -0x3e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x74, 0x0, -0x41],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x51, 0x0, -0x24],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x5d, 0x0, 0x14],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.13, -3.14],
        'c': '#ffffff'
      }, {
        'p': [-0x70, 0x0, 0x17],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x8e, 0x0, -0x11],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xb5, 0x0, -0x21],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x91, 0x0, -0x3e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xcc, 0x0, -0x7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xcb, 0x0, -0x3b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.61, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xbb, 0x0, -0x2e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.44, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xc4, 0x0, -0x27],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.44, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xcc, 0x0, 0x2d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.79, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x72, 0x0, 0x32],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xba, 0x0, 0x37],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xc0, 0x0, 0x32],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0xcd, 0x0, 0xa],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.96, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x49, 0x0, 0xcf],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x12c, 0x0, 0x188],
        's': [0xe, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x111, 0x0, 0x183],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0xfa, 0x0, 0x183],
        's': [0x4, 0x36, 0xa],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x111, 0x1a, 0x183],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x111, 0x21, 0x183],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x111, 0x2f, 0x183],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x10d, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x115, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x11d, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x105, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xe3, 0x0, 0x183],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0xe3, 0x1a, 0x183],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0xb5, 0x21, 0x183],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0xef, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xdf, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xe7, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xd7, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xcc, 0x0, 0x183],
        's': [0x4, 0x36, 0xa],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0xb5, 0x1a, 0x183],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0xb5, 0x0, 0x183],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0xc1, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xb9, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xb1, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xa9, 0x21, 0x183],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xe3, 0x21, 0x183],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0xe3, 0x2f, 0x183],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0xb5, 0x2f, 0x183],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x134, 0x0, 0x1a1],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x12c, 0x0, 0x1b8],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x134, 0x8, 0x1cf],
        's': [0x24, 0x17, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x133, 0x1a, 0x1a1],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x132, 0x21, 0x1a1],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x133, 0x21, 0x195],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x133, 0x21, 0x19d],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x133, 0x21, 0x1a5],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x133, 0x21, 0x1ad],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x133, 0x1a, 0x1cf],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x132, 0x21, 0x1cf],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x133, 0x21, 0x1db],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x133, 0x21, 0x1d3],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x133, 0x21, 0x1cb],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x133, 0x21, 0x1c3],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x133, 0x0, 0x1e6],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x133, 0x2f, 0x1a1],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x133, 0x2f, 0x1cf],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0xe3, 0x0, 0x1e9],
        's': [0x4, 0x36, 0x9c],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x92, 0x0, 0x1a1],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x9a, 0x0, 0x188],
        's': [0xe, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x9a, 0x0, 0x1b8],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x93, 0x0, 0x1e6],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x92, 0x0, 0x1cf],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [-0x93, 0x1a, 0x1a1],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x93, 0x1a, 0x1cf],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [-0x93, 0x2f, 0x1cf],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x93, 0x2f, 0x1a1],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [-0x94, 0x21, 0x1a1],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x93, 0x21, 0x195],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x93, 0x21, 0x19d],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x93, 0x21, 0x1a5],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x93, 0x21, 0x1ad],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x94, 0x21, 0x1cf],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [-0x93, 0x21, 0x1c3],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x93, 0x21, 0x1cb],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x93, 0x21, 0x1d3],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x93, 0x21, 0x1db],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xe3, 0x36, 0x1b6],
        's': [0x70, 0x2, 0xaa],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#554242',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x7f, 0x14, 0xef],
        's': [0x2, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x29, 0x14, 0xef],
        's': [0x14f, 0x12, 0x1],
        'l': 0x1,
        'pe': 0x1,
        't': 0xc
      }, {
        'p': [0x65, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x4b, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x31, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x17, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x3, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x1d, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x37, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x51, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x6b, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x85, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x9f, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xb9, 0x14, 0xef],
        's': [0x1, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0xd1, 0x14, 0xef],
        's': [0x2, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x35, 0x0, 0x149],
        's': [0xe, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x50, 0x0, 0x144],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0x67, 0x0, 0x144],
        's': [0x4, 0x36, 0xa],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x50, 0x1a, 0x144],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x50, 0x21, 0x144],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x50, 0x2f, 0x144],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x54, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x4c, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x44, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x5c, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x7e, 0x0, 0x144],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0x7e, 0x1a, 0x144],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xac, 0x21, 0x144],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x72, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x82, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x7a, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x8a, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x95, 0x0, 0x144],
        's': [0x4, 0x36, 0xa],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xac, 0x1a, 0x144],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xac, 0x0, 0x144],
        's': [0x3, 0x1a, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xa0, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xa8, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xb0, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xb8, 0x21, 0x144],
        's': [0x3, 0xe, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x7e, 0x21, 0x144],
        's': [0x2, 0xe, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x7e, 0x2f, 0x144],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xac, 0x2f, 0x144],
        's': [0x4, 0x7, 0x24],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x2d, 0x0, 0x162],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0x35, 0x0, 0x179],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x2d, 0x8, 0x190],
        's': [0x24, 0x17, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0x2e, 0x1a, 0x162],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x2f, 0x21, 0x162],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x2e, 0x21, 0x156],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x2e, 0x21, 0x15e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x2e, 0x21, 0x166],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x2e, 0x21, 0x16e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x2e, 0x1a, 0x190],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x2f, 0x21, 0x190],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0x2e, 0x21, 0x19c],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x2e, 0x21, 0x194],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x2e, 0x21, 0x18c],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x2e, 0x21, 0x184],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x2e, 0x0, 0x1a7],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0x2e, 0x2f, 0x162],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x2e, 0x2f, 0x190],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x7e, 0x0, 0x1aa],
        's': [0x4, 0x36, 0x9c],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xcf, 0x0, 0x162],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xc7, 0x0, 0x149],
        's': [0xe, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xc7, 0x0, 0x179],
        's': [0xa, 0x36, 0x12],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xce, 0x0, 0x1a7],
        's': [0xa, 0x36, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xcf, 0x0, 0x190],
        's': [0x24, 0x1a, 0x1],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#1e1e1e',
        't': 0xa
      }, {
        'p': [0xce, 0x1a, 0x162],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xce, 0x1a, 0x190],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6
      }, {
        'p': [0xce, 0x2f, 0x190],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xce, 0x2f, 0x162],
        's': [0x24, 0x7, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#ffffff',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0xcd, 0x21, 0x162],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xce, 0x21, 0x156],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x21, 0x15e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x21, 0x166],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x21, 0x16e],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xcd, 0x21, 0x190],
        's': [0x24, 0xe, 0x4],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#1e1a14',
        'e': '#1b1919',
        'o': 0.9,
        't': 0xa
      }, {
        'p': [0xce, 0x21, 0x184],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x21, 0x18c],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x21, 0x194],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0xce, 0x21, 0x19c],
        's': [0x1, 0xe, 0x3],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [0x7e, 0x36, 0x177],
        's': [0x70, 0x2, 0xaa],
        'l': 0x1,
        'r': [0x0, 1.57, 0x0],
        'c': '#554242',
        'e': '#3e4448',
        't': 0x6,
        'ab': 0x1
      }, {
        'p': [0x16, -0xf, 0x1b5],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, 0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [0xe, 0x0, 0x19f],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1
      }, {
        'p': [-0x29, 0x0, 0x1f4],
        's': [0x14e, 0x1d, 0x2],
        'l': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0xb
      }, {
        'p': [0x10c, -0xa, 0x13f],
        's': [0x20, 0xa, 0x9e],
        'l': 0x1,
        'c': '#827c6c'
      }, {
        'p': [-0x21e, 0x0, -0x60],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11,
        'l': 0x1
      }, {
        'p': [-0x26f, 0x0, -0x11e],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11,
        'l': 0x1
      }, {
        'p': [-0x1b1, -0x17, 0x26],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x1f5, -0x17, -0x17],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x208, -0x17, 0x57],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x21c, -0x17, 0xc9],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x229, -0x17, 0x113],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x1bb, -0x17, 0x1cc],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [-0x6e, -0x17, 0x205],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [0x7, -0x17, 0x219],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [0x7f, -0x17, 0x213],
        's': [0x41, 0x6d, 0x36],
        'i': 0xf,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#52452e'
      }, {
        'p': [0x44, 0x0, -0x5e],
        's': [0x33, 0xf, 0x14],
        'i': 0x7,
        'l': 0x1
      }, {
        'p': [-0xd1, 0x5, 0x57],
        's': [0x2, 0x13, 0x2],
        'l': 0x1,
        'pe': 0x1,
        'c': '#a0998a',
        'e': '#313131',
        't': 0x6
      }, {
        'p': [-0x8e, 0x0, -0x16],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x20, 0x0, 0x1b],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0xb9, 0x0, 0xbb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x53, -0x1, 0x8d],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0x97, 0x0, -0x8],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x97, 0x0, -0x14],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x9e, 0x0, -0x2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x2c, -0x1, -0x1b],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [-0x53, 0x19, 0x73],
        's': [0x39, 0x1a, 0x19],
        'i': 0x13,
        'l': 0x1,
        'h': 0x1f4
      }, {
        'p': [0x3, 0x0, 0x9a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x2, 0x0, 0xca],
        's': [0x14, 0x2, 0x12],
        'v': 0x1,
        't': 0x2
      }, {
        'p': [0x6c, 0x0, 0xb1],
        's': [0x12, 0x2, 0x12],
        'v': 0x1,
        't': 0x2
      }, {
        'p': [-0xbf, 0x0, -0x2b],
        's': [0x12, 0x2, 0x12],
        'v': 0x1,
        't': 0x2
      }, {
        'p': [0x5d, 0x0, -0x2],
        's': [0x12, 0x9, 0x12],
        'pe': 0x1,
        'v': 0x1,
        't': 0x2
      }, {
        'p': [0x54, 0x0, -0xe],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x7b, 0x0, -0x8],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x29, 0x0, -0x1f],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0xce, -0xa, 0x56],
        's': [0x9c, 0xa, 0x134],
        'c': '#969696',
        'e': '#373737',
        't': 0x6
      }, {
        'p': [0x87, 0x0, -0x30],
        's': [0xc, 0xc, 0xc],
        'i': 0x8
      }, {
        'p': [0x23, 0x0, 0x70],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x5b, 0x0, -0x1b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x41, 0x0, 0x2b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.17, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x4d, 0x0, 0x45],
        's': [0x10, 0x8, 0x30],
        'v': 0x1
      }, {
        'p': [0x4d, 0x8, 0x4a],
        's': [0x10, 0x7, 0x18],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x3c, -0x1, 0xe1],
        's': [0x39, 0x1a, 0x19],
        'i': 0x13,
        'l': 0x1,
        'h': 0x1f4
      }, {
        'p': [0x1a, 0x1, 0x3e],
        's': [0x4, 0x17, 0x17],
        'pe': 0x1,
        'c': '#662626',
        't': 0x5
      }, {
        'p': [0x1a, 0x1, 0x36],
        's': [0x5, 0x17, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': '#282828',
        't': 0x5
      }, {
        'p': [0x1a, 0x1, 0x3e],
        's': [0x5, 0x17, 0x1],
        'l': 0x1,
        'pe': 0x1,
        'c': '#282828',
        't': 0x5
      }, {
        'p': [0x20, 0x0, 0x30],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#ffffff'
      }, {
        'p': [0x20, 0x0, 0x35],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x20, 0x0, 0x47],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x53, 0x19, 0x67],
        's': [0x39, 0x19, 0x1],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x53, 0x32, 0x73],
        's': [0x39, 0x1, 0x19],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x3c, -0x1, 0xd5],
        's': [0x39, 0x1a, 0x1],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x53, 0x19, 0x73],
        's': [0x39, 0x2, 0x19],
        'pe': 0x1,
        'v': 0x1
      }, {
        'p': [-0x73, 0x0, 0x1f],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0x94, 0x0, 0x41],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0x73, 0x0, 0x77],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0xb9, 0x0, 0xb3],
        's': [0x3, 0x1, 0x6],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0x4a, 0x0, 0xbf],
        's': [0x3, 0x1, 0x6],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0x1f, 0x0, 0x94],
        's': [0x3, 0x1, 0x6],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [0x4e, 0x0, 0x80],
        's': [0x3, 0x2, 0x6],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [0x51, 0x0, -0xa],
        's': [0x3, 0x2, 0x6],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [0x4a, 0x0, -0x3f],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [0xe, 0x0, 0x14],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [0x5a, 0x0, 0x57],
        's': [0x6, 0x2, 0x4],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0x1f, 0x0, 0x29],
        's': [0x3, 0x1, 0x6],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0x31, 0x0, -0xc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.27, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0xb3, 0x0, 0xbb],
        's': [0x5, 0x1, 0x4],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0xcc, 0x0, 0xdb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.52, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x76, 0x0, 0xeb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x54, 0x0, 0x9c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.35, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x78, 0x0, 0xbc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [-0x78, 0x0, 0xaf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.17, 0x0],
        'c': '#ffffff'
      }, {
        'p': [-0x9e, 0x0, 0xde],
        's': [0x5, 0x1, 0x4],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0x7f, 0x0, 0xbe],
        's': [0x5, 0x1, 0x4],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [-0x7f, 0x0, 0xb5],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x7b, 0x0, 0x6c],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [0x32, 0x0, 0xb4],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0xb4, 0x0, 0xb6],
        's': [0x4, 0x7, 0x4],
        'i': 0x10,
        'l': 0x1
      }, {
        'p': [-0x9d, 0x0, -0x1b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'c': '#ffffff'
      }, {
        'p': [0x37, 0x0, -0x27],
        's': [0x6, 0x1, 0x3],
        'l': 0x1,
        'c': '#646464',
        't': 0x5
      }, {
        'p': [0x30, 0x0, -0x27],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#ffc765'
      }, {
        'p': [-0xb2, 0x0, 0xd4],
        's': [0x3b, 0x32, 0x33],
        'i': 0xe
      }, {
        'p': [0x5c, 0x0, -0x17],
        's': [0x40, 0x32, 0x51],
        'i': 0xe
      }, {
        'p': [-0xa7, 0x0, -0x17],
        's': [0x4f, 0x32, 0x51],
        'i': 0xe
      }, {
        'p': [0x4a, 0x0, 0xcc],
        's': [0x65, 0x32, 0x42],
        'i': 0xe
      }]
    }, {
      'name': 'Freight',
      'ambInd': 0x1,
      'modURL': '',
      'terrainSeed': '',
      'terrainWidth': 0xbb8,
      'terrainHeight': 0xbb8,
      'terrainMntMlt': 0x1,
      'terrainMntCol': '#707070',
      'terrainGrsCol': '#5e692f',
      'terrainDrtCol': '#7f6238',
      'skyDome': !0x1,
      'skyDomeCol0': '#74a4b9',
      'skyDomeCol1': '#dce8ed',
      'skyDomeCol2': '#dce8ed',
      'zone': !0x1,
      'zoneSize': 0x1f4,
      'zoneSpeed': 0x1,
      'zoneCol0': '#c542d9',
      'zoneCol1': '#c542d9',
      'zoneCol2': '#c542d9',
      'sizeMlt': 0x2,
      'shadowR': 1288.976788646236,
      'ambient': 0x72919a,
      'light': 0x8b9b9d,
      'sky': 0x75a6b1,
      'fog': 0x75a6b1,
      'fogD': 374.8837427323032,
      'dthY': -0xa,
      'camPos': [0x13c, 0x21, -0x9c],
      'spawns': [
        [-0xf, 0x0, -0x164, 0x0, 0x1, 0x0],
        [0xf9, 0x0, -0x194, 0x0, 0x2, 0x0],
        [0x152, 0x0, -0xc7, 0x0, 0x1, 0x0],
        [0x124, 0x0, 0xa4, 0x0, 0x2, 0x0],
        [0x56, 0x4, 0x74, 0x0, 0x0, 0x0],
        [-0x43, 0x0, -0x28, 0x0, 0x3, 0x0],
        [0x21, 0x0, -0x45, 0x0, 0x0, 0x0],
        [0x44, 0x0, -0xbd, 0x0, 0x1, 0x0],
        [-0x57, 0x1a, -0x49, 0x0, 0x0, 0x0]
      ],
      'objects': [{
        'p': [-0x2f, 0x18, -0x47],
        's': [0x6c, 0x2, 0x28],
        'c': 0x9b9a9a
      }, {
        'p': [-0x12, 0x0, -0x58],
        's': [0x2a, 0x18, 0x4],
        'c': 0x965c44
      }, {
        'p': [-0x2f, 0x38, -0x47],
        's': [0x6b, 0x3, 0x2c],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [0x4, 0x1b, -0x36],
        's': [0x3, 0x1d, 0x9],
        'c': 0x965c44
      }, {
        'p': [0x4, 0x1b, -0x57],
        's': [0x3, 0x1f, 0x7],
        'c': 0x965c44
      }, {
        'p': [0x1a, 0x0, -0x14],
        's': [0x81, 0x18, 0x3c],
        'c': 0x965c44
      }, {
        'p': [-0x2f, 0x1a, -0x55],
        's': [0x6c, 0x2, 0xd],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x2f, 0x3b, -0x47],
        's': [0x6c, 0x2, 0x2d],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x4, 0x0, -0x46],
        's': [0x3, 0x1b, 0x28],
        'c': 0x965c44
      }, {
        'p': [-0x62, 0x1a, -0x47],
        's': [0x3, 0x1f, 0x22],
        'c': 0x965c44
      }, {
        'p': [0x31, 0x31, -0xc4],
        's': [0x16, 0x6, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x64, 0x0, -0x79],
        's': [0x36, 0x2e, 0x1e],
        'c': 0xaa7b68,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [-0x65, 0x0, -0x12],
        's': [0x4, 0x20, 0x241],
        'c': '#b5b5b5',
        'bo': 0x1
      }, {
        'p': [0x25, 0x14, -0x71],
        's': [0x4a, 0x3, 0x30],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [0x92, 0x14, -0x79],
        's': [0x90, 0x3, 0x20],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x25, 0x0, -0x71],
        's': [0x48, 0x3f, 0x2e],
        'c': 0xaa7b68,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0x11, 0x0, -0x7a],
        's': [0x4e, 0x17, 0x3f],
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [0x25, 0x3e, -0x71],
        's': [0x4a, 0x3, 0x30],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [0x91, 0x2e, -0x79],
        's': [0x93, 0x3, 0x21],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [0x24, 0x4, -0x71],
        's': [0x3, 0x3c, 0x2f],
        'c': 0x9b9b9b
      }, {
        'p': [-0x4a, 0x1a, -0x39],
        's': [0xa, 0x34, 0xa],
        'c': 0x965c44
      }, {
        'p': [-0x45, 0x1a, -0x34],
        's': [0x3d, 0x21, 0x4],
        'c': 0x965c44
      }, {
        'p': [-0x12, 0x0, -0x34],
        's': [0x29, 0x38, 0x4],
        'c': 0x965c44
      }, {
        'p': [0x0, 0x1a, -0x59],
        's': [0x5, 0x1a, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0xb, 0x1a, -0x14],
        's': [0xcb, 0x19, 0x3d],
        'c': 0x965c44,
        'bo': 0x1
      }, {
        'p': [-0xb, 0x18, -0x14],
        's': [0xcc, 0x2, 0x3e],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [-0x29, -0x1, 0x6],
        's': [0x6, 0x1a, 0x9],
        'c': 0x9b9a9a
      }, {
        'p': [0x51, 0x23, -0x5],
        's': [0x8, 0x2b, 0x2b],
        'l': 0x1,
        'r': [-0.8, 0x0, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x6b, 0x22, -0x5],
        's': [0x8, 0x2b, 0x2b],
        'l': 0x1,
        'r': [-0.8, 0x0, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x2c, 0x34, -0x59],
        's': [0x5d, 0x4, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x5f, 0x1a, -0x59],
        's': [0x9, 0x1e, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x15, 0x0, -0x78],
        's': [0x3, 0x19, 0x3f],
        'c': 0x9b9a9a
      }, {
        'p': [-0x4a, 0x4d, -0x39],
        's': [0xd, 0x2, 0xc],
        'c': 0xf5f5f5
      }, {
        'p': [-0x2, 0x0, -0xfb],
        's': [0xb9, 0x24, 0x71],
        'c': '#965c44',
        'bo': 0x1
      }, {
        'p': [-0x63, -0x1, -0x28],
        's': [0x1, 0x19, 0x5f],
        'c': '#9b9a9a'
      }, {
        'p': [-0xd, 0x0, -0xc4],
        's': [0x5, 0x37, 0x6],
        'c': 0x9b9a9a
      }, {
        'p': [-0x60, 0x0, -0xc5],
        's': [0x6, 0x37, 0x8],
        'c': 0x9b9a9a
      }, {
        'p': [-0x5, -0x2, -0xf9],
        's': [0xbd, 0x3, 0x6b],
        'c': 0x59513d,
        't': 0x2
      }, {
        'p': [-0x61, 0x1, -0xfb],
        's': [0x4, 0x39, 0x64],
        'c': 0x965c44
      }, {
        'p': [0x63, 0x2a, -0x12b],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x9a, -0x1, -0xbd],
        's': [0x3, 0x4d, 0x3],
        'pe': 0x1,
        't': 0x2
      }, {
        'p': [-0xe, 0x2a, -0xc4],
        's': [0x97, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0x5a, 0x24, -0xc4],
        's': [0xc, 0x14, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0xd, 0x24, -0xc4],
        's': [0x1a, 0x13, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x4c, 0x24, -0x132],
        's': [0x20, 0x13, 0x3],
        'c': 0x965c44
      }, {
        'p': [0xb, 0x24, -0xc4],
        's': [0x1, 0xd, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x31, 0x24, -0xc4],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0x25, 0x24, -0xc4],
        's': [0x1, 0xd, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0x4a, 0x24, -0xc4],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x92, 0x0, -0xa1],
        's': [0x14, 0x2e, 0x32],
        'c': 0xaa7b68,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [-0x62, 0x0, -0xda],
        's': [0x3, 0x1e, 0x22],
        'c': 0x965c44
      }, {
        'p': [-0x37, 0x24, -0xc4],
        's': [0xe, 0x13, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x1e, 0x24, -0xc4],
        's': [0x10, 0x14, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x3, 0x37, -0xfb],
        's': [0xc4, 0x3, 0x75],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [-0x3, 0x3a, -0xfb],
        's': [0xc5, 0x2, 0x76],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x32, 0x39, -0xf3],
        's': [0x1e, 0x15, 0xf],
        'c': 0x965c44
      }, {
        'p': [-0x32, 0x4a, -0xf3],
        's': [0x20, 0x2, 0x12],
        'c': 0xf5f5f5
      }, {
        'p': [0x92, 0x2e, -0xa2],
        's': [0x16, 0x3, 0x31],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [0x92, 0x14, -0xa2],
        's': [0x15, 0x3, 0x32],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [-0x1, 0x1b, -0xfb],
        's': [0xbd, 0x3, 0x73],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [-0x1e, 0x39, -0x118],
        's': [0x10, 0x10, 0xf],
        'c': 0x965c44
      }, {
        'p': [-0x36, 0x0, -0xc4],
        's': [0x5, 0x37, 0x6],
        'c': 0x9b9a9a
      }, {
        'p': [0x1e, 0x0, -0xc4],
        's': [0x5, 0x37, 0x6],
        'c': 0x9b9a9a
      }, {
        'p': [0xdc, -0x1, -0x6c],
        's': [0x3, 0x4b, 0x3],
        't': 0x2
      }, {
        'p': [0x97, -0x1, -0x15f],
        's': [0x3, 0x4e, 0x3],
        'pe': 0x1,
        't': 0x2
      }, {
        'p': [0x9a, 0x45, -0xbe],
        's': [0x20, 0x2, 0x3],
        't': 0x2
      }, {
        'p': [0x99, 0x3d, -0xbe],
        's': [0x17, 0x2, 0x3],
        't': 0x2
      }, {
        'p': [0xc5, 0x3f, -0x96],
        's': [0x1, 0x1, 0x6b],
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'c': 0x919191,
        't': 0x5
      }, {
        'p': [0xdc, 0x3d, -0x6c],
        's': [0x18, 0x2, 0x3],
        't': 0x2
      }, {
        'p': [0xdb, 0x44, -0x6c],
        's': [0x20, 0x2, 0x3],
        't': 0x2
      }, {
        'p': [0x60, -0x1, -0x12b],
        's': [0x1, 0x2e, 0x1],
        'pe': 0x1,
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x11, 0x0, -0x99],
        's': [0x4f, 0x19, 0x3],
        'c': '#9b9a9a'
      }, {
        'p': [0x1a6, 0x20, -0xe6],
        's': [0x192, 0x1a, 0xb],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x1a5, -0xb, -0x17f],
        's': [0x1c1, 0x27, 0x5],
        'c': 0x72371f,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0xe3, 0x4f, -0x12f],
        's': [0x5, 0x4e, 0x22],
        'l': 0x1,
        'r': [0x2, 0x0, 0x0],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x1a5, 0x1c, -0x128],
        's': [0x1c3, 0x2, 0xb6],
        'c': '#827e7d',
        'bo': 0x1
      }, {
        'p': [-0x2c, 0x0, -0x148],
        's': [0x4, 0x1e, 0x32],
        'c': '#b5b5b5',
        'bo': 0x1
      }, {
        'p': [0x12, 0x17, -0x79],
        's': [0x4c, 0x2, 0x40],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x13, 0x19, -0x99],
        's': [0x4c, 0x2, 0x4],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x91, 0x0, -0xc0],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x99, -0x1, -0x1c5],
        's': [0x3, 0x4e, 0x3],
        'r': [0x0, -0.35, 0x0],
        't': 0x2
      }, {
        'p': [0x98, 0x45, -0x15e],
        's': [0x20, 0x2, 0x3],
        't': 0x2
      }, {
        'p': [0x98, 0x3d, -0x160],
        's': [0x17, 0x2, 0x3],
        't': 0x2
      }, {
        'p': [0xb1, 0x3f, -0x95],
        's': [0x1, 0x1, 0x6c],
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'c': 0x919191,
        't': 0x5
      }, {
        'p': [0xe3, 0x4d, -0x121],
        's': [0x5, 0x4e, 0x25],
        'l': 0x1,
        'r': [-0x2, 0x0, 0x0],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0xe5, 0x3d, -0x128],
        's': [0xb, 0x24, 0xb],
        'c': '#472213',
        'e': 0x161616
      }, {
        'p': [0x10f, 0x4d, -0x128],
        's': [0x7, 0x30, 0x6],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x1a5, 0x1e, -0x128],
        's': [0x1c4, 0x2, 0xb7],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1a6, 0x3d, -0x128],
        's': [0x194, 0x2, 0x91],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x15, 0x19, -0x7b],
        's': [0x4, 0x2, 0x40],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xa2, 0x3f, -0x141],
        's': [0x1, 0x1, 0x106],
        'l': 0x1,
        'c': 0x919191,
        't': 0x5
      }, {
        'p': [0x91, 0x31, -0x79],
        's': [0x94, 0x2, 0x22],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x89, 0x17, -0x79],
        's': [0xa2, 0x2, 0x20],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x25, 0x41, -0x71],
        's': [0x4b, 0x2, 0x31],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x92, 0x31, -0xa2],
        's': [0x17, 0x2, 0x32],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x92, 0x17, -0xa2],
        's': [0x15, 0x2, 0x32],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1ad, 0x54, -0x128],
        's': [0x140, 0x15, 0x34],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x10f, 0x6f, -0x12b],
        's': [0x3, 0x1c, 0xf],
        'l': 0x1,
        'r': [0x2, 0x0, 0x0],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x10f, 0x63, -0x13f],
        's': [0x3, 0x1c, 0xf],
        'l': 0x1,
        'r': [1.13, 0x0, 0x0],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x5c, 0x0, -0xc4],
        's': [0x5, 0x37, 0x6],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [0x77, 0x3b, -0xc3],
        's': [0x32, 0x1, 0x1],
        'l': 0x1,
        'r': [0.03, -0.17, 0.18],
        'c': 0x919191,
        't': 0x5
      }, {
        'p': [0x13e, 0x67, -0x118],
        's': [0x7, 0x13, 0x7],
        'c': 0x965c44
      }, {
        'p': [0x19b, 0x67, -0x118],
        's': [0x7, 0x13, 0x7],
        'c': 0x965c44
      }, {
        'p': [0x202, 0x67, -0x118],
        's': [0x7, 0x14, 0x7],
        'c': 0x965c44
      }, {
        'p': [0x13e, 0x68, -0x13a],
        's': [0x7, 0x14, 0x7],
        'c': 0x965c44
      }, {
        'p': [0x19a, 0x67, -0x13a],
        's': [0x7, 0x13, 0x7],
        'c': 0x965c44
      }, {
        'p': [0x200, 0x67, -0x13a],
        's': [0x7, 0x15, 0x7],
        'c': 0x965c44
      }, {
        'p': [0x14f, -0x18, 0x12],
        's': [0x6c6, 0x4, 0xa11],
        'l': 0x1,
        'c': '#26414f',
        'e': '#1a4054',
        'o': 0.9,
        't': 0x1,
        'ts': 0.8
      }, {
        'p': [0x169, -0x1d, -0xa0],
        's': [0x4a, 0x1d, 0x60],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1be, -0x84, -0x20],
        's': [0xf0, 0x75, 0x3a],
        'c': 0x827e7d,
        'e': 0x161616
      }, {
        'p': [0x1bf, -0x8d, -0x128],
        's': [0x18e, 0x82, 0xb4],
        'c': 0x827e7d,
        'e': 0x161616
      }, {
        'p': [-0xb, 0x31, -0x14],
        's': [0xcc, 0x3, 0x3e],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [-0xb, 0x34, -0x14],
        's': [0xcd, 0x2, 0x3f],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xb, 0x1a, -0x14],
        's': [0xcd, 0x2, 0x3f],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x112, -0x1e, -0x18b],
        's': [0x6, 0x36, 0x3e],
        'c': '#b5b5b5',
        'bo': 0x1
      }, {
        'p': [0xe7, 0x3f, 0x136],
        's': [0x1, 0x1, 0x347],
        'l': 0x1,
        'c': 0x919191,
        't': 0x5
      }, {
        'p': [0x1a6, 0x3a, -0x128],
        's': [0x193, 0x3, 0x90],
        'c': '#827e7d'
      }, {
        'p': [0x114, -0x1e, 0x66],
        's': [0x9, 0x24, 0x61],
        'c': '#b5b5b5'
      }, {
        'p': [0x131, -0x1d, 0x39],
        's': [0x31, 0x23, 0x7],
        'c': '#b5b5b5'
      }, {
        'p': [0x7e, 0x0, -0x1ab],
        's': [0x123, 0x1e, 0x4],
        'c': '#b5b5b5',
        'bo': 0x1
      }, {
        'p': [0x112, -0x1f, -0x1ab],
        's': [0x7, 0x42, 0x7],
        'c': '#ababab',
        'bo': 0x1
      }, {
        'p': [0x86, 0x0, -0x1ab],
        's': [0x7, 0x23, 0x7],
        'c': '#ababab',
        'bo': 0x1
      }, {
        'p': [0xda, 0x0, -0x1ab],
        's': [0x7, 0x23, 0x7],
        'c': '#ababab',
        'bo': 0x1
      }, {
        'p': [0xde, -0x2, 0x70],
        's': [0x3, 0x4b, 0x3],
        'pe': 0x1,
        't': 0x2
      }, {
        'p': [0xc4, 0x1d, -0x17],
        's': [0x73, 0x2, 0x6d],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0xc4, 0x1f, -0x17],
        's': [0x73, 0x2, 0x6d],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x61, -0x1, -0xc8],
        's': [0x3, 0x3a, 0x3],
        't': 0x2,
        'bo': 0x1
      }, {
        'p': [0x1ba, 0x31, -0x1f],
        's': [0xf7, 0x2, 0x3d],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x1ba, 0x33, -0x1f],
        's': [0xf7, 0x2, 0x3d],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xdd, 0x3d, 0x70],
        's': [0x17, 0x2, 0x3],
        't': 0x2
      }, {
        'p': [0xdd, 0x44, 0x70],
        's': [0x20, 0x2, 0x3],
        't': 0x2
      }, {
        'p': [0xd4, 0x3f, 0x136],
        's': [0x1, 0x1, 0x347],
        'l': 0x1,
        'c': 0x919191,
        't': 0x5
      }, {
        'p': [-0x1a0, -0x1, -0x222],
        's': [0x76, 0x86, 0x14f],
        'l': 0x1,
        'c': '#aa7b68'
      }, {
        'p': [-0x1a0, 0x84, -0x222],
        's': [0x79, 0x4, 0x151],
        'l': 0x1,
        'c': 0xc0c0c0,
        'e': 0x161616
      }, {
        'p': [-0x1a0, 0x43, -0x222],
        's': [0x79, 0x4, 0x151],
        'l': 0x1,
        'c': 0xc0c0c0,
        'e': 0x161616
      }, {
        'p': [-0x27, -0x1, -0x28],
        's': [0x1, 0x19, 0x5f],
        'c': '#9b9a9a'
      }, {
        'p': [0x91, 0x5e, -0x244],
        's': [0xdb, 0x4, 0x89],
        'l': 0x1,
        'e': 0x161616
      }, {
        'p': [0x91, 0x3f, -0x244],
        's': [0xdb, 0x4, 0x89],
        'l': 0x1,
        'e': 0x161616
      }, {
        'p': [-0x64, 0x0, -0x70],
        's': [0x7, 0x22, 0x7],
        'c': '#ababab',
        'bo': 0x1
      }, {
        'p': [-0x64, 0x0, -0x9c],
        's': [0x7, 0x22, 0x7],
        'c': '#ababab',
        'bo': 0x1
      }, {
        'p': [-0x64, 0x0, 0x64],
        's': [0x7, 0x22, 0x7]
      }, {
        'p': [-0x64, 0x0, 0x92],
        's': [0x7, 0x22, 0x7]
      }, {
        'p': [-0x64, 0x0, 0xcc],
        's': [0x7, 0x22, 0x7]
      }, {
        'p': [-0x2, 0x1e, -0xfb],
        's': [0xbf, 0x2, 0x73],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x8d, 0x2, 0x1d],
        's': [0x4, 0x39, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0xfb, 0x4, 0x1d],
        's': [0x4, 0x37, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0xc0, 0x6, -0x17],
        's': [0x4, 0x35, 0x6c],
        'c': 0x9b9a9a
      }, {
        'p': [0x8d, 0x3, -0x4b],
        's': [0x4, 0x39, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0xfb, -0x1, -0x4b],
        's': [0x4, 0x3d, 0x4],
        'c': '#9b9a9a'
      }, {
        'p': [0x8d, -0x1, 0x1d],
        's': [0x5, 0x7, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0xfb, 0x0, 0x1d],
        's': [0x5, 0x6, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0xc0, 0x0, -0x17],
        's': [0x5, 0x6, 0x6d],
        'c': 0x9b9a9a
      }, {
        'p': [0xfb, -0x1, -0x4b],
        's': [0x5, 0x7, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0x8d, -0x1, -0x4b],
        's': [0x5, 0x7, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0x233, -0xf, -0x20],
        's': [0x4, 0x40, 0x39],
        'c': 0x9b9a9a
      }, {
        'p': [0x1a, 0x21, 0x81],
        's': [0xfd, 0x3, 0x75],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x5c, 0x0, 0x55],
        's': [0x77, 0x21, 0x1c],
        'c': 0xaa7b68,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [-0x33, 0x0, 0x85],
        's': [0x60, 0x21, 0x7a],
        'c': 0xaa7b68,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [-0x3, 0x0, 0x46],
        's': [0x5, 0x21, 0x7],
        'c': 0x9b9a9a
      }, {
        'p': [0x1f, 0x0, 0x45],
        's': [0x5, 0x21, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0xe, 0x21, 0x43],
        's': [0x27, 0x3, 0x7],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [-0x2f, 0x4, 0x43],
        's': [0x1f, 0x1, 0x2],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [0x1a, 0x0, 0x88],
        's': [0xfd, 0x4, 0x84],
        'c': '#9b9a9a'
      }, {
        'p': [-0x61, -0x1, 0x6],
        's': [0x6, 0x1a, 0x9],
        'c': 0x9b9a9a
      }, {
        'p': [-0x60, -0x1, -0x56],
        's': [0x6, 0x1a, 0x9],
        'c': 0x9b9a9a
      }, {
        'p': [-0x28, -0x1, -0x56],
        's': [0x7, 0x1a, 0x9],
        'c': 0x9b9a9a
      }, {
        'p': [0x98, 0x3d, -0x1c4],
        's': [0x17, 0x2, 0x3],
        'r': [0x0, -0.09, 0x0],
        't': 0x2
      }, {
        'p': [0x98, 0x45, -0x1c5],
        's': [0x20, 0x2, 0x3],
        'r': [0x0, -0.09, 0x0],
        't': 0x2
      }, {
        'p': [-0xf4, -0x3, -0xe3],
        's': [0x22, 0x9a, 0x27],
        'l': 0x1,
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [0x1a, 0x24, 0x81],
        's': [0xfd, 0x2, 0x75],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xe, 0x24, 0x43],
        's': [0x28, 0x2, 0x8],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1db, -0xb, -0x11a],
        's': [0x155, 0x28, 0x97],
        'c': 0x72371f,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0xed, -0xb, -0xf0],
        's': [0x51, 0x27, 0x42],
        'c': 0x72371f,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0x1a6, 0x20, -0x16a],
        's': [0x192, 0x1b, 0xb],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0xe0, 0x20, -0x128],
        's': [0x2, 0x1b, 0x7a],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x112, 0x18, -0x194],
        's': [0x6, 0x2, 0x27],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x145, 0x6, -0x54],
        's': [0x9, 0x2, 0x39],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x5c, 0x0, -0x132],
        's': [0x5, 0x37, 0x6],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x192, 0x6, -0xa0],
        's': [0x9, 0x2, 0x5f],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x146, 0x6, 0x1c],
        's': [0x7, 0x2, 0x41],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x129, 0x6, 0x39],
        's': [0x33, 0x2, 0x7],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x114, 0x6, 0x69],
        's': [0x9, 0x2, 0x5b],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x65, 0x20, 0x83],
        's': [0x4, 0x2, 0xf1],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x65, 0x20, -0xb3],
        's': [0x5, 0x2, 0xff],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x2c, 0x1e, -0x144],
        's': [0x4, 0x2, 0x29],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xb9, 0x1e, -0x1ab],
        's': [0xb5, 0x2, 0x5],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1a, 0x25, 0x81],
        's': [0xfb, 0x50, 0x73],
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [-0x17c, 0x5d, 0x6a],
        's': [0xff, 0x4, 0x7d],
        'l': 0x1,
        'c': '#bababa'
      }, {
        'p': [-0x17c, 0x61, 0x6a],
        's': [0xfe, 0x2, 0x7d],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x95, 0x0, -0x79],
        's': [0x2c, 0x2e, 0x1e],
        'c': 0xaa7b68,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [-0x43, 0x0, -0x19a],
        's': [0x3e, 0x1f, 0x83],
        'c': '#965c44',
        'e': '#0e0e0e',
        'bo': 0x1
      }, {
        'p': [0x2, 0xc, -0x87],
        's': [0x3, 0x32, 0x3],
        'c': 0x9b9b9b
      }, {
        'p': [0x7e, 0x6, -0x79],
        's': [0x3, 0x2a, 0x1f],
        'c': 0x9b9b9b
      }, {
        'p': [0xac, 0x5, -0x79],
        's': [0x3, 0x2b, 0x1f],
        'c': 0x9b9b9b
      }, {
        'p': [0xd8, 0x5, -0x6b],
        's': [0x3, 0x29, 0x3],
        'c': 0x9b9b9b
      }, {
        'p': [0x48, 0x5, -0x5b],
        's': [0x3, 0x39, 0x3],
        'c': 0x9b9b9b
      }, {
        'p': [0x48, 0x0, -0x86],
        's': [0x3, 0x3e, 0x5],
        'c': 0x9b9b9b
      }, {
        'p': [0xd8, -0x2, -0x6b],
        's': [0x4, 0x8, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0xd8, 0x3, -0x87],
        's': [0x3, 0x2d, 0x3],
        'c': 0x9b9b9b
      }, {
        'p': [0xd8, 0x0, -0x87],
        's': [0x4, 0x6, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0xac, 0x0, -0x87],
        's': [0x4, 0x6, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0x7e, 0x0, -0x87],
        's': [0x4, 0x6, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0x48, 0x0, -0x87],
        's': [0x4, 0x6, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0xac, -0x2, -0x6b],
        's': [0x4, 0x8, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0x7e, -0x2, -0x6b],
        's': [0x4, 0x8, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0x48, -0x1, -0x5b],
        's': [0x4, 0x7, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0x24, -0x1, -0x5b],
        's': [0x4, 0x7, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0x146, -0x1e, 0x18],
        's': [0x7, 0x24, 0x3b],
        'c': '#b5b5b5'
      }, {
        'p': [0x145, -0x1d, -0x54],
        's': [0x9, 0x23, 0x39],
        'c': 0x827e7d,
        'e': 0x161616
      }, {
        'p': [-0x46, -0x2, -0x28],
        's': [0x3f, 0x1, 0x64],
        'c': 0x6b6b6b,
        't': 0x1
      }, {
        'p': [0x142, -0x1, -0x3b],
        's': [0x6, 0x32, 0x3],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [0x49, -0x1a, -0x5e],
        's': [0x194, 0x1a, 0x36c],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x19b, 0x18, -0x7],
        's': [0x2e, 0x10, 0x4],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x1eb, 0x18, -0x39],
        's': [0x2e, 0x10, 0x4],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x153, 0x18, -0x39],
        's': [0x1d, 0x10, 0x4],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x22c, 0x18, -0x39],
        's': [0x10, 0x10, 0x4],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x1bd, 0x20, -0x3a],
        's': [0xd4, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x1ca, 0x19, -0x3a],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x1bc, 0x19, -0x3a],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x179, 0x19, -0x3a],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x16c, 0x19, -0x3a],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x20c, 0x19, -0x3a],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x21b, 0x19, -0x3a],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x213, 0x17, -0x20],
        's': [0x24, 0x2, 0x38],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x12c, -0x1d, -0x8a],
        's': [0x32, 0x1d, 0x17f],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x170, 0x6, -0x6c],
        's': [0x4d, 0x2, 0x9],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x26c, 0x14, -0x128],
        's': [0x6, 0x26, 0x79],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x170, -0x1d, -0x6c],
        's': [0x4d, 0x23, 0x9],
        'c': 0x827e7d,
        'e': 0x161616
      }, {
        'p': [0x192, -0x1d, -0xa0],
        's': [0x9, 0x23, 0x5f],
        'c': 0x827e7d,
        'e': 0x161616
      }, {
        'p': [0x1bb, 0x28, -0x39],
        's': [0xed, 0x9, 0x4],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [-0x4, 0x1a, -0x59],
        's': [0x3, 0xa, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x4, 0x36, -0x47],
        's': [0x3, 0x2, 0x19],
        'c': 0x965c44
      }, {
        'p': [0xb, 0x31, -0xc4],
        's': [0x16, 0x6, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x25, 0x31, -0xc4],
        's': [0x16, 0x6, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x49, 0x31, -0xc4],
        's': [0x16, 0x6, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x4c, 0x24, -0xc4],
        's': [0x20, 0x13, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x1e, 0x0, -0x132],
        's': [0x5, 0x37, 0x6],
        'c': 0x9b9a9a
      }, {
        'p': [0x1e, 0x24, -0x132],
        's': [0x10, 0x14, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0xd, 0x0, -0x131],
        's': [0x5, 0x37, 0x6],
        'c': 0x9b9a9a
      }, {
        'p': [-0xd, 0x24, -0x132],
        's': [0x1a, 0x13, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x36, 0x0, -0x131],
        's': [0x5, 0x37, 0x6],
        'c': 0x9b9a9a
      }, {
        'p': [-0x37, 0x24, -0x132],
        's': [0xe, 0x13, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x5a, 0x24, -0x132],
        's': [0xc, 0x14, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x60, 0x0, -0x131],
        's': [0x6, 0x37, 0x8],
        'c': 0x9b9a9a
      }, {
        'p': [-0x25, 0x31, -0x132],
        's': [0x16, 0x6, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x49, 0x31, -0x132],
        's': [0x16, 0x6, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x31, 0x31, -0x132],
        's': [0x16, 0x6, 0x3],
        'c': 0x965c44
      }, {
        'p': [0xb, 0x31, -0x132],
        's': [0x16, 0x6, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0xe, 0x2a, -0x132],
        's': [0x97, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x31, 0x24, -0x132],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xb, 0x24, -0x132],
        's': [0x1, 0xd, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0x25, 0x24, -0x132],
        's': [0x1, 0xd, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0x4a, 0x24, -0x132],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x59, 0x24, -0x129],
        's': [0x3, 0x13, 0xd],
        'c': '#965c44'
      }, {
        'p': [0x59, 0x24, -0xce],
        's': [0x3, 0x13, 0xf],
        'c': 0x965c44
      }, {
        'p': [0x59, 0x24, -0xee],
        's': [0x3, 0x13, 0xb],
        'c': 0x965c44
      }, {
        'p': [0x59, 0x24, -0x10b],
        's': [0x3, 0x13, 0x9],
        'c': 0x965c44
      }, {
        'p': [0x59, 0x31, -0xdf],
        's': [0x3, 0x6, 0x13],
        'c': 0x965c44
      }, {
        'p': [0x59, 0x31, -0xfd],
        's': [0x3, 0x6, 0x13],
        'c': 0x965c44
      }, {
        'p': [0x59, 0x31, -0x119],
        's': [0x3, 0x6, 0x13],
        'c': 0x965c44
      }, {
        'p': [0x59, 0x2a, -0xfc],
        's': [0x1, 0x1, 0x51],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x59, 0x24, -0xfd],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x59, 0x24, -0xdf],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x59, 0x24, -0x11a],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xee, 0x0, -0x253],
        's': [0x16, 0xed, 0x15],
        'l': 0x1,
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [0xc5, 0x0, -0x252],
        's': [0x16, 0xed, 0x15],
        'l': 0x1,
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [0x1a, 0x48, 0x81],
        's': [0xfd, 0x3, 0x75],
        'c': '#9b9a9a'
      }, {
        'p': [0x1a, 0x4b, 0x81],
        's': [0xfd, 0x2, 0x75],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1a, 0x73, 0x81],
        's': [0xfd, 0x3, 0x75],
        'c': '#9b9a9a'
      }, {
        'p': [0x1a, 0x76, 0x81],
        's': [0xfd, 0x2, 0x75],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x91, 0xc, -0xc0],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xcd, 0x0, -0x8e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xcd, 0xc, -0x8e],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x13e, 0x0, -0xc9],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x13e, 0x0, -0xbd],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x118, 0xc, -0x68],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x13e, 0xc, -0xc3],
        's': [0xc, 0x2, 0x18],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x125, 0x0, -0x7c],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x157, 0x0, -0x77],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x157, 0xc, -0x77],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x125, 0x7, -0x7c],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xd8, 0x0, 0xa0],
        's': [0x39, 0x1a, 0x19],
        'i': 0x11
      }, {
        'p': [0x11e, -0x1, -0x1f],
        's': [0x46, 0x5a, 0x38],
        'c': '#965c44',
        'bo': 0x1
      }, {
        'p': [0x142, -0x1, -0x3],
        's': [0x6, 0x32, 0x3],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [0x95, 0x0, -0x108],
        's': [0x14, 0x15, 0x24],
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [0x95, 0x15, -0x108],
        's': [0x1, 0x4, 0x28],
        'c': '#9b9a9a'
      }, {
        'p': [0x9b, 0x14, -0x108],
        's': [0xc, 0x1, 0x25],
        'l': 0x1,
        'r': [0x0, 0x0, -0.2],
        'c': '#9b9a9a'
      }, {
        'p': [0x8f, 0x14, -0x108],
        's': [0xc, 0x1, 0x25],
        'l': 0x1,
        'r': [0x0, 0x0, 0.2],
        'c': '#9b9a9a'
      }, {
        'p': [0x85, 0x0, -0xff],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x85, 0xc, -0xff],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xc3, 0x0, -0x79],
        's': [0x2c, 0x2e, 0x1e],
        'c': 0xaa7b68,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0x38, 0x0, -0x90],
        's': [0x2, 0x17, 0x4],
        'i': 0x3,
        't': 0x2
      }, {
        'p': [0x9b, 0x15, -0x108],
        's': [0xd, 0x2, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, -0.2],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x8f, 0x15, -0x108],
        's': [0xd, 0x2, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, 0.2],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x53, 0x0, -0xbd],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x53, 0xc, -0xbd],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x118, 0x0, -0x80],
        's': [0x14, 0x15, 0x24],
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [0x118, 0x15, -0x80],
        's': [0x1, 0x4, 0x28],
        'c': '#9b9a9a'
      }, {
        'p': [0x11e, 0x14, -0x80],
        's': [0xc, 0x1, 0x25],
        'l': 0x1,
        'r': [0x0, 0x0, -0.2],
        'c': '#9b9a9a'
      }, {
        'p': [0x112, 0x14, -0x80],
        's': [0xc, 0x1, 0x25],
        'l': 0x1,
        'r': [0x0, 0x0, 0.2],
        'c': '#9b9a9a'
      }, {
        'p': [0x11e, 0x15, -0x80],
        's': [0xd, 0x2, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, -0.2],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x112, 0x15, -0x80],
        's': [0xd, 0x2, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, 0.2],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x53, 0x18, -0xbd],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xd8, 0x19, 0xa0],
        's': [0x3a, 0x2, 0x1a],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x41, 0x17, -0x69],
        's': [0x12, 0x2, 0x20],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x52, 0x0, -0x38],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x52, 0xc, -0x38],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x1c, 0x0, -0x8f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x1c, 0xc, -0x8f],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x3, 0x1a, -0x41],
        's': [0x8, 0x2, 0x1c],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x5, 0x1a, -0x4a],
        's': [0x8, 0x2, 0xa],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x7, 0x0, -0x46],
        's': [0x2, 0x1a, 0x4],
        'i': 0x3,
        't': 0x2
      }, {
        'p': [0x5, 0x0, -0x46],
        's': [0x4, 0x18, 0x9],
        'v': 0x1,
        'c': '#ffffff',
        't': 0x5,
        'ab': 0x1
      }, {
        'p': [-0x56, 0x22, -0x59],
        's': [0x9, 0x2, 0x3],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x56, 0x1a, -0x59],
        's': [0x9, 0x8, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x4, 0x24, -0x59],
        's': [0x3, 0x2, 0x3],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x118, 0x0, -0x68],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x11e, 0x1d, -0x1f],
        's': [0x46, 0x2, 0x3a],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x11e, 0x1f, -0x1f],
        's': [0x46, 0x2, 0x3a],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x11e, 0x3b, -0x1f],
        's': [0x47, 0x2, 0x3a],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x11e, 0x3d, -0x1f],
        's': [0x47, 0x2, 0x3a],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x11e, 0x59, -0x1f],
        's': [0x47, 0x2, 0x3a],
        'c': '#9b9a9a'
      }, {
        'p': [0x11e, 0x5b, -0x1f],
        's': [0x48, 0x2, 0x3c],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xcc, 0x0, 0x24],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xcc, 0xc, 0x24],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x2, 0x24, -0xfb],
        's': [0xb4, 0xd, 0x6d],
        'c': '#475e72',
        'o': 0.7000000000000001,
        't': 0x5
      }, {
        'p': [0x1bb, -0x10, -0x7],
        's': [0xee, 0x28, 0x4],
        'c': 0x72371f,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0x1eb, 0x18, -0x7],
        's': [0x2e, 0x10, 0x4],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x19b, 0x18, -0x39],
        's': [0x2e, 0x10, 0x4],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x153, 0x18, -0x7],
        's': [0x1d, 0x10, 0x4],
        'c': 0x72371f,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0x22c, 0x18, -0x7],
        's': [0x10, 0x10, 0x4],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x1bb, 0x28, -0x7],
        's': [0xed, 0x9, 0x4],
        'c': 0x72371f,
        'e': 0x161616
      }, {
        'p': [0x1bb, -0x10, -0x39],
        's': [0xee, 0x28, 0x4],
        'c': 0x72371f,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0x1bd, 0x20, -0x7],
        's': [0xd4, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x179, 0x19, -0x7],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x16c, 0x19, -0x7],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x1bc, 0x19, -0x7],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x1ca, 0x19, -0x7],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x20c, 0x19, -0x7],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x21b, 0x19, -0x7],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x1c3, 0x17, -0x20],
        's': [0x24, 0x2, 0x38],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x173, 0x17, -0x20],
        's': [0x24, 0x2, 0x38],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x1c2, 0x19, -0x20],
        's': [0xc5, 0xf, 0x2e],
        'c': '#475e72',
        'o': 0.7000000000000001,
        't': 0x5
      }, {
        'p': [0x63, 0x2b, -0x12b],
        's': [0x5, 0x1, 0x3],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x9d, 0x2b, 0x4c],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x9a, -0x1, 0x4c],
        's': [0x1, 0x2f, 0x1],
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x9d, 0x2c, 0x4c],
        's': [0x5, 0x1, 0x3],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x128, 0x29, -0x8f],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x125, 0x1, -0x8f],
        's': [0x1, 0x2b, 0x1],
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x128, 0x2a, -0x8f],
        's': [0x5, 0x1, 0x3],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0xc8, -0x1, -0x186],
        's': [0x1, 0x2f, 0x1],
        'pe': 0x1,
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x5e, 0x2b, -0x88],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [-0x61, -0x1, -0x88],
        's': [0x1, 0x2f, 0x1],
        'pe': 0x1,
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x5e, 0x2c, -0x88],
        's': [0x5, 0x1, 0x3],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x1c, 0x2b, 0x10],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x1c, -0x1, 0xd],
        's': [0x1, 0x2f, 0x1],
        'pe': 0x1,
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x1c, 0x2c, 0x10],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x60, 0x2a, -0x15],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x5d, -0x1, -0x15],
        's': [0x1, 0x2e, 0x1],
        'pe': 0x1,
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x60, 0x2b, -0x15],
        's': [0x5, 0x1, 0x3],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0xc8, 0x2b, -0x189],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0xc8, 0x2a, -0x189],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [-0xd, 0x2b, -0xbd],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [-0xd, 0x2c, -0xc0],
        's': [0x1, 0x1, 0x3],
        'c': '#727272',
        't': 0x5
      }, {
        'p': [-0xd, 0x2a, -0xbd],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0xac, 0x2b, -0x65],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0xac, 0x2c, -0x68],
        's': [0x1, 0x1, 0x3],
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xac, 0x2a, -0x65],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [-0x61, -0x1, 0x2a],
        's': [0x1, 0x2f, 0x1],
        'pe': 0x1,
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [-0x5e, 0x2c, 0x2a],
        's': [0x5, 0x1, 0x3],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [-0x5e, 0x2b, 0x2a],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x12, 0x0, 0x10],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x12, 0xc, 0x10],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xbf, 0x0, -0x16b],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xbf, 0xc, -0x16b],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xf8, 0x25, -0x17],
        's': [0x9, 0xf, 0x6b],
        'c': 0x965c44
      }, {
        'p': [0xc4, 0x34, -0x17],
        's': [0x71, 0x7, 0x6b],
        'c': 0x965c44
      }, {
        'p': [0xc0, 0x25, -0x17],
        's': [0x16, 0xf, 0x6b],
        'c': 0x965c44
      }, {
        'p': [0x90, 0x25, -0x46],
        's': [0x9, 0xf, 0xd],
        'c': 0x965c44
      }, {
        'p': [0x90, 0x25, -0x16],
        's': [0x9, 0xf, 0xb],
        'c': 0x965c44
      }, {
        'p': [0x90, 0x25, 0x18],
        's': [0x9, 0xf, 0xd],
        'c': 0x965c44
      }, {
        'p': [0xc4, 0x2c, -0x4b],
        's': [0x62, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xc4, 0x2c, 0x1d],
        's': [0x62, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x9f, 0x25, -0x4b],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xab, 0x25, -0x4b],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xd8, 0x25, -0x4b],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xe6, 0x25, -0x4b],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xe6, 0x25, 0x1d],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xd8, 0x25, 0x1d],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xab, 0x25, 0x1d],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x9f, 0x25, 0x1d],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x8d, 0x25, -0x6],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x8d, 0x25, -0x34],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x8d, 0x2c, -0x16],
        's': [0x1, 0x1, 0x52],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xc2, 0x25, -0x17],
        's': [0x69, 0xf, 0x67],
        'c': '#475e72',
        'o': 0.7000000000000001,
        't': 0x5
      }, {
        'p': [0x8d, 0x25, -0x28],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x8d, 0x25, 0x6],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x5c, 0x0, -0x15b],
        's': [0x6, 0x30, 0x7],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [-0x4e, 0x0, -0x15b],
        's': [0x6, 0x30, 0x7],
        'c': '#9b9a9a'
      }, {
        'p': [0x7, 0x30, -0x19a],
        's': [0xb0, 0x4, 0x85],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x7, 0x34, -0x19a],
        's': [0xb1, 0x2, 0x86],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x2d, 0x0, -0x21],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x5f, 0x0, -0x2],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x5d, 0x0, -0x2d],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x44, 0x0, -0xbd],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [-0x44, 0xc, -0xbd],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x56, 0x31, -0x59],
        's': [0x9, 0x3, 0x3],
        'c': 0x965c44
      }, {
        'p': [-0x4, 0x32, -0x59],
        's': [0x3, 0x2, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x1a, 0x0, -0x137],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x9a, -0x1, -0xc2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x86, -0x1, -0x109],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.78, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x9a, -0x1, -0x11d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.78, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xc0, -0x1, -0x174],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.78, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x96, -0x1, -0x157],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.31, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x5f, -0x1, -0x12d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.57, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xa0, -0x1, -0x8b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.7, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xc3, -0x1, -0x8b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.7, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xcb, -0x1, -0xcb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.7, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xd7, -0x1, -0x8d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.87, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x10b, -0x1, -0x8a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.87, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x135, -0x1, -0xcb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.87, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xc3, -0x1, -0xcc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.13, -1.49, -3.13],
        'c': '#d8f2ff'
      }, {
        'p': [0x125, -0x1, -0x8d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.87, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x126, -0x1, -0x77],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.88, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x13d, -0x1, -0x40],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.87, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x100, -0x1, -0x40],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.87, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x10f, -0x1, -0x6b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.87, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xd8, -0x1, -0x67],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.35, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xbb, -0x1, -0x4f],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.78, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x94, -0x1, -0x67],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.78, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x4d, -0x1, -0x66],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.78, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x4d, -0x1, -0x5e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.14, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x5c, -0x1, -0x35],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.79, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x49, -0x1, -0x35],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.79, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x9, -0x1, -0x35],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.79, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x9, -0x1, -0x58],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.79, 3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x5e, -0x1, -0x12],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.79, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x23, -0x1, 0x43],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.43, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x4c, -0x1, 0x42],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.53, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x1b, -0x1, 0xe],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.53, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x4b, 0x0, 0xb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [2.93, 1.56, -2.93],
        'c': '#d8f2ff'
      }, {
        'p': [0x9c, -0x1, 0x4c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.43, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xdb, -0x1, 0x6e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.43, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xcb, -0x1, 0x6c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.09, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xc4, -0x1, 0x19],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.26, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x8a, -0x1, 0x11],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.96, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x89, -0x1, -0x44],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.96, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x86, 0x0, -0x16],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x86, 0xc, -0x16],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x88, -0x1, -0x1d],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.96, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x81, -0x1, -0xf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.09, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x81, -0x1, 0x44],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [-0x8, -0x1, 0x44],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [-0x60, -0x1, 0x42],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.61, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x27, -0x1, 0xe],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x9, -0x1, 0xd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [-0x5f, -0x1, 0x29],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.44, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x2a, -0x1, -0x18],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [-0x5f, -0x1, -0x23],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.87, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [-0x5f, -0x1, -0x9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.48, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x2c, -0x1, -0x4e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -1.23, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x60, -0x1, -0x37],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x1a, -0x1, -0x99],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x3b, -0x1, -0xc0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [-0x5f, -0x1, -0x89],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x4a, -0x1, -0xbe],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x3c, -0x1, -0x8b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x88, -0x1, -0xbd],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.88, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x8b, -0x1, -0xf5],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.44, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x5e, -0x1, -0xcc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.09, 3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x60, -0x1, -0xc2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.96, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x66, -0x1, -0x8a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.96, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xc2, -0x1, -0x10c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xc3, -0x1, -0x161],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.69, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x60, -0x1, -0x160],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.52, 3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xc6, -0x1, -0x186],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.52, 3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x64, 0x0, -0x172],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x64, 0xc, -0x172],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x61, -0x1, -0x17c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.52, 3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x8e, -0x1, -0x1a6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.04, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xd4, -0x1, -0x1a6],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.04, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xda, 0x23, -0x1ab],
        's': [0x7, 0x3, 0x7],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x86, 0x23, -0x1ab],
        's': [0x7, 0x3, 0x7],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x112, 0x23, -0x1ab],
        's': [0x7, 0x3, 0x7],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x98, -0x1, -0x162],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.05, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xc2, 0x0, -0x134],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xc1, -0x1, -0x14b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.86, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xc2, 0x7, -0x134],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xdc, -0x1, -0x72],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.87, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x4, 0x33, -0x52],
        's': [0x3, 0x3, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x4, 0x34, -0x3c],
        's': [0x3, 0x2, 0x3],
        'c': 0x965c44
      }, {
        'p': [0x4, 0x1b, -0x3c],
        's': [0x3, 0x3, 0x3],
        'l': 0x1,
        'c': 0x965c44
      }, {
        'p': [0xd8, 0x0, 0x5b],
        's': [0x14, 0x15, 0x24],
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [0xd8, 0x15, 0x5b],
        's': [0x1, 0x4, 0x28],
        'c': '#9b9a9a'
      }, {
        'p': [0xde, 0x14, 0x5b],
        's': [0xc, 0x1, 0x25],
        'l': 0x1,
        'r': [0x0, 0x0, -0.2],
        'c': '#9b9a9a'
      }, {
        'p': [0xd2, 0x14, 0x5b],
        's': [0xc, 0x1, 0x25],
        'l': 0x1,
        'r': [0x0, 0x0, 0.2],
        'c': '#9b9a9a'
      }, {
        'p': [0xc8, 0x0, 0x64],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xc8, 0xc, 0x64],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xde, 0x15, 0x5b],
        's': [0xd, 0x2, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, -0.2],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xd2, 0x15, 0x5b],
        's': [0xd, 0x2, 0x26],
        'l': 0x1,
        'r': [0x0, 0x0, 0.2],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xc9, -0x1, 0x5a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.78, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xdd, -0x1, 0x46],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.78, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xe5, -0x1, 0x5b],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.61, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xb5, 0x0, 0xa7],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xb5, 0xc, 0xa7],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xf5, -0x1, 0x93],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.4, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xf8, -0x1, 0xaa],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.88, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x10c, -0x1, 0x60],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xd6, -0x1, 0x22],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.71, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xfe, -0x1, 0x20],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.8, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x13c, -0x1, 0x30],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.45, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x13e, -0x1, 0x0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.03, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x4, 0x1b, -0x52],
        's': [0x3, 0x4, 0x3],
        'l': 0x1,
        'c': 0x965c44
      }, {
        'p': [0x9c, 0x0, 0x74],
        's': [0x11, 0x2, 0x22],
        'c': 0x9b9a9a
      }, {
        'p': [0x99, 0x0, 0x85],
        's': [0x5, 0x21, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0x99, 0x0, 0x63],
        's': [0x5, 0x21, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0x9b, 0x21, 0x74],
        's': [0x5, 0x3, 0x27],
        'c': 0x9b9a9a,
        'bo': 0x1
      }, {
        'p': [0x98, 0x24, 0x74],
        's': [0xd, 0x2, 0x28],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x4a, 0x0, 0x9e],
        's': [0x9b, 0x21, 0x32],
        'c': 0xaa7b68,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0x9d, -0x1, 0x87],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.43, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x9e, -0x1, 0x60],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.43, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x85, 0x4, 0x7f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xb8, -0x1, 0x9e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.88, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x1c, -0x1, -0x5e],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x5f, -0x1, -0xbe],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.71, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x8, -0x1, -0xbf],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.8, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x1c, -0x1, -0x9c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.68, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x87, -0x1, -0xa4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.33, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x5c, -0x1, -0xf9],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.2, 3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x140, -0x1, -0x73],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.13, -1.48, -3.13],
        'c': '#d8f2ff'
      }, {
        'p': [0xfd, -0x2, -0xaa],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.96, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x110, -0x2, -0x95],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.61, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0xf5, -0x1, -0xb0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.13, -1.4, -3.13],
        'c': '#d8f2ff'
      }, {
        'p': [0x4a, -0x1, -0x157],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.78, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x2, -0x1, -0x157],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.26, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xf8, 0x0, -0xac],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xf8, 0x7, -0xac],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x30, 0x4, 0x69],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x147, -0x1, -0xcc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.96, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x18a, -0x1, -0xcc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.96, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x189, -0x1, -0x74],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -1.05, 3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x78, 0x0, -0x67],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x78, 0x7, -0x67],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x16b, -0x1, -0xcc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.96, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x164, 0x0, -0xcb],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x164, 0x7, -0xcb],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x15f, -0x1, -0x74],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.7, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x91, -0x1, 0x1a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 1.12, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x9e, -0x1, -0xa7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.7, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x18a, -0x1, -0xa4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, -0.78, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x162, 0x0, -0x9f],
        's': [0x8, 0x8, 0x8],
        'pe': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x162, 0x8, -0x9f],
        's': [0x6, 0x7, 0x6],
        'pe': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x162, 0xf, -0x9f],
        's': [0x4, 0x4, 0x4],
        'pe': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x15f, 0xa, -0x9f],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x15f, 0xd, -0x9f],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x15f, 0x10, -0x9f],
        's': [0x2, 0x1, 0x1],
        'l': 0x1,
        'c': '#ce7e3c',
        't': 0x5
      }, {
        'p': [0x160, 0x11, -0xa0],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x160, 0x11, -0x9e],
        's': [0x1, 0x1, 0x1],
        'l': 0x1,
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x162, 0xd, -0x99],
        's': [0x1, 0x1, 0x6],
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': '#563f2c',
        't': 0x5
      }, {
        'p': [0x162, 0xd, -0xa5],
        's': [0x1, 0x1, 0x6],
        'l': 0x1,
        'r': [0.44, 0x0, 0x0],
        'c': '#563f2c',
        't': 0x5
      }, {
        'p': [0x162, 0x13, -0x9f],
        's': [0x6, 0x1, 0x6],
        'l': 0x1,
        'c': '#292929',
        't': 0x5
      }, {
        'p': [0x162, 0x14, -0x9f],
        's': [0x4, 0x3, 0x4],
        'l': 0x1,
        'c': '#292929',
        't': 0x5
      }, {
        'p': [0x15d, -0x1, -0xa3],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.48, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x15e, -0x1, -0x9a],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x168, -0x1, -0xa0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.22, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x6, 0x0, -0x15b],
        's': [0x5, 0x30, 0x7],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0xd3, 0x2, -0x44],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0xd3, 0x9, -0x44],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x6, 0x2a, -0x157],
        's': [0x1, 0x1, 0x3],
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x6, 0x29, -0x154],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x6, 0x28, -0x154],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [-0x1f6, -0x1a, -0x5e],
        's': [0x2ea, 0x1a, 0x4c5],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xe, 0x0, 0x43],
        's': [0x22, 0x2, 0x12],
        'c': 0x9b9a9a
      }, {
        'p': [-0x2f, 0x4, 0x40],
        's': [0x1f, 0x1, 0x2],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [-0x2f, 0x6, 0x44],
        's': [0x1f, 0x2, 0x1],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [-0x2f, 0x9, 0x44],
        's': [0x1f, 0x2, 0x1],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [-0x22, 0x3, 0x42],
        's': [0x1, 0x1, 0x7],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [-0x3c, 0x3, 0x42],
        's': [0x1, 0x1, 0x7],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [-0x3c, 0x4, 0x45],
        's': [0x1, 0x8, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [-0x22, 0x4, 0x45],
        's': [0x1, 0x8, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [-0x22, 0x0, 0x44],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [-0x22, 0x0, 0x40],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [-0x3c, 0x0, 0x40],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [-0x3c, 0x0, 0x44],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x59, 0x4, 0x43],
        's': [0x1f, 0x1, 0x2],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [0x59, 0x4, 0x40],
        's': [0x1f, 0x1, 0x2],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [0x59, 0x6, 0x44],
        's': [0x1f, 0x2, 0x1],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [0x59, 0x9, 0x44],
        's': [0x1f, 0x2, 0x1],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [0x66, 0x3, 0x42],
        's': [0x1, 0x1, 0x7],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x4c, 0x3, 0x42],
        's': [0x1, 0x1, 0x7],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x4c, 0x4, 0x45],
        's': [0x1, 0x8, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x66, 0x4, 0x45],
        's': [0x1, 0x8, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x66, 0x0, 0x44],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x66, 0x0, 0x40],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x4c, 0x0, 0x40],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x4c, 0x0, 0x44],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x120, 0x4, -0x3e],
        's': [0x1f, 0x1, 0x2],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [0x120, 0x4, -0x41],
        's': [0x1f, 0x1, 0x2],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [0x120, 0x6, -0x3d],
        's': [0x1f, 0x2, 0x1],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [0x120, 0x9, -0x3d],
        's': [0x1f, 0x2, 0x1],
        'c': '#453d2f',
        't': 0x5
      }, {
        'p': [0x12d, 0x3, -0x3f],
        's': [0x1, 0x1, 0x7],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x113, 0x3, -0x3f],
        's': [0x1, 0x1, 0x7],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x113, 0x4, -0x3c],
        's': [0x1, 0x8, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x12d, 0x4, -0x3c],
        's': [0x1, 0x8, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x12d, 0x0, -0x3d],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x12d, 0x0, -0x41],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x113, 0x0, -0x41],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0x113, 0x0, -0x3d],
        's': [0x1, 0x3, 0x1],
        'c': '#474747',
        't': 0x5
      }, {
        'p': [0xd5, 0x0, -0xc9],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xd5, 0xc, -0xc9],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xdf, -0x2, -0xcb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.96, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x62, 0x0, -0x8b],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x62, 0x7, -0x8b],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x92, 0x0, -0x1a7],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x92, 0x7, -0x1a7],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x87, -0x1, -0x163],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.79, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x8f, 0xc, -0x15e],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x95, 0x17, -0xf2],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x95, 0x16, -0xf2],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x48, 0x32, -0x34],
        's': [0x1, 0x1, 0x3],
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x48, 0x31, -0x37],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x48, 0x30, -0x37],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0xde, 0x2e, 0x73],
        's': [0x1, 0x1, 0x3],
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0xde, 0x2d, 0x76],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0xde, 0x2c, 0x76],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x142, 0x2e, -0x1],
        's': [0x1, 0x1, 0x3],
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x142, 0x2d, 0x2],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x142, 0x2c, 0x2],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x73, 0x22, 0x46],
        's': [0x1, 0x1, 0x3],
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x73, 0x21, 0x43],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x73, 0x20, 0x43],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0xfb, 0x1e, -0x4e],
        's': [0x1, 0x1, 0x3],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0xfb, 0x1d, -0x51],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0xfb, 0x1c, -0x51],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x97, 0x28, -0x161],
        's': [0x1, 0x1, 0x3],
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x97, 0x27, -0x164],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x97, 0x26, -0x164],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x10b, -0x1, -0x1a7],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.52, 3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x10c, -0x1, -0x184],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.7, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x130, -0x1, -0x40],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, 0.88, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x5f, -0x1, -0xa2],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x91, -0x30, -0x244],
        's': [0xd7, 0x8e, 0x84],
        'l': 0x1,
        'c': '#aa7b68',
        'e': '#161616'
      }, {
        'p': [0x8f, 0x3f, -0x141],
        's': [0x1, 0x1, 0x106],
        'l': 0x1,
        'c': 0x919191,
        't': 0x5
      }, {
        'p': [0xa3, 0x3f, -0x1e3],
        's': [0x1, 0x1, 0x48],
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': 0x919191,
        't': 0x5
      }, {
        'p': [0xb7, 0x3f, -0x1e2],
        's': [0x1, 0x1, 0x4c],
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': 0x919191,
        't': 0x5
      }, {
        'p': [0x8f, 0x0, -0x15e],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x44, 0x0, -0x139],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x44, 0xc, -0x139],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1a9, 0x4c, -0x14e],
        's': [0x194, 0x3, 0x49],
        'l': 0x1,
        'r': [-0.44, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1a9, 0x4d, -0x103],
        's': [0x194, 0x3, 0x49],
        'l': 0x1,
        'r': [0.43, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1ad, 0x6e, -0x11a],
        's': [0x142, 0x3, 0x1d],
        'l': 0x1,
        'r': [0.43, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1ad, 0x6e, -0x137],
        's': [0x142, 0x3, 0x1d],
        'l': 0x1,
        'r': [-0.44, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x7, 0x17, -0x19a],
        's': [0xaf, 0x3, 0x84],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x7, 0x1a, -0x19a],
        's': [0xaf, 0x2, 0x84],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x4e, 0x1f, -0x160],
        's': [0x20, 0x11, 0xf],
        'c': 0x965c44,
        'e': '#0e0e0e'
      }, {
        'p': [-0x34, 0x1f, -0x19a],
        's': [0x38, 0x11, 0x83],
        'c': 0x965c44,
        'e': '#0e0e0e'
      }, {
        'p': [0x4e, 0x1f, -0x1d5],
        's': [0x20, 0x11, 0xd],
        'c': 0x965c44,
        'e': '#0e0e0e'
      }, {
        'p': [0x5d, 0x1f, -0x17f],
        's': [0x2, 0x11, 0x9],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x5d, 0x2a, -0x171],
        's': [0x2, 0x6, 0x13],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x5d, 0x2a, -0x18d],
        's': [0x2, 0x6, 0x13],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x5d, 0x1f, -0x1a9],
        's': [0x2, 0x11, 0x25],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x5d, 0x2a, -0x1c5],
        's': [0x2, 0x6, 0x13],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x6, 0x1f, -0x15a],
        's': [0x14, 0x11, 0x3],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x27, 0x1f, -0x15a],
        's': [0x6, 0x11, 0x3],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x34, 0x2b, -0x15a],
        's': [0x14, 0x5, 0x3],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x1a, 0x2b, -0x15a],
        's': [0x14, 0x5, 0x3],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [-0xe, 0x2b, -0x15a],
        's': [0x14, 0x5, 0x3],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x6, 0x1f, -0x1da],
        's': [0x14, 0x11, 0x3],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x27, 0x1f, -0x1da],
        's': [0x6, 0x11, 0x3],
        'c': '#965c44',
        'e': '#0e0e0e'
      }, {
        'p': [0x5d, 0x24, -0x19c],
        's': [0x1, 0x1, 0x6b],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x11, 0x24, -0x15a],
        's': [0x5a, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x5d, 0x1e, -0x171],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x5d, 0x1e, -0x18d],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x5d, 0x1e, -0x1c5],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x34, 0x1e, -0x15a],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x1a, 0x1e, -0x15a],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xe, 0x1e, -0x15a],
        's': [0x1, 0xe, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x8, 0x1f, -0x191],
        's': [0xa9, 0xd, 0x6d],
        'c': '#475e72',
        'o': 0.7000000000000001,
        't': 0x5
      }, {
        'p': [0x5c, 0x0, -0x1ab],
        's': [0x6, 0x30, 0x7],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0x62, -0x1, -0x1a4],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.22, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xa0, 0x28, -0xa2],
        's': [0x5, 0x1, 0x3],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0xa0, 0x27, -0xa2],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x9d, 0x29, -0xa2],
        's': [0x5, 0x1, 0x1],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x24, 0x3b, -0x8a],
        's': [0x1, 0x1, 0x3],
        'c': '#727272',
        't': 0x5,
        'bo': 0x1
      }, {
        'p': [0x24, 0x3a, -0x8c],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#727272',
        't': 0x5
      }, {
        'p': [0x24, 0x39, -0x8c],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [-0xd, 0x42, -0x22],
        's': [0xc7, 0x3, 0x25],
        'l': 0x1,
        'r': [-0.79, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xd, 0x43, -0x8],
        's': [0xc7, 0x3, 0x29],
        'l': 0x1,
        'r': [0.78, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x64, 0x22, -0x9c],
        's': [0x7, 0x2, 0x7],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x64, 0x22, -0x70],
        's': [0x7, 0x2, 0x7],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xa9, 0x3a, -0xf5],
        's': [0x73, 0x2, 0x65],
        'c': '#9b9a9a'
      }, {
        'p': [-0xa9, 0x1c, -0xf5],
        's': [0x73, 0x2, 0x65],
        'c': '#9b9a9a'
      }, {
        'p': [-0xa9, 0x1e, -0xf5],
        's': [0x73, 0x2, 0x65],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xa9, 0x3c, -0xf5],
        's': [0x74, 0x2, 0x66],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xe0, -0x2, -0xc5],
        's': [0x4, 0x3d, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [-0x72, 0x0, -0xc5],
        's': [0x4, 0x3a, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [-0xad, 0x5, -0xf5],
        's': [0x4, 0x36, 0x64],
        'c': 0x9b9a9a
      }, {
        'p': [-0xe0, 0x2, -0x125],
        's': [0x4, 0x39, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [-0x72, -0x2, -0x125],
        's': [0x4, 0x3d, 0x4],
        'c': '#9b9a9a'
      }, {
        'p': [-0xe0, -0x2, -0xc5],
        's': [0x5, 0x7, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [-0x72, -0x1, -0xc5],
        's': [0x5, 0x6, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [-0xad, -0x1, -0xf5],
        's': [0x5, 0x6, 0x65],
        'c': 0x9b9a9a
      }, {
        'p': [-0x72, -0x2, -0x125],
        's': [0x5, 0x7, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [-0xe0, -0x2, -0x125],
        's': [0x5, 0x7, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [-0xa9, -0x1, -0xf5],
        's': [0x71, 0x25, 0x63],
        'c': 0x965c44
      }, {
        'p': [-0x75, 0x24, -0xf5],
        's': [0x9, 0xf, 0x63],
        'c': 0x965c44
      }, {
        'p': [-0xa9, 0x33, -0xf5],
        's': [0x71, 0x7, 0x63],
        'c': 0x965c44
      }, {
        'p': [-0xad, 0x24, -0xf5],
        's': [0x16, 0xf, 0x63],
        'c': 0x965c44
      }, {
        'p': [-0xdd, 0x24, -0x120],
        's': [0x9, 0xf, 0xd],
        'c': 0x965c44
      }, {
        'p': [-0xdd, 0x24, -0xf5],
        's': [0x9, 0xf, 0xb],
        'c': 0x965c44
      }, {
        'p': [-0xdd, 0x24, -0xca],
        's': [0x9, 0xf, 0xd],
        'c': 0x965c44
      }, {
        'p': [-0xa9, 0x2b, -0x125],
        's': [0x62, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xa9, 0x2b, -0xc5],
        's': [0x62, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xce, 0x24, -0x125],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xc2, 0x24, -0x125],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0x95, 0x24, -0x125],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0x87, 0x24, -0x125],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0x87, 0x24, -0xc5],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0x95, 0x24, -0xc5],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xc2, 0x24, -0xc5],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xce, 0x24, -0xc5],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xe0, 0x24, -0xe5],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xe0, 0x24, -0x110],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xe0, 0x2b, -0xf6],
        's': [0x1, 0x1, 0x4e],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xab, 0x24, -0xf5],
        's': [0x69, 0xf, 0x5f],
        'c': '#475e72',
        'o': 0.7000000000000001,
        't': 0x5
      }, {
        'p': [-0xe0, 0x24, -0x105],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [-0xe0, 0x24, -0xda],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xd0, 0x3a, 0xdf],
        's': [0x73, 0x2, 0x65],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0xd0, 0x1c, 0xdf],
        's': [0x73, 0x2, 0x65],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0xd0, 0x1e, 0xdf],
        's': [0x73, 0x2, 0x65],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xd0, 0x3c, 0xdf],
        's': [0x74, 0x2, 0x66],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x99, -0x2, 0x10f],
        's': [0x4, 0x3d, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0x107, 0x0, 0x10f],
        's': [0x4, 0x3a, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0xcc, 0x5, 0xb1],
        's': [0x4, 0x36, 0x8],
        'c': 0x9b9a9a
      }, {
        'p': [0x99, 0x2, 0xaf],
        's': [0x4, 0x39, 0x4],
        'c': 0x9b9a9a
      }, {
        'p': [0x107, -0x2, 0xaf],
        's': [0x4, 0x3d, 0x4],
        'c': '#9b9a9a'
      }, {
        'p': [0x99, -0x2, 0x10f],
        's': [0x5, 0x7, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0x107, -0x1, 0x10f],
        's': [0x5, 0x6, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0xcc, -0x1, 0xdf],
        's': [0x5, 0x6, 0x65],
        'c': 0x9b9a9a
      }, {
        'p': [0x107, -0x2, 0xaf],
        's': [0x5, 0x7, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0x99, -0x2, 0xaf],
        's': [0x5, 0x7, 0x5],
        'c': 0x9b9a9a
      }, {
        'p': [0xd0, -0x1, 0xdf],
        's': [0x71, 0x22, 0x63],
        'c': 0x965c44,
        'bo': 0x1
      }, {
        'p': [0x104, 0x21, 0xdf],
        's': [0x9, 0x12, 0x63],
        'c': '#965c44'
      }, {
        'p': [0xd0, 0x33, 0xdf],
        's': [0x71, 0x7, 0x63],
        'c': 0x965c44
      }, {
        'p': [0xcc, 0x24, 0xb0],
        's': [0x16, 0xf, 0x5],
        'c': 0x965c44
      }, {
        'p': [0x9c, 0x24, 0xb4],
        's': [0x9, 0xf, 0xd],
        'c': 0x965c44
      }, {
        'p': [0x9c, 0x24, 0xdf],
        's': [0x9, 0xf, 0xb],
        'c': 0x965c44
      }, {
        'p': [0x9c, 0x24, 0x10a],
        's': [0x9, 0xf, 0xd],
        'c': 0x965c44
      }, {
        'p': [0xd0, 0x2b, 0xaf],
        's': [0x62, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xd0, 0x2b, 0x10f],
        's': [0x62, 0x1, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xab, 0x24, 0xaf],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xb7, 0x24, 0xaf],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xe4, 0x24, 0xaf],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xf2, 0x24, 0xaf],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xf2, 0x24, 0x10f],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xe4, 0x24, 0x10f],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xb7, 0x24, 0x10f],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xab, 0x24, 0x10f],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x99, 0x24, 0xef],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x99, 0x24, 0xc4],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x99, 0x2b, 0xde],
        's': [0x1, 0x1, 0x4e],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xce, 0x24, 0xdf],
        's': [0x69, 0xf, 0x5f],
        'c': '#475e72',
        'o': 0.7000000000000001,
        't': 0x5
      }, {
        'p': [0x99, 0x24, 0xcf],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0x99, 0x24, 0xfa],
        's': [0x1, 0xf, 0x1],
        'l': 0x1,
        'c': '#4f4f4f'
      }, {
        'p': [0xc8, -0x4, -0x19a],
        's': [0x28, 0x36, 0x25],
        'i': 0x20,
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x97, 0xb, -0x16b],
        's': [0x1e, 0x21, 0x24],
        'i': 0x20,
        'l': 0x1,
        'r': [0.26, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x6, 0xc, -0x14a],
        's': [0x1d, 0x22, 0x27],
        'i': 0x20,
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x6f, 0xf, -0x12b],
        's': [0x1c, 0x23, 0x24],
        'i': 0x20,
        'l': 0x1,
        'r': [0x0, 0x0, 0.43],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0xa9, 0x13, -0xa2],
        's': [0x1c, 0x19, 0x24],
        'i': 0x20,
        'l': 0x1,
        'r': [0x0, 0x0, 0.43],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x95, 0x5, -0xec],
        's': [0x24, 0x14, 0x22],
        'i': 0x20,
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x135, 0xd, -0x8f],
        's': [0x1c, 0x23, 0x24],
        'i': 0x20,
        'l': 0x1,
        'r': [0x0, 0x0, 0.43],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x120, 0x5, -0x41],
        's': [0x1f, 0x1, 0x2],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x120, 0x5, -0x3e],
        's': [0x1f, 0x1, 0x2],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x120, 0xb, -0x3d],
        's': [0x1f, 0x1, 0x1],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xfb, 0x7, -0x56],
        's': [0x1e, 0x19, 0x24],
        'i': 0x20,
        'l': 0x1,
        'r': [0.26, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0xac, 0x4, -0x57],
        's': [0x2b, 0x2e, 0x26],
        'i': 0x20,
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x48, 0x9, -0x45],
        's': [0x2b, 0x2e, 0x26],
        'i': 0x20,
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0xde, 0x6, 0x84],
        's': [0x2b, 0x2e, 0x26],
        'i': 0x20,
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x142, 0xd, 0xd],
        's': [0x2b, 0x26, 0x26],
        'i': 0x20,
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [-0xd, 0x3, -0xaf],
        's': [0x2b, 0x2e, 0x26],
        'i': 0x20,
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x1c, 0x4, 0x1e],
        's': [0x2b, 0x2e, 0x26],
        'i': 0x20,
        'l': 0x1,
        'r': [-0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x73, 0x5, 0x39],
        's': [0x2b, 0x20, 0x26],
        'i': 0x20,
        'l': 0x1,
        'r': [0.35, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x24, 0x1f, -0x98],
        's': [0x2b, 0x20, 0x26],
        'i': 0x20,
        'l': 0x1,
        'r': [0.44, 0x0, 0x0],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [-0x52, 0x11, -0x88],
        's': [0x21, 0x20, 0x24],
        'i': 0x20,
        'l': 0x1,
        'r': [0x0, 0x0, 0.43],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x69, 0x16, -0x15],
        's': [0x1c, 0x19, 0x24],
        'i': 0x20,
        'l': 0x1,
        'r': [0x0, 0x0, 0.43],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [-0x51, 0x10, 0x2a],
        's': [0x1f, 0x23, 0x24],
        'i': 0x20,
        'l': 0x1,
        'r': [0x0, 0x0, 0.43],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0xaa, 0xf, 0x4c],
        's': [0x1f, 0x23, 0x24],
        'i': 0x20,
        'l': 0x1,
        'r': [0x0, 0x0, 0.43],
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x59, 0x5, 0x40],
        's': [0x1f, 0x1, 0x2],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x59, 0x5, 0x43],
        's': [0x1f, 0x1, 0x2],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x59, 0xb, 0x44],
        's': [0x1f, 0x1, 0x1],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x2f, 0x5, 0x40],
        's': [0x1f, 0x1, 0x2],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x2f, 0x5, 0x43],
        's': [0x1f, 0x1, 0x2],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x2f, 0xb, 0x44],
        's': [0x1f, 0x1, 0x1],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x17c, -0x3, 0x69],
        's': [0xfb, 0x60, 0x7a],
        'l': 0x1,
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [-0xe3, -0x3, -0x60],
        's': [0xcb, 0x3f, 0x3d],
        'l': 0x1,
        'c': '#965c44'
      }, {
        'p': [-0x87, 0x2e, -0x51],
        's': [0x8, 0x2b, 0x2b],
        'l': 0x1,
        'r': [-0.8, 0x0, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x143, 0x2d, -0x51],
        's': [0x8, 0x2b, 0x2b],
        'l': 0x1,
        'r': [-0.8, 0x0, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0xe3, 0x3c, -0x60],
        's': [0xcc, 0x3, 0x3e],
        'l': 0x1,
        'c': 0x9b9a9a
      }, {
        'p': [-0xe3, 0x3f, -0x60],
        's': [0xcd, 0x2, 0x3f],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xe5, 0x4d, -0x6e],
        's': [0xc7, 0x3, 0x25],
        'l': 0x1,
        'r': [-0.79, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xe5, 0x4e, -0x54],
        's': [0xc7, 0x3, 0x29],
        'l': 0x1,
        'r': [0.78, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xd1, -0x3, 0x58],
        's': [0xcb, 0x3e, 0x3d],
        'l': 0x1,
        'c': 0x965c44
      }, {
        'p': [-0x75, 0x2d, 0x67],
        's': [0x8, 0x2b, 0x2b],
        'l': 0x1,
        'r': [-0.8, 0x0, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x131, 0x2c, 0x67],
        's': [0x8, 0x2b, 0x2b],
        'l': 0x1,
        'r': [-0.8, 0x0, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0xd1, 0x3b, 0x58],
        's': [0xcc, 0x3, 0x3e],
        'l': 0x1,
        'c': 0x9b9a9a
      }, {
        'p': [-0xd1, 0x3e, 0x58],
        's': [0xcd, 0x2, 0x3f],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xd3, 0x4c, 0x4a],
        's': [0xc7, 0x3, 0x25],
        'l': 0x1,
        'r': [-0.79, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xd3, 0x4d, 0x64],
        's': [0xc7, 0x3, 0x29],
        'l': 0x1,
        'r': [0.78, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xcc, -0x9, -0x161],
        's': [0xcb, 0x41, 0x3d],
        'l': 0x1,
        'c': 0x965c44
      }, {
        'p': [-0x70, 0x2a, -0x152],
        's': [0x8, 0x2b, 0x2b],
        'l': 0x1,
        'r': [-0.8, 0x0, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x12c, 0x29, -0x152],
        's': [0x8, 0x2b, 0x2b],
        'l': 0x1,
        'r': [-0.8, 0x0, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0xcc, 0x38, -0x161],
        's': [0xcc, 0x3, 0x3e],
        'l': 0x1,
        'c': 0x9b9a9a
      }, {
        'p': [-0xcc, 0x3b, -0x161],
        's': [0xcd, 0x2, 0x3f],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xce, 0x49, -0x16f],
        's': [0xc7, 0x3, 0x25],
        'l': 0x1,
        'r': [-0.79, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0xce, 0x4a, -0x155],
        's': [0xc7, 0x3, 0x29],
        'l': 0x1,
        'r': [0.78, 0x0, 0x0],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x183, -0x3, -0xe7],
        's': [0xfb, 0x60, 0x7a],
        'l': 0x1,
        'c': 0xaa7b68,
        'e': 0x161616
      }, {
        'p': [-0x183, 0x5d, -0xe7],
        's': [0xff, 0x4, 0x7d],
        'l': 0x1,
        'c': '#bababa'
      }, {
        'p': [0xe5, 0x61, -0x128],
        's': [0xc, 0x3, 0xc],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xcc, 0x24, 0x10e],
        's': [0x16, 0xf, 0x5],
        'c': 0x965c44
      }, {
        'p': [0xd0, 0x21, 0xb0],
        's': [0x5f, 0x3, 0x5],
        'c': 0x965c44
      }, {
        'p': [0xd0, 0x21, 0x10e],
        's': [0x6c, 0x3, 0x5],
        'c': 0x965c44
      }, {
        'p': [0x9c, 0x21, 0xdf],
        's': [0x9, 0x3, 0x63],
        'c': 0x965c44
      }, {
        'p': [0xcc, 0x5, 0x10e],
        's': [0x4, 0x36, 0x6],
        'c': 0x9b9a9a
      }, {
        'p': [0x14f, -0x1c, 0x12],
        's': [0x6c6, 0x3, 0xa11],
        'l': 0x1,
        'c': '#4a433a',
        't': 0x5,
        'ts': 0.8
      }, {
        'p': [0x119, 0x0, -0x7e],
        's': [0x31, 0x0, 0x46],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x91, 0x0, -0x107],
        's': [0x36, 0x0, 0x40],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xeb, 0x0, -0xcb],
        's': [0x62, 0x0, 0x1d],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x7a, 0x0, -0x69],
        's': [0x29, 0x0, 0x17],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x51, 0x0, -0x35],
        's': [0x29, 0x0, 0x20],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x54, 0x0, 0x44],
        's': [0x30, 0x0, 0x23],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xd5, 0x0, 0x5c],
        's': [0x2c, 0x0, 0x37],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x1a, 0x0, 0xd],
        's': [0x2f, 0x0, 0x1a],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x28, 0x0, 0x7],
        's': [0x23, 0x0, 0x20],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x1e, 0x0, -0x57],
        's': [0x29, 0x0, 0x3b],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x96, 0x0, -0x40],
        's': [0x29, 0x0, 0x28],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x93, 0x0, -0x160],
        's': [0x23, 0x0, 0x29],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x4d, 0x0, -0x12d],
        's': [0x31, 0x0, 0x2e],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xc8, 0x0, -0x175],
        's': [0x31, 0x0, 0x3f],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x95, 0x0, -0xb6],
        's': [0x28, 0x0, 0x2e],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x60, 0x0, -0xb5],
        's': [0x19, 0x0, 0x3f],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xf6, 0x0, -0x42],
        's': [0x1e, 0x0, 0x25],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x52, 0x0, -0xc6],
        's': [0x32, 0x0, 0x26],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xc2, -0x1, -0xe0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.78, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x8d, 0x0, -0x1ae],
        's': [0x1f, 0x0, 0x27],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xcc, 0x0, -0x7d],
        's': [0x31, 0x0, 0x38],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x147, -0x1e, 0xde],
        's': [0x5, 0x24, 0x8f],
        'c': '#b5b5b5'
      }, {
        'p': [0x131, -0x1d, 0x93],
        's': [0x31, 0x23, 0x7],
        'c': '#b5b5b5'
      }, {
        'p': [0x131, 0x6, 0x93],
        's': [0x31, 0x2, 0x7],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x147, 0x6, 0x122],
        's': [0x5, 0x2, 0x117],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x12c, -0x1d, 0xf7],
        's': [0x32, 0x1d, 0xc2],
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xd9, -0x30, 0x161],
        's': [0xd7, 0x8e, 0x84],
        'l': 0x1,
        'c': '#965c44'
      }, {
        'p': [0x147, -0x1e, 0x16d],
        's': [0x5, 0x24, 0x8f],
        'l': 0x1,
        'c': '#b5b5b5'
      }, {
        'p': [0x10c, 0x0, 0xaa],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 1.4, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x140, 0x0, 0xac],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [3.14, -0.35, 3.14],
        'c': '#d8f2ff'
      }, {
        'p': [0x10f, 0x0, 0x98],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.22, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x13d, 0x0, 0x9f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x13d, 0xc, 0x9f],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xd9, 0x5e, 0x161],
        's': [0xd9, 0x3, 0x88],
        'l': 0x1,
        'c': '#5b5b5b'
      }, {
        'p': [0xd9, 0x61, 0x161],
        's': [0xdb, 0x2, 0x8b],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xd9, 0x2c, 0x161],
        's': [0xd9, 0x3, 0x88],
        'l': 0x1,
        'c': '#5b5b5b'
      }, {
        'p': [0xd9, 0x2f, 0x161],
        's': [0xdb, 0x2, 0x8b],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x126, -0x1, 0xeb],
        's': [0x3d, 0x1d, 0x6d],
        'c': 0x965c44,
        'bo': 0x1
      }, {
        'p': [0x126, 0x1c, 0xeb],
        's': [0x3f, 0x2, 0x6f],
        'c': '#9b9a9a'
      }, {
        'p': [-0x14d, -0x3, -0x2f],
        's': [0x38, 0x9d, 0x25],
        'l': 0x1,
        'c': '#965c44'
      }, {
        'p': [-0x16, 0x0, -0x90],
        's': [0x24, 0x0, 0x27],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x61, 0x0, -0x57],
        's': [0x19, 0x0, 0x25],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x5d, 0x0, -0xfd],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x5d, 0x7, -0xfd],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x10e, 0x30, -0x3c],
        's': [0x5f, 0x1, 0x1c],
        'i': 0x1e,
        'r': [1.57, 0x0, -3.14],
        'st': 'A-13',
        'sc': '#6b493b',
        'bv': 0x1,
        'sf': 0x78
      }, {
        'p': [0xde, 0x30, -0x137],
        's': [0x5f, 0x1, 0x1c],
        'i': 0x1e,
        'r': [1.57, 0x0, 1.57],
        'st': 'C-12',
        'sc': '#936e5f',
        'bv': 0x1,
        'sf': 0x78
      }, {
        'p': [0x112, 0x31, -0xe0],
        's': [0x5f, 0x1, 0x1c],
        'i': 0x1e,
        'r': [1.57, 0x0, 0x0],
        'st': 'C-12',
        'sc': '#936e5f',
        'bv': 0x1,
        'sf': 0x78
      }, {
        'p': [0x65, 0x38, 0x47],
        's': [0x5f, 0x1, 0x1c],
        'i': 0x1e,
        'r': [1.57, 0x0, -3.14],
        'st': 'A-13',
        'sc': '#896e62',
        'bv': 0x1,
        'sf': 0x78
      }, {
        'p': [0x98, 0x39, 0x46],
        's': [0x61, 0x1, 0x1e],
        'i': 0x1e,
        'r': [1.57, 0x0, -1.57],
        'st': 'A-13',
        'sc': '#b18876',
        'bv': 0x1,
        'sf': 0x78
      }, {
        'p': [-0x30, -0x1, -0xc0],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [-0x28, 0x0, -0x152],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [-0x27, -0x1, -0x14c],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [-3.14, 0.78, -3.14],
        'c': '#d8f2ff'
      }, {
        'p': [-0x28, 0x7, -0x152],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x10c, 0x0, -0x1a1],
        's': [0x6, 0x8, 0x6],
        'i': 0x2
      }, {
        'p': [0x10c, 0x7, -0x1a1],
        's': [0x6, 0x2, 0x6],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x32, 0x0, -0x90],
        's': [0x25, 0x0, 0x1e],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [-0x64, 0x0, 0x24],
        's': [0x7, 0x22, 0x7],
        'c': '#ababab',
        'bo': 0x1
      }, {
        'p': [-0x64, 0x22, 0x24],
        's': [0x7, 0x2, 0x7],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xe, 0x1f, 0x56],
        's': [0x6, 0x2, 0x7],
        'l': 0x1,
        'c': '#777777',
        't': 0x5
      }, {
        'p': [0xe, 0x1e, 0x56],
        's': [0x3, 0x2, 0x3],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0xe, 0xe, 0x56],
        's': [0x2b, 0x12, 0x26],
        'i': 0x20,
        'l': 0x1,
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x38, 0x1f, 0x73],
        's': [0x6, 0x2, 0x7],
        'l': 0x1,
        'c': '#777777',
        't': 0x5
      }, {
        'p': [0x38, 0x1e, 0x73],
        's': [0x3, 0x2, 0x3],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x38, 0xe, 0x73],
        's': [0x2b, 0x12, 0x26],
        'i': 0x20,
        'l': 0x1,
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0x7a, 0x1f, 0x73],
        's': [0x6, 0x2, 0x7],
        'l': 0x1,
        'c': '#777777',
        't': 0x5
      }, {
        'p': [0x7a, 0x1e, 0x73],
        's': [0x3, 0x2, 0x3],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x7a, 0xe, 0x73],
        's': [0x2b, 0x12, 0x26],
        'i': 0x20,
        'l': 0x1,
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0xc0, 0x19, 0x92],
        's': [0xa, 0x2, 0x2],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xbc, 0x13, 0x92],
        's': [0x2, 0x6, 0x2],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xc0, 0x17, 0x92],
        's': [0x4, 0x2, 0x2],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xf1, 0x3d, -0xef],
        's': [0xf, 0x51, 0xc],
        'c': '#472213',
        'e': 0x161616
      }, {
        'p': [0xf1, 0x8e, -0xef],
        's': [0x12, 0x4, 0xf],
        'c': '#4f4f4f',
        't': 0x5
      }, {
        'p': [-0x43, 0x1a, -0x41],
        's': [0x3, 0x1, 0x2],
        'l': 0x1,
        'r': [0x0, -0.61, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x53, 0x1b, -0x53],
        's': [0x5, 0x2, 0x3],
        'l': 0x1,
        'r': [0x0, 0.26, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x3, 0x19, -0x5f],
        's': [0x5, 0x2, 0x3],
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x10, 0x19, -0x5f],
        's': [0x2, 0x1, 0x3],
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x5, 0x1a, -0x3d],
        's': [0x2, 0x1, 0x3],
        'l': 0x1,
        'r': [0x0, 0.7, 0x0],
        'c': 0x965c44
      }, {
        'p': [-0x15, 0x1c, -0x57],
        's': [0x3, 0x1, 0x4],
        'l': 0x1,
        'c': 0x965c44
      }, {
        'p': [0xd5, 0x0, 0x5c],
        's': [0x4e, 0x32, 0x4c],
        'i': 0xe
      }, {
        'p': [0x91, 0x0, -0x178],
        's': [0x4c, 0x32, 0x44],
        'i': 0xe
      }, {
        'p': [-0x42, 0x0, -0x8a],
        's': [0x3b, 0x32, 0x59],
        'i': 0xe
      }, {
        'p': [0x169, 0x0, -0xa0],
        's': [0x44, 0x32, 0x5a],
        'i': 0xe
      }, {
        'p': [0x97, 0x0, -0x18c],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'tm': 0x0
      }, {
        'p': [0xf9, 0x0, 0x5f],
        's': [0x18, 0x24, 0x18],
        'i': 0x17,
        'tm': '1'
      }, {
        'p': [0x32, 0x0, -0x19a],
        's': [0x58, 0x1f, 0x83],
        'c': '#965c44',
        'e': '#0e0e0e',
        'bo': 0x1
      }, {
        'p': [-0xf, 0x1a, -0x19a],
        's': [0x2a, 0x5, 0x83],
        'c': '#965c44',
        'e': '#0e0e0e',
        'bo': 0x1
      }, {
        'p': [-0xf, 0x0, -0x18b],
        's': [0x2a, 0x17, 0x2e],
        'c': '#965c44',
        'e': '#0e0e0e',
        'bo': 0x1
      }, {
        'p': [-0x20, -0x1, -0x171],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x4, -0x1, -0x171],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x160, 0x0, -0x9f],
        's': [0x1a, 0x0, 0x1b],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xc4, 0x3b, -0x17],
        's': [0x73, 0x2, 0x6d],
        'c': '#9b9a9a',
        'bo': 0x1
      }, {
        'p': [0xc4, 0x3d, -0x17],
        's': [0x74, 0x2, 0x6e],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xae, 0x0, -0x17],
        's': [0x45, 0x25, 0x6b],
        'c': 0x965c44,
        'bo': 0x1
      }, {
        'p': [0xe2, 0x0, 0x1d],
        's': [0x2f, 0x25, 0x3],
        'c': 0x965c44,
        'bo': 0x1
      }, {
        'p': [0xf8, 0x0, -0x28],
        's': [0x9, 0x25, 0x49],
        'c': 0x965c44,
        'bo': 0x1
      }, {
        'p': [0xfa, 0x21, 0xc],
        's': [0x5, 0x4, 0x1f],
        'c': 0x965c44,
        'bo': 0x1
      }, {
        'p': [0xe2, 0x21, -0x4b],
        's': [0x23, 0x4, 0x3],
        'c': 0x965c44,
        'bo': 0x1
      }, {
        'p': [0xe2, 0x0, 0x1c],
        's': [0x44, 0x0, 0x21],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xd3, 0x0, -0x44],
        's': [0x16, 0x0, 0x21],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x124, 0x0, 0x2f],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x124, 0xc, 0x2f],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x12d, 0x0, 0x2c],
        's': [0x2d, 0x0, 0x18],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x126, 0x1e, 0xeb],
        's': [0x41, 0x2, 0x70],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x144, -0x1e, 0xe6],
        's': [0x14, 0x3a, 0x63],
        'v': 0x1,
        'c': '#000000',
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [-0x27, 0x0, -0x154],
        's': [0x1b, 0x0, 0x20],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xfb, -0xb, -0x155],
        's': [0x6d, 0x27, 0x4f],
        'c': 0x72371f,
        'e': 0x161616,
        'bo': 0x1
      }, {
        'p': [0x15, 0x0, -0x153],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0x15, 0xc, -0x153],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xbf, 0x0, -0xd8],
        's': [0xc, 0xc, 0xc],
        'i': 0x1
      }, {
        'p': [0xbf, 0xc, -0xd8],
        's': [0xc, 0x2, 0xc],
        'l': 0x1,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xbe, -0x1, -0x130],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -1.39, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x111, -0x2, -0xcb],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.61, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x123, 0x1c, -0xc9],
        's': [0x3, 0x1, 0x5],
        'l': 0x1,
        'c': '#777777',
        't': 0x5
      }, {
        'p': [0x123, 0x1b, -0xc9],
        's': [0x2, 0x1, 0x4],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x123, 0xb, -0xc9],
        's': [0x2b, 0x12, 0x26],
        'i': 0x20,
        'l': 0x1,
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0xc0, 0x1c, -0x120],
        's': [0x5, 0x1, 0x3],
        'l': 0x1,
        'c': '#777777',
        't': 0x5
      }, {
        'p': [0xc0, 0x1b, -0x120],
        's': [0x4, 0x1, 0x2],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0xc0, 0xb, -0x120],
        's': [0x2b, 0x12, 0x26],
        'i': 0x20,
        'l': 0x1,
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0xfc, -0x2, -0xcc],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, -0.52, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0x13b, 0x0, -0xcd],
        's': [0x27, 0x0, 0x36],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x123, 0x0, -0xcc],
        's': [0x1f, 0x2, 0x6],
        'c': 0x9b9a9a
      }, {
        'p': [0x123, 0x0, -0xff],
        's': [0x1b, 0x2, 0x60],
        'c': 0x9b9a9a
      }, {
        'p': [0xed, 0x0, -0x11f],
        's': [0x51, 0x2, 0x1d],
        'c': 0x9b9a9a
      }, {
        'p': [0xc2, 0x0, -0x11f],
        's': [0x5, 0x2, 0x20],
        'c': 0x9b9a9a
      }, {
        'p': [0x123, 0x1b, -0x11e],
        's': [0x6, 0x2, 0x7],
        'l': 0x1,
        'c': '#777777',
        't': 0x5
      }, {
        'p': [0x123, 0x1a, -0x11e],
        's': [0x3, 0x2, 0x3],
        'l': 0x1,
        'c': '#000000',
        'e': '#e9edb8',
        't': 0x5
      }, {
        'p': [0x123, 0xa, -0x11e],
        's': [0x2b, 0x12, 0x26],
        'i': 0x20,
        'l': 0x1,
        'c': '#e8eda1',
        'o': 0.2
      }, {
        'p': [0xc9, 0x0, -0x11b],
        's': [0x27, 0x0, 0x47],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0x123, 0x1d, -0xcc],
        's': [0x1, 0x1, 0x3],
        'l': 0x1,
        'c': '#777777',
        't': 0x5
      }, {
        'p': [0xc2, 0x1d, -0x120],
        's': [0x3, 0x1, 0x1],
        'l': 0x1,
        'c': '#777777',
        't': 0x5
      }, {
        'p': [0xf0, 0x0, 0xa6],
        's': [0x3d, 0x0, 0x33],
        'i': 0x4,
        'l': 0x1,
        'en': 0x5,
        'c': '#818d93',
        't': 0x5
      }, {
        'p': [0xe2, -0x1, -0x18],
        's': [0x23, 0x3, 0x69],
        'c': 0x9b9a9a
      }, {
        'p': [0xfa, -0x1, 0xc],
        's': [0xd, 0x3, 0x22],
        'c': 0x9b9a9a
      }, {
        'p': [0x104, -0x1, -0x1],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0],
        'c': '#d8f2ff'
      }, {
        'p': [0xe2, -0x1, -0x4e],
        's': [0x27, 0x3, 0x3],
        'c': 0x9b9a9a
      }, {
        'p': [0xcf, -0x1, -0x50],
        's': [0x7, 0x6, 0x8],
        'i': 0x12,
        'l': 0x1,
        'r': [0x0, 0.97, 0x0],
        'c': '#d8f2ff'
      }]
    }], bOn = 0x0; bOn < bOm['length']; ++bOn)
    for (var bOo = 0x0; bOo < bOm[bOn]['objects']['length']; ++bOo) bOm[bOn]['objects'][bOo]['i'] = bMU['prefabIDS'][bOm[bOn]['objects'][bOo]['i'] || bOm[bOn]['objects'][bOo]['id'] || 0x0], bOm[bOn]['objects'][bOo]['t'] = bMU['textureIDS'][bOm[bOn]['objects'][bOo]['t'] || ('LADDER' == bOm[bOn]['objects'][bOo]['i'] ? 0x2 : 0x0)];
  bMR['exports']['maps'] = bOm, bMR['exports']['manager'] = function(bMR, bMS, bMU, bOn) {
    var bOo, bOu;
    this['manager'] = new(bMT(0x44))['manager'](bMR, bMU, bOn), this['maps'] = bOm, this['modes'] = bMZ, this['rotationModes'] = bN0, this['rotationMaps'] = [0x0, 0x1, 0x2, 0x3, 0x4, 0x6], this['spawns'] = [], this['lastGen'] = null, this['terrain'] = null, this['zone'] = null, this['deathY'] = bOn['deathY'], this['mapHeight'] = 0x0, this['setMaps'] = function(bMR) {
      this['maps'] = bMR || bOm;
    }, this['getRandomMap'] = function() {
      return bMU['randInt'](0x0, this['maps']['length'] - 0x1);
    };
    var bOw = '';
    this['generate'] = function(bMT, bMZ, bN0) {
      var bOm = this['maps'][bMT];
      bOm['game'] = bOm['game'] || {}, this['config'] = {};
      for (var bOB, bOC = 0x0; bOC < bOn['gameConfig']['length']; ++bOC)
        if ((bOB = bOn['gameConfig'][bOC])['bool']) this['config'][bOB['varN']] = null == bOm['game'][bOB['varN']] ? bOB['def'] : !!bOm['game'][bOB['varN']];
        else if (bOB['input']) {
        var bOD = bOm['game'][bOB['varN']];
        bMU['isString'](bOD) || (bOD = bOB['def']), this['config'][bOB['varN']] = bMU['sanitizeStr'](bOD), 0x10 < bOD['length'] && (bOD = bOD['substring'](0x0, 0x10));
      } else {
        bOD = bOm['game'][bOB['varN']];
        bMU['isNumber'](bOD) || (bOD = bOB['def']), this['config'][bOB['varN']] = bMU['limitMM'](bOD, bOB['min'], bOB['max']);
      }
      if (null != bOm['dthY'] && bMU['isNumber'](bOm['dthY']) && (this['deathY'] = bOm['dthY']), bMR) try {
        mapInfo['innerHTML'] = bMZ['alias'] + '_' + bOm['name'], gameMessage['innerHTML'] = specGMessage['innerHTML'] = '', curGameInfo['innerHTML'] = bMZ['name'] + '<div\x20style=\x27color:rgba(255,255,255,0.6)\x27>on\x20' + bOm['name'] + '</div>' + (bOm['creator'] ? '<div\x20style=\x27color:#fff\x27><span\x20style=\x27color:rgba(255,255,255,0.6)\x27>by</span>\x20' + bOm['creator'] + '</div>' : ''), specGameInfo['innerHTML'] = bMZ['name'];
      } catch (bOE) {}
      bMR && bOw != bOm['modURL'] && ((bOw = bOm['modURL']) && '' != bOw && loadModPack(bOw, !0x0));
      var bOF = bMT + (null == bMZ['genID'] ? '' : '_' + bMZ['genID']);
      if (bN0 || this['lastGen'] !== bOF) {
        this['lastGen'] = bOF, this['manager']['removeAll'](), bMR && bMR['init'](bOm, bMZ), bMS && (bMS['reset'](), bMR['scene']['add'](bMS['ExplosionManager'])), bOm['terrainSeed'] && bOm['terrainWidth'] && bOm['terrainHeight'] ? (this['terrain'] = bMV['fromConfig'](bOm), this['terrain']['rotation']['x'] = -Math['PI'] / 0x2, bMR && bMR['scene']['add'](this['terrain'])) : this['terrain'] = null, bOm['zone'] && bOm['zoneSize'] && bOm['zoneSpeed'] ? (this['zone'] = bMW['fromConfig'](bOm, bMR), bMR && bMR['scene']['add'](this['zone'])) : this['zone'] = null;
        var bOG = 0x0,
          bOH = 0x0,
          bOI = 0x0,
          bOJ = 0x0,
          bOK = 0x0;
        for (bOC = 0x0; bOC < bOm['objects']['length']; ++bOC) {
          var bOL = (bOo = bOm['objects'][bOC])['p'][0x0],
            bOM = bOo['p'][0x1],
            bON = bOo['p'][0x2],
            bOO = bOo['t']['toLowerCase']() + '_' + ('GRASS' == bOo['t'] ? 0x1 : 0x0);
          if (bOo['l'] || bOo['col'] || 'CUBE' != bOo['i'] || (bOL - bOo['s'][0x0] < bOG && (bOG = bOL - bOo['s'][0x0]), bOL + bOo['s'][0x0] > bOH && (bOH = bOL + bOo['s'][0x0]), bON - bOo['s'][0x2] < bOI && (bOI = bON - bOo['s'][0x2]), bON + bOo['s'][0x2] > bOJ && (bOJ = bON + bOo['s'][0x2]), bOM + bOo['s'][0x1] > bOJ && (bOK = bOM + bOo['s'][0x1])), 'CUBE' == bOo['i']) {
            for (var bOP = 0x1, bOQ = 0x0; bOQ < bOm['objects']['length']; ++bOQ)
              if ('CUBE' == (bOu = bOm['objects'][bOQ])['i'] && bOo != bOu && bOM <= bOu['p'][0x1] + bOu['s'][0x1] && bOM >= bOu['p'][0x1] && bOL + bOo['s'][0x0] / 0x2 < bOu['p'][0x0] + bOu['s'][0x0] / 0x2 && bOL - bOo['s'][0x0] / 0x2 > bOu['p'][0x0] - bOu['s'][0x0] / 0x2 && bON + bOo['s'][0x2] / 0x2 < bOu['p'][0x2] + bOu['s'][0x2] / 0x2 && bON - bOo['s'][0x2] / 0x2 > bOu['p'][0x2] - bOu['s'][0x2] / 0x2) {
                bOP = 0x0;
                break;
              } this['manager']['addBlock'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1], [0x1, 0x1, 0x1, bOP, 0x1, 0x1], {
              'src': bOO,
              'colr': bOo['c'],
              'emissive': bOo['e'] || null,
              'opacity': 0x1 != bOo['o'] && null != bOo['o'] ? bOo['o'] : 0x1,
              'transparent': 0x1 != bOo['o'] && null != bOo['o'],
              'penetrable': bOo['pe'],
              'health': bOo['h'] || bOo['hp'],
              'respawnT': 0x3e8 * parseFloat(bOo['rt']),
              'respawnR': null != bOo['rr'],
              'amb': bOm['nAmb'] || null != bOo['ab'] ? null : bOn['ambientVal'],
              'yR': bOo['r'] ? bOo['r'][0x0] : 0x0,
              'xR': bOo['r'] ? bOo['r'][0x1] : 0x0,
              'zR': bOo['r'] ? bOo['r'][0x2] : 0x0,
              'noCol': bOo['l'] || bOo['col'],
              'isBorder': bOo['bo'],
              'noVis': bOo['v'],
              'movT': null != bOo['ts'] && bOo['ts'] / 0x2710,
              'movD': bOo['td'],
              'noAmb': null != bOo['ab'],
              'interface': parseInt(bOo['in']) || null
            });
          } else if ('GATE' == bOo['i']) this['manager']['addGate'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1], {
            'src': bOO,
            'colr': bOo['c'],
            'emissive': bOo['e'] || null,
            'opacity': 0x1 != bOo['o'] && null != bOo['o'] ? bOo['o'] : 0x1,
            'transparent': 0x1 != bOo['o'] && null != bOo['o'],
            'penetrable': bOo['pe'],
            'amb': bOm['nAmb'] || null != bOo['ab'] ? null : bOn['ambientVal'],
            'yR': bOo['r'] ? bOo['r'][0x0] : 0x0,
            'xR': bOo['r'] ? bOo['r'][0x1] : 0x0,
            'zR': bOo['r'] ? bOo['r'][0x2] : 0x0,
            'isBorder': bOo['bo'],
            'noVis': bOo['v'],
            'movT': null != bOo['ts'] && bOo['ts'] / 0x2710,
            'movD': bOo['td'],
            'noAmb': null != bOo['ab'],
            'scoreP': parseInt(bOo['sp']) || 0x0,
            'noMsg': null != bOo['nm'],
            'method': parseInt(bOo['md']) || 0x0,
            'closeable': null != bOo['cl'],
            'startClosed': null != bOo['stc'],
            'interface': parseInt(bOo['in']) || null
          });
          else if ('TRIGGER' == bOo['i']) this['manager']['addTrigger'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1], {
            'src': bOO,
            'colr': bOo['c'],
            'emissive': bOo['e'] || null,
            'opacity': 0x1 != bOo['o'] && null != bOo['o'] ? bOo['o'] : 0x1,
            'transparent': 0x1 != bOo['o'] && null != bOo['o'],
            'health': bOo['h'] || bOo['hp'],
            'respawnT': 0x3e8 * parseFloat(bOo['rt']),
            'respawnR': null != bOo['rr'],
            'amb': bOm['nAmb'] || null != bOo['ab'] ? null : bOn['ambientVal'],
            'yR': bOo['r'] ? bOo['r'][0x0] : 0x0,
            'xR': bOo['r'] ? bOo['r'][0x1] : 0x0,
            'zR': bOo['r'] ? bOo['r'][0x2] : 0x0,
            'noVis': bOo['v'],
            'movT': null != bOo['ts'] && bOo['ts'] / 0x2710,
            'movD': bOo['td'],
            'noAmb': null != bOo['ab'],
            'constant': parseInt(bOo['tc']) || 0x0,
            'event': parseInt(bOo['te']) || 0x0,
            'eventN': bMY['events'][parseInt(bOo['te']) || 0x0],
            'action': parseInt(bOo['ta']) || 0x0,
            'interface': parseInt(bOo['in']) || null,
            'interfaceT': parseInt(bOo['tin']) || null
          });
          else if ('DEPOSIT_BOX' == bOo['i']) this['manager']['addBank'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1], {
            'src': bOO,
            'colr': bOo['c'],
            'emissive': bOo['e'] || null,
            'opacity': 0x1 != bOo['o'] && null != bOo['o'] ? bOo['o'] : 0x1,
            'transparent': 0x1 != bOo['o'] && null != bOo['o'],
            'penetrable': bOo['pe'],
            'amb': bOm['nAmb'] || null != bOo['ab'] ? null : bOn['ambientVal'],
            'yR': bOo['r'] ? bOo['r'][0x0] : 0x0,
            'xR': bOo['r'] ? bOo['r'][0x1] : 0x0,
            'zR': bOo['r'] ? bOo['r'][0x2] : 0x0,
            'isBorder': bOo['bo'],
            'noVis': bOo['v'],
            'movT': null != bOo['ts'] && bOo['ts'] / 0x2710,
            'movD': bOo['td'],
            'noAmb': null != bOo['ab'],
            'interface': parseInt(bOo['in']) || null,
            'withdraw': null == bOo['wd'] ? 0x3e8 : parseInt(bOo['wd']) || 0x0,
            'deposit': null == bOo['dp'] ? 0x3e8 : parseInt(bOo['dp']) || 0x0
          });
          else if ('LIGHT_CONE' == bOo['i']) this['manager']['addLightCone'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1], {
            'colr': bOo['c'],
            'opacity': 0x1 != bOo['o'] && null != bOo['o'] ? bOo['o'] : 0x1,
            'yR': bOo['r'] ? bOo['r'][0x0] : 0x0,
            'xR': bOo['r'] ? bOo['r'][0x1] : 0x0,
            'zR': bOo['r'] ? bOo['r'][0x2] : 0x0,
            'noVis': bOo['v']
          });
          else if ('OBJECTIVE' == bOo['i']) this['manager']['addObjective'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1], bOo['obi'] || 0x0);
          else if ('FLAG' == bOo['i']) this['manager']['addFlag'](bOL, bOM, bON, parseInt(bOo['tm'] || 0x0) + 0x1);
          else if ('WEAPON_PICKUP' == bOo['i']) this['manager']['addWeapon'](bOL, bOM, bON, {
            'scoreP': parseInt(bOo['sp']) || 0x0,
            'noMsg': null != bOo['nm'],
            'method': parseInt(bOo['md']) || 0x0,
            'noRep': bOo['wr'],
            'weapon': bMX[parseInt(bOo['w'] || bOo['wid'] || 0x0)],
            'weaponId': parseInt(bOo['w'] || bOo['wid'] || 0x0)
          }, bOo['r'] ? bOo['r'][0x2] : 0x0, bOo['r'] ? bOo['r'][0x0] : 0x0, bOo['r'] ? bOo['r'][0x1] : 0x0);
          else if ('PARTICLES' != bOo['i']) 'PLANE' == bOo['i'] || 'BILLBOARD' == bOo['i'] ? this['manager']['addPlane'](bOL, bOM, bON, bOo['s'][0x2] / 0x2, bOo['s'][0x0] / 0x2, {
            'src': 'BILLBOARD' == bOo['i'] ? 'pubs/b_' + (bOo['bb'] || bMU['randInt'](0x1, bOn['billboardCnt'])) : bOO,
            'emissive': bOo['e'] || null,
            'noise': bOo['en'] || 0x0,
            'opacity': 0x1 != bOo['o'] && null != bOo['o'] ? bOo['o'] : 0x1,
            'penetrable': bOo['pe'],
            'health': bOo['h'] || bOo['hp'],
            'respawnT': 0x3e8 * parseFloat(bOo['rt']),
            'respawnR': null != bOo['rr'],
            'colr': bOo['c'],
            'noCol': bOo['l'] || bOo['col'],
            'noVis': bOo['v'],
            'side': 'BILLBOARD' == bOo['i'] ? 0x2 : 0x0,
            'movT': null != bOo['ts'] && bOo['ts'] / 0x2710,
            'movD': bOo['td'],
            'noAmb': null != bOo['ab'],
            'interface': parseInt(bOo['in']) || null
          }, bOo['r'] ? bOo['r'][0x2] : 0x0, (bOo['r'] ? bOo['r'][0x0] : 0x0) - Math['PI'] / 0x2, bOo['r'] ? bOo['r'][0x1] : 0x0) : 'SIGN' == bOo['i'] ? this['manager']['addCanvas'](bOL, bOM, bON, bOo['s'][0x2] / 0x2, bOo['s'][0x0] / 0x2, {
            'noCol': bOo['l'] || bOo['col'],
            'fontSize': parseInt(bOo['sf']) || 0xa,
            'text': bOo['st'],
            'tAlign': parseInt(bOo['sa']) || 0x0,
            'fcolr': bOo['sc'],
            'bcolr': bOo['sb'],
            'noBVis': bOo['bv'],
            'movT': null != bOo['ts'] && bOo['ts'] / 0x2710,
            'movD': bOo['td']
          }, bOo['r'] ? -bOo['r'][0x2] : 0x0, (bOo['r'] ? bOo['r'][0x0] : 0x0) - Math['PI'] / 0x2, bOo['r'] ? bOo['r'][0x1] : 0x0) : 'SPECTATE_CAM' == bOo['i'] ? this['manager']['addSpectateCam'](bOL, bOM, bON, {
            'objLink': bOo['obi'] || 0x0,
            'yR': bOo['r'] ? bOo['r'][0x0] : 0x0,
            'xR': bOo['r'] ? bOo['r'][0x1] : 0x0,
            'zR': bOo['r'] ? bOo['r'][0x2] : 0x0
          }) : 'RAMP' == bOo['i'] ? this['manager']['addRamp'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x1], bOo['s'][0x2], (bOo['d'] || 0x0) * Math['PI'] / 0x2, bOo['b'], bOo['t'] ? bOO : 'grey_0', bOo['v'], bOo['c'], bOn['ambScale'], null != bOo['ts'] && bOo['ts'] / 0x2710, bOo['td'], null != bOo['ab'], bOo['e'] || null) : 'SCORE_ZONE' == bOo['i'] ? this['manager']['addScoreZone'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1], parseInt(bOo['sp']) || 0x1) : 'DEATH_ZONE' == bOo['i'] ? this['manager']['addDeathZone'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1]) : 'CHECK_POINT' == bOo['i'] ? this['manager']['addCheckPoint'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1], bOo['su'] || !0x1, bOo['d'] || 0x0) : 'TELEPORTER' == bOo['i'] ? this['manager']['addTeleporter'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x2], bOo['s'][0x1], parseInt(bOo['ch'] || 0x0), parseInt(bOo['n'] || 0x0), null != bOo['m']) : 'LADDER' == bOo['i'] ? this['manager']['addLadder'](bOL, bOM, bON, bOo['s'][0x1], (bOo['d'] || 0x0) * Math['PI'] / 0x2, bOo['v'], bOo['t'] ? bOO : 'floor_0', bOo['c']) : this['manager']['addMesh'](bOL, bOM, bON, bOo['r'], bOo['s'][0x0] / 0x2, bOo['s'][0x1] / 0x2, bOo['s'][0x2] / 0x2, {
            'src': bOo['i']['toLowerCase'](),
            'health': bOo['h'] || bOo['hp'],
            'respawnT': 0x3e8 * parseFloat(bOo['rt']),
            'respawnR': null != bOo['rr'],
            'colr': bOo['c'],
            'noCol': bOo['l'] || bOo['col'],
            'noVis': bOo['v'],
            'noAmb': null != bOo['ab'],
            'interface': parseInt(bOo['in']) || null
          });
          else if (bMS) {
            var bOR = bMS['prefabs'][parseInt(bOo['pr'] || 0x0)];
            bMS['area'](bOL, bOM, bON, bOo['s'][0x0], bOo['s'][0x1], bOo['s'][0x2], {
              'src': bOR['src'],
              'blending': bOR['blending'],
              'spd': bOR['spd'] * (parseInt(bOo['psp']) || 0x1),
              'cnt': bOR['cnt'],
              'count': 0x0 < (parseInt(bOo['pc']) || 0x0) ? parseInt(bOo['pc']) : Math['round']((bOo['s'][0x0] + bOo['s'][0x2] + bOo['s'][0x1]) / bOR['cnt']),
              'grav': bOR['grav']['map'](bMR => bMR * (parseInt(bOo['pg']) || 0x1)),
              'scl': bOR['scl']['map'](bMR => bMR * (parseInt(bOo['ps']) || 0x1)),
              'dir': bOo['d'] || bOR['dir'],
              'colr': bOo['c']
            });
          }
        }
        if (this['mapHeight'] = bOK, this['manager']['addNoisePlanes'](), bOm['shadLength'] = Math['round'](Math['abs'](bOH - bOG) / 2.5), bOm['shadWidth'] = Math['round'](Math['abs'](bOJ - bOI) / 2.5), bMR && bMR['updateLightMap'](bOm), this['manager']['aoOpac'] = 0x1, bMR) {
          var bOU, bOV = bOn['ambScale'];
          for (bOC = 0x0; bOC < this['manager']['objects']['length']; ++bOC)
            if (!((bOo = this['manager']['objects'][bOC])['noVis'] || 'prop' == bMZ['id'] && bOo['propID'] || bOo['complexMesh'] || bOo['health'] || bOo['noAmb'] || bOo['gate']))
              for (bOQ = bOC + 0x1; bOQ < this['manager']['objects']['length']; ++bOQ)
                if (!(bOu = this['manager']['objects'][bOQ])['noVis'] && ('prop' != bMZ['id'] || !bOu['propID']) && !bOu['health'] && !bOu['noAmb'] && !bOu['gate'] && !bOu['complexMesh'] && this['manager']['collision'](bOo, bOu, 0x0)) {
                  if (bOU = bMU['boxIntersection'](bOo, bOu, 'x', 'z', [Math['PI'], 0x0, Math['PI'] / 0x2, -Math['PI'] / 0x2]))
                    for (var bOW = 0x0; bOW < bOU['length']; ++bOW)
                      if (!bOU[bOW]['dontUse']) {
                        for (var bOX = bMU['getIntersection'](bOo, bOu, 'y'), bOY = bOV * (bOo['aoMlt'] || 0x1) * (bOu['aoMlt'] || 0x1), bOZ = 0x0; 0x2 > bOZ; bOZ++) bOD = (bOU[bOW]['d'] + Math['PI'] / 0x2 * bOZ) % (0x2 * Math['PI']), bOY = Math['min'](bOY, this['manager']['limitAmb'](bOV, bOU[bOW], bOD, 'x', 'z', bOo, bOu));
                        for (bOZ = 0x0; 0x2 > bOZ; bOZ++)
                          if (bOD = (bOU[bOW]['d'] + Math['PI'] / 0x2 * bOZ) % (0x2 * Math['PI']), this['manager']['addAmbient'](bOU[bOW]['x'] + bOY * Math['cos'](bOD), bOX['y'], bOU[bOW]['z'] + bOY * Math['sin'](bOD), -bOD + Math['PI'], 0x0, 0x0, bOX['height'], bOY + bOn['ambOff'], 0x1), bOD == Math['PI'] / 0x2 || bOD == -Math['PI'] / 0x2 || bOD == 1.5 * Math['PI']) {
                            var bP0 = bMU['limitRect'](bOU[bOW]['z'] + bOY * Math['sin'](bOD), bOX['y'] + bOY + bOX['height'] + bOn['ambOff'], bOY, bOY, 0x0, [bOo, bOu], 'z', 'y');
                            this['manager']['addAmbient'](bOU[bOW]['x'] + bOY * Math['cos'](bOD), bP0['y'], bP0['z'], -bOD + Math['PI'], Math['PI'], 0x0, bP0['length'], bP0['height'], 0x0, [bOo, bOu], 'g1-' + bOZ + '-' + bOW, [bOU[bOW]['x'], bOX['y'] + bOX['height'], bOU[bOW]['z']]), bP0 = bMU['limitRect'](bOU[bOW]['z'] + bOY * Math['sin'](bOD), bOX['y'] - bOY - bOX['height'] - bOn['ambOff'], bOY, bOY, 0x0, [bOo, bOu], 'z', 'y'), this['manager']['addAmbient'](bOU[bOW]['x'] + bOY * Math['cos'](bOD), bP0['y'], bP0['z'], -bOD + Math['PI'], 0x0, 0x0, bP0['length'], bP0['height'], 0x0, [bOo, bOu], 'g2-' + bOZ + '-' + bOW, [bOU[bOW]['x'], bOX['y'] - bOX['height'], bOU[bOW]['z']]);
                          } else {
                            bP0 = bMU['limitRect'](bOU[bOW]['x'] + bOY * Math['cos'](bOD), bOX['y'] + bOY + bOX['height'] + bOn['ambOff'], bOY, bOY, 0x0, [bOo, bOu], 'x', 'y');
                            this['manager']['addAmbient'](bP0['x'], bP0['y'], bOU[bOW]['z'] + bOY * Math['sin'](bOD), -bOD + Math['PI'], Math['PI'], 0x0, bP0['width'], bP0['height'], 0x0, [bOo, bOu], 'g1-' + bOZ + '-' + bOW, [bOU[bOW]['x'], bOX['y'] + bOX['height'], bOU[bOW]['z']]), bP0 = bMU['limitRect'](bOU[bOW]['x'] + bOY * Math['cos'](bOD), bOX['y'] - bOY - bOX['height'] - bOn['ambOff'], bOY, bOY, 0x0, [bOo, bOu], 'x', 'y'), this['manager']['addAmbient'](bP0['x'], bP0['y'], bOU[bOW]['z'] + bOY * Math['sin'](bOD), -bOD + Math['PI'], 0x0, 0x0, bP0['width'], bP0['height'], 0x0, [bOo, bOu], 'g2-' + bOZ + '-' + bOW, [bOU[bOW]['x'], bOX['y'] - bOX['height'], bOU[bOW]['z']]);
                          }
                      } if (bOU = bMU['boxIntersection'](bOo, bOu, 'z', 'y', [Math['PI'], 0x0, -Math['PI'] / 0x2, Math['PI'] / 0x2]))
                    for (bOW = 0x0; bOW < bOU['length']; ++bOW)
                      if (!bOU[bOW]['dontUse']) {
                        for (bOX = bMU['getIntersection'](bOo, bOu, 'x'), bOY = bOV * (bOo['aoMlt'] || 0x1) * (bOu['aoMlt'] || 0x1), bOZ = 0x0; 0x2 > bOZ; bOZ++) bOD = bOU[bOW]['d'] + Math['PI'] / 0x2 * (bOZ ? 0x0 : 0x1), bOY = Math['min'](bOY, this['manager']['limitAmb'](bOV, bOU[bOW], -bOD + Math['PI'] / 0x2, 'z', 'y', bOo, bOu));
                        for (bOZ = 0x0; 0x2 > bOZ; bOZ++) {
                          bOD = bOU[bOW]['d'] + Math['PI'] / 0x2 * (bOZ ? 0x0 : 0x1), this['manager']['addAmbient'](bOX['x'], bOU[bOW]['y'] + bOY * Math['cos'](bOD), bOU[bOW]['z'] + bOY * Math['sin'](bOD), 0x0, bOD, -Math['PI'] / 0x2, bOX['width'], bOY + bOn['ambOff'], 0x1);
                          bP0 = bMU['limitRect'](bOX['x'] + bOX['width'] + bOY + bOn['ambOff'], bOU[bOW]['z'] + bOY * Math['sin'](bOD), bOY, bOY, 0x0, [bOo, bOu], 'x', 'z');
                          this['manager']['addAmbient'](bP0['x'], bOU[bOW]['y'] + bOY * Math['cos'](bOD), bOU[bOW]['z'] + bOY * Math['sin'](bOD), Math['PI'], bOD == Math['PI'] ? bOD : -bOD % Math['PI'], bOD == 1.5 * Math['PI'] ? 0x0 : -Math['PI'] / 0x2, bOD == 1.5 * Math['PI'] ? bOY : bP0['length'], bOD == 1.5 * Math['PI'] ? bP0['length'] : bOY, 0x0, [bOo, bOu], 'g3-' + bOZ + '-' + bOW, [bOX['x'] + bOX['width'], bOU[bOW]['y'], bOU[bOW]['z']]), bP0 = bMU['limitRect'](bOX['x'] - bOX['width'] - bOY - bOn['ambOff'], bOU[bOW]['z'] + bOY * Math['sin'](bOD), bOY, bOY, Math['PI'] / 0x2, [bOo, bOu], 'x', 'z'), this['manager']['addAmbient'](bP0['x'], bOU[bOW]['y'] + bOY * Math['cos'](bOD), bOU[bOW]['z'] + bOY * Math['sin'](bOD), Math['PI'], -bOD % Math['PI'], bOD == Math['PI'] || bOD == 1.5 * Math['PI'] ? Math['PI'] / 0x2 : Math['PI'], bOD == Math['PI'] || bOD == 1.5 * Math['PI'] ? bP0['width'] : bOY, bOD == Math['PI'] || bOD == 1.5 * Math['PI'] ? bOY : bP0['width'], 0x0, [bOo, bOu], 'g4-' + bOZ + '-' + bOW, [bOX['x'] - bOX['width'], bOU[bOW]['y'], bOU[bOW]['z']]);
                        }
                      } if (bOU = bMU['boxIntersection'](bOo, bOu, 'x', 'y', [Math['PI'], 0x0, -Math['PI'] / 0x2, Math['PI'] / 0x2]))
                    for (bOW = 0x0; bOW < bOU['length']; ++bOW)
                      if (!bOU[bOW]['dontUse']) {
                        for (bOX = bMU['getIntersection'](bOo, bOu, 'z'), bOY = bOV * (bOo['aoMlt'] || 0x1) * (bOu['aoMlt'] || 0x1), bOZ = 0x0; 0x2 > bOZ; bOZ++) bOD = bOU[bOW]['d'] + Math['PI'] / 0x2 * (bOZ ? 0x0 : 0x1), bOY = Math['min'](bOY, this['manager']['limitAmb'](bOV, bOU[bOW], -bOD + Math['PI'] / 0x2, 'x', 'y', bOo, bOu));
                        for (bOZ = 0x0; 0x2 > bOZ; bOZ++)
                          if (bOD = bOU[bOW]['d'] + Math['PI'] / 0x2 * (bOZ ? 0x0 : 0x1), this['manager']['addAmbient'](bOU[bOW]['x'] + bOY * Math['sin'](bOD), bOU[bOW]['y'] + bOY * Math['cos'](bOD), bOX['z'], Math['PI'] / 0x2, bOD, -Math['PI'] / 0x2, bOX['length'], bOY + bOn['ambOff'], 0x1), bOD == Math['PI'] || 0x0 == bOD) {
                            bP0 = bMU['limitRect'](bOU[bOW]['z'] + bOY * Math['sin'](bOD), bOX['z'] + bOX['length'] + bOY + bOn['ambOff'], bOY, bOY, Math['PI'] / 0x2, [bOo, bOu], 'x', 'z');
                            this['manager']['addAmbient'](bOU[bOW]['x'] + bOY * Math['sin'](bOD), bOU[bOW]['y'] + bOY * Math['cos'](bOD), bP0['z'], Math['PI'] / 0x2, bOD, -Math['PI'] / 0x2, bP0['length'], bP0['width'], 0x0, [bOo, bOu], 'g5-' + bOZ + '-' + bOW, [bOU[bOW]['x'], bOU[bOW]['y'], bOX['z'] + bOX['length']]), bP0 = bMU['limitRect'](bOU[bOW]['z'] + bOY * Math['sin'](bOD), bOX['z'] - bOX['length'] - bOY - bOn['ambOff'], bOY, bOY, Math['PI'] / 0x2, [bOo, bOu], 'x', 'z'), this['manager']['addAmbient'](bOU[bOW]['x'] + bOY * Math['sin'](bOD), bOU[bOW]['y'] + bOY * Math['cos'](bOD), bP0['z'], Math['PI'] / 0x2, bOD, Math['PI'], bP0['width'], bP0['length'], 0x0, [bOo, bOu], 'g6-' + bOZ + '-' + bOW, [bOU[bOW]['x'], bOU[bOW]['y'], bOX['z'] - bOX['length']]);
                          } else {
                            bP0 = bMU['limitRect'](bOU[bOW]['x'] + bOY * Math['sin'](bOD), bOX['z'] + bOX['length'] + bOY + bOn['ambOff'], bOY, bOY, Math['PI'] / 0x2, [bOo, bOu], 'x', 'z');
                            this['manager']['addAmbient'](bP0['x'], bOU[bOW]['y'] + bOY * Math['cos'](bOD), bP0['z'], Math['PI'] / 0x2, bOD, -Math['PI'] / 0x2, bP0['length'], bP0['width'], 0x0, [bOo, bOu], 'g5-' + bOZ + '-' + bOW, [bOU[bOW]['x'], bOU[bOW]['y'], bOX['z'] + bOX['length']]), bP0 = bMU['limitRect'](bOU[bOW]['x'] + bOY * Math['sin'](bOD), bOX['z'] - bOX['length'] - bOY - bOn['ambOff'], bOY, bOY, Math['PI'] / 0x2, [bOo, bOu], 'x', 'z'), this['manager']['addAmbient'](bP0['x'], bOU[bOW]['y'] + bOY * Math['cos'](bOD), bP0['z'], Math['PI'] / 0x2, bOD, Math['PI'], bP0['width'], bP0['length'], 0x0, [bOo, bOu], 'g6-' + bOZ + '-' + bOW, [bOU[bOW]['x'], bOU[bOW]['y'], bOX['z'] - bOX['length']]);
                          }
                      }
                } this['manager']['addPendingAOs']();
        }
        this['spawns']['length'] = 0x0;
        for (bOC = 0x0; bOC < bOm['spawns']['length']; ++bOC) this['spawns']['push']({
          'x': bOm['spawns'][bOC][0x0],
          'y': bOm['spawns'][bOC][0x1],
          'z': bOm['spawns'][bOC][0x2],
          'team': bOm['spawns'][bOC][0x3],
          'dir': parseInt(bOm['spawns'][bOC][0x4]) || 0x0,
          'comp': !!bOm['spawns'][bOC][0x5]
        });
        bMR && bMR['addMeshGroups']();
      }
      this['manager']['resetAll']();
    };
  };
}, function(bP1, bP2) {
  bP1['exports'] = [{
    'name': 'Triggerman',
    'loadout': [0x1],
    'secondary': !0x0,
    'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x6c5042, 0xbfbfbf],
    'health': 0x64,
    'segs': 0x6,
    'speed': 1.05
  }, {
    'name': 'Hunter',
    'loadout': [0x0],
    'secondary': !0x0,
    'colors': [0xa77860, 0x7b573d, 0x634732, 0x282828, 0x634732, 0x3d2b1d],
    'health': 0x3c,
    'segs': 0x5,
    'speed': 1.05
  }, {
    'name': 'Run\x20N\x20Gun',
    'loadout': [0x3],
    'colors': [0xa77860, 0x3e6382, 0x2f4b63, 0x282828, 0x634732, 0x1a2b3a],
    'health': 0x64,
    'segs': 0x6,
    'speed': 1.18
  }, {
    'name': 'Spray\x20N\x20Pray',
    'loadout': [0x6],
    'txts': ['Calling\x20in\x20the\x20Big\x20Guns?', 'Remember\x20-\x20No\x20Russian.', 'Pesky\x20Snipers...'],
    'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x282828, 0x303827],
    'health': 0xaa,
    'segs': 0x7,
    'regen': 0.05,
    'speed': 0x1
  }, {
    'name': 'Vince',
    'loadout': [0x5],
    'secondary': !0x0,
    'colors': [0x805c4a, 0x545267, 0x3f3d4d, 0x282828, 0x282828, 0x292833],
    'health': 0x64,
    'segs': 0x6,
    'speed': 0x1
  }, {
    'name': 'Detective',
    'loadout': [0x4],
    'colors': [0xa77860, 0x704e36, 0x434c5e, 0x282828, 0x634732, 0x3f2c1e],
    'health': 0x64,
    'segs': 0x6,
    'speed': 0x1
  }, {
    'name': 'Marksman',
    'loadout': [0x7],
    'secondary': !0x0,
    'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x282828, 0x293022],
    'health': 0x5a,
    'segs': 0x6,
    'speed': 0x1
  }, {
    'name': 'Rocketeer',
    'loadout': [0x8],
    'secondary': !0x0,
    'txts': ['...'],
    'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x6c5042, 0x2b3324],
    'health': 0x82,
    'segs': 0x7,
    'speed': 0.86
  }, {
    'name': 'Agent',
    'loadout': [0x9],
    'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0xbfbfbf],
    'health': 0x64,
    'segs': 0x6,
    'speed': 1.2
  }, {
    'name': 'Runner',
    'txts': ['You\x20sure\x20about\x20this?', '...', 'Oh\x20boy', 'I\x20don\x27t\x20know\x20about\x20this...', 'Not\x20me\x20again...'],
    'loadout': [0xc],
    'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0x232323],
    'health': 0x64,
    'segs': 0x6,
    'regen': 0.2,
    'speed': 0x1
  }, {
    'name': 'Deagler',
    'hide': !0x0,
    'loadout': [0xa],
    'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0x232323],
    'health': 0x3c,
    'segs': 0x5,
    'speed': 0x1
  }, {
    'name': 'Bowman',
    'loadout': [0xd],
    'secondary': !0x0,
    'colors': [0xa77860, 0x916c52, 0x60432e, 0x282828, 0x282828, 0x473527],
    'health': 0x64,
    'segs': 0x6,
    'speed': 0x1
  }, {
    'name': 'Commando',
    'loadout': [0xe],
    'secondary': !0x0,
    'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x995c2c, 0x171717],
    'health': 0x64,
    'segs': 0x6,
    'speed': 0x1
  }];
}, function(bP3, bP4, bP5) {
  var bP6, bP7, bP8 = bP5(0x7),
    bP9 = bP5(0x4),
    bPa = bP5(0x3a);
  bP3['exports'] = function(bP4, bP8, bP9, bPe, bPf) {
    bP4['ImageUtils']['crossOrigin'] = '';
    var bPg = bP5(0x18),
      bPh = new bP4['LoadingManager'](),
      bPi = new bP4['OBJLoader'](bPh);
    this['cubeGeo'] = new bP4['BoxGeometry'](0x1, 0x1, 0x1), this['getCubeMesh'] = function() {
      return new bP4['Mesh'](this['cubeGeo']);
    };
    var bPj = new bP4['PlaneGeometry'](0x1, 0x1);
    new bP4['CylinderGeometry'](0.1, 0x1, 0x1, 0x4, 0x1, !0x1, Math['PI'] / 0x4)['computeFlatVertexNormals']();
    var bPk = new bP4['TextureLoader'](),
      bPl = new bP4['MeshBasicMaterial']({
        'color': 0xffffff
      }),
      bPm = new bP4['MeshBasicMaterial']({
        'color': 0xff00
      }),
      bPn = {},
      bPo = {},
      bPp = {};
    this['movTextures'] = [], this['pulsMats'] = [], this['frameMats'] = [], this['pulsVal'] = 0x0;
    var bPq, bPr = this,
      bPs = {};
    this['frustum'] = new bP4['Frustum']();
    var bPt = new bP4['Matrix4']();
    this['camera'] = new bP4['PerspectiveCamera'](0x0, window['innerWidth'] / window['innerHeight'], 0.1, 0x1770), this['fpsCamera'] = new bP4['PerspectiveCamera'](bPe['fov'], window['innerWidth'] / window['innerHeight'], 0.1, 0x12c), this['fpsCamera']['layers']['set'](0x1), this['camera']['add'](this['fpsCamera']), this['weaponLean'] = 0x1, this['weaponOffX'] = 0x1, this['weaponOffY'] = 0x1, this['weaponOffZ'] = 0x1, this['weaponBob'] = 0x1, this['hideADS'] = 0x0, this['renderDst'] = 0x0, this['customADS'] = '', this['lowSpec'] = !0x1, this['customRatio'] = null, this['aspectRatio'] = '', this['init'] = function(bP5, bP6) {
      this['clearPendingMeshes'](), this['scene'] = new bP4['Scene'](), this['backgroundScene'] = new bP4['Scene'](), bP5['skyDome'] && bP6 && null == bP6['skyCol'] && (this['skyDome'] = bPa['fromConfig'](bP5), this['backgroundScene']['add'](this['skyDome'])), bP3['exports']['initScene']['apply'](this, [bP5, bP6]);
    }, this['getRes'] = function() {
      var bP3 = this['aspectRatio']['split']('x');
      return (parseInt(bP3[0x0]) || window['innerWidth']) / (parseInt(bP3[0x1]) || window['innerHeight']);
    };
    var bPx = 0x0;
    this['flash'] = function(bP3, bP4) {
      bPf['showFlash'] = !0x0, bPf['flashX'] = bP3, bPf['flashY'] = 0x1 - bP4, bPx = 0x1;
    }, this['updateLightMap'] = function(bP3) {
      this['skyLight'] && (this['skyLight']['shadow']['camera']['right'] = bP3['shadWidth'], this['skyLight']['shadow']['camera']['left'] = -bP3['shadWidth'], this['skyLight']['shadow']['camera']['top'] = bP3['shadLength'], this['skyLight']['shadow']['camera']['bottom'] = -bP3['shadLength']);
    }, this['useDepthMap'] = 0x0, this['toggleDepthMap'] = function(bP5) {
      if (this['useDepthMap'] = bP5, this['scene']) {
        var bP8 = bP5 && '0' != bP5;
        this['scene']['overrideMaterial'] = bP8 ? bPl : null, bP8 ? (this['scene']['fog'] = new bP4['Fog'](0x0, 0x0, bP5), this['renderer']['setClearColor'](0x0)) : bP3['exports']['initScene']['apply'](this, [bP6, bP7]);
      }
    }, this['greenScreen'] = !0x1, this['updateGreenScreen'] = function(bP3) {
      bPr['greenScreen'] && !bP3['noGreen'] ? (bP3['realMat'] = bP3['material'], bP3['material'] = bPm) : bP3['material'] = bP3['realMat'] || bP3['material'];
    }, this['toggleGreenscreen'] = function(bP3) {
      this['greenScreen'] = bP3, this['scene'] && (bP3 ? (this['renderer']['setClearColor'](0xff00), this['scene']['fog']['near'] = 0.1, this['scene']['fog']['far'] = 0x0) : (this['scene']['fog']['near'] = 0x1, this['scene']['fog']['far'] = bP7 && null != bP7['fogD'] ? bP7['fogD'] : bP6['fogD'], this['renderer']['setClearColor'](bP7 && null != bP7['skyCol'] ? bP7['skyCol'] : bP6['sky'])), this['scene']['traverse'](function(bP3) {
        bPr['updateGreenScreen'](bP3);
      }));
    }, this['renderer'] = new bP4['WebGLRenderer']({
      'precision': 'mediump',
      'powerPreference': 'high-performance',
      'antialias': !0x1
    }), this['renderer']['shadowMap']['enabled'] = !0x0, this['renderer']['shadowMap']['autoUpdate'] = !0x1, this['renderer']['shadowMap']['type'] = bP4['BasicShadowMap'], this['renderer']['setPixelRatio'](window['devicePixelRatio']), this['renderer']['setSize'](window['innerWidth'], window['innerHeight']), this['renderer']['autoClear'] = !0x1, document['body']['appendChild'](this['renderer']['domElement']), this['shadows'] = !0x0, this['updateShadowMap'] = function() {
      this['shadows'] && (this['renderer']['shadowMap']['needsUpdate'] = !0x0);
    }, this['toggleShadowMap'] = function(bP3) {
      bP3 ? (this['shadows'] = !0x0, this['updateShadowMap']()) : (this['shadows'] = !0x1, this['skyLight'] && (this['renderer']['setRenderTarget'](this['skyLight']['shadow']['map']), this['renderer']['clear'](), this['renderer']['setRenderTarget'](null)));
    }, this['zoomVal'] = 0x1, this['zoom'] = function(bP3) {
      this['zoomVal'] = bP3, this['updateCamFOV'](), this['fpsCamera']['fov'] = this['fpsFov'] / bP3, this['fpsCamera']['updateProjectionMatrix']();
    }, this['setFPSFov'] = function(bP3) {
      this['fpsFov'] = bP3, this['fpsCamera']['fov'] = bP3, this['fpsCamera']['updateProjectionMatrix']();
    }, this['setFPSFov'](bPe['fov']), this['fovMult'] = function(bP3) {
      this['fovMlt'] != bP3 && (this['fovMlt'] = bP3, this['updateCamFOV']());
    }, this['fovMlt'] = 0x1, this['updateCamFOV'] = function() {
      this['camera']['fov'] = this['fov'] / this['zoomVal'] * this['fovMlt'], this['camera']['updateProjectionMatrix']();
    }, this['setFov'] = function(bP3) {
      this['fov'] = bP3, this['updateCamFOV']();
    }, this['setFov'](bPe['fov']), this['resize'] = function() {
      this['camera']['aspect'] = this['getRes'](), this['camera']['updateProjectionMatrix'](), this['fpsCamera']['aspect'] = this['getRes'](), this['fpsCamera']['updateProjectionMatrix'](), this['renderer']['setSize'](window['innerWidth'], window['innerHeight']);
    }, this['resMltV'] = 0x1, this['setResMlt'] = function(bP3) {
      this['resMltV'] = bP3, this['renderer']['setPixelRatio'](window['devicePixelRatio'] * this['resMltV']), this['renderer']['setSize'](window['innerWidth'], window['innerHeight']);
    }, this['updateFrustum'] = function() {
      this['frustum']['setFromMatrix'](bPt['multiplyMatrices'](this['camera']['projectionMatrix'], this['camera']['matrixWorldInverse']));
    };
    var bPM = 0x0,
      bPN = 0x0;
    this['SzUUSAooUwQAqxugcIkKSbVXkQdBIUDx'] = 0x0, this['oGqdQCPMZjxLLkXCcQjVRqfovheiaZMR'] = 0x0, this['updateShake'] = function(bP3) {
      bPM && (bPM *= Math['pow'](0.99, bP3), bPN += bP8['randFloat'](-Math['PI'], Math['PI']), this['SzUUSAooUwQAqxugcIkKSbVXkQdBIUDx'] = Math['cos'](bPN) * bPM, this['oGqdQCPMZjxLLkXCcQjVRqfovheiaZMR'] = Math['sin'](bPN) * bPM, 0.01 >= bPM && (bPM = 0x0, this['SzUUSAooUwQAqxugcIkKSbVXkQdBIUDx'] = this['oGqdQCPMZjxLLkXCcQjVRqfovheiaZMR'] = 0x0));
    }, this['shake'] = function(bP3) {
      bPM = bP3;
    }, this['render'] = function(bP3, bP4) {
      if (this['scene'] || bP4) {
        for (var bP5 = 0x0; bP5 < this['movTextures']['length']; ++bP5)(bPq = this['movTextures'][bP5])['tex']['offset'] && (bPq['tex']['offset'][0x0 == bPq['movD'] ? 'x' : 'y'] += bPq['mov'] * bP3);
        this['pulsVal'] += 0.003 * bP3;
        var bP6;
        for (bP5 = 0x0; bP5 < this['pulsMats']['length']; ++bP5) bP6 = 1.2 * (Math['sin'](this['pulsVal']) / 0x2 + 0.5), this['pulsMats'][bP5]['mat']['emissiveIntensity'] = bP6;
        for (bP5 = 0x0; bP5 < this['frameMats']['length']; ++bP5)(bPq = this['frameMats'][bP5])['dur'] -= bP3, 0x0 >= bPq['dur'] && (bPq['dur'] = bPq['orgDur'], bPq['cur']++, bPq['cur'] > bPq['num'] && (bPq['cur'] = 0x0), bPq['mat']['map'] && (bPq['mat']['map']['offset']['x'] = bPq['cur'] % bPq['num'] / bPq['num']));
        bP4 || (this['renderer']['clear'](), this['camera']['layers']['set'](0x0), this['skyDome'] && (this['camera']['pCrFlzzpYGHaZFbPwRqLxxsSKMxdAdnH'](this['skyDome']['position']), this['renderer']['render'](this['backgroundScene'], this['camera']), this['renderer']['clearDepth']()), this['renderer']['render'](this['scene'], this['camera']), this['camera']['layers']['set'](0x2), this['renderer']['clearDepth'](), this['renderer']['render'](this['scene'], this['camera']), this['renderer']['clearDepth'](), this['renderer']['render'](this['scene'], this['fpsCamera']), bPf['showFlash'] && (0x0 >= bPx && (bPx = 0x0, bPf['showFlash'] = !0x1), bPx -= bP3), this['updateShake'](bP3));
      }
    }, this['updateTexture'] = function(bP3, bP5, bP6) {
      bP6 = bP6 || {};
      var bP7 = 0x0;
      for (var bP8 in bPp) bP8['substring'](0x0, bP3['length'] + 0x2) == bP3 + 'mt' && (bP7++, bPp[bP8]['image'] = bP5, bPp[bP8]['needsUpdate'] = !0x0);
      if (!bP7) {
        var bP9 = bP3 + (null == bP6['movT'] ? 'mt' : 'mt' + bP6['movT']) + (null == bP6['movD'] ? 'md' : bP6['movD']) + (bP6['fontSize'] || 'fs') + (bP6['fcolr'] || 'fc') + (bP6['bcolr'] || 'bc') + (bP6['noBVis'] || 'bv') + (bP6['text'] || 'txt') + (bP6['tAlign'] || 'ta'),
          bPa = bPp[bP9];
        bPa = new bP4['Texture'](bP5), bPp[bP9] = bPa, bPp[bP9]['needsUpdate'] = !0x0;
      }
    }, this['loadTexture'] = function(bP3, bP5, bP6, bP7) {
      var bP9 = bP5 + (null == (bP6 = bP6 || {})['movT'] ? 'mt' : 'mt' + bP6['movT']) + (null == bP6['movD'] ? 'md' : bP6['movD']) + (bP6['fontSize'] || 'fs') + (bP6['fcolr'] || 'fc') + (bP6['bcolr'] || 'bc') + (bP6['noBVis'] || 'bv') + (bP6['text'] || 'txt') + (bP6['tAlign'] || 'ta');
      if (bPp[bP9]) bPp[bP9]['mats'] ? bPp[bP9]['mats']['push']({
        't': bP7,
        'm': bP3
      }) : (bP3[bP7 || 'map'] = bPp[bP9], bP3['needsUpdate'] = !0x0);
      else if (bPp[bP9] = {
          'mats': [{
            't': bP7,
            'm': bP3
          }]
        }, bP6['canvas']) {
        var bPa = new bP4['Texture'](bP6['canvas']);
        bPa['wrapS'] = bP4['RepeatWrapping'], bPa['wrapT'] = bP4['RepeatWrapping'], bPa['repeat']['set'](bP6['repeatX'] || 0x1, bP6['repeatY'] || 0x1), bPa['minFilter'] = bP6['tFilter'] || bP4['NearestFilter'], bPa['magFilter'] = bP6['tFilter'] || bP4['NearestFilter'], bPa['needsUpdate'] = !0x0;
        for (var bPe = 0x0; bPe < bPp[bP9]['mats']['length']; ++bPe) bPp[bP9]['mats'][bPe]['m'][bPp[bP9]['mats'][bPe]['t'] || 'map'] = bPa, bPp[bP9]['mats'][bPe]['m']['needsUpdate'] = !0x0;
        bPp[bP9] = bPa, bP6['movT'] && this['movTextures']['push']({
          'tex': bPa,
          'mov': bP6['movT'],
          'movD': bP6['movD'] || 0x0
        });
      } else 'string' != typeof bP5 || bP5['includes']('default') || bPk['load'](bP8['assetsUrl']('/textures/' + bP5 + '.png'), bP3 => {
        bP3['wrapS'] = bP4['RepeatWrapping'], bP3['wrapT'] = bP4['RepeatWrapping'], bP3['repeat']['set'](bP6['frames'] ? 0x1 / bP6['frames'] : bP6['repeatX'] || 0x1, bP6['repeatY'] || 0x1), bP3['minFilter'] = bP6['tFilter'] || bP4['NearestFilter'], bP3['magFilter'] = bP6['tFilter'] || bP4['NearestFilter'], bP3['needsUpdate'] = !0x0;
        for (var bP5 = 0x0; bP5 < bPp[bP9]['mats']['length']; ++bP5) bPp[bP9]['mats'][bP5]['m'][bPp[bP9]['mats'][bP5]['t'] || 'map'] = bP3, bPp[bP9]['mats'][bP5]['m']['needsUpdate'] = !0x0;
        bPp[bP9] = bP3, bP6['movT'] && this['movTextures']['push']({
          'tex': bP3,
          'mov': bP6['movT'],
          'movD': bP6['movD'] || 0x0
        });
      });
      return bP3;
    }, this['getMat'] = function(bP3, bP5) {
      var bP6 = (bP5 && bP5['texSrc'] || bP3) + (bP5 ? (bP5['rotation'] || 'x') + (bP5['noFog'] || 'y') + (bP5['opacity'] || 'z') + (bP5['color'] || 'b') + (bP5['mat'] ? 'ma' : 'nm') + (bP5['ao'] || 'a') + (bP5['emissive'] || 'e') + (bP5['glowText'] || 'g') + (null == bP5['movT'] ? 'mt' : bP5['movT']) + (null == bP5['movD'] ? 'md' : bP5['movD']) + (null == bP5['canvas'] ? '' : 'canvas') + (null == bP5['pulsT'] ? 'npt' : 'pt' + bP5['pulsT']) + (null == bP5['frames'] ? 'nfr' : 'fr' + bP5['frames']) + (null == bP5['frameT'] ? 'nfrt' : 'frt' + bP5['frameT']) + (null == bP5['depthWrite'] ? 'd' : bP5['depthWrite']) + (bP5['fontSize'] || 'fs') + (bP5['fcolr'] || 'fc') + (bP5['bcolr'] || 'bc') + (bP5['noBVis'] || 'bv') + (bP5['text'] || 'txt') + (bP5['tAlign'] || 'ta') : ''),
        bP7 = bPo[bP6];
      return bP7 || (bP7 = new((bP5 = bP5 || {})['mat'] ? bP5['mat'] : bP4['StrippedLambertMaterial'])(bP5), bP5['canvas'] && this['loadTexture'](bP7, bP6, bP5), bP3 && 'default' != bP3 && this['loadTexture'](bP7, bP5['texSrc'] || bP3, bP5), bP5 && bP5['emissive'] && this['loadTexture'](bP7, (bP5['glowText'] && bP5['texSrc'] || bP3) + (bP5['sameGlow'] ? '' : '_e'), bP5, 'emissiveMap'), bP5 && bP5['ao'] && (this['loadTexture'](bP7, bP3 + '_ao', bP5, 'aoMap'), bP7['aoMapIntensity'] = 1.3), bP5 && bP5['normal'] && this['loadTexture'](bP7, bP3 + '_n', bP5, 'normalMap'), 'default' == bP3 && (bP7['vertexColors'] = bP4['VertexColors']), bP5 && bP5['noFog'] && (bP7['fog'] = !0x1), bP7['shading'] = bP4['SmoothShading'], bPo[bP6] = bP7, bP5['pulsT'] && this['pulsMats']['push']({
        'mat': bP7,
        'pul': bP5['pulsT']
      }), bP5['frames'] && this['frameMats']['push']({
        'mat': bP7,
        'num': bP5['frames'],
        'cur': 0x0,
        'dur': bP5['frameT'],
        'orgDur': bP5['frameT']
      })), bP7;
    }, this['genColorCube'] = function(bP3, bP5, bP6, bP7, bP8, bP9) {
      for (var bPa = (bP9 = bP9 || {})['us'] ? 'us' : 'ns', bPe = 0x0; bPe < bP7['length']; ++bPe) {
        for (var bPf = 0x0; bPf < bP7[bPe]['length']; ++bPf) bPa += bP7[bPe][bPf] + '_';
        bPa += '|';
      }
      var bPh = bPn[bPa];
      if (!bPh) {
        bPh = new bP4['Geometry']();
        var bPi = 0.5 + (bP8 || 0x0);
        for (bPe = 0x0; bPe < bP7['length']; ++bPe) {
          var bPj = bP7[bPe][0x1],
            bPk = bP7[bPe][0x2] || 0x1;
          if (bP9['us']) {
            bPl = bPg['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], 0x1, 0x1, 0x1, {
              'colr': bP7[bPe][0x0],
              'fAmb': bP7[bPe][0x4],
              'amb': bP7[bPe][0x3]
            });
            (bPm = new bP4['Mesh'](bPl))['scale']['set'](bPk, bPj, bPk), this['moveMesh'](bPm, 0x0, bPi - bPj, 0x0);
          } else {
            var bPl = new bP4['BoxGeometry'](bPk, bPj, bPk);
            bPg['colorize'](bPl, bP7[bPe][0x0]), bPm = new bP4['Mesh'](bPl), this['moveMesh'](bPm, 0x0, bPi - bPj / 0x2, 0x0);
          }
          this['merge'](bPh, bPm), bPi -= bPj;
        }
        bPn[bPa] = bPh;
      }
      var bPm = new bP4['Mesh'](bPh, this['getMat']('default'));
      return this['scaleMesh'](bPm, bP3, bP5, bP6), bPm;
    };
    var bQt = {};
    this['genBody'] = function(bP3, bP5, bP6, bP7, bP8) {
      var bP9 = bP3 + '-' + bP5 + '-' + bP6 + '-' + bP7,
        bPa = bQt[bP9];
      if (!bPa) {
        bPa = new bP4['Geometry']();
        var bPf = bPe['fvcbEmTb'] - bPe['headScale'] - bPe['legHeight'],
          bPg = this['genColorCube'](bPe['chestWidth'], bPf, bPe['chestScale'], [
            [bP3, 0.8, 0x1, 0.8],
            [bP5, 0.2, 1.05]
          ], 0x0, {
            'us': bP8
          });
        this['moveMesh'](bPg, 0x0, bPf / 0x2, 0x0), this['merge'](bPa, bPg);
        var bPh = this['genColorCube'](bPe['headScale'], bPe['headScale'], bPe['headScale'], [
          [bP6, 0.2, 0x1, 0.6],
          [bP7, 0.8]
        ], 0x0, {
          'us': bP8
        });
        this['moveMesh'](bPh, 0x0, bPe['fvcbEmTb'] - bPe['headScale'] / 0x2 - bPe['legHeight'], 0x0), this['merge'](bPa, bPh), bPa = new bP4['BufferGeometry']()['fromGeometry'](bPa), bQt[bP9] = bPa;
      }
      var bPi = new bP4['Mesh'](bPa, this['getMat']('default'));
      return bPi['receiveShadow'] = !0x0, bPi['noGreen'] = !0x0, bPi;
    };
    var bQF = {};
    this['genLeg'] = function(bP3, bP5, bP6, bP7, bP8) {
      var bP9 = bPe['legScale'],
        bPa = null;
      if (bP7) {
        var bPf = bP5 + '-' + (bP7 || '');
        if (!(bPa = bQF[bPf])) {
          var bPg = bPe['legHeight'] / 0x2,
            bPh = bP9 / 0x2,
            bPi = [0.5, 0x2],
            bPj = this['genColorCube'](bP9, bPg, bP9, [
              [bP5, 0x1]
            ], 0x0, {
              'us': bP8
            });
          this['moveMesh'](bPj, 0x0, -bPg / 0x2 * Math['cos'](bPi[0x1]), -bPg / 0x2 * Math['sin'](bPi[0x1])), this['rotateMesh'](bPj, 0x0, bPi[0x1], 0x0);
          var bPk = Math['sqrt'](bPh * bPh + bPh * bPh - 0x2 * bPh * bPh * Math['cos'](bPi[0x0] - bPi[0x1])),
            bPl = 0x2 * Math['sqrt'](bPh * bPh - bPk / 0x2 * (bPk / 0x2)),
            bPm = this['genColorCube'](bP9, bPk, bPl, [
              [bP5, 0x1]
            ], 0x0, {
              'us': bP8
            });
          this['moveMesh'](bPm, 0x0, -bPg * Math['cos'](bPi[0x1]), -bPg * Math['sin'](bPi[0x1])), this['rotateMesh'](bPm, 0x0, (bPi[0x1] + bPi[0x0]) / 0x2, 0x0);
          var bPn = this['genColorCube'](bP9, bPg, bP9, [
            [bP5, 0.5, 0x1, 0.8],
            [bP6, 0.5]
          ], 0x0, {
            'us': bP8
          });
          this['moveMesh'](bPn, 0x0, -bPg * Math['cos'](bPi[0x1]) - bPg / 0x2 * Math['cos'](bPi[0x0]), -bPg * Math['sin'](bPi[0x1]) - bPg / 0x2 * Math['sin'](bPi[0x0])), this['rotateMesh'](bPn, 0x0, bPi[0x0], 0x0);
          bPa = new bP4['Geometry']();
          this['merge'](bPa, bPj), this['merge'](bPa, bPm), this['merge'](bPa, bPn), bQF[bPf] = bPa;
        }
        bPa = new bP4['BufferGeometry']()['fromGeometry'](bPa), bPa = new bP4['Mesh'](bPa, this['getMat']('default')), this['moveMesh'](bPa, bPe['legScale'] / 0x2 * (bP3 ? -0x1 : 0x1), bPe['legHeight'] - bPe['crouchDst'] + 0.5, 0x0);
      } else bPa = this['genColorCube'](bP9, bPe['legHeight'], bP9, [
        [bP5, 0.75, 0x1],
        [bP6, 0.25]
      ], -0.5, {
        'us': bP8
      }), this['moveMesh'](bPa, bPe['legScale'] / 0x2 * (bP3 ? -0x1 : 0x1), bPe['legHeight'], 0x0);
      return bPa['receiveShadow'] = !0x0, bPa['noGreen'] = !0x0, bPa;
    };
    var bQW = {};
    this['genArms'] = function(bP3, bP5, bP6, bP7, bP8, bP9) {
      var bPa = bQW[bP3['name'] + '-' + bP6 + '-' + bP7 + '-' + bP9 + '-' + (bP8 || 0x0)];
      if (!bPa) {
        bPa = new bP4['Geometry']();
        var bPf = (-bPe['chestWidth'] + bPe['armScale'] / 0x2 - bPe['armInset']) * (bP9 ? bP3['holdW'] || 0.4 : 0x1);
        bP8 && 0x1 != bP8 || this['merge'](bPa, this['genArm'](bPf, bPe['armOff'], bP3, !0x0, bP5, bP6, bP7, bP9)), bP8 && 0x2 != bP8 || this['merge'](bPa, this['genArm'](-bPf, bPe['armOff'], bP3, !0x1, bP5, bP6, bP7, bP9)), bPa = new bP4['BufferGeometry']()['fromGeometry'](bPa), bQW[bP3['name'] + '-' + bP6 + '-' + bP9 + '-' + (bP8 || 0x0)] = bPa;
      }
      return (bPa = new bP4['Mesh'](bPa, this['getMat']('default')))['position']['z'] += bP9 && bP3['hDstOff'] || 0x0, bPa['noGreen'] = !0x0, bPa['receiveShadow'] = !0x0, bPa;
    }, this['genArm'] = function(bP3, bP5, bP6, bP7, bP9, bPa, bPf, bPg) {
      var bPh = bP7 ? bP6['leftHoldY'] : bP6['rightHoldY'],
        bPi = bP7 ? bP6['leftHoldZ'] : bP6['rightHoldZ'];
      bPi += bPg && bP6['hDstOff'] || 0x0;
      var bPj = bP7 ? bP6['leftHoldX'] || 0x0 : bP6['rightHoldX'] || 0x0,
        bPk = bPe['armScale'] * (bPg ? 0.7 : 0x1),
        bPl = Math['min'](bPe['uArmLength'] + bPe['lArmLength'] - 0.01, bP8['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](bP3, bP5, 0x0, (bP6['xOff'] - bPj) * (bP7 && bP6['akimbo'] ? -0x1 : 0x1), bP6['yOff'] + bPh, bP6['zOff'] - bPi)),
        bPm = bP8['getAnglesSSS'](bPl, bPe['uArmLength'], bPe['lArmLength']),
        bPn = Math['PI'] / 0x2;
      if (!bPg) {
        var bPo = this['genColorCube'](bPk, bPe['uArmLength'], bPk, [
          [bP9, 0x1]
        ], 0x0, {
          'us': bPg
        });
        this['moveMesh'](bPo, 0x0, -bPe['uArmLength'] / 0x2 * Math['cos'](bPn), -bPe['uArmLength'] / 0x2 * Math['sin'](bPn)), this['rotateMesh'](bPo, 0x0, bPn, 0x0);
        var bPp = bPk / 0x2,
          bPq = Math['sqrt'](bPp * bPp + bPp * bPp - 0x2 * bPp * bPp * Math['cos'](Math['PI'] + bPm[0x0] + Math['PI'] / 0x2)),
          bPr = 0x2 * Math['sqrt'](bPp * bPp - bPq / 0x2 * (bPq / 0x2)),
          bPs = this['genColorCube'](bPk, bPq, bPr, [
            [bP9, 0x1]
          ], 0x0, {
            'us': bPg
          });
        this['moveMesh'](bPs, 0x0, -bPe['uArmLength'] * Math['cos'](bPn), -bPe['uArmLength'] * Math['sin'](bPn)), this['rotateMesh'](bPs, 0x0, (bPn + bPm[0x0]) / 0x2, 0x0);
      }
      var bPt = this['genColorCube'](bPk, bPe['lArmLength'], bPk, [
          [bP9, 0.65, 0x1, 0.6],
          [bPa, 0.15, 1.1],
          [bPf, 0.2, 0x1, 0.5, !0x0]
        ], 0x0, {
          'us': bPg
        }),
        bPx = bPe['lArmLength'] / 0x2;
      this['moveMesh'](bPt, 0x0, -bPe['uArmLength'] * Math['cos'](bPn) - bPx * Math['cos'](bPm[0x0]), -bPe['uArmLength'] * Math['sin'](bPn) - bPx * Math['sin'](bPm[0x0])), this['rotateMesh'](bPt, 0x0, bPm[0x0], 0x0);
      var bPM = new bP4['Geometry']();
      if (bPg) {
        var bPN = this['genColorCube'](bPk, 0x14, bPk, [
          [bP9, 0x1]
        ], 0x0, {
          'us': bPg
        });
        this['moveMesh'](bPN, 0x0, -bPe['uArmLength'] * Math['cos'](bPn) - -0xa * Math['cos'](bPm[0x0]), -bPe['uArmLength'] * Math['sin'](bPn) - -0xa * Math['sin'](bPm[0x0])), this['rotateMesh'](bPN, 0x0, bPm[0x0], 0x0), this['merge'](bPM, bPN);
      } else this['merge'](bPM, bPo), this['merge'](bPM, bPs);
      return this['merge'](bPM, bPt), bPM = new bP4['Mesh'](bPM), this['moveMesh'](bPM, bP3 - bP6['xOff'], bP5 - bP6['yOff'], -bP6['zOff']), bPM['rotation']['order'] = 'YXZ', bPM['rotation']['x'] = -bPm[0x1] - bP8['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](0x0, bP5, bP6['zOff'] - bPi, bP6['yOff'] + bPh), bPM['rotation']['y'] = bP8['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](-bP3, 0x0, (bP7 && bP6['akimbo'] ? 0x1 : -0x1) * (bP6['xOff'] - bPj), bP6['zOff'] - bPi) - Math['PI'] / 0x2, bPM;
    }, this['addCube'] = function(bP3, bP5, bP6, bP7, bP8, bP9, bPa, bPe) {
      bPe = bPe || {};
      var bPf = new bP4['Mesh'](bPg['generateCube'](bPa, bP7, bP8, bP9, bPe));
      return this['moveMesh'](bPf, bP3, bP5, bP6), bPf['rotation']['set'](bPe['yR'] || 0x0, bPe['xR'] || 0x0, bPe['zR'] || 0x0), bPf['scale']['set'](bP7, bP8, bP9), bPe['src'] && !bPe['noGroup'] ? this['meshGroup'](bPf, bPe) : this['add'](bPf, bPe), bPf;
    }, this['addCone'] = function(bP3, bP5, bP6, bP7, bP8, bP9, bPa) {
      bPa = bPa || {};
      var bPe = new bP4['Mesh'](bPg['generateCone'](bP7, bP8, bP9, bPa));
      return this['moveMesh'](bPe, bP3, bP5, bP6), bPe['rotation']['set'](bPa['yR'] || 0x0, bPa['xR'] || 0x0, bPa['zR'] || 0x0), bPa['src'] && !bPa['noGroup'] ? this['meshGroup'](bPe, bPa) : this['add'](bPe, bPa), bPe;
    };
    var bRK = [];
    this['addSpray'] = function(bP3, bP5, bP6, bP7, bP9, bPa, bPf, bPg) {
      bPq = null;
      for (var bPh = 0x0; bPh < bRK['length']; ++bPh)
        if (bRK[bPh]['sid'] == bP3) {
          bPq = bRK[bPh];
          break;
        } bPq || ((bPq = new bP4['Mesh'](bPj))['sid'] = bP3, bPq['scale']['set'](bPe['sprayScale'], bPe['sprayScale'], 0x1), bPq['receiveShadow'] = !0x0, bRK['push'](bPq), this['add'](bPq)), this['moveMesh'](bPq, bP6, bP7, bP9), bPq['rotation']['y'] = bP8['toRad'](bPa), bPq['rotation']['x'] = bP8['toRad'](bPf), bPq['material'] = this['getMat']('sprays/' + bP5, {
        'depthWrite': !0x1,
        'opacity': bPg,
        'transparent': !0x0
      });
    }, this['clearSprays'] = function() {
      for (var bP3 = 0x0; bP3 < bRK['length']; ++bP3) bRK[bP3] && bRK[bP3]['material']['map'] && bRK[bP3]['material']['map']['dispose'](), this['scene']['remove'](bRK[bP3]);
      bRK['length'] = 0x0;
    }, this['addPlane'] = function(bP3, bP5, bP6, bP7, bP8, bP9, bPa, bPe, bPf) {
      (bP9 = bP9 || {})['premultipliedAlpha'] = !0x0;
      var bPh = new bP4['Mesh'](bPg['generatePlane'](bP8, bP7, bP9, bP3, bP5, bP6));
      return bP9['euler'] && (bPh['rotation']['order'] = bP9['euler']), this['moveMesh'](bPh, bP3, bP5, bP6), bPh['rotateY'](bPa || 0x0), bPh['rotateX']((bPe || 0x0) - Math['PI'] / 0x2), bPh['rotateZ'](bPf || 0x0), bPh['scale']['set'](0x2 * bP7, 0x2 * bP8, 0x1), bP9['dontAdd'] ? bP9['src'] && (bPh['material'] = this['getMat'](bP9['src'], bP9)) : bP9['src'] && !bP9['noGroup'] ? this['meshGroup'](bPh, bP9, 0x1) : this['add'](bPh, bP9), bPh;
    }, this['addRamp'] = function(bP3, bP5, bP6, bP7, bP8, bP9, bPa, bPe, bPf) {
      bPe = bPe || {};
      var bPh = new bP4['Mesh'](bPg['generatePlane'](0x2 * bP9, bP7, bPe));
      this['moveMesh'](bPh, bP3, bP5 + bP8 / 0x2, bP6), bP9 *= 0x2;
      var bPi = Math['sqrt'](bP8 * bP8 + bP9 * bP9);
      return bPh['scale']['set'](bP7, bPi, 0x2), bPh['rotateY'](-Math['PI'] / 0x2 - bPa), bPh['rotateX'](Math['asin'](bP8 / bPi) - Math['PI'] / 0x2), bPh['rotateZ'](bPf || 0x0), bPe['src'] ? this['meshGroup'](bPh, bPe, 0x1) : this['add'](bPh, bPe), bPh;
    }, this['addGrass'] = function(bP3, bP5, bP6, bP7, bP8, bP9, bPa) {
      bPa = bPa || {};
      let bPe = new bP4['Geometry'](),
        bPf = 0x2 * Math['PI'] * Math['random'](),
        bPh = new bP4['Mesh'](bPg['generatePlane'](bP7, bP8, bPa));
      bPh['rotateY'](bPf * (Math['PI'] / 0x2)), this['merge'](bPe, bPh);
      let bPi = new bP4['Mesh'](bPg['generatePlane'](bP7, bP8, bPa));
      bPi['rotateY']((bPf + 0x1) * (Math['PI'] / 0x2)), this['merge'](bPe, bPi);
      let bPj = new bP4['Mesh'](bPe);
      return this['moveMesh'](bPj, bP3, bP5 + bP8 / 0x2, bP6), bPj['rotation']['set'](bPa['yR'] || 0x0, bPa['xR'] || 0x0, bPa['zR'] || 0x0), bPj['scale']['set'](bP7, bP8, bP9), bPa['src'] && !bPa['noGroup'] ? this['meshGroup'](bPj, bPa) : this['add'](bPj, bPa), bPj;
    };
    var bSs = [],
      bSt = [];
    this['loadMesh'] = function(bP3, bP5, bP6, bP7, bP9, bPa, bPe, bPf) {
      var bPg = this['getMat'](bP3['src'], bP3),
        bPh = bSs[bP3['src']];
      if (bPh) {
        if (bP3['centerZ']) {
          bPh['computeBoundingBox']();
          var bPj = bPh['boundingBox']['getCenter']();
          bPe['translateZ'](bPj['x'] * bPa);
        }
      } else bPh = bPf ? new bP4['Geometry']() : new bP4['BufferGeometry'](), bSs[bP3['src']] = bPh, bPi['load'](bP8['assetsUrl']('/models/' + bP3['src'] + '.obj'), function(bP5) {
        if (bPh['copy'](bPf ? new bP4['Geometry']()['fromBufferGeometry'](bP5['children'][0x0]['geometry']) : bP5['children'][0x0]['geometry']), bP3['uv2'] && bPh['addAttribute']('uv2', new bP4['BufferAttribute'](bPh['attributes']['uv']['array'], 0x2)), bPf) {
          for (var bP6 = new bP4['Geometry'](), bP7 = 0x0; bP7 < bSt[bP3['src']]['length']; ++bP7) bPr['merge'](bP6, bSt[bP3['src']][bP7]);
          bPr['add'](new bP4['Mesh'](new bP4['BufferGeometry']()['fromGeometry'](bP6), bPg), bP3), bSt[bP3['src']]['length'] = 0x0, bSt[bP3['src']]['loaded'] = !0x0;
        }
        if (bP3['centerZ']) {
          bPh['computeBoundingBox']();
          var bP8 = bPh['boundingBox']['getCenter']();
          bPe['translateZ'](bP8['x'] * bPa);
        }
      });
      var bPk = new bP4['Mesh'](bPh, bPg);
      return bPk['receiveShadow'] = !bP3['noShadow'], bPk['noGreen'] = bP3['noGreen'], bPk['castShadow'] = bP3['shadows'], 'object' == typeof bP9 ? (bPk['rotation']['x'] = bPk['xR'] = bP9[0x0] || 0x0, bPk['rotation']['y'] = bPk['yR'] = bP9[0x1] || 0x0, bPk['rotation']['z'] = bPk['zR'] = bP9[0x2] || 0x0) : bPk['rotation']['y'] = bP9 || 0x0, bPk['xP'] = bP5, bPk['yP'] = bP6, bPk['zP'] = bP7, bPr['moveMesh'](bPk, bP5, bP6, bP7), bPr['scaleMesh'](bPk, bPa || 0x1, bPa || 0x1, bPa || 0x1), bPf ? bSt[bP3['src']] ? bSt[bP3['src']]['loaded'] ? this['meshGroup'](bPk, bP3) : bSt[bP3['src']]['push'](bPk) : bSt[bP3['src']] = [bPk] : bPe['add'](bPk), bPk;
    }, this['clearPendingMeshes'] = function() {
      for (var bP3 in bSt) bSt['hasOwnProperty'](bP3) && bSt[bP3] && (bSt[bP3]['length'] = 0x0);
    }, this['updateMesh'] = function(bP3, bP5) {
      var bP6 = bPi['parse'](bP5),
        bP7 = new bP4['BufferGeometry']();
      bSs[bP3] = bP7, bP7['copy'](bP6['children'][0x0]['geometry']), bP7['needsUpdate'] = !0x0;
    }, this['genObj3D'] = function(bP3, bP5, bP6) {
      var bP7 = new bP4['Object3D']();
      return this['moveMesh'](bP7, bP3 || 0x0, bP5 || 0x0, bP6 || 0x0), bP7;
    }, this['merge'] = function(bP3, bP4, bP5) {
      bP4['updateMatrix'](), bP3['merge'](bP4['geometry'], bP4['matrix'], bP5);
    }, this['meshGroup'] = function(bP3, bP5) {
      var bP6 = bP5['src'] + '-' + (bP5['shadowsR'] || 'a') + (bP5['emissive'] || 'e') + (bP5['opacity'] || 'o') + (null == bP5['movT'] ? 'mt' : bP5['movT']) + (null == bP5['movD'] ? 'md' : bP5['movD']);
      bPs[bP6] || (bPs[bP6] = new bP4['Geometry'](), bPs[bP6]['data'] = bP5), bP3['updateMatrix'](), bPs[bP6]['merge'](bP3['geometry'], bP3['matrix']);
    }, this['addMeshGroups'] = function() {
      for (var bP3 in bPs)
        if (bPs['hasOwnProperty'](bP3)) {
          var bP5 = new bP4['Mesh'](new bP4['BufferGeometry']()['fromGeometry'](bPs[bP3]));
          bP5['groupSrc'] = bPs[bP3]['data']['src'], bP5['visible'] = !bT1[bP5['groupSrc']], bP5['matrixAutoUpdate'] = !0x1, this['add'](bP5, bPs[bP3]['data']);
        } bPs = {};
    };
    var bT1 = {};
    this['toggleMeshGroup'] = function(bP3, bP5) {
      bT1[bP3] = !bP5, this['scene'] && this['scene']['traverse'](function(bP6) {
        bP6 instanceof bP4['Mesh'] && bP6['groupSrc'] == bP3 && (bP6['visible'] = bP5);
      });
    }, this['add'] = function(bP3, bP4) {
      bP4 && (bP3['castShadow'] = bP4['shadows'], bP3['receiveShadow'] = bP4['shadows'] || bP4['shadowsR'], bP3['material'] = this['getMat'](bP4['src'], bP4)), this['updateGreenScreen'](bP3), this['scene']['add'](bP3), this['updateShadowMap']();
    }, this['remove'] = function(bP3) {
      this['scene']['remove'](bP3);
    }, this['moveMesh'] = function(bP3, bP4, bP5, bP6) {
      bP3 && (null != bP4 && (bP3['position']['x'] = bP4), null != bP5 && (bP3['position']['y'] = bP5), null != bP6 && (bP3['position']['z'] = bP6));
    }, this['scaleMesh'] = function(bP3, bP4, bP5, bP6) {
      bP3['scale']['set'](bP4, bP5, bP6);
    }, this['rotateMesh'] = function(bP3, bP4, bP5, bP6) {
      bP3 && ((bP4 || 0x0 == bP4) && (bP3['rotation']['y'] = bP4), (bP5 || 0x0 == bP5) && (bP3['rotation']['x'] = bP5), (bP6 || 0x0 == bP6) && (bP3['rotation']['z'] = bP6));
    }, this['reset'] = function() {
      bSs = [], bSt = [], bPs = {}, bPo = {}, bPp = {}, this['movTextures'] = [], this['pulsMats'] = [], this['frameMats'] = [], this['pulsVal'] = 0x0;
    };
  }, bP3['exports']['initScene'] = function(bP3, bP4) {
    if (bP6 = bP3, bP7 = bP4, (bP4 && null != bP4['ambCol'] || bP3['ambient']) && (this['ambientLight'] = new bP9['AmbientLight'](bP4 && null != bP4['ambCol'] ? bP4['ambCol'] : bP3['ambient']), this['ambientLight']['layers']['enable'](0x1), this['ambientLight']['layers']['enable'](0x2), this['ambientLight']['name'] = 'ambLight', !this['scene']['getObjectByName']('ambLight') && this['scene']['add'](this['ambientLight'])), bP4 && null != bP4['lightCol'] || bP3['light']) {
      this['skyLight'] = new bP9['DirectionalLight'](bP4 && null != bP4['lightCol'] ? bP4['lightCol'] : bP3['light'], 1.3), this['skyLight']['name'] = 'skyLight', this['skyLight']['layers']['enable'](0x1), this['skyLight']['layers']['enable'](0x2), this['scene']['getObjectByName']('skyLight') || this['scene']['add'](this['skyLight']);
      var bP5 = -0.3 * Math['PI'],
        bPa = 0x2 * Math['PI'] * -0.25;
      this['skyLight']['position']['x'] = bP8['lightDistance'] * Math['cos'](bPa), this['skyLight']['position']['y'] = bP8['lightDistance'] * Math['sin'](bPa) * Math['sin'](bP5), this['skyLight']['position']['z'] = bP8['lightDistance'] * Math['sin'](bPa) * Math['cos'](bP5), this['skyLight']['castShadow'] = !0x0, this['skyLight']['shadow']['mapSize']['width'] = bP3['shadowR'] || bP8['shadowRes'], this['skyLight']['shadow']['mapSize']['height'] = bP3['shadowR'] || bP8['shadowRes'], this['skyLight']['shadow']['camera']['far'] = bP8['shadowDst'];
    }
    this['scene']['fog'] = new bP9['Fog'](bP4 && null != bP4['fogC'] ? bP4['fogC'] : bP3['fog'], 0x1, bP4 && null != bP4['fogD'] ? bP4['fogD'] : bP3['fogD']), this['renderer']['setClearColor'](bP4 && null != bP4['skyCol'] ? bP4['skyCol'] : bP3['sky']), this['useDepthMap'] && '0' != this['useDepthMap'] && this['toggleDepthMap'](this['useDepthMap']), this['greenScreen'] && this['toggleGreenscreen'](this['greenScreen']);
  };
}, function(bTo, bTp, bTq) {
  const bTr = bTq(0x15),
    bTs = bTq(0x4),
    bTt = new bTs['MeshBasicMaterial']({
      'color': 0xffffff,
      'flatShading': !0x1,
      'vertexColors': bTs['VertexColors'],
      'side': bTs['BackSide']
    }),
    bTu = 0x20,
    bTv = !0x0,
    bTw = 'y',
    bTx = [{
      'stp': 0x0,
      'col': null
    }, {
      'stp': 0.5,
      'col': null
    }, {
      'stp': 0x1,
      'col': null
    }];
  class bTy extends bTs['Object3D'] {
    static['fromConfig'](bTo) {
      return new bTy(bTo['skyDomeCol0'], bTo['skyDomeCol1'], bTo['skyDomeCol2']);
    }
    constructor(bTo, bTp, bTq) {
      super(), bTx[0x0]['col'] = new bTs['Color'](bTo || bTr['skyDome'][0x0]), bTx[0x1]['col'] = new bTs['Color'](bTp || bTr['skyDome'][0x1]), bTx[0x2]['col'] = new bTs['Color'](bTq || bTr['skyDome'][0x2]);
      let bTy = new bTs['SphereGeometry'](0x32, bTu, bTu);
      bTy['computeBoundingBox']();
      let bTE = bTy['boundingBox'],
        bTF = new bTs['Vector3']()['subVectors'](bTE['max'], bTE['min']),
        bTG = ['a', 'b', 'c'],
        bTH = new bTs['Vector3'](),
        bTI = 0x0;
      for (let bTo, bTp = 0x0; bTp < bTx['length'] - 0x1; bTp++) {
        bTo = bTx[bTp + 0x1]['stp'] - bTx[bTp]['stp'];
        for (let bTq, bTr = 0x0; bTr < bTy['faces']['length']; bTr++) {
          bTq = bTy['faces'][bTr];
          for (var bTN = 0x0; 0x3 > bTN; bTN++) bTI = bTH['subVectors'](bTy['vertices'][bTq[bTG[bTN]]], bTE['min'])['divide'](bTF)[bTw], bTv && (bTI = 0x1 - bTI), bTI >= bTx[bTp]['stp'] && bTI <= bTx[bTp + 0x1]['stp'] && (bTq['vertexColors'][bTN] = bTx[bTp]['col']['clone']()['lerp'](bTx[bTp + 0x1]['col'], (bTI - bTx[bTp]['stp']) / bTo));
        }
      }
      bTy['computeVertexNormals'](!0x0), bTy['computeFaceNormals'](), this['baseMesh'] = new bTs['Mesh'](bTy, bTt), this['baseMesh']['doubleSided'] = !0x1, this['add'](this['baseMesh']);
    }
  }
  bTo['exports'] = bTy;
}, function(bTO, bTP, bTQ) {
  const bTR = bTQ(0x4),
    bTS = (bTQ(0x8), bTQ(0x42)),
    bTT = bTQ(0x43)['easing'];
  let bTU, bTV = 'undefined' != typeof location;
  bTV && (bTU = new bTR['StrippedLambertMaterial']({
    'color': 0x8c8c8c,
    'flatShading': !0x1,
    'vertexColors': bTR['VertexColors']
  }));
  const bTW = {
      'GRASS': 0x0,
      'MOUNTAIN': 0x1
    },
    bTX = Object['keys'](bTW)['length'],
    bTY = {
      [bTW['GRASS']]: [0x38, 0xe2, 0x66],
      [bTW['MOUNTAIN']]: [0xa0, 0xa0, 0xa0]
    },
    bTZ = {
      'DIRT': [0x8c, 0x68, 0x35],
      'GRASS': [0x9b, 0xba, 0x2e],
      'MOUNTAIN': [0xa0, 0xa0, 0xa0]
    },
    bU0 = bTO => bTO['replace'](/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (bTO, bTP, bTQ, bTR) => '#' + bTP + bTP + bTQ + bTQ + bTR + bTR)['substring'](0x1)['match'](/.{2}/g)['map'](bTO => parseInt(bTO, 0x10)),
    bU1 = 0x3c,
    bU2 = 0x3;
  class bU9 extends bTR['Object3D'] {
    static['fromConfig'](bTO) {
      return new bU9(bTO['terrainSeed'], bTO['terrainWidth'], bTO['terrainHeight'], bTO['sizeMlt'], bTO['terrainMntMlt'], bTO['terrainDrtCol'], bTO['terrainGrsCol'], bTO['terrainMntCol']);
    }
    constructor(bTO, bTP, bTQ, bTT, bTW, bTY, bU9, bUi) {
      super(), bTT = bU2, this['sizeMlt'] = bTT, this['sizeX'] = bTP, this['sizeY'] = bTQ, this['edgeSize'] = 0x1f4, this['mntMlt'] = bTW, bTZ['DIRT'] = bU0(bTY), bTZ['MOUNTAIN'] = bU0(bUi), bTZ['GRASS'] = bU0(bU9), this['simplex'] = new bTS(bTO);
      let bUj = Math['floor'](bTP / bU1),
        bUk = Math['floor'](bTQ / bU1);
      this['xSegmentCount'] = bUj, this['ySegmentCount'] = bUk;
      let bUl = bTP / bUj,
        bUm = bTQ / bUk;
      this['xSegmentSize'] = bUl, this['ySegmentSize'] = bUm;
      let bUn = new bTR['BufferGeometry'](),
        bUo = bUj * bUk * 0x6,
        bUp = new bTR['BufferAttribute'](new Float32Array(0x3 * bUo), 0x3);
      bUn['addAttribute']('position', bUp);
      let bUq = new bTR['BufferAttribute'](new Uint8Array(0x3 * bUo), 0x3, !0x0);
      bUn['addAttribute']('color', bUq), this['vertPositions'] = bUp, this['terrainPoints'] = (bUj + 0x1) * (bUk + 0x1), this['terrainHeights'] = new Float32Array(this['terrainPoints']), this['terrainBiomes'] = new Float32Array(this['terrainPoints'] * bTX);
      for (let bTO = 0x0; bTO < bUj + 0x1; bTO++)
        for (let bTR = 0x0; bTR < bUk + 0x1; bTR++) {
          let bTS = bTO + bTR * (bUj + 0x1),
            bTT = this['_vertPos'](bTO, bUl, bTP),
            bTU = this['_vertPos'](bTR, bUm, bTQ),
            [bTV, bTW] = this['evaluate'](bTT, bTU);
          this['terrainHeights'][bTS] = bTV, this['terrainBiomes']['set'](bTW, bTS * bTX);
        }
      for (let bTO = 0x0; bTO < bUj; bTO++)
        for (let bTR = 0x0; bTR < bUk; bTR++) {
          let bTS = 0x6 * (bTO + bTR * bUj),
            bTT = this['_vertPos'](bTO, bUl, bTP),
            bTU = this['_vertPos'](bTR, bUm, bTQ),
            bTV = [bTT, bTU, this['terrainHeight'](bTO, bTR)],
            bTW = [bTT + bUl, bTU, this['terrainHeight'](bTO + 0x1, bTR)],
            bTX = [bTT + bUl, bTU + bUm, this['terrainHeight'](bTO + 0x1, bTR + 0x1)],
            bTY = [bTT, bTU + bUm, this['terrainHeight'](bTO, bTR + 0x1)],
            bTZ = this['calcAOWeight'](bTO, bTR),
            bU0 = this['calcAOWeight'](bTO + 0x1, bTR),
            bU1 = this['calcAOWeight'](bTO + 0x1, bTR + 0x1),
            bU2 = this['calcAOWeight'](bTO, bTR + 0x1);
          bUp['setXYZ'](bTS, ...bTV), bUp['setXYZ'](bTS + 0x1, ...bTW), bUp['setXYZ'](bTS + 0x2, ...bTX), bUp['setXYZ'](bTS + 0x3, ...bTX), bUp['setXYZ'](bTS + 0x4, ...bTY), bUp['setXYZ'](bTS + 0x5, ...bTV);
          let bU9 = this['_centroid3D'](bTV, bTW, bTX),
            bUi = this['_centroid3D'](bTX, bTY, bTV),
            bUk = this['_normal3D'](bTV, bTW, bTX),
            bUn = this['_normal3D'](bTX, bTY, bTV),
            bUo = this['terrainBiomeAt'](bU9),
            bUQ = this['terrainBiomeAt'](bUi),
            bUR = this['evaluateColor'](bU9, bUk, bUo),
            bUS = this['evaluateColor'](bUi, bUn, bUQ);
          bUq['setXYZ'](bTS, ...this['_weightColor'](bUR, bTZ)), bUq['setXYZ'](bTS + 0x1, ...this['_weightColor'](bUR, bU0)), bUq['setXYZ'](bTS + 0x2, ...this['_weightColor'](bUR, bU1)), bUq['setXYZ'](bTS + 0x3, ...this['_weightColor'](bUS, bU1)), bUq['setXYZ'](bTS + 0x4, ...this['_weightColor'](bUS, bU2)), bUq['setXYZ'](bTS + 0x5, ...this['_weightColor'](bUS, bTZ));
        }
      bTV && (bUn['computeVertexNormals'](!0x0), bUn['computeFaceNormals'](), this['baseMesh'] = new bTR['Mesh'](bUn, bTU), this['baseMesh']['receiveShadow'] = !0x0, this['baseMesh']['scale']['set'](bTT, bTT, 0x1), this['add'](this['baseMesh'])), this['_raycastRay'] = new bTR['Ray'](), this['_raycastTriA'] = new bTR['Vector3'](), this['_raycastTriB'] = new bTR['Vector3'](), this['_raycastTriC'] = new bTR['Vector3'](), this['_raycastTriangle'] = new bTR['Triangle'](), this['_raycastNormal'] = new bTR['Vector3'](), this['_raycastTarget'] = new bTR['Vector3'](), this['_raycastClosestTarget'] = new bTR['Vector3']();
    } ['terrainIndex'](bTO, bTP) {
      let bTQ = bTO + bTP * (this['xSegmentCount'] + 0x1);
      return 0x0 > bTQ || bTQ >= this['terrainHeights']['length'] ? 0x0 : bTQ;
    } ['terrainHeight'](bTO, bTP) {
      return this['terrainHeights'][this['terrainIndex'](bTO, bTP)];
    } ['terrainBiome'](bTO, bTP) {
      let bTQ = this['terrainIndex'](bTO, bTP) * bTX;
      return this['terrainBiomes']['slice'](bTQ, bTQ + bTX);
    } ['terrainBiomeAt'](bTO, bTP) {
      let bTQ = Math['floor'](bTO / this['xSegmentSize']),
        bTR = Math['ceil'](bTO / this['xSegmentSize']),
        bTS = Math['floor'](bTP / this['ySegmentSize']),
        bTT = Math['ceil'](bTP / this['ySegmentSize']);
      return (this['terrainBiome'](bTQ, bTS) + this['terrainBiome'](bTR, bTS) + this['terrainBiome'](bTQ, bTT) + this['terrainBiome'](bTR, bTT)) / 0x4;
    } ['calcAOWeight'](bTO, bTP) {
      let bTQ = this['_vertPos'](bTO, this['xSegmentSize'], this['sizeX']),
        bTR = this['_vertPos'](bTP, this['ySegmentSize'], this['sizeY']),
        bTS = this['_topAngleOnTerrain'](bTQ - this['xSegmentSize'], this['terrainHeight'](bTO - 0x1, bTP), bTQ, this['terrainHeight'](bTO, bTP), bTQ + this['xSegmentSize'], this['terrainHeight'](bTO + 0x1, bTP)),
        bTT = this['_topAngleOnTerrain'](bTR - this['xSegmentSize'], this['terrainHeight'](bTO, bTP - 0x1), bTR, this['terrainHeight'](bTO, bTP), bTR + this['ySegmentSize'], this['terrainHeight'](bTO, bTP + 0x1)),
        bTU = Math['PI'],
        bTV = 0x1 - (0x1 - Math['max'](bTU - bTS, 0x0) / bTU) * (0x1 - Math['max'](bTU - bTT, 0x0) / bTU);
      return 0.5 <= bTV ? bTV = 0.65 : 0.2 <= bTV ? bTV = 0.3 : 0.1 <= bTV && (bTV = 0.25), bTV;
    } ['_worldToLocal'](bTO, bTP, bTQ) {
      return (bTO + bTP / 0x2) / bTQ;
    } ['raycast'](bTO, bTP, bTQ, bTR, bTS, bTT, bTU = !0x1) {
      bTO /= this['sizeMlt'], bTP /= this['sizeMlt'], bTR /= this['sizeMlt'], bTS /= this['sizeMlt'];
      let bTV = Math['sqrt'](bTR * bTR + bTS * bTS + bTT * bTT);
      this['_raycastRay']['origin']['set'](bTO, bTP, bTQ), this['_raycastRay']['direction']['set'](bTR, bTS, bTT);
      let bTW, bTX, bTY, bTZ = this['_worldToLocal'](bTO, this['sizeX'], this['xSegmentSize']),
        bU0 = this['_worldToLocal'](bTP, this['sizeY'], this['ySegmentSize']),
        bU1 = bTZ + bTR / this['xSegmentSize'],
        bU2 = bU0 + bTS / this['ySegmentSize'],
        bU9 = Math['abs'](bU1 - bTZ),
        bVy = Math['abs'](bU2 - bU0),
        bVz = Math['floor'](bTZ),
        bVA = Math['floor'](bU0),
        bVB = 0x1;
      for (0x0 == bU9 ? (bTW = 0x0, bTY = Number['POSITIVE_INFINITY']) : bU1 > bTZ ? (bTW = 0x1, bVB += Math['floor'](bU1) - bVz, bTY = (Math['floor'](bTZ) + 0x1 - bTZ) * bVy) : (bTW = -0x1, bVB += bVz - Math['floor'](bU1), bTY = (bTZ - Math['floor'](bTZ)) * bVy), 0x0 == bVy ? (bTX = 0x0, bTY -= Number['POSITIVE_INFINITY']) : bU2 > bU0 ? (bTX = 0x1, bVB += Math['floor'](bU2) - bVA, bTY -= (Math['floor'](bU0) + 0x1 - bU0) * bU9) : (bTX = -0x1, bVB += bVA - Math['floor'](bU2), bTY -= (bU0 - Math['floor'](bU0)) * bU9); 0x0 < bVB; bVB--) {
        if (this['_raycastVisit'](bVz, bVA, bTO, bTP, bTQ, bTR, bTS, bTT, bTV, bTU)) {
          let bTO = this['_raycastClosestTarget'];
          return bTO['x'] *= this['sizeMlt'], bTO['y'] *= this['sizeMlt'], bTO;
        }
        0x0 < bTY ? (bVA += bTX, bTY -= bU9) : (bVz += bTW, bTY += bVy);
      }
    } ['_raycastVisit'](bTO, bTP, bTQ, bTR, bTS, bTT, bTU, bTV, bTW, bTX) {
      let bTY = bTO + bTP * this['xSegmentCount'],
        bTZ = Number['POSITIVE_INFINITY'],
        bU0 = !0x1;
      for (let bTO, bTP = 0x0; 0x2 > bTP; bTP++) {
        bTO = 0x6 * bTY + 0x3 * bTP, this['_raycastTriA']['set'](this['vertPositions']['getX'](bTO), this['vertPositions']['getY'](bTO), this['vertPositions']['getZ'](bTO)), this['_raycastTriB']['set'](this['vertPositions']['getX'](bTO + 0x1), this['vertPositions']['getY'](bTO + 0x1), this['vertPositions']['getZ'](bTO + 0x1)), this['_raycastTriC']['set'](this['vertPositions']['getX'](bTO + 0x2), this['vertPositions']['getY'](bTO + 0x2), this['vertPositions']['getZ'](bTO + 0x2));
        let bTQ = this['_raycastRay']['intersectTriangle'](this['_raycastTriA'], this['_raycastTriB'], this['_raycastTriC'], !0x0, this['_raycastTarget']);
        if (bTQ) {
          let bTO = bTQ['distanceTo'](this['_raycastRay']['origin']);
          bTO < bTZ && bTO < bTW && (bTZ = bTO, bU0 = !0x0, this['_raycastClosestTarget']['copy'](bTQ), this['_raycastTriangle']['set'](this['_raycastTriA'], this['_raycastTriB'], this['_raycastTriC']));
        }
      }
      return bTX && bU0 && this['_raycastTriangle']['getNormal'](this['_raycastNormal']), bU0;
    } ['evaluate'](bTO, bTP) {
      let bTQ = 0x0;
      this['sampleIndex'] = 0x0;
      let bTR = [];
      for (let bTQ = 0x0; bTQ < bTX; bTQ++) bTR['push'](this['_sample'](bTO, bTP, 0x514));
      let bTS = bTR['reduce']((bTO, bTP) => bTO + bTP, 0x0);
      bTR = (bTR = bTR['map']((bTO, bTP) => [bTP, bTO / bTS]))['sort']((bTO, bTP) => bTP[0x1] - bTO[0x1]);
      let bTT = {},
        [bTU, bTV] = bTR[0x0];
      bTT[bTU] = this['_easeTerrain'](bTV / (bTV + bTR[0x1][0x1]));
      for (let bTO = 0x1; bTO < bTR['length']; bTO++) {
        let [bTP, bTQ] = bTR[bTO];
        bTT[bTP] = this['_easeTerrain'](bTQ / (bTV + bTQ));
      }
      let bTY = this['_sample'](bTO, bTP, 0x12c);
      bTQ += 0x19 * (bTY = Math['floor'](0x3 * bTY) / 0x3) * bTT[bTW['GRASS']] * this['sizeMlt'];
      let bTZ = 0.4 + 0.3 * this['_sample'](bTO, bTP, 0xc8);
      bTQ += (0x1 - 0x2 * Math['abs'](bTZ - this['_sample'](bTO, bTP, 0x1f4))) * (0.4 + 1.4 * this['_sample'](bTO, bTP, 0x190)) * (0xdc * this['mntMlt']) * bTT[bTW['MOUNTAIN']] * this['sizeMlt'];
      let bU0 = this['_calcEdgeFade'](bTO, this['sizeX']) * this['_calcEdgeFade'](bTP, this['sizeY']);
      return bTQ *= bU0, bTQ += 0x7d0 * (bU0 - 0x1), (Math['abs'](bTO) >= this['sizeX'] / 0x2 || Math['abs'](bTP) >= this['sizeY'] / 0x2) && (bTQ = -0x3e8), [bTQ, bTT];
    } ['evaluateColor'](bTO, bTP, bTQ) {
      let bTR, bTS = bTO[0x2],
        bTT = Math['atan2'](Math['abs'](bTP[0x0]), Math['abs'](bTP[0x2])),
        bTU = Math['atan2'](Math['abs'](bTP[0x1]), Math['abs'](bTP[0x2]));
      return bTR = 0.85 >= (0x1 - bTT / (0x2 * Math['PI'])) * (0x1 - bTU / (0x2 * Math['PI'])) ? bTZ['MOUNTAIN'] : 0x64 < bTS ? bTZ['MOUNTAIN'] : 0x5 < bTS ? bTZ['GRASS'] : bTZ['DIRT'];
    } ['_sample'](bTO, bTP, bTQ) {
      return this['sampleIndex']++, this['simplex']['noise3D'](bTO / bTQ, bTP / bTQ, 0x2710 * this['sampleIndex']) / 0x2 + 0.5;
    } ['_easeTerrain'](bTO) {
      return bTT['easeInOutQuint'](bTT['easeInOutQuint'](bTO));
    } ['_calcEdgeFade'](bTO, bTP) {
      if (Math['abs'](bTO) >= bTP / 0x2) return 0x0;
      let bTQ = (Math['abs'](bTO) - bTP / 0x2 + this['edgeSize']) / this['edgeSize'];
      return bTQ = 0x1 - Math['max'](bTQ, 0x0), bTT['easeOutQuint'](bTQ);
    } ['_blendColors'](bTO) {
      let bTP = Object['values'](bTO)['reduce']((bTO, bTP) => bTO + bTP, 0x0),
        bTQ = [0x0, 0x0, 0x0];
      for (let bTR in bTO) {
        let bTS = bTY[bTR],
          bTT = bTO[bTR] / bTP;
        for (let bTO = 0x0; 0x3 > bTO; bTO++) bTQ[bTO] += bTS[bTO] * bTT;
      }
      return bTQ;
    } ['_vertPos'](bTO, bTP, bTQ) {
      return bTO * bTP - bTQ / 0x2;
    } ['_avgPos'](bTO, bTP) {
      return [(bTO[0x0] + bTP[0x0]) / 0x2, (bTO[0x1] + bTP[0x1]) / 0x2, (bTO[0x2] + bTP[0x2]) / 0x2];
    } ['_centroid3D'](bTO, bTP, bTQ) {
      return [(bTO[0x0] + bTP[0x0] + bTQ[0x0]) / 0x3, (bTO[0x1] + bTP[0x1] + bTQ[0x1]) / 0x3, (bTO[0x2] + bTP[0x2] + bTQ[0x2]) / 0x3];
    } ['_normal3D'](bTO, bTP, bTQ) {
      let bTR = bTQ[0x0] - bTP[0x0],
        bTS = bTQ[0x1] - bTP[0x1],
        bTT = bTQ[0x2] - bTP[0x2],
        bTU = bTO[0x0] - bTP[0x0],
        bTV = bTO[0x1] - bTP[0x1],
        bTW = bTO[0x2] - bTP[0x2],
        bTX = bTS * bTW - bTT * bTV,
        bTY = bTT * bTU - bTR * bTW,
        bTZ = bTR * bTV - bTS * bTU,
        bU0 = Math['sqrt'](bTX * bTX + bTY * bTY + bTZ + bTZ);
      return [bTX / bU0, bTY / bU0, bTZ / bU0];
    } ['_topAngleOnTerrain'](bTO, bTP, bTQ, bTR, bTS, bTT) {
      let bTU = Math['atan2'](bTP - bTR, bTO - bTQ),
        bTV = Math['atan2'](bTT - bTR, bTS - bTQ);
      return 0x0 > bTU && (bTU += 0x2 * Math['PI']), bTU - bTV;
    } ['_weightColor'](bTO, bTP) {
      return bTO['map'](bTO => bTO * (0x1 - bTP));
    }
  }
  bTO['exports'] = bU9;
}, function(bX8, bX9, bXa) {
  const bXb = bXa(0x15),
    bXc = bXa(0x4),
    bXd = bXa(0x8),
    bXe = 0x20;
  var bXf, bXg;
  const bXh = !0x0,
    bXi = 'y',
    bXj = [{
      'stp': 0x0,
      'col': null
    }, {
      'stp': 0.5,
      'col': null
    }, {
      'stp': 0x1,
      'col': null
    }],
    bXk = 2.5,
    bXl = 0x3e8;
  class bXm extends bXc['Object3D'] {
    static['fromConfig'](bX8, bX9) {
      return new bXm(bX8['zoneSize'], bX8['zoneSpeed'], bX8['zoneCol0'], bX8['zoneCol1'], bX8['zoneCol2'], bX9);
    }
    constructor(bX8, bX9, bXa, bXl, bXm, bXu) {
      if (super(), this['_size'] = bX8 || 0x32, this['_shrink'] = bXk * (bX9 || 0x1), bXu) {
        bXf || (bXf = new bXc['TextureLoader']()['load'](bXd['assetsUrl']('/textures/zone_0.png'), bX8 => {
          bX8['wrapS'] = bXc['RepeatWrapping'], bX8['wrapT'] = bXc['RepeatWrapping'], bX8['minFilter'] = bXc['NearestFilter'], bX8['magFilter'] = bXc['NearestFilter'], bX8['repeat']['set'](0x14, 0x14), bX8['needsUpdate'] = !0x0;
        })), bXg || (bXg = new bXc['MeshBasicMaterial']({
          'color': 0xffffff,
          'depthWrite': !0x1,
          'flatShading': !0x1,
          'map': bXf,
          'vertexColors': bXc['VertexColors'],
          'side': bXc['DoubleSide'],
          'transparent': !0x0,
          'opacity': 0.5
        })), bXj[0x0]['col'] = new bXc['Color'](bXa || bXb['zones']['BR'][0x0]), bXj[0x1]['col'] = new bXc['Color'](bXl || bXb['zone']['BR'][0x1]), bXj[0x2]['col'] = new bXc['Color'](bXm || bXb['zone']['BR'][0x2]);
        let bX8 = new bXc['SphereGeometry'](0x1, bXe, bXe);
        bX8['computeBoundingBox']();
        let bX9 = bX8['boundingBox'],
          bXk = new bXc['Vector3']()['subVectors'](bX9['max'], bX9['min']),
          bXu = ['a', 'b', 'c'],
          bXA = new bXc['Vector3'](),
          bXB = 0x0;
        for (let bXa, bXb = 0x0; bXb < bXj['length'] - 0x1; bXb++) {
          bXa = bXj[bXb + 0x1]['stp'] - bXj[bXb]['stp'];
          for (let bXc, bXd = 0x0; bXd < bX8['faces']['length']; bXd++) {
            bXc = bX8['faces'][bXd];
            for (var bXG = 0x0; 0x3 > bXG; bXG++) bXB = bXA['subVectors'](bX8['vertices'][bXc[bXu[bXG]]], bX9['min'])['divide'](bXk)[bXi], bXh && (bXB = 0x1 - bXB), bXB >= bXj[bXb]['stp'] && bXB <= bXj[bXb + 0x1]['stp'] && (bXc['vertexColors'][bXG] = bXj[bXb]['col']['clone']()['lerp'](bXj[bXb + 0x1]['col'], (bXB - bXj[bXb]['stp']) / bXa));
          }
        }
        bX8['computeVertexNormals'](!0x0), bX8['computeFaceNormals'](), this['baseMesh'] = new bXc['Mesh'](bX8, bXg);
      }
      this['reset'](), bXu && this['add'](this['baseMesh']);
    } ['shrink']() {
      0x0 >= this['scale']['x'] ? this['visible'] = !0x1 : (this['scale']['x'] -= this['_shrink'], this['scale']['z'] -= this['_shrink']);
    } ['animate'](bX8) {
      this['baseMesh'] && this['baseMesh']['material']['map'] && (this['baseMesh']['material']['map']['offset']['y'] += 0.00003 * bX8);
    } ['update'](bX8) {
      this['scale']['set'](bX8['x'], bXl, bX8['z']), 0x0 >= this['scale']['x'] && (this['visible'] = !0x1);
    } ['reset']() {
      this['scale']['set'](this['_size'], bXl, this['_size']), this['visible'] = !0x0;
    } ['isOutside'](bX8) {
      return bXd['xBIWCnLLiqfSLgCsDrqJOyoncrZfplTa'](bX8['x'], bX8['z'], this['position']['x'], this['position']['z']) > this['scale']['x'];
    }
  }
  bX8['exports'] = bXm;
}, , function(bXK, bXL, bXM) {
  bXM(0x47);
}, function(bXN, bXO) {
  bXN['exports'] = function(bXN) {
    if (!bXN['webpackPolyfill']) {
      var bXO = Object['create'](bXN);
      bXO['children'] || (bXO['children'] = []), Object['defineProperty'](bXO, 'loaded', {
        'enumerable': !0x0,
        'get': function() {
          return bXO['l'];
        }
      }), Object['defineProperty'](bXO, 'id', {
        'enumerable': !0x0,
        'get': function() {
          return bXO['i'];
        }
      }), Object['defineProperty'](bXO, 'exports', {
        'enumerable': !0x0
      }), bXO['webpackPolyfill'] = 0x1;
    }
    return bXO;
  };
}, function(bXR, bXS) {
  bXR['exports'] = function(bXR) {
    return function() {
      function bXS() {
        var bXR = {
          'objects': [],
          'object': {},
          'vertices': [],
          'normals': [],
          'colors': [],
          'uvs': [],
          'materialLibraries': [],
          'startObject': function(bXR, bXS) {
            if (this['object'] && !0x1 === this['object']['fromDeclaration']) return this['object']['name'] = bXR, void(this['object']['fromDeclaration'] = !0x1 !== bXS);
            var bXY = this['object'] && 'function' == typeof this['object']['currentMaterial'] ? this['object']['currentMaterial']() : void 0x0;
            if (this['object'] && 'function' == typeof this['object']['_finalize'] && this['object']['_finalize'](!0x0), this['object'] = {
                'name': bXR || '',
                'fromDeclaration': !0x1 !== bXS,
                'geometry': {
                  'vertices': [],
                  'normals': [],
                  'colors': [],
                  'uvs': []
                },
                'materials': [],
                'smooth': !0x0,
                'startMaterial': function(bXR, bXS) {
                  var bXY = this['_finalize'](!0x1);
                  bXY && (bXY['inherited'] || 0x0 >= bXY['groupCount']) && this['materials']['splice'](bXY['index'], 0x1);
                  var bY2 = {
                    'index': this['materials']['length'],
                    'name': bXR || '',
                    'mtllib': Array['isArray'](bXS) && 0x0 < bXS['length'] ? bXS[bXS['length'] - 0x1] : '',
                    'smooth': void 0x0 === bXY ? this['smooth'] : bXY['smooth'],
                    'groupStart': void 0x0 === bXY ? 0x0 : bXY['groupEnd'],
                    'groupEnd': -0x1,
                    'groupCount': -0x1,
                    'inherited': !0x1,
                    'clone': function(bXR) {
                      var bXS = {
                        'index': 'number' == typeof bXR ? bXR : this['index'],
                        'name': this['name'],
                        'mtllib': this['mtllib'],
                        'smooth': this['smooth'],
                        'groupStart': 0x0,
                        'groupEnd': -0x1,
                        'groupCount': -0x1,
                        'inherited': !0x1
                      };
                      return bXS['clone'] = this['clone']['bind'](bXS), bXS;
                    }
                  };
                  return this['materials']['push'](bY2), bY2;
                },
                'currentMaterial': function() {
                  return 0x0 < this['materials']['length'] ? this['materials'][this['materials']['length'] - 0x1] : void 0x0;
                },
                '_finalize': function(bXR) {
                  var bXS = this['currentMaterial']();
                  if (bXS && -0x1 === bXS['groupEnd'] && (bXS['groupEnd'] = this['geometry']['vertices']['length'] / 0x3, bXS['groupCount'] = bXS['groupEnd'] - bXS['groupStart'], bXS['inherited'] = !0x1), bXR && 0x1 < this['materials']['length'])
                    for (var bXY = this['materials']['length'] - 0x1; 0x0 <= bXY; bXY--) 0x0 >= this['materials'][bXY]['groupCount'] && this['materials']['splice'](bXY, 0x1);
                  return bXR && 0x0 === this['materials']['length'] && this['materials']['push']({
                    'name': '',
                    'smooth': this['smooth']
                  }), bXS;
                }
              }, bXY && bXY['name'] && 'function' == typeof bXY['clone']) {
              var bY8 = bXY['clone'](0x0);
              bY8['inherited'] = !0x0, this['object']['materials']['push'](bY8);
            }
            this['objects']['push'](this['object']);
          },
          'finalize': function() {
            this['object'] && 'function' == typeof this['object']['_finalize'] && this['object']['_finalize'](!0x0);
          },
          'parseVertexIndex': function(bXR, bXS) {
            var bYb = parseInt(bXR, 0xa);
            return 0x3 * (0x0 <= bYb ? bYb - 0x1 : bYb + bXS / 0x3);
          },
          'parseNormalIndex': function(bXR, bXS) {
            var bYe = parseInt(bXR, 0xa);
            return 0x3 * (0x0 <= bYe ? bYe - 0x1 : bYe + bXS / 0x3);
          },
          'parseUVIndex': function(bXR, bXS) {
            var bYh = parseInt(bXR, 0xa);
            return 0x2 * (0x0 <= bYh ? bYh - 0x1 : bYh + bXS / 0x2);
          },
          'addVertex': function(bXR, bXS, bYk) {
            var bYl = this['vertices'],
              bYm = this['object']['geometry']['vertices'];
            bYm['push'](bYl[bXR + 0x0], bYl[bXR + 0x1], bYl[bXR + 0x2]), bYm['push'](bYl[bXS + 0x0], bYl[bXS + 0x1], bYl[bXS + 0x2]), bYm['push'](bYl[bYk + 0x0], bYl[bYk + 0x1], bYl[bYk + 0x2]);
          },
          'addVertexPoint': function(bXR) {
            var bXS = this['vertices'];
            this['object']['geometry']['vertices']['push'](bXS[bXR + 0x0], bXS[bXR + 0x1], bXS[bXR + 0x2]);
          },
          'addVertexLine': function(bXR) {
            var bXS = this['vertices'];
            this['object']['geometry']['vertices']['push'](bXS[bXR + 0x0], bXS[bXR + 0x1], bXS[bXR + 0x2]);
          },
          'addNormal': function(bXR, bXS, bYt) {
            var bYu = this['normals'],
              bYv = this['object']['geometry']['normals'];
            bYv['push'](bYu[bXR + 0x0], bYu[bXR + 0x1], bYu[bXR + 0x2]), bYv['push'](bYu[bXS + 0x0], bYu[bXS + 0x1], bYu[bXS + 0x2]), bYv['push'](bYu[bYt + 0x0], bYu[bYt + 0x1], bYu[bYt + 0x2]);
          },
          'addColor': function(bXR, bXS, bYy) {
            var bYz = this['colors'],
              bYA = this['object']['geometry']['colors'];
            bYA['push'](bYz[bXR + 0x0], bYz[bXR + 0x1], bYz[bXR + 0x2]), bYA['push'](bYz[bXS + 0x0], bYz[bXS + 0x1], bYz[bXS + 0x2]), bYA['push'](bYz[bYy + 0x0], bYz[bYy + 0x1], bYz[bYy + 0x2]);
          },
          'addUV': function(bXR, bXS, bYD) {
            var bYE = this['uvs'],
              bYF = this['object']['geometry']['uvs'];
            bYF['push'](bYE[bXR + 0x0], bYE[bXR + 0x1]), bYF['push'](bYE[bXS + 0x0], bYE[bXS + 0x1]), bYF['push'](bYE[bYD + 0x0], bYE[bYD + 0x1]);
          },
          'addUVLine': function(bXR) {
            var bXS = this['uvs'];
            this['object']['geometry']['uvs']['push'](bXS[bXR + 0x0], bXS[bXR + 0x1]);
          },
          'addFace': function(bXR, bXS, bYK, bYL, bYM, bYN, bYO, bYP, bYQ) {
            var bYR = this['vertices']['length'],
              bYS = this['parseVertexIndex'](bXR, bYR),
              bYT = this['parseVertexIndex'](bXS, bYR),
              bYU = this['parseVertexIndex'](bYK, bYR);
            if (this['addVertex'](bYS, bYT, bYU), void 0x0 !== bYL && '' !== bYL) {
              var bYV = this['uvs']['length'];
              bYS = this['parseUVIndex'](bYL, bYV), bYT = this['parseUVIndex'](bYM, bYV), bYU = this['parseUVIndex'](bYN, bYV), this['addUV'](bYS, bYT, bYU);
            }
            if (void 0x0 !== bYO && '' !== bYO) {
              var bYW = this['normals']['length'];
              bYS = this['parseNormalIndex'](bYO, bYW), bYT = bYO === bYP ? bYS : this['parseNormalIndex'](bYP, bYW), bYU = bYO === bYQ ? bYS : this['parseNormalIndex'](bYQ, bYW), this['addNormal'](bYS, bYT, bYU);
            }
            0x0 < this['colors']['length'] && this['addColor'](bYS, bYT, bYU);
          },
          'addPointGeometry': function(bXR) {
            this['object']['geometry']['type'] = 'Points';
            for (var bXS = this['vertices']['length'], bYZ = 0x0, bZ0 = bXR['length']; bYZ < bZ0; bYZ++) this['addVertexPoint'](this['parseVertexIndex'](bXR[bYZ], bXS));
          },
          'addLineGeometry': function(bXR, bXS) {
            this['object']['geometry']['type'] = 'Line';
            for (var bZ3 = this['vertices']['length'], bZ4 = this['uvs']['length'], bZ5 = 0x0, bZ6 = bXR['length']; bZ5 < bZ6; bZ5++) this['addVertexLine'](this['parseVertexIndex'](bXR[bZ5], bZ3));
            var bZ7 = 0x0;
            for (bZ6 = bXS['length']; bZ7 < bZ6; bZ7++) this['addUVLine'](this['parseUVIndex'](bXS[bZ7], bZ4));
          }
        };
        return bXR['startObject']('', !0x1), bXR;
      }

      function bZ8(bXS) {
        this['manager'] = void 0x0 === bXS ? bXR['DefaultLoadingManager'] : bXS, this['materials'] = null;
      }
      var bZa = /^[og]\s*(.+)?/,
        bZb = /^mtllib /,
        bZc = /^usemtl /;
      return bZ8['prototype'] = {
        'constructor': bZ8,
        'load': function(bXS, bZ8, bZa, bZb) {
          var bZc = this,
            bZi = new bXR['FileLoader'](bZc['manager']);
          bZi['setPath'](this['path']), bZi['load'](bXS, function(bXR) {
            bZ8(bZc['parse'](bXR));
          }, bZa, bZb);
        },
        'setPath': function(bXR) {
          return this['path'] = bXR, this;
        },
        'setMaterials': function(bXR) {
          return this['materials'] = bXR, this;
        },
        'parse': function(bZ8) {
          console['time']('OBJLoader');
          var bZn = new bXS(); - 0x1 !== bZ8['indexOf']('\x0d\x0a') && (bZ8 = bZ8['replace'](/\r\n/g, '\x0a')), -0x1 !== bZ8['indexOf']('\x5c\x0a') && (bZ8 = bZ8['replace'](/\\\n/g, ''));
          for (var bZo = bZ8['split']('\x0a'), bZp = '', bZq = '', bZr = [], bZs = 'function' == typeof '' ['trimLeft'], bZt = 0x0, bZu = bZo['length']; bZt < bZu; bZt++)
            if (bZp = bZo[bZt], 0x0 !== (bZp = bZs ? bZp['trimLeft']() : bZp['trim']())['length'] && '#' !== (bZq = bZp['charAt'](0x0)))
              if ('v' === bZq) {
                var bZv = bZp['split'](/\s+/);
                switch (bZv[0x0]) {
                  case 'v':
                    bZn['vertices']['push'](parseFloat(bZv[0x1]), parseFloat(bZv[0x2]), parseFloat(bZv[0x3])), 0x7 <= bZv['length'] && bZn['colors']['push'](parseFloat(bZv[0x4]), parseFloat(bZv[0x5]), parseFloat(bZv[0x6]));
                    break;
                  case 'vn':
                    bZn['normals']['push'](parseFloat(bZv[0x1]), parseFloat(bZv[0x2]), parseFloat(bZv[0x3]));
                    break;
                  case 'vt':
                    bZn['uvs']['push'](parseFloat(bZv[0x1]), parseFloat(bZv[0x2]));
                }
              } else if ('f' === bZq) {
            for (var bZw, bZx = bZp['substr'](0x1)['trim']()['split'](/\s+/), bZy = [], bZz = 0x0, bZA = bZx['length']; bZz < bZA; bZz++)
              if (0x0 < (bZw = bZx[bZz])['length']) {
                var bZB = bZw['split']('/');
                bZy['push'](bZB);
              } var bZC = bZy[0x0];
            for (bZz = 0x1, bZA = bZy['length'] - 0x1; bZz < bZA; bZz++) {
              var bZD = bZy[bZz],
                bZE = bZy[bZz + 0x1];
              bZn['addFace'](bZC[0x0], bZD[0x0], bZE[0x0], bZC[0x1], bZD[0x1], bZE[0x1], bZC[0x2], bZD[0x2], bZE[0x2]);
            }
          } else if ('l' === bZq) {
            var bZF = bZp['substring'](0x1)['trim']()['split']('\x20'),
              bZG = [],
              bZH = [];
            if (-0x1 === bZp['indexOf']('/')) bZG = bZF;
            else
              for (var bZI, bZJ = 0x0, bZK = bZF['length']; bZJ < bZK; bZJ++) '' !== (bZI = bZF[bZJ]['split']('/'))[0x0] && bZG['push'](bZI[0x0]), '' !== bZI[0x1] && bZH['push'](bZI[0x1]);
            bZn['addLineGeometry'](bZG, bZH);
          } else if ('p' === bZq) {
            var bZL = bZp['substr'](0x1)['trim']()['split']('\x20');
            bZn['addPointGeometry'](bZL);
          } else if (null !== (bZr = bZa['exec'](bZp))) {
            var bZM = ('\x20' + bZr[0x0]['substr'](0x1)['trim']())['substr'](0x1);
            bZn['startObject'](bZM);
          } else if (bZc['test'](bZp)) bZn['object']['startMaterial'](bZp['substring'](0x7)['trim'](), bZn['materialLibraries']);
          else if (bZb['test'](bZp)) bZn['materialLibraries']['push'](bZp['substring'](0x7)['trim']());
          else {
            if ('s' !== bZq) {
              if (' ' === bZp) continue;
              throw new Error('THREE.OBJLoader:\x20Unexpected\x20line:\x20\x22' + bZp + '\x22');
            }
            if (0x1 < (bZr = bZp['split']('\x20'))['length']) {
              var bZN = bZr[0x1]['trim']()['toLowerCase']();
              bZn['object']['smooth'] = '0' !== bZN && 'off' !== bZN;
            } else bZn['object']['smooth'] = !0x0;
            (c01 = bZn['object']['currentMaterial']()) && (c01['smooth'] = bZn['object']['smooth']);
          }
          bZn['finalize']();
          var bZO = new bXR['Group']();
          bZO['materialLibraries'] = []['concat'](bZn['materialLibraries']);
          for (bZt = 0x0, bZu = bZn['objects']['length']; bZt < bZu; bZt++) {
            var bZP = bZn['objects'][bZt],
              bZQ = bZP['geometry'],
              bZR = bZP['materials'],
              bZS = 'Line' === bZQ['type'],
              bZT = 'Points' === bZQ['type'],
              bZU = !0x1;
            if (0x0 !== bZQ['vertices']['length']) {
              var bZV, bZW = new bXR['BufferGeometry']();
              bZW['addAttribute']('position', new bXR['Float32BufferAttribute'](bZQ['vertices'], 0x3)), 0x0 < bZQ['normals']['length'] ? bZW['addAttribute']('normal', new bXR['Float32BufferAttribute'](bZQ['normals'], 0x3)) : bZW['computeVertexNormals'](), 0x0 < bZQ['colors']['length'] && (bZU = !0x0, bZW['addAttribute']('color', new bXR['Float32BufferAttribute'](bZQ['colors'], 0x3))), 0x0 < bZQ['uvs']['length'] && bZW['addAttribute']('uv', new bXR['Float32BufferAttribute'](bZQ['uvs'], 0x2));
              for (var bZX = [], bZY = 0x0, bZZ = bZR['length']; bZY < bZZ; bZY++) {
                var c00 = bZR[bZY],
                  c01 = void 0x0;
                if (null !== this['materials'])
                  if (c01 = this['materials']['create'](c00['name']), !bZS || !c01 || c01 instanceof bXR['LineBasicMaterial']) {
                    if (bZT && c01 && !(c01 instanceof bXR['PointsMaterial'])) {
                      var c02 = new bXR['PointsMaterial']({
                        'size': 0xa,
                        'sizeAttenuation': !0x1
                      });
                      c03['copy'](c01), c01 = c02;
                    }
                  } else {
                    var c03 = new bXR['LineBasicMaterial']();
                    c03['copy'](c01), c03['lights'] = !0x1, c01 = c03;
                  } c01 || ((c01 = bZS ? new bXR['LineBasicMaterial']() : bZT ? new bXR['PointsMaterial']({
                  'size': 0x1,
                  'sizeAttenuation': !0x1
                }) : new bXR['MeshPhongMaterial']())['name'] = c00['name']), c01['flatShading'] = !c00['smooth'], c01['vertexColors'] = bZU ? bXR['VertexColors'] : bXR['NoColors'], bZX['push'](c01);
              }
              if (0x1 < bZX['length']) {
                for (bZY = 0x0, bZZ = bZR['length']; bZY < bZZ; bZY++) c00 = bZR[bZY], bZW['addGroup'](c00['groupStart'], c00['groupCount'], bZY);
                bZV = bZS ? new bXR['LineSegments'](bZW, bZX) : bZT ? new bXR['Points'](bZW, bZX) : new bXR['Mesh'](bZW, bZX);
              } else bZV = bZS ? new bXR['LineSegments'](bZW, bZX[0x0]) : bZT ? new bXR['Points'](bZW, bZX[0x0]) : new bXR['Mesh'](bZW, bZX[0x0]);
              bZV['name'] = bZP['name'], bZO['add'](bZV);
            }
          }
          return console['timeEnd']('OBJLoader'), bZO;
        }
      }, bZ8;
    }();
  };
}, function(c04, c05) {
  c04['exports'] = function(c04) {
    c04['StrippedLambertMaterial'] = function(c05) {
      let c08 = new c04['ShaderMaterial']({
        'name': 'lambert-stripped',
        'uniforms': c04['UniformsUtils']['merge']([c04['ShaderLib']['lambert']['uniforms']]),
        'lights': !0x0,
        'fog': !0x0,
        'vertexShader': '\x0a#define\x20LAMBERT\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x20\x20\x20\x20varying\x20vec3\x20vLightBack;\x0a\x20\x20\x20\x20varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a//\x20#include\x20<envmap_pars_vertex>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a//\x20#include\x20<morphtarget_pars_vertex>\x0a//\x20#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a//\x20#include\x20<logdepthbuf_pars_vertex>\x0a//\x20#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20#include\x20<uv_vertex>\x0a\x20\x20\x20\x20#include\x20<uv2_vertex>\x0a\x20\x20\x20\x20#include\x20<color_vertex>\x0a\x20\x20\x20\x20#include\x20<beginnormal_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<morphnormal_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinbase_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinnormal_vertex>\x0a\x20\x20\x20\x20#include\x20<defaultnormal_vertex>\x0a\x20\x20\x20\x20#include\x20<begin_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<morphtarget_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinning_vertex>\x0a\x20\x20\x20\x20#include\x20<project_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<logdepthbuf_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<clipping_planes_vertex>\x0a\x20\x20\x20\x20#include\x20<worldpos_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<envmap_vertex>\x0a\x20\x20\x20\x20#include\x20<lights_lambert_vertex>\x0a\x20\x20\x20\x20#include\x20<shadowmap_vertex>\x0a\x20\x20\x20\x20#include\x20<fog_vertex>\x0a}\x0a',
        'fragmentShader': '\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0a\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a\x0a#ifdef\x20DOUBLE_SIDED\x0a\x20\x20\x20\x20varying\x20vec3\x20vLightBack;\x0a\x20\x20\x20\x20varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a//\x20#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a//\x20#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a//\x20#include\x20<envmap_pars_fragment>\x0a#include\x20<bsdfs>\x20\x20//\x20Shading\x20functions\x0a#include\x20<lights_pars_begin>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0a//\x20#include\x20<specularmap_pars_fragment>\x0a//\x20#include\x20<logdepthbuf_pars_fragment>\x0a//\x20#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<clipping_planes_fragment>\x0a\x0a\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x20\x20\x20\x20ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<logdepthbuf_fragment>\x0a\x20\x20\x20\x20#include\x20<map_fragment>\x0a\x20\x20\x20\x20#include\x20<color_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<alphamap_fragment>\x0a\x20\x20\x20\x20#include\x20<alphatest_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<specularmap_fragment>\x0a\x20\x20\x20\x20#include\x20<emissivemap_fragment>\x0a\x0a\x20\x20\x20\x20//\x20accumulation\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x0a\x20\x20\x20\x20#ifdef\x20DOUBLE_SIDED\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20(\x20gl_FrontFacing\x20)\x20?\x20vIndirectFront\x20:\x20vIndirectBack;\x0a\x0a\x20\x20\x20\x20#else\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20vIndirectFront;\x0a\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#include\x20<lightmap_fragment>\x0a\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20);\x0a\x0a\x20\x20\x20\x20#ifdef\x20DOUBLE_SIDED\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.directDiffuse\x20=\x20(\x20gl_FrontFacing\x20)\x20?\x20vLightFront\x20:\x20vLightBack;\x0a\x0a\x20\x20\x20\x20#else\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.directDiffuse\x20=\x20vLightFront;\x0a\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20reflectedLight.directDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20)\x20*\x20getShadowMask();\x0a\x0a\x20\x20\x20\x20//\x20modulation\x0a\x20\x20\x20\x20#include\x20<aomap_fragment>\x0a\x0a\x20\x20\x20\x20vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<envmap_fragment>\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<tonemapping_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<encodings_fragment>\x0a\x20\x20\x20\x20#include\x20<fog_fragment>\x0a\x20\x20\x20\x20#include\x20<premultiplied_alpha_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<dithering_fragment>\x0a}\x0a\x20\x20\x20\x20'
      });
      return Object['assign'](c08, new c04['MeshLambertMaterial'](c05)), c08['isMeshLambertMaterial'] = !0x0, c08['setValues'](c05), c08;
    };
  };
}, function(c09, c0a, c0b) {
  var c0c;
  ! function() {
    'use strict';

    function c0d(c09) {
      var c0a;
      c0a = 'function' == typeof c09 ? c09 : c09 ? c0n(c09) : Math['random'], this['p'] = c0h(c0a), this['perm'] = new Uint8Array(0x200), this['permMod12'] = new Uint8Array(0x200);
      for (var c0b = 0x0; 0x200 > c0b; c0b++) this['perm'][c0b] = this['p'][0xff & c0b], this['permMod12'][c0b] = this['perm'][c0b] % 0xc;
    }

    function c0h(c09) {
      var c0a, c0b = new Uint8Array(0x100);
      for (c0a = 0x0; 0x100 > c0a; c0a++) c0b[c0a] = c0a;
      for (c0a = 0x0; 0xff > c0a; c0a++) {
        var c0c = c0a + ~~(c09() * (0x100 - c0a)),
          c0d = c0b[c0a];
        c0b[c0a] = c0b[c0c], c0b[c0c] = c0d;
      }
      return c0b;
    }

    function c0n() {
      var c09 = 0x0,
        c0a = 0x0,
        c0b = 0x0,
        c0c = 0x1,
        c0d = function() {
          var c09 = 0xefc8249d;
          return function(c0a) {
            c0a = c0a['toString']();
            for (var c0b = 0x0; c0b < c0a['length']; c0b++) {
              var c0c = 0.02519603282416938 * (c09 += c0a['charCodeAt'](c0b));
              c0c -= c09 = c0c >>> 0x0, c09 = (c0c *= c09) >>> 0x0, c09 += 0x100000000 * (c0c -= c09);
            }
            return 2.3283064365386963e-10 * (c09 >>> 0x0);
          };
        }();
      c09 = c0d('\x20'), c0a = c0d('\x20'), c0b = c0d('\x20');
      for (var c0h = 0x0; c0h < arguments['length']; c0h++) 0x0 > (c09 -= c0d(arguments[c0h])) && (c09 += 0x1), 0x0 > (c0a -= c0d(arguments[c0h])) && (c0a += 0x1), 0x0 > (c0b -= c0d(arguments[c0h])) && (c0b += 0x1);
      return c0d = null,
        function() {
          var c0d = 0x1fea77 * c09 + 2.3283064365386963e-10 * c0c;
          return c09 = c0a, c0a = c0b, c0b = c0d - (c0c = 0x0 | c0d);
        };
    }
    var c0z = 0.5 * (Math['sqrt'](0x3) - 0x1),
      c0A = (0x3 - Math['sqrt'](0x3)) / 0x6,
      c0B = 0x1 / 0x6,
      c0C = (Math['sqrt'](0x5) - 0x1) / 0x4,
      c0D = (0x5 - Math['sqrt'](0x5)) / 0x14;
    c0d['prototype'] = {
      'grad3': new Float32Array([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, 0x1, -0x1, 0x0, -0x1, -0x1, 0x0, 0x1, 0x0, 0x1, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, -0x1, 0x0, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, 0x1, 0x0, 0x1, -0x1, 0x0, -0x1, -0x1]),
      'grad4': new Float32Array([0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, 0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, -0x1, 0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, 0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, 0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, 0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0]),
      'noise2D': function(c09, c0a) {
        var c0b, c0c, c0d = this['permMod12'],
          c0h = this['perm'],
          c0n = this['grad3'],
          c0B = 0x0,
          c0C = 0x0,
          c0D = 0x0,
          c0O = (c09 + c0a) * c0z,
          c0P = Math['floor'](c09 + c0O),
          c0Q = Math['floor'](c0a + c0O),
          c0R = (c0P + c0Q) * c0A,
          c0S = c09 - (c0P - c0R),
          c0T = c0a - (c0Q - c0R);
        c0S > c0T ? (c0b = 0x1, c0c = 0x0) : (c0b = 0x0, c0c = 0x1);
        var c0U = c0S - c0b + c0A,
          c0V = c0T - c0c + c0A,
          c0W = c0S - 0x1 + 0x2 * c0A,
          c0X = c0T - 0x1 + 0x2 * c0A,
          c0Y = 0xff & c0P,
          c0Z = 0xff & c0Q,
          c10 = 0.5 - c0S * c0S - c0T * c0T;
        if (0x0 <= c10) {
          var c11 = 0x3 * c0d[c0Y + c0h[c0Z]];
          c0B = (c10 *= c10) * c10 * (c0n[c11] * c0S + c0n[c11 + 0x1] * c0T);
        }
        var c12 = 0.5 - c0U * c0U - c0V * c0V;
        if (0x0 <= c12) {
          var c13 = 0x3 * c0d[c0Y + c0b + c0h[c0Z + c0c]];
          c0C = (c12 *= c12) * c12 * (c0n[c13] * c0U + c0n[c13 + 0x1] * c0V);
        }
        var c14 = 0.5 - c0W * c0W - c0X * c0X;
        if (0x0 <= c14) {
          var c15 = 0x3 * c0d[c0Y + 0x1 + c0h[c0Z + 0x1]];
          c0D = (c14 *= c14) * c14 * (c0n[c15] * c0W + c0n[c15 + 0x1] * c0X);
        }
        return 0x46 * (c0B + c0C + c0D);
      },
      'noise3D': function(c09, c0a, c0b) {
        var c0c, c0d, c0h, c0n, c0z, c0A, c0C, c0D, c1h, c1i, c1j = this['permMod12'],
          c1k = this['perm'],
          c1l = this['grad3'],
          c1m = (c09 + c0a + c0b) * (0x1 / 0x3),
          c1n = Math['floor'](c09 + c1m),
          c1o = Math['floor'](c0a + c1m),
          c1p = Math['floor'](c0b + c1m),
          c1q = (c1n + c1o + c1p) * c0B,
          c1r = c09 - (c1n - c1q),
          c1s = c0a - (c1o - c1q),
          c1t = c0b - (c1p - c1q);
        c1r >= c1s ? c1s >= c1t ? (c0z = 0x1, c0A = 0x0, c0C = 0x0, c0D = 0x1, c1h = 0x1, c1i = 0x0) : c1r >= c1t ? (c0z = 0x1, c0A = 0x0, c0C = 0x0, c0D = 0x1, c1h = 0x0, c1i = 0x1) : (c0z = 0x0, c0A = 0x0, c0C = 0x1, c0D = 0x1, c1h = 0x0, c1i = 0x1) : c1s < c1t ? (c0z = 0x0, c0A = 0x0, c0C = 0x1, c0D = 0x0, c1h = 0x1, c1i = 0x1) : c1r < c1t ? (c0z = 0x0, c0A = 0x1, c0C = 0x0, c0D = 0x0, c1h = 0x1, c1i = 0x1) : (c0z = 0x0, c0A = 0x1, c0C = 0x0, c0D = 0x1, c1h = 0x1, c1i = 0x0);
        var c1u = c1r - c0z + c0B,
          c1v = c1s - c0A + c0B,
          c1w = c1t - c0C + c0B,
          c1x = c1r - c0D + 0x2 * c0B,
          c1y = c1s - c1h + 0x2 * c0B,
          c1z = c1t - c1i + 0x2 * c0B,
          c1A = c1r - 0x1 + 0.5,
          c1B = c1s - 0x1 + 0.5,
          c1C = c1t - 0x1 + 0.5,
          c1D = 0xff & c1n,
          c1E = 0xff & c1o,
          c1F = 0xff & c1p,
          c1G = 0.6 - c1r * c1r - c1s * c1s - c1t * c1t;
        if (0x0 > c1G) c0c = 0x0;
        else {
          var c1H = 0x3 * c1j[c1D + c1k[c1E + c1k[c1F]]];
          c0c = (c1G *= c1G) * c1G * (c1l[c1H] * c1r + c1l[c1H + 0x1] * c1s + c1l[c1H + 0x2] * c1t);
        }
        var c1I = 0.6 - c1u * c1u - c1v * c1v - c1w * c1w;
        if (0x0 > c1I) c0d = 0x0;
        else {
          var c1J = 0x3 * c1j[c1D + c0z + c1k[c1E + c0A + c1k[c1F + c0C]]];
          c0d = (c1I *= c1I) * c1I * (c1l[c1J] * c1u + c1l[c1J + 0x1] * c1v + c1l[c1J + 0x2] * c1w);
        }
        var c1K = 0.6 - c1x * c1x - c1y * c1y - c1z * c1z;
        if (0x0 > c1K) c0h = 0x0;
        else {
          var c1L = 0x3 * c1j[c1D + c0D + c1k[c1E + c1h + c1k[c1F + c1i]]];
          c0h = (c1K *= c1K) * c1K * (c1l[c1L] * c1x + c1l[c1L + 0x1] * c1y + c1l[c1L + 0x2] * c1z);
        }
        var c1M = 0.6 - c1A * c1A - c1B * c1B - c1C * c1C;
        if (0x0 > c1M) c0n = 0x0;
        else {
          var c1N = 0x3 * c1j[c1D + 0x1 + c1k[c1E + 0x1 + c1k[c1F + 0x1]]];
          c0n = (c1M *= c1M) * c1M * (c1l[c1N] * c1A + c1l[c1N + 0x1] * c1B + c1l[c1N + 0x2] * c1C);
        }
        return 0x20 * (c0c + c0d + c0h + c0n);
      },
      'noise4D': function(c09, c0a, c0b, c0c) {
        var c0d, c0h, c0n, c0z, c0A, c0B, c1Y, c1Z, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29 = this['perm'],
          c2a = this['grad4'],
          c2b = (c09 + c0a + c0b + c0c) * c0C,
          c2c = Math['floor'](c09 + c2b),
          c2d = Math['floor'](c0a + c2b),
          c2e = Math['floor'](c0b + c2b),
          c2f = Math['floor'](c0c + c2b),
          c2g = (c2c + c2d + c2e + c2f) * c0D,
          c2h = c09 - (c2c - c2g),
          c2i = c0a - (c2d - c2g),
          c2j = c0b - (c2e - c2g),
          c2k = c0c - (c2f - c2g),
          c2l = 0x0,
          c2m = 0x0,
          c2n = 0x0,
          c2o = 0x0;
        c2h > c2i ? c2l++ : c2m++, c2h > c2j ? c2l++ : c2n++, c2h > c2k ? c2l++ : c2o++, c2i > c2j ? c2m++ : c2n++, c2i > c2k ? c2m++ : c2o++, c2j > c2k ? c2n++ : c2o++;
        var c2p = c2h - (c0B = 0x3 <= c2l ? 0x1 : 0x0) + c0D,
          c2q = c2i - (c1Y = 0x3 <= c2m ? 0x1 : 0x0) + c0D,
          c2r = c2j - (c1Z = 0x3 <= c2n ? 0x1 : 0x0) + c0D,
          c2s = c2k - (c20 = 0x3 <= c2o ? 0x1 : 0x0) + c0D,
          c2t = c2h - (c21 = 0x2 <= c2l ? 0x1 : 0x0) + 0x2 * c0D,
          c2u = c2i - (c22 = 0x2 <= c2m ? 0x1 : 0x0) + 0x2 * c0D,
          c2v = c2j - (c23 = 0x2 <= c2n ? 0x1 : 0x0) + 0x2 * c0D,
          c2w = c2k - (c24 = 0x2 <= c2o ? 0x1 : 0x0) + 0x2 * c0D,
          c2x = c2h - (c25 = 0x1 <= c2l ? 0x1 : 0x0) + 0x3 * c0D,
          c2y = c2i - (c26 = 0x1 <= c2m ? 0x1 : 0x0) + 0x3 * c0D,
          c2z = c2j - (c27 = 0x1 <= c2n ? 0x1 : 0x0) + 0x3 * c0D,
          c2A = c2k - (c28 = 0x1 <= c2o ? 0x1 : 0x0) + 0x3 * c0D,
          c2B = c2h - 0x1 + 0x4 * c0D,
          c2C = c2i - 0x1 + 0x4 * c0D,
          c2D = c2j - 0x1 + 0x4 * c0D,
          c2E = c2k - 0x1 + 0x4 * c0D,
          c2F = 0xff & c2c,
          c2G = 0xff & c2d,
          c2H = 0xff & c2e,
          c2I = 0xff & c2f,
          c2J = 0.6 - c2h * c2h - c2i * c2i - c2j * c2j - c2k * c2k;
        if (0x0 > c2J) c0d = 0x0;
        else {
          var c2K = c29[c2F + c29[c2G + c29[c2H + c29[c2I]]]] % 0x20 * 0x4;
          c0d = (c2J *= c2J) * c2J * (c2a[c2K] * c2h + c2a[c2K + 0x1] * c2i + c2a[c2K + 0x2] * c2j + c2a[c2K + 0x3] * c2k);
        }
        var c2L = 0.6 - c2p * c2p - c2q * c2q - c2r * c2r - c2s * c2s;
        if (0x0 > c2L) c0h = 0x0;
        else {
          var c2M = c29[c2F + c0B + c29[c2G + c1Y + c29[c2H + c1Z + c29[c2I + c20]]]] % 0x20 * 0x4;
          c0h = (c2L *= c2L) * c2L * (c2a[c2M] * c2p + c2a[c2M + 0x1] * c2q + c2a[c2M + 0x2] * c2r + c2a[c2M + 0x3] * c2s);
        }
        var c2N = 0.6 - c2t * c2t - c2u * c2u - c2v * c2v - c2w * c2w;
        if (0x0 > c2N) c0n = 0x0;
        else {
          var c2O = c29[c2F + c21 + c29[c2G + c22 + c29[c2H + c23 + c29[c2I + c24]]]] % 0x20 * 0x4;
          c0n = (c2N *= c2N) * c2N * (c2a[c2O] * c2t + c2a[c2O + 0x1] * c2u + c2a[c2O + 0x2] * c2v + c2a[c2O + 0x3] * c2w);
        }
        var c2P = 0.6 - c2x * c2x - c2y * c2y - c2z * c2z - c2A * c2A;
        if (0x0 > c2P) c0z = 0x0;
        else {
          var c2Q = c29[c2F + c25 + c29[c2G + c26 + c29[c2H + c27 + c29[c2I + c28]]]] % 0x20 * 0x4;
          c0z = (c2P *= c2P) * c2P * (c2a[c2Q] * c2x + c2a[c2Q + 0x1] * c2y + c2a[c2Q + 0x2] * c2z + c2a[c2Q + 0x3] * c2A);
        }
        var c2R = 0.6 - c2B * c2B - c2C * c2C - c2D * c2D - c2E * c2E;
        if (0x0 > c2R) c0A = 0x0;
        else {
          var c2S = c29[c2F + 0x1 + c29[c2G + 0x1 + c29[c2H + 0x1 + c29[c2I + 0x1]]]] % 0x20 * 0x4;
          c0A = (c2R *= c2R) * c2R * (c2a[c2S] * c2B + c2a[c2S + 0x1] * c2C + c2a[c2S + 0x2] * c2D + c2a[c2S + 0x3] * c2E);
        }
        return 0x1b * (c0d + c0h + c0n + c0z + c0A);
      }
    }, c0d['_buildPermutationTable'] = c0h, void 0x0 !== (c0c = function() {
      return c0d;
    } ['call'](c0a, c0b, c0a, c09)) && (c09['exports'] = c0c), c0a['SimplexNoise'] = c0d, c09['exports'] = c0d;
  }();
}, function(c2T, c2U) {
  c2T['exports']['easing'] = {
    'linear': function(c2T) {
      return c2T;
    },
    'easeInQuad': function(c2T) {
      return c2T * c2T;
    },
    'easeOutQuad': function(c2T) {
      return c2T * (0x2 - c2T);
    },
    'easeInOutQuad': function(c2T) {
      return 0.5 > c2T ? 0x2 * c2T * c2T : (0x4 - 0x2 * c2T) * c2T - 0x1;
    },
    'easeInCubic': function(c2T) {
      return c2T * c2T * c2T;
    },
    'easeOutCubic': function(c2T) {
      return --c2T * c2T * c2T + 0x1;
    },
    'easeInOutCubic': function(c2T) {
      return 0.5 > c2T ? 0x4 * c2T * c2T * c2T : (c2T - 0x1) * (0x2 * c2T - 0x2) * (0x2 * c2T - 0x2) + 0x1;
    },
    'easeInQuart': function(c2T) {
      return c2T * c2T * c2T * c2T;
    },
    'easeOutQuart': function(c2T) {
      return 0x1 - --c2T * c2T * c2T * c2T;
    },
    'easeInOutQuart': function(c2T) {
      return 0.5 > c2T ? 0x8 * c2T * c2T * c2T * c2T : 0x1 - 0x8 * --c2T * c2T * c2T * c2T;
    },
    'easeInQuint': function(c2T) {
      return c2T * c2T * c2T * c2T * c2T;
    },
    'easeOutQuint': function(c2T) {
      return 0x1 + --c2T * c2T * c2T * c2T * c2T;
    },
    'easeInOutQuint': function(c2T) {
      return 0.5 > c2T ? 0x10 * c2T * c2T * c2T * c2T * c2T : 0x1 + 0x10 * --c2T * c2T * c2T * c2T * c2T;
    }
  };
}, function(c38, c39, c3a) {
  var c3b, c3c, c3d = 0x0,
    c3e = function(c38) {
      this['sid'] = c3d++, this['uid'] = c38['uid'], this['width'] = c38['w'], this['length'] = c38['l'], this['height'] = c38['h'], this['active'] = !c38['startClosed'], this['x'] = c38['x'], this['orgX'] = this['x'], this['y'] = c38['y'], this['orgY'] = this['y'], this['z'] = c38['z'], this['orgZ'] = this['z'], this['xR'] = c38['xR'], this['yR'] = c38['yR'], this['zR'] = c38['zR'], this['dir'] = c38['d'], this['src'] = c38['src'], this['ramp'] = c38['ramp'], this['ladder'] = c38['ladder'], this['jumpPad'] = c38['jumpPad'], this['noShoot'] = c38['noShoot'], this['stepSrc'] = c38['s'], this['score'] = c38['score'], this['scoreP'] = c38['scoreP'], this['kill'] = c38['kill'], this['dummy'] = c38['dummy'], this['noVis'] = c38['noVis'], this['complexMesh'] = c38['complexMesh'], this['penetrable'] = c38['penetrable'], this['health'] = c38['health'], this['startHealth'] = c38['health'], this['transparent'] = c38['transparent'], this['boost'] = c38['boost'], this['boostDr'] = c38['boostDr'], this['aoMlt'] = c38['aoM'], this['team'] = c38['team'], this['flag'] = c38['flag'], this['trigger'] = c38['trigger'], this['pickup'] = c38['pickup'], this['orgPickup'] = c38['orgPickup'], this['pickupRep'] = c38['pickupRep'], this['meshRef'] = c38['meshRef'], this['checkpoint'] = c38['checkpoint'], this['singleUse'] = c38['singleUse'], this['isBorder'] = c38['isBorder'], this['node'] = c38['node'], this['channel'] = c38['channel'], this['teleporter'] = c38['teleporter'], this['telCooldown'] = 0x0, this['propID'] = c38['propID'], this['telStopMo'] = c38['momentum'], this['noAmb'] = c38['noAmb'], this['tRadius'] = c38['tRadius'], this['gate'] = c38['gate'], this['noMsg'] = c38['noMsg'], this['method'] = c38['method'], this['closeable'] = c38['closeable'], this['startClosed'] = c38['startClosed'], this['triggerEvent'] = c38['event'], this['triggerAction'] = c38['action'], this['triggerConstant'] = c38['constant'], c38['eventN'] && (this[c38['eventN']] = !0x0), this['classIndx'] = c38['classIndx'], c38['respawnT'] = 0x0 != c38['respawnT'] && 0x64 > c38['respawnT'] ? 0x64 : c38['respawnT'], this['respawnT'] = c38['respawnT'], this['respawnR'] = c38['respawnR'], this['respawnTStart'] = c38['respawnT'], this['canRespawn'] = !(!c38['respawnR'] && !c38['respawnT']), this['skill'] = c38['skill'], this['hpMlt'] = c38['hpMlt'], this['destroyedBy'] = null, this['interface'] = c38['interface'], this['interfaceT'] = c38['interfaceT'], this['deposited'] = 0x0, this['withdrawAmnt'] = c38['withdraw'], this['depositAmnt'] = c38['deposit'], this['bank'] = c38['bank'], this['objLink'] = c38['objLink'];
    };
  c38['exports']['manager'] = function(c38, c39, c3d) {
    var c3j, c3k;
    c38 && (c3b = c3a(0x26)['prefabs'], c3c = c3a(0x4)), this['aoOpac'] = 0x0, this['objects'] = [], this['objectives'] = [], this['flags'] = [], this['pickups'] = [], this['gates'] = [], this['banks'] = [], this['interfaces'] = [], this['teleporters'] = [], this['spectateCams'] = {}, this['collision'] = function(c38, c39, c3a) {
      return c38['x'] - c38['width'] - c3a <= c39['x'] + c39['width'] && c38['x'] + c38['width'] + c3a >= c39['x'] - c39['width'] && c38['z'] - c38['length'] - c3a <= c39['z'] + c39['length'] && c38['z'] + c38['length'] + c3a >= c39['z'] - c39['length'] && c38['y'] - c38['height'] - c3a <= c39['y'] + c39['height'] && c38['y'] + c38['height'] + c3a >= c39['y'] - c39['height'];
    }, this['checkPos'] = function(c38, c3a, c3b, c3c, c3d) {
      for (var c3e = 0x0; c3e < this['objects']['length']; ++c3e)
        if (this['objects'][c3e] != c3c && this['objects'][c3e] != c3d && !this['objects'][c3e]['ramp'] && c39['pointInBox3D'](c38, c3a, c3b, this['objects'][c3e])) return !0x1;
      return !0x0;
    }, this['findByUid'] = function(c38, c39) {
      c3j = c39 || this['objects'];
      for (var c3a = 0x0; c3a < c3j['length']; ++c3a)
        if (c3j[c3a]['uid'] === c38) return c3j[c3a];
      return null;
    }, this['findBySid'] = function(c38, c39) {
      c3j = c39 || this['objects'];
      for (var c3a = 0x0; c3a < c3j['length']; ++c3a)
        if (c3j[c3a]['sid'] === c38) return c3j[c3a];
      return null;
    }, this['addCylinder'] = function(c39, c3a, c3b, c3c, c3d, c3e) {
      c38 && (c3e['shadows'] = !0x0, c38['addCylinder'](c39, c3a, c3b, c3c, c3d, c3e));
    }, this['getZoneDat'] = function(c38, c39) {
      return {
        'src': 'zone_r',
        'texSrc': 'zone_' + (c39 && c38 == c39['team'] ? 'b' : 'r'),
        'noGroup': !0x0,
        'mat': c3c['MeshBasicMaterial'],
        'transparent': !0x0,
        'depthWrite': !0x1,
        'side': 0x2
      };
    }, this['getFlagDat'] = function(c38, c39) {
      var c3a = c39 && c38 == c39['team'] ? '1' : '0';
      return {
        'src': 'crystal_0',
        'texSrc': 'crystal_' + c3a,
        'noGroup': !0x0,
        'noShadow': !0x0,
        'noFog': !0x0,
        'emissive': '0' == c3a ? 0x853434 : 0x428a9d
      };
    }, this['addFlag'] = function(c39, c3a, c3b, c3c) {
      var c3j = null;
      c38 && ((c3j = c38['loadMesh'](this['getFlagDat'](c3c), c39, c3a + c3d['flagOff'], c3b, 0x0, c3d['flagScale'], c38['scene']))['layers']['set'](0x2), c3j['zoneMesh'] = c38['addCube'](c39, c3a, c3b, c3d['flagZoneS'], c3d['flagZoneH'], c3d['flagZoneS'], [0x1, 0x1, 0x0, 0x0, 0x1, 0x1], this['getZoneDat'](c3c)));
      var c3k = new c3e({
        'uid': this['objects']['length'],
        'meshRef': c3j,
        'x': c39,
        'z': c3b,
        'y': c3a + c3d['flagScale'] / 0x2 + c3d['flagOff'],
        'w': c3d['flagScale'],
        'l': c3d['flagScale'],
        'h': c3d['flagScale'] / 0x2,
        'team': c3c,
        'flag': !0x0,
        'noShoot': !0x0,
        'complexMesh': !0x0
      });
      this['flags']['push'](c3k), this['objects']['push'](c3k);
      var c3R = new c3e({
        'x': c39,
        'z': c3b,
        'y': c3a + c3d['flagZoneH'] / 0x2,
        'w': c3d['flagZoneS'] / 0x2,
        'l': c3d['flagZoneS'] / 0x2,
        'h': c3d['flagZoneH'] / 0x2,
        'team': c3c,
        'trigger': !0x0,
        'noShoot': !0x0,
        'complexMesh': !0x0
      });
      c3R['flagObj'] = c3k, this['objects']['push'](c3R);
    }, this['addWeapon'] = function(c39, c3a, c3b, c3j, c3k, c3X, c3Y) {
      c3j = c3j || {};
      var c3Z = null;
      c38 && ((c3Z = c38['loadMesh']({
        'src': 'weapons/' + c3j['weapon']['src'],
        'texSrc': 'weapons/' + c3j['weapon']['src'],
        'tFilter': c3c['LinearFilter'],
        'noGroup': !0x0,
        'uv2': !0x0,
        'noShadow': !0x0,
        'shininess': c3j['weapon']['shine'] || 0x3c,
        'specular': 0x292929,
        'transparent': c3j['weapon']['seeThrough'],
        'emissive': c3j['weapon']['transp'] ? 0xffffff : null
      }, c39, c3a + c3d['pickupOff'], c3b, 0x0, c3j['weapon']['scale'], c38['scene']))['rotateY'](c3k || 0x0), c3Z['rotateX']((c3X || 0x0) - Math['PI'] / 0x2), c3Z['rotateZ'](c3Y || 0x0));
      var c40 = new c3e({
        'uid': this['objects']['length'],
        'meshRef': c3Z,
        'x': c39,
        'z': c3b,
        'y': c3a + c3d['pickupZoneH'] / 0x2,
        'w': c3d['pickupZoneX'],
        'l': c3d['pickupZoneZ'],
        'h': 0x2 * c3d['pickupZoneH'],
        'pickup': c3j['weaponId'],
        'pickupRep': !c3j['noRep'],
        'orgPickup': c3j['weaponId'],
        'scoreP': c3j['scoreP'],
        'noMsg': c3j['noMsg'],
        'method': c3j['method'],
        'trigger': !0x0,
        'noShoot': !0x0,
        'complexMesh': !0x0
      });
      this['pickups']['push'](c40), this['objects']['push'](c40);
    }, this['addObjective'] = function(c39, c3a, c3b, c3d, c3e, c3j, c3k) {
      var c48;
      c38 && ((c48 = c38['addCube'](c39, c3a, c3b, c3d, c3j, c3e, [0x1, 0x1, 0x0, 0x0, 0x1, 0x1], {
        'src': 'objective_0',
        'noGroup': !0x0,
        'mat': c3c['MeshBasicMaterial'],
        'transparent': !0x0,
        'depthWrite': !0x1,
        'side': 0x2
      }))['visible'] = !0x1), this['objectives']['push']({
        'x': c39,
        'z': c3b,
        'y': c3a + c3j / 0x2,
        'mesh': c48,
        'width': c3d / 0x2,
        'length': c3e / 0x2,
        'height': c3j / 0x2,
        'objLink': c3k || 0x0
      });
    }, this['addDeathZone'] = function(c38, c39, c3a, c3b, c3c, c3d) {
      this['objects']['push'](new c3e({
        'x': c38,
        'z': c3a,
        'y': c39 + c3d / 0x2,
        'w': c3b / 0x2,
        'l': c3c / 0x2,
        'h': c3d / 0x2,
        'kill': !0x0,
        'noShoot': !0x0,
        'complexMesh': !0x0
      }));
    }, this['addScoreZone'] = function(c38, c39, c3a, c3b, c3c, c3d, c3j) {
      this['objects']['push'](new c3e({
        'x': c38,
        'z': c3a,
        'y': c39 + c3d / 0x2,
        'w': c3b / 0x2,
        'l': c3c / 0x2,
        'h': c3d / 0x2,
        'score': !0x0,
        'scoreP': c3j,
        'noShoot': !0x0,
        'complexMesh': !0x0
      }));
    }, this['addCheckPoint'] = function(c38, c39, c3a, c3b, c3c, c3d, c3j, c3k) {
      this['objects']['push'](new c3e({
        'x': c38,
        'z': c3a,
        'y': c39 + c3d / 0x2,
        'w': c3b / 0x2,
        'l': c3c / 0x2,
        'h': c3d / 0x2,
        'd': parseInt(c3k) || 0x0,
        'checkpoint': !0x0,
        'singleUse': c3j,
        'noShoot': !0x0,
        'complexMesh': !0x0
      }));
    }, this['addTeleporter'] = function(c38, c39, c3a, c3b, c3c, c3d, c3j, c3k, c4C) {
      var c4D = new c3e({
        'uid': this['objects']['length'],
        'x': c38,
        'z': c3a,
        'y': c39 + c3d / 0x2,
        'w': c3b / 0x2,
        'l': c3c / 0x2,
        'h': c3d / 0x2,
        'teleporter': !0x0,
        'channel': c3j || 0x0,
        'node': c3k || 0x0,
        'momentum': c4C,
        'noShoot': !0x0,
        'complexMesh': !0x0
      });
      this['objects']['push'](c4D), this['teleporters']['push'](c4D);
    }, this['addGrass'] = function(c39, c3a, c3b, c3d, c3e, c3j, c3k) {
      c3k = c3k || {}, c38 && !c3k['noVis'] && (c3k['side'] = c3c['DoubleSide'], c3k['transparent'] = !0x0, c3k['alphaTest'] = 0.2, c3k['vertexColors'] = c3c['VertexColors'], c3k['shadowsR'] = !0x0, c3k['noGroup'] = !!c3k['health'], c38['addGrass'](c39, c3a, c3b, c3d, c3e, c3j, c3k));
    }, this['addLadder'] = function(c3a, c3b, c3k, c4O, c4P, c4Q, c4R, c4S) {
      var c4T = c3d['ladderScale'],
        c4U = c3d['ladderScale'];
      if (0x0 == c4P || c4P == Math['PI'] ? c4U = c3d['ladderWidth'] : c4T = c3d['ladderWidth'], c3j = new c3e({
          'ladder': !0x0,
          'complexMesh': !0x0,
          'noShoot': !0x0,
          'd': c4P,
          'x': c3a + c3d['ladderScale'] * Math['cos'](c4P),
          'z': c3k + c3d['ladderScale'] * Math['sin'](c4P),
          'y': c3b,
          'w': c4T,
          'l': c4U,
          'h': c4O
        }), this['objects']['push'](c3j), c38 && !c4Q) {
        var c4V = {
          'src': c4R || 'floor_0',
          'vertexColors': c3c['VertexColors'],
          'colr': c4S,
          'scale': 0.02,
          'amb': c3d['ambientVal'],
          'shadows': !0x0
        };
        c38['addCube'](c3j['x'] + c3d['ladderWidth'] * Math['sin'](c4P), c3j['y'], c3j['z'] + c3d['ladderWidth'] * Math['cos'](c4P), 0x2 * c3d['ladderScale'], c4O + 0x2, 0x2 * c3d['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c4V), c38['addCube'](c3j['x'] - c3d['ladderWidth'] * Math['sin'](c4P), c3j['y'], c3j['z'] - c3d['ladderWidth'] * Math['cos'](c4P), 0x2 * c3d['ladderScale'], c4O + 0x2, 0x2 * c3d['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c4V);
        for (var c4W = Math['floor'](c4O / 0x6), c4X = 0x0; c4X < c4W; ++c4X) c4V['dark'] = 0.6 + c4X / c4W * 0.4, c38['addPlane'](c3j['x'], c3b + 0x6 * (c4X + 0x1) + c39['randFloat'](-0x1, 0x1), c3j['z'], c3d['ladderWidth'], c3d['ladderScale'], c4V, -c4P + Math['PI'] / 0x2, Math['PI'] / 0x2, c39['randFloat'](-0.1, 0.1));
      }
    }, this['addRamp'] = function(c39, c3a, c3b, c3j, c3k, c53, c54, c55, c56, c57, c58, c59, c5a, c5b, c5c, c5d) {
      var c5e = 0x0 != c54 && c54 != Math['PI'],
        c5f = (c5e ? c53 : c3j) / 0x2,
        c5g = Math['sqrt'](c3k * c3k + c53 * c53),
        c5h = Math['asin'](c3k / c5g);
      if (this['objects']['push'](new c3e({
          'x': c39,
          'z': c3b,
          'y': c3a + c3k / 0x2,
          'w': c3j / 0x2,
          'l': c53 / 0x2,
          'h': c3k / 0x2,
          'd': c54,
          'noShoot': !0x0,
          'complexMesh': !0x0,
          'boostDr': c55 ? c5h : null,
          'boost': c55 || null,
          'ramp': {
            'sX': c39 - c5f * Math['cos'](c54),
            'sZ': c3b - c5f * Math['sin'](c54),
            'eX': c39 + c5f * Math['cos'](c54),
            'eZ': c3b + c5f * Math['sin'](c54)
          },
          'noAmb': c5c
        })), c38 && !c57) {
        var c5i = {
          'src': c56 || 'default',
          'vertexColors': c3c['VertexColors'],
          'colr': c58,
          'scale': 0x1,
          'shadowsR': !0x0,
          'side': c3c['DoubleSide'],
          'movT': c5a,
          'movD': c5b,
          'emissive': c5d
        };
        if (c5i['transparent'] = 'link_0' == c5i['src'], 'link_0' == c5i['src'] && (c5i['depthWrite'] = !0x0, c5i['alphaTest'] = c5i['transparent'] ? 0.02 : 0x0), c38['addRamp'](c39, c3a, c3b, c5e ? c3j : c53, c3k, (c5e ? c53 : c3j) / 0x2, c54, c5i), !c5c) {
          c3a += c3d['ambOff'];
          var c5j = (c5e ? c3j : c53) / 0x2 - c59;
          c5e ? c3j = 0x2 * c59 : c53 = 0x2 * c59;
          for (var c5k, c5l = 0x0; 0x2 > c5l; ++c5l) c5k = c5l ? 0x1 : -0x1, c38['addRamp'](c39 + c5j * c5k * Math['cos'](c54 + Math['PI'] / 0x2), c3a, c3b + c5j * c5k * Math['sin'](c54 + Math['PI'] / 0x2), c5e ? c3j : c53, c3k, (c5e ? c53 : c3j) / 0x2, c54, {
            'src': 'ambient_1',
            'euler': 'ZYX',
            'depthWrite': !0x1,
            'transparent': !0x0,
            'side': c3c['DoubleSide']
          }, c5l ? 0x0 : Math['PI']);
        }
      }
    }, this['addGate'] = function(c39, c3a, c3b, c3d, c3j, c3k, c5s) {
      (c5s = c5s || {})['src'] = c5s['src'] || 'wall_0';
      var c5t = new c3e({
        'x': c39,
        'z': c3b,
        'y': c3a + c3k / 0x2,
        'w': c3d / 0x2,
        'l': c3j / 0x2,
        'h': c3k / 0x2,
        'uid': this['objects']['length'],
        'src': c5s['src'],
        'noVis': c5s['noVis'],
        'noAmb': c5s['noAmb'],
        'transparent': c5s['transparent'],
        'penetrable': c5s['penetrable'],
        'isBorder': c5s['isBorder'],
        'complexMesh': c5s['xR'] || c5s['yR'] || c5s['zR'] || 'link_0' == c5s['src'],
        'ter': !0x0,
        'tRadius': 0x7,
        'gate': !0x0,
        'scoreP': c5s['scoreP'],
        'noMsg': c5s['noMsg'],
        'method': c5s['method'],
        'closeable': c5s['closeable'],
        'startClosed': c5s['startClosed'] && c5s['closeable'],
        'interface': c5s['interface']
      });
      if (c5s['interface'] && this['interfaces']['push'](c5t['uid']), c38 && !c5s['noVis']) {
        c5s['transparent'] = 'link_0' == c5s['src'] || 0x1 != c5s['opacity'], 'link_0' == c5s['src'] && (c5s['depthWrite'] = 0x1 == c5s['opacity'], c5s['alphaTest'] = c5s['transparent'] ? 0.02 : 0x0), c5s['vertexColors'] = c3c['VertexColors'], c5s['scale'] = null == c5s['scale'] ? 0x1 : c5s['scale'], c5s['shadows'] = !c5s['shadowsR'] && 0x1 == c5s['opacity'], c5s['noGroup'] = !0x0;
        var c5u = c38['addCube'](c39, c3a, c3b, c3d, c3k, c3j, [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c5s);
        c5t['meshRef'] = c5u;
      }
      this['objects']['push'](c5t), this['gates']['push'](c5t);
    }, this['addBank'] = function(c39, c3a, c3b, c3d, c3j, c3k, c5B) {
      (c5B = c5B || {})['src'] = c5B['src'] || 'wall_0';
      var c5C = new c3e({
        'x': c39,
        'z': c3b,
        'y': c3a + c3k / 0x2,
        'w': c3d / 0x2,
        'l': c3j / 0x2,
        'h': c3k / 0x2,
        'uid': this['objects']['length'],
        'src': c5B['src'],
        'noVis': c5B['noVis'],
        'noAmb': c5B['noAmb'],
        'transparent': c5B['transparent'],
        'penetrable': c5B['penetrable'],
        'isBorder': c5B['isBorder'],
        'complexMesh': c5B['xR'] || c5B['yR'] || c5B['zR'] || 'link_0' == c5B['src'],
        'ter': !0x0,
        'tRadius': 0x7,
        'bank': !0x0,
        'interface': c5B['interface'],
        'withdraw': Math['abs'](c5B['withdraw']),
        'deposit': Math['abs'](c5B['deposit'])
      });
      c5B['interface'] && this['interfaces']['push'](c5C['uid']), c38 && !c5B['noVis'] && (c5B['transparent'] = 'link_0' == c5B['src'] || 0x1 != c5B['opacity'], 'link_0' == c5B['src'] && (c5B['depthWrite'] = 0x1 == c5B['opacity'], c5B['alphaTest'] = c5B['transparent'] ? 0.02 : 0x0), c5B['vertexColors'] = c3c['VertexColors'], c5B['scale'] = null == c5B['scale'] ? 0x1 : c5B['scale'], c5B['shadows'] = !c5B['shadowsR'] && 0x1 == c5B['opacity'], c38['addCube'](c39, c3a, c3b, c3d, c3k, c3j, [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c5B)), this['objects']['push'](c5C), this['banks']['push'](c5C);
    }, this['addTrigger'] = function(c39, c3a, c3b, c3d, c3j, c3k, c5J) {
      (c5J = c5J || {})['src'] = c5J['src'] || 'wall_0';
      var c5K = new c3e({
        'x': c39,
        'z': c3b,
        'y': c3a + c3k / 0x2,
        'w': c3d / 0x2,
        'l': c3j / 0x2,
        'h': c3k / 0x2,
        'uid': this['objects']['length'],
        'src': c5J['src'],
        'noVis': c5J['noVis'],
        'noAmb': c5J['noAmb'],
        'health': c5J['health'],
        'respawnT': c5J['respawnT'],
        'respawnR': c5J['respawnR'],
        'transparent': c5J['transparent'],
        'complexMesh': c5J['xR'] || c5J['yR'] || c5J['zR'] || 'link_0' == c5J['src'],
        'ter': !0x0,
        'constant': c5J['constant'],
        'eventN': c5J['eventN'],
        'event': c5J['event'],
        'action': c5J['action'],
        'interface': c5J['interface'],
        'interfaceT': c5J['interfaceT']
      });
      if (c5J['interface'] && this['interfaces']['push'](c5K['uid']), c38 && !c5J['noVis']) {
        c5J['transparent'] = 'link_0' == c5J['src'] || 0x1 != c5J['opacity'], 'link_0' == c5J['src'] && (c5J['depthWrite'] = 0x1 == c5J['opacity'], c5J['alphaTest'] = c5J['transparent'] ? 0.02 : 0x0), c5J['vertexColors'] = c3c['VertexColors'], c5J['scale'] = null == c5J['scale'] ? 0x1 : c5J['scale'], c5J['shadows'] = !c5J['shadowsR'] && 0x1 == c5J['opacity'], c5J['noGroup'] = !!c5J['health'];
        var c5L = c38['addCube'](c39, c3a, c3b, c3d, c3k, c3j, [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c5J);
        c5J['health'] && !c5J['noCol'] && (c5K['meshRef'] = c5L);
      }
      this['objects']['push'](c5K);
    }, this['addAI'] = function(c38, c39, c3a, c3b, c3c) {
      c3b = c3b || {};
      var c3d = new c3e({
        'x': c38,
        'z': c3a,
        'y': c39 + h / 0x2,
        'w': 0x5,
        'l': 0x5,
        'h': 0xa,
        'd': c3c,
        'uid': this['objects']['length'],
        'classIndx': c3b['classIndx'],
        'respawnT': c3b['respawnT'],
        'respawnR': c3b['respawnR'],
        'skill': c3b['skill'],
        'hpMlt': c3b['hpMlt']
      });
      this['objects']['push'](c3d);
    }, this['addLightCone'] = function(c39, c3a, c3b, c3d, c3e, c3j, c3k) {
      (c3k = c3k || {})['src'] = 'lightcone_0', c38 && !c3k['noVis'] && (c3k['depthWrite'] = !0x1, c3k['scale'] = null == c3k['scale'] ? 0x1 : c3k['scale'], c3k['shadows'] = !0x1, c3k['side'] = c3c['DoubleSide'], c3k['blending'] = c3c['AdditiveBlending'], c3k['mat'] = c3c['MeshBasicMaterial'], c3k['vertexColors'] = c3c['VertexColors'], c38['addCone'](c39, c3a, c3b, c3d, c3j, c3e, c3k));
    }, this['addBlock'] = function(c39, c3a, c3b, c3d, c3j, c3k, c65, c66) {
      if ((c66 = c66 || {})['src'] = c66['src'] || 'wall_0', c66['noCol'] || this['objects']['push'](new c3e({
          'x': c39,
          'z': c3b,
          'y': c3a + c3k / 0x2,
          'w': c3d / 0x2,
          'l': c3j / 0x2,
          'h': c3k / 0x2,
          'uid': this['objects']['length'],
          's': c66['sound'],
          'src': c66['src'],
          'noVis': c66['noVis'],
          'noAmb': c66['noAmb'],
          'health': c66['health'],
          'respawnT': c66['respawnT'],
          'respawnR': c66['respawnR'],
          'transparent': c66['transparent'],
          'penetrable': c66['penetrable'],
          'isBorder': c66['isBorder'],
          'complexMesh': c66['xR'] || c66['yR'] || c66['zR'] || 'link_0' == c66['src'],
          'ter': !0x0,
          'trigger': c66['trig'],
          'interface': c66['interface']
        })), c66['interface'] && !c66['noCol'] && this['interfaces']['push'](this['objects']['length'] - 0x1), c38 && !c66['noVis']) {
        c66['transparent'] = 'link_0' == c66['src'] || 0x1 != c66['opacity'], 'link_0' == c66['src'] && (c66['depthWrite'] = 0x1 == c66['opacity'], c66['alphaTest'] = c66['transparent'] ? 0.02 : 0x0), c66['vertexColors'] = c3c['VertexColors'], c66['scale'] = null == c66['scale'] ? 0x1 : c66['scale'], c66['shadows'] = !c66['shadowsR'] && 0x1 == c66['opacity'], c66['noGroup'] = !!c66['health'];
        var c67 = c38['addCube'](c39, c3a, c3b, c3d, c3k, c3j, c65, c66);
        c66['health'] && !c66['noCol'] && (this['objects'][this['objects']['length'] - 0x1]['meshRef'] = c67);
      }
    }, this['addCanvas'] = function(c3a, c3b, c3d, c3e, c3j, c3k, c6e, c6f, c6g) {
      c3k = c3k || {}, c38 && (c3k['canvas'] = c39['createCanvasText'](0x2 * c3j, 0x2 * c3e, c3k['text'] || 'Hello\x20World', c3k['fontSize'] || 0xa, c3k['fcolr'] || '#000', c3k['bcolr'] || '#fff', c3k['noBVis'], c3k['tAlign'] || 0x0), c3k['transparent'] = !0x0, c3k['depthWrite'] = !0x0, c3k['alphaTest'] = 0.02, c3k['side'] = c3c['DoubleSide'], c38['addPlane'](c3a, c3b, c3d, c3j, c3e, c3k, c6e, (c6f || 0x0) + Math['PI'] / 0x2, c6g));
    }, this['addSpectateCam'] = function(c38, c39, c3a, c3b) {
      (c3b = c3b || {})['objLink'] = c3b['objLink'] || 0x0, this['spectateCams'][c3b['objLink']] || (this['spectateCams'][c3b['objLink']] = []), this['spectateCams'][c3b['objLink']]['push'](new c3e({
        'x': c38,
        'z': c3a,
        'y': c39 + 0x5,
        'xR': c3b['xR'],
        'yR': c3b['yR'],
        'zR': c3b['zR']
      }));
    }, this['addMesh'] = function(c3a, c3j, c3k, c6o, c6p, c6q, c6r, c6s) {
      if (c3j += c6q, (c6s = c6s || {})['noCol'] || this['objects']['push'](new c3e({
          'complexMesh': !!c3b && c3b[c6s['src']['toUpperCase']()]['complex'],
          'aoM': c3b && c3b[c6s['src']['toUpperCase']()]['aoMlt'] || 0x0,
          'propID': 0x0 <= c3d['propsH']['indexOf'](c6s['src']) ? c6s['src'] : null,
          'x': c3a,
          'z': c3k,
          'y': c3j,
          'w': c6p,
          'l': c6r,
          'h': c6q,
          'uid': this['objects']['length'],
          'ter': !0x0,
          'noVis': c6s['noVis'],
          'noAmb': c6s['noAmb'],
          'health': c6s['health'],
          'respawnT': c6s['respawnT'],
          'respawnR': c6s['respawnR'],
          'interface': c6s['interface']
        })), c6s['interface'] && !c6s['noCol'] && this['interfaces']['push'](this['objects']['length'] - 0x1), c3b && c3b[c6s['src']['toUpperCase']()]['transparent'] && (c3j += c39['randFloat'](-0.01, 0.01)), c38 && !c6s['noVis']) {
        var c6t = c38['loadMesh']({
          'src': c6s['src'] + '_0',
          'emissive': c3b[c6s['src']['toUpperCase']()]['emiss'] ? 0xffffff : null,
          'side': c3b[c6s['src']['toUpperCase']()]['doubleSide'] ? c3c['DoubleSide'] : c3c['FrontSide'],
          'transparent': c3b[c6s['src']['toUpperCase']()]['transparent'],
          'shadows': c3b[c6s['src']['toUpperCase']()]['castShadow'],
          'shadowsR': c3b[c6s['src']['toUpperCase']()]['receiveShadow'],
          'vertexColors': c3c['VertexColors'],
          'color': c6s['colr'] || 0xffffff,
          'noGroup': !!c6s['health']
        }, c3a, c3j, c3k, c6o, c3d[c6s['src'] + 'Scale'], c38['scene'], !c6s['health']);
        c6s['health'] && !c6s['noCol'] && (this['objects'][this['objects']['length'] - 0x1]['meshRef'] = c6t);
      }
    };
    var c6u = [];
    this['addNoisePlanes'] = function() {
      for (var c39 = 0x0; c39 < c6u['length']; ++c39) {
        c6u[c39][0x5]['objects'] = this['objects'];
        var c3a = c38['addPlane'](...c6u[c39]);
        0xa == c6u[c39]['length'] && (this['objects'][c6u[c39][0x9]]['meshRef'] = c3a);
      }
      c6u['length'] = 0x0;
    }, this['addPlane'] = function(c39, c3a, c3b, c3d, c3j, c3k, c6D, c6E, c6F) {
      if ((c3k = c3k || {})['noCol'] || this['objects']['push'](new c3e({
          'x': c39,
          'z': c3b,
          'y': c3a,
          'w': c3j,
          'l': c3d,
          'h': 0x0,
          'uid': this['objects']['length'],
          's': c3k['sound'],
          'health': c3k['health'],
          'respawnT': c3k['respawnT'],
          'respawnR': c3k['respawnR'],
          'transparent': c3k['transparent'],
          'penetrable': c3k['penetrable'],
          'noVis': c3k['noVis'],
          'noAmb': c3k['noAmb'],
          'interface': c3k['interface']
        })), c3k['interface'] && !c3k['noCol'] && this['interfaces']['push'](this['objects']['length'] - 0x1), c38 && !c3k['noVis']) {
        c3k['transparent'] = !0x0, c3k['side'] = c3c['DoubleSide'], c3k['vertexColors'] = c3c['VertexColors'], c3k['noGroup'] = !!c3k['health'], c3k['noise'] && (c3k['pinEdges'] = !0x0, c3k['margin'] = 0x5, c3k['tilesX'] = Math['round'](c3j / 0x5), c3k['tilesZ'] = Math['round'](c3d / 0x5));
        var c6G = [c39, c3a, c3b, c3j, c3d, c3k, c6D, (c6E || 0x0) + Math['PI'] / 0x2, c6F];
        if (c3k['noise']) c3k['health'] && !c3k['noCol'] && c6G['push'](this['objects']['length'] - 0x1), c6u['push'](c6G);
        else {
          var c6H = c38['addPlane'](...c6G);
          c3k['health'] && !c3k['noCol'] && (this['objects'][this['objects']['length'] - 0x1]['meshRef'] = c6H);
        }
      }
    }, this['pointInObjs'] = function(c38, c3a, c3b) {
      for (var c3c = 0x0; c3c < this['objects']['length']; ++c3c)
        if (!(c3j = this['objects'][c3c])['noVis'] && !c3j['complexMesh'] && !c3j['health'] && 0x0 > c3a['indexOf'](c3j['sid']) && c39['pointInBox3D'](c38[0x0], c38[0x1], c38[0x2], c3j, c3b || 0x0)) return !0x0;
      return !0x1;
    }, this['setMaxAO'] = function(c38, c39, c3a) {
      c38['maxAOS'] = c38['maxAOS'] || {}, c38['maxAOS'][c39['sid']] = Math['max'](c3a, c38['maxAOS'][c39['sid']] || 0x0), c39['maxAOS'] = c39['maxAOS'] || {}, c39['maxAOS'][c38['sid']] = Math['max'](c3a, c39['maxAOS'][c38['sid']] || 0x0);
    }, this['aosToAdd'] = {}, this['addAmbient'] = function(c38, c3a, c3b, c3c, c3e, c3j, c3k, c6u, c6X, c6Y, c6Z) {
      var c70 = !c6Y;
      if (c6Y)
        for (var c71 = 0x0; c71 < c6Y['length']; ++c71)
          if (c39['pointInBox3D'](c38, c3a, c3b, c6Y[c71], 0x2 * c3d['ambOff'])) {
            c70 = !0x0;
            break;
          } if (c70)
        if (c6Y) {
          var c72 = c6Y[0x0]['sid'] + '-' + c6Y[0x1]['sid'];
          this['aosToAdd'][c72] || (this['aosToAdd'][c72] = []), this['aosToAdd'][c72]['push']({
            'vals': [c38, c3a, c3b, c3c, c3e, c3j, c3k + c3d['ambOff'], c6u + c3d['ambOff'], c6X],
            'group': c6Z
          });
        } else this['addPlane'](c38, c3a, c3b, c3k, c6u, {
          'src': 'ambient_' + (c6X || 0x0),
          'euler': 'ZYX',
          'depthWrite': !0x1,
          'noCol': !0x0
        }, c3c, c3e, c3j);
    };
    var c73 = [
      ['g6-1-2', 'g4-1-2'],
      ['g5-1-2', 'g4-0-1'],
      ['g6-0-1', 'g3-1-2'],
      ['g5-0-1', 'g3-0-1'],
      ['g6-0-3', 'g2-0-3'],
      ['g5-0-3', 'g2-1-1'],
      ['g6-1-1', 'g1-0-3'],
      ['g5-1-1', 'g1-1-1'],
      ['g6-0-2', 'g1-1-0'],
      ['g5-0-2', 'g1-0-2'],
      ['g6-1-0', 'g2-1-0'],
      ['g5-1-0', 'g2-0-2'],
      ['g4-0-2', 'g1-0-0'],
      ['g3-0-2', 'g1-1-3'],
      ['g4-1-0', 'g2-0-0'],
      ['g3-1-0', 'g2-1-3'],
      ['g4-0-3', 'g2-1-2'],
      ['g3-0-3', 'g2-0-1'],
      ['g4-1-1', 'g1-1-2'],
      ['g3-1-1', 'g1-0-1'],
      ['g6-1-3', 'g3-0-0'],
      ['g5-1-3', 'g3-1-3'],
      ['g6-0-0', 'g4-0-0'],
      ['g5-0-0', 'g4-1-3']
    ];
    this['groupsMatch'] = function(c38, c39) {
      for (var c3a = 0x0; c3a < c73['length']; ++c3a)
        if (0x0 <= c73[c3a]['indexOf'](c38) && 0x0 <= c73[c3a]['indexOf'](c39)) return !0x0;
      return !0x1;
    }, this['clearAOGroup'] = function(c38) {
      for (var c39 = c38['length'] - 0x1; 0x0 <= c39; --c39) {
        c3j = c38[c39];
        for (var c3a = c38['length'] - 0x1; 0x0 <= c3a; --c3a)
          if (c3k = c38[c3a], !c3j['dontAdd'] && !c3k['dontAdd'] && c3j != c3k && this['groupsMatch'](c3j['group'], c3k['group'])) {
            c3j['vals'][0x6] + c3j['vals'][0x7] >= c3k['vals'][0x6] + c3k['vals'][0x7] ? c3k['dontAdd'] = !0x0 : c3j['dontAdd'] = !0x0;
            break;
          }
      }
    }, this['addPendingAOs'] = function() {
      for (var c38 in this['aosToAdd'])
        if (this['aosToAdd']['hasOwnProperty'](c38)) {
          this['clearAOGroup'](this['aosToAdd'][c38]);
          for (var c39 = 0x0; c39 < this['aosToAdd'][c38]['length']; ++c39) this['aosToAdd'][c38][c39]['dontAdd'] || this['addAmbient'](...this['aosToAdd'][c38][c39]['vals']);
        } this['aosToAdd'] = {};
    }, this['limitAmb'] = function(c38, c3a, c3b, c3c, c3d, c3e, c3j) {
      var c3k = [c39['cdv'][c3c]],
        c6u = [c39['cdv'][c3d]];
      return c38 = c3b == -Math['PI'] / 0x2 || c3b == Math['PI'] + Math['PI'] / 0x2 ? Math['min'](c38, (c3a[c3d] - Math['min'](c3e[c3d] - c3e[c6u], c3j[c3d] - c3j[c6u])) / 0x2) : c3b == Math['PI'] / 0x2 ? Math['min'](c38, (Math['max'](c3e[c3d] + c3e[c6u], c3j[c3d] + c3j[c6u]) - c3a[c3d]) / 0x2) : 0x0 == c3b ? Math['min'](c38, (Math['max'](c3e[c3c] + c3e[c3k], c3j[c3c] + c3j[c3k]) - c3a[c3c]) / 0x2) : Math['min'](c38, (c3a[c3c] - Math['min'](c3e[c3c] - c3e[c3k], c3j[c3c] - c3j[c3k])) / 0x2);
    }, this['resetAll'] = function() {
      this['aosToAdd'] = {};
      for (var c39 = 0x0; c39 < this['objects']['length']; ++c39) this['objects'][c39]['active'] = !this['objects'][c39]['startClosed'], this['objects'][c39]['startHealth'] && (this['objects'][c39]['health'] = this['objects'][c39]['startHealth']), this['objects'][c39]['meshRef'] && (this['objects'][c39]['meshRef']['visible'] = !this['objects'][c39]['startClosed']);
      c38 && c38['updateShadowMap']();
    }, this['removeAll'] = function() {
      this['objects']['length'] = 0x0, this['objectives']['length'] = 0x0, this['flags']['length'] = 0x0, this['pickups']['length'] = 0x0, this['teleporters']['length'] = 0x0, this['spectateCams'] = {};
    };
  };
}, function(c7m, c7n) {
  c7m['exports']['wheels'] = [{
    'name': 'Starter',
    'lab': {
      'nm': 'Any',
      'col': '#E040FB'
    },
    'price': 0x32,
    'rarities': [0x4b, 0x16, 0x3, 0x0, 0x0, 0x0]
  }, {
    'name': 'Elite',
    'lab': {
      'nm': 'Any',
      'col': '#E040FB'
    },
    'price': 0x64,
    'rarities': [0x32, 0x1e, 0xf, 0x5, 0x0, 0x0]
  }, {
    'name': 'Heroic',
    'lab': {
      'nm': 'Any',
      'col': '#E040FB'
    },
    'price': 0x1f4,
    'rarities': [0x0, 0x30, 0x23, 0xe, 2.5, 0.5]
  }, {
    'name': 'Hunter',
    'lab': {
      'nm': 'Snipers\x20Only!',
      'col': '#fab640'
    },
    'itemTypes': [0x0],
    'weaponType': 0x1,
    'price': 0x258,
    'rarities': [0x2b, 0x21, 0x11, 0x6, 0x1, 0x0]
  }, {
    'name': 'Attire',
    'lab': {
      'nm': 'Outfits\x20Only!',
      'col': '#ed4242'
    },
    'itemTypes': [0x1, 0x2],
    'price': 0x2ee,
    'rarities': [0x2b, 0x21, 0x10, 0x6, 0x2, 0x0]
  }, {
    'name': 'Free',
    'free': !0x0,
    'openURL': !0x0,
    'minLvl': 0x5,
    'price': 0x0,
    'priceT': 'Follow\x20for\x20a\x20free\x20Spin',
    'rarities': [0x2b, 0x21, 0x11, 0x6, 0x1, 0x0]
  }], c7m['exports']['types'] = ['weapons/weapon_', 'hats/hat_', 'body/body_', 'melee/melee_'], c7m['exports']['purchases'] = [{
    'val': 0x12c,
    'price': 0.99
  }, {
    'val': 0x258,
    'price': 1.79
  }, {
    'val': 0xa28,
    'price': 7.49
  }, {
    'val': 0x1b58,
    'price': 15.99
  }, {
    'val': 0x4e20,
    'price': 34.99,
    'tag': 'Popular!',
    'tagCol': '#ed4242'
  }, {
    'val': 0xea60,
    'tag': 'Best\x20Value!',
    'tagCol': '#E040FB',
    'price': 99.99
  }], c7m['exports']['rarities'] = [{
    'name': 'Uncommon',
    'rar': 0x3c,
    'color': '#b2f252'
  }, {
    'name': 'Rare',
    'rar': 0x28,
    'color': '#2196F3'
  }, {
    'name': 'Epic',
    'rar': 0x19,
    'color': '#E040FB'
  }, {
    'name': 'Legendary',
    'rar': 0xa,
    'color': '#FBC02D'
  }, {
    'name': 'Relic',
    'rar': 2.5,
    'color': '#ed4242'
  }, {
    'name': 'Contraband',
    'rar': 0.5,
    'color': '#292929'
  }, {
    'name': 'Unobtainable',
    'noSpin': !0x0,
    'rar': 0x0,
    'color': '#fff53d'
  }], c7m['exports']['previews'] = {
    1: {
      'xOff': -0x2,
      'yOff': -2.6,
      'zRota': 0.2,
      'scl': 0.001376794727638135
    },
    2: {
      'xOff': -1.4,
      'yOff': -0.8,
      'scl': 0.001148941748743716
    },
    3: {
      'xOff': 0x0,
      'yOff': 0x1,
      'scl': 0.000676917226130652
    },
    4: {
      'xOff': -1.5,
      'yOff': 0.5,
      'scl': 0.000940741507537686
    },
    5: {
      'xOff': -0.8,
      'yOff': 0.5,
      'scl': 0.00079312502512562
    },
    6: {
      'xOff': -0x1,
      'scl': 0.00099521137688442
    },
    7: {
      'xOff': -0x1,
      'yOff': -0.9,
      'scl': 0.001221518472361808
    },
    8: {
      'xOff': -0x1,
      'yOff': -0.6,
      'scl': 0.0012179208743718641
    },
    9: {
      'xOff': -1.2,
      'yOff': -0x1,
      'scl': 0.0010676876984924638
    },
    10: {
      'scl': 1.6
    },
    15: {
      'scl': 0.00098426884422111
    }
  }, c7m['exports']['skins'] = [{
    'name': 'Arctic\x20Hunt',
    'id': 0x0,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'Autumn\x20Hunt',
    'id': 0x1,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'Reticle\x20Blaze',
    'id': 0x2,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Digital\x20Hunt',
    'id': 0x3,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Moon\x20Dragon',
    'id': 0x4,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Scharfschütze',
    'id': 0x5,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'Woodland\x20Sniper',
    'id': 0x6,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Hazard\x20Reticle',
    'id': 0x7,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'Kodac\x20Reticle',
    'id': 0x8,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'Seafarer',
    'id': 0x9,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Acid\x20Breath',
    'glow': !0x0,
    'id': 0xa,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Trail\x20Scout',
    'id': 0xb,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Arctic\x20AK',
    'id': 0x0,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Autumn\x20AK',
    'id': 0x1,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Blaze\x20AK',
    'id': 0x2,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Digital\x20AK',
    'id': 0x3,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Luna\x20Dragon',
    'id': 0x4,
    'weapon': 0x2,
    'rarity': 0x3
  }, {
    'name': 'Flecken\x20AK',
    'id': 0x5,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Woodland\x20AK',
    'id': 0x6,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Hazard\x20AK',
    'id': 0x7,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Kodac\x20AK',
    'id': 0x8,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Seafarer\x20AK',
    'id': 0x9,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Trail\x20AK',
    'id': 0xa,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Arctic',
    'id': 0x0,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'SMG\x20Autumn',
    'id': 0x1,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'SMG\x20Blaze',
    'id': 0x2,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'SMG\x20Digital',
    'id': 0x3,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Flecken',
    'id': 0x4,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'SMG\x20Woodland',
    'id': 0x5,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Hazard',
    'id': 0x6,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'SMG\x20Kodac',
    'id': 0x7,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'SMG\x20Seafarer',
    'id': 0x8,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Trail',
    'id': 0x9,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'Arctic\x20Python',
    'id': 0x0,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'Autumn\x20Python',
    'id': 0x1,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'Blaze\x20Python',
    'id': 0x2,
    'weapon': 0x5,
    'rarity': 0x2
  }, {
    'name': 'Digital\x20Python',
    'id': 0x3,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Flecken\x20Python',
    'id': 0x4,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'Woodland',
    'id': 0x5,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Hazard\x20Python',
    'id': 0x6,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'Kodac\x20Python',
    'id': 0x7,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'Seafarer',
    'id': 0x8,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Trail\x20Python',
    'id': 0x9,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Arctic\x20Slug',
    'id': 0x0,
    'weapon': 0x6,
    'rarity': 0x1
  }, {
    'name': 'Autumn\x20Slug',
    'id': 0x1,
    'weapon': 0x6,
    'rarity': 0x1
  }, {
    'name': 'Twin\x20Blaze',
    'id': 0x2,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'SG\x20Digital',
    'id': 0x3,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'Flecken',
    'id': 0x4,
    'weapon': 0x6,
    'rarity': 0x1
  }, {
    'name': 'Woodland',
    'id': 0x5,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'Hazard\x20Slug',
    'id': 0x6,
    'weapon': 0x6,
    'rarity': 0x1
  }, {
    'name': 'Kodac\x20Slug',
    'id': 0x7,
    'weapon': 0x6,
    'rarity': 0x1
  }, {
    'name': 'Buccaneer',
    'id': 0x8,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'SG\x20Trail',
    'id': 0x9,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'Arctic\x20LMG',
    'id': 0x0,
    'weapon': 0x7,
    'rarity': 0x1
  }, {
    'name': 'Autumn\x20LMG',
    'id': 0x1,
    'weapon': 0x7,
    'rarity': 0x1
  }, {
    'name': 'Blaze\x20LMG',
    'id': 0x2,
    'weapon': 0x7,
    'rarity': 0x2
  }, {
    'name': 'Digital\x20LMG',
    'id': 0x3,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Flecken\x20LMG',
    'id': 0x4,
    'weapon': 0x7,
    'rarity': 0x1
  }, {
    'name': 'Woodland\x20LMG',
    'id': 0x5,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Hazard\x20LMG',
    'id': 0x6,
    'weapon': 0x7,
    'rarity': 0x1
  }, {
    'name': 'Kodac\x20LMG',
    'id': 0x7,
    'weapon': 0x7,
    'rarity': 0x1
  }, {
    'name': 'Seafarer\x20LMG',
    'id': 0x8,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Trail\x20LMG',
    'id': 0x9,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Arctic\x20Auto',
    'id': 0x0,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Autumn\x20Auto',
    'id': 0x1,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Blaze\x20Auto',
    'id': 0x2,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'Digital\x20Auto',
    'id': 0x3,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Flecken\x20Auto',
    'id': 0x4,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Woodland\x20Auto',
    'id': 0x5,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Hazard\x20Auto',
    'id': 0x6,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Kodac\x20Auto',
    'id': 0x7,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Seafarer\x20Auto',
    'id': 0x8,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Trail\x20Auto',
    'id': 0x9,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Mach\x20Auto',
    'id': 0xa,
    'creator': 'AtarSt',
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Arctic\x20RL',
    'id': 0x0,
    'weapon': 0x9,
    'rarity': 0x1
  }, {
    'name': 'Autumn\x20RL',
    'id': 0x1,
    'weapon': 0x9,
    'rarity': 0x1
  }, {
    'name': 'Blaze\x20RL',
    'id': 0x2,
    'weapon': 0x9,
    'rarity': 0x2
  }, {
    'name': 'Digital\x20RL',
    'id': 0x3,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': 'Flecken\x20RL',
    'id': 0x4,
    'weapon': 0x9,
    'rarity': 0x1
  }, {
    'name': 'Woodland\x20RL',
    'id': 0x5,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': 'Hazard\x20RL',
    'id': 0x6,
    'weapon': 0x9,
    'rarity': 0x1
  }, {
    'name': 'Kodac\x20RL',
    'id': 0x7,
    'weapon': 0x9,
    'rarity': 0x1
  }, {
    'name': 'Seafarer\x20RL',
    'id': 0x8,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': 'Trail\x20RL',
    'id': 0x9,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': '101\x20Skullbreaker',
    'id': 0xc,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Reticle\x20Faded',
    'id': 0xd,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Puma\x20Sniper',
    'id': 0xe,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Scoped\x20Elite',
    'id': 0xf,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Faded\x20AK',
    'id': 0xb,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Puma\x20AR',
    'id': 0xc,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'SMG\x20Fade',
    'id': 0xa,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Puma',
    'id': 0xb,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'Faded\x20Python',
    'id': 0xa,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Puma\x20Python',
    'id': 0xb,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'SG\x20Fade',
    'id': 0xa,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'Slug\x20Puma',
    'id': 0xb,
    'weapon': 0x6,
    'rarity': 0x1
  }, {
    'name': 'Faded\x20LMG',
    'id': 0xa,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Puma\x20LMG',
    'id': 0xb,
    'weapon': 0x7,
    'rarity': 0x1
  }, {
    'name': 'Faded\x20MMR',
    'id': 0xb,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Puma\x20MMR',
    'id': 0xc,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Faded\x20RTL',
    'id': 0xa,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': 'Puma\x20RTL',
    'id': 0xb,
    'weapon': 0x9,
    'rarity': 0x1
  }, {
    'name': 'Scoped\x20Carbon',
    'id': 0x10,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Carbon\x20AK',
    'id': 0xd,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Carbon',
    'id': 0xc,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'Carbon\x20Python',
    'id': 0xc,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'SG\x20Carbon',
    'id': 0xc,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'Carbon\x20LMG',
    'id': 0xc,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Carbon\x20MMR',
    'id': 0xd,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Carbon\x20RTL',
    'id': 0xc,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': 'Neon\x20Ripper',
    'id': 0xe,
    'glow': !0x0,
    'weapon': 0x2,
    'rarity': 0x4
  }, {
    'name': 'Top\x20Hat',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sitOff': 0.4,
    'yOff': -0x4,
    'id': 0x1,
    'rarity': 0x2
  }, {
    'name': 'SMG\x20Spitfire',
    'id': 0xd,
    'weapon': 0x4,
    'rarity': 0x3
  }, {
    'name': 'Cowboy\x20Hat',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sitOff': 0.4,
    'yOff': -0x3,
    'id': 0x0,
    'rarity': 0x0
  }, {
    'name': 'Flame\x20Tamer',
    'id': 0xd,
    'pulsT': 0.0015,
    'weapon': 0x5,
    'glow': !0x0,
    'rarity': 0x5
  }, {
    'name': 'Cool\x20Cap',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sitOff': 0.4,
    'yOff': -0x3,
    'xOff': 0x2,
    'id': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Jack\x20O\x27\x20Lantern',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.8,
    'glow': !0x0,
    'sclMlt': 1.4,
    'sitOff': 2.05,
    'yOff': -0x4,
    'id': 0x3,
    'rarity': 0x3
  }, {
    'name': 'Medic\x20Helmet',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.8,
    'sclMlt': 0x1,
    'sitOff': 0.65,
    'yOff': -2.5,
    'id': 0x4,
    'rarity': 0x2
  }, {
    'name': 'Neon\x20Reaver',
    'creator': 'Electrode_',
    'id': 0x11,
    'glow': !0x0,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Sun\x20Glasses',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.8,
    'sclMlt': 0x1,
    'sitOff': 2.3,
    'yOff': -0x5,
    'xOff': 0x2,
    'id': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Afro',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 0x2,
    'sclMlt': 0.9,
    'sitOff': 1.4,
    'yOff': -0x4,
    'id': 0x6,
    'rarity': 0x0
  }, {
    'name': 'Hard\x20Hat',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 0x3,
    'sitOff': 0.4,
    'yOff': -0x3,
    'id': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Zombie\x20Head',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.8,
    'glow': !0x0,
    'sclMlt': 1.2,
    'sitOff': 2.05,
    'yOff': -0x4,
    'id': 0x8,
    'rarity': 0x3
  }, {
    'name': 'Barbed\x20Rifle',
    'id': 0x12,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Blushed\x20Sniper',
    'id': 0x13,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'AWP\x20Mech',
    'id': 0x14,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'Olympus\x20Rifle',
    'id': 0x15,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Scoped\x20Tuscan',
    'id': 0x16,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'AWP\x20Pacemaker',
    'id': 0x17,
    'weapon': 0x1,
    'rarity': 0x4,
    'glow': !0x0
  }, {
    'name': 'AR\x20Wired',
    'id': 0xf,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Blushed\x20AK',
    'id': 0x10,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Mach\x20Rifle',
    'id': 0x11,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Olympus\x20Rifle',
    'id': 0x12,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'AR\x20Tuscan',
    'id': 0x13,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'SMG\x20Barbed',
    'id': 0xe,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'SMG\x20Blossom',
    'id': 0xf,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Machinist',
    'id': 0x10,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'SMG\x20Lazarus',
    'id': 0x11,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'SMG\x20Tuscan',
    'id': 0x12,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'Barbed\x20Python',
    'id': 0xe,
    'weapon': 0x5,
    'rarity': 0x2
  }, {
    'name': 'Blushed\x20Revolver',
    'id': 0xf,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Machinist\x20Python',
    'id': 0x10,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'REV\x20Olympus',
    'id': 0x11,
    'weapon': 0x5,
    'rarity': 0x2
  }, {
    'name': 'Tuscan\x20Revolver',
    'id': 0x12,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'Coach\x20Barb',
    'id': 0xd,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'Blossom',
    'id': 0xe,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'MD\x20Frag',
    'id': 0xf,
    'weapon': 0x6,
    'rarity': 0x1
  }, {
    'name': 'SG\x20Olympus',
    'id': 0x10,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'SG\x20Tuscan',
    'id': 0x11,
    'weapon': 0x6,
    'rarity': 0x1
  }, {
    'name': 'Blushed\x20LMG',
    'id': 0xd,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Machinist\x20LMG',
    'id': 0xe,
    'weapon': 0x7,
    'rarity': 0x1
  }, {
    'name': 'Olympus\x20LMG',
    'id': 0xf,
    'weapon': 0x7,
    'rarity': 0x2
  }, {
    'name': 'Tuscan\x20LMG',
    'id': 0x10,
    'weapon': 0x7,
    'rarity': 0x1
  }, {
    'name': 'Barbed\x20Auto',
    'id': 0xe,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'Blushed\x20MMA',
    'id': 0xf,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Auto\x20Machinist',
    'id': 0x10,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Olympus\x20MMA',
    'id': 0x11,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'Tuscan\x20MMA',
    'id': 0x12,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Barbed\x20Launcher',
    'id': 0xd,
    'weapon': 0x9,
    'rarity': 0x2
  }, {
    'name': 'Blushed\x20Launcher',
    'id': 0xe,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': 'Machinist\x20Launcher',
    'id': 0xf,
    'weapon': 0x9,
    'rarity': 0x1
  }, {
    'name': 'Olympus\x20Launcher',
    'id': 0x10,
    'weapon': 0x9,
    'rarity': 0x2
  }, {
    'name': 'Tuscan\x20Launcher',
    'id': 0x11,
    'weapon': 0x9,
    'rarity': 0x1
  }, {
    'name': 'Omen',
    'glow': !0x0,
    'id': 0x18,
    'creator': 'Zino',
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Scoped\x20Moss',
    'id': 0x19,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Swamped\x20Scope',
    'id': 0x1a,
    'weapon': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Tiger\x20Bolt',
    'id': 0x1b,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Zebra\x20Bolt',
    'id': 0x1c,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Necron\x20Bolt',
    'id': 0x1d,
    'weapon': 0x1,
    'rarity': 0x4,
    'glow': !0x0
  }, {
    'name': 'Lava\x20Bolt',
    'id': 0x1e,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Sky\x20Bolt',
    'id': 0x1f,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'AWP\x20Iris',
    'id': 0x20,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'Bolt\x20Wanderer',
    'id': 0x21,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'Mossy\x20Rifle',
    'id': 0x14,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Swamped\x20AK',
    'id': 0x15,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Tiger\x20Rifle',
    'id': 0x16,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Zebra\x20Rifle',
    'id': 0x17,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Plasma\x20Rifle',
    'id': 0x18,
    'weapon': 0x2,
    'rarity': 0x4,
    'glow': !0x0
  }, {
    'name': 'Lava\x20Rifle',
    'id': 0x19,
    'weapon': 0x2,
    'glow': !0x0,
    'rarity': 0x3
  }, {
    'name': 'Sky\x20Rifle',
    'id': 0x1a,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Bark\x20AK',
    'id': 0x1b,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Rifle\x20Wanderer',
    'id': 0x1c,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Growth',
    'id': 0x13,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'SMG\x20Marsh',
    'id': 0x14,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Tigris',
    'id': 0x15,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'SMG\x20Safari',
    'id': 0x16,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'Rapid\x20Plasma',
    'id': 0x17,
    'weapon': 0x4,
    'rarity': 0x4,
    'glow': !0x0
  }, {
    'name': 'Lava\x20SMG',
    'id': 0x18,
    'weapon': 0x4,
    'rarity': 0x3,
    'glow': !0x0
  }, {
    'name': 'UMP\x20Atmos',
    'id': 0x19,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'Birch\x20SMG',
    'id': 0x1a,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Wanderer',
    'id': 0x1b,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'Mossy\x20Python',
    'id': 0x13,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'Swamped\x20Revolver',
    'id': 0x14,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Tiger\x20Python',
    'id': 0x15,
    'weapon': 0x5,
    'rarity': 0x2
  }, {
    'name': 'Zebra\x20Python',
    'id': 0x16,
    'weapon': 0x5,
    'rarity': 0x2
  }, {
    'name': 'Venomous',
    'creator': 'Rengar',
    'glow': !0x0,
    'id': 0x17,
    'weapon': 0x5,
    'rarity': 0x3
  }, {
    'name': 'Lava\x20Revolver',
    'id': 0x18,
    'weapon': 0x5,
    'rarity': 0x3
  }, {
    'name': 'Sky\x20Python',
    'id': 0x19,
    'weapon': 0x5,
    'rarity': 0x2,
    'glow': !0x0
  }, {
    'name': 'Bark\x20Python',
    'id': 0x1a,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Wanderer\x20Python',
    'id': 0x1b,
    'weapon': 0x5,
    'rarity': 0x0
  }, {
    'name': 'Gabrand',
    'id': 0x13,
    'weapon': 0x6,
    'rarity': 0x1
  }, {
    'name': 'Tennessee',
    'id': 0x14,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'SG\x20Tigris',
    'id': 0x15,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'Safaris',
    'id': 0x16,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'Neuromance',
    'id': 0x17,
    'weapon': 0x6,
    'rarity': 0x4,
    'glow': !0x0
  }, {
    'name': 'Anatomis',
    'id': 0x18,
    'weapon': 0x6,
    'rarity': 0x3,
    'glow': !0x0
  }, {
    'name': 'Sky\x20Pump',
    'id': 0x19,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'Bark\x20Slug',
    'id': 0x1a,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'Slug\x20Wanderer',
    'id': 0x1b,
    'weapon': 0x6,
    'rarity': 0x0
  }, {
    'name': 'Mossy\x20LMG',
    'id': 0x11,
    'weapon': 0x7,
    'rarity': 0x1
  }, {
    'name': 'Swamped\x20LMG',
    'id': 0x12,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Tiger\x20LMG',
    'id': 0x13,
    'weapon': 0x7,
    'rarity': 0x2
  }, {
    'name': 'Zebra\x20LMG',
    'id': 0x14,
    'weapon': 0x7,
    'rarity': 0x2
  }, {
    'name': 'Heavy\x20Plasma',
    'id': 0x15,
    'weapon': 0x7,
    'rarity': 0x4,
    'glow': !0x0
  }, {
    'name': 'Lava\x20LMG',
    'id': 0x16,
    'weapon': 0x7,
    'rarity': 0x3
  }, {
    'name': 'Sky\x20LMG',
    'id': 0x17,
    'weapon': 0x7,
    'rarity': 0x2,
    'glow': !0x0
  }, {
    'name': 'Bark\x20LMG',
    'id': 0x18,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'LMG\x20Wanderer',
    'id': 0x19,
    'weapon': 0x7,
    'rarity': 0x0
  }, {
    'name': 'Overgrowth',
    'id': 0x13,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Marshland',
    'id': 0x14,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Tiger\x20MMA',
    'id': 0x15,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'Zebra\x20MMA',
    'id': 0x16,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'MMA\x20Plasma',
    'id': 0x17,
    'weapon': 0x8,
    'rarity': 0x4,
    'glow': !0x0
  }, {
    'name': 'Magnis',
    'id': 0x18,
    'weapon': 0x8,
    'rarity': 0x3,
    'glow': !0x0
  }, {
    'name': 'Sky\x20AUTO',
    'id': 0x19,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'Bark\x20AUTO',
    'id': 0x1a,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'MMA\x20Wanderer',
    'id': 0x1b,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Mossy\x20Rocket',
    'id': 0x12,
    'weapon': 0x9,
    'rarity': 0x1
  }, {
    'name': 'Swamped\x20Launcher',
    'id': 0x13,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': 'Tiger\x20Rocket',
    'id': 0x14,
    'weapon': 0x9,
    'rarity': 0x2
  }, {
    'name': 'Zebra\x20Launcher',
    'id': 0x15,
    'weapon': 0x9,
    'rarity': 0x2
  }, {
    'name': 'Plasma\x20Nuke',
    'id': 0x16,
    'weapon': 0x9,
    'rarity': 0x4,
    'glow': !0x0
  }, {
    'name': 'Lava\x20Rocket',
    'id': 0x17,
    'weapon': 0x9,
    'rarity': 0x3
  }, {
    'name': 'Sky\x20Launcher',
    'id': 0x18,
    'weapon': 0x9,
    'rarity': 0x2
  }, {
    'name': 'Bark\x20Launcher',
    'id': 0x19,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': 'Wanderer\x20Rocket',
    'id': 0x1a,
    'weapon': 0x9,
    'rarity': 0x0
  }, {
    'name': 'Purple\x20Cap',
    'id': 0x2,
    'tex': 0x1,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sitOff': 0.4,
    'yOff': -0x3,
    'xOff': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Bear\x20Mask',
    'id': 0x9,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sclMlt': 1.3,
    'sitOff': 2.05,
    'yOff': -0x4,
    'xOff': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Panda\x20Mask',
    'id': 0x9,
    'tex': 0x1,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sclMlt': 1.3,
    'sitOff': 2.05,
    'yOff': -0x4,
    'xOff': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Brown\x20Beard',
    'id': 0xb,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.8,
    'sclMlt': 0.9,
    'sitOff': 0x2,
    'yOff': -0x3,
    'rarity': 0x2
  }, {
    'name': 'Blonde\x20Beard',
    'id': 0xb,
    'tex': 0x1,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.8,
    'sclMlt': 0.9,
    'sitOff': 0x2,
    'yOff': -0x3,
    'rarity': 0x2
  }, {
    'name': 'Skull\x20Mask',
    'id': 0xc,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 0x3,
    'glow': !0x0,
    'sclMlt': 1.05,
    'sitOff': 2.5,
    'sitOffZ': 1.1,
    'yOff': -4.5,
    'xOff': -0x3,
    'tex': 0x0,
    'rarity': 0x3
  }, {
    'name': 'Red\x20Beanie',
    'id': 0xd,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 0x3,
    'sclMlt': 1.1,
    'sitOff': 0.4,
    'yOff': -0x3,
    'tex': 0x0,
    'rarity': 0x0
  }, {
    'name': 'Blue\x20Beanie',
    'id': 0xd,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 0x3,
    'sclMlt': 1.1,
    'sitOff': 0.4,
    'yOff': -0x3,
    'tex': 0x1,
    'rarity': 0x0
  }, {
    'name': 'Krunk\x20Headset',
    'id': 0xe,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 0x2,
    'sclMlt': 1.1,
    'sitOff': 1.4,
    'yOff': -0x4,
    'rarity': 0x2
  }, {
    'name': 'Cherry\x20Headset',
    'id': 0xe,
    'type': 0x1,
    'keyW': 'Head',
    'tex': 0x1,
    'scl': 0x2,
    'sclMlt': 1.1,
    'sitOff': 1.4,
    'yOff': -0x4,
    'rarity': 0x2
  }, {
    'name': 'Demonic\x20Wings',
    'id': 0x0,
    'type': 0x2,
    'keyW': 'Back',
    'glow': !0x0,
    'scl': 3.5,
    'sclMlt': 0x3,
    'xOff': -1.5,
    'sitOff': -1.3,
    'sitOffZ': -1.4,
    'yOff': -0x2,
    'rarity': 0x4
  }, {
    'name': 'Bass\x20Guitar',
    'id': 0x1,
    'type': 0x2,
    'keyW': 'Back',
    'scl': 0x4,
    'sclMlt': 3.8,
    'sitOff': -1.3,
    'sitOffZ': -0x1,
    'yOff': -0x2,
    'rarity': 0x2
  }, {
    'name': 'Samurai\x20Blades',
    'id': 0x2,
    'type': 0x2,
    'keyW': 'Back',
    'glow': !0x0,
    'scl': 0.00048112055276382,
    'sclMlt': 0.000406279577889448,
    'sitOff': -1.3,
    'sitOffZ': -0.95,
    'yOff': -0x1,
    'xOff': -0.5,
    'rarity': 0x3
  }, {
    'name': 'Blood\x20Harvest',
    'id': 0x3,
    'type': 0x2,
    'keyW': 'Back',
    'glow': !0x0,
    'scl': 5.1,
    'sclMlt': 0x5,
    'sitOff': -1.3,
    'sitOffZ': -0.95,
    'yOff': -0x1,
    'rarity': 0x3
  }, {
    'name': 'Panda\x20Body',
    'id': 0x4,
    'type': 0x2,
    'keyW': 'Back',
    'scl': 2.1,
    'sclMlt': 1.3,
    'sitOff': 2.2,
    'sitOffZ': 0x0,
    'yOff': -0x5,
    'rarity': 0x3
  }, {
    'name': 'Bear\x20Body',
    'id': 0x4,
    'tex': 0x1,
    'type': 0x2,
    'keyW': 'Back',
    'scl': 2.1,
    'sclMlt': 1.3,
    'sitOff': 2.2,
    'sitOffZ': 0x0,
    'yOff': -0x5,
    'rarity': 0x3
  }, {
    'name': 'Angelic\x20Wings',
    'id': 0x5,
    'type': 0x2,
    'keyW': 'Back',
    'glow': !0x0,
    'scl': 3.5,
    'sclMlt': 3.6,
    'xOff': -1.5,
    'sitOff': -1.3,
    'sitOffZ': -1.4,
    'yOff': -0x2,
    'rarity': 0x4
  }, {
    'name': 'Ninja\x20Mask',
    'id': 0xf,
    'glow': !0x0,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sclMlt': 1.1,
    'sitOff': 2.05,
    'yOff': -0x4,
    'xOff': 0x0,
    'rarity': 0x3
  }, {
    'name': 'Halo',
    'id': 0x10,
    'glow': !0x0,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 3.5,
    'sclMlt': 1.1,
    'sitOff': -0.65,
    'yOff': -0x1,
    'rarity': 0x3
  }, {
    'name': 'Welder\x20Mask',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sitOff': 2.1,
    'yOff': -0x3,
    'xOff': 0x1,
    'id': 0x11,
    'rarity': 0x1
  }, {
    'name': 'Diver\x20Goggles',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sclMlt': 0.9,
    'sitOff': 0x1,
    'yOff': -0x1,
    'id': 0x12,
    'rarity': 0x1
  }, {
    'name': 'Mad\x20Cap',
    'type': 0x1,
    'keyW': 'Head',
    'tex': 0x2,
    'scl': 2.5,
    'sitOff': 0.4,
    'yOff': -0x3,
    'xOff': 0x2,
    'id': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Ace\x20Cap',
    'type': 0x1,
    'keyW': 'Head',
    'tex': 0x3,
    'scl': 2.5,
    'sitOff': 0.4,
    'yOff': -0x3,
    'xOff': 0x2,
    'id': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Ice\x20Cap',
    'type': 0x1,
    'keyW': 'Head',
    'tex': 0x4,
    'scl': 2.5,
    'sitOff': 0.4,
    'yOff': -0x3,
    'xOff': 0x2,
    'id': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Soldier\x20Pack',
    'id': 0x6,
    'type': 0x2,
    'keyW': 'Back',
    'glow': !0x0,
    'scl': 2.6,
    'sclMlt': 1.8,
    'xOff': 0x1,
    'sitOff': 1.3,
    'sitOffZ': -1.75,
    'yOff': -0x5,
    'rarity': 0x1
  }, {
    'name': 'Robo\x20Wings',
    'id': 0x7,
    'type': 0x2,
    'keyW': 'Back',
    'glow': !0x0,
    'scl': 0x5,
    'sclMlt': 3.9,
    'xOff': -3.5,
    'sitOff': -1.3,
    'sitOffZ': -0.75,
    'yOff': -0x4,
    'rarity': 0x4
  }, {
    'name': 'Basket',
    'id': 0x8,
    'type': 0x2,
    'keyW': 'Back',
    'scl': 3.5,
    'sclMlt': 0x2,
    'xOff': -1.5,
    'sitOff': 0.75,
    'sitOffZ': -0.8,
    'yOff': -0x4,
    'rarity': 0x1
  }, {
    'name': 'Baby\x20Panda',
    'id': 0x9,
    'type': 0x2,
    'keyW': 'Back',
    'scl': 3.5,
    'sclMlt': 0x2,
    'xOff': 0x1,
    'sitOff': 0.75,
    'sitOffZ': -0.8,
    'yOff': -0x5,
    'xRot': Math['PI'],
    'rarity': 0x3
  }, {
    'name': 'Sturm\x20Helmet',
    'type': 0x1,
    'keyW': 'Head',
    'tex': 0x1,
    'scl': 2.8,
    'sclMlt': 0x1,
    'sitOff': 0.65,
    'yOff': -2.5,
    'id': 0x4,
    'rarity': 0x1
  }, {
    'name': 'Brown\x20Afro',
    'type': 0x1,
    'keyW': 'Head',
    'tex': 0x1,
    'scl': 0x2,
    'sclMlt': 0.9,
    'sitOff': 1.4,
    'yOff': -0x4,
    'id': 0x6,
    'rarity': 0x0
  }, {
    'name': 'Acid\x20Skull',
    'id': 0xc,
    'type': 0x1,
    'keyW': 'Head',
    'tex': 0x1,
    'scl': 0x3,
    'glow': !0x0,
    'sclMlt': 1.05,
    'sitOff': 2.5,
    'sitOffZ': 1.1,
    'yOff': -4.5,
    'xOff': -0x3,
    'rarity': 0x3
  }, {
    'name': 'Uranium',
    'type': 0x1,
    'keyW': 'Head',
    'tex': 0x1,
    'scl': 2.5,
    'sitOff': 2.1,
    'yOff': -0x3,
    'xOff': 0x1,
    'id': 0x11,
    'rarity': 0x2
  }, {
    'name': 'Panda\x20King',
    'id': 0x13,
    'glow': !0x0,
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sclMlt': 1.3,
    'sitOff': 2.05,
    'yOff': -0x4,
    'xOff': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Kolt\x20Rifle',
    'creator': 'iSpy',
    'id': 0x23,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Pace\x20Dore',
    'id': 0x22,
    'glow': !0x0,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Shot\x20Element',
    'creator': 'Electrode_',
    'glow': !0x0,
    'id': 0x1c,
    'weapon': 0x6,
    'rarity': 0x3
  }, {
    'name': 'Warp\x20Sequence',
    'creator': 'Electrode_',
    'id': 0x1c,
    'glow': !0x0,
    'weapon': 0x4,
    'rarity': 0x4
  }, {
    'name': 'Radioactive',
    'creator': 'Electrode_',
    'glow': !0x0,
    'id': 0x1d,
    'weapon': 0x5,
    'rarity': 0x4
  }, {
    'name': 'Targeted',
    'creator': 'Subza',
    'glow': !0x0,
    'id': 0x1c,
    'weapon': 0x5,
    'rarity': 0x3
  }, {
    'name': 'Robot\x20Helmet',
    'type': 0x1,
    'keyW': 'Head',
    'glow': !0x0,
    'scl': 2.4,
    'sclMlt': 0x1,
    'sitOff': 0x2,
    'yOff': -3.4,
    'id': 0x14,
    'rarity': 0x3
  }, {
    'name': 'Knight\x20Helmet',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.3,
    'sclMlt': 0x1,
    'sitOff': 0x2,
    'yOff': -3.2,
    'id': 0x15,
    'rarity': 0x3
  }, {
    'name': 'Cat\x20Ears',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sclMlt': 1.2,
    'sitOff': 1.65,
    'yOff': -3.2,
    'id': 0x16,
    'rarity': 0x2
  }, {
    'name': 'Snowman',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.2,
    'sclMlt': 0x1,
    'sitOff': 2.05,
    'yOff': -3.2,
    'id': 0x17,
    'rarity': 0x2
  }, {
    'name': 'Trendy\x20Biker',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.2,
    'sclMlt': 0x1,
    'sitOff': 1.8,
    'yOff': -3.2,
    'id': 0x18,
    'rarity': 0x3
  }, {
    'name': 'Golden\x20Crown',
    'type': 0x1,
    'keyW': 'Head',
    'glow': !0x0,
    'scl': 2.4,
    'sclMlt': 0x1,
    'sitOff': 0.65,
    'yOff': -3.2,
    'id': 0x19,
    'rarity': 0x3
  }, {
    'name': 'Master\x20Drinker',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.4,
    'sclMlt': 0x1,
    'sitOff': 0.65,
    'yOff': -2.7,
    'id': 0x1a,
    'rarity': 0x3
  }, {
    'name': 'Pig\x20Head',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.5,
    'sclMlt': 0x1,
    'sitOff': 2.05,
    'yOff': -3.2,
    'id': 0x1b,
    'rarity': 0x3
  }, {
    'name': 'Red\x20Bandana',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.2,
    'sclMlt': 0x1,
    'sitOff': 1.6,
    'yOff': -3.2,
    'id': 0x1c,
    'rarity': 0x1
  }, {
    'name': 'Sheriff',
    'type': 0x1,
    'keyW': 'Head',
    'scl': 2.2,
    'sclMlt': 0x1,
    'sitOff': 2.05,
    'yOff': -3.2,
    'id': 0x1d,
    'rarity': 0x4
  }, {
    'name': 'Bandit',
    'type': 0x1,
    'keyW': 'Head',
    'glow': !0x0,
    'scl': 2.2,
    'sclMlt': 0x1,
    'sitOff': 2.05,
    'yOff': -3.2,
    'id': 0x1e,
    'rarity': 0x4
  }, {
    'name': 'Vlaine',
    'creator': 'Hoodgail',
    'id': 0x24,
    'weapon': 0x1,
    'rarity': 0x1
  }, {
    'name': 'AWP\x20Supersport',
    'creator': 'Kitter',
    'id': 0x25,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Reine',
    'id': 0x26,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Melted',
    'glow': !0x0,
    'id': 0x27,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Viper',
    'glow': !0x0,
    'id': 0x28,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Razor',
    'glow': !0x0,
    'id': 0x29,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Lazor',
    'id': 0x1d,
    'glow': !0x0,
    'weapon': 0x2,
    'rarity': 0x4
  }, {
    'name': 'Uzera',
    'creator': 'Hoodgail',
    'id': 0x2,
    'glow': !0x0,
    'weapon': 0xa,
    'rarity': 0x4
  }, {
    'name': 'Tazor',
    'creator': 'Hoodgail',
    'glow': !0x0,
    'id': 0x7,
    'weapon': 0xa,
    'rarity': 0x3
  }, {
    'name': 'Dual\x20Woodland',
    'id': 0x0,
    'weapon': 0xa,
    'rarity': 0x1
  }, {
    'name': 'Flecken\x20Uzi',
    'id': 0x1,
    'weapon': 0xa,
    'rarity': 0x1
  }, {
    'name': 'Dual\x20Seafarer',
    'id': 0x3,
    'weapon': 0xa,
    'rarity': 0x2
  }, {
    'name': 'Rapid\x20Digital',
    'id': 0x4,
    'weapon': 0xa,
    'rarity': 0x1
  }, {
    'name': 'Sap\x20Uzi',
    'id': 0x5,
    'weapon': 0xa,
    'rarity': 0x0
  }, {
    'name': 'Torn\x20Dual',
    'id': 0x6,
    'weapon': 0xa,
    'rarity': 0x1
  }, {
    'name': 'Haste',
    'glow': !0x0,
    'id': 0x2a,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Leine',
    'creator': 'Hoodgail',
    'id': 0x2b,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Lore',
    'glow': !0x0,
    'id': 0x2c,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Reaver',
    'glow': !0x0,
    'id': 0x2d,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Splixen',
    'glow': !0x0,
    'id': 0x2e,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'AWP\x20Stream',
    'creator': 'Electrode_',
    'glow': !0x0,
    'id': 0x2f,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Circuit',
    'creator': 'Electrode_',
    'glow': !0x0,
    'id': 0x1e,
    'weapon': 0x2,
    'rarity': 0x4
  }, {
    'name': 'SMG\x20Iris',
    'id': 0x1d,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'SMG\x20Venom',
    'id': 0x1e,
    'weapon': 0x4,
    'rarity': 0x2,
    'glow': !0x0
  }, {
    'name': 'SMG\x20Wingman',
    'id': 0x1f,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'x0n-voX',
    'creator': '???',
    'pat': 0x0,
    'tex': 'weapons/pat/0',
    'dot': 'dot_1',
    'sameGlow': !0x0,
    'movT': 0.0001,
    'weapon': 0x4,
    'rarity': 0x5
  }, {
    'name': '1Ad-dA0',
    'creator': '???',
    'pat': 0x0,
    'tex': 'weapons/pat/0',
    'dot': 'dot_1',
    'sameGlow': !0x0,
    'movT': 0.0001,
    'weapon': 0x2,
    'rarity': 0x5
  }, {
    'name': 'Raynb0w',
    'creator': '???',
    'pat': 0x1,
    'tex': 'weapons/pat/1',
    'dot': 'dot_1',
    'sameGlow': !0x0,
    'movT': 0.0015,
    'weapon': 0x2,
    'rarity': 0x5
  }, {
    'name': 'Raynb0w',
    'creator': '???',
    'pat': 0x1,
    'tex': 'weapons/pat/1',
    'dot': 'dot_1',
    'sameGlow': !0x0,
    'movT': 0.0015,
    'weapon': 0x4,
    'rarity': 0x5
  }, {
    'name': 'UMP\x20Saphire',
    'id': 0x20,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'UMP\x20Jade',
    'id': 0x21,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'UMP\x20Plexus',
    'id': 0x22,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'UMP\x20Lapis',
    'id': 0x23,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'Perplex',
    'id': 0x24,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'UMP\x20Torpe',
    'id': 0x25,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Como',
    'id': 0x26,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Liquid',
    'id': 0x27,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'Clementine',
    'id': 0x28,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'Dropper',
    'id': 0x29,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'SMG\x20Auburn',
    'id': 0x2a,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'UMP\x20Laurel',
    'id': 0x2b,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'UMP\x20Crimson',
    'id': 0x2c,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'UMP\x20Azure',
    'id': 0x2d,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'Laguna',
    'id': 0x2e,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'UMP\x20Cygenta',
    'id': 0x2f,
    'weapon': 0x4,
    'rarity': 0x1
  }, {
    'name': 'UMP\x20Cygentro',
    'id': 0x30,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'Chartreuse',
    'id': 0x31,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'UMP\x20Tortobe',
    'id': 0x32,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'UMP\x20Octo',
    'id': 0x33,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'UMP\x20Versate',
    'id': 0x34,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'SMG\x20Purpur',
    'id': 0x35,
    'weapon': 0x4,
    'rarity': 0x2
  }, {
    'name': 'Leaf',
    'id': 0x36,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'Flame',
    'id': 0x37,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'Aqua',
    'id': 0x38,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'Gravel',
    'id': 0x39,
    'weapon': 0x4,
    'rarity': 0x0
  }, {
    'name': 'AR\x20Saphire',
    'id': 0x1f,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'AR\x20Jade',
    'id': 0x20,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'AR\x20Plexus',
    'id': 0x21,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'AR\x20Lapis',
    'id': 0x22,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Perplex',
    'id': 0x23,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Trople',
    'id': 0x24,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'AR\x20Altis',
    'id': 0x25,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Liquid',
    'id': 0x26,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Clementine',
    'id': 0x27,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Dropper',
    'id': 0x28,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Laurel',
    'id': 0x29,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Crimson',
    'id': 0x2a,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Azure',
    'id': 0x2b,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Laguna',
    'id': 0x2c,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Cygenta',
    'id': 0x2d,
    'weapon': 0x2,
    'rarity': 0x1
  }, {
    'name': 'Cygento',
    'id': 0x2e,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Chartreuse',
    'id': 0x2f,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Tortobe',
    'id': 0x30,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'AK\x20Octo',
    'id': 0x31,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Versate',
    'id': 0x32,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Purpur',
    'id': 0x33,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Leaf',
    'id': 0x34,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Flame',
    'id': 0x35,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Aqua',
    'id': 0x36,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Gravel',
    'id': 0x37,
    'weapon': 0x2,
    'rarity': 0x0
  }, {
    'name': 'Saphire',
    'id': 0x1c,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Jade',
    'id': 0x1d,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Plexus',
    'id': 0x1e,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Lapis',
    'id': 0x1f,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Perplexum',
    'id': 0x20,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Torped',
    'id': 0x21,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Commo',
    'id': 0x22,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'MMA\x20Liquid',
    'id': 0x23,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Dropper',
    'id': 0x24,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'MMA\x20Auburn',
    'id': 0x25,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'MMA\x20Laurel',
    'id': 0x26,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'MMA\x20Crimson',
    'id': 0x27,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'MMA\x20Azure',
    'id': 0x28,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'MMA\x20Laguna',
    'id': 0x29,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'MMA\x20Cygneta',
    'id': 0x2a,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'MMA\x20Cygneto',
    'id': 0x2b,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'M14\x20Chartreuse',
    'id': 0x2c,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'MMA\x20Tortobe',
    'id': 0x2d,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'MMA\x20Octo',
    'id': 0x2e,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'MMA\x20Versate',
    'id': 0x2f,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'MMA\x20Purpur',
    'id': 0x30,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'Nature',
    'id': 0x31,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Flame',
    'id': 0x32,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Aqua',
    'id': 0x33,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Earth',
    'id': 0x34,
    'weapon': 0x8,
    'rarity': 0x0
  }, {
    'name': 'Black\x20Ice',
    'creator': 'Electrode_',
    'id': 0x35,
    'weapon': 0x8,
    'rarity': 0x2
  }, {
    'name': 'Mach\x203',
    'creator': 'Jytesh',
    'id': 0x36,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Bloodripper',
    'creator': 'Jytesh',
    'id': 0x37,
    'weapon': 0x8,
    'rarity': 0x1
  }, {
    'name': 'Theta',
    'creator': 'Floatingpoint',
    'seas': 0x2,
    'id': 0x30,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Raynb0w',
    'creator': '???',
    'pat': 0x1,
    'tex': 'weapons/pat/1',
    'dot': 'dot_1',
    'sameGlow': !0x0,
    'movT': 0.0015,
    'weapon': 0x1,
    'rarity': 0x5
  }, {
    'name': 'Diablo\x20Wings',
    'id': 0xa,
    'type': 0x2,
    'keyW': 'Back',
    'scl': 0.0005593478391959849,
    'sclMlt': 0.0006552360402010109,
    'xOff': -0x3,
    'sitOff': -1.3,
    'sitOffZ': -1.4,
    'yOff': -0x2,
    'rarity': 0x4
  }, {
    'name': 'AK\x20Gold\x20Rush',
    'creator': '_irizu',
    'id': 0x38,
    'weapon': 0x2,
    'rarity': 0x3,
    'seas': 0x2
  }, {
    'name': 'AK\x20Mortal',
    'creator': '_irizu',
    'glow': !0x0,
    'id': 0x39,
    'weapon': 0x2,
    'rarity': 0x4
  }, {
    'name': 'nV\x20Dragon',
    'creator': 'nightly-build7',
    'id': 0x33,
    'weapon': 0x1,
    'rarity': 0x3
  }, {
    'name': 'Cherry\x20Blossom',
    'creator': 'jonschmiddy',
    'id': 0x32,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Vapormoon',
    'creator': 'jonschmiddy',
    'id': 0x3a,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Tesselate',
    'creator': 'jonschmiddy',
    'id': 0x3b,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Polydrive',
    'creator': 'Ziggy',
    'id': 0x31,
    'weapon': 0x1,
    'rarity': 0x2
  }, {
    'name': 'Safran',
    'id': 0x1d,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'Purple\x20Rain',
    'id': 0x1e,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'Cobra',
    'id': 0x1f,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'Spectrum',
    'id': 0x20,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'Anodized',
    'creator': 'Blitz-.',
    'id': 0x21,
    'weapon': 0x6,
    'rarity': 0x3
  }, {
    'name': 'Blunderbuss',
    'creator': 'Blitz-.',
    'id': 0x22,
    'weapon': 0x6,
    'rarity': 0x2
  }, {
    'name': 'Tv\x20Tron\x20A',
    'type': 0x1,
    'keyW': 'Head',
    'glow': !0x0,
    'scl': 0x1,
    'sclMlt': 0.6,
    'sitOff': 2.05,
    'yOff': -3.2,
    'id': 0x20,
    'rarity': 0x4
  }, {
    'name': 'Tv\x20Tron\x20B',
    'tex': 0x1,
    'type': 0x1,
    'keyW': 'Head',
    'glow': !0x0,
    'scl': 0x1,
    'sclMlt': 0.6,
    'sitOff': 2.05,
    'yOff': -3.2,
    'id': 0x20,
    'rarity': 0x4
  }, {
    'name': 'Hollow\x20Fade',
    'keyW': 'Knife',
    'animInd': 0x1,
    'glow': !0x0,
    'tex': 0x2,
    'id': 0x0,
    'type': 0x3,
    'scl': 0x2,
    'sclMlt': 0.9,
    'yOff': -0x2,
    'rarity': 0x5
  }, {
    'name': 'Tv\x20Tron\x20C',
    'tex': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'glow': !0x0,
    'scl': 0x1,
    'sclMlt': 0.6,
    'sitOff': 2.05,
    'yOff': -3.2,
    'id': 0x20,
    'rarity': 0x4
  }, {
    'name': 'Tv\x20Tron\x20D',
    'tex': 0x3,
    'type': 0x1,
    'keyW': 'Head',
    'glow': !0x0,
    'scl': 0x1,
    'sclMlt': 0.6,
    'sitOff': 2.05,
    'yOff': -3.2,
    'id': 0x20,
    'rarity': 0x4
  }, {
    'name': 'AWP\x20Dazzle',
    'glow': !0x0,
    'id': 0x35,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Octodance',
    'glow': !0x0,
    'id': 0x36,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Ice\x20Fade',
    'glow': !0x0,
    'id': 0x37,
    'weapon': 0x1,
    'rarity': 0x4
  }, {
    'name': 'Frostlance',
    'keyW': 'Knife',
    'animInd': 0x1,
    'glow': !0x0,
    'tex': 0x3,
    'id': 0x0,
    'type': 0x3,
    'scl': 0x2,
    'sclMlt': 0.9,
    'yOff': -0x2,
    'rarity': 0x5
  }, {
    'name': 'Frostbite',
    'keyW': 'Axe',
    'animInd': 0x1,
    'glow': !0x0,
    'id': 0x1,
    'type': 0x3,
    'scl': 0x2,
    'sclMlt': 0.9,
    'yOff': -0.5,
    'rarity': 0x6
  }, {
    'name': 'Arctic',
    'id': 0x0,
    'weapon': 0xf,
    'rarity': 0x1
  }, {
    'name': 'Autumn\x20Burst',
    'id': 0x1,
    'weapon': 0xf,
    'rarity': 0x1
  }, {
    'name': 'Reticle\x20Burst',
    'id': 0x2,
    'weapon': 0xf,
    'rarity': 0x2
  }, {
    'name': 'Digital\x20Burst',
    'id': 0x3,
    'weapon': 0xf,
    'rarity': 0x0
  }, {
    'name': 'Bushwalker',
    'id': 0x4,
    'weapon': 0xf,
    'rarity': 0x1
  }, {
    'name': 'Woodland',
    'id': 0x5,
    'weapon': 0xf,
    'rarity': 0x0
  }, {
    'name': 'Burst\x20Hazard',
    'id': 0x6,
    'weapon': 0xf,
    'rarity': 0x1
  }, {
    'name': 'Kodac\x20Famas',
    'id': 0x7,
    'weapon': 0xf,
    'rarity': 0x1
  }, {
    'name': 'Seafarer\x20G2',
    'id': 0x8,
    'weapon': 0xf,
    'rarity': 0x0
  }, {
    'name': 'G2\x20Trail',
    'id': 0x9,
    'weapon': 0xf,
    'rarity': 0x0
  }, {
    'name': 'Burst\x20Fade',
    'id': 0xa,
    'weapon': 0xf,
    'rarity': 0x0
  }, {
    'name': 'G2\x20Puma',
    'id': 0xb,
    'weapon': 0xf,
    'rarity': 0x0
  }, {
    'name': 'Burst\x20Carbo',
    'id': 0xc,
    'weapon': 0xf,
    'rarity': 0x0
  }, {
    'name': 'G2\x20Barb',
    'id': 0xd,
    'weapon': 0xf,
    'rarity': 0x2
  }, {
    'name': 'F1\x20Blush',
    'id': 0xe,
    'weapon': 0xf,
    'rarity': 0x0
  }, {
    'name': 'Machinist',
    'id': 0xf,
    'weapon': 0xf,
    'rarity': 0x1
  }, {
    'name': 'Triple\x20Olympus',
    'id': 0x10,
    'weapon': 0xf,
    'rarity': 0x2
  }, {
    'name': 'Honey\x20Badger',
    'id': 0x11,
    'weapon': 0xf,
    'rarity': 0x1
  }, {
    'name': 'G2\x20Moss',
    'id': 0x12,
    'weapon': 0xf,
    'rarity': 0x1
  }, {
    'name': 'F1\x20Marshland',
    'id': 0x13,
    'weapon': 0xf,
    'rarity': 0x1
  }, {
    'name': 'G2\x20Tigris',
    'id': 0x14,
    'weapon': 0xf,
    'rarity': 0x2
  }, {
    'name': 'Zebra\x20Burst',
    'id': 0x15,
    'weapon': 0xf,
    'rarity': 0x2
  }, {
    'name': 'Skyfarer',
    'id': 0x16,
    'weapon': 0xf,
    'rarity': 0x2
  }, {
    'name': 'Commando\x20Fade',
    'id': 0x17,
    'weapon': 0xf,
    'rarity': 0x2
  }, {
    'name': 'Mindseeker',
    'id': 0x18,
    'glow': !0x0,
    'weapon': 0xf,
    'rarity': 0x4
  }, {
    'name': 'Intervention\x20VI',
    'mid': 0x0,
    'glow': !0x0,
    'pulsT': 0.0015,
    'scl': 0.00094830394974876,
    'mScl': 0.0010536710552764,
    'zOff': -0.25,
    'seas': 0x2,
    'yOff': 0.05,
    'weapon': 0x1,
    'rarity': 0x5
  }, {
    'name': 'Intervention\x20XI',
    'mid': 0x0,
    'midT': 'weapons/weapon_1_1',
    'glow': !0x0,
    'seas': 0x2,
    'pulsT': 0.0015,
    'scl': 0.00094830394974876,
    'mScl': 0.0010536710552764,
    'zOff': -0.25,
    'yOff': 0.05,
    'weapon': 0x1,
    'rarity': 0x5
  }, {
    'name': 'Soul\x20Fang',
    'keyW': 'Knife',
    'animInd': 0x1,
    'glow': !0x0,
    'pulsT': 0.1,
    'id': 0x2,
    'type': 0x3,
    'scl': 0x3,
    'seas': 0x2,
    'sclMlt': 0.98,
    'yOff': -0x2,
    'rarity': 0x5
  }, {
    'name': 'Dusk\x20Fang',
    'keyW': 'Knife',
    'animInd': 0x1,
    'glow': !0x0,
    'tex': 0x4,
    'id': 0x0,
    'type': 0x3,
    'scl': 0x2,
    'sclMlt': 0.9,
    'yOff': -0x2,
    'rarity': 0x4
  }, {
    'name': 'Boneclaw',
    'id': 0x38,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Digital',
    'id': 0x39,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Digital',
    'id': 0x3a,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Digital',
    'id': 0x3b,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Digital',
    'id': 0x3c,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Cascade',
    'id': 0x3d,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Poly',
    'id': 0x3e,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Poly',
    'id': 0x3f,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x40,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x41,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'War\x20Torn',
    'id': 0x42,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Spook',
    'id': 0x43,
    'weapon': 0x1,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Drip',
    'id': 0x44,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Drip',
    'id': 0x45,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sepia',
    'id': 0x46,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Olive',
    'id': 0x47,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Spruce',
    'id': 0x48,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Dijon',
    'id': 0x49,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Splat',
    'id': 0x4a,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Splat',
    'id': 0x4b,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Splat',
    'id': 0x4c,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Splat',
    'id': 0x4d,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Yellow\x20Poly',
    'id': 0x4e,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Poly',
    'id': 0x4f,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x50,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x51,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sandstorm',
    'id': 0x52,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Fabrica',
    'id': 0x53,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Azazel',
    'creator': 'Lxckless',
    'id': 0x54,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Picknik',
    'id': 0x55,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Picasso',
    'id': 0x56,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Cracked',
    'id': 0x57,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Fire\x20Stream',
    'id': 0x58,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Ripped\x20Sun',
    'id': 0x59,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Bliss\x20Flow',
    'id': 0x5a,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Kenzo',
    'id': 0x5b,
    'weapon': 0x1,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Snowy',
    'id': 0x5c,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Galaxy',
    'id': 0x5d,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Ducky',
    'id': 0x5e,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Graphite',
    'id': 0x5f,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Porcelain',
    'id': 0x60,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Neon\x20Spill',
    'id': 0x61,
    'weapon': 0x1,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Danger',
    'id': 0x62,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Paint\x20Spill',
    'id': 0x63,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Goop',
    'id': 0x64,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Cerise',
    'id': 0x65,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Drip',
    'id': 0x66,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Drip',
    'id': 0x67,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Green\x20Drip',
    'id': 0x68,
    'weapon': 0x1,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Flame\x20Viper',
    'id': 0x69,
    'weapon': 0x1,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Phantom',
    'id': 0x6a,
    'weapon': 0x1,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Arctic',
    'creator': 'Blitz',
    'id': 0x6b,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Magma\x20Core',
    'id': 0x6c,
    'weapon': 0x1,
    'rarity': 0x4,
    'animInd': 0x1,
    'pulsT': 0.1,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Wired',
    'creator': 'Floatingpoint',
    'id': 0x6d,
    'weapon': 0x1,
    'rarity': 0x3,
    'seas': 0x2
  }, {
    'name': 'Kings',
    'creator': 'Floatingpoint',
    'id': 0x6e,
    'weapon': 0x1,
    'rarity': 0x3,
    'seas': 0x2
  }, {
    'name': 'Tessalate',
    'id': 0x6f,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Sunset',
    'creator': 'Graham',
    'id': 0x70,
    'weapon': 0x1,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Poly\x20Blush',
    'id': 0x71,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Cuircuitor',
    'creator': 'Gnnr',
    'id': 0x72,
    'weapon': 0x1,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Marbled\x20.50',
    'creator': 'Blitz',
    'id': 0x73,
    'weapon': 0x1,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Exoscarlet',
    'creator': 'CyAnIdE',
    'id': 0x74,
    'weapon': 0x1,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sorable\x20V',
    'creator': 'Zino',
    'id': 0x75,
    'weapon': 0x1,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Boneclaw',
    'id': 0x3c,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Digital',
    'id': 0x3d,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Digital',
    'id': 0x3e,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Digital',
    'id': 0x3f,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Digital',
    'id': 0x40,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Cascade',
    'id': 0x41,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Poly',
    'id': 0x42,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Poly',
    'id': 0x43,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x44,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x45,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'War\x20Torn',
    'id': 0x46,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Phantasma',
    'id': 0x48,
    'weapon': 0x2,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Drip',
    'id': 0x49,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Drip',
    'id': 0x4a,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sepia',
    'id': 0x4b,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Olive',
    'id': 0x4c,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Spruce',
    'id': 0x4d,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Dijon',
    'id': 0x4e,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Splat',
    'id': 0x4f,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Splat',
    'id': 0x50,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Splat',
    'id': 0x51,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Splat',
    'id': 0x52,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Yellow\x20Poly',
    'id': 0x53,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Poly',
    'id': 0x54,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x55,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x56,
    'weapon': 0x2,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sandstorm',
    'id': 0x57,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Fabrica',
    'id': 0x58,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Zebrik',
    'id': 0x59,
    'weapon': 0x2,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Picknik',
    'id': 0x5a,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Picasso',
    'id': 0x5b,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Cracked',
    'id': 0x5c,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Fire\x20Stream',
    'id': 0x5d,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Ripped\x20Sun',
    'id': 0x5e,
    'weapon': 0x2,
    'rarity': 0x2
  }, {
    'name': 'Bliss\x20Flow',
    'id': 0x5f,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Snowy',
    'id': 0x60,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Ducky',
    'id': 0x61,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Graphite',
    'id': 0x62,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Porcelain',
    'id': 0x63,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Danger',
    'id': 0x64,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Paint\x20Spill',
    'id': 0x65,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Goop',
    'id': 0x66,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Cerise',
    'id': 0x67,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Drip',
    'id': 0x68,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Drip',
    'id': 0x69,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Green\x20Drip',
    'id': 0x6a,
    'weapon': 0x2,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Void',
    'id': 0x6b,
    'weapon': 0x2,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Lighting\x20Storm',
    'id': 0x6c,
    'weapon': 0x2,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Scribbler',
    'id': 0x6d,
    'weapon': 0x2,
    'rarity': 0x3,
    'seas': 0x2
  }, {
    'name': 'Scorched',
    'creator': '0mar',
    'id': 0x6e,
    'weapon': 0x2,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Heat-Tint',
    'creator': 'Leaaf',
    'id': 0x6f,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Welded',
    'id': 0x70,
    'weapon': 0x2,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Acid\x20Howler',
    'id': 0x71,
    'weapon': 0x2,
    'rarity': 0x5,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Boneclaw',
    'id': 0x3a,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Digital',
    'id': 0x3b,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Digital',
    'id': 0x3c,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Digital',
    'id': 0x3d,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Digital',
    'id': 0x3e,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Cascade',
    'id': 0x3f,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Poly',
    'id': 0x40,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Poly',
    'id': 0x41,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x42,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x43,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'War\x20Torn',
    'id': 0x44,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Drip',
    'id': 0x45,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Drip',
    'id': 0x46,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sepia',
    'id': 0x47,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Olive',
    'id': 0x48,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Spruce',
    'id': 0x49,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Dijon',
    'id': 0x4a,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Splat',
    'id': 0x4b,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Splat',
    'id': 0x4c,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Splat',
    'id': 0x4d,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Splat',
    'id': 0x4e,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Yellow\x20Poly',
    'id': 0x4f,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Poly',
    'id': 0x50,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x51,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x52,
    'weapon': 0x4,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sandstorm',
    'id': 0x53,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Fabrica',
    'id': 0x54,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Picknik',
    'id': 0x55,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Picasso',
    'id': 0x56,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Cracked',
    'id': 0x57,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Fire\x20Stream',
    'id': 0x58,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Ripped\x20Sun',
    'id': 0x59,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Bliss\x20Flow',
    'id': 0x5a,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Snowy',
    'id': 0x5b,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Ducky',
    'id': 0x5c,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Graphite',
    'id': 0x5d,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Porcelain',
    'id': 0x5e,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Danger',
    'id': 0x5f,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Paint\x20Spill',
    'id': 0x60,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Goop',
    'id': 0x61,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Cerise',
    'id': 0x62,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Drip',
    'id': 0x63,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Drip',
    'id': 0x64,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Green\x20Drip',
    'id': 0x65,
    'weapon': 0x4,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Polymer',
    'id': 0x66,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Andromeda',
    'id': 0x67,
    'weapon': 0x4,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Liberty',
    'id': 0x68,
    'weapon': 0x4,
    'rarity': 0x3,
    'seas': 0x2
  }, {
    'name': 'Dragon\x20Breath',
    'id': 0x69,
    'weapon': 0x4,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Parabellum',
    'creator': 'Floatingpoint',
    'id': 0x6a,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Poly\x20Fade',
    'id': 0x6b,
    'weapon': 0x4,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Picknick',
    'id': 0x1f,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Picasso',
    'id': 0x20,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Cracked',
    'id': 0x21,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Fire\x20Stream',
    'id': 0x22,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Ripped\x20Sun',
    'id': 0x23,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Bliss\x20Flow',
    'id': 0x24,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Snowy',
    'id': 0x25,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Ducky',
    'id': 0x26,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Graphite',
    'id': 0x27,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Porcelain',
    'id': 0x28,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Danger',
    'id': 0x29,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Paint\x20Spill',
    'id': 0x2a,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Slime\x20Spill',
    'id': 0x2b,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Cerise',
    'id': 0x2c,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Drip',
    'id': 0x2d,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Drip',
    'id': 0x2e,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Green\x20Drip',
    'id': 0x2f,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Overheated',
    'id': 0x30,
    'weapon': 0x5,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Royal',
    'id': 0x31,
    'weapon': 0x5,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Nordic',
    'id': 0x32,
    'weapon': 0x5,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Boneclaw',
    'id': 0x33,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Digital',
    'id': 0x34,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Digital',
    'id': 0x35,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Digital',
    'id': 0x36,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Digital',
    'id': 0x37,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Cascade',
    'id': 0x38,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Poly',
    'id': 0x39,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Poly',
    'id': 0x3a,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x3b,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x3c,
    'weapon': 0x5,
    'rarity': 0x1
  }, {
    'name': 'War\x20Torn',
    'id': 0x3d,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Drip',
    'id': 0x3e,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Drip',
    'id': 0x3f,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sepia',
    'id': 0x40,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Olive',
    'id': 0x41,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Spruce',
    'id': 0x42,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Dijon',
    'id': 0x43,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Splat',
    'id': 0x44,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Splat',
    'id': 0x45,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Splat',
    'id': 0x46,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Splat',
    'id': 0x47,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Yellow\x20Poly',
    'id': 0x48,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Poly',
    'id': 0x49,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x4a,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x4b,
    'weapon': 0x5,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sandsorm',
    'id': 0x4c,
    'weapon': 0x5,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Fabrica',
    'id': 0x4d,
    'weapon': 0x5,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Outlaw',
    'id': 0x4e,
    'weapon': 0x5,
    'rarity': 0x3,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x1a,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x1b,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sandstorm',
    'id': 0x1c,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Fabrica',
    'id': 0x1d,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Zebrik',
    'id': 0x1e,
    'weapon': 0x7,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Picknik',
    'id': 0x1f,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Picasso',
    'id': 0x20,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Cracked',
    'id': 0x21,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Fire\x20Stream',
    'id': 0x22,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Ripped\x20Sun',
    'id': 0x23,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Bliss\x20Flow',
    'id': 0x24,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Snowy',
    'id': 0x25,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Ducky',
    'id': 0x26,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Graphite',
    'id': 0x27,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Porcelain',
    'id': 0x28,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Danger',
    'id': 0x29,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Paint\x20Spill',
    'id': 0x2a,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Slime\x20Spill',
    'id': 0x2b,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Cerise',
    'id': 0x2c,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Drip',
    'id': 0x2d,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Drip',
    'id': 0x2e,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Green\x20Drip',
    'id': 0x2f,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Neoran',
    'id': 0x30,
    'weapon': 0x7,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Fire\x20Breath',
    'id': 0x31,
    'weapon': 0x7,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Boneclaw',
    'id': 0x32,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Digital',
    'id': 0x33,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Digital',
    'id': 0x34,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Digital',
    'id': 0x35,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Digital',
    'id': 0x36,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Cascade',
    'id': 0x37,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Poly',
    'id': 0x38,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Poly',
    'id': 0x39,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x3a,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x3b,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'War\x20Torn',
    'id': 0x3c,
    'weapon': 0x7,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Drip',
    'id': 0x3d,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Drip',
    'id': 0x3e,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sepia',
    'id': 0x3f,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Olive',
    'id': 0x40,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Spruce',
    'id': 0x41,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Dijon',
    'id': 0x42,
    'weapon': 0x7,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Splat',
    'id': 0x43,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Splat',
    'id': 0x44,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Splat',
    'id': 0x45,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Splat',
    'id': 0x46,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Yellow\x20Poly',
    'id': 0x47,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Bloodbath',
    'id': 0x48,
    'weapon': 0x7,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Poly',
    'id': 0x49,
    'weapon': 0x7,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x1b,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sandstorm',
    'id': 0x1c,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Fabrica',
    'id': 0x1d,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Picknik',
    'id': 0x1e,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Picasso',
    'id': 0x1f,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Cracked',
    'id': 0x20,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Fire\x20Stream',
    'id': 0x21,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Ripped\x20Sun',
    'id': 0x22,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Bliss\x20Flow',
    'id': 0x23,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Kenzo',
    'id': 0x24,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Snowy',
    'id': 0x25,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Ducky',
    'id': 0x26,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Graphite',
    'id': 0x27,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Porcelain',
    'id': 0x28,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Danger',
    'id': 0x29,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Paint\x20Spill',
    'id': 0x2a,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Goop',
    'id': 0x2b,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Cerise',
    'id': 0x2c,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Drip',
    'id': 0x2d,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Drip',
    'id': 0x2e,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Green\x20Drip',
    'id': 0x2f,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Boneclaw',
    'id': 0x30,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Digital',
    'id': 0x31,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Digital',
    'id': 0x32,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Digital',
    'id': 0x33,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Digital',
    'id': 0x34,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Cascade',
    'id': 0x35,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Poly',
    'id': 0x36,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Poly',
    'id': 0x37,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x38,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x39,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'War\x20Torn',
    'id': 0x3a,
    'weapon': 0x9,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Drip',
    'id': 0x3b,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Drip',
    'id': 0x3c,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sepia',
    'id': 0x3d,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Olive',
    'id': 0x3e,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Spruce',
    'id': 0x3f,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Dijon',
    'id': 0x40,
    'weapon': 0x9,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Splat',
    'id': 0x41,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Splat',
    'id': 0x42,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Splat',
    'id': 0x43,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Splat',
    'id': 0x44,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Yellow\x20Poly',
    'id': 0x45,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Poly',
    'id': 0x46,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x47,
    'weapon': 0x9,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Coffin',
    'id': 0x48,
    'weapon': 0x9,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Lighting\x20Strike',
    'id': 0x49,
    'weapon': 0x9,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Boneclaw',
    'id': 0x19,
    'weapon': 0xf,
    'rarity': 0x3,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Digital',
    'id': 0x1a,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Digital',
    'id': 0x1b,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Digital',
    'id': 0x1c,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Digital',
    'id': 0x1d,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Cascade',
    'id': 0x1e,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Poly',
    'id': 0x1f,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Poly',
    'id': 0x20,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x21,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x22,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'War\x20Torn',
    'id': 0x23,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Spook',
    'id': 0x24,
    'weapon': 0xf,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Pink\x20Drip',
    'id': 0x25,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Drip',
    'id': 0x26,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sepia',
    'id': 0x27,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Olive',
    'id': 0x28,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Spruce',
    'id': 0x29,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Dijon',
    'id': 0x2a,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Splat',
    'id': 0x2b,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Purple\x20Splat',
    'id': 0x2c,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Splat',
    'id': 0x2d,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Splat',
    'id': 0x2e,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Yellow\x20Poly',
    'id': 0x2f,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Red\x20Poly',
    'id': 0x30,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Green\x20Poly',
    'id': 0x31,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Blue\x20Poly',
    'id': 0x32,
    'weapon': 0xf,
    'rarity': 0x1,
    'seas': 0x2
  }, {
    'name': 'Sandstorm',
    'id': 0x33,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Fabrica',
    'id': 0x34,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Zebrik',
    'id': 0x35,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Picknik',
    'id': 0x36,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Picasso',
    'id': 0x37,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Cracked',
    'id': 0x38,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Fire\x20Stream',
    'id': 0x39,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Ripped\x20Sun',
    'id': 0x3a,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Bliss\x20Flow',
    'id': 0x3b,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Kenzo',
    'id': 0x3c,
    'weapon': 0xf,
    'rarity': 0x3,
    'seas': 0x2
  }, {
    'name': 'Snowy',
    'id': 0x3d,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Ducky',
    'id': 0x3e,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Graphite',
    'id': 0x3f,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Porcelain',
    'id': 0x40,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Danger',
    'id': 0x41,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Paint\x20Spill',
    'id': 0x42,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Slime\x20Spill',
    'id': 0x43,
    'weapon': 0xf,
    'rarity': 0x2,
    'seas': 0x2
  }, {
    'name': 'Cerise',
    'id': 0x44,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Orange\x20Drip',
    'id': 0x45,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Red\x20Drip',
    'id': 0x46,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Green\x20Drip',
    'id': 0x47,
    'weapon': 0xf,
    'rarity': 0x0,
    'seas': 0x2
  }, {
    'name': 'Galaxy\x20Morse',
    'id': 0x48,
    'weapon': 0xf,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Fire\x20Storm',
    'id': 0x49,
    'weapon': 0xf,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Marked',
    'id': 0x4a,
    'weapon': 0xf,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Frosted',
    'id': 0x4b,
    'weapon': 0xf,
    'rarity': 0x4,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Gold\x20Tipped',
    'id': 0x4c,
    'weapon': 0xf,
    'rarity': 0x3,
    'glow': !0x0,
    'seas': 0x2
  }, {
    'name': 'Damascus',
    'keyW': 'Knife',
    'tex': 0x6,
    'id': 0x0,
    'type': 0x3,
    'scl': 2.3,
    'seas': 0x2,
    'sclMlt': 0.9,
    'yOff': -0x2,
    'rarity': 0x3
  }, {
    'name': 'Prism',
    'keyW': 'Knife',
    'tex': 0x7,
    'id': 0x0,
    'type': 0x3,
    'scl': 2.3,
    'seas': 0x2,
    'sclMlt': 0.9,
    'yOff': -0x2,
    'rarity': 0x3
  }, {
    'name': 'Bloodless',
    'keyW': 'Knife',
    'id': 0x2,
    'tex': 0x1,
    'glow': !0x0,
    'type': 0x3,
    'scl': 0x3,
    'seas': 0x2,
    'sclMlt': 0.9,
    'yOff': -0x2,
    'rarity': 0x4
  }, {
    'name': 'Steelfang',
    'keyW': 'Knife',
    'id': 0x3,
    'type': 0x3,
    'scl': 2.6,
    'seas': 0x2,
    'sclMlt': 0x1,
    'yOff': -0x1,
    'xOff': -1.5,
    'rarity': 0x4,
    'sxRot': 0.3,
    'sxOff': 0.1
  }, {
    'name': 'Flamefang',
    'keyW': 'Knife',
    'tex': 0x1,
    'glow': !0x0,
    'id': 0x3,
    'type': 0x3,
    'scl': 2.6,
    'seas': 0x2,
    'sclMlt': 0.9,
    'yOff': -0x1,
    'xOff': -1.5,
    'rarity': 0x5,
    'sxRot': 0.3,
    'sxOff': 0.1
  }, {
    'name': 'Plasma\x20Dust',
    'keyW': 'Knife',
    'tex': 0x2,
    'glow': !0x0,
    'id': 0x3,
    'type': 0x3,
    'scl': 2.6,
    'seas': 0x2,
    'sclMlt': 0.9,
    'yOff': -0x1,
    'xOff': -1.5,
    'rarity': 0x5,
    'sxRot': 0.3,
    'sxOff': 0.1
  }, {
    'name': 'Volt\x20Fang',
    'keyW': 'Knife',
    'tex': 0x3,
    'glow': !0x0,
    'id': 0x3,
    'type': 0x3,
    'scl': 2.6,
    'seas': 0x2,
    'sclMlt': 0.9,
    'yOff': -0x1,
    'xOff': -1.5,
    'rarity': 0x5,
    'sxRot': 0.3,
    'sxOff': 0.1
  }, {
    'name': 'Black\x20Cowboy\x20Hat',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x27,
    'rarity': 0x0,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.6
  }, {
    'name': 'Brown\x20Cowboy\x20Hat',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x27,
    'tex': 0x1,
    'rarity': 0x0,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.6,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Outback\x20Hat',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x28,
    'rarity': 0x1,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.6,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Dundee\x20Hat',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x28,
    'tex': 0x1,
    'rarity': 0x1,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.6,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Red\x20Hat',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x29,
    'rarity': 0x1,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.6,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Blue\x20Hat',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x29,
    'tex': 0x1,
    'rarity': 0x0,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.6,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Urban\x20Soldier',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x2a,
    'tex': 0x0,
    'rarity': 0x1,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.78,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Desert\x20Soldier',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x2a,
    'tex': 0x1,
    'rarity': 0x1,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.78,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Arctic\x20Soldier',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x2a,
    'tex': 0x2,
    'rarity': 0x1,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.78,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Ace',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x2b,
    'rarity': 0x3,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.7,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Pinata',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x2c,
    'rarity': 0x1,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.6,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Sombrerro',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x2c,
    'tex': 0x1,
    'rarity': 0x1,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 0.6,
    'yOff': -1.2,
    'scl': 1.2
  }, {
    'name': 'Swagger',
    'type': 0x1,
    'keyW': 'Head',
    'id': 0x2d,
    'rarity': 0x3,
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 1.8,
    'yOff': -0x2,
    'scl': 1.2
  }, {
    'name': 'Acid\x20Bane',
    'id': 0xb,
    'rarity': 0x3,
    'glow': !0x0,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 0x5,
    'sclMlt': 3.4,
    'sitOff': -1.3,
    'sitOffZ': -0.8,
    'yOff': -0x2,
    'xOff': -0x4
  }, {
    'name': 'Plasma\x20Bones',
    'id': 0xb,
    'tex': 0x1,
    'rarity': 0x3,
    'glow': !0x0,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 0x5,
    'sclMlt': 3.4,
    'sitOff': -1.3,
    'sitOffZ': -0.8,
    'yOff': -0x2,
    'xOff': -0x4
  }, {
    'name': 'Jet\x20Pack',
    'id': 0xd,
    'rarity': 0x2,
    'glow': !0x0,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 0x6,
    'sclMlt': 0x3,
    'sitOff': -0.5,
    'sitOffZ': -0.93,
    'yOff': -1.3,
    'xRot': Math['PI']
  }, {
    'name': 'Red\x20Backpack',
    'id': 0xe,
    'rarity': 0x1,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 0x4,
    'sclMlt': 2.3,
    'sitOff': -0.8,
    'sitOffZ': -0.8,
    'yOff': -1.5,
    'xRot': Math['PI']
  }, {
    'name': 'Blue\x20Backpack',
    'id': 0xe,
    'tex': 0x1,
    'rarity': 0x1,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 3.5,
    'sclMlt': 2.3,
    'sitOff': -0.8,
    'sitOffZ': -0.8,
    'yOff': -1.5,
    'xRot': Math['PI']
  }, {
    'name': 'Police\x20Vest',
    'id': 0xf,
    'rarity': 0x1,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 4.5,
    'sclMlt': 2.5,
    'sitOff': 0.4,
    'sitOffZ': 0x0,
    'yOff': -0x2,
    'xRot': Math['PI']
  }, {
    'name': 'Angelic\x20Wings',
    'id': 0x10,
    'rarity': 0x3,
    'glow': !0x0,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 0x3,
    'sclMlt': 0x3,
    'sitOff': -0.5,
    'sitOffZ': -0x2,
    'xOff': -0x2,
    'yOff': -0x3
  }, {
    'name': 'Gradient\x20Pennon',
    'id': 0x10,
    'tex': 0x1,
    'rarity': 0x4,
    'glow': !0x0,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 0x3,
    'sclMlt': 0x3,
    'sitOff': -0.5,
    'sitOffZ': -0x2,
    'xOff': -0x2,
    'yOff': -0x3
  }, {
    'name': 'Torn\x20Aileron',
    'id': 0x11,
    'rarity': 0x4,
    'glow': !0x0,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 0x3,
    'sclMlt': 0x3,
    'sitOff': 0x0,
    'sitOffZ': -0x2,
    'xOff': -0x2,
    'yOff': -0x3
  }, {
    'name': 'Cursed',
    'id': 0x11,
    'tex': 0x1,
    'rarity': 0x3,
    'glow': !0x0,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 0x3,
    'sclMlt': 0x3,
    'sitOff': 0x0,
    'sitOffZ': -0x2,
    'xOff': -0x2,
    'yOff': -0x3
  }, {
    'name': 'Butterfly',
    'id': 0x13,
    'rarity': 0x2,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'scl': 3.5,
    'sclMlt': 3.3,
    'sitOff': -0.9,
    'sitOffZ': -2.4,
    'yOff': -0x2
  }, {
    'name': 'Mr.\x20Rabbiton',
    'id': 0x2e,
    'rarity': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.89,
    'sitOff': 0.9,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Madman',
    'id': 0x2f,
    'rarity': 0x1,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.95,
    'sitOff': 0.8,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Grizz\x20Lee',
    'id': 0x30,
    'rarity': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.95,
    'sitOff': 0.8,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Claws',
    'id': 0x30,
    'tex': 0x1,
    'rarity': 0x3,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.89,
    'sitOff': 0.9,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Simba',
    'id': 0x31,
    'rarity': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.89,
    'sitOff': 0.9,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Captain\x20Walrus',
    'id': 0x32,
    'rarity': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.89,
    'sitOff': 0.9,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Monke',
    'id': 0x33,
    'rarity': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.89,
    'sitOff': 0.9,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Lord\x20Panda',
    'id': 0x34,
    'rarity': 0x3,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.89,
    'sitOff': 0.9,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Ray\x20Bam',
    'id': 0x35,
    'rarity': 0x0,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.51,
    'sitOff': 1.1,
    'scl': 1.4,
    'xOff': 1.5,
    'yOff': -1.2
  }, {
    'name': 'Gold\x20Sunnies',
    'id': 0x35,
    'tex': 0x1,
    'rarity': 0x1,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.51,
    'sitOff': 1.1,
    'scl': 1.4,
    'xOff': 1.5,
    'yOff': -1.2
  }, {
    'name': 'Queens\x20Guard',
    'id': 0x36,
    'rarity': 0x0,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.6,
    'sitOff': 0.9,
    'scl': 0.9,
    'yOff': -2.1
  }, {
    'name': 'Snowman',
    'id': 0x37,
    'rarity': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.89,
    'sitOff': 0.8,
    'xOff': 1.5,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Misty',
    'id': 0x38,
    'rarity': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.89,
    'sitOff': 0.9,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'Unicorn',
    'id': 0x39,
    'rarity': 0x3,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.89,
    'sitOff': 0.9,
    'scl': 1.6,
    'yOff': -1.2
  }, {
    'name': 'TV\x20Tron\x20LCD',
    'id': 0x20,
    'tex': 0x4,
    'rarity': 0x4,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'scl': 0x1,
    'sclMlt': 0.6,
    'sitOff': 2.05,
    'yOff': -3.2,
    'frames': 0x2,
    'frameT': 0x190
  }, {
    'name': 'Acidic\x20Bane',
    'id': 0x24,
    'rarity': 0x3,
    'glow': !0x0,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 1.3,
    'xOff': 1.2,
    'scl': 1.1,
    'yOff': -1.2
  }, {
    'name': 'Tentacus',
    'id': 0x22,
    'tex': 0x1,
    'rarity': 0x3,
    'glow': !0x0,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 1.3,
    'scl': 1.1,
    'yOff': -1.2
  }, {
    'name': 'Soldier\x20159',
    'id': 0x23,
    'tex': 0x1,
    'rarity': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 1.3,
    'scl': 1.1,
    'yOff': -1.2
  }, {
    'name': 'Soldier\x20160',
    'id': 0x23,
    'tex': 0x2,
    'rarity': 0x2,
    'type': 0x1,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 1.3,
    'scl': 1.1,
    'yOff': -1.2
  }, {
    'name': 'Templar',
    'id': 0x25,
    'rarity': 0x3,
    'type': 0x1,
    'glow': !0x0,
    'keyW': 'Head',
    'seas': 0x2,
    'sclMlt': 0.56,
    'sitOff': 1.3,
    'scl': 1.1,
    'yOff': -1.2
  }, {
    'name': 'Phase\x20Blades',
    'id': 0x2,
    'tex': 0x1,
    'type': 0x2,
    'seas': 0x2,
    'keyW': 'Back',
    'glow': !0x0,
    'scl': 0.00048112055276382,
    'sclMlt': 0.000406279577889448,
    'sitOff': -1.3,
    'sitOffZ': -0.95,
    'yOff': -0x1,
    'xOff': -0.5,
    'rarity': 0x3
  }, {
    'name': 'Pot\x27O\x27Gold',
    'id': 0x14,
    'rarity': 0x2,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'sclMlt': 2.5,
    'sitOff': -0.8,
    'sitOffZ': -0x2,
    'yOff': -0x2,
    'xOff': 0.5,
    'scl': 0x4,
    'xRot': Math['PI']
  }, {
    'name': 'Unicorn\x20Backpack',
    'id': 0x15,
    'rarity': 0x3,
    'type': 0x2,
    'keyW': 'Back',
    'seas': 0x2,
    'sclMlt': 2.3,
    'sitOff': -0.8,
    'sitOffZ': -0.8,
    'yOff': -0x2,
    'xOff': -1.5,
    'scl': 3.5,
    'xRot': Math['PI']
  }, {
    'name': 'Flame\x20Talon',
    'weapon': 0x5,
    'glow': !0x0,
    'id': 0x4f,
    'seas': 0x2,
    'rarity': 0x4
  }, {
    'name': 'Raynb0w',
    'creator': '???',
    'pat': 0x1,
    'seas': 0x2,
    'tex': 'weapons/pat/1',
    'dot': 'dot_1',
    'sameGlow': !0x0,
    'movT': 0.0015,
    'weapon': 0x7,
    'rarity': 0x5
  }, {
    'name': 'Raynb0w',
    'creator': '???',
    'pat': 0x1,
    'seas': 0x2,
    'tex': 'weapons/pat/1',
    'dot': 'dot_1',
    'sameGlow': !0x0,
    'movT': 0.0015,
    'weapon': 0x5,
    'rarity': 0x5
  }];
}, function(c7o, c7p, c7q) {
  var c7r;
  try {
    window && (c7r = c7q(0x4));
  } catch (c7s) {}
  var c7t = function(c7o, c7p, c7q, c7r, c7t, c7z) {
    var c7A;
    this['id'] = c7o, this['sentTo'] = [], this['inputs'] = [], this['spins'] = [], this['stateHistory'] = [], this['weaponMeshes'] = [], this['weaponGeos'] = {}, this['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA'] = [], this['armMeshes'] = [], this['lastInput'] = [], this['lastDeltas'] = [], this['reloads'] = [], this['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ'] = [], this['ping'] = 0x0, this['pings'] = [], this['avgSpn'] = 0x0, this['score'] = 0x0, this['scoreObjs'] = {}, this['checkPoint'] = null, this['checkPointList'] = [], this['lstDrs'] = [], this['convs'] = 0x0, this['timer'] = null, this['gameTimer'] = null, this['classScores'] = {}, this['kills'] = 0x0, this['deaths'] = 0x0, this['assists'] = 0x0, this['melees'] = 0x0, this['setbacks'] = 0x0, this['caps'] = 0x0, this['deathStreak'] = 0x0, this['level'] = 0x0, this['lives'] = c7z['waitTimers'] && c7z['config'] && (c7z['config']['lives'] || c7z['mode']['lives']) || 0x0, this['deltaAdd'] = 0x0, this['deltaDiv'] = 0x1, this['sprayIndex'] = 0x0, this['hatIndex'] = -0x1, this['backIndex'] = -0x1, this['meleeIndex'] = -0x1, this['skinColIndex'] = -0x1, this['attachIndex'] = 0x0, this['lastSpray'] = 0x0, this['lastInteract'] = 0x0, this['lastPicked'] = [], this['playTime'] = 0x0, this['sCount'] = 0x0, this['streaks'] = {}, this['deathInfo'] = {}, this['ELO'] = 0x0, this['weaponTier'] = 0x0, this['inputLock'] = !0x1, this['init'] = function(c7o, c7p, c7q, c7r, c7z, c7A) {
      this['x'] = c7o, this['y'] = c7p, this['z'] = c7q, this['stepSrc'] = null, this['name'] = c7r || 'unknown', this['xVel'] = 0x0, this['yVel'] = 0x0, this['zVel'] = 0x0, this['lastInObj'] = 0x0, this['renderMinimal'] = !0x1, this['spins']['length'] = 0x0, this['noMovTimer'] = 0x0, this['noMovT'] = 0x0, this['xDire'] = 0x0, this['yDire'] = 0x0, this['hitTimer'] = 0x0, this['ticker'] = 0x0, this['spread'] = 0x0, this['spreadPlus'] = 0x0, this['aimVal'] = 0x1, this['aimDir'] = 0x0, this['aimTime'] = 0x0, this['streak'] = 0x0, this['killStreak'] = 0x0, this['realKillStreak'] = 0x0, this['lastKill'] = 0x0, this['stateHistory']['length'] = 0x0, this['lastInput']['length'] = 0x0, this['swapTweenA'] = 0x0, this['dmgReceived'] = {}, this['landBobY'] = 0x0, this['landBobYR'] = 0x0, this['jumpBobY'] = 0x0, this['slideTimer'] = 0x0, this['canSlide'] = !0x0, this['leanAnimX'] = 0x0, this['leanAnimY'] = 0x0, this['leanAnimZ'] = 0x0, this['bobAnimZ'] = 0x0, this['bobAnimY'] = 0x0, this['idleAnim'] = 0x0, this['inspecting'] = !0x1, this['inspectX'] = !0x1, this['stepVal'] = 0x0, this['stepChase'] = 0x0, this['stepDir'] = 0x1, this['stepDirR'] = 0x1, this['reward'] = 0x0, this['recoilAnim'] = 0x0, this['IIFXYtgrbBDkLbHBbEEVkUgAeyEpFaGV'] = 0x0, this['recoilForce'] = 0x0, this['recoilTweenY'] = 0x0, this['recoilTweenYM'] = 0x0, this['recoilTweenZ'] = 0x0, this['burstCount'] = 0x0, this['jumpRot'] = 0x0, this['jumpRotM'] = 0x0, this['slideLegV'] = 0x0, this['recoilX'] = 0x0, this['recoilZ'] = 0x0, this['crouchVal'] = 0x0, this['onGround'] = !0x0, this['onLadder'] = !0x1, this['terrainSlipping'] = !0x1, this['rampFix'] = null, this['ZkZQqRPzcQDgGFDFbfLXKBwAgmjlNSEB'] = !0x1, this['jumpCooldown'] = 0x0, this['TpWpiIwBuzDTtkhzEOcjaBWGIOZAPHZH'] = !0x1, this['lodActive'] = !0x1, this['locked'] = !0x1, this['latestData'] = !0x1, this['airTime'] = 0x0, this['height'] = c7t['fvcbEmTb'], this['headScale'] = c7t['cameraHeight'], this['scale'] = c7t['FtNDoOPu'], this['active'] = !0x0, this['interpolate'] = !0x1, this['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] = c7z, this['sentTo']['length'] = 0x0, this['inputSN'] = 0x0, this['inputs']['length'] = 0x0, this['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = 0x0, this['swapTime'] = 0x0, this['recon'] = !0x1, this['BuLLwMAKfmOLWuBvUnENglYISdUKniUf'] = !0x1, this['meleeAnim'] = {}, this['isHacker'] = c7A, this['customLoadout'] = null, this['isHidden'] = !0x1, this['godMode'] = !0x1, this['lastPicked']['length'] = 0x0, this['propID'] = 0x0, this['weaponTier'] = 0x0, this['inObject'] = null, this['inputFreq'] = 0x0;
    }, this['setClass'] = function(c7o, c7p, c7r, c7z) {
      c7z || (c7o['config'] && 0x0 > c7o['config']['classes']['indexOf'](c7p) && (c7p != c7o['config']['classes'][0x0] && (this['skins'] = [-0x1, -0x1]), c7p = c7o['config']['classes'][0x0]), c7o['mode'] && (c7o['mode']['noWeap'] && (c7p = 0x9), c7o['mode']['teamClass'] && c7o['mode']['teamClass'][this['team']] && (c7p = c7o['mode']['teamClass'][this['team']], this['skins'] = [-0x1, -0x1]))), (null == c7p || null == c7p) && (c7p = c7o['classes']['length'] - 0x1), this['classIndex'] = c7p, this['reloads']['length'] = 0x0, this['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length'] = 0x0, this['loadout'] = [c7o['classes'][c7p]['loadout'][0x0]], !!c7o['config'] && c7o['config']['noSecondary'] || (c7o['classes'][c7p]['secondary'] ? c7q['isNumber'](c7r) && this['loadout']['push'](c7r) : this['secIndex'] = null), 0x0 > this['loadout']['indexOf'](0xc) && this['loadout']['push'](0xc), this['speed'] = c7o['classes'][c7p]['speed'] || 0x1;
      for (var c7A = 0x0; c7A < this['loadout']['length']; ++c7A) this['reloads']['push'](0x0), this['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['push'](c7o['weapons'][this['loadout'][c7A]]['ammo']);
      this['reloadTimer'] = 0x0, this['regenDelay'] = c7o['classes'][c7p]['regenDelay'] || c7t['regenDelay'], this['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] = c7o['classes'][c7p]['health'] * (c7o['config'] && c7o['config']['healthMlt'] || 0x1), this['health'] = this['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'], this['hpChase'] = 0x1, this['regen'] = c7o['mode'] && c7o['mode']['noRegen'] || !c7o['config'] || !c7o['config']['hpRegen'] ? 0x0 : c7o['classes'][c7p]['regen'] || c7t['regenVal'];
    }, this['updateLoadout'] = function(c7o, c7r, c7t = !0x0, c7z, c7A) {
      this['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = c7r, this['reloads']['length'] = 0x0, this['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length'] = 0x0, this['loadout'] = [c7z], this['skins'] = [-0x1, -0x1], c7q['isNumber'](c7A) && this['loadout']['push'](c7A), c7q['isNumber'](c7A) && (this['secIndex'] = c7A), 0x0 > this['loadout']['indexOf'](0xc) && this['loadout']['push'](0xc);
      for (var c7R = 0x0; c7R < this['loadout']['length']; ++c7R) this['reloads']['push'](0x0), this['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['push'](c7o['weapons'][this['loadout'][c7R]]['ammo']);
      this['customLoadout'] = [...this['loadout']], c7t && this['active'] && c7p['regenMeshes'](this);
    }, this['resetInputs'] = function() {
      this['inputs']['length'] = 0x0;
    }, this['BwVXohDwkFSKbGKMAdgiBzDuIyQDOdiE'] = function(c7o, c7z, c7U, c7V) {
      this['recon'] = c7U;
      var c7W = Math['max'](0x0, Math['min'](c7o[0x1], c7t['dltMx'])) / this['deltaDiv'];
      this['inputSN'] = c7o[0x0];
      var c7X = c7q['getAngleDst'](c7o[0x2], this['xDire']);
      c7p['saveSpin'](this, c7X);
      var c7Y = !c7U && this['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'];
      if (c7Y && (this['leanAnimX'] -= c7X * c7t['leanSens'], this['leanAnimX'] = c7q['limit'](this['leanAnimX'], c7t['leanMax']), this['leanAnimY'] -= c7q['getAngleDst'](c7o[0x3], this['yDire']) * c7t['leanSens'], this['leanAnimY'] = c7q['limit'](this['leanAnimY'], c7t['leanMax']), this['leanAnimX'] && (this['leanAnimX'] *= Math['pow'](c7t['leanPull'], c7W)), this['leanAnimY'] && (this['leanAnimY'] *= Math['pow'](c7t['leanPull'], c7W)), this['leanAnimZ'] && (this['leanAnimZ'] *= Math['pow'](c7t['leanPullZ'], c7W)), this['bobAnimZ'] && (this['bobAnimZ'] *= Math['pow'](c7t['bobPullZ'], c7W)), this['bobAnimY'] && (this['bobAnimY'] *= Math['pow'](c7t['bobPullY'], c7W)), this['recoilX'] && (this['recoilX'] *= Math['pow'](c7t['leanPull'], c7W)), this['recoilZ'] && (this['recoilZ'] *= Math['pow'](c7t['leanPull'], c7W)), this['inspecting'] && this['inspectX'] < Math['PI'] / 2.8 && (this['inspectX'] += 0.1 * (Math['PI'] / 2.8 - this['inspectX']))), this['xDire'] = c7z['map']['config']['camRot'] ? (c7o[0x2] || 0x0)['round'](0x3) : 0x0, this['yDire'] = c7z['map']['config']['camRot'] ? (c7o[0x3] || 0x0)['round'](0x3) : 0x0, this['yDire'] > Math['PI'] / 0x2 ? this['yDire'] = Math['PI'] / 0x2 : this['yDire'] < -Math['PI'] / 0x2 && (this['yDire'] = -Math['PI'] / 0x2), !c7V) {
        if (0x2 == c7o[0xb] ? c7p['swapMelee'](this, c7U) : 0x1 == c7o[0xb] ? c7p['swapSecondary'](this, c7U) : 0x3 == c7o[0xb] ? c7p['swapWeapon'](this, null, null, void 0x0, 0x0, c7U) : c7o[0xa] && c7p['swapWeapon'](this, c7o[0xa], !0x1, void 0x0, void 0x0, c7U), c7U || (this['recoilForce'] && (this['recoilAnim'] += this['recoilForce'] * c7W, this['IIFXYtgrbBDkLbHBbEEVkUgAeyEpFaGV'] += this['recoilForce'] * (this['weapon']['recoilY'] || 0x1) * (0x1 - 0.3 * this['crouchVal']) * c7W, this['recoilForce'] *= Math['pow'](this['weapon']['recoverF'], c7W)), this['recoilAnim'] && (this['recoilAnim'] *= Math['pow'](this['weapon']['recover'], c7W)), this['IIFXYtgrbBDkLbHBbEEVkUgAeyEpFaGV'] && (this['IIFXYtgrbBDkLbHBbEEVkUgAeyEpFaGV'] *= Math['pow'](this['weapon']['recoverY'] || this['weapon']['recover'], c7W))), this['oldX'] = this['x'], this['oldY'] = this['y'], this['oldZ'] = this['z'], this['weapon']['zoom'] && 'prop' != this['team'] && (!this['weapon']['noAim'] || 0x0 < this['swapTime'])) {
          var c7Z = 0x0 >= this['reloadTimer'] && 0x0 >= this['swapTime'];
          c7o[0x6] && 0x0 < this['aimVal'] && c7Z ? (c7p['cancelInspect'](this), this['aimDir'] = 0x0, this['aimVal'] -= 0x1 / (this['weapon']['aimSpeed'] / c7W), 0x0 >= this['aimVal'] && (this['aimVal'] = 0x0, this['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && !c7U && c7p['toggleAim'](this, 0x1)), this['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && !c7U && !this['weapon']['scope'] && c7p['updateAim'](this, 0x1 - this['aimVal'])) : (!c7Z || !c7o[0x6] && 0x1 > this['aimVal']) && (this['aimDir'] = 0x1, !this['aimVal'] && this['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && !c7U && c7p['toggleAim'](this, 0x0), this['aimVal'] += 0x1 / (this['weapon']['aimSpeed'] / c7W), 0x1 <= this['aimVal'] && (this['aimVal'] = 0x1), this['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && !c7U && !this['weapon']['scope'] && c7p['updateAim'](this, 0x1 - this['aimVal'])), 0x0 == this['aimVal'] ? this['aimTime'] += c7W : this['aimTime'] = 0x0;
        }
        c7o[0x8] && 0x1 > this['crouchVal'] && !this['onLadder'] ? (this['crouchVal'] += c7t['crouchSpeed'] * c7W, 0x1 <= this['crouchVal'] && (this['crouchVal'] = 0x1), this['onGround'] ? c7Y && (this['bobAnimY'] -= 1.4 * c7t['crouchAnim'] * c7W) : this['y'] += c7t['crouchSpeed'] * c7W) : !c7o[0x8] && 0x0 < this['crouchVal'] && (this['crouchVal'] -= c7t['crouchSpeed'] * c7W, 0x0 >= this['crouchVal'] && (this['crouchVal'] = 0x0), this['onGround'] ? c7Y && (this['bobAnimY'] += c7t['crouchAnim'] * c7W) : this['y'] -= c7t['crouchSpeed'] * c7W), this['crouchVal'] && (this['crouchVal'] = this['crouchVal']['round'](0x3)), c7p['updateHeight'](this);
        var c80, c81 = this['onGround'] || this['onLadder'];
        c80 = c81 ? (this['terrainSlipping'] ? c7t['slippingSpeed'] : c7t['playerSpeed']) * this['speed'] : c7t['airSpeed'], c80 *= this['aimVal'] ? 0x1 : c7t['aimSlow'], c80 *= c7z['mode']['spdMlt'] && c7z['mode']['spdMlt'][this['team']] || 0x1, c80 *= this['crouchVal'] ? c7t['crouchSlow'] : 0x1, c80 *= this['weapon']['spdMlt'] * c7W;
        var c82 = 0x0;
        if (c82 = this['onLadder'] ? c7t['ladderDecel'] : this['terrainSlipping'] ? c7t['terrainSlipDecel'] : this['onTerrain'] ? c7t['terrainDecel'] : this['onGround'] ? c7t['groundDecel'] : c7t['airDecel'], 0.5 >= this['crouchVal'] && (this['canSlide'] = !0x0), this['onGround'] && this['crouchVal'] || (this['slideTimer'] = 0x0), this['slideTimer'])
          if (this['slideTimer'] -= c7W, 0x0 >= this['slideTimer']) this['slideTimer'] = 0x0;
          else {
            c80 *= 0.25, c82 = this['onTerrain'] ? c7t['terrainSlideDecel'] : c7t['slideDecel'];
            var c83 = c7q['xBIWCnLLiqfSLgCsDrqJOyoncrZfplTa'](this['xVel'], this['zVel'], 0x0, 0x0),
              c84 = c7q['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](0x0, 0x0, this['xVel'], this['zVel']),
              c85 = c7q['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](Math['sin'](this['xDire']), Math['cos'](this['xDire']), 0x0, 0x0),
              c86 = 0.03 * c7q['getAngleDst'](c85, c84);
            this['xVel'] = c83 * Math['cos'](c84 + Math['PI'] - c86), this['zVel'] = c83 * Math['sin'](c84 + Math['PI'] - c86);
          } this['jumpCooldown'] = Math['max'](this['jumpCooldown'] - c7W, 0x0), this['onGround'] && 0x0 >= this['jumpCooldown'] && c7p['tryJump'](this, c7o[0x7]), c81 || (this['yVel'] -= c7W * (c7t['gravity'] * (c7z['config'] ? c7z['config']['gravMlt'] : 0x1)));
        var c87 = c7t['movDirs'][c7o[0x4]];
        if (c87 != Math['PI'] && 0x0 != c87 && c87 != Math['PI'] / 0x2 && c87 != -Math['PI'] / 0x2 && (c80 *= c7z['config'] ? c7z['config']['strafeSpd'] : 0x1), void 0x0 !== c87 && (this['xVel'] += c80 * Math['cos'](c87 - this['xDire']), this['zVel'] += c80 * Math['sin'](c87 - this['xDire'])), this['xVel'] && (this['x'] += this['xVel'] * c7z['map']['config']['speedX'] * c7W, this['xVel'] *= Math['pow'](c82, c7W), this['xVel'] = c7q['cropVal'](this['xVel'], c7t['decelMin'])), this['yVel'] && (this['y'] += this['yVel'] * c7z['map']['config']['speedY'] * c7W, this['yVel'] *= Math['pow'](c82, c7W)), this['zVel'] && (this['z'] += this['zVel'] * c7z['map']['config']['speedZ'] * c7W, this['zVel'] *= Math['pow'](c82, c7W), this['zVel'] = c7q['cropVal'](this['zVel'], c7t['decelMin'])), !c7U) {
          this['xVel'] || this['yVel'] || this['zVel'] ? this['noMovT'] = 0x0 : this['noMovT'] += c7W;
          var c88 = 'stalk' == this['team'] && 0x12c <= this['noMovT'];
          this['isHidden'] != c88 && (this['isHidden'] = c88, this['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && (hiddenMsg['style']['display'] = this['isHidden'] ? 'block' : 'none'));
        }
        'prop' == this['team'] && c7o[0x5] && c7p['pickProp'](this);
        var c89 = this['onGround'] && !this['ZkZQqRPzcQDgGFDFbfLXKBwAgmjlNSEB'],
          c8a = !0x1;
        this['onGround'] = !0x1, this['onLadder'] = !0x1;
        for (var c8b = !0x1, c8c = 'Pickup', c8d = !0x1, c8e = 0x0; c8e < c7z['map']['manager']['objects']['length']; ++c8e)
          if (((c7A = c7z['map']['manager']['objects'][c8e])['active'] || !c7A['active'] && c7A['closeable']) && c7A['tRadius'] && this['collides'](c7A, c7A['tRadius']) && (c7A['gate'] ? !c7A['noMsg'] && (c8d = !0x1, c8b = !0x0, c8c = (!c7A['active'] && c7A['closeable'] ? 'Close' : 'Open') + '\x20gate' + (0x0 == c7A['scoreP'] ? '' : '\x20<span\x20style=\x27color:' + (this['score'] >= c7A['scoreP'] ? c7r['interactPopup']['enough'] : c7r['interactPopup']['notEnough']) + '\x27>[' + (c7A['scoreP'] || 0x0) + ']</span>')) : c7A['bank'] && (c8b = !0x0, c8c = '<span\x20style=\x27color:' + c7r['interactPopup']['notEnough'] + '\x27>[' + c7q['commaFormatNum'](c7A['deposited'] || 0x0) + ']</span>', c8d = [c7A['depositAmnt'], c7A['withdrawAmnt']])), c7A['active'] && this['collides'](c7A))
            if (c7A['onEnter'] && this['inObject'] != c7A['sid']) c7z['onTrigger'](this, c7A), this['inObject'] = c7A['sid'];
            else if (c7A['score']) this['scoreObjs'][c7A['sid']] || (this['scoreObjs'][c7A['sid']] = 0x1, c7p['score'](this, c7A['scoreP']));
        else if (c7A['teleporter']) c7z['checkTeleport'](this, c7A);
        else if (c7A['checkpoint']) c7z['setCheckPoint'](this, c7A);
        else if (c7q['isNumber'](c7A['pickup']) && 'inf' != this['team']) c7A['noMsg'] || (c8b = !0x0, c8d = !0x1, c8c = 'Pickup\x20weapon' + (0x0 == c7A['scoreP'] ? '' : '\x20<span\x20style=\x27color:' + (this['score'] >= c7A['scoreP'] ? c7r['interactPopup']['enough'] : c7r['interactPopup']['notEnough']) + '\x27>[' + (c7A['scoreP'] || 0x0) + ']</span>'));
        else if (c7A['flag']) c7z['pickupFlag'](this, c7A);
        else if (c7A['trigger']) this['flag'] && c7A['team'] == this['team'] && c7A['flagObj'] && !c7A['flagObj']['carrier'] && c7A['flagObj']['x'] == c7A['flagObj']['orgX'] && c7A['flagObj']['y'] == c7A['flagObj']['orgY'] && c7A['flagObj']['z'] == c7A['flagObj']['orgZ'] && c7z['capFlag'](this, this['flag']);
        else if (c7A['kill']) this['flag'] && (c7z['resetFlag'](this['flag']), this['flag'] = null), c7p['hasServer'] && c7p['kill'](this);
        else if (c7A['ladder']) {
          if (this['y'] < c7A['y'] + c7A['height'] && 0x0 == this['crouchVal'] && (this['yVel'] = 0x0, this['onLadder'] = !0x0, this['onTerrain'] = !0x1, this['stepSrc'] = null, void 0x0 !== c87)) {
            var c8f = (Math['abs'](c7q['getAngleDst'](c7A['dir'], c87 - this['xDire'])) - Math['PI'] / 0x2) / (Math['PI'] / 0x2);
            0x0 < c8f && (this['y'] += c7t['ladderSpeed'] * this['weapon']['spdMlt'] * c7W * c8f, this['y'] <= c7A['y'] - c7A['height'] ? this['y'] = c7A['y'] - c7A['height'] : this['y'] >= c7A['y'] + c7A['height'] && (this['y'] = c7A['y'] + c7A['height']));
          }
        } else if (c7A['ramp']) {
          if (this['y'] < c7A['y'] + c7A['height']) {
            var c8g = Math['max'](0x0, Math['min'](0x1, c7q['progressOnLine'](c7A['ramp']['sX'], c7A['ramp']['sZ'], c7A['ramp']['eX'], c7A['ramp']['eZ'], this['x'] + this['scale'] * Math['cos'](c7A['dir']), this['z'] + this['scale'] * Math['sin'](c7A['dir'])))),
              c8h = c7A['y'] - c7A['height'] + 0x2 * c7A['height'] * c8g;
            if (this['y'] <= c8h || c89)
              if (c7A['boost']) {
                this['y'] = c8h;
                var c8i = c7A['boost'] * c7t['boosterSpd'] * c7W;
                this['xVel'] += c8i * Math['sin'](-c7A['dir'] + Math['PI'] / 0x2) * Math['cos'](c7A['boostDr']), this['zVel'] += c8i * Math['cos'](-c7A['dir'] + Math['PI'] / 0x2) * Math['cos'](c7A['boostDr']), this['yVel'] += c8i * Math['sin'](c7A['boostDr']);
              } else this['oldY'] > this['y'] && c7p['resetStep'](this, c7U), this['y'] = c8h, this['yVel'] = 0x0, this['onGround'] = !0x0, this['onTerrain'] = !0x1, c8a = !0x0, this['rampFix'] = c7A['y'] - c7A['height'] + 0x2 * c7A['height'] * Math['round'](c8g);
          }
        } else !c7A['isBorder'] && this['y'] < c7A['y'] + c7A['height'] && c7A['y'] + c7A['height'] - this['y'] <= c7t['climbHeight'] && this['oldY'] < c7A['y'] + c7A['height'] && c89 ? (this['y'] += 0.3 * (c7A['y'] + c7A['height'] - this['y']), this['onGround'] = !0x0, this['onTerrain'] = !0x1) : this['oldY'] >= c7A['y'] + c7A['height'] + (c7A['isBorder'] ? c7t['borderH'] : 0x0) ? (this['stepSrc'] = c7A['stepSrc'], this['oldY'] > this['y'] && c7p['resetStep'](this, c7U), this['y'] = c7A['y'] + c7A['height'] + (c7A['isBorder'] ? c7t['borderH'] : 0x0), this['yVel'] = 0x0, this['onGround'] = !0x0, this['onTerrain'] = !0x1) : this['oldX'] - this['scale'] >= c7A['x'] + c7A['width'] - 0.00001 ? (this['x'] = c7A['x'] + c7A['width'] + this['scale'], this['xVel'] = 0x0) : this['oldX'] + this['scale'] <= c7A['x'] - c7A['width'] + 0.00001 ? (this['x'] = c7A['x'] - c7A['width'] - this['scale'], this['xVel'] = 0x0) : this['oldZ'] - this['scale'] >= c7A['z'] + c7A['length'] - 0.00001 ? (this['z'] = c7A['z'] + c7A['length'] + this['scale'], this['zVel'] = 0x0) : this['oldZ'] + this['scale'] <= c7A['z'] - c7A['length'] + 0.00001 ? (this['z'] = c7A['z'] - c7A['length'] - this['scale'], this['zVel'] = 0x0) : this['oldY'] + this['height'] <= c7A['y'] - c7A['height'] && (this['y'] = c7A['y'] - c7A['height'] - this['height'], this['yVel'] = 0x0);
        else c7A['sid'] == this['inObject'] && (this['inObject'] = null);
        !this['ZkZQqRPzcQDgGFDFbfLXKBwAgmjlNSEB'] && null != this['rampFix'] && Math['abs'](this['y'] - this['rampFix']) <= c7t['climbHeight'] ? !c8a && (this['y'] = this['rampFix'], this['onGround'] = !0x0, this['yVel'] = 0x0, this['rampFix'] = null) : this['rampFix'] = null;
        var c8j = c7z['map']['terrain'];
        if (c8j) {
          var c8k = c8j['raycast'](this['x'], -this['z'], 0x2710, 0x0, 0x0, -0x4e20, !0x0);
          if (c8k) {
            var c8l = c8k['z'];
            if (this['y'] <= c8l && (this['oldY'] > this['y'] && c7p['resetStep'](this, c7U), this['onTerrain'] = !0x0), this['onTerrain']) {
              this['onGround'] = !0x0;
              var c8m = c8j['_raycastNormal'];
              c8m['set'](c8m['x'], c8m['z'], -c8m['y']), this['y'] = c8l;
              var c8n = c8m['x'],
                c8o = -0x1 + c8m['y'],
                c8p = c8m['z'],
                c8q = Math['sqrt'](c8n * c8n + c8o * c8o + c8p * c8p);
              if (this['terrainSlipping'] = c8q > c7t['terrainSlideThreshold'], this['terrainSlipping'] = !0x1, this['terrainSlipping']) c8q *= c7t['gravity'] * (c7z['config'] ? c7z['config']['gravMlt'] : 0x1) * c7t['terrainGravityMlt'] * c7W, this['xVel'] += c8n * c8q, this['yVel'] += c8o * c8q, this['zVel'] += c8p * c8q;
              else this['yVel'] = 0x0, this['jumpCooldown'] = 0x0;
            }
          }
          this['onTerrain'] || (this['terrainSlipping'] = !0x1);
        }
        if (this['onGround'] ? this['airTime'] = 0x0 : this['airTime'] += c7W, !c7U && 'prop' != this['team']) {
          var c8r = c7q['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](this['oldX'], this['oldY'], this['oldZ'], this['x'], this['y'], this['z']);
          if (this['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && (this['onLadder'] && (c8r *= 1.4), c7q['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](this['oldX'], this['oldZ'], this['x'], this['z']), this['bobAnimZ'] += c7q['xBIWCnLLiqfSLgCsDrqJOyoncrZfplTa'](this['oldX'], this['oldZ'], this['x'], this['z']) * c7t['bobMltZ'], this['bobAnimY'] -= (this['oldY'] - this['y']) * c7t['bobMltY'], c81 && void 0x0 !== c87 ? (c7p['playerStep'](this, c8r), this['leanAnimZ'] -= c8r * c7t['leanMltZ'] * (this['weapon']['zLnM'] || 0x1) * Math['cos'](c87)) : this['stepVal'] *= Math['pow'](c7t['stepPull'], c7W), this['stepChase'] != this['stepVal'] && (this['stepChase'] += 0.15 * (this['stepVal'] - this['stepChase']))), this['spreadPlus'] += c8r * c7t['spreadMove'] + Math['abs'](this['oldY'] - this['y']) * c7t['spreadFall'], this['spreadPlus'] *= Math['pow'](c7t['spreadRecover'], c7W), this['spread'] = Math['max'](this['weapon']['minSpread'] || 0x0, (this['weapon']['spread'] - this['weapon']['spread'] * c7t['crouchSpread'] * this['crouchVal'] + this['recoilAnim'] * (this['weapon']['spreadInc'] || 0x1) * c7t['spreadMlt'] + this['spreadPlus']) * this['aimVal']), c7o[0x9] && c7p['reload'](this), 0x0 < this['reloadTimer']) {
            var c8s = this['reloadTimer'];
            this['reloadTimer'] -= c7W, this['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && c8s >= this['weapon']['reload'] / 0x2 && this['reloadTimer'] < this['weapon']['reload'] / 0x2 && c7p['endReload'](this['weapon']), 0x0 >= this['reloadTimer'] && (this['reloadTimer'] = 0x0, this['TpWpiIwBuzDTtkhzEOcjaBWGIOZAPHZH'] = !0x1, this['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ'][this['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] = this['weapon']['ammo'], c7p['updatePlayerAmmo'](this));
          }
          0x0 < this['swapTime'] && (this['swapTime'] -= c7W, 0x0 > this['swapTime'] && (this['swapTime'] = 0x0));
          for (c8e = 0x0; c8e < this['reloads']['length']; ++c8e) 0x0 < this['reloads'][c8e] && (this['reloads'][c8e] -= c7W, 0x0 > this['reloads'][c8e] && (this['reloads'][c8e] = 0x0));
          if (this['weapon']) {
            var c8t = this['burstCount'] || !this['weapon']['stgpSgblazSjGwbIakgOcFlZgHYIHWDS'] && c7o[0x5];
            this['TpWpiIwBuzDTtkhzEOcjaBWGIOZAPHZH'] && !c7o[0x5] && (this['TpWpiIwBuzDTtkhzEOcjaBWGIOZAPHZH'] = !0x1), !this['TpWpiIwBuzDTtkhzEOcjaBWGIOZAPHZH'] && c7o[0x5] && (c8t = !0x0), c8t && 0x0 >= this['reloads'][this['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] && 0x0 >= this['swapTime'] && 0x0 >= this['reloadTimer'] && (this['noMovTimer'] = 0x0, this['weapon']['melee'] ? c7p['melee'](this) : 0x0 < this['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ'][this['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] ? c7p['shoot'](this, c7o) : c7p['reload'](this));
          }
        }
        c7U && c7o['velObj'] && (this['xVel'] -= c7o['velObj']['x'], this['zVel'] -= c7o['velObj']['y'], this['yVel'] -= c7o['velObj']['z'], this['onGround'] = !0x1), c7p['playerCollisions'](this), c7p['updateInteract'](this, c8b, c8c, c8d);
      }
    }, this['collides'] = function(c7o, c7p) {
      return this['x'] - this['scale'] < c7o['x'] + (c7o['width'] + (c7p || 0x0)) && this['x'] + this['scale'] > c7o['x'] - (c7o['width'] + (c7p || 0x0)) && this['z'] - this['scale'] < c7o['z'] + (c7o['length'] + (c7p || 0x0)) && this['z'] + this['scale'] > c7o['z'] - (c7o['length'] + (c7p || 0x0)) && this['y'] <= c7o['y'] + c7o['height'] + (c7o['isBorder'] ? c7t['borderH'] : 0x0) && this['y'] + this['height'] >= c7o['y'] - c7o['height'];
    }, this['getStateConst'] = function() {
      return this['ping'] * (this['lagComp'] || 0x1);
    }, this['update'] = function(c7o, c7r) {
      if (this['active']) {
        if (this['inputs']['length']) {
          for (var c7z = 0x0; c7z < this['inputs']['length']; ++c7z) this['BwVXohDwkFSKbGKMAdgiBzDuIyQDOdiE'](this['inputs'][c7z], c7o);
          this['resetInputs']();
        }
        if (this['idleAnim'] += c7t['idleAnimS'] * c7r, this['hpChase'] > this['health'] / this['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] ? (this['hpChase'] -= 0.0002 * c7r, 0x0 >= this['hpChase'] && (this['hpChase'] = 0x0)) : this['hpChase'] = this['health'] / this['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'], this['interpolate']) {
          this['dt'] += c7r;
          var c7A = Math['min'](1.6, this['dt'] / (c7t['serverSendRate'] * c7t['interpolation']));
          c7A /= c7o['config'] ? c7o['config']['deltaMlt'] : 0x1, this['oldX'] = this['x'], this['oldY'] = this['y'], this['oldZ'] = this['z'], this['x'] = this['x1'] + (this['x2'] - this['x1']) * c7A, this['y'] = this['y1'] + (this['y2'] - this['y1']) * c7A, this['z'] = this['z1'] + (this['z2'] - this['z1']) * c7A, this['onGround'] && c7p['playerStep'](this, c7q['xBIWCnLLiqfSLgCsDrqJOyoncrZfplTa'](this['oldX'], this['oldZ'], this['x'], this['z'])), this['xDire'] = Math['lerpAngle'](this['xDir2'], this['xDir1'], Math['min'](0x1, c7A)), this['yDire'] = Math['lerpAngle'](this['yDir2'], this['yDir1'], Math['min'](0x1, c7A));
        }
      }
    }, this['resetMeleeAnim'] = function() {
      this['meleeAnim']['armT'] = 0x0, this['meleeAnim']['armM'] = 0x0, this['meleeAnim']['armE'] = 0x0, this['meleeAnim']['weaR'] = 0x0, this['meleeAnim']['weaM'] = 0x0, this['meleeAnim']['armY'] = 0x0, this['meleeAnim']['armR'] = 0x0, this['meleeAnim']['lArm'] = 0x0, this['meleeAnim']['flipW'] = 0x0;
    }, this['reset'] = function() {
      this['checkPoint'] = null, this['checkPointList']['length'] = 0x0, this['weaponTier'] = 0x0, this['customLoadout'] = null, this['lastPicked']['length'] = 0x0, this['inObject'] = null;
    };
  };
  c7o['exports']['Player'] = c7t, c7o['exports']['manager'] = function(c7o, c7p, c8C, c8D, c8E, c8F, c8G, c8H) {
    this['list'] = [];
    var c8I, c8J, c8K, c8L = c7q(0x4e);
    this['hasServer'] = c8H ? 0x1 : 0x0, this['setTeam'] = function(c7p) {
      if (!c7o['waitTimers'] && c7o['mode']['convTeam']) c7p['team'] = c7o['mode']['convTeam'];
      else if (c7o['mode']['startTeam']) c7p['team'] = c7o['mode']['startTeam'];
      else if (c7o['mode']['friendly']) c7p['team'] = 0x1;
      else if (c7o['mode']['clanWar']) c7p['team'] = c7p['account'] && c7p['account']['clan'] ? c7p['account']['clan'] : 0x1;
      else if (!c7p['team'] && c7o['mode']['teams'] && !c7p['spectating']) {
        for (var c7q = 0x0, c7r = 0x0, c7t = 0x0; c7t < this['list']['length']; ++c7t) this['list'][c7t]['spectating'] || (this['list'][c7t]['team'] == (c7o['mode']['teamNs'] ? c7o['mode']['teamNs'][0x0] : 0x1) && c7q++, this['list'][c7t]['team'] == (c7o['mode']['teamNs'] ? c7o['mode']['teamNs'][0x1] : 0x2) && c7r++);
        c7p['team'] = c7q >= c7r ? 0x2 : 0x1, c7o['mode']['teamNs'] && (c7p['team'] = c7o['mode']['teamNs'][c7p['team'] - 0x1]);
      }
    }, this['update'] = function(c7q) {
      for (var c7r = 0x0; c7r < this['list']['length']; ++c7r) this['list'][c7r]['active'] ? (this['list'][c7r]['update'](c7o, c7q), c8H && (this['tickPlayer'](this['list'][c7r], c7q), this['storeState'](this['list'][c7r]), this['list'][c7r]['y'] <= c7o['map']['deathY'] && (this['list'][c7r]['flag'] && (c7o['resetFlag'](this['list'][c7r]['flag']), this['list'][c7r]['flag'] = null), this['kill'](this['list'][c7r]))), c7p && (this['updateMsh'](this['list'][c7r]), this['updateHeight'](this['list'][c7r]))) : this['list'][c7r]['deathInfo'] && this['list'][c7r]['deathInfo']['tillNext'] && (this['list'][c7r]['deathInfo']['tillNext'] -= c7q, 0x0 >= this['list'][c7r]['deathInfo']['tillNext'] && (this['list'][c7r]['deathInfo']['tillNext'] = null, c8H['send'](this['list'][c7r]['id'], 'frs')));
    }, this['playerCollisions'] = function(c7p) {
      if (c8H && c7o['mode']['convTeam'] && !c7o['waitTimers'])
        for (var c7q = 0x0; c7q < this['list']['length']; ++c7q)
          if (c7p['active'] && this['list'][c7q]['active'] && c7p['team'] == c7o['mode']['convTeam'] && c7p['team'] != this['list'][c7q]['team']) {
            var c7r = c8G['fvcbEmTb'] / 0x2;
            c8E['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](c7p['x'], c7p['y'] + c7r, c7p['z'], this['list'][c7q]['x'], this['list'][c7q]['y'] + c7r, this['list'][c7q]['z']) <= 2.4 * c7r && (c8H['broadcast']('game' + c7o['sid'], 'ac', c7p['sid'], this['list'][c7q]['sid'], c7o['mode']['convWord']), this['score'](c7p, 0x64), c7p['convs']++, c7o['updateTeam'](this['list'][c7q], c7p['team']), c7o['mode']['killConv'] && this['kill'](this['list'][c7q], null, null, !0x0), c7o['gameTimer'] && (c7o['gameTimer'] += 0x2710));
          }
    }, this['activeCount'] = function() {
      for (var c7o = 0x0, c7p = 0x0; c7p < this['list']['length']; ++c7p) this['list'][c7p]['active'] && c7o++;
      return c7o;
    }, this['forcePos'] = function() {
      for (var c7o = 0x0; c7o < this['list']['length']; ++c7o) this['list'][c7o]['forcePos'] = !0x0, this['list'][c7o]['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] && (this['list'][c7o]['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']['visible'] = !0x1, this['list'][c7o]['BuLLwMAKfmOLWuBvUnENglYISdUKniUf'] = !0x1);
    }, this['saveSpin'] = function(c7o, c7p) {
      c8H && (c7o['spins']['unshift'](c7p), c7o['spins']['length'] > c8G['spinTimer'] / c8G['serverTickRate'] && (c7o['spins']['length'] = Math['round'](c8G['spinTimer'] / c8G['serverTickRate'])));
    }, this['getSpin'] = function(c7o) {
      for (var c7p = 0x0, c7q = 0x0; c7q < c7o['spins']['length']; ++c7q) c7p += c7o['spins'][c7q];
      return Math['abs'](c7p * (0xb4 / Math['PI']));
    }, this['storeState'] = function(c7p) {
      c7p['stateHistory']['unshift']({
        'time': c7o['now'],
        'x': c7p['x'],
        'y': c7p['y'],
        'z': c7p['z']
      });
      for (var c7q = c7p['stateHistory']['length'] - 0x1; 0x0 <= c7q; --c7q) c7o['now'] - c7p['stateHistory'][c7q]['time'] >= c8G['stateHistory'] && c7p['stateHistory']['splice'](c7q, 0x1);
    }, this['fetchState'] = function(c7p, c7q) {
      for (var c7r = c7o['now'] - (c7q + c8G['serverSendRate'] * c8G['interpolation']), c7t = 0x0; c7t < c7p['stateHistory']['length']; ++c7t)
        if (c7p['stateHistory'][c7t]['time'] <= c7r) return c7p['stateHistory'][c7t];
      return c7p['stateHistory'][c7p['stateHistory']['length'] - 0x1];
    }, this['updateMsh'] = function(c7q, c7r) {
      if (c7q['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']) {
        var c7t = c7o['config']['thirdPerson'] || c7o['map']['config'] && (c7o['map']['config']['camOffX'] || c7o['map']['config']['camOffY'] || c7o['map']['config']['camOffZ']),
          c8C = c7q['weapon']['animWhileAim'] ? 0x1 : c7q['aimVal'],
          c8D = (0x1 - (0x1 - c8G['aimAnimMlt']) * (0x1 - c7q['aimVal'])) * c8G['animMult'] * c7p['weaponBob'],
          c8E = 0x1 - 0.8 * c7q['crouchVal'],
          c8F = (0x1 - (0x1 - c7q['aimVal'])) * c8G['animMult'],
          c8H = (0x1 - (0x1 - c7q['aimVal']) * (c7q['weapon']['recoilYMA'] || 0x1)) * c8G['animMult'];
        c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] || (c8F = 0x0);
        var c8I = 0x1 - (c7q['weapon']['recoilZM'] || 0.5) * (0x1 - c8C),
          c8J = (0x1 - (c7q['weapon']['zRot'] || 0.3) * (0x1 - c8C)) * (c7q['weapon']['zRM'] || 0x1) * c7p['weaponBob'],
          c8K = 0x1 - (c7q['weapon']['jYMlt'] || 0x1) * (0x1 - c8C),
          c8L = 0x1 - 0.45 * (0x1 - c8C),
          c9l = 0.9 * c7q['bobAnimY'] * c8K * c7p['weaponBob'] * c8F,
          c9m = c7q['landBobY'] * (c7q['weapon']['landBob'] || 0x1) * 0.6 * (0x1 - 0.75 * (0x1 - c8C)) * c7p['weaponBob'];
        c7q['landBobYR'] != c9m && (c7q['landBobYR'] += 0.1 * (c9m - c7q['landBobYR']));
        var c9n = c7q['landBobY'] * (c7q['weapon']['landBob'] || 0x1) * 0.1,
          c9o = 0x1 - 0.5 * c7q['crouchVal'],
          c9p = (c7q['crouchVal'], c7q['jumpRot'] * c9o * c8F * c7p['weaponBob']);
        c7q['jumpRotM'] != c9p && (c7q['jumpRotM'] += 0.08 * (c9p - c7q['jumpRotM']));
        var c9q = c7q['jumpBobY'] * (c7q['weapon']['jumpYM'] || 0x1) * c8F * c9o * c7p['weaponBob'],
          c9r = 0x1 - 0.89 * (0x1 - c8C),
          c9s = 0x1 - (c7q['weapon']['aimRecMlt'] || 0x1) * (0x1 - c8C),
          c9t = c7r ? 0.05 : c8G['stepAnim'],
          c9u = Math['sin'](c7q['stepVal']) * c9t,
          c9v = Math['cos'](0x2 * c7q['stepVal']) / 0x2 * c9t,
          c9w = -Math['sin'](c7q['stepChase']) * c9t,
          c9x = -Math['cos'](0x2 * c7q['stepChase']) / 0x2 * c9t,
          c9y = c7t ? 0x0 : 0x1 - c7q['aimVal'],
          c9z = 0.5 * (0.5 >= c9y ? c9y : 0.5 - (c9y - 0.5)),
          c9A = c7q['swapTime'] / c7q['weapon']['swapTime'],
          c9B = c7q['weapon']['xOff'] * (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? c7p['weaponOffX'] : 0x1),
          c9C = c7q['weapon']['yOff'] * (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? c7p['weaponOffY'] : 0x1),
          c9D = c7q['weapon']['zOff'] * (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? c7p['weaponOffZ'] : 0x1),
          c9E = 0x0;
        0x0 < c7q['reloadTimer'] && (c9E = 0.5 < (c9E = 0x1 - c7q['reloadTimer'] / c7q['weapon']['reload']) ? 0.5 - (c9E - 0.5) : c9E);
        var c9F = 1.75 * (0x1 - 0.88 * (0x1 - c7q['aimVal'])) * c7p['weaponBob'];
        c7p['moveMesh'](c7q['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'], c7q['x'], c7q['y'] + (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && !c7t ? 0x0 : Math['abs'](3.5 * c9u)), c7q['z']), 'prop' != c7q['team'] && c7p['rotateMesh'](c7q['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'], c7q['xDire'] + (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? c7t ? 0.5 * -c9u : 0x0 : 0x2 * -c9u)), c9v -= c9v * (c7q['crouchVal'] * c8G['crouchAnimMlt']), c9u -= c9u * (c7q['crouchVal'] * c8G['crouchAnimMlt']);
        for (var c9G = 0x0; c9G < c7q['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA']['length']; ++c9G) c7p['lowSpec'] ? c7q['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA'][c9G]['visible'] = !0x1 : c7q['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA'][c9G]['rotation']['x'] = c9u * (0x1 == c9G || 0x3 == c9G ? 0x1 : -0x1) * 0x7 + (0x1 < c9G ? -0.6 : 0x0);
        for (c9G = 0x0; c9G < c7q['armMeshes']['length']; ++c9G) - (c7q[(0x0 == c9G ? 'l' : 'r') + 'HndTweenA'] || 0x0), c7q['armMeshes'][c9G]['position']['z'] = c9u * (c9G ? -0x1 : 0x1), c7q['armMeshes'][c9G]['rotation']['x'] = c7q['armMeshes'][c9G]['xR'] || 0x0, c7q['armMeshes'][c9G]['rotation']['y'] = c7q['armMeshes'][c9G]['yR'] || 0x0, c7q['armMeshes'][c9G]['position']['x'] = c7q['armMeshes'][c9G]['xP'] || 0x0, c7q['armMeshes'][c9G]['position']['y'] = c7q['armMeshes'][c9G]['yP'] || 0x0, 0x1 == c9G ? (c7q['armMeshes'][0x1]['rotation']['z'] = c7q['armMeshes'][c9G]['zR'] + 0.12 * c7q['crouchVal'] + -0x1 * c9x + 0.2 * c7q['jumpBobY'], c7q['meleeAnim'] && c7q['weaponGeos'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] && (c7q['armMeshes'][0x1]['rotation']['z'] += (c7q['meleeAnim']['armR'] || 0x0) * c8F, c7q['armMeshes'][0x1]['rotation']['y'] += (c7q['meleeAnim']['armT'] || 0x0) * c8F, c7q['armMeshes'][0x1]['position']['x'] += (c7q['meleeAnim']['armM'] || 0x0) * c8F, c7q['armMeshes'][0x1]['position']['z'] += (c7q['meleeAnim']['armE'] || 0x0) * c8F, c7q['armMeshes'][0x1]['position']['y'] += (c7q['meleeAnim']['armY'] || 0x0) * c8F, c7q['weaponGeos'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] && (c7q['weaponGeos'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['rotation']['z'] = c7q['weaponGeos'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['zR'] + (c7q['meleeAnim']['weaR'] || 0x0), c7q['weaponGeos'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['position']['x'] = c7q['weaponGeos'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['xP'] + (c7q['meleeAnim']['weaM'] || 0x0), c7q['weaponGeos'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['rotation']['y'] = c7q['weaponGeos'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['yR'] + (c7q['meleeAnim']['flipW'] || 0x0)))) : c7q['meleeAnim'] && c7q['weaponGeos'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] && (c7q['armMeshes'][0x0]['position']['z'] += c7q['meleeAnim']['lArm'] || 0x0, c7q['armMeshes'][0x0]['rotation']['y'] += 0.1 * (c7q['meleeAnim']['lArm'] || 0x0), c7q['armMeshes'][0x0]['position']['x'] -= 0.3 * (c7q['meleeAnim']['lArm'] || 0x0));
        var c9H = null != c7q['weapon']['attach'] && c7o['attach'][c7q['attachIndex']] ? c7o['attach'][c7q['attachIndex']] : null,
          c9I = c9H && c9H['aimOffY'] || 0x0;
        c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] && c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['flapMesh'] && c7q['weapon']['flap'] && (fRot = 0x3 * c9x + 2.8 * c7q['recoilAnim'] - c7q['leanAnimZ'] - 0x3 * c7q['leanAnimX'] - 1.8 * c7q['landBobYR'] + c9l + 0.1 * c7q['crouchVal'], c7p['rotateMesh'](c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['flapMesh'], c7q['weapon']['flap']['rot'] * c7q['swapTweenA'] + fRot, null, null));
        var c9J = c7t ? 0.4 : 0x1;
        c7p['rotateMesh'](c7q['upperBody'], c9E * (-0x1 * c9J), -0.2 * c9l + +c9n + c9E * (-2.8 * c9J) + c7q['yDire'] * (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && !c7t ? 0x1 : 0.5) + (-Math['PI'] / 0x4 * c9A + c7q['IIFXYtgrbBDkLbHBbEEVkUgAeyEpFaGV'] * c8G['YkPPajzKenHiEMtZrKJtjsveozsargTy']) + (c7q['weapon']['yRot'] || 0x0)), c7p['moveMesh'](c7q['upperBody'], 0x0, c7q['IIFXYtgrbBDkLbHBbEEVkUgAeyEpFaGV'] * ((c7q['weapon']['recoilYM'] || 0.3) * c8H) + (c7q['height'] - c8G['cameraHeight'] - c8G['legHeight']), 0x0), c7p['rotateMesh'](c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']], c7q['inspectX'] + 0.2 * c7q['jumpRotM'] + c7q['recoilX'] * c9r + c7q['leanAnimX'] * c8L * c7p['weaponLean'] * (c7q['weapon']['leanMlt'] || 0x1) + (0.16 * -c9w * c8F * c8E + 0.2 * c7q['leanAnimZ']) * c8D, -Math['cos'](c7q['idleAnim']) * c9o * 0.01 * c9F + (c7q['weapon']['rotOff'] || 0x0) * c8F - 0.25 * (c7q['swapTweenR'] || 0x0) * c8F + 0.6 * -c7q['landBobYR'] + c7q['recoilTweenY'] * c9s + c7q['leanAnimY'] * c8L * c7p['weaponLean'] * (c7q['weapon']['leanMlt'] || 0x1) + -0.9 * c9x * c8D, c9p + c9z + c7q['recoilX'] * c9r + (c7q['swapTweenR'] || 0x0) * c8F * 0.1 + c7q['leanAnimZ'] * c8J + -c7q['inspectX'] * (c7q['weapon']['inspectR'] || 0x0) + ((c7q['weapon']['cLean'] || 0x0) * c7q['crouchVal'] * c8F + 0x0 * -c9w) * c8D), c7p['moveMesh'](c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']], -c7q['jumpRotM'] * c8F * 1.3 + -c7q['inspectX'] * (c7q['weapon']['inspectM'] || 0x0) + (0.35 * c7q['leanAnimZ'] - (c7q['weapon']['cRot'] || 0x0) * c7q['crouchVal'] * c8F + 0.5 * c9u * c8E * c8F) * c7q['aimVal'] * c8D + c9B - (c9B - c7q['weapon']['xOrg']) * c9y, 0.02 * Math['sin'](c7q['idleAnim']) * c9F + c7q['recoilTweenYM'] * c9s + c9q + 0.7 * c9m - 1.5 * c9l + (0.85 * c9v - (c7q['weapon']['cDrop'] || 0x0) * c7q['crouchVal'] * c8F) * c8D + c9C - (c9C - c7q['weapon']['yOrg'] + c9I) * c9y, c9D - (c9D - c7q['weapon']['zOrg']) * c9y + c7q['bobAnimZ'] * c8D + c7q['recoilAnim'] * (c7q['weapon']['recoilZ'] || 0x0) * c8I);
      }
    }, this['updateHeight'] = function(c7q) {
      var c7r = c7o['config']['thirdPerson'] || c7o['map']['config'] && (c7o['map']['config']['camOffX'] || c7o['map']['config']['camOffY'] || c7o['map']['config']['camOffZ']),
        c7t = c8G['crouchDst'] * c7q['crouchVal'];
      if (!c7p || c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && !c7r) c7q['height'] = c8G['fvcbEmTb'] - c7t;
      else {
        var c8C = c8G['crouchLean'] * c7q['crouchVal'];
        c7p['rotateMesh'](c7q['lowerBody'], 0x0, c8C + 0.5 * c7q['yDire'], 0x0), c7q['upperBody'] && (c7q['upperBody']['rotation']['x'] -= c8C), c7p['moveMesh'](c7q['lowerBody'], 0x0, c8G['legHeight'] - c7t, 0x0);
        for (var c8D = 0x0; 0x4 > c8D; ++c8D) c7q['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA'][c8D] && !c7p['lowSpec'] && (c7q['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA'][c8D]['visible'] = 0x1 >= c8D ? !c7q['crouchVal'] : !!c7q['crouchVal']);
      }
    }, this['generateMeshes'] = function(c7q, c7t, c8C = !0x1, c8E) {
      var c8H = c7o['classes'][c7q['classIndex']]['colors'],
        c8I = c8H[0x0];
      c8G['skinColors'][c7q['skinColIndex']] && (c8I = c8G['skinColors'][c7q['skinColIndex']]);
      var c8J = c7o['config']['thirdPerson'] || c7o['map']['config'] && (c7o['map']['config']['camOffX'] || c7o['map']['config']['camOffY'] || c7o['map']['config']['camOffZ']) || !c7t,
        c8K = c7p['genObj3D'](0x0, 0x0, 0x0);
      if (c7q['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] = c7p['genObj3D'](c7q['x'], c7q['y'], c7q['z']), c7q['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']['add'](c8K), 'inf' == c7q['team'] ? (c8I = c8F['modeSpecific']['infected']['skin'], c7q['hatIndex'] = 0x7a) : 'stalk' == c7q['team'] && (c7q['backIndex'] = -0x1, c7q['hatIndex'] = -0x1, c7q['meleeIndex'] = -0x1, c8I = c8F['modeSpecific']['stalker']['skin'], c8H = c8F['modeSpecific']['stalker']['body']), 'prop' == c7q['team']) {
        var c8L = c8G['propsH'][c7q['propID']];
        c7p['loadMesh']({
          'src': c8L + '_0'
        }, 0x0, c8G[c8L + 'Scale'] + (c8G['propsCPY'][c8L] || 0x0), 0x0, 0x0, c8G[c8L + 'Scale'], c7q['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'], !0x1);
      } else {
        var c9Y;
        if (c7q['lowerBody'] = c7p['genObj3D'](0x0, c8G['legHeight'], 0x0), c8J && c7q['lowerBody']['add'](c7p['genBody'](c8H[0x1], c8H[0x2], c8H[0x4], c8I, c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'])), c7q['upperBody'] = c7p['genObj3D'](0x0, 0x0, 0x0), c7q['lowerBody']['add'](c7q['upperBody']), 0x0 <= c7q['backIndex'] && c8J) {
          if (c8E && c8E[0x2])
            for (var c9Z in c9Y = {
                ...c7o['store']['skins'][c7q['backIndex']]
              }) null != c8E[0x2][c9Z] && (c9Y[c9Z] = c8E[0x2][c9Z]);
          else c9Y = c7o['store']['skins'][c7q['backIndex']];
          c7q['backMesh'] = c7p['genObj3D'](0x0, (c8G['fvcbEmTb'] - c8G['legHeight'] - c8G['headScale']) / 0x2 - (c9Y['sitOff'] || 0x0), -(c9Y['sitOffZ'] || 0x0)), c7q['lowerBody']['add'](c7q['backMesh']), c7p['loadMesh']({
            'src': 'body/body_' + c9Y['id'],
            'texSrc': c9Y['tex'] ? 'body/body_' + c9Y['id'] + '_' + c9Y['tex'] : null,
            'frames': c9Y['frames'],
            'frameT': c9Y['frameT'],
            'glowText': c9Y['glow'],
            'emissive': c9Y['glow'] ? 0xffffff : null,
            'noGreen': !0x0
          }, 0x0, 0x0, 0x0, Math['PI'] / 0x2, 2.1 * (c9Y['sclMlt'] || 0x1), c7q['backMesh']);
        }
        if (0x0 <= c7q['hatIndex'] && c8J) {
          if (c8E && c8E[0x1])
            for (var c9Z in c9Y = {
                ...c7o['store']['skins'][c7q['hatIndex']]
              }) null != c8E[0x1][c9Z] && (c9Y[c9Z] = c8E[0x1][c9Z]);
          else c9Y = c7o['store']['skins'][c7q['hatIndex']];
          c7q['hatMesh'] = c7p['genObj3D'](0x0, c8G['fvcbEmTb'] - c8G['legHeight'] - (c9Y['sitOff'] || 0x0), -(c9Y['sitOffZ'] || 0x0)), c7q['lowerBody']['add'](c7q['hatMesh']), c7p['loadMesh']({
            'src': 'hats/hat_' + c9Y['id'],
            'texSrc': c9Y['tex'] ? 'hats/hat_' + c9Y['id'] + '_' + c9Y['tex'] : null,
            'frames': c9Y['frames'],
            'frameT': c9Y['frameT'],
            'glowText': c9Y['glow'],
            'emissive': c9Y['glow'] ? 0xffffff : null,
            'noGreen': !0x0
          }, 0x0, 0x0, 0x0, Math['PI'] / 0x2, 2.1 * (c9Y['sclMlt'] || 0x1), c7q['hatMesh']);
        }
        if (c8J)
          for (var ca1 = 0x0; 0x4 > ca1; ++ca1) c7q['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA']['push'](c7p['genLeg'](0x1 == ca1 || 0x3 == ca1, c8H[0x2], c8H[0x3], 0x1 < ca1)), 0x2 <= ca1 && c7p['rotateMesh'](c7q['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA'][ca1], 0x2 == ca1 ? -Math['PI'] / 0x6 : Math['PI'] / 0x8, 0x0, 0x0), c7q['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA'][ca1]['visible'] = 0x1 >= ca1, c8K['add'](c7q['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA'][ca1]);
        for (ca1 = 0x0; ca1 < c7q['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length']; ++ca1) {
          var ca2 = c7p['genObj3D'](0x0, 0x0, 0x0),
            ca3 = c7o['weapons'][c7q['loadout'][ca1]],
            ca4 = null != ca3['attach'] && c7o['attach'][c7q['attachIndex']] ? c7o['attach'][c7q['attachIndex']] : null;
          if (c7t && ca3['ammo']) {
            ca2['muzzles'] = [], ca2['casings'] = [];
            for (var ca5 = 0x0; 0x2 > ca5; ++ca5)(!ca5 || ca3['akimbo']) && (ca2['muzzles']['push'](new c7r['Sprite']()), ca2['muzzles'][ca5]['visible'] = !0x1, ca2['muzzles'][ca5]['static'] = !0x0, c8D['particles']['push'](ca2['muzzles'][ca5]), ca2['add'](ca2['muzzles'][ca5]), ca2['casings']['push'](c7p['genObj3D'](ca5 ? 0x2 * -ca3['xOff'] : 0x0, ca3['caseYOff'] || 0x0, ca3['caseZOff'] || 0x0)), ca2['add'](ca2['casings'][ca5]));
            ca2['muzzleFlash'] = c7p['genObj3D'](0x0, 0.4, 0x0), ca2['muzzles'][0x0]['add'](ca2['muzzleFlash']);
          }
          if (ca3['src'] || !c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW']) ca2['add'](c7p['genArms'](ca3, c8H[0x1], c8H[0x5], c8I, null, !c8J));
          else {
            var ca6;
            for (ca5 = 0x0; 0x2 > ca5; ++ca5) ca6 = c7p['genArms'](ca3, c8H[0x1], c8H[0x5], c8I, ca5 + 0x1, !c8J), ca2['add'](ca6), c7q['armMeshes']['push'](ca6);
          }
          if (c7q['weaponMeshes']['push'](ca2), c7q['weaponMeshes'][ca1]['visible'] = !0x1, c7q['upperBody']['add'](c7q['weaponMeshes'][ca1]), ca3['melee'] && (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] || 'inf' != c7q['team'])) {
            var ca7 = c7o['store']['skins'][c7q['meleeIndex']] || {};
            c7q['weaponGeos'][ca1] = c7p['loadMesh']({
              'src': 'melee/melee_' + (ca7['id'] || 0x0),
              'texSrc': 'stalk' == c7q['team'] ? 'melee/melee_0_5' : ca7['tex'] ? 'melee/melee_' + (ca7['id'] || 0x0) + '_' + ca7['tex'] : '',
              'glowText': ca7['glow'],
              'emissive': ca7['glow'] ? 0xffffff : null,
              'pulsT': ca7['pulsT'],
              'frames': ca7['frames'],
              'frameT': ca7['frameT'],
              'tFilter': c7r['LinearFilter'],
              'mat': c8C || c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? c7r['MeshPhongMaterial'] : null,
              'noGreen': !0x0,
              'uv2': !0x0,
              'specular': 0x292929,
              'shininess': 0x64
            }, (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? 0.9 : 1.7) + (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && ca7['sxOff'] || 0x0), c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? -0.95 : -0.4, c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? 0.72 : 1.2, [-Math['PI'] / 3.5, c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? 0.3 : Math['PI'] / 0x2, -0.9 * Math['PI'] + (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && ca7['sxRot'] || 0x0)], ca7['sclMlt'] || 0.9, c7q['armMeshes'][0x1] ? c7q['armMeshes'][0x1] : c7q['weaponMeshes'][ca1]), c7q['armMeshes'][0x1] && (c7q['armMeshes'][0x1]['yR'] = c7q['armMeshes'][0x1]['rotation']['y'], c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? (c7q['armMeshes'][0x1]['zR'] = c7q['armMeshes'][0x1]['rotation']['z'] = -0.3, c7q['armMeshes'][0x1]['xR'] = c7q['armMeshes'][0x1]['rotation']['x'] = -0.4, c7q['armMeshes'][0x1]['xP'] = c7q['armMeshes'][0x1]['position']['x'] = 0.4, c7q['armMeshes'][0x1]['yP'] = c7q['armMeshes'][0x1]['position']['y'] = 0.3) : (c7q['armMeshes'][0x1]['zR'] = c7q['armMeshes'][0x1]['rotation']['z'] = 0.3, c7q['armMeshes'][0x1]['yP'] = c7q['armMeshes'][0x1]['position']['y'] = -0.4, c7q['armMeshes'][0x1]['xR'] = c7q['armMeshes'][0x1]['rotation']['x'], c7q['armMeshes'][0x1]['xP'] = c7q['armMeshes'][0x1]['position']['x'] = -0.2), c7q['armMeshes'][0x0]['xP'] = c7q['armMeshes'][0x0]['position']['x'] = 0.3, c7q['armMeshes'][0x0]['yP'] = c7q['armMeshes'][0x0]['position']['y'] = -0.5, c7q['armMeshes'][0x0]['zR'] = c7q['armMeshes'][0x0]['rotation']['z'] = -0.4, c7q['armMeshes'][0x0]['yR'] = c7q['armMeshes'][0x0]['rotation']['y']);
          }
          if (ca3['src']) {
            var ca8 = c7o['store']['skins'][c7q['skins'][ca1]] || {},
              ca9 = 0x0 <= c7q['skins'][ca1] && (ca8['glow'] || ca8['sameGlow']);
            for (ca5 = 0x0; 0x2 > ca5; ++ca5)(!ca5 || ca3['akimbo']) && c7p['loadMesh']({
              'src': 'weapons/' + ca3['src'] + (null == ca8['mid'] ? '' : '_' + ca8['mid']),
              'texSrc': null == ca8['mid'] ? ca8['tex'] ? ca8['tex'] : 0x0 <= c7q['skins'][ca1] ? 'weapons/skins/' + ca3['src'] + '_' + ca8['id'] : null : ca8['midT'],
              'tFilter': c7r['LinearFilter'],
              'mat': c8C || c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? c7r['MeshPhongMaterial'] : null,
              'movT': ca8['movT'],
              'movD': ca8['movD'],
              'pulsT': ca8['pulsT'],
              'frames': ca8['frames'],
              'frameT': ca8['frameT'],
              'sameGlow': ca8['sameGlow'],
              'glowText': ca9,
              'noGreen': !0x0,
              'uv2': !0x0,
              'ao': c7t && !ca3['noAo'],
              'shininess': ca8['shine'] || ca3['shine'] || 0x3c,
              'specular': 0x292929,
              'transparent': ca3['seeThrough'],
              'emissive': ca3['transp'] || ca9 ? 0xffffff : null
            }, 0x1 == ca5 ? -0x2 * ca3['xOff'] : 0x0, ca8['yOff'] || 0x0, ca8['zOff'] || 0x0, Math['PI'] / 0x2, ca8['mScl'] || ca3['scale'], c7q['weaponMeshes'][ca1]);
          }
          c7t && ca3['flap'] && c7p['sniperFlap'] && (c7q['weaponMeshes'][ca1]['flapMesh'] = c7p['loadMesh']({
            'src': 'attach/' + ca3['flap']['src'],
            'tFilter': c7r['LinearFilter'],
            'noGreen': !0x0,
            'mat': c7r['MeshPhongMaterial'],
            'shininess': 0x3c,
            'transparent': !0x0
          }, ca3['flap']['xOff'], ca3['flap']['yOff'], ca3['flap']['zOff'], Math['PI'] / 0x2, ca3['flap']['scl'], c7q['weaponMeshes'][ca1])), ca4 && (c7t || c8C) && c7p['loadMesh']({
            'src': 'attach/' + ca4['src'],
            'tFilter': c7r['LinearFilter'],
            'noGreen': !0x0,
            'mat': c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? c7r['MeshPhongMaterial'] : null,
            'specular': 0x292929,
            'shininess': 0x3c,
            'transparent': !0x0
          }, 0x0, -(ca3['yOrg'] || 0x0) + (ca3['attachYOff'] || 0x0), -(ca3['attachZOff'] || 0x0), Math['PI'] / 0x2, ca4['scale'], c7q['weaponMeshes'][ca1]);
        }
        c8K['add'](c7q['lowerBody']), c7t && c7q['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']['traverse'](function(c7o) {
          c7o['layers']['set'](0x1);
        });
      }
      return c7q['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'];
    }, this['pickProp'] = function(c7p) {
      if (c8H && c7p && c7p['active'] && (!c7p['lastPropPick'] || 0xc8 <= c7o['now'] - c7p['lastPropPick'])) {
        c7p['lastPropPick'] = c7o['now'];
        var c7q = c7p['xDire'],
          c7r = c7p['yDire'];
        cbD['length'] = 0x0;
        for (var c7t, c8C = 0x0, c8D = 0x1 / (0x19 * Math['sin'](c7q + Math['PI']) * Math['cos'](c7r)), c8F = 0x1 / (0x19 * Math['cos'](c7q + Math['PI']) * Math['cos'](c7r)), c8I = 0x1 / (0x19 * Math['sin'](c7r)), c8J = c7p['y'] + c7p['height'] - c8G['cameraHeight'], c8K = 0x0; c8K < c7o['map']['manager']['objects']['length']; ++c8K)(c7t = c7o['map']['manager']['objects'][c8K])['active'] && c7t['propID'] && !c7t['noShoot'] && ((c8C = c8E['lineInRect'](c7p['x'], c7p['z'], c8J, c8D, c8F, c8I, c7t['x'] - c7t['width'], c7t['z'] - c7t['length'], c7t['y'] - c7t['height'], c7t['x'] + c7t['width'], c7t['z'] + c7t['length'], c7t['y'] + c7t['height'])) && 0x1 >= c8C && cbD['push']({
          'obj': c7t,
          'dst': c8C
        }));
        cbD['length'] && (cbD['sort'](c8E['orderByDst']), cbD[0x0] && cbD[0x0]['obj'] && this['updateProp'](c7p, c8G['propsH']['indexOf'](cbD[0x0]['obj']['propID'])));
      }
    }, this['updateProp'] = function(c7p, c7q, c7r) {
      if (c7p && c7p['active']) {
        null != c7q && (c7p['propID'] = c7q);
        var c7t = c8G[c8G['propsH'][c7q] + 'Scale'],
          c8C = c8G['propsCP'][c8G['propsH'][c7q]] || 0x0;
        c7p['height'] = c7t + c8C, c7p['scale'] = c7t + c8C, c7r && this['regenMeshes'](c7p), c8H && c8H['broadcast']('game' + c7o['sid'], 'up', c7p['sid'], c7q);
      }
    }, this['regenMeshes'] = function(c7o) {
      c7o['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] && this['disposeMesh'](c7o, !0x0), c7p && c7p['add'](this['generateMeshes'](c7o, c7o['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'])), this['swapWeapon'](c7o, 0x0, !0x0);
    }, this['hideAll'] = function() {
      for (var c7o = 0x0; c7o < this['list']['length']; ++c7o) this['list'][c7o]['active'] && this['list'][c7o]['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] && (this['list'][c7o]['forcePos'] = !this['list'][c7o]['latestData'], this['list'][c7o]['latestData'] = !0x1, this['list'][c7o]['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] || (this['list'][c7o]['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']['visible'] = !0x1));
    }, this['clear'] = function() {
      if (c7p)
        for (var c7o = 0x0; c7o < this['list']['length']; ++c7o) this['disposeMesh'](this['list'][c7o]);
      this['list']['length'] = 0x0;
    }, this['toggleLOD'] = function(c7o, c7p) {
      c7o['latestData'] && (c7o['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] && (c7o['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']['visible'] = c7p), c7o['lodActive'] = !c7p);
    }, this['disposeMesh'] = function(c7o) {
      c7p['remove'](c7o['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']), c7o['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] = null, c7o['hatMesh'] = null, c7o['backMesh'] = null, c7o['weaponMeshes']['length'] = 0x0, c7o['weaponGeos'] = {}, c7o['armMeshes']['length'] = 0x0, c7o['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA']['length'] = 0x0;
    }, this['add'] = function(c7q, c7r, c8C, c8D, c8I, c8J, c8K, c8L, caE, caF, caG, caH, caI, caJ, caK, caL, caM, caN, caO) {
      for (var caP, caQ = 0x0; caQ < this['list']['length']; ++caQ)
        if (this['list'][caQ]['id'] == c7q) {
          caP = this['list'][caQ];
          break;
        } return caP ? (caP['weaponMeshes']['length'] = 0x0, caP['weaponGeos'] = {}, caP['sLzjauqGJJAnmoNloPQzAeqfGBsdzSgA']['length'] = 0x0, caP['armMeshes']['length'] = 0x0) : ((caP = new c7t(c7q, this, c8E, c8F, c8G, c7o))['sid'] = c7r || c8E['generateSID'](this['list']), this['list']['push'](caP)), c8J || (c8J = 'Guest_' + caP['sid']), caP['init'](c8C, c8D, c8I, c8J, caM, caN), c8H && null != c7o['mode'] && this['setTeam'](caP), caL && (caP['team'] = caL), caP['skins'] = c8L || [-0x1, -0x1], caP['hatIndex'] = caE, caP['backIndex'] = caF, caP['meleeIndex'] = caG, caP['skinColIndex'] = caH, caP['attachIndex'] = caI, caP['secIndex'] = caJ, caP['setClass'](c7o, c8K, caJ, !!c7p), !caO && c7o['mode']['startingLoadout'] && (caO = c7o['mode']['startingLoadout']), caO && caP['updateLoadout'](c7o, caP['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'], !0x1, ...caO), c7p && c7p['add'](this['generateMeshes'](caP, caM)), 'prop' == caP['team'] && this['updateProp'](caP, caK || 0x0, !0x0), this['swapWeapon'](caP, 0x0, !0x0), 'undefined' != typeof window && 'updateWindow' in window && window['updateWindow'](0x17), caP;
    }, this['remove'] = function(c7p) {
      var c7q = this['indexBySid'](c7p);
      if (0x0 <= c7q) {
        c8H && this['list'][c7q] && (c7o['dropFlag'](this['list'][c7q]['flag']), this['dropWeapon'](this['list'][c7q], !0x0));
        var c7r = this['list'][c7q]['id'];
        if (this['list'][c7q]['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] && this['disposeMesh'](this['list'][c7q]), this['list']['splice'](c7q, 0x1), c8H) {
          for (var c7t = this['list']['length'] - 0x1; 0x0 <= c7t; --c7t) 0x0 <= (c7q = this['list'][c7t]['sentTo']['indexOf'](c7r)) && this['list'][c7t]['sentTo']['splice'](c7q, 0x1);
          c8H['broadcast']('game' + c7o['sid'], '2', c7p), this['syncLeaders']();
        }
        'undefined' != typeof window && 'updateWindow' in window && window['updateWindow'](0x17);
      }
    };
    var caV = [0x0, 0x1, 0x2];
    this['getStepSound'] = function() {
      var c7o = c8E['randInt'](0x0, caV['length'] - 0x1),
        c7p = caV[c7o];
      return caV['splice'](c7o, 0x1), 0x0 >= caV['length'] && caV['push'](0x0, 0x1, 0x2), c7p;
    }, this['playerStep'] = function(c7p, c7q, c7r) {
      if (c7q && (!c7p['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && c7p['crouchVal'] && (c7q *= 1.6), c7p['stepVal'] += c7q * c8G['stepMlt'] * c7p['stepDir'], c7p['stepVal'] >= Math['PI'] / 0x2 && 0x1 == c7p['stepDir'] || c7p['stepVal'] <= -Math['PI'] / 0x2 && -0x1 == c7p['stepDir'])) {
        if (c8C && !c7r && 'stalk' != c7p['team']) {
          var c7t = c8E['randFloat'](0.15, 0.25) * (0x1 > c7p['crouchVal'] ? 0x1 : c7p['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? 0.5 : 0x0),
            c8D = (0x1 > c7p['crouchVal'] ? 0x1 : 0.8) * c8E['randFloat'](0.8, 1.2),
            c8F = c7p['stepSrc'] ? '_' + c7p['stepSrc'] : '';
          c7p['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? c8C['play']('step_' + this['getStepSound']() + c8F, c7t, !0x1, c8D) : c7t && c7o['playerSound']('step_' + c8E['randInt'](0x0, 0x2) + c8F, 0x0, c7t, c7p, c8D, 0xb4);
        }
        c7p['stepDir'] *= -0x1;
      }
    }, this['resetStep'] = function(c7p, c7q) {
      if (!c7q && c7p['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && c7p['yVel'] && (c7p['jumpTween'] && c7p['jumpTween']['stop'](), c7p['landTween'] && c7p['landTween']['stop'](), c7p['landTween'] = new TWEEN['Tween'](c7p)['to']({
          'landBobY': 0x6 * c7p['yVel'],
          'jumpBobY': 0x0
        }, 0x64)['easing'](TWEEN['Easing']['Linear']['None'])['onComplete'](function() {
          c7p['landTween'] = new TWEEN['Tween'](c7p)['to']({
            'landBobY': 0x0
          }, 0x44c)['easing'](TWEEN['Easing']['Elastic']['Out'])['start']();
        })['start']()), c8C && !c7q && c7p['yVel'] && 'stalk' != c7p['team'] && (c7p['stepSrc'] && c7p['stepSrc'], c8C['play']('step_' + this['getStepSound'](), 0.7, !0x1, c8E['randFloat'](0.9, 1.2)), c7p['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && c7p['crouchVal'] && c7o['config']['canSlide'] && c7p['canSlide'] && c8C['play']('slide_0', 0.35, !0x1, c8E['randFloat'](0.9, 1.1))), c7o['config']['canSlide'] && c7p['crouchVal'] && c7p['canSlide']) {
        c7p['canSlide'] = !0x1, c7p['slideTimer'] = c8G['slideTime'] * c7p['crouchVal'];
        var c7r = this['onTerrain'] ? c8G['playerTerrainSlideVelMlt'] : c8G['playerSlideVelMlt'];
        c7p['xVel'] *= c7r, c7p['zVel'] *= c7r;
      }
    }, this['tryJump'] = function(c7p, c7q) {
      c7o['config'] && c7o['config']['autoJump'] && c7q ? this['jump'](c7p) : (c7p['ZkZQqRPzcQDgGFDFbfLXKBwAgmjlNSEB'] && !c7q && (c7p['ZkZQqRPzcQDgGFDFbfLXKBwAgmjlNSEB'] = !0x1), !c7p['ZkZQqRPzcQDgGFDFbfLXKBwAgmjlNSEB'] && c7q && this['jump'](c7p));
    }, this['jump'] = function(c7p) {
      c7p['jumpCooldown'] = c7p['terrainSlipping'] ? c8G['playerSlippingJumpCooldown'] : 0x0, c7p['ZkZQqRPzcQDgGFDFbfLXKBwAgmjlNSEB'] = !0x0, c7p['onTerrain'] = !0x1;
      var c7q = c8G['jumpVel'] * (c7o['config'] ? c7o['config']['jumpMlt'] : 0x1),
        c7r = c8G['jumpPush'] * (c7o['config'] ? c7o['config']['jumpMlt'] : 0x1);
      c7p['yVel'] += (c7q - c7q * (c8G['crouchJump'] * c7p['crouchVal'])) * c7p['weapon']['spdMlt'] * (c7p['aimVal'] ? 0x1 : c8G['aimJumpSlow']);
      var c7t = c8E['xBIWCnLLiqfSLgCsDrqJOyoncrZfplTa'](0x0, 0x0, c7p['xVel'], c7p['zVel']);
      if (c7p['xVel'] -= c7r * c7t * Math['sin'](c7p['xDire']), c7p['zVel'] -= c7r * c7t * Math['cos'](c7p['xDire']), c8C && !c7p['recon'] && c7p['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW']) {
        c7p['landTween'] && c7p['landTween']['stop'](), c7p['landTween'] = new TWEEN['Tween'](c7p)['to']({
          'landBobY': 0x0
        }, 0x64)['easing'](TWEEN['Easing']['Linear']['None'])['start'](), c7p['jumpTween'] && c7p['jumpTween']['stop'](), c7p['jumpTween'] = new TWEEN['Tween'](c7p)['to']({
          'jumpBobY': 0.22
        }, 0x1f4)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
        var c8D = c8E['randFloat'](0.12, 0.15);
        new TWEEN['Tween'](c7p)['to']({
          'jumpRot': [c8D, 0x0]
        }, 0x384)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
        c8C['play']('jump_' + c8E['randInt'](0x0, 0x1), 0.04, !0x1, c8E['randFloat'](0.9, 0x1));
      }
    }, this['updateAim'] = function(c7o, c7q) {
      c7p['zoom'](0x1 + (c7o['weapon']['zoom'] - 0x1) * c7q);
    }, this['toggleAim'] = function(c7q, c7r) {
      if (c8C && !c7q['recon'] && c8C['play']('aim_' + c7r, 0.1), c7r && 'prop' != c7q['team'] || this['resetAim'](), c7q['weapon']['scope'] && c7q['weaponMeshes'] && c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] && (c7p['zoom'](c7r ? c7q['weapon']['zoom'] : 0x1), c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['visible'] = !this['isWeaponHidden'](c7q, c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']) && !c7r, aimRecticle['style']['opacity'] = c7r ? 0x1 : 0x0), null != c7q['weapon']['attach'] && c7o['attach'][c7q['attachIndex']] ? c7o['attach'][c7q['attachIndex']] : null) {
        aimDot['style']['opacity'] = c7r ? 0x1 : 0x0;
        var c7t = c7o['store']['skins'][c7q['skins'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]],
          c8D = c8E['assetsUrl']('/textures/dots/' + (c7t && c7t['dot'] || 'dot_0') + '.png');
        aimDot['src'] == c8D || c7p['customADS']['length'] || (aimDot['src'] = c8D);
      }
      c7p['hideADS'] && (c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['visible'] = !c7r && !this['isWeaponHidden'](c7q, c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']));
    }, this['resetAim'] = function() {
      c7p['zoom'](0x1), aimRecticle['style']['opacity'] = 0x0, aimDot['style']['opacity'] = 0x0;
    }, this['isWeaponHidden'] = function(c7p, c7q) {
      var c7r = c7p['loadout'][c7q];
      return !(!c7o['weapons'][c7r]['melee'] || !c7o['hideWeapon'][0x2]) || (!(!c7o['weapons'][c7r]['secondary'] || !c7o['hideWeapon'][0x1]) || !(c7o['weapons'][c7r]['melee'] || c7o['weapons'][c7r]['secondary'] || !c7o['hideWeapon'][0x0]));
    }, this['reload'] = function(c7o) {
      !c7o['reloadTimer'] && c7o['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ'][c7o['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] < c7o['weapon']['ammo'] && (c8C && c8C['play']('reload_1', 0.25), c7o['reloadTimer'] = c7o['weapon']['reload'], c7o['burstCount'] = 0x0, c7o['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && this['cancelInspect'](c7o));
    }, this['endReload'] = function(c7o) {
      c8C && c8C['play']('reload_2' + (c7o['custReload'] || ''), 0.25);
    }, this['updatePlayerAmmo'] = function(c7o) {
      c7o['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && (ammoDisplay['style']['display'] = 'inline-block', ammoVal['innerHTML'] = (c7o['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ'][c7o['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] || (c7o['weapon']['melee'] ? '-' : 0x0)) + '\x20<span\x20id=\x27ammoMax\x27>\x20|\x20' + (c7o['weapon']['ammo'] || '-') + '</span>', 0x0 >= c7o['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ'][c7o['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] ? (reloadMsg['innerHTML'] = '[R]\x20Reload', reloadMsg['style']['display'] = 'block') : reloadMsg['style']['display'] = 'none');
    }, this['cancelInspect'] = function(c7o) {
      c7o['inspecting'] = !0x1, c7o['inspectX'] = 0x0;
    }, this['wInspect'] = function(c7o) {
      c7o['inspecting'] ? this['cancelInspect'](c7o) : !c7o['weapon']['nInsp'] && !c7o['inspecting'] && 0x1 == c7o['aimVal'] && !c7o['reloadTimer'] && (c7o['inspecting'] = !0x0);
    }, this['melee'] = function(c7p) {
      if (c7p['reloads'][c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] = c7p['weapon']['rate'], c7p['TpWpiIwBuzDTtkhzEOcjaBWGIOZAPHZH'] = !0x0, c7p['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW']) {
        if (c7o['controls'] && c7o['controls']['vibration'] && c7o['controls']['gamepad']['_connected'] && c7o['controls']['gamepad']['rumble'](c7p['weapon']['rumbleDur'] || 0xc8, c7p['weapon']['rumble'] || 0.5), c7p['weapon']['anim']) {
          var c7q = c7o['store']['skins'][c7p['meleeIndex']] || {};
          c7p['weapon']['anim'](c7p, TWEEN, c7q['animInd'] || 0x1);
        }
        c7p['weapon']['sounds'] && c8C['play'](c7p['weapon']['sounds'][c8E['randInt'](0x0, c7p['weapon']['sounds']['length'] - 0x1)], 0.1, !0x1, c8E['randFloat'](0.9, 1.1));
      }
      var c7r = c7p['xDire'],
        c7t = c7p['yDire'];
      cbD['length'] = 0x0;
      for (var c8D = 0x0, c8F = 0x1 / (c7p['weapon']['range'] * Math['sin'](c7r + Math['PI']) * Math['cos'](c7t)), c8I = 0x1 / (c7p['weapon']['range'] * Math['cos'](c7r + Math['PI']) * Math['cos'](c7t)), c8K = 0x1 / (c7p['weapon']['range'] * Math['sin'](c7t)), c8L = c7p['y'] + c7p['height'] - c8G['cameraHeight'], caV = 0x0; caV < c7o['map']['manager']['objects']['length']; ++caV)(c8J = c7o['map']['manager']['objects'][caV])['active'] && !c8J['noShoot'] && ((c8D = c8E['lineInRect'](c7p['x'], c7p['z'], c8L, c8F, c8I, c8K, c8J['x'] - c8J['width'], c8J['z'] - c8J['length'], c8J['y'] - c8J['height'], c8J['x'] + c8J['width'], c8J['z'] + c8J['length'], c8J['y'] + c8J['height'])) && 0x1 >= c8D && cbD['push']({
        'obj': c8J,
        'dst': c8D
      }));
      if (c8H)
        for (caV = 0x0; caV < this['list']['length']; ++caV) this['list'][caV]['active'] && c7p != this['list'][caV] && (!c7p['team'] || c7p['team'] != this['list'][caV]['team']) && ((c8J = this['fetchState'](this['list'][caV], c7p['getStateConst']())) && ((c8D = c8E['lineInRect'](c7p['x'], c7p['z'], c8L, c8F, c8I, c8K, c8J['x'] - this['list'][caV]['scale'] - c7o['config']['hitBoxPad'], c8J['z'] - this['list'][caV]['scale'] - c7o['config']['hitBoxPad'], c8J['y'], c8J['x'] + this['list'][caV]['scale'] + c7o['config']['hitBoxPad'], c8J['z'] + this['list'][caV]['scale'] + c7o['config']['hitBoxPad'], c8J['y'] + this['list'][caV]['height'] + c7o['config']['hitBoxPad'])) && 0x1 >= c8D && cbD['push']({
          'player': !0x0,
          'obj': this['list'][caV],
          'dst': c8D
        })));
      c7p['weapon']['range'];
      if (cbD['length']) {
        cbD['sort'](c8E['orderByDst']);
        var cbC = c7p['weapon']['dmg'];
        for (caV = 0x0; caV < cbD['length'] && (c8J = cbD[caV], c7p['weapon']['range'] * c8J['dst'], c8H) && (c8H && !c7o['waitTimers'] && c8J['obj'] && c8J['obj']['health'] && !c8J['player'] && (c8H['send'](c7p['id'], '4'), c8J['obj']['health'] -= cbC, 0x0 >= c8J['obj']['health'] && (c8J['obj']['active'] = !0x1, c8J['obj']['health'] = 0x0, c8J['obj']['destroyedBy'] = c7p, c7o['destObjs']['push'](c8J['obj']['uid']), c8H['broadcast']('game' + c7o['sid'], 'do', c8J['obj']['uid']), c8J['obj'] && c8J['obj']['onDestroy'] && c7o['onTrigger'](c7p, c8J['obj']))), c8H && 'seek' == c7p['team'] && !c8J['player'] && c8J['obj'] && c8J['obj']['propID'] && this['changeHealth'](c7p, null, 0xa) && this['kill'](c7p, null, {}), c8J['obj'] && (c8J['obj']['onMelee'] || c8J['obj']['onDamage']) && c7o['onTrigger'](c7p, c8J['obj']), c8J['player'] || c8J['obj'] && c8J['obj']['dummy']) && (c7o['mode'] && c7o['mode']['onMelee'] && c7o['mode']['onMelee'](c7o, c7p, c8J['obj']) && (cbC = c8J['obj']['health'] || cbC), this['changeHealth'](c8J['obj'], c7p, cbC) && (c7p && (c7p['melees']++, c8H && c7o['incStat']('mk', c7p)), this['kill'](c8J['obj'], c7p, {
            'weaponId': c7o['weapons']['findIndexBySrc'](c7p['weapon']['src']),
            'weapon': c7p['weapon']
          })), !(0x0 >= (cbC -= null == c7p['weapon']['pierce'] ? cbC : c7p['weapon']['dmg'] * c8G['materialDens']['flesh'] * c7p['weapon']['pierce']))); ++caV);
      }
    };
    var cbD = [];
    this['shoot'] = function(c7q, c7r) {
      var c7t = !0x1;
      if (c8H && c7o['incStat']('s', c7q), c7o['config']['noReload'] || c7q['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]--, c7q['TpWpiIwBuzDTtkhzEOcjaBWGIOZAPHZH'] = !0x0, c7q['burstCount'] ? c7q['burstCount']-- : c7q['burstCount'] = c7q['weapon']['burst'] ? c7q['weapon']['burst']['c'] - 0x1 : 0x0, c7q['reloads'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] = c7q['burstCount'] && c7q['weapon']['burst'] ? c7q['weapon']['burst']['r'] : c7q['weapon']['rate'], this['updatePlayerAmmo'](c7q), c7o['playSound']) {
        var c8F = c7q['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] / c7o['weapons'][c7q['loadout'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]]['ammo'],
          c8I = c7o['store']['skins'][c7q['skins'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]],
          c8K = c7q['weapon']['sound'] + (c8I && null != c8I['mid'] ? '_' + c8I['mid'] : '');
        c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && 0.25 >= c8F && !c7q['weapon']['nRing'] ? c7o['playSound'](c8K, 0.85, c7q, !0x1, c8E['randFloat'](0.9, 0x1) + 0.15 * (0x1 - c8F / 0.25)) : c7o['playSound'](c8K, 0.85, c7q, !0x1, c8E['randFloat'](0.9, 0x1));
      }
      if (c7q['recoilForce'] += c7q['weapon']['recoil'], c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW']) {
        c7o['controls'] && c7o['controls']['vibration'] && c7o['controls']['gamepad']['_connected'] && c7o['controls']['gamepad']['rumble'](c7q['weapon']['rumbleDur'] || 0xc8, c7q['weapon']['rumble'] || 0.5);
        var c8L = c8E['randInt'](0x0, 0x1) ? -c7q['weapon']['recoilR'] : c7q['weapon']['recoilR'];
        c7q['recoilX'] += c8L, c7q['recoilZ'] += c8L, c7q['recoilTween'] && c7q['recoilTween']['stop']();
        var caV = c7q['weapon']['recoilAnim'] && c7q['weapon']['recoilAnim']['time'] || c7q['weapon']['rate'];
        0x0 == c7q['aimVal'] && c7q['weapon']['recoilAnim'] && c7q['weapon']['recoilAnim']['aimTime'] && (caV = c7q['weapon']['recoilAnim']['aimTime']), c7q['recoilTween'] = new TWEEN['Tween'](c7q)['to'](c7q['weapon']['recoilAnim'] || {}, 0.15 * caV)['easing'](TWEEN['Easing']['Linear']['None'])['onComplete'](function() {
          c7q['recoilTween'] = new TWEEN['Tween'](c7q)['to']({
            'recoilTweenY': 0x0,
            'recoilTweenYM': 0x0,
            'recoilTweenZ': 0x0
          }, 0.95 * caV)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
        })['start'](), this['cancelInspect'](c7q);
      }
      if (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && !this['isWeaponHidden'](c7q, c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'])) {
        var cbM = c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']],
          cbN = 0x0 == c7q['aimVal'] && c7q['weapon']['scope'];
        if (c8D['showMuzzle'] && !c7q['weapon']['nMuz'] && (0x0 == c7p['useDepthMap'] || '0' == c7p['useDepthMap']) && !c7o['controls']['camOffset']) {
          for (var cbO = 0x0; cbO < cbM['muzzles']['length']; ++cbO) cbM['muzzles'][cbO]['visible'] = !0x0, c8D['setMaterial'](cbM['muzzles'][cbO], c7q['weapon']['muzID'] || 0x2, 0x1, !0x0), cbM['muzzles'][cbO]['init'](cbO ? -0x2 * c7q['weapon']['xOff'] : 0x0, c7q['weapon']['muzOffY'] || 0x0, -c7q['weapon']['muzOff'], 0x0, 0x0, 0x0, 0x4 * (c7q['weapon']['muzMlt'] || 0x1), 0x1);
          if (!cbN)(ccq = c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['muzzles'][0x0]['pCrFlzzpYGHaZFbPwRqLxxsSKMxdAdnH']()['clone']())['project'](c7p['camera']), ccq['x'] = (ccq['x'] + 0x1) / 0x2, ccq['y'] = (ccq['y'] + 0x1) / 0x2, c7p['flash'](ccq['x'], ccq['y']);
        }
        if (!c7q['weapon']['nCase'] && c8D['active'])
          for (cbO = 0x0; cbO < c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['casings']['length']; ++cbO)
            if (ccq = c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['casings'][cbO]['pCrFlzzpYGHaZFbPwRqLxxsSKMxdAdnH'](), c8C && 0x190 < c7o['now'] - (c7q['lastShell'] || 0x0) && (c7q['lastShell'] = c7o['now'], c8C['play3D']('case_' + c8E['randInt'](0x0, 0x1), ccq['x'], ccq['y'], ccq['z'], 0.65, c8E['randFloat'](0.8, 1.3))), !cbN) {
              var cbP = c8E['randInt'](0x0, 0x1) ? 1.4 : 0.8;
              c8D['physObj'](ccq['x'], ccq['y'], ccq['z'], c7q['xDire'] - Math['PI'] / 0x2 * (cbO ? -0x1 : 0x1), Math['PI'] / 0x5 * c8E['randFloat'](0.75, 1.2) * cbP, 0x19, !0x1, c7q['weapon']['caseInd'] || 0x1, c7q);
            }
      }
      if (null != c7q['weapon']['projectile'] && c8H) {
        var cbQ = (c7q['spread'] + (c7q['weapon']['innac'] || 0x0)) * c8G['spreadAdj'],
          cbR = c7q['xDire'] + c8E['randFloat'](-cbQ, cbQ),
          cbS = c7q['yDire'] + c7q['IIFXYtgrbBDkLbHBbEEVkUgAeyEpFaGV'] * c8G['YkPPajzKenHiEMtZrKJtjsveozsargTy'] + c8E['randFloat'](-cbQ, cbQ);
        c7o['projectiles']['init'](c7q['x'], c7q['y'] + c7q['height'] - c8G['cameraHeight'], c7q['z'], cbR, cbS, c7q['weapon']['projectile'], c7q, {
          'weaponId': c7o['weapons']['findIndexBySrc'](c7q['weapon']['src']),
          'weapon': c7q['weapon']
        });
      }
      if (null == c7q['weapon']['projectile'] || c7q['weapon']['physPow'])
        for (var cbT = 0x0, cbU = c7q['weapon']['physPow'] ? -0x1 : 0x0; cbU < (null == c7q['weapon']['shots'] ? 0x1 : c7q['weapon']['shots']); ++cbU) {
          cbR = 0x0, cbS = 0x0;
          if (c7q['weapon']['cSpread'] && 0x0 <= cbU) {
            var cbV = c8E['randFloat'](0.14, 0.19);
            cbR = c7q['xDire'] + c7q['weapon']['cSpread'][cbT] * cbV, cbS = c7q['yDire'] + c7q['weapon']['cSpread'][cbT + 0x1] * cbV, cbT += 0x2;
          } else {
            cbQ = 0x0 <= cbU ? (c7q['spread'] + (c7q['weapon']['innac'] || 0x0)) * c8G['spreadAdj'] : 0x0;
            cbR = c7q['xDire'] + c8E['randFloat'](-cbQ, cbQ), cbS = c7q['yDire'] + c8E['randFloat'](-cbQ, cbQ);
          }
          cbS += c7q['IIFXYtgrbBDkLbHBbEEVkUgAeyEpFaGV'] * c8G['YkPPajzKenHiEMtZrKJtjsveozsargTy'];
          var cbW = c7q['weapon']['range'];
          0x0 > cbU && (cbW = c7q['weapon']['physRang']), cbD['length'] = 0x0;
          for (var cbX = 0x0, cbY = 0x1 / (cbW * Math['sin'](cbR + Math['PI']) * Math['cos'](cbS)), cbZ = 0x1 / (cbW * Math['cos'](cbR + Math['PI']) * Math['cos'](cbS)), cc0 = 0x1 / (cbW * Math['sin'](cbS)), cc1 = c7q['y'] + c7q['height'] - c8G['cameraHeight'], cc2 = 0x0; cc2 < c7o['map']['manager']['objects']['length']; ++cc2)(c8J = c7o['map']['manager']['objects'][cc2])['active'] && !c8J['noShoot'] && ((cbX = c8E['lineInRect'](c7q['x'], c7q['z'], cc1, cbY, cbZ, cc0, c8J['x'] - c8J['width'], c8J['z'] - c8J['length'], c8J['y'] - c8J['height'], c8J['x'] + c8J['width'], c8J['z'] + c8J['length'], c8J['y'] + c8J['height'])) && 0x1 >= cbX && cbD['push']({
            'obj': c8J,
            'dst': cbX
          }));
          if (c8H && 0x0 <= cbU)
            for (cc2 = 0x0; cc2 < this['list']['length']; ++cc2) this['list'][cc2]['active'] && c7q != this['list'][cc2] && (!c7q['team'] || c7q['team'] != this['list'][cc2]['team']) && ((c8J = this['fetchState'](this['list'][cc2], c7q['getStateConst']())) && ((cbX = c8E['lineInRect'](c7q['x'], c7q['z'], cc1, cbY, cbZ, cc0, c8J['x'] - this['list'][cc2]['scale'] - c7o['config']['hitBoxPad'], c8J['z'] - this['list'][cc2]['scale'] - c7o['config']['hitBoxPad'], c8J['y'], c8J['x'] + this['list'][cc2]['scale'] + c7o['config']['hitBoxPad'], c8J['z'] + this['list'][cc2]['scale'] + c7o['config']['hitBoxPad'], c8J['y'] + this['list'][cc2]['height'] + c7o['config']['hitBoxPad'])) && 0x1 >= cbX && cbD['push']({
              'player': !0x0,
              'obj': this['list'][cc2],
              'dst': cbX
            })));
          var cc3 = c7o['map']['terrain'];
          if (cc3) {
            var cc4 = cc3['raycast'](c7q['x'], -c7q['z'], cc1, 0x1 / cbY, -0x1 / cbZ, 0x1 / cc0);
            if (cc4) {
              let c7o = c8E['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](c7q['x'], cc1, c7q['z'], cc4['x'], cc4['z'], -cc4['y']);
              cbD['push']({
                'terrain': !0x0,
                'dst': c7o / cbW
              });
            }
          }
          var cc6 = cbW;
          if (cbD['length']) {
            cbD['sort'](c8E['orderByDst']);
            var cc7 = c7q['weapon']['dmg'],
              cc8 = !0x1;
            for (cc2 = 0x0; cc2 < cbD['length']; ++cc2) {
              if (cc6 = cbW * (c8J = cbD[cc2])['dst'], 0x0 > cbU) {
                var cc9 = (0x1 - c8J['dst']) * (c7q['weapon']['physPow'] * (c7o['config'] ? c7o['config']['impulseMlt'] : 0x1)),
                  cca = cc9 * Math['sin'](cbR + Math['PI']) * Math['cos'](cbS);
                c7q['xVel'] -= cca;
                var ccb = cc9 * Math['cos'](cbR + Math['PI']) * Math['cos'](cbS);
                c7q['zVel'] -= ccb;
                var ccc = cc9 * Math['sin'](cbS);
                c7q['yVel'] -= ccc, c7q['onGround'] = !0x1, c8H || (c7r['velObj'] = {
                  'x': cca,
                  'y': ccb,
                  'z': ccc
                });
                break;
              }
              if (!c8H) break;
              var ccd = c7q['weapon']['dropStart'] || 0x0,
                cce = Math['min'](0x1, 0x1 - (0x1 - c8J['dst']) * cbW / (cbW - ccd)),
                ccf = cc7 - c7q['weapon']['dmgDrop'] * cce,
                ccg = !0x1,
                cch = !0x1;
              if (c8J['player']) {
                var cci = cc1 + cc6 * Math['sin'](cbS);
                ccg = c8J['obj']['y'] + c8J['obj']['height'] - cci < c8G['headScale'], cch = c8J['obj']['y'] + c8G['legHeight'] > cci, ccf *= ccg && !c7q['weapon']['noHeadShot'] ? 1.5 : 0x1, ccf *= cch ? 0.5 : 0x1, ccg || !c7o['config'] || !c7o['config']['headshotOnly'] || (ccf = 0x0);
              }
              if (c8H && !c7o['waitTimers'] && c8J['obj'] && c8J['obj']['health'] && !c8J['player'] && (c8J['obj']['health'] -= ccf, c8H['send'](c7q['id'], '4'), 0x0 >= c8J['obj']['health'] && (c8J['obj']['active'] = !0x1, c8J['obj']['health'] = 0x0, c8J['obj']['destroyedBy'] = c7q, c7o['destObjs']['push'](c8J['obj']['uid']), c8H['broadcast']('game' + c7o['sid'], 'do', c8J['obj']['uid']), c8J['obj'] && c8J['obj']['onDestroy'] && c7o['onTrigger'](c7q, c8J['obj']))), c8H && 'seek' == c7q['team'] && !c8J['player'] && c8J['obj'] && c8J['obj']['propID'] && this['changeHealth'](c7q, null, 0xa) && this['kill'](c7q, null, {}), c8J['obj'] && (c8J['obj']['onShoot'] || c8J['obj']['onDamage']) && c7o['onTrigger'](c7q, c8J['obj']), c8J['player'] || c8J['obj'] && c8J['obj']['dummy']) {
                if (c8J['player'] && (c7t = !0x0), this['changeHealth'](c8J['obj'], c7q, ccf, null, ccg)) {
                  var ccj = {
                    'dst': c8J['dst'],
                    'headShot': ccg,
                    'wallbang': cc8,
                    'weaponId': c7o['weapons']['findIndexBySrc'](c7q['weapon']['src']),
                    'weapon': c7q['weapon']
                  };
                  this['kill'](c8J['obj'], c7q, ccj);
                }
                cc7 -= null == c7q['weapon']['pierce'] ? cc7 : c7q['weapon']['dmg'] * c8G['materialDens']['flesh'] * c7q['weapon']['pierce'];
              } else {
                if (!c8J['obj'] || !c8J['obj']['penetrable']) break;
                cc8 = !0x0, cc7 -= null == c7q['weapon']['pierce'] ? cc7 : c7q['weapon']['dmg'] * c8G['materialDens']['default'] * c7q['weapon']['pierce'];
              }
              if (0x0 >= cc7) break;
            }
          }
          if (!(0x0 > cbU)) {
            cc6 -= 0.12;
            var cck = c7q['x'] + cc6 * Math['sin'](cbR + Math['PI']) * Math['cos'](cbS),
              ccl = (cci = cc1 + cc6 * Math['sin'](cbS), c7q['z'] + cc6 * Math['cos'](cbR + Math['PI']) * Math['cos'](cbS)),
              ccm = 0x0,
              ccn = 0x0;
            if (cbD['length'] && (c8J['terrain'] ? ccn = Math['PI'] / 0x2 : cci >= c8J['obj']['y'] + c8J['obj']['height'] ? ccn = Math['PI'] / 0x2 : cci <= c8J['obj']['y'] - c8J['obj']['height'] ? ccn = -Math['PI'] / 0x2 : cck <= c8J['obj']['x'] - c8J['obj']['width'] ? ccm = -Math['PI'] / 0x2 : cck >= c8J['obj']['x'] + c8J['obj']['width'] ? ccm = Math['PI'] / 0x2 : ccl <= c8J['obj']['z'] - c8J['obj']['length'] && (ccm = Math['PI']), !c8H && c8D['effect'](cck, cci, ccl, ccm, ccn, 0x0)), c8H) {
              var cco = c7q['weapon'] && c7q['weapon']['trail'] ? 0x1 : 0x0;
              for (cc2 = 0x0; cc2 < this['list']['length']; ++cc2)(this['list'][cc2]['active'] || this['list'][cc2]['spectating']) && this['list'][cc2] != c7q && (cbD['length'] && !c8J['player'] ? c8H['send'](this['list'][cc2]['id'], '9', c7q['sid'], Math['round'](cck), Math['round'](cci), Math['round'](ccl), ccm['round'](0x1), ccn['round'](0x1), cco) : c8H['send'](this['list'][cc2]['id'], '9', c7q['sid'], Math['round'](cck), Math['round'](cci), Math['round'](ccl), void 0x0, void 0x0, cco));
            }
            if (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && cc6 >= c8G['tracerMinDst']) {
              var ccp = c8E['randInt'](0x0, c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['muzzles']['length'] - 0x1),
                ccq = c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['muzzles'][ccp]['pCrFlzzpYGHaZFbPwRqLxxsSKMxdAdnH'](),
                ccr = c7q['weapon'] && c7q['weapon']['scope'] && 0x0 == c7q['aimVal'] ? 0x7 : 0x0,
                ccs = ccq['x'] - ccr * Math['sin'](cbR + Math['PI']) * Math['cos'](cbS),
                cct = ccq['y'] - ccr * Math['sin'](cbS),
                ccu = ccq['z'] - ccr * Math['cos'](cbR + Math['PI']) * Math['cos'](cbS);
              c8E['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](ccs, cct, ccu, cck, cci, ccl), ccm = c8E['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](ccu, ccs, ccl, cck), ccn = c8E['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](c8E['xBIWCnLLiqfSLgCsDrqJOyoncrZfplTa'](ccs, ccu, cck, ccl), cci, 0x0, cct);
              c8D['physObj'](ccs, cct, ccu, ccm, ccn, Math['min'](cc6 + ccr, c8G['tracerMaxDst']), c7q['weapon'] && c7q['weapon']['trail'], 0x0, c7q);
            }
          }
        }
      c7t && c8H && c7o['incStat']('h', c7q);
    }, this['spray'] = function(c7p) {
      if (c7o['now'] - c7p['lastSpray'] >= c8G['sprayTimer']) {
        cbD['length'] = 0x0;
        for (var c7q = 0x0, c7r = 0x1 / (c8G['sprayRange'] * Math['sin'](c7p['xDire'] + Math['PI']) * Math['cos'](c7p['yDire'])), c7t = 0x1 / (c8G['sprayRange'] * Math['cos'](c7p['xDire'] + Math['PI']) * Math['cos'](c7p['yDire'])), c8C = 0x1 / (c8G['sprayRange'] * Math['sin'](c7p['yDire'])), c8D = 0x0; c8D < c7o['map']['manager']['objects']['length']; ++c8D)(c8J = c7o['map']['manager']['objects'][c8D])['noShoot'] || c8J['noVis'] || (c7q = c8E['lineInRect'](c7p['x'], c7p['z'], c7p['y'] + c7p['height'] - c8G['cameraHeight'], c7r, c7t, c8C, c8J['x'] - c8J['width'], c8J['z'] - c8J['length'], c8J['y'] - c8J['height'], c8J['x'] + c8J['width'], c8J['z'] + c8J['length'], c8J['y'] + c8J['height'])) && 0x1 >= c7q && cbD['push']({
          'obj': c8J,
          'dst': c7q
        });
        if (cbD['length'] && (cbD['sort'](c8E['orderByDst']), c8J = cbD[0x0]['obj'])) {
          var c8F = c8G['sprayRange'] * cbD[0x0]['dst'] - 0.1,
            c8I = c7p['y'] + c7p['height'] - c8G['cameraHeight'] + c8F * Math['sin'](c7p['yDire']),
            c8K = c7p['x'] + c8F * Math['sin'](c7p['xDire'] + Math['PI']) * Math['cos'](c7p['yDire']),
            c8L = c7p['z'] + c8F * Math['cos'](c7p['xDire'] + Math['PI']) * Math['cos'](c7p['yDire']),
            caV = 0x0,
            ccG = 0x0;
          c8I >= c8J['y'] + c8J['height'] ? ccG = -0x5a : c8I <= c8J['y'] - c8J['height'] ? ccG = 0x5a : c8K <= c8J['x'] - c8J['width'] ? caV = -0x5a : c8K >= c8J['x'] + c8J['width'] ? caV = 0x5a : c8L <= c8J['z'] - c8J['length'] && (caV = 0xb4);
          var ccH = c8G['sprayScale'] / 0x2;
          if (ccG) {
            if (c8J['width'] < ccH || c8J['length'] < ccH) return;
            c8L - ccH < c8J['z'] - c8J['length'] ? c8L = c8J['z'] - c8J['length'] + ccH : c8L + ccH > c8J['z'] + c8J['length'] && (c8L = c8J['z'] + c8J['length'] - ccH), c8K - ccH < c8J['x'] - c8J['width'] ? c8K = c8J['x'] - c8J['width'] + ccH : c8K + ccH > c8J['x'] + c8J['width'] && (c8K = c8J['x'] + c8J['width'] - ccH);
          } else {
            if (c8J['height'] < ccH) return;
            if (0x5a == caV || -0x5a == caV) {
              if (c8J['length'] < ccH) return;
              c8L - ccH < c8J['z'] - c8J['length'] ? c8L = c8J['z'] - c8J['length'] + ccH : c8L + ccH > c8J['z'] + c8J['length'] && (c8L = c8J['z'] + c8J['length'] - ccH);
            } else {
              if (c8J['width'] < ccH) return;
              c8K - ccH < c8J['x'] - c8J['width'] ? c8K = c8J['x'] - c8J['width'] + ccH : c8K + ccH > c8J['x'] + c8J['width'] && (c8K = c8J['x'] + c8J['width'] - ccH);
            }
            c8I + ccH > c8J['y'] + c8J['height'] && (c8I = c8J['y'] + c8J['height'] - ccH);
          }
          c7p['lastSpray'] = c7o['now'], c7o['playSound'] && c7o['playSound']('spray', 0.4, c7p, !0x0), c8H['broadcast']('game' + c7o['sid'], 'sp', c7p['sid'], c7p['sprayIndex'], c8K['round'](0x2), c8I['round'](0x2), c8L['round'](0x2), caV, ccG);
        }
      }
    }, this['interact'] = function(c7p, c7q) {
      if (c7o['now'] - c7p['lastInteract'] >= c8G['interactTimer']) {
        if (c7p['lastInteract'] = c7o['now'], !c7q) {
          if ('inf' != c7p['team'])
            for (var c7r = 0x0; c7r < c7o['map']['manager']['pickups']['length']; ++c7r)
              if (null != (c8I = c7o['map']['manager']['pickups'][c7r])['pickup'] && c7p['collides'](c8I) && -0x1 == c7p['loadout']['indexOf'](c8I['pickup']) && c7p['score'] >= c8I['scoreP']) {
                if (c7o['weapons'][c7p['loadout'][0x0]] && c7o['weapons'][c7p['loadout'][0x0]]['melee'] && 0x1 == c7p['loadout']['length']) c8J = void 0x0, c7p['loadout'][0x0] = c8I['pickup'], c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = 0x0, c8I['pickupRep'] && null == c8J && this['addPicked'](c7p, c8I['pickup']);
                else if (c7o['weapons'][c8I['pickup']]['type']) c7o['weapons'][c7p['loadout'][0x0]]['type'] ? (c8J = c7p['loadout'][0x0], c7p['loadout'][0x0] = c8I['pickup'], c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = 0x0) : !c7o['weapons'][c7p['loadout'][0x0]]['type'] && (c8J = c7o['weapons'][c7p['loadout'][0x1]] && c7o['weapons'][c7p['loadout'][0x1]]['melee'] ? void 0x0 : c7p['loadout'][0x1], c7p['loadout'][0x1] = c8I['pickup'], c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = 0x1), this['removePicked'](c7p, c8J), c8I['pickupRep'] && null == c8J && this['addPicked'](c7p, c8I['pickup']);
                else if (!c7o['weapons'][c8I['pickup']]['type']) {
                  c8J = c7o['weapons'][c7p['loadout'][0x0]] && c7o['weapons'][c7p['loadout'][0x0]]['melee'] ? void 0x0 : c7p['loadout'][0x0];
                  var c7t = !0x1;
                  c7o['weapons'][c7p['loadout'][0x0]]['type'] ? (c7p['loadout']['splice'](0x0, 0x0, c8I['pickup']), c7o['weapons'][c7p['loadout'][0x1]] && c7o['weapons'][c7p['loadout'][0x1]]['melee'] && (c7p['loadout']['length'] = 0x1), c8J = void 0x0) : !c7o['weapons'][c7p['loadout'][0x0]]['type'] && (!(c7o['weapons'][c7p['loadout'][0x0]] && c7o['weapons'][c7p['loadout'][0x0]]['melee']) && (c7t = this['removePicked'](c7p, c7p['loadout'][0x0])), c7p['loadout'][0x0] = c8I['pickup']), c8I['pickupRep'] && (null == c8J || c7t) && this['addPicked'](c7p, c8I['pickup']), c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = 0x0;
                }
                c8I['pickupRep'] && (c8I['pickup'] = c8J), c8H['broadcast']('game' + c7o['sid'], 'inat', c7p['sid'], c7p['loadout'], c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'], c8I['uid'], c8I['pickupRep'] ? c8J : c8I['pickup']), c7p['updateLoadout'](c7o, c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'], !0x0, ...c7p['loadout']), 0x0 == c8I['scoreP'] || c8I['method'] || (c8H['send'](c7p['id'], 'am', ['Purchased', null]), this['score'](c7p, -c8I['scoreP']));
                break;
              } for (c7r = 0x0; c7r < c7o['map']['manager']['gates']['length']; ++c7r)
            if (((c8I = c7o['map']['manager']['gates'][c7r])['active'] || !c8I['active'] && c8I['closeable']) && c7p['collides'](c8I, c8I['tRadius']) && c7p['score'] >= c8I['scoreP']) {
              0x0 != c8I['scoreP'] && (c8H['send'](c7p['id'], 'am', [c8I['method'] ? 'Unlocked' : 'Purchased', null]), !c8I['method'] && this['score'](c7p, -c8I['scoreP'])), c8H['broadcast']('game' + c7o['sid'], 'gte', c8I['uid'], !c8I['active'] && c8I['closeable']), c8I['active'] = !c8I['active'];
              break;
            }
        }
        for (c7r = 0x0; c7r < c7o['map']['manager']['banks']['length']; ++c7r)
          if ((c8I = c7o['map']['manager']['banks'][c7r])['active'] && c7p['collides'](c8I, c8I['tRadius'])) {
            0x0 != c8I['deposited'] && c7q ? c8I['withdrawAmnt'] && c8I['deposited'] > c8I['withdrawAmnt'] ? (c8I['deposited'] -= c8I['withdrawAmnt'], this['score'](c7p, c8I['withdrawAmnt'])) : (this['score'](c7p, c8I['deposited']), c8I['deposited'] = 0x0) : 0x0 != c7p['score'] && !c7q && (c8I['depositAmnt'] && c7p['score'] > c8I['depositAmnt'] ? (c8I['deposited'] += c8I['depositAmnt'], this['score'](c7p, -c8I['depositAmnt'])) : (c8I['deposited'] += c7p['score'], this['score'](c7p, -c7p['score']))), c8H['broadcast']('game' + c7o['sid'], 'bnk', c8I['uid'], c8I['deposited']);
            break;
          }
      }
    }, this['findEmptyPickup'] = function() {
      for (var c7p, c7q = 0x0; c7q < c7o['map']['manager']['pickups']['length']; ++c7q)
        if ((c7p = c7o['map']['manager']['pickups'][c7q])['pickupRep'] && null == c7p['pickup']) return c7p['uid'];
      return null;
    }, this['addPicked'] = function(c7o, c7p) {
      -0x1 == c7o['lastPicked']['indexOf'](c7p) && c7o['lastPicked']['push'](c7p);
    }, this['removePicked'] = function(c7o, c7p) {
      var c7q = c7o['lastPicked']['indexOf'](c7p);
      return -0x1 < c7q && c7o['lastPicked']['splice'](c7q, 0x1), -0x1 < c7q;
    }, this['dropWeapon'] = function(c7p, c7q) {
      if (c7o['map']['manager']['pickups']['length']) {
        var c7r, c7t = c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'],
          c8C = c7p['loadout'][c7t],
          c8D = [c7p['x'] + c8E['randInt'](-0x5, 0x5), c7p['y'] + 0x1, c7p['z'] + c8E['randInt'](-0x5, 0x5)];
        if (c7q) {
          for (var c8F = 0x0; c8F < c7p['loadout']['length']; c8F++) c8C = c7p['loadout'][c8F], (c7r = this['findEmptyPickup']()) && -0x1 < c7p['lastPicked']['indexOf'](c8C) && !c7o['weapons'][c8C]['melee'] && (c8D = [c7p['x'] + c8E['randInt'](-0x5, 0x5), c7p['y'] + 0x1, c7p['z'] + c8E['randInt'](-0x5, 0x5)], c7o['updatePickup'](c7r, c8C, null, c8D), c8H['broadcast']('game' + c7o['sid'], 'inat', -0x1, null, null, c7r, c8C, !0x0, c8D));
          c7p['lastPicked']['length'] = 0x0;
        } else if (!c7o['weapons'][c8C]['melee']) {
          var c8G = (c7r = this['findEmptyPickup']()) && -0x1 < c7p['lastPicked']['indexOf'](c8C);
          c8G && (this['removePicked'](c7p, c8C), c7o['updatePickup'](c7r, c8C, null, c8D)), c7p['loadout'] = 0x1 == c7p['loadout']['length'] ? [] : [c7p['loadout'][c7t ? 0x0 : 0x1]], c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = 0x0, c8H['broadcast']('game' + c7o['sid'], 'inat', c7p['sid'], c7p['loadout'], c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'], c7r, c8C, c8G, c8D), c7p['updateLoadout'](c7o, c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'], !0x0, ...c7p['loadout']);
        }
      }
    }, this['updateInteract'] = function(c7p, c7q, c7r = 'Pickup\x20weapon', c7t) {
      if ((c7o['map']['manager']['pickups']['length'] || c7o['map']['manager']['gates']['length'] || c7o['map']['manager']['banks']['length']) && c7p['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW']) {
        inner = c7t ? c7r + '<div\x20style=\x27color:\x20#fff;margin-top:-30px;\x27>Press\x20<span\x20style=\x27color:' + c8F['interactPopup']['key'] + '\x27>[' + c8E['getKeyName'](c7o['controls']['interactKey']) + ']</span>\x20to\x20Deposit\x20-\x20' + (c7t[0x0] || 'All') + '</div><div\x20style=\x27color:\x20#fff;margin-top:-30px;\x27>Press\x20<span\x20style=\x27color:' + c8F['interactPopup']['key'] + '\x27>[' + c8E['getKeyName'](c7o['controls']['interactSecKey']) + ']</span>\x20to\x20Withdraw\x20-\x20' + (c7t[0x1] || 'All') + '</div>' : 'Press\x20<span\x20style=\x22color:' + c8F['interactPopup']['key'] + '\x22>[' + c8E['getKeyName'](c7o['controls']['interactKey']) + ']</span>\x20to\x20' + c7r;
        var c8C = c7q ? 'block' : 'none';
        interactMsg['innerHTML'] != inner && (interactMsg['innerHTML'] = inner), interactMsg['style']['display'] != c8C && (interactMsg['style']['display'] = c8C);
      }
    };
    var cd6 = [];
    this['syncLeaders'] = function() {
      var c7p = c7o['mode']['leaderStat'] || 'score';
      c8K = c7o['mode']['killSort'] ? this['list']['slice']()['sort'](c8E['orderByKills']) : this['list']['slice']()['sort'](c8E['orderByScore']), cd6['length'] = 0x0;
      for (var c7q = 0x0, c7r = 0x0, c7t = 0x0; c7t < c8K['length']; ++c7t) c8K[c7t]['spectating'] ? c8K[c7t]['account'] && c8K[c7t]['account']['moderator'] || c7r++ : 0xa > c7q && (c7q++, cd6['push'](c8K[c7t]['sid'], c8K[c7t]['account'] ? c8K[c7t]['account']['name'] : c8K[c7t]['name'], c8K[c7t]['team'], c7o['mode']['killSort'] ? c8K[c7t]['kills'] : c8G['endForm'][c7p] ? c8G['endForm'][c7p](c8K[c7t][c7p], c7o, c8K[c7t]) : c8K[c7t][c7p], c8K[c7t]['account'] ? c8K[c7t]['account']['clan'] : 0x0, c8K[c7t]['account'] ? c8K[c7t]['account']['featured'] : 0x0));
      c8H['broadcast']('game' + c7o['sid'], '7', cd6, c7r);
    }, this['saveClassScores'] = function(c7p) {
      if (c7p['classScores'])
        for (var c7q = 0x0; c7q < c7o['config']['classes']['length']; ++c7q) c7p['classScores'][c7q] && (c7p['account']['stats']['c' + c7q] || (c7p['account']['stats']['c' + c7q] = 0x0), c7p['account']['stats']['c' + c7q] += c7p['classScores'][c7q]);
    }, this['score'] = function(c7p, c7q, c7r) {
      c8H && (c7p['score'] += c7q, null == c7o['host'] && 0x32c8 < c7p['score'] && (c7p['score'] = 0x32c8, c7q = 0x0), c8H['send'](c7p['id'], '5', c7q), this['syncLeaders'](), null == c7o['host'] && (!c7p['classScores'][c7p['classIndex']] && (c7p['classScores'][c7p['classIndex']] = 0x0), c7p['classScores'][c7p['classIndex']] += c7q), c7o['mode']['teams'] && c7p['team'] && c7o['teams'] && !c7o['mode']['noScoreC'] && (!c7r || !c7o['mode']['objective']) && (c7o['teams'][c7p['team']] ? c7o['teams'][c7p['team']] += c7q : c7o['teams'][c7p['team']] = c7q, c8H['broadcast']('game' + c7o['sid'], 'ts', c7p['team'], c7o['teams'][c7p['team']])));
    }, this['tickPlayer'] = function(c7o, c7p) {
      c7o['playTime'] += c7p, 0x0 < c7o['hitTimer'] && (c7o['hitTimer'] -= c7p), c7o['ticker'] -= c7p, 0x0 >= c7o['ticker'] && (c7o['ticker'] = 0x1f4, 0x0 >= c7o['hitTimer'] && !c7o['challMode'] && this['changeHealth'](c7o, null, -c7o['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] * (c7o['regen'] || 0x0)));
    }, this['changeHealth'] = function(c7p, c7q, c7r, c7t, c8C) {
      if ((!c7o['waitTimers'] || c7o['waitTimers'][0x0]['canDMG']) && !(0x0 > c7r && c7p['health'] == c7p['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn']) && (c7q && c7q['account'] && c7q['account']['hack'] && c7r && (c7r *= 0.2), c7q && 0.1 <= c7q['avgSpn'] && (c7r *= 0.2), c7q && c7q['isHacker'] && (c7r *= 0.1), c7q && c7q['lastHack'] && 0x190 >= c7o['now'] - c7q['lastHack'] && (c7r *= 0.2), !(!c7t && c7p['team'] && c7q && c7p['team'] == c7q['team'] && 0x0 < c7r))) {
        if (c7q && c7q != c7p && 0x0 < c7r && c8H['send'](c7q['id'], '4', c7p['sid'], Math['round'](c7r), c8C), c7p['dummy']) return !0x0;
        0x0 < c7r && (c7p['hitTimer'] = c7p['regenDelay'] || 0x0), c7p['health'] -= c7r, c7p['health'] = Math['max'](Math['min'](c7p['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'], c7p['health']), 0x0), c7p['godMode'] && (c7p['health'] = c7p['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn']), c7q ? (c8H['send'](c7p['id'], 'h', Math['ceil'](c7p['health']), null, Math['round'](c7q['x']), Math['round'](c7q['z'])), c7q != c7p && (c7p['dmgReceived'][c7q['id']] ? (c7p['dmgReceived'][c7q['id']]['val'] += c7r, c7p['dmgReceived'][c7q['id']]['time'] = c7o['now']) : c7p['dmgReceived'][c7q['id']] = {
          'time': c7o['now'],
          'val': c7r
        })) : c8H['send'](c7p['id'], 'h', Math['ceil'](c7p['health']));
        for (var c8D = 0x0; c8D < this['list']['length']; ++c8D) this['list'][c8D] != c7p && c8H['send'](this['list'][c8D]['id'], 'h', Math['ceil'](c7p['health']), c7p['sid']);
        return 0x0 >= c7p['health'];
      }
    }, this['changePosition'] = function(c7o, c7p, c7q, c7r, c7t) {
      c7o['x'] = c7o['oldX'] = c7p, c7o['y'] = c7o['oldY'] = c7q, c7o['z'] = c7o['oldZ'] = c7r, c7t && (c7o['lastX'] = c7p, c7o['lastY'] = c7q, c7o['lastZ'] = c7r, c7o['stepVal'] = 0x0, c7o['xVel'] = 0x0, c7o['yVel'] = 0x0, c7o['zVel'] = 0x0);
    }, this['swapMelee'] = function(c7o, c7p) {
      0x1 >= c7o['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length'] || (c7o['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] == c7o['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length'] - 0x1 ? this['swapWeapon'](c7o, 0x1, !0x1, void 0x0, void 0x0, c7p) : this['swapWeapon'](c7o, null, null, void 0x0, c7o['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length'] - 0x1, c7p));
    }, this['swapSecondary'] = function(c7p, c7q) {
      if (!(0x1 >= c7p['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length']))
        for (var c7r, c7t = 0x0; c7t < c7p['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length']; ++c7t) c7r = c7p['loadout'][c7t], c7o['weapons'][c7r] && c7o['weapons'][c7r]['secondary'] && (c7p['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] == c7t ? this['swapWeapon'](c7p, null, null, void 0x0, 0x0, c7q) : this['swapWeapon'](c7p, null, null, void 0x0, c7t, c7q));
    }, this['swapWeapon'] = function(c7q, c7r, c7t, c8C, c8D, c8F) {
      if (!(0x1 >= c7q['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length'] && c7r || c8C > c7q['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length'])) {
        var c8G = c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'];
        if (c7r && (0x1 != c7r && -0x1 != c7r && (c7r = 0x0), c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] += c7r, 0x1 == c7r ? c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] > c7q['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length'] - 0x2 && (c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = 0x0) : 0x0 > c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] ? c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = Math['min'](c7q['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length'] - 0x1, 0x2) : c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = 0x0), null != c8C && (c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = c8C), null != c8D && (c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = c8D), (null != c7r || null != c8D) && (c8G != c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] || c7t) && (c7q['reloadTimer'] = 0x0, c7q['TpWpiIwBuzDTtkhzEOcjaBWGIOZAPHZH'] = !0x1, c7q['burstCount'] = 0x0), c7q['weapon'] = c7o['weapons'][c7q['loadout'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]], c7q['weapon'] || (c7q['weapon'] = c7o['weapons'][c7q['loadout'][0x0]], c7q['weapon'] && (c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] = 0x0)), c7p && (c8G != c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] || c7t)) {
          this['cancelInspect'](c7q);
          for (var c8H = 0x0; c8H < c7q['weaponMeshes']['length']; ++c8H) c7q['weaponMeshes'][c8H]['visible'] = !0x1;
          c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] && (c7q['weaponMeshes'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']]['visible'] = !this['isWeaponHidden'](c7q, c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']) || !c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW']);
        }
        if (null == c8C && c7q['weapon'] && (!c7p || c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW']) && (c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && c8G == c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] || c8F || (c7q['swapTime'] = c7q['weapon']['swapTime']), c7q['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && (c8G != c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] || c7t))) {
          var c8I, c8J = '';
          for (c8H = 0x0; c8H < c7q['ojusBSorlGrTgCWpeQlEexnJHnISPMKJ']['length']; ++c8H) c8I = c8H == c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'], c7o['weapons'][c7q['loadout'][c8H]]['icon'] && (c8J += '<div\x20class=\x27weaponItem\x27>' + (0x0 < c8H ? '<div\x20class=\x27weapKey\x27>' + (c7o['weapons'][c7q['loadout'][c8H]]['melee'] ? '[' + c8E['getKeyName'](c7o['controls']['meleeKey']) + ']' : '[' + c8E['getKeyName'](c7o['controls']['swapKey']) + ']') + '</div>' : '') + '<img\x20style=\x27opacity:' + (c8I ? 0x1 : 0.7) + (c8H ? ';margin-right:25px' : '') + '\x27\x20class=\x27weaponIcon\x27\x20src=\x27' + c8E['assetsUrl']((c7o['weapons'][c7q['loadout'][c8H]]['melee'] ? '/textures/melee/icon_' + (c7o['store']['skins'][c7q['meleeIndex']] && c7o['store']['skins'][c7q['meleeIndex']]['id'] || 0x0) : '/textures/weapons/' + c7o['weapons'][c7q['loadout'][c8H]]['icon']) + '.png') + '\x27\x20/></div>');
          c8F || (c7q['swapTween'] && c7q['swapTween']['stop'](), c7q['swapTweenA'] = 0.5, c7q['swapTween'] = new TWEEN['Tween'](c7q)['to']({
            'swapTweenA': 0x1
          }, 0x4b0)['easing'](TWEEN['Easing']['Elastic']['Out'])['start'](), c8G != c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] && 0x1 == c7q['aimVal'] && (c7q['swapTweenAnim'] && c7q['swapTweenAnim']['stop'](), c7q['swapTweenR'] = c7q['weapon']['swapWiggle'] || 0.6, c7q['swapTweenAnim'] = new TWEEN['Tween'](c7q)['to']({
            'swapTweenR': 0x0
          }, c7q['weapon']['swapTime'] + 0xdc)['easing'](TWEEN['Easing']['Back']['InOut'])['start']()), c8G != c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] && 0x1 == c7q['aimVal'] && (c7q['meleeAnim']['anim'] && c7q['meleeAnim']['anim']['stop'](), c7q['resetMeleeAnim'](), c7q['meleeAnim']['armR'] = 0.15, c7q['weapon']['melee'] && (c7q['meleeAnim']['anim'] = new TWEEN['Tween'](c7q['meleeAnim'])['to']({
            'armR': 0x0
          }, 0x2bc)['easing'](TWEEN['Easing']['Back']['InOut'])['start']()))), weaponDisplay['innerHTML'] = c8J, this['updatePlayerAmmo'](c7q);
        }
      }
    }, this['taunt'] = function(c7p, c7q) {
      c7p && c7p['active'] && c8G['taunts'][c7q] && (!c7p['lastTaunt'] || 0x0 <= c7o['now'] - c7p['lastTaunt']) && (c7p['lastTaunt'] = c7o['now'] + c8G['taunts'][c7q]['tm'], c7o['playSound'](c8G['taunts'][c7q]['id'], 0.3, c7p, !0x0, c8E['randFloat'](0.9, 0x1)));
    }, this['checkStreak'] = function(c7p) {
      for (var c7q = 0x0; c7q < c7o['streaks']['length']; ++c7q) c7p['realKillStreak'] == c7o['streaks'][c7q]['kills'] && this['addStreak'](c7p, c7q);
      c7p['realKillStreak'] >= c7o['maxStreak'] && (c7p['realKillStreak'] = 0x0);
    }, this['useStreak'] = function(c7p, c7q) {
      c7p['streaks'][c7q] && c7p['streaks'][c7q]['streak']['activate'](c7o, c7p) && (0x1 < c7p['streaks'][c7q]['cnt'] ? c7p['streaks'][c7q]['cnt']-- : c7p['streaks'][c7q] = null, c8H['send'](c7p['id'], 'st', c7q, c7p['streaks'][c7q] && c7p['streaks'][c7q]['cnt'] || 0x0));
    }, this['addStreak'] = function(c7p, c7q) {
      c7p['streaks'][c7q] ? c7p['streaks'][c7q]['cnt']++ : c7p['streaks'][c7q] = {
        'cnt': 0x1,
        'streak': c7o['streaks'][c7q]
      }, c8H['send'](c7p['id'], 'st', c7q, c7p['streaks'][c7q]['cnt']);
    }, this['kill'] = function(c7p, c7q, c7r, c7t, c8C) {
      if (c7p['dummy'] || c7p['active']) {
        var c8D = !0x1;
        if (c7p['dummy'] || (c7p['active'] = !0x1, c7p['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] && this['toggleAim'](c7p, 0x0), c7p['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] && this['disposeMesh'](c7p)), c8H) {
          var c8E, c8F = 0x0;
          if (c7p['deaths']++, c7p['deathInfo']['doer'] = c7q, c7p['deathInfo']['time'] = c7o['now'], c7p['deathInfo']['tillNext'] = c7o['forceSpawn'] ? 0x3e8 * c7o['forceSpawn'] + c8G['deathDelay'] : null, c7o['mode']['noStreaks'] || c7o['config']['noStreaks'] || c7p['deathStreak']++, c7p['lives'] && !c7o['waitTimers'] && (c7p['lives']--, c8H['send'](c7p['id'], 'lv', c7p['lives'])), c7o['kills']++, c7q && c7q != c7p && (!c7p['dummy'] && c7q['kills']++, !(c7o['mode']['noStreaks'] || c7o['config']['noStreaks']) && (c7q['streak']++, c7q['killStreak']++, c7q['realKillStreak']++, c7q['deathStreak'] = 0x0, this['checkStreak'](c7q), 0x0 == c7q['killStreak'] % 0x5 && (c8F = c7q['killStreak']), c7o['now'] - c7q['lastKill'] >= c8G['feedTimer'] && (c7q['streak'] = 0x0)), c7q['lastKill'] = c7o['now'], !c8C && c7o['config']['killRewards'] && !c7o['mode']['noKillRewards'] && ((c8E = c8L['reward'](this, c7q, c7p, c7r, c7o)) && c8H['send'](c7q['id'], '6', c8E, c7r['headShot'] ? 0x1 : 0x0, c7q['kills']), this['score'](c7q, c8L['getScore'](c8E), !0x0), c8D = !0x0), c7o['players']['dropWeapon'](c7p, !0x0)), c7r && c7r['weapon'] && delete c7r['weapon'], !c7p['dummy'])
            for (var c8I = 0x0; c8I < this['list']['length']; ++c8I) !c7o['mode']['noAssists'] && c7p['dmgReceived'][this['list'][c8I]['id']] && c7q != this['list'][c8I] && c7p['dmgReceived'][this['list'][c8I]['id']]['val'] >= c8G['assistMin'] && c7o['now'] - c7p['dmgReceived'][this['list'][c8I]['id']]['time'] <= c8G['assistTime'] && (this['list'][c8I]['assists']++, this['score'](this['list'][c8I], c8G['assistScore'], !0x0), c8H['send'](this['list'][c8I]['id'], '10'), c8D = !0x0), this['list'][c8I] == c7p ? c8H['send'](c7p['id'], '3', c7p['sid'], c7p['deaths'], c7q ? c7q['sid'] : 0x0, [c7q ? null == c7r['weaponId'] ? c7q['loadout'][c7q['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] : c7r['weaponId'] : -0x1, c8E ? c8L['getScore'](c8E) : 0x0, c7q && c7q['account'] && c7q['account']['stats']['c' + c7q['classIndex']] ? c7q['account']['stats']['c' + c7q['classIndex']] : 0x0], c7r, c7t) : c8H['send'](this['list'][c8I]['id'], '3', c7p['sid'], c7p['deaths'], c7q ? c7q['sid'] : 0x0, null, c7r, c7t);
          c7o['mode']['onKill'] && c7o['mode']['onKill'](c7o, c8H, c7p, c7q, c7r), c8F && c8H['broadcast']('game' + c7o['sid'], 'kst', c7q['sid'], c8F);
        }
        c8H && !c8D && this['syncLeaders']();
      }
    }, this['indexBySid'] = function(c7o) {
      for (var c7p = 0x0; c7p < this['list']['length']; ++c7p)
        if (this['list'][c7p]['sid'] == c7o) return c7p;
      return -0x1;
    }, this['findBySid'] = function(c7o) {
      for (var c7p = 0x0; c7p < this['list']['length']; ++c7p)
        if (this['list'][c7p]['sid'] === c7o) return this['list'][c7p];
      return null;
    };
  };
}, function(ce4, ce5, ce6) {
  'use strict';
  ce6['r'](ce5);
  var ce7 = {};
  ce6['r'](ce7), ce6['d'](ce7, 'FunctionToString', function() {
    return ceY;
  }), ce6['d'](ce7, 'InboundFilters', function() {
    return cfp;
  });
  var ce8 = {};
  ce6['r'](ce8), ce6['d'](ce8, 'GlobalHandlers', function() {
    return co9;
  }), ce6['d'](ce8, 'TryCatch', function() {
    return cmj;
  }), ce6['d'](ce8, 'Breadcrumbs', function() {
    return cmL;
  }), ce6['d'](ce8, 'LinkedErrors', function() {
    return coc;
  }), ce6['d'](ce8, 'UserAgent', function() {
    return coe;
  });
  var ce9 = {};
  ce6['r'](ce9), ce6['d'](ce9, 'BaseTransport', function() {
    return ckr;
  }), ce6['d'](ce9, 'FetchTransport', function() {
    return ckt;
  }), ce6['d'](ce9, 'XHRTransport', function() {
    return cku;
  });
  var cea, ceb, cec, ced = ce6(0x0);
  (ceb = cea || (cea = {}))['Fatal'] = 'fatal', ceb['Error'] = 'error', ceb['Warning'] = 'warning', ceb['Log'] = 'log', ceb['Info'] = 'info', ceb['Debug'] = 'debug', ceb['Critical'] = 'critical',
    function(ce4) {
      ce4['fromString'] = function(ce5) {
        switch (ce5) {
          case 'debug':
            return ce4['Debug'];
          case 'info':
            return ce4['Info'];
          case 'warn':
          case 'warning':
            return ce4['Warning'];
          case 'error':
            return ce4['Error'];
          case 'fatal':
            return ce4['Fatal'];
          case 'critical':
            return ce4['Critical'];
          case 'log':
          default:
            return ce4['Log'];
        }
      };
    }(cea || (cea = {})),
    function(ce4) {
      ce4['Unknown'] = 'unknown', ce4['Skipped'] = 'skipped', ce4['Success'] = 'success', ce4['RateLimit'] = 'rate_limit', ce4['Invalid'] = 'invalid', ce4['Failed'] = 'failed';
    }(cec || (cec = {})),
    function(ce4) {
      ce4['fromHttpCode'] = function(ce5) {
        return 0xc8 <= ce5 && 0x12c > ce5 ? ce4['Success'] : 0x1ad === ce5 ? ce4['RateLimit'] : 0x190 <= ce5 && 0x1f4 > ce5 ? ce4['Invalid'] : 0x1f4 <= ce5 ? ce4['Failed'] : ce4['Unknown'];
      };
    }(cec || (cec = {}));
  var cej = ce6(0x9);

  function cek(ce4) {
    for (var ce5 = [], ce6 = 0x1; ce6 < arguments['length']; ce6++) ce5[ce6 - 0x1] = arguments[ce6];
    var ce7 = Object(cej['b'])();
    if (ce7 && ce7[ce4]) return ce7[ce4]['apply'](ce7, ced['d'](ce5));
    throw new Error('No\x20hub\x20defined\x20or\x20' + ce4 + '\x20was\x20not\x20found\x20on\x20the\x20hub,\x20please\x20open\x20a\x20bug\x20report.');
  }

  function cep(ce4) {
    var ce5;
    try {
      throw new Error('Sentry\x20syntheticException');
    } catch (ces) {
      ce5 = ces;
    }
    return cek('captureException', ce4, {
      'originalException': ce4,
      'syntheticException': ce5
    });
  }

  function cet(ce4, ce5) {
    var ce6;
    try {
      throw new Error(ce4);
    } catch (cex) {
      ce6 = cex;
    }
    return cek('captureMessage', ce4, ce5, {
      'originalException': ce4,
      'syntheticException': ce6
    });
  }

  function cey(ce4) {
    return cek('captureEvent', ce4);
  }

  function ceA(ce4) {
    cek('configureScope', ce4);
  }

  function ceC(ce4) {
    cek('addBreadcrumb', ce4);
  }

  function ceE(ce4, ce5) {
    cek('setContext', ce4, ce5);
  }

  function ceH(ce4) {
    cek('setExtras', ce4);
  }

  function ceJ(ce4) {
    cek('setTags', ce4);
  }

  function ceL(ce4, ce5) {
    cek('setExtra', ce4, ce5);
  }

  function ceO(ce4, ce5) {
    cek('setTag', ce4, ce5);
  }

  function ceR(ce4) {
    cek('setUser', ce4);
  }

  function ceT(ce4) {
    cek('withScope', ce4);
  }
  var ceV, ceW = ce6(0xa),
    ceX = ce6(0xd),
    ceY = function() {
      function ce4() {
        this['name'] = ce4['id'];
      }
      return ce4['prototype']['setupOnce'] = function() {
        ceV = Function['prototype']['toString'], Function['prototype']['toString'] = function() {
          for (var ce4 = [], ce5 = 0x0; ce5 < arguments['length']; ce5++) ce4[ce5] = arguments[ce5];
          var ce6 = this['__sentry__'] ? this['__sentry_original__'] : this;
          return ceV['apply'](ce6, ce4);
        };
      }, ce4['id'] = 'FunctionToString', ce4;
    }(),
    ceZ = ce6(0x19),
    cf0 = ce6(0x2),
    cf1 = ce6(0x5);

  function cf6(ce4, ce5) {
    return void 0x0 === ce5 && (ce5 = 0x0), 'string' != typeof ce4 || 0x0 === ce5 ? ce4 : ce4['length'] <= ce5 ? ce4 : ce4['substr'](0x0, ce5) + '...';
  }

  function cf9(ce4, ce5) {
    if (!Array['isArray'](ce4)) return '';
    for (var ce6, ce7 = [], ce8 = 0x0; ce8 < ce4['length']; ce8++) {
      ce6 = ce4[ce8];
      try {
        ce7['push'](ce6 + '');
      } catch (cff) {
        ce7['push']('[value\x20cannot\x20be\x20serialized]');
      }
    }
    return ce7['join'](ce5);
  }

  function cfg(ce4, ce5) {
    if (void 0x0 === ce5 && (ce5 = 0x28), !ce4['length']) return '[object\x20has\x20no\x20keys]';
    if (ce4[0x0]['length'] >= ce5) return cf6(ce4[0x0], ce5);
    for (var ce6, ce7 = ce4['length']; 0x0 < ce7; ce7--)
      if (!((ce6 = ce4['slice'](0x0, ce7)['join'](',\x20'))['length'] > ce5)) return ce7 === ce4['length'] ? ce6 : cf6(ce6, ce5);
    return '';
  }

  function cfl(ce4, ce5) {
    return Object(cf1['g'])(ce5) ? ce5['test'](ce4) : !('string' != typeof ce5) && ce4['includes'](ce5);
  }
  var cfo = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/],
    cfp = function() {
      function ce4(ce5) {
        void 0x0 === ce5 && (ce5 = {}), this['_options'] = ce5, this['name'] = ce4['id'];
      }
      return ce4['prototype']['setupOnce'] = function() {
        Object(ceW['b'])(function(ce5) {
          var ce6 = Object(cej['b'])();
          if (!ce6) return ce5;
          var ce7 = ce6['getIntegration'](ce4);
          if (ce7) {
            var ce8 = ce6['getClient'](),
              ce9 = ce8 ? ce8['getOptions']() : {},
              cea = ce7['_mergeOptions'](ce9);
            if (ce7['_shouldDropEvent'](ce5, cea)) return null;
          }
          return ce5;
        });
      }, ce4['prototype']['_shouldDropEvent'] = function(ce4, ce5) {
        return this['_isSentryError'](ce4, ce5) ? (ceZ['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20internal\x20Sentry\x20Error.\x0aEvent:\x20' + Object(cf0['d'])(ce4)), !0x0) : this['_isIgnoredError'](ce4, ce5) ? (ceZ['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20matched\x20by\x20`ignoreErrors`\x20option.\x0aEvent:\x20' + Object(cf0['d'])(ce4)), !0x0) : this['_isBlacklistedUrl'](ce4, ce5) ? (ceZ['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20matched\x20by\x20`blacklistUrls`\x20option.\x0aEvent:\x20' + Object(cf0['d'])(ce4) + '.\x0aUrl:\x20' + this['_getEventFilterUrl'](ce4)), !0x0) : !this['_isWhitelistedUrl'](ce4, ce5) && (ceZ['a']['warn']('Event\x20dropped\x20due\x20to\x20not\x20being\x20matched\x20by\x20`whitelistUrls`\x20option.\x0aEvent:\x20' + Object(cf0['d'])(ce4) + '.\x0aUrl:\x20' + this['_getEventFilterUrl'](ce4)), !0x0);
      }, ce4['prototype']['_isSentryError'] = function(ce4, ce5) {
        if (void 0x0 === ce5 && (ce5 = {}), !ce5['ignoreInternal']) return !0x1;
        try {
          return 'SentryError' === ce4['exception']['values'][0x0]['type'];
        } catch (cfJ) {
          return !0x1;
        }
      }, ce4['prototype']['_isIgnoredError'] = function(ce4, ce5) {
        return void 0x0 === ce5 && (ce5 = {}), !(!ce5['ignoreErrors'] || !ce5['ignoreErrors']['length']) && this['_getPossibleEventMessages'](ce4)['some'](function(ce4) {
          return ce5['ignoreErrors']['some'](function(ce5) {
            return cfl(ce4, ce5);
          });
        });
      }, ce4['prototype']['_isBlacklistedUrl'] = function(ce4, ce5) {
        if (void 0x0 === ce5 && (ce5 = {}), !ce5['blacklistUrls'] || !ce5['blacklistUrls']['length']) return !0x1;
        var ce6 = this['_getEventFilterUrl'](ce4);
        return !!ce6 && ce5['blacklistUrls']['some'](function(ce4) {
          return cfl(ce6, ce4);
        });
      }, ce4['prototype']['_isWhitelistedUrl'] = function(ce4, ce5) {
        if (void 0x0 === ce5 && (ce5 = {}), !ce5['whitelistUrls'] || !ce5['whitelistUrls']['length']) return !0x0;
        var ce6 = this['_getEventFilterUrl'](ce4);
        return !ce6 || ce5['whitelistUrls']['some'](function(ce4) {
          return cfl(ce6, ce4);
        });
      }, ce4['prototype']['_mergeOptions'] = function(ce4) {
        return void 0x0 === ce4 && (ce4 = {}), {
          'blacklistUrls': ced['d'](this['_options']['blacklistUrls'] || [], ce4['blacklistUrls'] || []),
          'ignoreErrors': ced['d'](this['_options']['ignoreErrors'] || [], ce4['ignoreErrors'] || [], cfo),
          'ignoreInternal': void 0x0 === this['_options']['ignoreInternal'] || this['_options']['ignoreInternal'],
          'whitelistUrls': ced['d'](this['_options']['whitelistUrls'] || [], ce4['whitelistUrls'] || [])
        };
      }, ce4['prototype']['_getPossibleEventMessages'] = function(ce4) {
        if (ce4['message']) return [ce4['message']];
        if (ce4['exception']) try {
          var ce5 = ce4['exception']['values'][0x0],
            ce6 = ce5['type'],
            ce7 = ce5['value'];
          return ['' + ce7, ce6 + ':\x20' + ce7];
        } catch (cg1) {
          return ceZ['a']['error']('Cannot\x20extract\x20message\x20for\x20event\x20' + Object(cf0['d'])(ce4)), [];
        }
        return [];
      }, ce4['prototype']['_getEventFilterUrl'] = function(ce4) {
        try {
          if (ce4['stacktrace']) {
            var ce5 = ce4['stacktrace']['frames'];
            return ce5[ce5['length'] - 0x1]['filename'];
          }
          if (ce4['exception']) {
            var ce6 = ce4['exception']['values'][0x0]['stacktrace']['frames'];
            return ce6[ce6['length'] - 0x1]['filename'];
          }
          return null;
        } catch (cg5) {
          return ceZ['a']['error']('Cannot\x20extract\x20url\x20for\x20event\x20' + Object(cf0['d'])(ce4)), null;
        }
      }, ce4['id'] = 'InboundFilters', ce4;
    }(),
    cfq = ce6(0x6),
    cfr = function(ce4) {
      function ce5(ce5) {
        var ce6 = this['constructor'],
          ce7 = ce4['call'](this, ce5) || this;
        return ce7['message'] = ce5, ce7['name'] = ce6['prototype']['constructor']['name'], Object['setPrototypeOf'](ce7, ce6['prototype']), ce7;
      }
      return ced['b'](ce5, ce4), ce5;
    }(Error),
    cfs = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w\.-]+)(?::(\d+))?\/(.+)/,
    cft = function() {
      function ce4(ce4) {
        'string' == typeof ce4 ? this['_fromString'](ce4) : this['_fromComponents'](ce4), this['_validate']();
      }
      return ce4['prototype']['toString'] = function(ce4) {
        void 0x0 === ce4 && (ce4 = !0x1);
        var ce5 = this,
          ce6 = ce5['host'],
          ce7 = ce5['path'],
          ce8 = ce5['pass'],
          ce9 = ce5['port'],
          cea = ce5['projectId'];
        return ce5['protocol'] + '://' + ce5['user'] + (ce4 && ce8 ? ':' + ce8 : '') + '@' + ce6 + (ce9 ? ':' + ce9 : '') + '/' + (ce7 ? ce7 + '/' : ce7) + cea;
      }, ce4['prototype']['_fromString'] = function(ce4) {
        var ce5 = cfs['exec'](ce4);
        if (!ce5) throw new cfr('Invalid\x20Dsn');
        var ce6 = ced['c'](ce5['slice'](0x1), 0x6),
          ce7 = ce6[0x0],
          ce8 = ce6[0x1],
          ce9 = ce6[0x2],
          cea = void 0x0 === ce9 ? '' : ce9,
          ceb = ce6[0x3],
          cec = ce6[0x4],
          cej = void 0x0 === cec ? '' : cec,
          cek = '',
          cep = ce6[0x5],
          cet = cep['split']('/');
        0x1 < cet['length'] && (cek = cet['slice'](0x0, -0x1)['join']('/'), cep = cet['pop']()), Object['assign'](this, {
          'host': ceb,
          'pass': cea,
          'path': cek,
          'projectId': cep,
          'port': cej,
          'protocol': ce7,
          'user': ce8
        });
      }, ce4['prototype']['_fromComponents'] = function(ce4) {
        this['protocol'] = ce4['protocol'], this['user'] = ce4['user'], this['pass'] = ce4['pass'] || '', this['host'] = ce4['host'], this['port'] = ce4['port'] || '', this['path'] = ce4['path'] || '', this['projectId'] = ce4['projectId'];
      }, ce4['prototype']['_validate'] = function() {
        var ce4 = this;
        if (['protocol', 'user', 'host', 'projectId']['forEach'](function(ce5) {
            if (!ce4[ce5]) throw new cfr('Invalid\x20Dsn');
          }), 'http' !== this['protocol'] && 'https' !== this['protocol']) throw new cfr('Invalid\x20Dsn');
        if (this['port'] && Number['isNaN'](parseInt(this['port'], 0xa))) throw new cfr('Invalid\x20Dsn');
      }, ce4;
    }(),
    cfu = function() {
      function ce4(ce4) {
        this['dsn'] = ce4, this['_dsnObject'] = new cft(ce4);
      }
      return ce4['prototype']['getDsn'] = function() {
        return this['_dsnObject'];
      }, ce4['prototype']['getStoreEndpoint'] = function() {
        return '' + this['_getBaseUrl']() + this['getStoreEndpointPath']();
      }, ce4['prototype']['getStoreEndpointWithUrlEncodedAuth'] = function() {
        var ce4 = {
          'sentry_key': this['_dsnObject']['user'],
          'sentry_version': '7'
        };
        return this['getStoreEndpoint']() + '?' + Object(cfq['d'])(ce4);
      }, ce4['prototype']['_getBaseUrl'] = function() {
        var ce4 = this['_dsnObject'],
          ce5 = ce4['protocol'] ? ce4['protocol'] + ':' : '',
          ce6 = ce4['port'] ? ':' + ce4['port'] : '';
        return ce5 + '//' + ce4['host'] + ce6;
      }, ce4['prototype']['getStoreEndpointPath'] = function() {
        var ce4 = this['_dsnObject'];
        return (ce4['path'] ? '/' + ce4['path'] : '') + '/api/' + ce4['projectId'] + '/store/';
      }, ce4['prototype']['getRequestHeaders'] = function(ce4, ce5) {
        var ce6 = this['_dsnObject'],
          ce7 = ['Sentry\x20sentry_version=7'];
        return ce7['push']('sentry_timestamp=' + new Date()['getTime']()), ce7['push']('sentry_client=' + ce4 + '/' + ce5), ce7['push']('sentry_key=' + ce6['user']), ce6['pass'] && ce7['push']('sentry_secret=' + ce6['pass']), {
          'Content-Type': 'application/json',
          'X-Sentry-Auth': ce7['join'](',\x20')
        };
      }, ce4['prototype']['getReportDialogEndpoint'] = function(ce4) {
        void 0x0 === ce4 && (ce4 = {});
        var ce5 = this['_dsnObject'],
          ce6 = this['_getBaseUrl']() + (ce5['path'] ? '/' + ce5['path'] : '') + '/api/embed/error-page/',
          ce7 = [];
        for (var ce8 in ce7['push']('dsn=' + ce5['toString']()), ce4)
          if ('user' == ce8) {
            if (!ce4['user']) continue;
            ce4['user']['name'] && ce7['push']('name=' + encodeURIComponent(ce4['user']['name'])), ce4['user']['email'] && ce7['push']('email=' + encodeURIComponent(ce4['user']['email']));
          } else ce7['push'](encodeURIComponent(ce8) + '=' + encodeURIComponent(ce4[ce8]));
        return ce7['length'] ? ce6 + '?' + ce7['join']('&') : ce6;
      }, ce4;
    }(),
    cfv = ce6(0x48),
    cfw = [];

  function cgQ(ce4) {
    var ce5 = {};
    return function(ce4) {
      var ce5 = ce4['defaultIntegrations'] && ced['d'](ce4['defaultIntegrations']) || [],
        ce6 = ce4['integrations'],
        ce7 = [];
      if (Array['isArray'](ce6)) {
        var ce8 = ce6['map'](function(ce4) {
            return ce4['name'];
          }),
          ce9 = [];
        ce5['forEach'](function(ce4) {
          -0x1 === ce8['indexOf'](ce4['name']) && -0x1 === ce9['indexOf'](ce4['name']) && (ce7['push'](ce4), ce9['push'](ce4['name']));
        }), ce6['forEach'](function(ce4) {
          -0x1 === ce9['indexOf'](ce4['name']) && (ce7['push'](ce4), ce9['push'](ce4['name']));
        });
      } else {
        if ('function' != typeof ce6) return ced['d'](ce5);
        ce7 = ce6(ce5), ce7 = Array['isArray'](ce7) ? ce7 : [ce7];
      }
      return ce7;
    }(ce4)['forEach'](function(ce4) {
      ce5[ce4['name']] = ce4,
        function(ce4) {
          -0x1 !== cfw['indexOf'](ce4['name']) || (ce4['setupOnce'](ceW['b'], cej['b']), cfw['push'](ce4['name']), ceZ['a']['log']('Integration\x20installed:\x20' + ce4['name']));
        }(ce4);
    }), ce5;
  }
  var ch4 = function() {
      function ce4(ce4, ce5) {
        this['_processing'] = !0x1, this['_backend'] = new ce4(ce5), this['_options'] = ce5, ce5['dsn'] && (this['_dsn'] = new cft(ce5['dsn'])), this['_integrations'] = cgQ(this['_options']);
      }
      return ce4['prototype']['captureException'] = function(ce4, ce5, ce6) {
        var ce7 = this,
          ce8 = ce5 && ce5['event_id'];
        return this['_processing'] = !0x0, this['_getBackend']()['eventFromException'](ce4, ce5)['then'](function(ce4) {
          return ce7['_processEvent'](ce4, ce5, ce6);
        })['then'](function(ce4) {
          ce8 = ce4 && ce4['event_id'], ce7['_processing'] = !0x1;
        })['catch'](function(ce4) {
          ceZ['a']['error'](ce4), ce7['_processing'] = !0x1;
        }), ce8;
      }, ce4['prototype']['captureMessage'] = function(ce4, ce5, ce6, ce7) {
        var ce8 = this,
          ce9 = ce6 && ce6['event_id'];
        return this['_processing'] = !0x0, (Object(cf1['f'])(ce4) ? this['_getBackend']()['eventFromMessage']('' + ce4, ce5, ce6) : this['_getBackend']()['eventFromException'](ce4, ce6))['then'](function(ce4) {
          return ce8['_processEvent'](ce4, ce6, ce7);
        })['then'](function(ce4) {
          ce9 = ce4 && ce4['event_id'], ce8['_processing'] = !0x1;
        })['catch'](function(ce4) {
          ceZ['a']['error'](ce4), ce8['_processing'] = !0x1;
        }), ce9;
      }, ce4['prototype']['captureEvent'] = function(ce4, ce5, ce6) {
        var ce7 = this,
          ce8 = ce5 && ce5['event_id'];
        return this['_processing'] = !0x0, this['_processEvent'](ce4, ce5, ce6)['then'](function(ce4) {
          ce8 = ce4 && ce4['event_id'], ce7['_processing'] = !0x1;
        })['catch'](function(ce4) {
          ceZ['a']['error'](ce4), ce7['_processing'] = !0x1;
        }), ce8;
      }, ce4['prototype']['getDsn'] = function() {
        return this['_dsn'];
      }, ce4['prototype']['getOptions'] = function() {
        return this['_options'];
      }, ce4['prototype']['flush'] = function(ce4) {
        var ce5 = this;
        return this['_isClientProcessing'](ce4)['then'](function(ce6) {
          return ce5['_processingInterval'] && clearInterval(ce5['_processingInterval']), ce5['_getBackend']()['getTransport']()['close'](ce4)['then'](function(ce4) {
            return ce6 && ce4;
          });
        });
      }, ce4['prototype']['close'] = function(ce4) {
        var ce5 = this;
        return this['flush'](ce4)['then'](function(ce4) {
          return ce5['getOptions']()['enabled'] = !0x1, ce4;
        });
      }, ce4['prototype']['getIntegrations'] = function() {
        return this['_integrations'] || {};
      }, ce4['prototype']['getIntegration'] = function(ce4) {
        try {
          return this['_integrations'][ce4['id']] || null;
        } catch (chG) {
          return ceZ['a']['warn']('Cannot\x20retrieve\x20integration\x20' + ce4['id'] + '\x20from\x20the\x20current\x20Client'), null;
        }
      }, ce4['prototype']['_isClientProcessing'] = function(ce4) {
        var ce5 = this;
        return new Promise(function(ce6) {
          var ce7 = 0x0;
          ce5['_processingInterval'] && clearInterval(ce5['_processingInterval']), ce5['_processingInterval'] = setInterval(function() {
            ce5['_processing'] ? (ce7 += 0x1, ce4 && ce7 >= ce4 && ce6(!0x1)) : ce6(!0x0);
          }, 0x1);
        });
      }, ce4['prototype']['_getBackend'] = function() {
        return this['_backend'];
      }, ce4['prototype']['_isEnabled'] = function() {
        return !0x1 !== this['getOptions']()['enabled'] && void 0x0 !== this['_dsn'];
      }, ce4['prototype']['_prepareEvent'] = function(ce4, ce5, ce6) {
        var ce7 = this['getOptions'](),
          ce8 = ce7['environment'],
          ce9 = ce7['release'],
          cea = ce7['dist'],
          ceb = ce7['maxValueLength'],
          cec = void 0x0 === ceb ? 0xfa : ceb,
          cej = ced['a']({}, ce4);
        void 0x0 === cej['environment'] && void 0x0 !== ce8 && (cej['environment'] = ce8), void 0x0 === cej['release'] && void 0x0 !== ce9 && (cej['release'] = ce9), void 0x0 === cej['dist'] && void 0x0 !== cea && (cej['dist'] = cea), cej['message'] && (cej['message'] = cf6(cej['message'], cec));
        var cek = cej['exception'] && cej['exception']['values'] && cej['exception']['values'][0x0];
        cek && cek['value'] && (cek['value'] = cf6(cek['value'], cec));
        var cep = cej['request'];
        cep && cep['url'] && (cep['url'] = cf6(cep['url'], cec)), void 0x0 === cej['event_id'] && (cej['event_id'] = Object(cf0['g'])()), this['_addIntegrations'](cej['sdk']);
        var cet = cfv['a']['resolve'](cej);
        return ce5 && (cet = ce5['applyToEvent'](cej, ce6)), cet;
      }, ce4['prototype']['_addIntegrations'] = function(ce4) {
        var ce5 = Object['keys'](this['_integrations']);
        ce4 && 0x0 < ce5['length'] && (ce4['integrations'] = ce5);
      }, ce4['prototype']['_processEvent'] = function(ce4, ce5, ce6) {
        var ce7 = this,
          ce8 = this['getOptions'](),
          ce9 = ce8['beforeSend'],
          cea = ce8['sampleRate'];
        return this['_isEnabled']() ? 'number' == typeof cea && Math['random']() > cea ? cfv['a']['reject']('This\x20event\x20has\x20been\x20sampled,\x20will\x20not\x20send\x20event.') : new cfv['a'](function(ce8, cea) {
          ce7['_prepareEvent'](ce4, ce6, ce5)['then'](function(ce4) {
            if (null !== ce4) {
              var ce6 = ce4;
              try {
                if (ce5 && ce5['data'] && !0x0 === ce5['data']['__sentry__'] || !ce9) return ce7['_getBackend']()['sendEvent'](ce6), void ce8(ce6);
                var ceb = ce9(ce4, ce5);
                if (void 0x0 === ceb) ceZ['a']['error']('`beforeSend`\x20method\x20has\x20to\x20return\x20`null`\x20or\x20a\x20valid\x20event.');
                else if (Object(cf1['j'])(ceb)) ce7['_handleAsyncBeforeSend'](ceb, ce8, cea);
                else {
                  if (null === (ce6 = ceb)) return ceZ['a']['log']('`beforeSend`\x20returned\x20`null`,\x20will\x20not\x20send\x20event.'), void ce8(null);
                  ce7['_getBackend']()['sendEvent'](ce6), ce8(ce6);
                }
              } catch (cic) {
                ce7['captureException'](cic, {
                  'data': {
                    '__sentry__': !0x0
                  },
                  'originalException': cic
                }), cea('`beforeSend`\x20throw\x20an\x20error,\x20will\x20not\x20send\x20event.');
              }
            } else cea('An\x20event\x20processor\x20returned\x20null,\x20will\x20not\x20send\x20event.');
          });
        }) : cfv['a']['reject']('SDK\x20not\x20enabled,\x20will\x20not\x20send\x20event.');
      }, ce4['prototype']['_handleAsyncBeforeSend'] = function(ce4, ce5, ce6) {
        var ce7 = this;
        ce4['then'](function(ce4) {
          return null === ce4 ? void ce6('`beforeSend`\x20returned\x20`null`,\x20will\x20not\x20send\x20event.') : (ce7['_getBackend']()['sendEvent'](ce4), void ce5(ce4));
        })['catch'](function(ce4) {
          ce6('beforeSend\x20rejected\x20with\x20' + ce4);
        });
      }, ce4;
    }(),
    ch5 = function() {
      function ce4() {}
      return ce4['prototype']['sendEvent'] = function() {
        return Promise['resolve']({
          'reason': 'NoopTransport:\x20Event\x20has\x20been\x20skipped\x20because\x20no\x20Dsn\x20is\x20configured.',
          'status': cec['Skipped']
        });
      }, ce4['prototype']['close'] = function() {
        return Promise['resolve'](!0x0);
      }, ce4;
    }(),
    ch6 = function() {
      function ce4(ce4) {
        this['_options'] = ce4, this['_options']['dsn'] || ceZ['a']['warn']('No\x20DSN\x20provided,\x20backend\x20will\x20not\x20do\x20anything.'), this['_transport'] = this['_setupTransport']();
      }
      return ce4['prototype']['_setupTransport'] = function() {
        return new ch5();
      }, ce4['prototype']['eventFromException'] = function() {
        throw new cfr('Backend\x20has\x20to\x20implement\x20`eventFromException`\x20method');
      }, ce4['prototype']['eventFromMessage'] = function() {
        throw new cfr('Backend\x20has\x20to\x20implement\x20`eventFromMessage`\x20method');
      }, ce4['prototype']['sendEvent'] = function(ce4) {
        this['_transport']['sendEvent'](ce4)['catch'](function(ce4) {
          ceZ['a']['error']('Error\x20while\x20sending\x20event:\x20' + ce4);
        });
      }, ce4['prototype']['getTransport'] = function() {
        return this['_transport'];
      }, ce4;
    }();

  function cio() {
    if (!('fetch' in Object(cf0['e'])())) return !0x1;
    try {
      return new Headers(), new Request(''), new Response(), !0x0;
    } catch (cip) {
      return !0x1;
    }
  }

  function ciq() {
    if (!cio()) return !0x1;
    try {
      return new Request('_', {
        'referrerPolicy': 'origin'
      }), !0x0;
    } catch (cir) {
      return !0x1;
    }
  }
  /**
   * TraceKit - Cross brower stack traces
   *
   * This was originally forked from github.com/occ/TraceKit, but has since been
   * largely modified and is now maintained as part of Sentry JS SDK.
   *
   * NOTE: Last merge with upstream repository
   * Jul 11,2018 - #f03357c
   *
   * https://github.com/csnover/TraceKit
   * @license MIT
   * @namespace TraceKit
   */
  /**
   * TraceKit - Cross brower stack traces
   *
   * This was originally forked from github.com/occ/TraceKit, but has since been
   * largely modified and is now maintained as part of Sentry JS SDK.
   *
   * NOTE: Last merge with upstream repository
   * Jul 11,2018 - #f03357c
   *
   * https://github.com/csnover/TraceKit
   * @license MIT
   * @namespace TraceKit
   */
  var cis = Object(cf0['e'])(),
    cit = {
      '_report': !0x1,
      '_collectWindowErrors': !0x1,
      '_computeStackTrace': !0x1,
      '_linesOfContext': !0x1
    },
    ciu = '?',
    civ = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;

  function ciw(ce4, ce5) {
    return Object['prototype']['hasOwnProperty']['call'](ce4, ce5);
  }

  function ciz() {
    return 'undefined' == typeof document || null == document['location'] ? '' : document['location']['href'];
  }
  cit['_report'] = function() {
    function ce4(ce4, ce5, ce6) {
      var ce7 = null;
      if (!ce5 || cit['_collectWindowErrors']) {
        for (var ce8 in ceb)
          if (ciw(ceb, ce8)) try {
            ceb[ce8](ce4, ce5, ce6);
          } catch (ciG) {
            ce7 = ciG;
          }
        if (ce7) throw ce7;
      }
    }

    function ce5(ce5, ce6, ce8, cea, ceb) {
      var cec = null;
      if (ceb = Object(cf1['d'])(ceb) ? ceb['error'] : ceb, ce5 = Object(cf1['d'])(ce5) ? ce5['message'] : ce5, cej) cit['_computeStackTrace']['_augmentStackTraceWithInitialElement'](cej, ce6, ce8, ce5), ce7();
      else if (ceb && Object(cf1['c'])(ceb))(cec = cit['_computeStackTrace'](ceb))['mechanism'] = 'onerror', ce4(cec, !0x0, ceb);
      else {
        var cek, cep = {
            'url': ce6,
            'line': ce8,
            'column': cea
          },
          cet = ce5;
        if ('[object\x20String]' === {} ['toString']['call'](ce5)) {
          var cey = ce5['match'](civ);
          cey && (cek = cey[0x1], cet = cey[0x2]);
        }
        cep['func'] = ciu, cep['context'] = null, ce4(cec = {
          'name': cek,
          'message': cet,
          'mode': 'onerror',
          'mechanism': 'onerror',
          'stack': [ced['a']({}, cep, {
            'url': cep['url'] || ciz()
          })]
        }, !0x0, null);
      }
      return !!ce9 && ce9['apply'](this, arguments);
    }

    function ce6(ce5) {
      var ce6 = ce5 && (ce5['detail'] ? ce5['detail']['reason'] : ce5['reason']) || ce5,
        ce7 = cit['_computeStackTrace'](ce6);
      ce7['mechanism'] = 'onunhandledrejection', ce7['message'] || (ce7['message'] = JSON['stringify'](Object(cfq['b'])(ce6))), ce4(ce7, !0x0, ce6);
    }

    function ce7() {
      var ce5 = cej,
        ce6 = cec;
      cej = null, cec = null, ce4(ce5, !0x1, ce6);
    }

    function ce8(ce4) {
      if (cej) {
        if (cec === ce4) return;
        ce7();
      }
      var ce5 = cit['_computeStackTrace'](ce4);
      throw cej = ce5, cec = ce4, setTimeout(function() {
        cec === ce4 && ce7();
      }, ce5['incomplete'] ? 0x7d0 : 0x0), ce4;
    }
    var ce9, cea, ceb = [],
      cec = null,
      cej = null;
    return ce8['_subscribe'] = function(ce4) {
      ceb['push'](ce4);
    }, ce8['_installGlobalHandler'] = function() {
      !0x0 === cea || (ce9 = cis['onerror'], cis['onerror'] = ce5, cea = !0x0);
    }, ce8['_installGlobalUnhandledRejectionHandler'] = function() {
      cis['onunhandledrejection'] = ce6;
    }, ce8;
  }(), cit['_computeStackTrace'] = function() {
    function ce4(ce4) {
      if (!ce4 || !ce4['stack']) return null;
      for (var ce5, ce6, ce7, ce8 = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, ce9 = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js))(?::(\d+))?(?::(\d+))?\s*$/i, cea = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i, ceb = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i, cec = /\((\S*)(?::(\d+))(?::(\d+))\)/, ced = ce4['stack']['split']('\x0a'), cej = [], cek = /^(.*) is undefined$/ ['exec'](ce4['message']), cep = 0x0, cet = ced['length']; cep < cet; ++cep) {
        if (ce6 = ce8['exec'](ced[cep])) {
          var cey = ce6[0x2] && 0x0 === ce6[0x2]['indexOf']('native');
          ce6[0x2] && 0x0 === ce6[0x2]['indexOf']('eval') && (ce5 = cec['exec'](ce6[0x2])) && (ce6[0x2] = ce5[0x1], ce6[0x3] = ce5[0x2], ce6[0x4] = ce5[0x3]), ce7 = {
            'url': ce6[0x2],
            'func': ce6[0x1] || ciu,
            'args': cey ? [ce6[0x2]] : [],
            'line': ce6[0x3] ? +ce6[0x3] : null,
            'column': ce6[0x4] ? +ce6[0x4] : null
          };
        } else if (ce6 = cea['exec'](ced[cep])) ce7 = {
          'url': ce6[0x2],
          'func': ce6[0x1] || ciu,
          'args': [],
          'line': +ce6[0x3],
          'column': ce6[0x4] ? +ce6[0x4] : null
        };
        else {
          if (!(ce6 = ce9['exec'](ced[cep]))) continue;
          ce6[0x3] && -0x1 < ce6[0x3]['indexOf']('\x20>\x20eval') && (ce5 = ceb['exec'](ce6[0x3])) ? (ce6[0x1] = ce6[0x1] || 'eval', ce6[0x3] = ce5[0x1], ce6[0x4] = ce5[0x2], ce6[0x5] = '') : 0x0 == cep && !ce6[0x5] && void 0x0 !== ce4['columnNumber'] && (cej[0x0]['column'] = ce4['columnNumber'] + 0x1), ce7 = {
            'url': ce6[0x3],
            'func': ce6[0x1] || ciu,
            'args': ce6[0x2] ? ce6[0x2]['split'](',') : [],
            'line': ce6[0x4] ? +ce6[0x4] : null,
            'column': ce6[0x5] ? +ce6[0x5] : null
          };
        }!ce7['func'] && ce7['line'] && (ce7['func'] = ciu), ce7['context'] = null, cej['push'](ce7);
      }
      return cej['length'] ? (cej[0x0] && cej[0x0]['line'] && !cej[0x0]['column'] && cek && (cej[0x0]['column'] = null), {
        'mode': 'stack',
        'name': ce4['name'],
        'message': ce4['message'],
        'stack': cej
      }) : null;
    }

    function ce5(ce4, ce5, ce6, ce7) {
      var ce8 = {
        'url': ce5,
        'line': ce6
      };
      if (ce8['url'] && ce8['line']) {
        if (ce4['incomplete'] = !0x1, ce8['func'] || (ce8['func'] = ciu), ce8['context'] || (ce8['context'] = null), / '([^']+)' / ['exec'](ce7) && (ce8['column'] = null), 0x0 < ce4['stack']['length'] && ce4['stack'][0x0]['url'] === ce8['url']) {
          if (ce4['stack'][0x0]['line'] === ce8['line']) return !0x1;
          if (!ce4['stack'][0x0]['line'] && ce4['stack'][0x0]['func'] === ce8['func']) return ce4['stack'][0x0]['line'] = ce8['line'], ce4['stack'][0x0]['context'] = ce8['context'], !0x1;
        }
        return ce4['stack']['unshift'](ce8), ce4['partial'] = !0x0, !0x0;
      }
      return ce4['incomplete'] = !0x0, !0x1;
    }

    function ce6(ce4, ce7) {
      for (var ce8, ce9, cea = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i, ceb = [], cec = {}, ced = !0x1, cej = ce6['caller']; cej && !ced; cej = cej['caller'])
        if (cej !== ckc && cej !== cit['_report']) {
          if (ce9 = {
              'url': null,
              'func': ciu,
              'args': [],
              'line': null,
              'column': null
            }, cej['name'] ? ce9['func'] = cej['name'] : (ce8 = cea['exec'](cej['toString']())) && (ce9['func'] = ce8[0x1]), void 0x0 === ce9['func']) try {
            ce9['func'] = ce8['input']['substring'](0x0, ce8['input']['indexOf']('{'));
          } catch (cjE) {}
          cec['' + cej] ? ced = !0x0 : cec['' + cej] = !0x0, ceb['push'](ce9);
        } ce7 && ceb['splice'](0x0, ce7);
      var cek = {
        'mode': 'callers',
        'name': ce4['name'],
        'message': ce4['message'],
        'stack': ceb
      };
      return ce5(cek, ce4['sourceURL'] || ce4['fileName'], ce4['line'] || ce4['lineNumber'], ce4['message'] || ce4['description']), cek;
    }

    function ce7(ce5, ce7) {
      var ce8 = null;
      ce7 = null == ce7 ? 0x0 : +ce7;
      try {
        if (ce8 = function(ce4) {
            var ce5 = ce4['stacktrace'];
            if (ce5) {
              for (var ce6, ce7, ce8 = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i, ce9 = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i, cea = ce5['split']('\x0a'), ceb = [], cec = 0x0; cec < cea['length']; cec += 0x2) ce7 = null, (ce6 = ce8['exec'](cea[cec])) ? ce7 = {
                'url': ce6[0x2],
                'line': +ce6[0x1],
                'column': null,
                'func': ce6[0x3],
                'args': []
              } : (ce6 = ce9['exec'](cea[cec])) && (ce7 = {
                'url': ce6[0x6],
                'line': +ce6[0x1],
                'column': +ce6[0x2],
                'func': ce6[0x3] || ce6[0x4],
                'args': ce6[0x5] ? ce6[0x5]['split'](',') : []
              }), ce7 && (!ce7['func'] && ce7['line'] && (ce7['func'] = ciu), ce7['line'] && (ce7['context'] = null), !ce7['context'] && (ce7['context'] = [cea[cec + 0x1]]), ceb['push'](ce7));
              return ceb['length'] ? {
                'mode': 'stacktrace',
                'name': ce4['name'],
                'message': ce4['message'],
                'stack': ceb
              } : null;
            }
          }(ce5)) return ce8;
      } catch (cjT) {}
      try {
        if (ce8 = ce4(ce5)) return ce8;
      } catch (cjU) {}
      try {
        if (ce8 = function(ce4) {
            var ce5 = ce4['message']['split']('\x0a');
            if (0x4 > ce5['length']) return null;
            var ce6, ce7 = /^\s*Line (\d+) of linked script ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i,
              ce8 = /^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i,
              ce9 = /^\s*Line (\d+) of function script\s*$/i,
              cea = [],
              ceb = cis && cis['document'] && cis['document']['getElementsByTagName']('script'),
              cec = [];
            for (var ced in ceb) ciw(ceb, ced) && !ceb[ced]['src'] && cec['push'](ceb[ced]);
            for (var cej, cek = 0x2; cek < ce5['length']; cek += 0x2) cej = null, (ce6 = ce7['exec'](ce5[cek])) ? cej = {
              'url': ce6[0x2],
              'func': ce6[0x3],
              'args': [],
              'line': +ce6[0x1],
              'column': null
            } : (ce6 = ce8['exec'](ce5[cek])) ? cej = {
              'url': ce6[0x3],
              'func': ce6[0x4],
              'args': [],
              'line': +ce6[0x1],
              'column': null
            } : (ce6 = ce9['exec'](ce5[cek])) && (cej = {
              'url': ciz()['replace'](/#.*$/, ''),
              'func': '',
              'args': [],
              'line': ce6[0x1],
              'column': null
            }), cej && (!cej['func'] && (cej['func'] = ciu), cej['context'] = [ce5[cek + 0x1]], cea['push'](cej));
            return cea['length'] ? {
              'mode': 'multiline',
              'name': ce4['name'],
              'message': ce5[0x0],
              'stack': cea
            } : null;
          }(ce5)) return ce8;
      } catch (ck7) {}
      try {
        if (ce8 = ce6(ce5, ce7 + 0x1)) return ce8;
      } catch (ck8) {}
      return {
        'original': ce5,
        'name': ce5['name'],
        'message': ce5['message'],
        'mode': 'failed'
      };
    }
    return ce7['_augmentStackTraceWithInitialElement'] = ce5, ce7['_computeStackTraceFromStackProp'] = ce4, ce7;
  }(), cit['_collectWindowErrors'] = !0x0, cit['_linesOfContext'] = 0xb;
  var ck9 = cit['_report']['_subscribe'],
    cka = cit['_report']['_installGlobalHandler'],
    ckb = cit['_report']['_installGlobalUnhandledRejectionHandler'],
    ckc = cit['_computeStackTrace'],
    ckd = 0x32;

  function cke(ce4) {
    var ce5 = ckk(ce4['stack']),
      ce6 = {
        'type': ce4['name'],
        'value': ce4['message']
      };
    return ce5 && ce5['length'] && (ce6['stacktrace'] = {
      'frames': ce5
    }), void 0x0 === ce6['type'] && '' === ce6['value'] && (ce6['value'] = 'Unrecoverable\x20error\x20caught'), ce6;
  }

  function cki(ce4) {
    return {
      'exception': {
        'values': [cke(ce4)]
      }
    };
  }

  function ckk(ce4) {
    if (!ce4 || !ce4['length']) return [];
    var ce5 = ce4,
      ce6 = ce5[0x0]['func'] || '',
      ce7 = ce5[ce5['length'] - 0x1]['func'] || '';
    return (ce6['includes']('captureMessage') || ce6['includes']('captureException')) && (ce5 = ce5['slice'](0x1)), ce7['includes']('sentryWrapped') && (ce5 = ce5['slice'](0x0, -0x1)), ce5['map'](function(ce4) {
      return {
        'colno': ce4['column'],
        'filename': ce4['url'] || ce5[0x0]['url'],
        'function': ce4['func'] || '?',
        'in_app': !0x0,
        'lineno': ce4['line']
      };
    })['slice'](0x0, ckd)['reverse']();
  }
  var ckq = function() {
      function ce4(ce4) {
        this['_limit'] = ce4, this['_buffer'] = [];
      }
      return ce4['prototype']['isReady'] = function() {
        return void 0x0 === this['_limit'] || this['length']() < this['_limit'];
      }, ce4['prototype']['add'] = function(ce4) {
        var ce5 = this;
        return this['isReady']() ? (-0x1 === this['_buffer']['indexOf'](ce4) && this['_buffer']['push'](ce4), ce4['then'](function() {
          return ce5['remove'](ce4);
        })['catch'](function() {
          return ce5['remove'](ce4)['catch'](function() {});
        }), ce4) : Promise['reject'](new cfr('Not\x20adding\x20Promise\x20due\x20to\x20buffer\x20limit\x20reached.'));
      }, ce4['prototype']['remove'] = function(ce4) {
        return this['_buffer']['splice'](this['_buffer']['indexOf'](ce4), 0x1)[0x0];
      }, ce4['prototype']['length'] = function() {
        return this['_buffer']['length'];
      }, ce4['prototype']['drain'] = function(ce4) {
        var ce5 = this;
        return new Promise(function(ce6) {
          var ce7 = setTimeout(function() {
            ce4 && 0x0 < ce4 && ce6(!0x1);
          }, ce4);
          Promise['all'](ce5['_buffer'])['then'](function() {
            clearTimeout(ce7), ce6(!0x0);
          })['catch'](function() {
            ce6(!0x0);
          });
        });
      }, ce4;
    }(),
    ckr = function() {
      function ce4(ce4) {
        this['options'] = ce4, this['_buffer'] = new ckq(0x1e), this['url'] = new cfu(this['options']['dsn'])['getStoreEndpointWithUrlEncodedAuth']();
      }
      return ce4['prototype']['sendEvent'] = function() {
        throw new cfr('Transport\x20Class\x20has\x20to\x20implement\x20`sendEvent`\x20method');
      }, ce4['prototype']['close'] = function(ce4) {
        return this['_buffer']['drain'](ce4);
      }, ce4;
    }(),
    cks = Object(cf0['e'])(),
    ckt = function(ce4) {
      function ce5() {
        return null !== ce4 && ce4['apply'](this, arguments) || this;
      }
      return ced['b'](ce5, ce4), ce5['prototype']['sendEvent'] = function(ce4) {
        var ce5 = {
          'body': JSON['stringify'](ce4),
          'method': 'POST',
          'referrerPolicy': ciq() ? 'origin' : ''
        };
        return this['_buffer']['add'](cks['fetch'](this['url'], ce5)['then'](function(ce4) {
          return {
            'status': cec['fromHttpCode'](ce4['status'])
          };
        }));
      }, ce5;
    }(ckr),
    cku = function(ce4) {
      function ce5() {
        return null !== ce4 && ce4['apply'](this, arguments) || this;
      }
      return ced['b'](ce5, ce4), ce5['prototype']['sendEvent'] = function(ce4) {
        var ce5 = this;
        return this['_buffer']['add'](new Promise(function(ce6, ce7) {
          var ce8 = new XMLHttpRequest();
          ce8['onreadystatechange'] = function() {
            0x4 !== ce8['readyState'] || (0xc8 === ce8['status'] && ce6({
              'status': cec['fromHttpCode'](ce8['status'])
            }), ce7(ce8));
          }, ce8['open']('POST', ce5['url']), ce8['send'](JSON['stringify'](ce4));
        }));
      }, ce5;
    }(ckr),
    ckv = function(ce4) {
      function ce5() {
        return null !== ce4 && ce4['apply'](this, arguments) || this;
      }
      return ced['b'](ce5, ce4), ce5['prototype']['_setupTransport'] = function() {
        if (!this['_options']['dsn']) return ce4['prototype']['_setupTransport']['call'](this);
        var ce5 = this['_options']['transportOptions'] ? this['_options']['transportOptions'] : {
          'dsn': this['_options']['dsn']
        };
        return this['_options']['transport'] ? new this['_options']['transport'](ce5) : cio() ? new ckt(ce5) : new cku(ce5);
      }, ce5['prototype']['eventFromException'] = function(ce4, ce5) {
        var ce6, ce7 = this;
        if (Object(cf1['d'])(ce4) && ce4['error']) return ce4 = ce4['error'], ce6 = cki(ckc(ce4)), cfv['a']['resolve'](this['_buildEvent'](ce6, ce5));
        if (Object(cf1['a'])(ce4) || Object(cf1['b'])(ce4)) {
          var ce8 = ce4,
            ce9 = ce8['name'] || (Object(cf1['a'])(ce8) ? 'DOMError' : 'DOMException'),
            ceb = ce8['message'] ? ce9 + ':\x20' + ce8['message'] : ce9;
          return this['eventFromMessage'](ceb, cea['Error'], ce5)['then'](function(ce4) {
            return Object(cf0['a'])(ce4, ceb), cfv['a']['resolve'](ce7['_buildEvent'](ce4, ce5));
          });
        }
        if (Object(cf1['c'])(ce4)) return ce6 = cki(ckc(ce4)), cfv['a']['resolve'](this['_buildEvent'](ce6, ce5));
        if (Object(cf1['e'])(ce4) && ce5 && ce5['syntheticException']) return ce6 = function(ce4, ce5) {
          var ce6 = Object['keys'](ce4)['sort'](),
            ce7 = {
              'extra': {
                '__serialized__': Object(cfq['c'])(ce4)
              },
              'message': 'Non-Error\x20exception\x20captured\x20with\x20keys:\x20' + cfg(ce6)
            };
          if (ce5) {
            var ce8 = ckk(ckc(ce5)['stack']);
            ce7['stacktrace'] = {
              'frames': ce8
            };
          }
          return ce7;
        }(ce4, ce5['syntheticException']), Object(cf0['a'])(ce6, 'Custom\x20Object', void 0x0, {
          'handled': !0x0,
          'synthetic': !0x0,
          'type': 'generic'
        }), ce6['level'] = cea['Error'], cfv['a']['resolve'](this['_buildEvent'](ce6, ce5));
        var cec = ce4;
        return this['eventFromMessage'](cec, void 0x0, ce5)['then'](function(ce4) {
          return Object(cf0['a'])(ce4, '' + cec, void 0x0, {
            'handled': !0x0,
            'synthetic': !0x0,
            'type': 'generic'
          }), ce4['level'] = cea['Error'], cfv['a']['resolve'](ce7['_buildEvent'](ce4, ce5));
        });
      }, ce5['prototype']['_buildEvent'] = function(ce4, ce5) {
        return ced['a']({}, ce4, {
          'event_id': ce5 && ce5['event_id']
        });
      }, ce5['prototype']['eventFromMessage'] = function(ce4, ce5, ce6) {
        void 0x0 === ce5 && (ce5 = cea['Info']);
        var ce7 = {
          'event_id': ce6 && ce6['event_id'],
          'level': ce5,
          'message': ce4
        };
        if (this['_options']['attachStacktrace'] && ce6 && ce6['syntheticException']) {
          var ce8 = ckk(ckc(ce6['syntheticException'])['stack']);
          ce7['stacktrace'] = {
            'frames': ce8
          };
        }
        return cfv['a']['resolve'](ce7);
      }, ce5;
    }(ch6),
    ckw = 'sentry.javascript.browser',
    ckx = function(ce4) {
      function ce5(ce5) {
        return void 0x0 === ce5 && (ce5 = {}), ce4['call'](this, ckv, ce5) || this;
      }
      return ced['b'](ce5, ce4), ce5['prototype']['_prepareEvent'] = function(ce5, ce6, ce7) {
        return ce5['platform'] = ce5['platform'] || 'javascript', ce5['sdk'] = ced['a']({}, ce5['sdk'], {
          'name': ckw,
          'packages': ced['d'](ce5['sdk'] && ce5['sdk']['packages'] || [], [{
            'name': 'npm:@sentry/browser',
            'version': '5.4.3'
          }]),
          'version': '5.4.3'
        }), ce4['prototype']['_prepareEvent']['call'](this, ce5, ce6, ce7);
      }, ce5['prototype']['showReportDialog'] = function(ce4) {
        void 0x0 === ce4 && (ce4 = {});
        var ce5 = Object(cf0['e'])()['document'];
        if (ce5) {
          if (!this['_isEnabled']()) return void ceZ['a']['error']('Trying\x20to\x20call\x20showReportDialog\x20with\x20Sentry\x20Client\x20is\x20disabled');
          var ce6 = ce4['dsn'] || this['getDsn']();
          if (!ce4['eventId']) return void ceZ['a']['error']('Missing\x20`eventId`\x20option\x20in\x20showReportDialog\x20call');
          if (!ce6) return void ceZ['a']['error']('Missing\x20`Dsn`\x20option\x20in\x20showReportDialog\x20call');
          var ce7 = ce5['createElement']('script');
          ce7['async'] = !0x0, ce7['src'] = new cfu(ce6)['getReportDialogEndpoint'](ce4), ce4['onLoad'] && (ce7['onload'] = ce4['onLoad']), (ce5['head'] || ce5['body'])['appendChild'](ce7);
        }
      }, ce5;
    }(ch4);
  var clv, clw, clx = 0x3e8,
    cly = 0x0;

  function clz(ce4, ce5, ce6) {
    if (void 0x0 === ce5 && (ce5 = {}), 'function' != typeof ce4) return ce4;
    try {
      if (ce4['__sentry__']) return ce4;
      if (ce4['__sentry_wrapped__']) return ce4['__sentry_wrapped__'];
    } catch (clD) {
      return ce4;
    }
    var ce7 = function() {
      ce6 && 'function' == typeof ce6 && ce6['apply'](this, arguments);
      var ce7 = Array['prototype']['slice']['call'](arguments);
      try {
        var ce8 = ce7['map'](function(ce4) {
          return clz(ce4, ce5);
        });
        return ce4['handleEvent'] ? ce4['handleEvent']['apply'](this, ce8) : ce4['apply'](this, ce8);
      } catch (clI) {
        throw cly += 0x1, setTimeout(function() {
          cly -= 0x1;
        }), ceT(function(ce6) {
          ce6['addEventProcessor'](function(clI) {
            var ce6 = ced['a']({}, clI);
            return ce5['mechanism'] && Object(cf0['a'])(ce6, void 0x0, void 0x0, ce5['mechanism']), ce6['extra'] = ced['a']({}, ce6['extra'], {
              'arguments': Object(cfq['b'])(ce7, 0x3)
            }), ce6;
          }), cep(clI);
        }), clI;
      }
    };
    try {
      for (var ce8 in ce4) Object['prototype']['hasOwnProperty']['call'](ce4, ce8) && (ce7[ce8] = ce4[ce8]);
    } catch (clN) {}
    ce4['prototype'] = ce4['prototype'] || {}, ce7['prototype'] = ce4['prototype'], Object['defineProperty'](ce4, '__sentry_wrapped__', {
      'enumerable': !0x1,
      'value': ce7
    }), Object['defineProperties'](ce7, {
      '__sentry__': {
        'enumerable': !0x1,
        'value': !0x0
      },
      '__sentry_original__': {
        'enumerable': !0x1,
        'value': ce4
      }
    });
    try {
      Object['getOwnPropertyDescriptor'](ce7, 'name')['configurable'] && Object['defineProperty'](ce7, 'name', {
        'get': function() {
          return ce4['name'];
        }
      });
    } catch (clO) {}
    return ce7;
  }
  var clP = 0x0;

  function clQ(ce4, ce5) {
    return void 0x0 === ce5 && (ce5 = !0x1),
      function(ce6) {
        if (clv = void 0x0, ce6 && clw !== ce6) {
          clw = ce6;
          var ce7 = function() {
            var ce5;
            try {
              ce5 = ce6['target'] ? cm2(ce6['target']) : cm2(ce6);
            } catch (clW) {
              ce5 = '<unknown>';
            }
            0x0 === ce5['length'] || Object(cej['b'])()['addBreadcrumb']({
              'category': 'ui.' + ce4,
              'message': ce5
            }, {
              'event': ce6,
              'name': ce4
            });
          };
          clP && clearTimeout(clP), ce5 ? clP = setTimeout(ce7) : ce7();
        }
      };
  }

  function clX() {
    return function(ce4) {
      var ce5;
      try {
        ce5 = ce4['target'];
      } catch (cm0) {
        return;
      }
      var ce6 = ce5 && ce5['tagName'];
      ce6 && ('INPUT' === ce6 || 'TEXTAREA' === ce6 || ce5['isContentEditable']) && (!clv && clQ('input')(ce4), clearTimeout(clv), clv = setTimeout(function() {
        clv = void 0x0;
      }, clx));
    };
  }

  function cm2(ce4) {
    for (var ce5, ce6 = ce4, ce7 = [], ce8 = 0x0, ce9 = 0x0, cea = '\x20>\x20' ['length']; ce6 && ce8++ < 0x5 && !('html' === (ce5 = cma(ce6)) || 0x1 < ce8 && ce9 + ce7['length'] * cea + ce5['length'] >= 0x50);) ce7['push'](ce5), ce9 += ce5['length'], ce6 = ce6['parentNode'];
    return ce7['reverse']()['join']('\x20>\x20');
  }

  function cma(ce4) {
    var ce5, ce6, ce7, ce8, ce9, cea = [];
    if (!ce4 || !ce4['tagName']) return '';
    if (cea['push'](ce4['tagName']['toLowerCase']()), ce4['id'] && cea['push']('#' + ce4['id']), (ce5 = ce4['className']) && Object(cf1['h'])(ce5))
      for (ce6 = ce5['split'](/\s+/), ce9 = 0x0; ce9 < ce6['length']; ce9++) cea['push']('.' + ce6[ce9]);
    var ceb = ['type', 'name', 'title', 'alt'];
    for (ce9 = 0x0; ce9 < ceb['length']; ce9++) ce7 = ceb[ce9], (ce8 = ce4['getAttribute'](ce7)) && cea['push']('[' + ce7 + '=\x22' + ce8 + '\x22]');
    return cea['join']('');
  }
  var cmj = function() {
    function ce4() {
      this['_ignoreOnError'] = 0x0, this['name'] = ce4['id'];
    }
    return ce4['prototype']['_wrapTimeFunction'] = function(ce4) {
      return function() {
        for (var ce5 = [], ce6 = 0x0; ce6 < arguments['length']; ce6++) ce5[ce6] = arguments[ce6];
        var ce7 = ce5[0x0];
        return ce5[0x0] = clz(ce7, {
          'mechanism': {
            'data': {
              'function': cmG(ce4)
            },
            'handled': !0x0,
            'type': 'instrument'
          }
        }), ce4['apply'](this, ce5);
      };
    }, ce4['prototype']['_wrapRAF'] = function(ce4) {
      return function(ce5) {
        return ce4(clz(ce5, {
          'mechanism': {
            'data': {
              'function': 'requestAnimationFrame',
              'handler': cmG(ce4)
            },
            'handled': !0x0,
            'type': 'instrument'
          }
        }));
      };
    }, ce4['prototype']['_wrapEventTarget'] = function(ce4) {
      var ce5 = Object(cf0['e'])(),
        ce6 = ce5[ce4] && ce5[ce4]['prototype'];
      ce6 && ce6['hasOwnProperty'] && ce6['hasOwnProperty']('addEventListener') && (Object(cfq['a'])(ce6, 'addEventListener', function(ce5) {
        return function(ce6, ce7, ce8) {
          try {
            ce7['handleEvent'] = clz(ce7['handleEvent']['bind'](ce7), {
              'mechanism': {
                'data': {
                  'function': 'handleEvent',
                  'handler': cmG(ce7),
                  'target': ce4
                },
                'handled': !0x0,
                'type': 'instrument'
              }
            });
          } catch (cmy) {}
          return ce5['call'](this, ce6, clz(ce7, {
            'mechanism': {
              'data': {
                'function': 'addEventListener',
                'handler': cmG(ce7),
                'target': ce4
              },
              'handled': !0x0,
              'type': 'instrument'
            }
          }), ce8);
        };
      }), Object(cfq['a'])(ce6, 'removeEventListener', function(ce4) {
        return function(ce5, ce6, ce7) {
          var ce8 = ce6;
          try {
            ce8 = ce8 && (ce8['__sentry_wrapped__'] || ce8);
          } catch (cmE) {}
          return ce4['call'](this, ce5, ce8, ce7);
        };
      }));
    }, ce4['prototype']['setupOnce'] = function() {
      this['_ignoreOnError'] = this['_ignoreOnError'];
      var ce4 = Object(cf0['e'])();
      Object(cfq['a'])(ce4, 'setTimeout', this['_wrapTimeFunction']['bind'](this)), Object(cfq['a'])(ce4, 'setInterval', this['_wrapTimeFunction']['bind'](this)), Object(cfq['a'])(ce4, 'requestAnimationFrame', this['_wrapRAF']['bind'](this)), ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload']['forEach'](this['_wrapEventTarget']['bind'](this));
    }, ce4['id'] = 'TryCatch', ce4;
  }();

  function cmG(ce4) {
    try {
      return ce4 && ce4['name'] || '<anonymous>';
    } catch (cmI) {
      return '<anonymous>';
    }
  }
  var cmJ, cmK = Object(cf0['e'])(),
    cmL = function() {
      function ce4(ce5) {
        this['name'] = ce4['id'], this['_options'] = ced['a']({
          'console': !0x0,
          'dom': !0x0,
          'fetch': !0x0,
          'history': !0x0,
          'sentry': !0x0,
          'xhr': !0x0
        }, ce5);
      }
      return ce4['prototype']['_instrumentConsole'] = function() {
        'console' in cmK && ['debug', 'info', 'warn', 'error', 'log', 'assert']['forEach'](function(ce5) {
          ce5 in cmK['console'] && Object(cfq['a'])(cmK['console'], ce5, function(ce6) {
            return function() {
              for (var ce7 = [], ce8 = 0x0; ce8 < arguments['length']; ce8++) ce7[ce8] = arguments[ce8];
              var ce9 = {
                'category': 'console',
                'data': {
                  'extra': {
                    'arguments': Object(cfq['b'])(ce7, 0x3)
                  },
                  'logger': 'console'
                },
                'level': cea['fromString'](ce5),
                'message': cf9(ce7, '\x20')
              };
              'assert' === ce5 && !0x1 === ce7[0x0] && (ce9['message'] = 'Assertion\x20failed:\x20' + (cf9(ce7['slice'](0x1), '\x20') || 'console.assert'), ce9['data']['extra']['arguments'] = Object(cfq['b'])(ce7['slice'](0x1), 0x3)), ce4['addBreadcrumb'](ce9, {
                'input': ce7,
                'level': ce5
              }), ce6 && Function['prototype']['apply']['call'](ce6, cmK['console'], ce7);
            };
          });
        });
      }, ce4['prototype']['_instrumentDOM'] = function() {
        'document' in cmK && (cmK['document']['addEventListener']('click', clQ('click'), !0x1), cmK['document']['addEventListener']('keypress', clX(), !0x1), ['EventTarget', 'Node']['forEach'](function(ce4) {
          var ce5 = cmK[ce4] && cmK[ce4]['prototype'];
          ce5 && ce5['hasOwnProperty'] && ce5['hasOwnProperty']('addEventListener') && (Object(cfq['a'])(ce5, 'addEventListener', function(ce4) {
            return function(ce5, ce6, ce7) {
              return ce6 && ce6['handleEvent'] ? ('click' === ce5 && Object(cfq['a'])(ce6, 'handleEvent', function(ce4) {
                return function(ce5) {
                  return clQ('click')(ce5), ce4['call'](this, ce5);
                };
              }), 'keypress' === ce5 && Object(cfq['a'])(ce6, 'handleEvent', clX())) : ('click' === ce5 && clQ('click', !0x0)(this), 'keypress' === ce5 && clX()(this)), ce4['call'](this, ce5, ce6, ce7);
            };
          }), Object(cfq['a'])(ce5, 'removeEventListener', function(ce4) {
            return function(ce5, ce6, ce7) {
              var ce8 = ce6;
              try {
                ce8 = ce8 && (ce8['__sentry_wrapped__'] || ce8);
              } catch (cn6) {}
              return ce4['call'](this, ce5, ce8, ce7);
            };
          }));
        }));
      }, ce4['prototype']['_instrumentFetch'] = function() {
        (function() {
          if (!cio()) return !0x1;
          var ce4 = function(ce4) {
              return -0x1 !== ce4['toString']()['indexOf']('native');
            },
            ce5 = Object(cf0['e'])(),
            ce6 = null,
            ce7 = ce5['document'];
          if (ce7) {
            var ce8 = ce7['createElement']('iframe');
            ce8['hidden'] = !0x0;
            try {
              ce7['head']['appendChild'](ce8), ce8['contentWindow'] && ce8['contentWindow']['fetch'] && (ce6 = ce4(ce8['contentWindow']['fetch'])), ce7['head']['removeChild'](ce8);
            } catch (cnd) {
              ceZ['a']['warn']('Could\x20not\x20create\x20sandbox\x20iframe\x20for\x20pure\x20fetch\x20check,\x20bailing\x20to\x20window.fetch:\x20', cnd);
            }
          }
          return null === ce6 && (ce6 = ce4(ce5['fetch'])), ce6;
        }() && Object(cfq['a'])(cmK, 'fetch', function(ce5) {
          return function() {
            for (var ce6 = [], ce7 = 0x0; ce7 < arguments['length']; ce7++) ce6[ce7] = arguments[ce7];
            var ce8, ce9 = ce6[0x0],
              ceb = 'GET';
            'string' == typeof ce9 ? ce8 = ce9 : 'Request' in cmK && ce9 instanceof Request ? (ce8 = ce9['url'], ce9['method'] && (ceb = ce9['method'])) : ce8 = ce9 + '', ce6[0x1] && ce6[0x1]['method'] && (ceb = ce6[0x1]['method']);
            var cec = Object(cej['b'])()['getClient'](),
              ced = cec && cec['getDsn']();
            if (ced) {
              var cek = new cfu(ced)['getStoreEndpoint']();
              if (cek && ce8['includes'](cek)) return 'POST' === ceb && ce6[0x1] && ce6[0x1]['body'] && co5(ce6[0x1]['body']), ce5['apply'](cmK, ce6);
            }
            var cep = {
              'method': ceb,
              'url': ce8
            };
            return ce5['apply'](cmK, ce6)['then'](function(ce5) {
              return cep['status_code'] = ce5['status'], ce4['addBreadcrumb']({
                'category': 'fetch',
                'data': cep,
                'type': 'http'
              }, {
                'input': ce6,
                'response': ce5
              }), ce5;
            })['catch'](function(ce5) {
              throw ce4['addBreadcrumb']({
                'category': 'fetch',
                'data': cep,
                'level': cea['Error'],
                'type': 'http'
              }, {
                'error': ce5,
                'input': ce6
              }), ce5;
            });
          };
        }));
      }, ce4['prototype']['_instrumentHistory'] = function() {
        function ce5(ce4) {
          return function() {
            for (var ce5 = [], ce6 = 0x0; ce6 < arguments['length']; ce6++) ce5[ce6] = arguments[ce6];
            var ce8 = 0x2 < ce5['length'] ? ce5[0x2] : void 0x0;
            return ce8 && ce7(cmJ, ce8 + ''), ce4['apply'](this, ce5);
          };
        }
        var ce6 = this;
        if (function() {
            var ce4 = Object(cf0['e'])(),
              ce5 = ce4['chrome'],
              ce6 = ce5 && ce5['app'] && ce5['app']['runtime'],
              ce7 = 'history' in ce4 && !!ce4['history']['pushState'] && !!ce4['history']['replaceState'];
            return !ce6 && ce7;
          }()) {
          var ce7 = function(ce5, ce6) {
              var ce7 = Object(cf0['f'])(cmK['location']['href']),
                ce8 = Object(cf0['f'])(ce6),
                ce9 = Object(cf0['f'])(ce5);
              ce9['path'] || (ce9 = ce7), cmJ = ce6, ce7['protocol'] === ce8['protocol'] && ce7['host'] === ce8['host'] && (ce6 = ce8['relative']), ce7['protocol'] === ce9['protocol'] && ce7['host'] === ce9['host'] && (ce5 = ce9['relative']), ce4['addBreadcrumb']({
                'category': 'navigation',
                'data': {
                  'from': ce5,
                  'to': ce6
                }
              });
            },
            ce8 = cmK['onpopstate'];
          cmK['onpopstate'] = function() {
            for (var ce4 = [], ce5 = 0x0; ce5 < arguments['length']; ce5++) ce4[ce5] = arguments[ce5];
            var ce9 = cmK['location']['href'];
            if (ce7(cmJ, ce9), ce8) return ce8['apply'](ce6, ce4);
          }, Object(cfq['a'])(cmK['history'], 'pushState', ce5), Object(cfq['a'])(cmK['history'], 'replaceState', ce5);
        }
      }, ce4['prototype']['_instrumentXHR'] = function() {
        if ('XMLHttpRequest' in cmK) {
          var ce5 = XMLHttpRequest['prototype'];
          Object(cfq['a'])(ce5, 'open', function(ce4) {
            return function() {
              for (var ce5 = [], ce6 = 0x0; ce6 < arguments['length']; ce6++) ce5[ce6] = arguments[ce6];
              var ce7 = ce5[0x1];
              this['__sentry_xhr__'] = {
                'method': ce5[0x0],
                'url': ce5[0x1]
              };
              var ce8 = Object(cej['b'])()['getClient'](),
                ce9 = ce8 && ce8['getDsn']();
              if (ce9) {
                var cea = new cfu(ce9)['getStoreEndpoint']();
                Object(cf1['h'])(ce7) && cea && ce7['includes'](cea) && (this['__sentry_own_request__'] = !0x0);
              }
              return ce4['apply'](this, ce5);
            };
          }), Object(cfq['a'])(ce5, 'send', function(ce5) {
            return function() {
              function ce6() {
                if (0x4 === ce9['readyState']) {
                  if (ce9['__sentry_own_request__']) return;
                  try {
                    ce9['__sentry_xhr__'] && (ce9['__sentry_xhr__']['status_code'] = ce9['status']);
                  } catch (cnU) {}
                  ce4['addBreadcrumb']({
                    'category': 'xhr',
                    'data': ce9['__sentry_xhr__'],
                    'type': 'http'
                  }, {
                    'xhr': ce9
                  });
                }
              }
              for (var ce7 = [], ce8 = 0x0; ce8 < arguments['length']; ce8++) ce7[ce8] = arguments[ce8];
              var ce9 = this;
              return ce9['__sentry_own_request__'] && co5(ce7[0x0]), ['onload', 'onerror', 'onprogress']['forEach'](function(ce4) {
                ! function(ce4, ce5) {
                  ce4 in ce5 && 'function' == typeof ce5[ce4] && Object(cfq['a'])(ce5, ce4, function(ce5) {
                    return clz(ce5, {
                      'mechanism': {
                        'data': {
                          'function': ce4,
                          'handler': ce5 && ce5['name'] || '<anonymous>'
                        },
                        'handled': !0x0,
                        'type': 'instrument'
                      }
                    });
                  });
                }(ce4, ce9);
              }), 'onreadystatechange' in ce9 && 'function' == typeof ce9['onreadystatechange'] ? Object(cfq['a'])(ce9, 'onreadystatechange', function(ce4) {
                return clz(ce4, {
                  'mechanism': {
                    'data': {
                      'function': 'onreadystatechange',
                      'handler': ce4 && ce4['name'] || '<anonymous>'
                    },
                    'handled': !0x0,
                    'type': 'instrument'
                  }
                }, ce6);
              }) : ce9['onreadystatechange'] = ce6, ce5['apply'](this, ce7);
            };
          });
        }
      }, ce4['addBreadcrumb'] = function(ce5, ce6) {
        Object(cej['b'])()['getIntegration'](ce4) && Object(cej['b'])()['addBreadcrumb'](ce5, ce6);
      }, ce4['prototype']['setupOnce'] = function() {
        this['_options']['console'] && this['_instrumentConsole'](), this['_options']['dom'] && this['_instrumentDOM'](), this['_options']['xhr'] && this['_instrumentXHR'](), this['_options']['fetch'] && this['_instrumentFetch'](), this['_options']['history'] && this['_instrumentHistory']();
      }, ce4['id'] = 'Breadcrumbs', ce4;
    }();

  function co5(ce4) {
    try {
      var ce5 = JSON['parse'](ce4);
      cmL['addBreadcrumb']({
        'category': 'sentry',
        'event_id': ce5['event_id'],
        'level': ce5['level'] || cea['fromString']('error'),
        'message': Object(cf0['d'])(ce5)
      }, {
        'event': ce5
      });
    } catch (co8) {
      ceZ['a']['error']('Error\x20while\x20adding\x20sentry\x20type\x20breadcrumb');
    }
  }
  var co9 = function() {
      function ce4(ce5) {
        this['name'] = ce4['id'], this['_options'] = ced['a']({
          'onerror': !0x0,
          'onunhandledrejection': !0x0
        }, ce5);
      }
      return ce4['prototype']['setupOnce'] = function() {
        Error['stackTraceLimit'] = 0x32, ck9(function(ce5, ce6, ce7) {
          if (!(0x0 < cly)) {
            var ce8 = Object(cej['b'])()['getIntegration'](ce4);
            ce8 && Object(cej['b'])()['captureEvent'](ce8['_eventFromGlobalHandler'](ce5), {
              'data': {
                'stack': ce5
              },
              'originalException': ce7
            });
          }
        }), this['_options']['onerror'] && (ceZ['a']['log']('Global\x20Handler\x20attached:\x20onerror'), cka()), this['_options']['onunhandledrejection'] && (ceZ['a']['log']('Global\x20Handler\x20attached:\x20onunhandledrejection'), ckb());
      }, ce4['prototype']['_eventFromGlobalHandler'] = function(ce4) {
        if (!Object(cf1['h'])(ce4['message']) && 'onunhandledrejection' !== ce4['mechanism']) {
          var ce5 = ce4['message'];
          ce4['message'] = ce5['error'] && Object(cf1['h'])(ce5['error']['message']) ? ce5['error']['message'] : 'No\x20error\x20message';
        }
        var ce6 = cki(ce4),
          ce7 = {
            'mode': ce4['mode']
          };
        ce4['message'] && (ce7['message'] = ce4['message']), ce4['name'] && (ce7['name'] = ce4['name']);
        var ce8 = Object(cej['b'])()['getClient'](),
          ce9 = ce8 && ce8['getOptions']()['maxValueLength'] || 0xfa,
          cea = ce4['original'] ? cf6(JSON['stringify'](Object(cfq['b'])(ce4['original'])), ce9) : '',
          ceb = 'onunhandledrejection' === ce4['mechanism'] ? 'UnhandledRejection' : 'Error';
        return Object(cf0['a'])(ce6, cea, ceb, {
          'data': ce7,
          'handled': !0x1,
          'type': ce4['mechanism']
        }), ce6;
      }, ce4['id'] = 'GlobalHandlers', ce4;
    }(),
    coa = 'cause',
    cob = 0x5,
    coc = function() {
      function ce4(ce5) {
        void 0x0 === ce5 && (ce5 = {}), this['name'] = ce4['id'], this['_key'] = ce5['key'] || coa, this['_limit'] = ce5['limit'] || cob;
      }
      return ce4['prototype']['setupOnce'] = function() {
        Object(ceW['b'])(function(ce5, ce6) {
          var ce7 = Object(cej['b'])()['getIntegration'](ce4);
          return ce7 ? ce7['_handler'](ce5, ce6) : ce5;
        });
      }, ce4['prototype']['_handler'] = function(ce4, ce5) {
        if (!(ce4['exception'] && ce4['exception']['values'] && ce5 && ce5['originalException'] instanceof Error)) return ce4;
        var ce6 = this['_walkErrorTree'](ce5['originalException'], this['_key']);
        return ce4['exception']['values'] = ced['d'](ce6, ce4['exception']['values']), ce4;
      }, ce4['prototype']['_walkErrorTree'] = function(ce4, ce5, ce6) {
        if (void 0x0 === ce6 && (ce6 = []), !(ce4[ce5] instanceof Error) || ce6['length'] + 0x1 >= this['_limit']) return ce6;
        var ce7 = cke(ckc(ce4[ce5]));
        return this['_walkErrorTree'](ce4[ce5], ce5, ced['d']([ce7], ce6));
      }, ce4['id'] = 'LinkedErrors', ce4;
    }(),
    cod = Object(cf0['e'])(),
    coe = function() {
      function ce4() {
        this['name'] = ce4['id'];
      }
      return ce4['prototype']['setupOnce'] = function() {
        Object(ceW['b'])(function(ce5) {
          if (Object(cej['b'])()['getIntegration'](ce4)) {
            if (!cod['navigator'] || !cod['location']) return ce5;
            var ce6 = ce5['request'] || {};
            return ce6['url'] = ce6['url'] || cod['location']['href'], ce6['headers'] = ce6['headers'] || {}, ce6['headers']['User-Agent'] = cod['navigator']['userAgent'], ced['a']({}, ce5, {
              'request': ce6
            });
          }
          return ce5;
        });
      }, ce4['id'] = 'UserAgent', ce4;
    }(),
    cof = [new ce7['InboundFilters'](), new ce7['FunctionToString'](), new cmj(), new cmL(), new co9(), new coc(), new coe()];

  function coJ(ce4) {
    void 0x0 === ce4 && (ce4 = {}), void 0x0 === ce4['defaultIntegrations'] && (ce4['defaultIntegrations'] = cof),
      function(ce4, ce5) {
        !0x0 === ce5['debug'] && ceZ['a']['enable'](), Object(cej['b'])()['bindClient'](new ce4(ce5));
      }(ckx, ce4);
  }

  function coN(ce4) {
    void 0x0 === ce4 && (ce4 = {}), ce4['eventId'] || (ce4['eventId'] = Object(cej['b'])()['lastEventId']());
    var ce5 = Object(cej['b'])()['getClient']();
    ce5 && ce5['showReportDialog'](ce4);
  }

  function coQ() {
    return Object(cej['b'])()['lastEventId']();
  }

  function coR() {}

  function coS(ce4) {
    ce4();
  }

  function coU(ce4) {
    var ce5 = Object(cej['b'])()['getClient']();
    return ce5 ? ce5['flush'](ce4) : Promise['reject'](!0x1);
  }

  function coX(ce4) {
    var ce5 = Object(cej['b'])()['getClient']();
    return ce5 ? ce5['close'](ce4) : Promise['reject'](!0x1);
  }

  function cp0(ce4) {
    clz(ce4)();
  }
  ce6['d'](ce5, 'Integrations', function() {
    return cp4;
  }), ce6['d'](ce5, 'Severity', function() {
    return cea;
  }), ce6['d'](ce5, 'Status', function() {
    return cec;
  }), ce6['d'](ce5, 'addGlobalEventProcessor', function() {
    return ceW['b'];
  }), ce6['d'](ce5, 'addBreadcrumb', function() {
    return ceC;
  }), ce6['d'](ce5, 'captureException', function() {
    return cep;
  }), ce6['d'](ce5, 'captureEvent', function() {
    return cey;
  }), ce6['d'](ce5, 'captureMessage', function() {
    return cet;
  }), ce6['d'](ce5, 'configureScope', function() {
    return ceA;
  }), ce6['d'](ce5, 'getHubFromCarrier', function() {
    return cej['c'];
  }), ce6['d'](ce5, 'getCurrentHub', function() {
    return cej['b'];
  }), ce6['d'](ce5, 'Hub', function() {
    return cej['a'];
  }), ce6['d'](ce5, 'Scope', function() {
    return ceW['a'];
  }), ce6['d'](ce5, 'setContext', function() {
    return ceE;
  }), ce6['d'](ce5, 'setExtra', function() {
    return ceL;
  }), ce6['d'](ce5, 'setExtras', function() {
    return ceH;
  }), ce6['d'](ce5, 'setTag', function() {
    return ceO;
  }), ce6['d'](ce5, 'setTags', function() {
    return ceJ;
  }), ce6['d'](ce5, 'setUser', function() {
    return ceR;
  }), ce6['d'](ce5, 'Span', function() {
    return ceX['a'];
  }), ce6['d'](ce5, 'withScope', function() {
    return ceT;
  }), ce6['d'](ce5, 'BrowserClient', function() {
    return ckx;
  }), ce6['d'](ce5, 'defaultIntegrations', function() {
    return cof;
  }), ce6['d'](ce5, 'forceLoad', function() {
    return coR;
  }), ce6['d'](ce5, 'init', function() {
    return coJ;
  }), ce6['d'](ce5, 'lastEventId', function() {
    return coQ;
  }), ce6['d'](ce5, 'onLoad', function() {
    return coS;
  }), ce6['d'](ce5, 'showReportDialog', function() {
    return coN;
  }), ce6['d'](ce5, 'flush', function() {
    return coU;
  }), ce6['d'](ce5, 'close', function() {
    return coX;
  }), ce6['d'](ce5, 'wrap', function() {
    return cp0;
  }), ce6['d'](ce5, 'SDK_NAME', function() {
    return ckw;
  }), ce6['d'](ce5, 'SDK_VERSION', function() {
    return '5.4.3';
  }), ce6['d'](ce5, 'Transports', function() {
    return ce9;
  });
  var cp2 = {},
    cp3 = Object(cf0['e'])();
  cp3['Sentry'] && cp3['Sentry']['Integrations'] && (cp2 = cp3['Sentry']['Integrations']);
  var cp4 = ced['a']({}, cp2, ce7, ce8);
}, function(cp5, cp6, cp7) {
  'use strict';
  cp7['d'](cp6, 'a', function() {
    return cpb;
  });
  var cp8, cp9, cpa = cp7(0x5);
  (cp9 = cp8 || (cp8 = {}))['PENDING'] = 'PENDING', cp9['RESOLVED'] = 'RESOLVED', cp9['REJECTED'] = 'REJECTED';
  var cpb = function() {
    function cp5(cp5) {
      var cp6 = this;
      this['_state'] = cp8['PENDING'], this['_handlers'] = [], this['_resolve'] = function(cp5) {
        cp6['_setResult'](cp5, cp8['RESOLVED']);
      }, this['_reject'] = function(cp5) {
        cp6['_setResult'](cp5, cp8['REJECTED']);
      }, this['_setResult'] = function(cp5, cp7) {
        return cp6['_state'] === cp8['PENDING'] ? Object(cpa['j'])(cp5) ? void cp5['then'](cp6['_resolve'], cp6['_reject']) : (cp6['_value'] = cp5, cp6['_state'] = cp7, void cp6['_executeHandlers']()) : void 0x0;
      }, this['_executeHandlers'] = function() {
        if (cp6['_state'] !== cp8['PENDING']) return cp6['_state'] === cp8['REJECTED'] ? cp6['_handlers']['forEach'](function(cp5) {
          return cp5['onFail'] && cp5['onFail'](cp6['_value']);
        }) : cp6['_handlers']['forEach'](function(cp5) {
          return cp5['onSuccess'] && cp5['onSuccess'](cp6['_value']);
        }), void(cp6['_handlers'] = []);
      }, this['_attachHandler'] = function(cp5) {
        cp6['_handlers'] = cp6['_handlers']['concat'](cp5), cp6['_executeHandlers']();
      };
      try {
        cp5(this['_resolve'], this['_reject']);
      } catch (cpm) {
        this['_reject'](cpm);
      }
    }
    return cp5['prototype']['then'] = function(cp6, cp7) {
      var cp8 = this;
      return new cp5(function(cp5, cp9) {
        cp8['_attachHandler']({
          'onFail': function(cp6) {
            if (cp7) try {
              return void cp5(cp7(cp6));
            } catch (cpt) {
              return void cp9(cpt);
            } else cp9(cp6);
          },
          'onSuccess': function(cp7) {
            if (cp6) try {
              return void cp5(cp6(cp7));
            } catch (cpv) {
              return void cp9(cpv);
            } else cp5(cp7);
          }
        });
      });
    }, cp5['prototype']['catch'] = function(cp5) {
      return this['then'](function(cp5) {
        return cp5;
      }, cp5);
    }, cp5['prototype']['toString'] = function() {
      return '[object\x20SyncPromise]';
    }, cp5['resolve'] = function(cp6) {
      return new cp5(function(cp5) {
        cp5(cp6);
      });
    }, cp5['reject'] = function(cp6) {
      return new cp5(function(cp5, cp7) {
        cp7(cp6);
      });
    }, cp5;
  }();
}, function(cpD, cpE) {
  cpD['exports'] = function(cpD, cpE) {
    var cpH;
    this['sounds'] = [], this['listener'] = {}, this['rate'] = 0x1, this['setVolume'] = function(cpD) {
      Howler['volume'](cpD);
    }, this['getSound'] = function(cpD, cpE) {
      var cpL = cpD + (cpE || '') + (window['activeHacker'] ? 'hckd' : '');
      (cpH = this['sounds'][cpL]) || (cpH = new Howl({
        'src': '.././sound/' + (window['activeHacker'] ? 'fart_0' : cpD) + '.mp3'
      }), this['sounds'][cpL] = cpH);
    }, this['play'] = function(cpD, cpE, cpO, cpP) {
      if (this['getSound'](cpD), this['rate'] && (!cpO || !cpH['isPlaying'])) {
        cpH['isPlaying'] = !0x0;
        var cpQ = cpH['play']();
        cpH['volume'](cpE || 0x1, cpQ), cpH['loop'](cpO, cpQ), cpH['rate']((cpP || 0x1) * this['rate'], cpQ);
      }
    }, this['stop'] = function(cpD) {
      this['getSound'](cpD), cpH && (cpH['isPlaying'] = !0x1, cpH['stop']());
    }, this['play3Dv'] = function(cpS, cpT, cpU, cpV, cpW, cpX, cpY, cpZ) {
      var cq0 = 0x1 - cpD['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](cpT, cpU, cpV, cpZ['x'], cpZ['y'], cpZ['z']) / cpW;
      if (0.1 < cq0) {
        this['getSound'](cpS, '3dv');
        var cq1 = cpH['play']();
        cpX = (cpX || 0x1) * cq0 * cpE['otherSoundMlt'], cpH['volume'](cpX, cq1), cpH['rate'](cpY || 0x1, cq1);
      }
    }, this['play3D'] = function(cpD, cq3, cq4, cq5, cq6, cq7, cq8, cq9) {
      this['getSound'](cpD, '3d');
      var cqa = cpH['play']();
      0.05 < (cq6 = (cq6 || 0x1) * cpE['otherSoundMlt']) && (cpH['volume'](cq6, cqa), cpH['rate'](cq7 || 0x1, cqa), cpH['pos'](cq3, cq4, cq5, cqa), cpH['pannerAttr']({
        'refDistance': cq8 || 0x19,
        'rolloffFactor': cq9 || 0x1
      }, cqa));
    };
  };
}, function(cqb, cqc, cqd) {
  var cqe = cqd(0x4),
    cqf = cqd(0x8),
    cqg = cqd(0x18),
    cqh = new cqe['Vector3'](),
    cqi = cqg['generateCube'](null, 0x1, 0x1, 0x1, {}),
    cqj = function(cqb) {
      this['mesh'] = new cqe['Mesh'](cqi), this['init'] = function(cqc) {
        this['dst'] = cqc['dst'], this['spd'] = cqc['spd'], this['xS'] = cqc['xS'], this['zS'] = cqc['zS'], this['yS'] = cqc['yS'], this['scale'] = 0.45, this['len'] = 0x0, this['mesh']['material'] = cqb['getMat']('default', {
          'mat': cqe['MeshBasicMaterial'],
          'color': 0xededed,
          'transparent': !0x0,
          'opacity': 0.21
        });
        var cqd = cqc['mesh']['position']['x'],
          cqf = cqc['mesh']['position']['y'],
          cqg = cqc['mesh']['position']['z'];
        cqb['moveMesh'](this['mesh'], cqd, cqf, cqg), this['mesh']['lookAt'](cqd + this['xS'], cqf + this['yS'], cqg + this['zS']), this['mesh']['rotateX'](Math['PI'] / 0x2), cqb['scaleMesh'](this['mesh'], this['scale'], this['len'], this['scale']), this['mesh']['visible'] = !0x0;
      }, this['update'] = function(cqc) {
        this['mesh']['visible'] && (this['len'] < this['dst'] && (this['len'] += this['spd'] * cqc, this['len'] >= this['dst'] && (this['len'] = this['dst'])), this['scale'] -= 0.00036 * cqc, cqb['scaleMesh'](this['mesh'], this['scale'], this['len'], this['scale']), 0x0 >= this['scale'] && (this['scale'] = 0x0, this['mesh']['visible'] = !0x1));
      };
    };

  function cqq() {
    cqe['Object3D']['call'](this), this['largeSpawnCount'] = 0x8, this['smallSpawnCount'] = 0xf, this['emissiveness'] = 0.55, this['velocityDamping'] = 0x3, this['lifeSpeedMin'] = 2.2, this['lifeSpeedRange'] = 0x3;
    var cqb = new cqe['Geometry']({
        'dynamic': !0x0
      }),
      cqc = new cqe['Color'](0xbbbbbb);
    this['mesh'] = new cqe['Mesh'](cqb, new cqe['StrippedLambertMaterial']({
      'color': cqc,
      'emissive': cqc['multiplyScalar'](this['emissiveness']),
      'smoothShading': !0x0
    })), this['mesh']['castShadow'] = !0x0, this['mesh']['receiveShadow'] = !0x0, this['add'](this['mesh']), this['cubeTemplate'] = new cqe['BoxGeometry'](0x1, 0x1, 0x1);
    for (var cqd = 0x0; cqd < this['cubeTemplate']['faces']['length']; cqd++) this['cubeTemplate']['faces'][cqd]['materialIndex'] = 0x0;
    this['cubeTemplate']['faceVertexUvs'] = [
      []
    ], this['entities'] = [];
  }
  cqq['staticMatrix'] = new cqe['Matrix4'](), cqq['prototype'] = Object['create'](cqe['Object3D']['prototype']), Object['defineProperty'](cqq, 'finished', function() {
    return 0x0 === this['entities']['length'];
  }), cqq['prototype']['explodeAt'] = function(cqb, cqc, cqd, cqe) {
    this['sizeMin'] = 0.35 * cqe, this['sizeRange'] = 1.8 * cqe, this['velocityMin'] = 0x1e * cqe, this['velocityRange'] = 0x11 * cqe, cqh['set'](cqb, cqc, cqd);
    for (var cqf = 0x0; cqf < this['largeSpawnCount']; cqf++) this['spawnEntity'](0.1 * Math['random']() + 0.9, cqh, !0x1);
    for (cqf = 0x0; cqf < this['smallSpawnCount']; cqf++) this['spawnEntity'](0.9 * Math['random'](), cqh, !0x1);
  }, cqq['prototype']['spawnEntity'] = function(cqb, cqc) {
    for (var cqd = Math['pow'](cqb, 2.5), cqe = cqd * this['sizeRange'] + this['sizeMin'], cqf = (0x1 - cqd) * this['velocityRange'] + this['velocityMin'], cqg = this['_randomVector']()['normalize']()['multiplyScalar'](cqf), cqh = cqd * this['lifeSpeedRange'] + this['lifeSpeedMin'], cqi = 0x0;;) {
      for (var cqj = !0x0, cqI = 0x0; cqI < this['entities']['length']; cqI++)
        if (this['entities'][cqI]['index'] === cqi) {
          cqj = !0x1;
          break;
        } if (cqj) break;
      cqi++;
    }
    0x8 * cqi > this['mesh']['geometry']['vertices']['length'] - 0x1 && this['mesh']['geometry']['merge'](this['cubeTemplate'], cqq['emptyMatrix']), this['entities']['push']({
      'index': cqi,
      'rank': cqd,
      'rankSeed': cqb,
      'life': 0x0,
      'lifeSpeed': cqh,
      'size': cqe,
      'position': cqc['clone'](),
      'velocity': cqg
    });
  }, cqq['prototype']['destroyEntity'] = function(cqb) {
    this['entities']['splice'](this['entities']['indexOf'](cqb), 0x1);
    for (var cqc = 0x8 * cqb['index']; cqc < 0x8 * (cqb['index'] + 0x1); cqc++) this['mesh']['geometry']['vertices'][cqc]['set'](0x0, 0x0, 0x0);
    this['mesh']['geometry']['verticesNeedUpdate'] = !0x0, this['mesh']['geometry']['elementsNeedUpdate'] = !0x0, this['_cleanGeometry']();
  }, cqq['prototype']['update'] = function(cqb) {
    cqb /= 0x3e8;
    for (var cqc, cqd = 0x0; cqd < this['entities']['length']; cqd++) {
      (cqc = this['entities'][cqd])['life'] += cqb * cqc['lifeSpeed'], cqc['velocity']['multiplyScalar'](0x1 - this['velocityDamping'] * cqb), cqc['position']['add'](cqc['velocity']['clone']()['multiplyScalar'](cqb));
      var cqe = 0x2 - Math['pow'](cqc['life'] / Math['sqrt'](0x2), 0x2);
      cqe *= cqc['size'];
      for (var cqf = 0x8 * cqc['index']; cqf < 0x8 * (cqc['index'] + 0x1); cqf++) {
        var cqg = this['mesh']['geometry']['vertices'][cqf],
          cqh = this['cubeTemplate']['vertices'][cqf % 0x8];
        cqg['set'](cqc['position']['x'], cqc['position']['y'], cqc['position']['z'])['addScaledVector'](cqh, cqe);
      }
      0x0 >= cqe && this['destroyEntity'](cqc);
    }
    this['mesh']['geometry']['verticesNeedUpdate'] = !0x0, this['mesh']['geometry']['elementsNeedUpdate'] = !0x0, this['mesh']['geometry']['computeBoundingSphere']();
  }, cqq['prototype']['_cleanGeometry'] = function() {
    for (var cqb, cqc = this['mesh']['geometry']['vertices'], cqd = this['mesh']['geometry']['faces'], cqe = -0x1, cqf = 0x0; cqf < this['entities']['length']; cqf++)(cqb = this['entities'][cqf])['index'] > cqe && (cqe = cqb['index']);
    var cqg = cqe + 0x1;
    cqc['splice'](0x8 * cqg, cqc['length'] - 0x8 * cqg), cqd['splice'](0xc * cqg, cqd['length'] - 0xc * cqg);
  }, cqq['prototype']['_randomVector'] = function() {
    return new cqe['Vector3'](Math['random']() - 0.5, Math['random']() - 0.5, Math['random']() - 0.5);
  };
  var cqY = [{
      'mat': cqe['MeshBasicMaterial'],
      'snd': {
        'rng': 0x1a,
        'src': ['whizz_0', 'whizz_1'],
        'vol': 0.12
      },
      'spd': 1.7,
      'scale': 0x1,
      'length': 0xd,
      'color': 0xffffdb
    }, {
      'spd': [0.03, 0.031],
      'rand': !0x0,
      'carryV': !0x0,
      'grav': 0.0003,
      'spn': [0.04, 0.05],
      'scale': 0.15,
      'length': 0.5,
      'color': 0x9a7b3e
    }, {
      'spd': [0.03, 0.031],
      'rand': !0x0,
      'carryV': !0x0,
      'grav': 0.0003,
      'spn': [0.03, 0.05],
      'scale': 0.1,
      'length': 0.4,
      'color': 0x9a7b3e
    }],
    cqZ = function(cqb) {
      this['mesh'] = new cqe['Mesh'](cqb['cubeGeo']), this['init'] = function(cqc, cqd, cqg, cqh, cqi, cqj, cqq, cqY) {
        this['dst'] = cqj, this['scale'] = cqq['scale'], this['spd'] = cqq['spd'][0x1] ? cqf['randFloat'](cqq['spd'][0x0], cqq['spd'][0x1]) : cqq['spd'];
        var cqZ = cqq && cqq['carryV'] && cqY;
        cqh -= Math['PI'], this['xS'] = this['spd'] * Math['sin'](cqh) * Math['cos'](cqi) + (cqZ ? cqY['xVel'] : 0x0), this['zS'] = this['spd'] * Math['cos'](cqh) * Math['cos'](cqi) + (cqZ ? cqY['zVel'] : 0x0), this['yS'] = this['spd'] * Math['sin'](cqi) + (cqZ ? cqY['yVel'] : 0x0), this['grav'] = cqq['grav'], this['spin'] = cqq['spn'] ? cqq['spn'][0x1] ? cqf['randFloat'](cqq['spn'][0x0], cqq['spn'][0x1]) : cqq['spn'] : 0x0, this['mesh']['receiveShadow'] = cqq['mat'] != cqe['MeshBasicMaterial'], this['mesh']['material'] = cqb['getMat']('default', {
          'fog': cqq['mat'] != cqe['MeshBasicMaterial'],
          'color': cqq['color'],
          'emissive': cqq['emis'],
          'mat': cqq['mat']
        }), this['layer'] = cqY && cqY['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? 0x1 : 0x0, this['sound'] = cqY && cqY['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] ? null : cqq['snd'], this['soundPlayed'] = !0x1, this['mesh']['layers']['set'](this['layer']), cqb['moveMesh'](this['mesh'], cqc, cqd, cqg), this['mesh']['lookAt'](cqc + this['xS'], cqd + this['yS'], cqg + this['zS']), cqq && cqq['rand'] && this['mesh']['rotateX'](cqf['randFloat'](-Math['PI'], Math['PI'])), cqb['scaleMesh'](this['mesh'], cqq['scale'], cqq['scale'], cqq['length']);
      }, this['checkSound'] = function() {
        if (this['sound'] && !this['soundPlayed']) {
          var cqb = Howler['pos']();
          cqf['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](cqb[0x0], cqb[0x1], cqb[0x2], this['mesh']['position']['x'], this['mesh']['position']['y'], this['mesh']['position']['z']) <= this['sound']['rng'] && (SOUND['play'](this['sound']['src'][cqf['randInt'](0x0, this['sound']['src']['length'] - 0x1)], this['sound']['vol'], !0x1, cqf['randFloat'](0.8, 1.2)), this['soundPlayed'] = !0x0);
        }
      }, this['update'] = function(cqb) {
        this['mesh']['visible'] && (this['mesh']['position']['x'] += this['xS'] * cqb, this['mesh']['position']['z'] += this['zS'] * cqb, this['mesh']['position']['y'] += this['yS'] * cqb, this['spin'] && this['mesh']['rotateX'](this['spin'] * cqb), this['yS'] -= (this['grav'] || 0x0) * cqb, this['dst'] -= this['spd'] * cqb, this['checkSound'](), 0x0 >= this['dst'] && (this['mesh']['visible'] = !0x1));
      };
    };
  cqe['Sprite']['prototype']['init'] = function(cqb, cqc, cqd, cqe, cqf, cqg, cqh, cqi, cqj, cqq) {
    this['position']['x'] = cqb, this['position']['y'] = cqc, this['position']['z'] = cqd, this['xVel'] = cqe, this['yVel'] = cqf, this['zVel'] = cqg, this['scale']['x'] = this['scale']['y'] = cqh, this['life'] = cqi || 0x0, this['grav'] = cqj || 0x0, this['area'] = cqq, this['updC'] = 0x0;
  }, cqe['Sprite']['prototype']['update'] = function(cqb, cqc, cqd) {
    if (this['area'] && (this['visible'] = cqc && 0xa0 >= cqf['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](cqd ? cqd['x'] : 0x0, cqd ? cqd['y'] : 0x0, cqd ? cqd['z'] : 0x0, this['position']['x'], this['position']['y'], this['position']['z'])), this['visible'] || this['area']) {
      if (this['position']['x'] += this['xVel'] * cqb, this['position']['y'] += this['yVel'] * cqb, this['yVel'] -= this['grav'] * cqb, this['position']['z'] += this['zVel'] * cqb, this['area']) {
        var cqe = this['scale']['x'] / 0x2;
        this['position']['x'] - cqe >= this['area']['x'] + this['area']['w'] ? this['position']['x'] = this['area']['x'] - this['area']['w'] - cqe : this['position']['x'] + cqe <= this['area']['x'] - this['area']['w'] && (this['position']['x'] = this['area']['x'] + this['area']['w'] + cqe), this['position']['z'] - cqe >= this['area']['z'] + this['area']['l'] ? this['position']['z'] = this['area']['z'] - this['area']['l'] - cqe : this['position']['z'] + cqe <= this['area']['z'] - this['area']['l'] && (this['position']['z'] = this['area']['z'] + this['area']['l'] + cqe), this['position']['y'] - cqe >= this['area']['y'] + this['area']['h'] ? this['position']['y'] = this['area']['y'] - cqe : this['position']['y'] + cqe <= this['area']['y'] && (this['position']['y'] = this['area']['y'] + this['area']['h'] + cqe);
      }
      0x0 < this['life'] ? (this['life'] -= cqb, 0x0 >= this['life'] && this['updC'] && (this['visible'] = !0x1), this['updC']++) : 0x0 >= this['life'] && this['updC'] && (this['visible'] = !0x1);
    }
  };
  var crq = [Math['PI'] / 0x3, -Math['PI'] / 0x3],
    crr = [{
      'hole': !0x0,
      'count': 0x2,
      'grav': -0.00002,
      'scale': [0x5, 0x9],
      'speed': [0x0, 0.025],
      'spread': [-0.4, 0.4],
      'life': [0x12c, 0x1f4]
    }, {}, {
      'count': 0x1,
      'blending': 0x2,
      'scale': [0x5, 0x7],
      'speed': [0x0, 0x0],
      'spread': [0x0, 0x0],
      'life': [0x1e, 0x23]
    }, {
      'count': 0x1,
      'blending': 0x2,
      'scale': [0x7d0, 0x7d0],
      'speed': [0x0, 0x0],
      'spread': [0x0, 0x0]
    }, {
      'count': 0x4,
      'src': '0',
      'scale': [0x5, 0x6],
      'speed': [0x0, 0.01],
      'spread': [-0x1, 0x1],
      'life': [0x258, 0x320]
    }];
  cqb['exports'] = function(cqb) {
    var cqc, cqd, cqg;
    this['particles'] = [], this['trails'] = [], this['physObjs'] = [], this['areas'] = [], this['active'] = !0x0, this['ExplosionManager'] = new cqq(), this['prefabs'] = [{
      'src': 'glow_0',
      'blending': 0x1,
      'spd': 0.008,
      'cnt': 2.2,
      'grav': [-0.015, -0.005],
      'scl': [0.7, 0x1],
      'dir': 0x0
    }, {
      'src': 'glow_1',
      'blending': 0x1,
      'spd': 0.003,
      'cnt': 0x8,
      'grav': [-0.2, -0.22],
      'scl': [0x1, 1.5],
      'dir': 0x0
    }, {
      'src': 'fog_0',
      'blending': 0x1,
      'spd': 0.002,
      'cnt': 0x6,
      'grav': [0x0, 0x0],
      'scl': [0x19, 0x1e],
      'dir': 0x0
    }], this['addTrail'] = function(cqc) {
      cqg = null;
      for (var cqd = 0x0; cqd < this['trails']['length']; ++cqd)
        if (!this['trails'][cqd]['mesh']['visible']) {
          cqg = this['trails'][cqd];
          break;
        } cqg || (cqg = new cqj(cqb), this['trails']['push'](cqg), cqb['scene']['add'](cqg['mesh'])), cqg['init'](cqc);
    }, this['area'] = function(cqb, cqc, cqd, cqe, cqg, cqh, cqi, cqj) {
      cqe /= 0x2, cqh /= 0x2, this['areas']['push']({
        'f': cqj,
        'x': cqb,
        'y': cqc,
        'z': cqd,
        'w': cqe,
        'h': cqg,
        'l': cqh
      });
      for (var cqq = 0x0; cqq < cqi['count']; ++cqq) this['add'](cqi['src'], cqb + cqf['randInt'](-cqe, cqe), cqc + cqf['randInt'](0x0, cqg), cqd + cqf['randInt'](-cqh, cqh), cqi['spd'] * Math['sin'](cqi['dir']), cqi['grav'] ? cqf['randFloat'](cqi['grav'][0x0], cqi['grav'][0x1]) : 0x0, cqi['spd'] * Math['cos'](cqi['dir']), cqf['randFloat'](cqi['scl'][0x0], cqi['scl'][0x1]), 0x0, 0x0, cqi['blending'], this['areas'][this['areas']['length'] - 0x1], null, cqi['colr']);
    }, this['effect'] = function(cqd, cqg, cqh, cqi, cqj, cqq) {
      if (this['active'] && (0x0 == cqb['useDepthMap'] || '0' == cqb['useDepthMap'])) {
        cqc = crr[cqq];
        for (var cqY = 0x0; cqY < cqc['count']; ++cqY) {
          var cqZ = cqf['randFloat'](cqc['speed'][0x0], cqc['speed'][0x1]),
            crq = cqi + cqf['randFloat'](cqc['spread'][0x0], cqc['spread'][0x1]),
            crQ = cqj + cqf['randFloat'](cqc['spread'][0x0], cqc['spread'][0x1]);
          this['add'](cqq, cqd, cqg, cqh, cqZ * Math['sin'](crq) * Math['cos'](crQ), cqZ * Math['sin'](crQ), cqZ * Math['cos'](crq) * Math['cos'](crQ), cqf['randFloat'](cqc['scale'][0x0], cqc['scale'][0x1]), cqc['life'] ? cqf['randInt'](cqc['life'][0x0], cqc['life'][0x1]) : 0x0, cqc['grav'], cqc['blending'], null, cqc['src']);
        }
        cqc['hole'] && this['add'](0x1, cqd, cqg, cqh, 0x0, 0x0, 0x0, cqf['randFloat'](0.4, 0x1), 0x1388, 0x0, cqe['SubtractiveBlending']);
      }
    }, this['add'] = function(cqc, cqf, cqg, cqh, cqi, cqj, cqq, cqY, cqZ, crq, crr, cs2, cs3, cs4) {
      cqd = null;
      for (var cs5 = 0x0; cs5 < this['particles']['length']; ++cs5)
        if (!this['particles'][cs5]['visible'] && !this['particles'][cs5]['static']) {
          cqd = this['particles'][cs5];
          break;
        } cqd || (cqd = new cqe['Sprite'](), this['particles']['push'](cqd), cqb['scene']['add'](cqd)), this['setMaterial'](cqd, cs3 || cqc, crr, !0x0, cs4), cqd['visible'] = !0x0, cqd['init'](cqf, cqg, cqh, cqi, cqj, cqq, cqY, cqZ, crq, cs2);
    }, this['setMaterial'] = function(cqc, cqd, cqg, cqh, cqi) {
      cqc['material'] = cqb['getMat']('particles/' + cqd, {
        'mat': cqe['SpriteMaterial'],
        'color': null == cqi ? 0xffffff : cqi,
        'depthWrite': !0x1,
        'blending': cqg || cqe['NormalBlending'],
        'rotation': cqh ? crq[cqf['randInt'](0x0, 0x2)] : 0x0
      });
    }, this['physObj'] = function(cqc, cqe, cqf, cqg, cqh, cqi, cqj, cqq, crq, crr, csl) {
      if (0x0 == cqb['useDepthMap'] || '0' == cqb['useDepthMap']) {
        cqd = null;
        for (var csm = 0x0; csm < this['physObjs']['length']; ++csm)
          if (!this['physObjs'][csm]['mesh']['visible']) {
            cqd = this['physObjs'][csm];
            break;
          } cqd || (cqd = new cqZ(cqb), this['physObjs']['push'](cqd), cqb['scene']['add'](cqd['mesh'])), cqd['sid'] = null == csl ? null : csl, cqd['mesh']['visible'] = !0x0, cqd['init'](cqc, cqe, cqf, cqg, cqh, cqi, crr || cqY[cqq], crq), cqj && this['showTrails'] && this['addTrail'](cqd);
      }
    }, this['disablePhys'] = function(cqb) {
      for (var cqc = 0x0; cqc < this['physObjs']['length']; ++cqc) this['physObjs'][cqc]['sid'] == cqb && (this['physObjs'][cqc]['mesh']['visible'] = !0x1);
    }, this['update'] = function(cqb, cqc) {
      if (cqc && cqc['active'])
        for (var cqd = 0x0; cqd < this['areas']['length']; ++cqd) this['areas'][cqd]['f'] && (this['areas'][cqd]['x'] = cqc['x'], this['areas'][cqd]['y'] = cqc['y'], this['areas'][cqd]['z'] = cqc['z']);
      for (cqd = 0x0; cqd < this['trails']['length']; ++cqd) this['trails'][cqd]['update'](cqb);
      for (cqd = 0x0; cqd < this['particles']['length']; ++cqd) this['particles'][cqd]['update'](cqb, this['active'], cqc);
      for (cqd = 0x0; cqd < this['physObjs']['length']; ++cqd) this['physObjs'][cqd]['update'](cqb);
      this['ExplosionManager']['update'](cqb);
    }, this['reset'] = function() {
      this['particles']['length'] = 0x0, this['trails']['length'] = 0x0, this['physObjs']['length'] = 0x0, this['areas']['length'] = 0x0;
    };
  };
}, function(css, cst) {
  css['exports'] = [{
    'name': 'Red\x20Dot',
    'src': 'attach_0',
    'dotSrc': 'dot_0',
    'aimOffY': 0.16,
    'scale': 1.2
  }];
}, function(csu, csv) {
  csu['exports'] = [{
    'name': 'Nuke',
    'kills': 0x19,
    'activate': function(csu, csv) {
      return !csu['nukeTimer'] && (csu['incStat']('n', csv), csu['startNuke'](csv), !0x0);
    }
  }];
}, function(csy, csz) {
  csy['exports'] = [{
    'name': 'Krunker',
    'opacity': 0.6
  }, {
    'name': 'Target',
    'opacity': 0.6
  }, {
    'name': 'GG',
    'opacity': 0.6
  }, {
    'name': 'Pumpkin',
    'opacity': 0.6
  }, {
    'name': 'Spooky',
    'opacity': 0.6
  }, {
    'name': 'Ded',
    'opacity': 0.6
  }, {
    'name': 'Sadface',
    'opacity': 0.6
  }, {
    'name': 'Laugh\x20Cry',
    'opacity': 0.7
  }, {
    'name': 'Sid',
    'opacity': 0.9
  }, {
    'name': 'Vince',
    'opacity': 0.9
  }, {
    'name': 'Kiki',
    'opacity': 0.6
  }, {
    'name': 'Ladder',
    'opacity': 0x1
  }, {
    'name': 'Dummy',
    'opacity': 0x1
  }, {
    'name': '8\x20Ball',
    'opacity': 0.6
  }, {
    'name': 'xD',
    'opacity': 0.6
  }, {
    'name': 'MMOK',
    'opacity': 0.7
  }, {
    'name': 'Madman',
    'opacity': 0.6
  }, {
    'name': 'Terminal',
    'opacity': 0.6
  }, {
    'name': 'YODO',
    'opacity': 0.6
  }, {
    'name': 'Crayon',
    'opacity': 0.6
  }, {
    'name': 'Myth',
    'opacity': 0.85
  }, {
    'name': 'SpikyJohn',
    'opacity': 0.85
  }, {
    'name': 'LevelGaming',
    'opacity': 0.9
  }, {
    'name': 'PolarAce',
    'opacity': 0.9
  }, {
    'name': 'FrostyWolf',
    'opacity': 0.85
  }, {
    'name': 'Waspy',
    'opacity': 0.85
  }, {
    'name': 'Jazzmittens',
    'opacity': 0.85
  }, {
    'name': 'Wolfmaan',
    'opacity': 0.85
  }, {
    'name': 'KPL',
    'opacity': 0.9
  }, {
    'name': 'BV\x20Hype',
    'opacity': 0.85
  }, {
    'name': 'LandPhil',
    'opacity': 0.85
  }, {
    'name': 'Deal\x20With\x20It',
    'opacity': 0.9
  }, {
    'name': 'Rice',
    'opacity': 0.9
  }, {
    'name': 'Lore',
    'opacity': 0.95
  }, {
    'name': 'Desu\x20Sid',
    'opacity': 0.85
  }, {
    'name': 'Anomaly',
    'opacity': 0.85
  }, {
    'name': 'FaZe',
    'opacity': 0.9
  }, {
    'name': 'Nudah',
    'opacity': 0.9
  }, {
    'name': 'Misfits',
    'opacity': 0.9
  }];
}, function(csA, csB) {
  var csC = ['Double\x20Kill', 'Triple\x20Kill', 'Quad\x20Kill', 'Multi\x20Kill', 'Mega\x20Kill', 'Ultra\x20Kill', 'Super\x20Kill'],
    csD = [];
  csA['exports']['reward'] = function(csA, csB, csG, csH, csI) {
    csD['length'] = 0x0;
    var csJ = null == csH['weapon'] ? csB['weapon'] : csH['weapon'];
    if (csI['mode']['weaponOrder']) csJ['melee'] ? csD['push']('Humiliation', null) : csD['push']('Promotion', 0x1);
    else {
      0x1 >= csI['kills'] && csD['push']('First\x20Blood', 0x19), csJ['melee'] ? csD['push']('Execution', 0x96) : (csJ['kill'] ? csD['push'](csJ['kill'][0x0], csJ['kill'][0x1]) : csJ['scope'] && 0x1 == csB['aimVal'] ? csD['push']('No\x20Scope', 0x64) : !csJ['scope'] || 0x0 == csB['aimVal'] && 0xb4 < csB['aimTime'] || 0x1 == csB['aimDir'] ? csD['push']('', 0x32) : csD['push']('Quick\x20Scope', 0x4b), csA['getSpin'](csB), csH['headShot'] && csD['push']('Headshot', 0x32), csH['wallbang'] && csD['push']('Wallbang', 0x19), !csJ['scope'] && 0xc8 < csH['dst'] * csJ['range'] && csD['push']('Longshot', 0x19)), csG['flag'] && csD['push']('Snatched', 0x32), csB['health'] <= 0.2 * csB['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] && csB['active'] && csD['push']('Close\x20Call', 0x14), 0x3 <= csB['deathStreak'] && csD['push']('Comeback', 0x19), 0xa <= csG['killStreak'] ? csD['push']('Buzzkill', 0x19) : 0x5 <= csG['killStreak'] && csD['push']('Buzzkill', 0xa), 0x0 < csB['slideTimer'] && csD['push']('Driftkill', 0x32), 0x190 <= csB['airTime'] && csD['push']('Mid\x20Air', 0x19);
      for (var csK = csC['length'] - 0x1; 0x0 <= csK; --csK)
        if (csB['streak'] > csK) {
          csD['push'](csC[csK], 0x32 * (csK + 0x1));
          break;
        }
    }
    return csD['length'] ? csD : null;
  }, csA['exports']['getScore'] = function(csA) {
    var csB = null;
    if (csA)
      for (var csC = 0x1; csC < csA['length']; csC += 0x2) csA[csC] && (csB += csA[csC]);
    return csB;
  };
}, function(csO, csP) {}, function(csQ, csR, csS) {
  csS(0x8);
  csQ['exports'] = function() {
    this['locale'] = 'en', this['defaultLocale'] = 'en', this['supported'] = ['en', 'es', 'de', 'kr'], this['translations'] = {};
    for (var csQ = 0x0; csQ < this['supported']['length']; csQ++) this['translations'][this['supported'][csQ]] = csS(0x51)('./' + this['supported'][csQ] + '.js');
    this['saveLocale'] = function() {
      localStorage['setItem']('krk_lang', this['locale'] || this['defaultLocale']);
    }, this['setLocale'] = function(csQ) {
      -0x1 < this['supported']['indexOf'](csQ) && (this['locale'] = csQ), this['saveLocale']();
    }, this['setLocaleFromStorage'] = function() {
      'undefined' != typeof Storage && this['setLocale'](localStorage['getItem']('krk_lang'));
    }, this['setLocaleFromStorage'](), this['encode'] = function(csQ) {
      for (var csR = [], csS = csQ['length'] - 0x1; 0x0 <= csS; csS--) csR['unshift'](['&#', csQ[csS]['charCodeAt'](), ';']['join'](''));
      return csR['join']('');
    }, this['get'] = function(csQ) {
      let csR = this['translations'][this['locale']][csQ] || this['translations'][this['defaultLocale']][csQ] || 'UNLOCALIZED\x20STRING';
      for (var csS = 0x1; csS < arguments['length']; csS++) csR = csR['replace']('{' + (csS - 0x1) + '}', arguments[csS]);
      return csR;
    }, this['t'] = this['get'];
  };
}, function(ct1, ct2, ct3) {
  var ct4 = {
    './de.js': 0x52,
    './en.js': 0x53,
    './es.js': 0x54,
    './kr.js': 0x55
  };

  function ct5(ct1) {
    var ct2 = ct8(ct1);
    return ct3(ct2);
  }

  function ct8(ct1) {
    if (!ct3['o'](ct4, ct1)) {
      var ct2 = new Error('Cannot\x20find\x20module\x20\x27' + ct1 + '\x27');
      throw ct2['code'] = 'MODULE_NOT_FOUND', ct2;
    }
    return ct4[ct1];
  }
  ct5['keys'] = function() {
    return Object['keys'](ct4);
  }, ct5['resolve'] = ct8, ct1['exports'] = ct5, ct5['id'] = 0x51;
}, function(ctb, ctc) {
  ctb['exports'] = {
    'menu.btn.profile': 'Profil',
    'menu.btn.shop': 'Shop',
    'menu.btn.social': 'Social',
    'menu.btn.maps': 'Karten',
    'menu.btn.mods': 'Mods',
    'menu.btn.settings': 'Einstellungen',
    'menu.btn.customize': 'Anpassen',
    'menu.btn.invite': 'Einladen',
    'menu.btn.invite.clicked': 'Kopiert',
    'menu.btn.join': 'Beitreten',
    'menu.btn.host': 'Gastgeber\x20Spiel',
    'menu.btn.browser': 'Server\x20Browser',
    'generic.wait': 'Bitte\x20warten...',
    'generic.loading': 'LÄDT...',
    'generic.connecting': 'VERBINDET...',
    'generic.none': 'Nichts',
    'generic.select': 'Auswählen',
    'generic.delete': 'Löschen',
    'generic.save': 'Speichern',
    'generic.load': 'Laden',
    'generic.search': 'Suchen',
    'generic.leave': 'Verlassen',
    'generic.default': 'Voreinstellung',
    'generic.submit': 'Senden',
    'generic.create': 'Erstellen',
    'generic.failed': 'Fehlgeschlagen',
    'generic.success': 'Erfolgt!',
    'generic.name': 'Name',
    'generic.level': 'Level',
    'generic.score': 'Spielstand',
    'generic.off': 'Aus',
    'generic.score': 'Score',
    'generic.victory': 'SIEG',
    'generic.defeat': 'NIEDERLAGE',
    'generic.follow': 'Folgen',
    'generic.unfollow': 'Nicht\x20mehr\x20folgen',
    'generic.followers': 'Followers',
    'generic.following': 'folgt',
    'generic.games': 'Spiele',
    'generic.wins': 'Siege',
    'generic.clan': 'Clan',
    'generic.kills': 'Abschüsse',
    'generic.deaths': 'Tode',
    'generic.kdr': 'KDR',
    'generic.games.played': 'gespielte\x20Spiele',
    'generic.games.won': 'gewonnene\x20Spiele',
    'generic.timep': 'Spielzeit',
    'generic.time': 'Zeit',
    'generic.logout': 'Abmelden',
    'generic.logout.sessions': 'Abmelden\x20aus\x20allen\x20Sitzungen',
    'generic.username': 'Benutzername\x20eingeben',
    'generic.password': 'Passwort\x20eingeben',
    'generic.register': 'Registrieren',
    'generic.login': 'Einloggen',
    'generic.accuracy': 'Genauigkeit',
    'player.waiting': 'Warten\x20auf\x20Spieler',
    'player.died': 'Du\x20bist\x20gestorben',
    'player.killed': 'getötet\x20von',
    'player.killstreak': '{0}\x20on\x20a\x20{1}\x20Abschuss-Strähne',
    'player.inactive': 'Wegen\x20Inaktivität\x20entfernt',
    'player.disconnect': 'NICHT\x20VERBUNDEN',
    'timer.end': 'Nächste\x20Runde\x20in\x20{0}',
    'leaderboard.empty': 'Leerer\x20Warteraum',
    'popup.checkpoint': 'Kontrollpunkt!',
    'app.play': 'KLICKEN\x20UM\x20ZU\x20SPIELEN',
    'app.play.controller': 'START\x20DRÜCKEN',
    'purchase.error': 'Fehler\x20aufgetreten',
    'purchase.error.click': 'Hier\x20klicken</a>\x20und\x20nochmal\x20versuchen!',
    'purchase.error.limit': 'Du\x20hast\x20möglicherweise\x20dein\x20tägliches\x20Transaktionslimit\x20überschritten.',
    'settings.reset': 'Einstellungen\x20zurücksetzen',
    'settings.reset.confirm': 'Bist\x20Du\x20sicher,\x20dass\x20du\x20all\x20Deine\x20Einstellungen\x20zurücksetzen\x20willst?\x20Dadurch\x20wird\x20auch\x20die\x20Seite\x20neu\x20geladen',
    'settings.controls.change': 'Kontrollen\x20ändern',
    'settings.controls.press': 'Irgendeine\x20Taste\x20drücken',
    'settings.server.header': 'Server',
    'settings.server.region': 'Voreinstellung\x20Region',
    'settings.quality.header': 'Qualität',
    'settings.quality.res': 'Auflösung',
    'settings.quality.part': 'Partikel',
    'settings.quality.trails': 'Geschossspuren',
    'settings.quality.mflash': 'Mündungsfeuer',
    'settings.interface.header': 'Schnittstelle',
    'settings.interface.ui': 'Benutzeroberfläche\x20anzeigen',
    'settings.interface.hp': 'Dynamische\x20HP\x20Balken',
    'settings.interface.chat': 'Chat\x20Box\x20anzeigen',
    'settings.interface.kills': 'Abschuss-Liste\x20anzeigen',
    'settings.interface.messages': 'Spielernachrichten\x20anzeigen',
    'settings.interface.unboxings': 'Ausgepackte\x20Kisten\x20anzeigen',
    'settings.interface.ping': 'Ping\x20anzeigen',
    'settings.interface.fps': 'FPS-Rate\x20anzeigen',
    'settings.interface.deaths': 'Tode\x20anzeigen',
    'settings.crosshair.header': 'Fadenkreuz',
    'settings.crosshair.type': 'Typ',
    'settings.crosshair.type.2': 'Benutzerdefiniert',
    'settings.crosshair.type.3': 'Mehrschichtig',
    'settings.crosshair.type.4': 'Bild',
    'settings.crosshair.style': 'Stil',
    'settings.crosshair.style.0': 'Kreuz',
    'settings.crosshair.style.1': 'Hohler\x20Kreis',
    'settings.crosshair.style.2': 'Voller\x20Kreis',
    'settings.crosshair.style.3': 'Hohles\x20Quadrat',
    'settings.crosshair.style.4': 'Volles\x20Quadrat',
    'settings.crosshair.image': 'Bild',
    'settings.crosshair.image.paste': 'Fadenkreuz-Bild',
    'settings.crosshair.always': 'Immer\x20anzeigen',
    'settings.crosshair.color': 'Farbe',
    'settings.crosshair.shadow': 'Schatten',
    'settings.crosshair.size': 'Größe',
    'settings.crosshair.thickness': 'Dicke',
    'settings.onKillS.style.0': 'Voreinstellung',
    'settings.onKillS.style.1': 'Auflösung\x20reduzieren',
    'settings.onKillS.style.2': 'FOV\x20reduzieren',
    'settings.onKillS.style.3': 'FOV\x20erhöhen',
    'settings.gameplay.header': 'Spielverlauf',
    'settings.gameplay.sensitivity': 'Empfindlichkeit',
    'settings.gameplay.aimsens': 'Zielempfindlichkeit',
    'settings.gameplay.fov': 'Sichtfeld',
    'settings.gameplay.fps': 'FOV\x20für\x20Waffen',
    'settings.gameplay.streamer': 'Streamer\x20Modus',
    'settings.gameplay.challenge': 'Challenge\x20Modus',
    'settings.gameplay.invert': 'Y-Achse\x20umkehren',
    'settings.gameplay.onkillS': 'Beim\x20Abschuss',
    'settings.audio.header': 'Audio',
    'settings.audio.sound': 'Ton',
    'settings.audio.voice': 'Lautstärke\x20Stimmen',
    'settings.editing.header': 'Bearbeiten',
    'settings.editing.weapon': 'Waffe\x20anzeigen',
    'settings.editing.bobbing': 'Waffe\x20rotieren',
    'settings.editing.depth': 'Todeskarte',
    'settings.editing.green': 'Grüner\x20Bildschirm',
    'settings.shaders.header': 'Schatten',
    'settings.shaders.ambient': 'Umgebungsschatten',
    'settings.mods.header': 'Mods',
    'settings.mods.load': 'Mods\x20laden',
    'settings.mods.auto': 'Mods\x20automatisch\x20laden',
    'settings.mods.borders': 'Zielfernrohr-Begrenzung',
    'settings.mods.scope': 'Zielfernrohr-Bild',
    'settings.mods.scope.paste': 'Zielfernrohr-Bild\x20URL',
    'settings.mods.dot': 'Laserpunkt-Bild',
    'settings.mods.dot.paste': 'Laserpunkt-Bild\x20URL',
    'settings.mods.endmessage': 'Match\x20Endnachricht',
    'settings.mods.profile': 'Profil-Bild',
    'settings.mods.profile.paste': 'Profil-Bild\x20URL',
    'windows.settings.header': 'Spieleinstellungen',
    'windows.servers.header': 'Server\x20Browser',
    'windows.servers.none': 'Keine\x20Spiele\x20zum\x20Beitreten\x20gefunden...',
    'windows.servers.host': '+\x20Gastgeber-Spiel',
    'windows.servers.hide': 'Volle\x20ausblenden',
    'windows.servers.online': '{0}\x20gesamt\x20online',
    'windows.loadout.header': 'Auslastung\x20ändern',
    'windows.loadout.class': 'Klasse',
    'windows.loadout.primary': 'Primär',
    'windows.loadout.secondary': 'Sekundär',
    'windows.loadout.melee': 'Nahkampf',
    'windows.loadout.hat': 'Hut',
    'windows.loadout.body': 'Körper',
    'windows.loadout.spray': 'Sprühdose',
    'windows.mods.header': 'Mods\x20Manager',
    'windows.mods.guide': 'Mod\x20Guide',
    'windows.mods.list': 'Mods\x20Liste',
    'windows.mods.publish': 'Mods\x20Veröffentlichen',
    'windows.mods.viewer': 'Ansicht',
    'windows.mods.drop': 'Mods\x20hier\x20hinziehen\x20oder\x20klicken',
    'windows.mods.paste': 'Mod-Url\x20einfügen',
    'windows.mods.load': 'Mods\x20laden',
    'windows.account.header': 'Konto',
    'windows.account.recover': 'Kontaktiere\x20<a>krunker@yendis.ch</a>\x20zur\x20Wiederherstellung\x20eines\x20Kontos',
    'windows.class.header': 'Klasse\x20auswählen',
    'windows.controls.header': 'Kontrollen\x20bearbeiten',
    'windows.controls.forward': 'Vorwärts',
    'windows.controls.backward': 'Rückwärts',
    'windows.controls.left': 'Links',
    'windows.controls.right': 'Rechts',
    'windows.controls.reload': 'Neu\x20laden',
    'windows.controls.aim': 'Zielen',
    'windows.controls.inspect': 'Untersuchen',
    'windows.controls.spray': 'Sprühen',
    'windows.controls.jump': 'Springen',
    'windows.controls.crouch': 'Kriechen',
    'windows.controls.next': 'Nächste\x20Waffe',
    'windows.controls.previous': 'Vorherige\x20Waffe',
    'windows.controls.chat': 'Chat',
    'windows.controls.voice': 'Stimme',
    'windows.controls.list': 'Spieler\x20Liste',
    'windows.controls.interact': 'Interagieren',
    'windows.controls.drop': 'Fallenlassen',
    'windows.host.header': 'Individuelles\x20Gastgeber-Spiel',
    'windows.host.maps': 'Karten\x20auswählen',
    'windows.host.cmaps': 'Community\x20Karte',
    'windows.host.raw': 'Karten-Rohdaten',
    'windows.host.modes': 'Modi\x20auswählen',
    'windows.host.classes': 'Klassen\x20auswählen',
    'windows.host.settings': 'Server\x20Einstellungen',
    'windows.host.preset': 'Gastgeber\x20Voreinstellungen',
    'windows.host.preset.load': 'Voreinstellung\x20laden...',
    'windows.host.preset.name': 'Name\x20Voreinstellung',
    'windows.host.start': 'Spiel\x20starten',
    'windows.spray.header': 'Sprühdose\x20auswählen',
    'windows.spray.default': 'Voreingestellte\x20Sprühdose',
    'windows.maps.header': 'Benutzerdefinierte\x20Karten',
    'windows.maps.none': 'Keine\x20Karten\x20gefunden!',
    'windows.maps.name': 'Kartenname',
    'windows.maps.editor': 'Karteneditor',
    'windows.maps.publish': 'Karte\x20veröffentlichen',
    'windows.maps.community': 'Karten\x20Community',
    'windows.publish.map.header': 'Karte\x20veröffentlichen',
    'windows.publish.map.thumbnail': 'Keine\x20Vorschauansicht',
    'windows.publish.map.paste': 'Kartendaten\x20einfügen',
    'windows.publish.map.update': 'Veröffentlichen/Aktualisieren',
    'windows.publish.map.login': 'Anmelden</a>\x20um\x20Karten\x20zu\x20erstellen\x20und\x20hochzuladen!',
    'windows.theatre.header': 'Theater\x20Modus',
    'windows.theatre.record': 'Aufzeichnung\x20aktivieren',
    'windows.theatre.key': 'Aufzeichnungstaste',
    'windows.clans.header': 'Clans',
    'windows.clans.members': 'Mitglieder\x20({0})',
    'windows.clans.requests': 'Anfragen',
    'windows.clans.requests.none': 'Keine\x20Anfragen',
    'windows.clans.page': '[{0}]\x20Clan\x20Seite',
    'windows.clans.create': 'Clan\x20erstellen',
    'windows.clans.name': 'Clan\x20Name',
    'windows.clans.view': 'Clans\x20ansehen',
    'windows.clans.join': 'Clan\x20beitreten',
    'windows.clans.login': 'Anmelden</a>\x20um\x20Clan\x20zu\x20erstellen\x20oder\x20beizutreten!',
    'windows.store.header': 'Shop',
    'windows.store.spin': '{0}\x20Drehung(en)',
    'windows.store.agree': 'Mit\x20dem\x20Kauf\x20erklärst\x20Du\x20Dich\x20mit\x20den\x20{0}Geschäftsbedingungen\x20einverstanden.',
    'windows.store.purchase': 'KR\x20kaufen',
    'windows.store.market': 'Marktplatz',
    'windows.store.market2': 'Krunker\x20Markt',
    'windows.store.buy': 'Gegenstände\x20kaufen\x20und\x20verkaufen\x20auf\x20dem',
    'windows.store.wheels': 'Preisräder',
    'windows.store.unlock': 'Neue\x20Waffenoberflächen\x20und\x20Gegenstände\x20freischalten',
    'windows.store.amount': '{0}\x20KR\x20in\x20Konto',
    'windows.store.login': 'Anmelden</a>\x20um\x20Gegenstände\x20aus\x20dem\x20Shop\x20zu\x20kaufen\x20und\x20freizuschalten!',
    'windows.store.purchasing': 'Kauf\x20wird\x20durchgeführt...',
    'windows.store.unboxed': '{0}{1}\x20ausgepackt',
    'windows.skin.header': 'Oberfläche\x20auswählen',
    'windows.hat.header': 'Hut\x20auswählen',
    'windows.back.header': 'Rückseite\x20auswählen',
    'windows.mods.community.header': 'Community\x20Mods',
    'windows.mods.community.fav': 'Deine\x20Favoriten',
    'windows.mods.community.new': 'Neue\x20Mods',
    'windows.mods.community.hot': 'Heiß',
    'windows.mods.community.name': 'Mod-Name',
    'windows.mods.community.none': 'Keine\x20Mods\x20gefunden!',
    'windows.publish.mod.header': 'Mods\x20veröffentlichen',
    'windows.publish.mod.thumbnail': 'Keine\x20Vorschauansicht',
    'windows.publish.mod.name': 'Mods-Name',
    'windows.publish.mod.paste': 'Mods-Url',
    'windows.publish.mod.update': 'Veröffentlichen/Aktualisieren',
    'windows.publish.mod.login': '<a>Anmelden</a>\x20um\x20Mods\x20zu\x20erstellen\x20und\x20hochzuladen!',
    'windows.secondary.header': 'Sekundäre\x20auswählen',
    'windows.secondary.unlocked': 'Freigeschaltet\x20bei\x20Level\x20{0}',
    'windows.secondary.req': 'Erfordert\x20Level\x20{0}',
    'windows.advertise.header': 'Inserieren',
    'windows.players.header': 'Spieler\x20Liste',
    'windows.players.none': 'Keine\x20Spieler\x20im\x20Moment...',
    'windows.join.header': 'Beitreten',
    'windows.join.code': 'Spiel\x20URL/Code\x20eingeben',
    'windows.client.header': 'Client',
    'windows.client.windows': 'Windows\x20Installer',
    'windows.client.mac': 'macOS\x20Installer',
    'windows.client.linux': 'Linux\x20Installer',
    'thumbnail.upload.limit': 'Fehlgeschlagen.\x2040kb\x20Limit\x20für\x20Vorschauansicht',
    'thumbnail.upload.error': 'Fehler\x20Vorschauansicht',
    'mod.extracting': 'entpackt\x20{0}/{1}',
    'mod.disabled': 'Mods\x20deaktiviert',
    'mod.error': 'Mod\x20Fehler!',
    'mod.loading': 'Mod\x20Lädt...',
    'mod.invalid': 'Ungültige\x20Mod-Datei!',
    'matchmaker.full': 'VOLL',
    'matchmaker.full2': 'Das\x20Spiel\x20ist\x20voll.',
    'matchmaker.none': 'Spiel\x20nicht\x20gefunden.',
    'adblocker': 'Schalte\x20Deinen\x20AdBlocker\x20aus\x20um\x20gratis\x20Krunkies\x20zu\x20erhalten.',
    'streamers.views': '{0}\x20Betrachter',
    'streamers.none': 'Keine\x20aktiven\x20Streams!',
    'error.extentions': 'Schalte\x20Erweiterungen\x20aus,\x20falls\x20Du\x20welche\x20hast.',
    'error.seek': 'Klicke\x20und\x20versuche,\x20eine\x20neues\x20Spiel\x20zu\x20finden.',
    'custom.map.missing': 'Wähle\x20mindestens\x20eine\x20Karte\x20aus',
    'custom.mode.missing': 'Wähle\x20mindestens\x20einen\x20Modus\x20aus',
    'custom.class.missing': 'Wähle\x20mindestens\x20eine\x20Klasse\x20aus',
    'server.config.maxPlayers': 'Spieler',
    'server.config.minPlayers': 'Mindestanzahl\x20Spieler',
    'server.config.lives': 'Leben',
    'server.config.gameTime': 'Minuten',
    'server.config.gravMlt': 'Schwerkraft',
    'server.config.jumpMlt': 'Sprungkraft',
    'server.config.deltaMlt': 'Zeitskala',
    'server.config.strafeSpd': 'Strafe-Geschwindigkeit',
    'server.config.healthMlt': 'Leben-Multiplikator',
    'server.config.impulseMlt': 'Waffen-Impuls',
    'server.config.nameTeam1': 'Team\x201\x20Name',
    'server.config.nameTeam2': 'Team\x202\x20Name',
    'server.config.selTeam': 'Team\x20auswählen',
    'server.config.allowSpect': 'Zuschauen',
    'server.config.killRewards': 'Abschussprämien',
    'server.config.canSlide': 'Rutschen',
    'server.config.autoJump': 'Automatisch\x20Springen',
    'server.config.thirdPerson': 'Dritte\x20Person',
    'server.config.nameTags': 'Nametags\x20ausblenden',
    'server.config.private': 'Privat',
    'social.login': 'Anmelden/Registrieren',
    'social.login.failed': 'Anmeldung\x20fehlgeschlagen',
    'social.login.buy': 'Zum\x20Kaufen\x20anmelden',
    'social.login.sell': 'Zum\x20Verkaufen\x20anmelden',
    'social.login.proccessing': 'Anmeldung\x20läuft...',
    'social.since': 'Seit',
    'social.user.maps': 'Benutzerkarten',
    'social.user.mods': 'Benutzer\x20Mods',
    'social.maps.none': 'Keine\x20Karten\x20gefunden...',
    'social.market.head': 'Gegenstand\x20Kopf',
    'social.market.back': 'Gegenstand\x20Rücken',
    'social.market.none': 'Keine\x20Gegenstände\x20gefunden',
    'social.market.grace': 'bereit\x20in\x20{0}',
    'social.market.sort': 'Filtern/Sortieren',
    'social.market.filter': 'Suchen',
    'social.market.price.high': 'Höchster\x20Preis',
    'social.market.price.low': 'Niedrigster\x20Preis',
    'social.market.price.list': 'Preis\x20anzeigen\x20in',
    'social.market.searching': 'Suchen',
    'social.market.listed': 'angezeigt\x20vor\x20{0}',
    'social.market.list': 'Gegenstand\x20anzeigen',
    'social.market.unlist': 'Nicht\x20mehr\x20anzeigen',
    'social.market.unlisting': 'Gegenstand\x20wird\x20nicht\x20mehr\x20angezeigt...',
    'social.market.posting': 'Gegenstand\x20wird\x20gepostet...',
    'social.market.req': 'Level\x20{0}\x20erforderlich',
    'social.market.cant': 'Kannst\x20Du\x20Dir\x20nicht\x20leisten',
    'social.market.purchase': 'Kaufen',
    'social.market.fee': 'Keine\x20Gebühr\x20fürs\x20Listen',
    'social.market.failed': 'Fehlgeschlagen.\x20Versuche\x20es\x20erneut.'
  };
}, function(ctd, cte) {
  ctd['exports'] = {
    'menu.btn.ranked': 'Ranked',
    'menu.btn.shop': 'Shop',
    'menu.btn.social': 'Social',
    'menu.btn.maps': 'Maps',
    'menu.btn.mods': 'Mods',
    'menu.btn.settings': 'Settings',
    'menu.btn.customize': 'Customize',
    'menu.btn.invite': 'Invite',
    'menu.btn.invite.clicked': 'Copied',
    'menu.btn.join': 'Join',
    'menu.btn.host': 'Host\x20Game',
    'menu.btn.browser': 'Server\x20Browser',
    'generic.wait': 'Please\x20wait...',
    'generic.loading': 'LOADING...',
    'generic.connecting': 'CONNECTING...',
    'generic.none': 'None',
    'generic.select': 'Select',
    'generic.delete': 'Delete',
    'generic.save': 'Save',
    'generic.load': 'Load',
    'generic.search': 'Search',
    'generic.leave': 'Leave',
    'generic.default': 'Default',
    'generic.random': 'Random',
    'generic.submit': 'Submit',
    'generic.create': 'Create',
    'generic.failed': 'Failed',
    'generic.success': 'Success!',
    'generic.name': 'Name',
    'generic.level': 'Level',
    'generic.score': 'Score',
    'generic.off': 'Off',
    'generic.score': 'Score',
    'generic.victory': 'VICTORY',
    'generic.defeat': 'DEFEAT',
    'generic.matchover': 'MATCH\x20OVER',
    'generic.matchaband': 'MATCH\x20ABANDONED',
    'generic.follow': 'Follow',
    'generic.unfollow': 'Unfollow',
    'generic.followers': 'Followers',
    'generic.following': 'following',
    'generic.games': 'Games',
    'generic.wins': 'Wins',
    'generic.clan': 'Clan',
    'generic.kills': 'Kills',
    'generic.deaths': 'Deaths',
    'generic.kdr': 'KDR',
    'generic.games.played': 'Games\x20Played',
    'generic.games.won': 'Games\x20Won',
    'generic.timep': 'Time\x20Played',
    'generic.time': 'Time',
    'generic.logout': 'Logout',
    'generic.logout.sessions': 'Logout\x20of\x20all\x20Sessions',
    'generic.username': 'Enter\x20Username',
    'generic.password': 'Enter\x20Password',
    'generic.register': 'Register',
    'generic.login': 'Login',
    'generic.accuracy': 'Accuracy',
    'player.waiting': 'waiting\x20for\x20players',
    'player.died': 'You\x20died',
    'player.killed': 'Killed\x20By',
    'player.killstreak': '{0}\x20on\x20a\x20{1}\x20Kill\x20Streak',
    'player.inactive': 'Kicked\x20for\x20inactivity',
    'player.disconnect': 'DISCONNECTED',
    'timer.end': 'Next\x20Round\x20in\x20{0}',
    'leaderboard.empty': 'Empty\x20Lobby',
    'popup.checkpoint': 'Checkpoint!',
    'app.play': 'CLICK\x20TO\x20PLAY',
    'app.play.controller': 'PRESS\x20START',
    'purchase.error': 'Error\x20occurred',
    'purchase.error.click': 'click\x20here</a>\x20and\x20try\x20again!',
    'purchase.error.limit': 'You\x20may\x20have\x20exceeded\x20your\x20daily\x20transaction\x20limit',
    'settings.reset': 'Reset',
    'settings.reset.confirm': 'Are\x20you\x20sure\x20you\x20want\x20to\x20reset\x20all\x20your\x20settings?\x20This\x20will\x20also\x20refresh\x20the\x20page',
    'settings.import': 'Import',
    'settings.export': 'Export',
    'settings.none': 'No\x20settings\x20found',
    'settings.controls.change': 'Controls',
    'settings.controls.press': 'Press\x20any\x20Key',
    'settings.local.header': 'Localization',
    'settings.local.region': 'Default\x20Region',
    'settings.local.lang': 'Language',
    'settings.quality.header': 'Performance',
    'settings.quality.updRate': 'Frame\x20Cap',
    'settings.quality.rendDst': 'Render\x20Distance',
    'settings.quality.res': 'Resolution',
    'settings.quality.part': 'Particles',
    'settings.quality.shadows': 'Shadows',
    'settings.quality.trails': 'Bullet\x20Trails',
    'settings.quality.mflash': 'Muzzle\x20Flash',
    'settings.quality.flap': 'Sniper\x20Flap',
    'settings.quality.lowSpec': 'Low\x20Spec',
    'settings.quality.ambient': 'Ambient\x20Shading',
    'settings.interface.header': 'Interface',
    'settings.interface.scale': 'UI\x20Scale',
    'settings.interface.ui': 'Show\x20UI',
    'settings.interface.hp': 'Dynamic\x20HP\x20Bars',
    'settings.interface.hitInd': 'Show\x20Hit\x20Indicators',
    'settings.interface.dmg': 'Show\x20Damage',
    'settings.interface.dmgCol': 'Damage\x20Color',
    'settings.interface.critCol': 'Crit\x20Color',
    'settings.interface.dmgScale': 'Damage\x20Scale',
    'settings.interface.chat': 'Show\x20Chat\x20Box',
    'settings.interface.killf': 'Show\x20Kill\x20Feed',
    'settings.interface.messages': 'Show\x20Player\x20Messages',
    'settings.interface.unboxings': 'Show\x20Unboxings',
    'settings.interface.ping': 'Show\x20Ping',
    'settings.interface.fps': 'Show\x20FPS',
    'settings.interface.deaths': 'Show\x20Death\x20Counter',
    'settings.interface.kills': 'Show\x20Kill\x20Counter',
    'settings.interface.streak': 'Show\x20Streak\x20Counter',
    'settings.interface.speed': 'Show\x20Movement\x20Speed',
    'settings.interface.speedOffX': 'Speed\x20X\x20Offset',
    'settings.interface.speedOffY': 'Speed\x20Y\x20Offset',
    'settings.interface.medals': 'Show\x20Medals',
    'settings.interface.hideNames': 'Nametag\x20Display',
    'settings.interface.hideNames.team': 'Team\x20Only',
    'settings.interface.hideNames.enemy': 'Enemy\x20Only',
    'settings.interface.hideNames.all': 'Everyone',
    'settings.interface.nametagStyle': 'Nametag\x20Style',
    'settings.interface.nametagStyle.health': 'Health\x20Only',
    'settings.interface.nametagStyle.name': 'Name\x20Only',
    'settings.interface.nametagStyle.nameLvl': 'Name\x20&\x20Level\x20Only',
    'settings.interface.nametagStyle.all': 'Everything',
    'settings.crosshair.header': 'Crosshair',
    'settings.crosshair.type': 'Type',
    'settings.crosshair.type.2': 'Custom',
    'settings.crosshair.type.3': 'Layered',
    'settings.crosshair.type.4': 'Image',
    'settings.crosshair.style': 'Style',
    'settings.crosshair.style.0': 'Cross',
    'settings.crosshair.style.1': 'Hollow\x20Circle',
    'settings.crosshair.style.2': 'Solid\x20Circle',
    'settings.crosshair.style.3': 'Hollow\x20Square',
    'settings.crosshair.style.4': 'Solid\x20Square',
    'settings.crosshair.image': 'Image',
    'settings.crosshair.image.paste': 'Crosshair\x20Image',
    'settings.crosshair.always': 'Always\x20Show',
    'settings.crosshair.color': 'Color',
    'settings.crosshair.shadow': 'Shadow',
    'settings.crosshair.size': 'Size',
    'settings.crosshair.thickness': 'Thickness',
    'settings.onKillS.style.0': 'Default',
    'settings.onKillS.style.1': 'Reduce\x20Resolution',
    'settings.onKillS.style.2': 'Reduce\x20FOV',
    'settings.onKillS.style.3': 'Increase\x20FOV',
    'settings.gameplay.header': 'Gameplay',
    'settings.gameplay.sensitivityX': 'X\x20Sensitivity',
    'settings.gameplay.sensitivityY': 'Y\x20Sensitivity',
    'settings.gameplay.aimsensX': 'Aim\x20X\x20Sensitivity',
    'settings.gameplay.aimsensY': 'Aim\x20Y\x20Sensitivity',
    'settings.gameplay.fov': 'Field\x20of\x20View',
    'settings.gameplay.lagComp': 'Lag\x20Compensation',
    'settings.gameplay.streamer': 'Streamer\x20Mode',
    'settings.gameplay.challenge': 'Challenge\x20Mode',
    'settings.gameplay.invert': 'Invert\x20Y-Axis',
    'settings.gameplay.onkillS': 'On\x20Kill',
    'settings.gameplay.scrollDir': 'Scroll\x20Direction',
    'settings.gameplay.aspectRatio': 'Aspect\x20Ratio',
    'settings.controller.header': 'Controller',
    'settings.controller.sensitivityX': 'X\x20Sensitivity',
    'settings.controller.sensitivityY': 'Y\x20Sensitivity',
    'settings.controller.aimsensX': 'Aim\x20X\x20Sensitivity',
    'settings.controller.aimsensY': 'Aim\x20Y\x20Sensitivity',
    'settings.controller.deadZoneL': 'Dead\x20Zone\x20(Left\x20Stick)',
    'settings.controller.deadZoneR': 'Dead\x20Zone\x20(Right\x20Stick)',
    'settings.controller.triggerThres': 'Trigger\x20Threshold',
    'settings.controller.vibration': 'Vibration',
    'settings.controller.invert': 'Invert\x20Y-Axis',
    'settings.audio.header': 'Audio',
    'settings.audio.sound': 'Sound',
    'settings.audio.voice': 'Voice\x20Volume',
    'settings.viewmodel.header': 'View\x20Model',
    'settings.viewmodel.fps': 'Weapon\x20FOV',
    'settings.viewmodel.bobbing': 'Weapon\x20Bobbing',
    'settings.viewmodel.leaning': 'Weapon\x20Leaning',
    'settings.viewmodel.show.primary': 'Show\x20Primary',
    'settings.viewmodel.show.secondary': 'Show\x20Secondary',
    'settings.viewmodel.show.melee': 'Show\x20Melee',
    'settings.viewmodel.show.ads': 'Hide\x20Weapon\x20on\x20ADS',
    'settings.viewmodel.xOff': 'Weapon\x20X\x20Offset',
    'settings.viewmodel.yOff': 'Weapon\x20Y\x20Offset',
    'settings.viewmodel.zOff': 'Weapon\x20Z\x20Offset',
    'settings.editing.header': 'Editing',
    'settings.editing.health.high': 'HUD\x20Health\x20High',
    'settings.editing.health.low': 'HUD\x20Health\x20Low',
    'settings.editing.score.color': 'Popup\x20Score\x20Color',
    'settings.editing.score.scale': 'Popup\x20Score\x20Scale',
    'settings.editing.score.shadow': 'Popup\x20Score\x20Shadow',
    'settings.editing.scoreOffX': 'Popup\x20Score\x20X\x20Offset',
    'settings.editing.scoreOffY': 'Popup\x20Score\x20Y\x20Offset',
    'settings.editing.saturation': 'Saturation\x20(In-game)',
    'settings.editing.menuSaturation': 'Saturation\x20(UI)',
    'settings.editing.hue': 'Color\x20Hue\x20(In-game)',
    'settings.editing.menuHue': 'Color\x20Hue\x20(UI)',
    'settings.editing.vignette': 'Vignette',
    'settings.editing.chatOp': 'Chat\x20Opacity',
    'settings.editing.chatBGOp': 'Chat\x20BG\x20Opacity',
    'settings.editing.chatHeight': 'Chat\x20Height',
    'settings.editing.chatTextOutline': 'Chat\x20Text\x20Outline',
    'settings.editing.depth': 'Depth\x20Map',
    'settings.editing.green': 'Green\x20Screen',
    'settings.mods.header': 'Customization',
    'settings.mods.load': 'Load\x20Mods',
    'settings.mods.auto': 'Auto-Load\x20Mod',
    'settings.mods.borders': 'Scope\x20Borders',
    'settings.mods.scope': 'Scope\x20Image',
    'settings.mods.scope.paste': 'Scope\x20Image\x20URL',
    'settings.mods.hitmarker': 'Hitmarker\x20Image',
    'settings.mods.hitmarker.paste': 'Hitmarker\x20Image\x20URL',
    'settings.mods.dot': 'Red\x20Dot\x20Image',
    'settings.mods.dot.paste': 'Red\x20Dot\x20URL',
    'settings.mods.endmessage': 'Match\x20End\x20Message',
    'settings.mods.profile': 'Profile\x20Image',
    'settings.mods.profile.paste': 'Profile\x20Image\x20URL',
    'settings.mods.ammo': 'Ammo\x20Icon\x20Image',
    'settings.mods.ammo.paste': 'Ammo\x20Icon\x20Image\x20URL',
    'settings.mods.kills': 'Kills\x20Icon\x20Image',
    'settings.mods.kills.paste': 'Kills\x20Icon\x20Image\x20URL',
    'settings.mods.deaths': 'Deaths\x20Icon\x20Image',
    'settings.mods.deaths.paste': 'Deaths\x20Icon\x20Image\x20URL',
    'settings.mods.streak': 'Streak\x20Counter\x20Icon\x20Image',
    'settings.mods.streak.paste': 'Streak\x20Counter\x20Icon\x20Image\x20URL',
    'settings.mods.timer': 'Timer\x20Icon\x20Image',
    'settings.mods.timer.paste': 'Timer\x20Icon\x20Image\x20URL',
    'settings.mods.usedamage': 'Use\x20Damage\x20Overlay',
    'settings.mods.damage': 'Damage\x20Overlay\x20Image',
    'settings.mods.damage.paste': 'Damage\x20Overlay\x20Image\x20URL',
    'settings.mods.overlay': 'Game\x20Overlay\x20Image',
    'settings.mods.overlay.paste': 'Game\x20Overlay\x20Image\x20URL',
    'windows.settings.header': 'Game\x20Settings',
    'windows.mail.header': 'Krunker\x20Mail',
    'windows.servers.header': 'Server\x20Browser',
    'windows.servers.none': 'No\x20Joinable\x20Games\x20Found...',
    'windows.servers.host': '+\x20Host\x20Game',
    'windows.servers.hide': 'Hide\x20Full',
    'windows.servers.priority': 'Region\x20Priority',
    'windows.servers.online': '{0}\x20total\x20online',
    'windows.loadout.header': 'Change\x20Loadout',
    'windows.loadout.class': 'Class',
    'windows.loadout.primary': 'Primary',
    'windows.loadout.primary.attach': 'Primary\x20Attachments',
    'windows.loadout.secondary': 'Secondary',
    'windows.loadout.melee': 'Melee',
    'windows.loadout.hat': 'Hat',
    'windows.loadout.body': 'Body',
    'windows.loadout.spray': 'Spray',
    'windows.loadout.color.skin': 'Skin\x20Color',
    'windows.mods.header': 'Mod\x20Manager',
    'windows.mods.guide': 'Mod\x20Guide',
    'windows.mods.list': 'Mods\x20List',
    'windows.mods.load.header': 'Load\x20Mods',
    'windows.mods.publish': 'Publish\x20Mod',
    'windows.mods.viewer': 'Viewer',
    'windows.mods.drop': 'drop\x20mod\x20file\x20here\x20or\x20click',
    'windows.mods.paste': 'Paste\x20Mod\x20Url',
    'windows.mods.load': 'Load\x20Mod',
    'windows.mods.none': 'No\x20Mods\x20found',
    'windows.account.header': 'Account',
    'windows.account.recover': 'To\x20recover\x20an\x20account\x20contact\x20<a>krunker@yendis.ch</a>',
    'windows.class.header': 'Select\x20Class',
    'windows.controls.header': 'Change\x20Controls',
    'windows.controls.forward': 'Forward',
    'windows.controls.backward': 'Backward',
    'windows.controls.left': 'Left',
    'windows.controls.right': 'Right',
    'windows.controls.reload': 'Reload',
    'windows.controls.aim': 'Aim',
    'windows.controls.shoot': 'Shoot',
    'windows.controls.inspect': 'Inspect',
    'windows.controls.spray': 'Spray',
    'windows.controls.jump': 'Jump',
    'windows.controls.crouch': 'Crouch',
    'windows.controls.prim': 'Primary\x20Weapon',
    'windows.controls.swap': 'Secondary\x20Weapon',
    'windows.controls.melee': 'Melee\x20Weapon',
    'windows.controls.chat': 'Chat',
    'windows.controls.voice': 'Voice',
    'windows.controls.list': 'Player\x20List',
    'windows.controls.interact': 'Interact',
    'windows.controls.interactSec': 'Secondary\x20Interact',
    'windows.controls.drop': 'Drop',
    'windows.controls.wepVis': 'Toggle\x20Weapon\x20Visibility',
    'windows.controls.streak0': 'Streak\x201',
    'windows.controls.streak1': 'Streak\x202',
    'windows.controls.streak2': 'Streak\x203',
    'windows.controls.streak3': 'Streak\x204',
    'windows.host.header': 'Host\x20Custom\x20Game',
    'windows.host.maps': 'Select\x20Maps',
    'windows.host.cmaps': 'Community\x20Map',
    'windows.host.raw': 'Raw\x20Map\x20Data',
    'windows.host.modes': 'Select\x20Modes',
    'windows.host.classes': 'Select\x20Classes',
    'windows.host.settings': 'Server\x20Settings',
    'windows.host.preset': 'Host\x20Presets',
    'windows.host.preset.load': 'Loading\x20Preset...',
    'windows.host.preset.name': 'Preset\x20name',
    'windows.host.start': 'Start\x20Game',
    'windows.host.rehost': 'Start\x20Game\x20(Bring\x20Players)',
    'windows.spray.header': 'Select\x20Spray',
    'windows.spray.default': 'Default\x20Spray',
    'windows.maps.header': 'Custom\x20Maps',
    'windows.maps.none': 'No\x20maps\x20found!',
    'windows.maps.name': 'Map\x20Name',
    'windows.maps.editor': 'Map\x20Editor',
    'windows.maps.publish': 'Publish\x20Map',
    'windows.maps.community': 'Map\x20Community',
    'windows.publish.map.header': 'Publish\x20Map',
    'windows.publish.map.thumbnail': 'No\x20Thumbnail',
    'windows.publish.map.paste': 'Paste\x20Map\x20Data',
    'windows.publish.map.update': 'Publish/Update',
    'windows.publish.map.login': 'Login</a>\x20to\x20create\x20and\x20upload\x20maps!',
    'windows.theatre.header': 'Theatre\x20Mode',
    'windows.theatre.record': 'Enable\x20Recording',
    'windows.theatre.key': 'Record\x20Key',
    'windows.clans.header': 'Clans',
    'windows.clans.members': 'Members\x20({0})',
    'windows.clans.requests': 'Requests',
    'windows.clans.requests.none': 'No\x20Requests',
    'windows.clans.page': '[{0}]\x20Clan\x20Page',
    'windows.clans.create': 'Create\x20Clan',
    'windows.clans.name': 'Clan\x20Name',
    'windows.clans.view': 'View\x20Clans',
    'windows.clans.join': 'Join\x20Clan',
    'windows.clans.login': 'Login</a>\x20to\x20create\x20and\x20join\x20a\x20clan!',
    'windows.store.header': 'Store',
    'windows.store.spin': '{0}\x20Spin',
    'windows.store.agree': 'By\x20purchasing\x20you\x20agree\x20to\x20the\x20{0}Terms',
    'windows.store.purchase': 'Purchase\x20KR',
    'windows.store.voucher': 'Redeem\x20Voucher',
    'windows.store.voucherinfo': 'Get\x20Vouchers\x20from\x20certain\x20Streamers\x20&\x20Events',
    'windows.store.market': 'Marketplace',
    'windows.store.market2': 'Krunker\x20Market',
    'windows.store.buy': 'Buy\x20and\x20Sell\x20Items\x20on\x20the',
    'windows.store.wheels': 'Prize\x20Wheels',
    'windows.store.unlock': 'Unlock\x20new\x20weapon\x20skins\x20and\x20items',
    'windows.store.amount': '{0}\x20KR\x20in\x20account',
    'windows.store.login': 'Login</a>\x20to\x20buy\x20and\x20unlock\x20items\x20from\x20the\x20store!',
    'windows.store.purchasing': 'Purchasing...',
    'windows.store.unboxed': '{0}{1}\x20unboxed',
    'windows.skin.header': 'Select\x20Skin',
    'windows.hat.header': 'Select\x20Hat',
    'windows.back.header': 'Select\x20Back',
    'windows.melee.header': 'Select\x20Melee',
    'windows.attach.header': 'Select\x20Attachment',
    'windows.mods.community.header': 'Community\x20Mods',
    'windows.mods.community.fav': 'Your\x20Favorites',
    'windows.mods.community.new': 'New\x20Mods',
    'windows.mods.community.hot': 'Hot',
    'windows.mods.community.name': 'Mod\x20Name',
    'windows.mods.community.none': 'No\x20Mods\x20found',
    'windows.publish.mod.header': 'Publish\x20Mod',
    'windows.publish.mod.thumbnail': 'No\x20Thumbnail',
    'windows.publish.mod.name': 'Mod\x20Name',
    'windows.publish.mod.paste': 'Mod\x20Url',
    'windows.publish.mod.update': 'Publish/Update',
    'windows.publish.mod.login': 'Login</a>\x20to\x20create\x20and\x20upload\x20mods!',
    'windows.secondary.header': 'Select\x20Secondary',
    'windows.secondary.unlocked': 'Unlocked\x20at\x20lvl\x20{0}',
    'windows.secondary.req': 'Req\x20lvl\x20{0}',
    'windows.advertise.header': 'Advertise',
    'windows.support.header': 'Support',
    'windows.players.header': 'Player\x20List',
    'windows.players.none': 'No\x20players\x20currently...',
    'windows.join.header': 'Join',
    'windows.join.code': 'Enter\x20Game\x20URL/Code',
    'windows.client.header': 'Client',
    'windows.client.windows': 'Windows\x20Installer',
    'windows.client.mac': 'macOS\x20Installer',
    'windows.client.linux': 'Linux\x20Installer',
    'windows.ranked.header': 'Ranked',
    'windows.ranked.login': 'Login</a>\x20to\x20play\x20in\x20ranked\x20games!',
    'windows.ranked.level': 'You\x20must\x20be\x20at\x20least\x20<span\x20color=\x22black\x22>level\x20{0}</span>\x20to\x20play\x20in\x20ranked\x20games!\x20Right\x20now\x20you\x20are\x20at\x20<span\x20color=\x22black\x22>level\x20{1}</span>.',
    'windows.ranked.mode.r1v1': '1v1',
    'windows.ranked.mode.r2v2': '2v2',
    'windows.ranked.mode.r4v4': '4v4',
    'thumbnail.upload.limit': 'Failed.\x2040kb\x20Thumbnail\x20Limit',
    'thumbnail.upload.error': 'Thumbnail\x20Error',
    'mod.extracting': 'extracting\x20{0}/{1}',
    'mod.disabled': 'mods\x20disabled',
    'mod.error': 'mod\x20error!',
    'mod.loading': 'loading\x20mod...',
    'mod.invalid': 'invalid\x20mod\x20file!',
    'matchmaker.full': 'FULL',
    'matchmaker.full2': 'Game\x20is\x20full.',
    'matchmaker.updating': 'GAME\x20UPDATING',
    'matchmaker.invalid': 'Game\x20not\x20found.',
    'matchmaker.none': 'Servers\x20are\x20at\x20Max\x20Capacity',
    'adblocker': 'Disable\x20your\x20ad\x20blocker\x20to\x20receive\x20free\x20Krunkies.',
    'streamers.views': '{0}\x20viewers',
    'streamers.none': 'No\x20active\x20streams!',
    'error.extentions': 'If\x20you\x20have\x20any\x20extensions,\x20disable\x20them',
    'error.seek': 'Try\x20seeking\x20a\x20new\x20game\x20by\x20clicking',
    'custom.map.missing': 'Select\x20at\x20least\x20one\x20Map',
    'custom.mode.missing': 'Select\x20at\x20least\x20one\x20Mode',
    'custom.class.missing': 'Select\x20at\x20least\x20one\x20Class',
    'server.config.maxPlayers': 'Players',
    'server.config.minPlayers': 'Min\x20Players',
    'server.config.lives': 'Lives',
    'server.config.gameTime': 'Minutes',
    'server.config.gravMlt': 'Gravity',
    'server.config.jumpMlt': 'Jump\x20Force',
    'server.config.deltaMlt': 'Time\x20Scale',
    'server.config.strafeSpd': 'Strafe\x20Speed',
    'server.config.healthMlt': 'Health\x20Multiplier',
    'server.config.impulseMlt': 'Weapon\x20Impulse',
    'server.config.nameTeam1': 'Team\x201\x20Name',
    'server.config.nameTeam2': 'Team\x202\x20Name',
    'server.config.selTeam': 'Select\x20Team',
    'server.config.allowSpect': 'Spectating',
    'server.config.killRewards': 'Kill\x20Rewards',
    'server.config.headshotOnly': 'Headshots\x20Only',
    'server.config.noSecondary': 'Disable\x20Secondaries',
    'server.config.noStreaks': 'Disable\x20Streaks',
    'server.config.canSlide': 'Sliding',
    'server.config.autoJump': 'Auto\x20Jump',
    'server.config.thirdPerson': '3rd\x20Person',
    'server.config.nameTags': 'Hide\x20Nametags',
    'server.config.noReload': 'No\x20Reload',
    'server.config.private': 'Private',
    'server.config.warmupTime': 'Warmup\x20Time',
    'server.config.forceSpawn': 'Auto\x20Respawn\x20Time',
    'server.config.scoreLimit': 'Score\x20Limit',
    'server.config.hitBoxPad': 'Hitbox\x20Scale',
    'server.config.hpRegen': 'Health\x20Regen',
    'social.login': 'Login/Register',
    'social.login.failed': 'Login\x20Failed',
    'social.login.buy': 'Login\x20to\x20Buy',
    'social.login.sell': 'Login\x20to\x20Sell',
    'social.login.gift': 'Login\x20to\x20Gift',
    'social.login.proccessing': 'Logging\x20in...',
    'social.since': 'Since',
    'social.user.maps': 'User\x20Maps',
    'social.user.mods': 'User\x20Mods',
    'social.maps.none': 'No\x20Maps\x20found...',
    'social.market.head': 'Head\x20Item',
    'social.market.back': 'Back\x20Item',
    'social.market.melee': 'Melee\x20Item',
    'social.market.none': 'No\x20Items\x20Found',
    'social.market.login': 'You\x20must\x20be\x20logged\x20in.',
    'social.market.grace': 'ready\x20in\x20{0}',
    'social.market.sort': 'Filter/Sort',
    'social.market.filter': 'Search',
    'social.market.price.high': 'Highest\x20Price',
    'social.market.price.low': 'Lowest\x20Price',
    'social.market.price.list': 'List\x20Price\x20in',
    'social.market.searching': 'Searching',
    'social.market.listed': 'listed\x20{0}\x20ago',
    'social.market.list': 'List\x20Item',
    'social.market.unlist': 'Unlist',
    'social.market.unlisting': 'Unlisting\x20Item...',
    'social.market.posting': 'Posting\x20Item...',
    'social.market.req': 'lvl\x20{0}\x20required',
    'social.market.cant': 'Can\x27t\x20Afford',
    'social.market.purchase': 'Purchase',
    'social.market.fee': 'No\x20List\x20Fee',
    'social.market.failed': 'Failed.\x20Try\x20Again',
    'queue.status.queuing': 'Queuing',
    'queue.status.queued': 'Finding\x20match\x20[{0}\x20in\x20queue]',
    'queue.status.creating-game': 'Creating\x20game',
    'queue.status.host': 'Creating\x20game',
    'queue.status.join': 'Joining\x20game',
    'queue.status.already-queued': 'Already\x20queued\x20in\x20another\x20tab',
    'social.market.gift.amount': 'Gift\x20Amount\x20in',
    'social.market.fee.gift': 'No\x20Fee',
    'social.market.gift': 'Gift\x20KR',
    'social.market.gift.msg': 'Leave\x20a\x20message'
  };
}, function(ctf, ctg) {
  ctf['exports'] = {
    'adblocker': '&#68;&#101;&#115;&#97;&#99;&#116;&#105;&#118;&#97;&#32;&#116;&#117;&#32;&#97;&#100;&#32;&#98;&#108;&#111;&#99;&#107;&#101;&#114;&#32;&#112;&#97;&#114;&#97;&#32;&#114;&#101;&#99;&#105;&#98;&#105;&#114;&#32;&#75;&#114;&#117;&#110;&#107;&#105;&#101;&#115;&#32;&#103;&#114;&#97;&#116;&#105;&#115;&#46;',
    'app.play': '&#67;&#76;&#73;&#67;&#75;&#32;&#80;&#65;&#82;&#65;&#32;&#74;&#85;&#71;&#65;&#82;',
    'app.play.controller': '&#80;&#82;&#69;&#83;&#73;&#79;&#78;&#65;&#32;&#83;&#84;&#65;&#82;&#84;',
    'custom.class.missing': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#32;&#97;&#108;&#32;&#109;&#101;&#110;&#111;&#115;&#32;&#117;&#110;&#97;&#32;&#67;&#108;&#97;&#115;&#101;',
    'custom.map.missing': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#32;&#97;&#108;&#32;&#109;&#101;&#110;&#111;&#115;&#32;&#117;&#110;&#32;&#77;&#97;&#112;&#97;',
    'custom.mode.missing': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#32;&#97;&#108;&#32;&#109;&#101;&#110;&#111;&#115;&#32;&#117;&#110;&#32;&#77;&#111;&#100;&#111;',
    'error.extentions': '&#83;&#105;&#32;&#116;&#105;&#101;&#110;&#101;&#115;&#32;&#101;&#120;&#116;&#101;&#110;&#115;&#105;&#111;&#110;&#101;&#115;&#46;&#32;&#68;&#101;&#115;&#97;&#99;&#116;&#65533;&#118;&#97;&#108;&#97;&#115;',
    'error.seek': '&#73;&#110;&#116;&#101;&#110;&#116;&#97;&#32;&#98;&#117;&#115;&#99;&#97;&#114;&#32;&#117;&#110;&#32;&#110;&#117;&#101;&#118;&#111;&#32;&#106;&#117;&#101;&#103;&#111;&#32;&#104;&#97;&#99;&#105;&#101;&#110;&#100;&#111;&#32;&#99;&#108;&#105;&#99;&#107;',
    'generic.accuracy': '&#80;&#114;&#101;&#99;&#105;&#115;&#105;&#65533;&#110;',
    'generic.clan': '&#67;&#108;&#97;&#110;',
    'generic.connecting': '&#67;&#79;&#78;&#69;&#67;&#84;&#65;&#78;&#68;&#79;&#46;&#46;&#46;',
    'generic.create': '&#67;&#114;&#101;&#97;&#114;',
    'generic.deaths': '&#77;&#117;&#101;&#114;&#116;&#101;&#115;',
    'generic.default': '&#80;&#111;&#114;&#32;&#68;&#101;&#102;&#101;&#99;&#116;&#111;',
    'generic.defeat': '&#68;&#69;&#82;&#82;&#79;&#84;&#65;',
    'generic.delete': '&#69;&#108;&#105;&#109;&#105;&#110;&#97;&#114;',
    'generic.failed': '&#70;&#97;&#108;&#108;&#105;&#100;&#111;',
    'generic.follow': '&#83;&#101;&#103;&#117;&#105;&#114;',
    'generic.followers': '&#83;&#101;&#103;&#117;&#105;&#100;&#111;&#114;&#101;&#115;',
    'generic.following': '&#83;&#105;&#103;&#117;&#105;&#101;&#110;&#100;&#111;',
    'generic.games': '&#74;&#117;&#101;&#103;&#111;&#115;',
    'generic.games.played': '&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#115;&#32;&#74;&#117;&#103;&#97;&#100;&#97;&#115;',
    'generic.games.won': '&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#115;&#32;&#71;&#97;&#110;&#97;&#100;&#97;&#115;',
    'generic.kdr': '&#84;&#65;&#77;',
    'generic.kills': '&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
    'generic.leave': '&#83;&#97;&#108;&#105;&#114;',
    'generic.level': '&#78;&#105;&#118;&#101;&#108;',
    'generic.load': '&#67;&#97;&#114;&#103;&#97;&#114;',
    'generic.loading': '&#67;&#65;&#82;&#71;&#65;&#78;&#68;&#79;&#46;&#46;&#46;',
    'generic.login': '&#73;&#110;&#105;&#99;&#105;&#97;&#114;&#32;&#83;&#101;&#115;&#105;&#65533;&#110;',
    'generic.logout': '&#67;&#101;&#114;&#114;&#97;&#114;&#32;&#83;&#101;&#115;&#105;&#65533;&#110;',
    'generic.logout.sessions': '&#67;&#101;&#114;&#114;&#97;&#114;&#32;&#84;&#111;&#100;&#97;&#115;&#32;&#108;&#97;&#115;&#32;&#83;&#101;&#115;&#105;&#111;&#110;&#101;&#115;',
    'generic.name': '&#78;&#111;&#109;&#98;&#114;&#101;',
    'generic.none': '&#78;&#105;&#110;&#103;&#117;&#110;&#111;',
    'generic.off': '&#79;&#102;&#102;',
    'generic.password': '&#73;&#110;&#103;&#114;&#101;&#115;&#97;&#114;&#32;&#67;&#111;&#110;&#116;&#114;&#97;&#115;&#101;&#65533;&#97;',
    'generic.register': '&#82;&#101;&#103;&#105;&#115;&#116;&#114;&#97;&#114;&#115;&#101;',
    'generic.save': '&#71;&#117;&#97;&#114;&#100;&#97;&#114;',
    'generic.score': '&#80;&#117;&#110;&#116;&#117;&#97;&#99;&#105;&#65533;&#110;',
    'generic.search': '&#66;&#117;&#115;&#99;&#97;&#114;',
    'generic.select': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;',
    'generic.submit': '&#69;&#110;&#116;&#114;&#101;&#103;&#97;&#114;',
    'generic.success': '&#65533;&#65533;&#120;&#105;&#116;&#111;&#33;',
    'generic.time': '&#84;&#105;&#101;&#109;&#112;&#111;',
    'generic.timep': '&#84;&#105;&#101;&#109;&#112;&#111;&#32;&#100;&#101;&#32;&#74;&#117;&#101;&#103;&#111;',
    'generic.unfollow': '&#68;&#101;&#106;&#97;&#114;&#32;&#100;&#101;&#32;&#83;&#101;&#103;&#117;&#105;&#114;',
    'generic.username': '&#73;&#110;&#103;&#114;&#101;&#115;&#97;&#114;&#32;&#85;&#115;&#117;&#97;&#114;&#105;&#111;',
    'generic.victory': '&#86;&#73;&#67;&#84;&#79;&#82;&#73;&#65;',
    'generic.wait': '&#70;&#97;&#118;&#111;&#114;&#32;&#101;&#115;&#112;&#101;&#114;&#97;&#114;&#46;&#46;&#46;',
    'generic.wins': '&#86;&#105;&#99;&#116;&#111;&#114;&#105;&#97;&#115;',
    'leaderboard.empty': '&#76;&#111;&#98;&#98;&#121;&#32;&#86;&#97;&#99;&#65533;&#111;',
    'matchmaker.full': '&#70;&#85;&#76;&#76;',
    'matchmaker.full2': '&#76;&#97;&#32;&#112;&#97;&#114;&#116;&#105;&#100;&#97;&#32;&#101;&#115;&#116;&#65533;&#32;&#102;&#117;&#108;&#108;&#46;',
    'matchmaker.none': '&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#65533;&#32;&#112;&#97;&#114;&#116;&#105;&#100;&#97;&#46;',
    'menu.btn.browser': '&#66;&#117;&#115;&#99;&#97;&#100;&#111;&#114;&#32;&#100;&#101;&#32;&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;&#101;&#115;',
    'menu.btn.customize': '&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#114;',
    'menu.btn.host': '&#83;&#101;&#114;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
    'menu.btn.invite': '&#73;&#110;&#118;&#105;&#116;&#97;&#114;',
    'menu.btn.invite.clicked': '&#67;&#111;&#112;&#105;&#97;&#100;&#111;',
    'menu.btn.join': '&#85;&#110;&#105;&#114;&#115;&#101;',
    'menu.btn.maps': '&#77;&#97;&#112;&#97;&#115;',
    'menu.btn.mods': '&#77;&#111;&#100;&#115;',
    'menu.btn.profile': '&#80;&#101;&#114;&#102;&#105;&#108;',
    'menu.btn.settings': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;',
    'menu.btn.shop': '&#84;&#105;&#101;&#110;&#100;&#97;',
    'menu.btn.social': '&#83;&#111;&#99;&#105;&#97;&#108;',
    'mod.disabled': '&#109;&#111;&#100;&#115;&#32;&#100;&#101;&#115;&#97;&#99;&#116;&#105;&#118;&#97;&#100;&#111;&#115;',
    'mod.error': '&#65533;&#101;&#114;&#114;&#111;&#114;&#32;&#100;&#101;&#32;&#109;&#111;&#100;&#33;',
    'mod.extracting': '&#101;&#120;&#116;&#114;&#97;&#121;&#101;&#110;&#100;&#111;&#32;{0}&#47;{1}',
    'mod.invalid': '&#65533;&#97;&#114;&#99;&#104;&#105;&#118;&#111;&#32;&#100;&#101;&#32;&#109;&#111;&#100;&#32;&#105;&#110;&#118;&#65533;&#108;&#105;&#100;&#111;&#33;',
    'mod.loading': '&#99;&#97;&#114;&#103;&#97;&#110;&#100;&#111;&#32;&#109;&#111;&#100;&#46;&#46;&#46;',
    'player.died': '&#72;&#97;&#115;&#32;&#109;&#117;&#101;&#114;&#116;&#111;',
    'player.disconnect': '&#68;&#69;&#83;&#67;&#79;&#78;&#69;&#67;&#84;&#65;&#68;&#79;',
    'player.inactive': '&#68;&#101;&#115;&#99;&#111;&#110;&#101;&#99;&#116;&#97;&#100;&#111;&#32;&#112;&#111;&#114;&#32;&#105;&#110;&#97;&#99;&#116;&#105;&#118;&#105;&#100;&#97;&#100;',
    'player.killed': '&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#100;&#111;&#32;&#80;&#111;&#114;',
    'player.killstreak': '{0}&#32;&#116;&#105;&#101;&#110;&#101;&#32;&#82;&#97;&#99;&#104;&#97;&#32;&#100;&#101;&#32;{1}&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
    'player.waiting': '&#101;&#115;&#112;&#101;&#114;&#97;&#110;&#100;&#111;&#32;&#106;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
    'popup.checkpoint': '&#65533;&#67;&#104;&#101;&#99;&#107;&#112;&#111;&#105;&#110;&#116;&#33;',
    'purchase.error': '&#79;&#99;&#117;&#114;&#114;&#105;&#65533;&#32;&#117;&#110;&#32;&#101;&#114;&#114;&#111;&#114;',
    'purchase.error.click': '&#65533;&#99;&#108;&#105;&#99;&#107;&#32;&#97;&#113;&#117;&#65533;&#60;&#47;&#97;&#62;&#32;&#101;&#32;&#105;&#110;&#116;&#65533;&#110;&#116;&#97;&#108;&#111;&#32;&#100;&#101;&#32;&#110;&#117;&#101;&#118;&#111;&#33;',
    'purchase.error.limit': '&#69;&#115;&#32;&#112;&#111;&#115;&#105;&#98;&#108;&#101;&#32;&#113;&#117;&#101;&#32;&#104;&#97;&#121;&#97;&#115;&#32;&#101;&#120;&#99;&#101;&#100;&#105;&#100;&#111;&#32;&#116;&#117;&#32;&#108;&#65533;&#109;&#105;&#116;&#101;&#32;&#100;&#105;&#97;&#114;&#105;&#111;&#32;&#100;&#101;&#32;&#116;&#114;&#97;&#110;&#115;&#97;&#99;&#99;&#105;&#111;&#110;&#101;&#115;',
    'server.config.allowSpect': '&#69;&#115;&#112;&#101;&#99;&#116;&#97;&#114;',
    'server.config.autoJump': '&#65;&#117;&#116;&#111;&#32;&#83;&#97;&#108;&#116;&#97;&#114;',
    'server.config.canSlide': '&#68;&#101;&#115;&#108;&#105;&#122;&#97;&#114;',
    'server.config.deltaMlt': '&#69;&#115;&#99;&#97;&#108;&#97;&#32;&#100;&#101;&#32;&#84;&#105;&#101;&#109;&#112;&#111;',
    'server.config.gameTime': '&#77;&#105;&#110;&#117;&#116;&#111;&#115;',
    'server.config.gravMlt': '&#71;&#114;&#97;&#118;&#101;&#100;&#97;&#100;',
    'server.config.healthMlt': '&#77;&#117;&#108;&#116;&#105;&#112;&#108;&#105;&#99;&#97;&#100;&#111;&#114;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#86;&#105;&#100;&#97;',
    'server.config.impulseMlt': '&#73;&#109;&#112;&#117;&#108;&#115;&#111;&#32;&#100;&#101;&#32;&#65;&#114;&#109;&#97;',
    'server.config.jumpMlt': '&#73;&#110;&#116;&#101;&#110;&#115;&#105;&#100;&#97;&#100;&#32;&#100;&#101;&#32;&#83;&#97;&#108;&#116;&#111;&#115;',
    'server.config.killRewards': '&#82;&#101;&#99;&#111;&#109;&#112;&#101;&#110;&#115;&#97;&#32;&#112;&#111;&#114;&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
    'server.config.lives': '&#86;&#105;&#100;&#97;&#115;',
    'server.config.maxPlayers': '&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
    'server.config.minPlayers': '&#77;&#65533;&#110;&#105;&#109;&#111;&#32;&#100;&#101;&#32;&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
    'server.config.nameTags': '&#69;&#115;&#99;&#111;&#110;&#100;&#101;&#114;&#32;&#83;&#101;&#65533;&#97;&#108;&#32;&#100;&#101;&#108;&#32;&#78;&#111;&#109;&#98;&#114;&#101;',
    'server.config.nameTeam1': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#69;&#113;&#117;&#105;&#112;&#111;&#32;&#49;',
    'server.config.nameTeam2': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#69;&#113;&#117;&#105;&#112;&#111;&#32;&#50;',
    'server.config.private': '&#80;&#114;&#105;&#118;&#97;&#100;&#111;',
    'server.config.selTeam': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#69;&#113;&#117;&#105;&#112;&#111;',
    'server.config.strafeSpd': '&#86;&#101;&#108;&#111;&#99;&#105;&#100;&#97;&#100;&#32;&#100;&#101;&#32;&#82;&#65533;&#102;&#97;&#103;&#97;',
    'server.config.thirdPerson': '&#51;&#114;&#97;&#32;&#80;&#101;&#114;&#115;&#111;&#110;&#97;',
    'settings.audio.header': '&#65;&#117;&#100;&#105;&#111;',
    'settings.audio.sound': '&#83;&#111;&#110;&#105;&#100;&#111;',
    'settings.audio.voice': '&#86;&#111;&#108;&#117;&#109;&#101;&#110;&#32;&#100;&#101;&#32;&#86;&#111;&#99;&#101;&#115;',
    'settings.controls.change': '&#67;&#97;&#109;&#98;&#105;&#97;&#114;&#32;&#67;&#111;&#110;&#116;&#114;&#111;&#108;&#101;&#115;',
    'settings.controls.press': '&#80;&#114;&#101;&#115;&#105;&#111;&#110;&#97;&#32;&#99;&#117;&#97;&#108;&#113;&#117;&#105;&#101;&#114;&#32;&#84;&#101;&#99;&#108;&#97;',
    'settings.crosshair.always': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#83;&#105;&#101;&#109;&#112;&#114;&#101;',
    'settings.crosshair.color': '&#67;&#111;&#108;&#111;&#114;',
    'settings.crosshair.header': '&#82;&#101;&#116;&#65533;&#99;&#117;&#108;&#111;',
    'settings.crosshair.image': '&#73;&#109;&#97;&#103;&#101;&#110;',
    'settings.crosshair.image.paste': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#82;&#101;&#116;&#65533;&#99;&#117;&#108;&#111;',
    'settings.crosshair.shadow': '&#83;&#111;&#109;&#98;&#114;&#97;',
    'settings.crosshair.size': '&#84;&#97;&#109;&#97;&#65533;&#111;',
    'settings.crosshair.style': '&#69;&#115;&#116;&#105;&#108;&#111;',
    'settings.crosshair.style.0': '&#67;&#114;&#117;&#122;',
    'settings.crosshair.style.1': '&#67;&#65533;&#114;&#99;&#117;&#108;&#111;&#32;&#86;&#97;&#99;&#65533;&#111;',
    'settings.crosshair.style.2': '&#67;&#65533;&#114;&#99;&#117;&#108;&#111;&#32;&#77;&#97;&#99;&#105;&#122;&#111;',
    'settings.crosshair.style.3': '&#67;&#117;&#97;&#100;&#114;&#97;&#100;&#111;&#32;&#86;&#97;&#99;&#65533;&#111;',
    'settings.crosshair.style.4': '&#67;&#117;&#97;&#100;&#114;&#97;&#100;&#111;&#32;&#77;&#97;&#99;&#105;&#122;&#111;',
    'settings.crosshair.thickness': '&#71;&#114;&#111;&#115;&#111;&#114;',
    'settings.crosshair.type': '&#84;&#105;&#112;&#111;',
    'settings.crosshair.type.2': '&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#100;&#111;',
    'settings.crosshair.type.3': '&#80;&#111;&#114;&#32;&#67;&#97;&#112;&#97;&#115;',
    'settings.crosshair.type.4': '&#73;&#109;&#97;&#103;&#101;&#110;',
    'settings.editing.bobbing': '&#68;&#101;&#115;&#99;&#117;&#97;&#100;&#114;&#101;&#32;&#100;&#101;&#32;&#65;&#112;&#117;&#110;&#116;&#101;',
    'settings.editing.depth': '&#77;&#97;&#112;&#97;&#32;&#100;&#101;&#32;&#80;&#114;&#111;&#102;&#117;&#110;&#100;&#105;&#100;&#97;&#100;',
    'settings.editing.green': '&#80;&#97;&#110;&#116;&#97;&#108;&#108;&#97;&#32;&#86;&#101;&#114;&#100;&#101;',
    'settings.editing.header': '&#69;&#100;&#105;&#99;&#105;&#65533;&#110;',
    'settings.editing.weapon': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#65;&#114;&#109;&#97;',
    'settings.gameplay.aimsens': '&#83;&#101;&#110;&#115;&#105;&#98;&#105;&#108;&#105;&#100;&#97;&#100;&#32;&#97;&#108;&#32;&#65;&#112;&#117;&#110;&#116;&#97;&#114;',
    'settings.gameplay.challenge': '&#77;&#111;&#100;&#111;&#32;&#67;&#104;&#97;&#108;&#108;&#101;&#110;&#103;&#101;',
    'settings.gameplay.fov': '&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;',
    'settings.gameplay.fps': '&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;&#32;&#100;&#101;&#32;&#65;&#114;&#109;&#97;',
    'settings.gameplay.header': '&#74;&#117;&#103;&#97;&#98;&#105;&#108;&#105;&#100;&#97;&#100;',
    'settings.gameplay.invert': '&#73;&#110;&#118;&#101;&#114;&#116;&#105;&#114;&#32;&#69;&#106;&#101;&#32;&#89;',
    'settings.gameplay.onkillS': '&#65;&#108;&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#114;',
    'settings.gameplay.sensitivity': '&#83;&#101;&#110;&#115;&#105;&#98;&#105;&#108;&#105;&#100;&#97;&#100;',
    'settings.gameplay.streamer': '&#77;&#111;&#100;&#111;&#32;&#83;&#116;&#114;&#101;&#97;&#109;&#101;&#114;',
    'settings.interface.chat': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#67;&#97;&#106;&#97;&#32;&#100;&#101;&#32;&#67;&#104;&#97;&#116;',
    'settings.interface.deaths': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#77;&#117;&#101;&#114;&#116;&#101;&#115;',
    'settings.interface.fps': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#70;&#80;&#83;',
    'settings.interface.header': '&#73;&#110;&#116;&#101;&#114;&#102;&#97;&#122;',
    'settings.interface.hp': '&#66;&#97;&#114;&#114;&#97;&#115;&#32;&#68;&#105;&#110;&#65533;&#109;&#105;&#99;&#97;&#115;&#32;&#100;&#101;&#32;&#72;&#80;',
    'settings.interface.kills': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#72;&#105;&#115;&#116;&#111;&#114;&#105;&#97;&#108;&#32;&#100;&#101;&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
    'settings.interface.messages': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#65;&#112;&#101;&#114;&#116;&#117;&#114;&#97;&#115;&#32;&#100;&#101;&#32;&#67;&#97;&#106;&#97;&#115;',
    'settings.interface.ping': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#80;&#73;&#78;&#71;',
    'settings.interface.ui': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#73;&#110;&#116;&#101;&#114;&#102;&#97;&#122;',
    'settings.mods.auto': '&#65;&#117;&#116;&#111;&#45;&#67;&#97;&#114;&#103;&#97;&#114;&#32;&#77;&#111;&#100;',
    'settings.mods.borders': '&#66;&#111;&#114;&#100;&#101;&#115;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#77;&#105;&#114;&#105;&#108;&#108;&#97;',
    'settings.mods.dot': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#117;&#110;&#116;&#111;&#32;&#82;&#111;&#106;&#111;',
    'settings.mods.dot.paste': '&#85;&#82;&#76;&#32;&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#117;&#110;&#116;&#111;&#32;&#82;&#111;&#106;&#111;',
    'settings.mods.endmessage': '&#77;&#101;&#110;&#115;&#97;&#106;&#101;&#32;&#70;&#105;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
    'settings.mods.header': '&#77;&#111;&#100;&#115;',
    'settings.mods.load': '&#67;&#97;&#114;&#103;&#97;&#114;&#32;&#77;&#111;&#100;&#115;',
    'settings.mods.profile': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#101;&#114;&#102;&#105;&#108;',
    'settings.mods.profile.paste': '&#85;&#82;&#76;&#32;&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#101;&#114;&#102;&#105;&#108;',
    'settings.mods.scope': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#32;&#77;&#105;&#114;&#105;&#108;&#108;&#97;',
    'settings.mods.scope.paste': '&#85;&#82;&#76;&#32;&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#77;&#105;&#114;&#105;&#108;&#97;',
    'settings.onKillS.style.0': '&#80;&#111;&#114;&#32;&#68;&#101;&#102;&#101;&#99;&#116;&#111;',
    'settings.onKillS.style.1': '&#82;&#101;&#100;&#117;&#99;&#105;&#114;&#32;&#82;&#101;&#115;&#111;&#108;&#117;&#99;&#105;&#65533;&#110;',
    'settings.onKillS.style.2': '&#82;&#101;&#100;&#117;&#99;&#105;&#114;&#32;&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;',
    'settings.onKillS.style.3': '&#65;&#117;&#109;&#101;&#110;&#116;&#97;&#114;&#32;&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;',
    'settings.quality.header': '&#67;&#97;&#108;&#105;&#100;&#97;&#100;',
    'settings.quality.mflash': '&#67;&#111;&#109;&#98;&#117;&#115;&#116;&#105;&#65533;&#110;',
    'settings.quality.part': '&#80;&#97;&#114;&#116;&#65533;&#99;&#117;&#108;&#97;&#115;',
    'settings.quality.res': '&#82;&#101;&#115;&#111;&#108;&#117;&#99;&#105;&#65533;&#110;',
    'settings.quality.trails': '&#82;&#97;&#115;&#116;&#114;&#111;&#115;&#32;&#100;&#101;&#32;&#66;&#97;&#108;&#97;',
    'settings.reset': '&#82;&#101;&#115;&#116;&#97;&#98;&#108;&#101;&#99;&#101;&#114;&#32;&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;',
    'settings.reset.confirm': '&#65533;&#69;&#115;&#116;&#65533;&#115;&#32;&#115;&#101;&#103;&#117;&#114;&#111;&#32;&#100;&#101;&#32;&#113;&#117;&#101;&#114;&#101;&#114;&#32;&#114;&#101;&#115;&#116;&#97;&#98;&#108;&#101;&#99;&#101;&#114;&#32;&#116;&#111;&#100;&#97;&#115;&#32;&#116;&#117;&#115;&#32;&#99;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#63;&#32;&#69;&#115;&#116;&#111;&#32;&#116;&#97;&#109;&#98;&#105;&#65533;&#110;&#32;&#118;&#111;&#108;&#118;&#101;&#114;&#65533;&#32;&#97;&#32;&#99;&#97;&#114;&#103;&#97;&#114;&#32;&#108;&#97;&#32;&#112;&#65533;&#103;&#105;&#110;&#97;',
    'settings.server.header': '&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;&#101;&#115;',
    'settings.server.region': '&#82;&#101;&#103;&#105;&#65533;&#110;&#32;&#112;&#111;&#114;&#32;&#100;&#101;&#102;&#101;&#99;&#116;&#111;',
    'settings.shaders.ambient': '&#83;&#111;&#109;&#98;&#114;&#101;&#111;&#32;&#100;&#101;&#32;&#65;&#109;&#98;&#105;&#101;&#110;&#116;&#101;',
    'settings.shaders.header': '&#83;&#111;&#109;&#98;&#114;&#101;&#97;&#100;&#111;&#114;&#101;&#115;',
    'social.login': '&#73;&#110;&#105;&#99;&#105;&#97;&#114;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#47;&#82;&#101;&#103;&#105;&#115;&#116;&#114;&#97;&#114;&#115;&#101;',
    'social.login.buy': '&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#32;&#112;&#97;&#114;&#97;&#32;&#67;&#111;&#109;&#112;&#114;&#97;&#114;',
    'social.login.failed': '&#73;&#110;&#105;&#99;&#105;&#111;&#32;&#100;&#101;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#32;&#102;&#97;&#108;&#108;&#105;&#100;&#111;',
    'social.login.proccessing': '&#73;&#110;&#105;&#99;&#105;&#97;&#110;&#100;&#111;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#46;&#46;&#46;',
    'social.login.sell': '&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#32;&#112;&#97;&#114;&#97;&#32;&#86;&#101;&#110;&#100;&#101;&#114;',
    'social.maps.none': '&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#77;&#97;&#112;&#97;&#115;&#46;&#46;&#46;',
    'social.market.back': '&#73;&#116;&#101;&#109;&#32;&#100;&#101;&#32;&#69;&#115;&#112;&#97;&#108;&#100;&#97;',
    'social.market.cant': '&#83;&#97;&#108;&#100;&#111;&#32;&#73;&#110;&#115;&#117;&#102;&#105;&#99;&#105;&#101;&#110;&#116;&#101;',
    'social.market.failed': '&#70;&#97;&#108;&#108;&#105;&#100;&#111;&#46;&#32;&#73;&#110;&#116;&#101;&#110;&#116;&#97;&#32;&#100;&#101;&#32;&#110;&#117;&#101;&#118;&#111;',
    'social.market.fee': '&#83;&#105;&#110;&#32;&#67;&#111;&#115;&#116;&#111;&#32;&#100;&#101;&#32;&#73;&#110;&#99;&#108;&#117;&#105;&#114;',
    'social.market.filter': '&#66;&#117;&#115;&#99;&#97;',
    'social.market.grace': '&#108;&#105;&#115;&#116;&#111;&#32;&#101;&#110;&#32;{0}',
    'social.market.head': '&#73;&#116;&#101;&#109;&#32;&#100;&#101;&#32;&#67;&#97;&#98;&#101;&#122;&#97;',
    'social.market.list': '&#73;&#116;&#101;&#109;&#32;&#100;&#101;&#32;&#76;&#105;&#115;&#116;&#97;',
    'social.market.listed': '&#105;&#110;&#99;&#108;&#117;&#105;&#100;&#111;&#32;&#104;&#97;&#99;&#101;&#32;{0}',
    'social.market.none': '&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#73;&#116;&#101;&#109;&#115;',
    'social.market.posting': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#110;&#100;&#111;&#32;&#73;&#116;&#101;&#109;&#46;&#46;&#46;',
    'social.market.price.high': '&#80;&#114;&#101;&#99;&#105;&#111;&#32;&#109;&#65533;&#115;&#32;&#97;&#108;&#116;&#111;',
    'social.market.price.list': '&#76;&#105;&#115;&#116;&#97;&#114;&#32;&#80;&#114;&#101;&#99;&#105;&#111;&#32;&#101;&#110;',
    'social.market.price.low': '&#80;&#114;&#101;&#99;&#105;&#111;&#32;&#109;&#65533;&#115;&#32;&#98;&#97;&#106;&#111;',
    'social.market.purchase': '&#67;&#111;&#109;&#112;&#114;&#97;&#114;',
    'social.market.req': '&#78;&#118;&#108;&#32;{0}&#32;&#114;&#101;&#113;&#117;&#101;&#114;&#105;&#100;&#111;',
    'social.market.searching': '&#66;&#117;&#115;&#99;&#97;&#110;&#100;&#111;',
    'social.market.sort': '&#70;&#105;&#108;&#116;&#114;&#97;&#114;&#47;&#79;&#114;&#103;&#97;&#110;&#105;&#122;&#97;&#114;',
    'social.market.unlist': '&#69;&#120;&#99;&#108;&#117;&#105;&#114;',
    'social.market.unlisting': '&#69;&#120;&#99;&#108;&#117;&#121;&#101;&#110;&#100;&#111;&#32;&#73;&#116;&#101;&#109;&#46;&#46;&#46;',
    'social.since': '&#68;&#101;&#115;&#100;&#101;',
    'social.user.maps': '&#77;&#97;&#112;&#97;&#115;&#32;&#100;&#101;&#32;&#85;&#115;&#117;&#97;&#114;&#105;&#111;&#115;',
    'social.user.mods': '&#77;&#111;&#100;&#115;&#32;&#100;&#101;&#32;&#85;&#115;&#117;&#97;&#114;&#105;&#111;&#115;',
    'streamers.none': '&#65533;&#78;&#111;&#32;&#104;&#97;&#121;&#32;&#115;&#116;&#114;&#101;&#97;&#109;&#115;&#32;&#97;&#99;&#116;&#105;&#118;&#111;&#115;&#33;',
    'streamers.views': '{0}&#32;&#118;&#101;&#115;&#112;&#101;&#99;&#116;&#97;&#100;&#111;&#114;&#101;&#115;',
    'thumbnail.upload.error': '&#69;&#114;&#114;&#111;&#114;&#32;&#100;&#101;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;',
    'thumbnail.upload.limit': '&#69;&#114;&#114;&#111;&#114;&#46;&#32;&#76;&#65533;&#109;&#105;&#116;&#101;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;&#32;&#100;&#101;&#32;&#52;&#48;&#107;&#98;',
    'timer.end': '&#80;&#114;&#65533;&#120;&#105;&#109;&#97;&#32;&#82;&#111;&#110;&#100;&#97;&#32;&#101;&#110;&#32;{0}',
    'windows.account.header': '&#67;&#117;&#101;&#110;&#116;&#97;',
    'windows.account.recover': '&#80;&#97;&#114;&#97;&#32;&#114;&#101;&#99;&#117;&#112;&#101;&#114;&#97;&#114;&#32;&#117;&#110;&#97;&#32;&#99;&#117;&#101;&#110;&#116;&#97;&#44;&#32;&#99;&#111;&#110;&#116;&#97;&#99;&#116;&#97;&#114;&#32;&#97;&#32;&#60;&#97;&#62;&#107;&#114;&#117;&#110;&#107;&#101;&#114;&#64;&#121;&#101;&#110;&#100;&#105;&#115;&#46;&#99;&#104;&#60;&#47;&#97;&#62;',
    'windows.advertise.header': '&#65;&#110;&#117;&#110;&#99;&#105;&#97;&#114;',
    'windows.back.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#69;&#115;&#112;&#97;&#108;&#100;&#97;',
    'windows.clans.create': '&#67;&#114;&#101;&#97;&#114;&#32;&#67;&#108;&#97;&#110;',
    'windows.clans.header': '&#67;&#108;&#97;&#110;&#101;&#115;',
    'windows.clans.join': '&#85;&#110;&#105;&#114;&#115;&#101;&#32;&#97;&#32;&#67;&#108;&#97;&#110;',
    'windows.clans.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#114;&#101;&#97;&#114;&#32;&#117;&#110;&#32;&#99;&#108;&#97;&#110;&#32;&#111;&#32;&#117;&#110;&#105;&#114;&#116;&#101;&#32;&#97;&#32;&#117;&#110;&#111;&#33;',
    'windows.clans.members': '&#77;&#105;&#101;&#109;&#98;&#114;&#111;&#115;&#32;&#40;{0}&#41;',
    'windows.clans.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#67;&#108;&#97;&#110;',
    'windows.clans.page': '&#91;{0}&#93;&#32;&#80;&#65533;&#103;&#105;&#110;&#97;&#32;&#100;&#101;&#108;&#32;&#67;&#108;&#97;&#110;',
    'windows.clans.requests': '&#83;&#111;&#108;&#105;&#99;&#105;&#116;&#117;&#100;&#101;&#115;',
    'windows.clans.requests.none': '&#78;&#111;&#32;&#72;&#97;&#121;&#32;&#83;&#111;&#108;&#105;&#99;&#105;&#116;&#117;&#100;&#101;&#115;',
    'windows.clans.view': '&#86;&#101;&#114;&#32;&#67;&#108;&#97;&#110;&#101;&#115;',
    'windows.class.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#67;&#108;&#97;&#115;&#101;',
    'windows.client.header': '&#67;&#108;&#105;&#101;&#110;&#116;&#101;',
    'windows.client.linux': '&#73;&#110;&#115;&#116;&#97;&#108;&#97;&#100;&#111;&#114;&#32;&#76;&#105;&#110;&#117;&#120;',
    'windows.client.mac': '&#73;&#110;&#115;&#116;&#97;&#108;&#97;&#100;&#111;&#114;&#32;&#109;&#97;&#99;&#79;&#83;',
    'windows.client.windows': '&#73;&#110;&#115;&#116;&#97;&#108;&#97;&#100;&#111;&#114;&#32;&#87;&#105;&#110;&#100;&#111;&#119;&#115;',
    'windows.controls.aim': '&#65;&#112;&#117;&#110;&#116;&#97;&#114;',
    'windows.controls.backward': '&#65;&#116;&#114;&#65533;&#115;',
    'windows.controls.chat': '&#67;&#104;&#97;&#116;',
    'windows.controls.crouch': '&#65;&#103;&#97;&#99;&#104;&#97;&#114;&#115;&#101;',
    'windows.controls.drop': '&#83;&#111;&#108;&#116;&#97;&#114;',
    'windows.controls.forward': '&#65;&#100;&#101;&#108;&#97;&#110;&#116;&#101;',
    'windows.controls.header': '&#67;&#97;&#109;&#98;&#105;&#97;&#114;&#32;&#67;&#111;&#110;&#116;&#114;&#111;&#108;&#101;&#115;',
    'windows.controls.inspect': '&#73;&#110;&#115;&#112;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;',
    'windows.controls.interact': '&#73;&#110;&#116;&#101;&#114;&#97;&#99;&#116;&#117;&#97;&#114;',
    'windows.controls.jump': '&#83;&#97;&#108;&#116;&#97;&#114;',
    'windows.controls.left': '&#73;&#122;&#113;&#117;&#105;&#101;&#114;&#100;&#97;',
    'windows.controls.list': '&#76;&#105;&#115;&#116;&#97;&#32;&#100;&#101;&#32;&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
    'windows.controls.next': '&#65;&#114;&#109;&#97;&#32;&#83;&#105;&#103;&#117;&#105;&#101;&#110;&#116;&#101;',
    'windows.controls.previous': '&#65;&#114;&#109;&#97;&#32;&#65;&#110;&#116;&#101;&#114;&#105;&#111;&#114;',
    'windows.controls.reload': '&#82;&#101;&#99;&#97;&#114;&#103;&#97;&#114;',
    'windows.controls.right': '&#68;&#101;&#114;&#101;&#99;&#104;&#97;',
    'windows.controls.spray': '&#83;&#112;&#114;&#97;&#121;',
    'windows.controls.voice': '&#86;&#111;&#122;',
    'windows.hat.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#67;&#97;&#98;&#101;&#122;&#97;',
    'windows.host.classes': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#67;&#108;&#97;&#115;&#101;&#115;',
    'windows.host.cmaps': '&#77;&#97;&#112;&#97;&#32;&#67;&#111;&#109;&#117;&#110;&#105;&#116;&#97;&#114;&#105;&#111;',
    'windows.host.header': '&#83;&#101;&#114;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#65533;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#32;&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#100;&#97;',
    'windows.host.maps': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#77;&#97;&#112;&#97;&#115;',
    'windows.host.modes': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#77;&#111;&#100;&#111;&#115;',
    'windows.host.preset': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#80;&#114;&#101;&#118;&#105;&#97;&#115;&#32;&#100;&#101;&#108;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#65533;&#110;',
    'windows.host.preset.load': '&#67;&#97;&#114;&#103;&#97;&#110;&#100;&#111;&#32;&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#80;&#114;&#101;&#118;&#105;&#97;&#115;&#46;&#46;&#46;',
    'windows.host.preset.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#32;&#108;&#97;&#115;&#32;&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#80;&#114;&#101;&#118;&#105;&#97;&#115;',
    'windows.host.raw': '&#68;&#97;&#116;&#111;&#115;&#32;&#110;&#111;&#32;&#112;&#114;&#111;&#99;&#101;&#115;&#97;&#100;&#111;&#115;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;',
    'windows.host.settings': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#65533;&#110;&#32;&#100;&#101;&#108;&#32;&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;',
    'windows.host.start': '&#73;&#110;&#105;&#99;&#105;&#97;&#114;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
    'windows.join.code': '&#73;&#110;&#103;&#114;&#101;&#115;&#97;&#114;&#32;&#85;&#82;&#76;&#47;&#67;&#65533;&#100;&#105;&#103;&#111;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
    'windows.join.header': '&#85;&#110;&#105;&#114;&#115;&#101;',
    'windows.loadout.body': '&#67;&#117;&#101;&#114;&#112;&#111;',
    'windows.loadout.class': '&#67;&#108;&#97;&#115;&#101;',
    'windows.loadout.hat': '&#67;&#97;&#98;&#101;&#122;&#97;',
    'windows.loadout.header': '&#67;&#97;&#109;&#98;&#105;&#97;&#114;&#32;&#76;&#111;&#97;&#100;&#111;&#117;&#116;',
    'windows.loadout.melee': '&#77;&#101;&#108;&#101;&#101;',
    'windows.loadout.primary': '&#80;&#114;&#105;&#109;&#97;&#114;&#105;&#97;',
    'windows.loadout.secondary': '&#83;&#101;&#99;&#117;&#110;&#100;&#97;&#114;&#105;&#97;',
    'windows.loadout.spray': '&#83;&#112;&#114;&#97;&#121;',
    'windows.maps.community': '&#67;&#111;&#109;&#117;&#110;&#105;&#100;&#97;&#100;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;&#115;',
    'windows.maps.editor': '&#69;&#100;&#105;&#116;&#111;&#114;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;&#115;',
    'windows.maps.header': '&#77;&#97;&#112;&#97;&#115;&#32;&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#100;&#111;&#115;',
    'windows.maps.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#77;&#97;&#112;&#97;',
    'windows.maps.none': '&#65533;&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#109;&#97;&#112;&#97;&#115;&#33;',
    'windows.maps.publish': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#97;&#112;&#97;',
    'windows.mods.community.fav': '&#84;&#117;&#115;&#32;&#70;&#97;&#118;&#111;&#114;&#105;&#116;&#111;&#115;',
    'windows.mods.community.header': '&#77;&#111;&#100;&#115;&#32;&#67;&#111;&#109;&#117;&#110;&#105;&#116;&#97;&#114;&#105;&#111;&#115;',
    'windows.mods.community.hot': '&#72;&#111;&#116;',
    'windows.mods.community.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#77;&#111;&#100;',
    'windows.mods.community.new': '&#77;&#111;&#100;&#115;&#32;&#78;&#117;&#101;&#118;&#111;&#115;',
    'windows.mods.community.none': '&#65533;&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#77;&#111;&#100;&#115;&#33;',
    'windows.mods.drop': '&#97;&#114;&#114;&#97;&#115;&#116;&#97;&#114;&#32;&#97;&#114;&#99;&#104;&#105;&#118;&#111;&#32;&#100;&#101;&#32;&#109;&#111;&#100;&#32;&#97;&#113;&#117;&#65533;&#32;&#111;&#32;&#99;&#108;&#105;&#99;&#107;',
    'windows.mods.guide': '&#71;&#117;&#65533;&#97;&#32;&#100;&#101;&#32;&#77;&#111;&#100;&#115;',
    'windows.mods.header': '&#71;&#101;&#115;&#116;&#111;&#114;&#32;&#100;&#101;&#32;&#77;&#111;&#100;&#115;',
    'windows.mods.list': '&#76;&#105;&#115;&#116;&#97;&#32;&#100;&#101;&#32;&#77;&#111;&#100;&#115;',
    'windows.mods.load': '&#67;&#97;&#114;&#103;&#97;&#114;&#32;&#77;&#111;&#100;',
    'windows.mods.paste': '&#80;&#101;&#103;&#97;&#114;&#32;&#85;&#114;&#108;&#32;&#100;&#101;&#32;&#77;&#111;&#100;',
    'windows.mods.publish': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#111;&#100;',
    'windows.mods.viewer': '&#86;&#105;&#115;&#116;&#97;',
    'windows.players.header': '&#76;&#105;&#115;&#116;&#97;&#32;&#100;&#101;&#32;&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
    'windows.players.none': '&#78;&#111;&#32;&#104;&#97;&#121;&#32;&#106;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;&#32;&#97;&#99;&#116;&#117;&#97;&#108;&#109;&#101;&#110;&#116;&#101;&#46;&#46;&#46;',
    'windows.publish.map.header': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#97;&#112;&#97;',
    'windows.publish.map.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#114;&#101;&#97;&#114;&#32;&#121;&#32;&#115;&#117;&#98;&#105;&#114;&#32;&#109;&#97;&#112;&#97;&#115;&#33;',
    'windows.publish.map.paste': '&#80;&#101;&#103;&#97;&#114;&#32;&#68;&#97;&#116;&#111;&#115;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;',
    'windows.publish.map.thumbnail': '&#83;&#105;&#110;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;',
    'windows.publish.map.update': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#47;&#65;&#99;&#116;&#117;&#97;&#108;&#105;&#122;&#97;&#114;',
    'windows.publish.mod.header': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#111;&#100;',
    'windows.publish.mod.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#114;&#101;&#97;&#114;&#32;&#121;&#32;&#115;&#117;&#98;&#105;&#114;&#32;&#109;&#111;&#100;&#115;&#33;',
    'windows.publish.mod.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#77;&#111;&#100;',
    'windows.publish.mod.paste': '&#85;&#114;&#108;&#32;&#100;&#101;&#108;&#32;&#77;&#111;&#100;',
    'windows.publish.mod.thumbnail': '&#83;&#105;&#110;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;',
    'windows.publish.mod.update': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#47;&#65;&#99;&#116;&#117;&#97;&#108;&#105;&#122;&#97;&#114;',
    'windows.secondary.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#83;&#101;&#99;&#117;&#110;&#100;&#97;&#114;&#105;&#111;',
    'windows.secondary.req': '&#78;&#118;&#108;&#32;&#82;&#101;&#113;&#32;{0}',
    'windows.secondary.unlocked': '&#68;&#101;&#115;&#98;&#108;&#111;&#113;&#117;&#101;&#97;&#100;&#111;&#32;&#101;&#110;&#32;&#101;&#108;&#32;&#78;&#118;&#108;&#32;{0}',
    'windows.servers.header': '&#66;&#117;&#115;&#99;&#97;&#100;&#111;&#114;&#32;&#100;&#101;&#32;&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;&#101;&#115;',
    'windows.servers.hide': '&#72;&#105;&#100;&#101;&#32;&#70;&#117;&#108;&#108;',
    'windows.servers.host': '&#43;&#32;&#83;&#101;&#114;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#65533;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
    'windows.servers.none': '&#78;&#111;&#32;&#72;&#97;&#121;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#115;&#32;&#112;&#97;&#114;&#97;&#32;&#85;&#110;&#105;&#114;&#115;&#101;&#46;&#46;&#46;',
    'windows.servers.online': '{0}&#32;&#116;&#111;&#116;&#97;&#108;&#101;&#115;&#32;&#101;&#110;&#32;&#108;&#65533;&#110;&#101;&#97;',
    'windows.settings.header': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#100;&#101;&#108;&#32;&#74;&#117;&#101;&#103;&#111;',
    'windows.skin.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#65;&#115;&#112;&#101;&#99;&#116;&#111;',
    'windows.spray.default': '&#83;&#112;&#114;&#97;&#121;&#32;&#112;&#111;&#114;&#32;&#68;&#101;&#102;&#101;&#99;&#116;&#111;',
    'windows.spray.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#83;&#112;&#114;&#97;&#121;',
    'windows.store.agree': '&#65;&#108;&#32;&#99;&#111;&#109;&#112;&#114;&#97;&#114;&#44;&#32;&#97;&#99;&#101;&#112;&#116;&#97;&#115;&#32;&#108;&#111;&#115;&#32;{0}&#84;&#65533;&#114;&#109;&#105;&#110;&#111;&#115;',
    'windows.store.amount': '{0}&#32;&#75;&#82;&#32;&#101;&#110;&#32;&#108;&#97;&#32;&#99;&#117;&#101;&#110;&#116;&#97;',
    'windows.store.buy': '&#67;&#111;&#109;&#112;&#114;&#97;&#32;&#121;&#32;&#86;&#101;&#110;&#100;&#101;&#32;&#105;&#116;&#101;&#109;&#115;&#32;&#101;&#110;&#32;&#101;&#108;&#32;',
    'windows.store.header': '&#84;&#105;&#101;&#110;&#100;&#97;',
    'windows.store.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#111;&#109;&#112;&#114;&#97;&#114;&#32;&#121;&#32;&#100;&#101;&#115;&#98;&#108;&#111;&#113;&#117;&#101;&#97;&#114;&#32;&#105;&#116;&#101;&#109;&#115;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#116;&#105;&#101;&#110;&#100;&#97;&#33;',
    'windows.store.market': '&#77;&#101;&#114;&#99;&#97;&#100;&#111;',
    'windows.store.market2': '&#75;&#114;&#117;&#110;&#107;&#101;&#114;&#32;&#77;&#97;&#114;&#107;&#101;&#116;',
    'windows.store.purchase': '&#67;&#111;&#109;&#112;&#114;&#97;&#114;&#32;&#75;&#82;',
    'windows.store.purchasing': '&#67;&#111;&#109;&#112;&#114;&#97;&#110;&#100;&#111;&#46;&#46;&#46;',
    'windows.store.spin': '{0}&#32;&#71;&#105;&#114;&#97;&#114;',
    'windows.store.unboxed': '{0}{1}&#32;&#97;&#98;&#114;&#105;&#65533;',
    'windows.store.unlock': '&#68;&#101;&#115;&#98;&#108;&#111;&#113;&#117;&#101;&#97;&#32;&#110;&#117;&#101;&#118;&#111;&#115;&#32;&#97;&#115;&#112;&#101;&#99;&#116;&#111;&#115;&#32;&#112;&#97;&#114;&#97;&#32;&#97;&#114;&#109;&#97;&#115;&#32;&#101;&#32;&#105;&#116;&#101;&#109;&#115;',
    'windows.store.wheels': '&#82;&#117;&#101;&#100;&#97;&#115;&#32;&#100;&#101;&#32;&#80;&#114;&#101;&#109;&#105;&#111;&#115;',
    'windows.theatre.header': '&#77;&#111;&#100;&#111;&#32;&#84;&#101;&#97;&#116;&#114;&#111;',
    'windows.theatre.key': '&#84;&#101;&#99;&#108;&#97;&#32;&#100;&#101;&#32;&#71;&#114;&#97;&#98;&#97;&#114;',
    'windows.theatre.record': '&#80;&#101;&#114;&#109;&#105;&#116;&#105;&#114;&#32;&#71;&#114;&#97;&#98;&#97;&#114;'
  };
}, function(cth, cti) {
  cth['exports'] = {
    'adblocker': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#75;&#114;&#117;&#110;&#107;&#105;&#101;&#115;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#54876;&#21344;&#50137;&#50713;&#54868;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'app.play': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
    'app.play.controller': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53948;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;',
    'custom.class.missing': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'custom.map.missing': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'custom.mode.missing': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'error.extentions': '&#21344;&#49910;&#50137;&#50713;&#21344;&#49941;&#49661;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#45796;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#54876;&#21344;&#50137;&#50713;&#54868;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'error.seek': '&#21344;&#50137;&#50713;&#21344;&#50025;&#47484;&#32;&#53364;&#21344;&#50137;&#50713;&#21344;&#49940;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#49891;&#48669;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;',
    'generic.accuracy': '&#21344;&#50137;&#50713;&#54869;&#21344;&#50137;&#50713;',
    'generic.clan': '&#53364;&#21344;&#50137;&#50713;',
    'generic.connecting': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
    'generic.create': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.deaths': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.default': '&#21344;&#50025;&#48376;&#21344;&#50137;&#50713;',
    'generic.defeat': '&#21344;&#49915;&#48196;&#50713;',
    'generic.delete': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.failed': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.follow': '&#21344;&#49899;&#47196;&#50872;&#50713;',
    'generic.followers': '&#21344;&#49899;&#47196;&#50872;&#50713;',
    'generic.following': '&#21344;&#49899;&#47364;&#50713;&#21344;&#50137;&#50713;',
    'generic.games': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.games.played': '&#52824;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.games.won': '&#21344;&#49849;&#47756;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.kdr': '&#75;&#68;&#82;',
    'generic.kills': '&#52376;&#52824;',
    'generic.leave': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.level': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.load': '&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.loading': '&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
    'generic.login': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;',
    'generic.logout': '&#21344;&#49912;&#44536;&#50500;&#50872;&#50713;',
    'generic.logout.sessions': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49892;&#50872;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44536;&#50500;&#50872;&#50713;',
    'generic.name': '&#21344;&#49905;&#47756;&#50713;',
    'generic.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.off': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.password': '&#21344;&#50137;&#50713;&#21344;&#49915;&#48196;&#50713;&#54840;&#32;&#21344;&#49929;&#47364;&#50713;',
    'generic.register': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.save': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.score': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.search': '&#21344;&#49903;&#49340;&#50713;',
    'generic.select': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.submit': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.success': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
    'generic.time': '&#21344;&#49884;&#44260;&#50713;',
    'generic.timep': '&#21344;&#49884;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49884;&#44260;&#50713;',
    'generic.unfollow': '&#21344;&#49899;&#47196;&#50872;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'generic.username': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49944;&#47756;&#50713;&#32;&#21344;&#49929;&#47364;&#50713;',
    'generic.victory': '&#21344;&#49849;&#47756;&#50713;',
    'generic.wait': '&#21344;&#50137;&#50713;&#21344;&#49884;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49941;&#47364;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
    'generic.wins': '&#21344;&#49849;&#47756;&#50713;',
    'leaderboard.empty': '&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#48669;&#50713;',
    'matchmaker.full': '&#21344;&#49912;&#50872;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#52284;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
    'matchmaker.full2': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#52284;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
    'matchmaker.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
    'menu.btn.browser': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'menu.btn.customize': '&#52964;&#21344;&#50137;&#50713;&#21344;&#49910;&#47756;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'menu.btn.host': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'menu.btn.invite': '&#21344;&#49901;&#45840;&#50713;&#21344;&#49913;&#44621;&#50713;',
    'menu.btn.invite.clicked': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49913;&#47364;&#50713;',
    'menu.btn.join': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
    'menu.btn.maps': '&#21344;&#50137;&#50713;',
    'menu.btn.mods': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'menu.btn.profile': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'menu.btn.settings': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'menu.btn.shop': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'menu.btn.social': '&#21344;&#49920;&#49661;&#50713;',
    'mod.disabled': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#54876;&#21344;&#50137;&#50713;&#54868;',
    'mod.error': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
    'mod.extracting': '{0}&#47;{1}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
    'mod.invalid': '&#21344;&#50137;&#50713;&#54952;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
    'mod.loading': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
    'player.died': '&#89;&#111;&#117;&#32;&#100;&#105;&#101;&#100;',
    'player.disconnect': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'player.inactive': '&#54876;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49961;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
    'player.killed': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'player.killstreak': '{0}&#21344;&#50137;&#50713;&#40;&#21344;&#50137;&#50713;&#41;&#32;{1}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52376;&#52824;',
    'player.waiting': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50612;&#47484;&#32;&#21344;&#50137;&#50713;&#21344;&#49941;&#47756;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
    'popup.checkpoint': '&#52404;&#53356;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;&#33;',
    'purchase.error': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49961;&#49340;&#50713;&#21344;&#49961;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
    'purchase.error.click': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#60;&#47;&#97;&#62;&#21344;&#50137;&#50713;&#32;&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49941;&#50137;&#50713;&#32;&#21344;&#49884;&#46328;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
    'purchase.error.limit': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49888;&#47364;&#50713;&#32;&#21344;&#49916;&#46328;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#44260;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
    'server.config.allowSpect': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
    'server.config.autoJump': '&#21344;&#49944;&#46328;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'server.config.canSlide': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49905;&#46328;&#50713;',
    'server.config.deltaMlt': '&#53440;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'server.config.gameTime': '&#21344;&#49884;&#44260;&#50713;&#40;&#21344;&#50137;&#50713;&#41;',
    'server.config.gravMlt': '&#21344;&#49961;&#47364;&#50713;',
    'server.config.healthMlt': '&#52404;&#21344;&#50137;&#50713;&#32;&#21344;&#49849;&#49661;&#50713;',
    'server.config.impulseMlt': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49957;&#47364;&#50713;',
    'server.config.jumpMlt': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'server.config.killRewards': '&#52376;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'server.config.lives': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'server.config.maxPlayers': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;',
    'server.config.minPlayers': '&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;',
    'server.config.nameTags': '&#21344;&#49905;&#47756;&#50713;&#54364;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'server.config.nameTeam1': '&#49;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
    'server.config.nameTeam2': '&#50;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
    'server.config.private': '&#21344;&#50137;&#50713;&#21344;&#49915;&#48196;&#50713;',
    'server.config.selTeam': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'server.config.strafeSpd': '&#21344;&#50137;&#50713;&#53944;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49928;&#46328;&#50713;',
    'server.config.thirdPerson': '&#51;&#21344;&#50137;&#50713;&#52845;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.audio.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.audio.sound': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.audio.voice': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.controls.change': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.controls.press': '&#21344;&#49891;&#48196;&#50713;&#32;&#53412;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'settings.crosshair.always': '&#21344;&#49939;&#49340;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.crosshair.color': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.image': '&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.image.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.shadow': '&#21344;&#49939;&#47756;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.size': '&#53356;&#21344;&#50137;&#50713;',
    'settings.crosshair.style': '&#21344;&#50137;&#50713;&#53440;&#21344;&#50137;&#50713;',
    'settings.crosshair.style.0': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.style.1': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.style.2': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.style.3': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50041;&#44033;&#21344;&#50137;&#50713;',
    'settings.crosshair.style.4': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50041;&#44033;&#21344;&#50137;&#50713;',
    'settings.crosshair.thickness': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.type': '&#53440;&#21344;&#50137;&#50713;',
    'settings.crosshair.type.2': '&#52964;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.type.3': '&#21344;&#50137;&#50713;&#21344;&#49905;&#50613;&#50713;&#21344;&#50137;&#50713;',
    'settings.crosshair.type.4': '&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
    'settings.editing.bobbing': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50045;&#47548;',
    'settings.editing.depth': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
    'settings.editing.green': '&#21344;&#49939;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#53356;&#21344;&#50137;&#50713;',
    'settings.editing.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.editing.weapon': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.gameplay.aimsens': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44260;&#50713;&#21344;&#50137;&#50713;',
    'settings.gameplay.challenge': '&#52300;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.gameplay.fov': '&#21344;&#49884;&#50556;&#44260;&#50713;',
    'settings.gameplay.fps': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#70;&#79;&#86;',
    'settings.gameplay.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49884;&#47364;&#50713;&#21344;&#50137;&#50713;',
    'settings.gameplay.invert': '&#89;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.gameplay.onkillS': '&#52376;&#52824;&#32;&#21344;&#50137;&#50713;',
    'settings.gameplay.sensitivity': '&#21344;&#49912;&#44260;&#50713;&#21344;&#50137;&#50713;',
    'settings.gameplay.streamer': '&#21344;&#50137;&#50713;&#53944;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.interface.chat': '&#52292;&#21344;&#50137;&#50713;&#52285;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.interface.deaths': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.interface.fps': '&#70;&#80;&#83;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.interface.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49905;&#50137;&#50713;',
    'settings.interface.hp': '&#21344;&#50137;&#50713;&#21344;&#49905;&#45442;&#50713;&#21344;&#50137;&#50713;&#32;&#72;&#80;&#32;&#21344;&#50137;&#50713;',
    'settings.interface.kills': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#52285;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.interface.messages': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#49960;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.interface.ping': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.interface.ui': '&#85;&#73;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.interface.unboxings': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'settings.mods.auto': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49944;&#46328;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.mods.borders': '&#21344;&#50137;&#50713;&#21344;&#49940;&#44260;&#50713;&#32;&#54868;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.mods.dot': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53944;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
    'settings.mods.dot.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53944;&#32;&#85;&#82;&#76;',
    'settings.mods.endmessage': '&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49960;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.mods.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.mods.load': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.mods.profile': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
    'settings.mods.profile.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;',
    'settings.mods.scope': '&#21344;&#50137;&#50713;&#21344;&#49940;&#44260;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
    'settings.mods.scope.paste': '&#21344;&#50137;&#50713;&#21344;&#49940;&#44260;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;',
    'settings.onKillS.style.0': '&#21344;&#50025;&#48376;&#21344;&#50137;&#50713;',
    'settings.onKillS.style.1': '&#21344;&#49940;&#49340;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.onKillS.style.2': '&#70;&#79;&#86;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.onKillS.style.3': '&#70;&#79;&#86;&#32;&#54869;&#21344;&#50137;&#50713;',
    'settings.quality.header': '&#54408;&#21344;&#50137;&#50713;',
    'settings.quality.mflash': '&#21344;&#49916;&#44621;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.quality.part': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#54952;&#21344;&#50137;&#50713;',
    'settings.quality.res': '&#21344;&#49940;&#49340;&#50713;&#21344;&#50137;&#50713;',
    'settings.quality.trails': '&#21344;&#49916;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.reset': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#44621;&#50713;&#54868;',
    'settings.reset.confirm': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#44621;&#50713;&#54868;&#21344;&#49913;&#49884;&#44192;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;&#63;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52840;&#32;&#21344;&#49932;&#45768;&#45840;&#50713;&#46;',
    'settings.server.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.server.region': '&#21344;&#50025;&#48376;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'settings.shaders.ambient': '&#21344;&#49944;&#48669;&#50713;&#21344;&#50137;&#50713;&#53944;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#46328;&#50713;',
    'settings.shaders.header': '&#21344;&#50137;&#50713;&#21344;&#49905;&#45840;&#50713;',
    'social.login': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.login.buy': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49940;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
    'social.login.failed': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.login.proccessing': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
    'social.login.sell': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49940;&#49661;&#50713;&#32;&#21344;&#49892;&#47756;&#50713;&#21344;&#49913;&#44621;&#50713;',
    'social.maps.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;&#46;&#46;',
    'social.market.back': '&#21344;&#49885;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.cant': '&#21344;&#49944;&#44621;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.failed': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;&#32;&#21344;&#49941;&#50137;&#50713;&#32;&#21344;&#49884;&#46328;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'social.market.fee': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.filter': '&#21344;&#49903;&#49340;&#50713;',
    'social.market.grace': '{0}&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.head': '&#21344;&#49928;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.list': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.listed': '{0}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
    'social.market.posting': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
    'social.market.price.high': '&#21344;&#49933;&#44260;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49957;&#49661;&#50713;',
    'social.market.price.list': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49929;&#47364;&#50713;',
    'social.market.price.low': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49957;&#49661;&#50713;',
    'social.market.purchase': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.req': '{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#49661;&#50713;',
    'social.market.searching': '&#21344;&#49903;&#49340;&#50713;&#32;&#21344;&#50137;&#50713;',
    'social.market.sort': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.unlist': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.market.unlisting': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
    'social.since': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'social.user.maps': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
    'social.user.mods': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'streamers.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53944;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#33;',
    'streamers.views': '{0}&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52397;&#32;&#21344;&#50137;&#50713;',
    'thumbnail.upload.error': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'thumbnail.upload.limit': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52;&#48;&#107;&#98;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#53356;&#21344;&#50025;&#47564;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49903;&#45768;&#45840;&#50713;&#46;',
    'timer.end': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49948;&#44621;&#50713;&#21344;&#50137;&#50713;&#32;{0}',
    'windows.account.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.account.recover': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52397;&#21344;&#50137;&#50713;&#32;&#60;&#97;&#62;&#107;&#114;&#117;&#110;&#107;&#101;&#114;&#64;&#121;&#101;&#110;&#100;&#105;&#115;&#46;&#99;&#104;&#60;&#47;&#97;&#62;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'windows.advertise.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.back.header': '&#21344;&#49885;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.clans.create': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.clans.header': '&#53364;&#21344;&#50137;&#50713;',
    'windows.clans.join': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.clans.login': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49888;&#45442;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#33;',
    'windows.clans.members': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#40;{0}&#41;',
    'windows.clans.name': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
    'windows.clans.page': '&#91;{0}&#93;&#32;&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.clans.requests': '&#21344;&#50137;&#50713;&#52397;',
    'windows.clans.requests.none': '&#21344;&#50137;&#50713;&#52397;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.clans.view': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.class.header': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.client.header': '&#53364;&#21344;&#50137;&#50713;&#21344;&#49905;&#50613;&#50713;&#53944;',
    'windows.client.linux': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.client.mac': '&#21344;&#50137;&#50713;&#79;&#83;&#32;&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.client.windows': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.aim': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.backward': '&#21344;&#49944;&#47364;&#50713;',
    'windows.controls.chat': '&#52292;&#21344;&#50137;&#50713;',
    'windows.controls.crouch': '&#21344;&#50137;&#50713;&#53356;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.drop': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.forward': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.inspect': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.interact': '&#21344;&#50137;&#50713;&#54840;&#32;&#21344;&#49948;&#50872;&#50713;',
    'windows.controls.jump': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.left': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.list': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.next': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.previous': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.reload': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.right': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.spray': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.controls.voice': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.hat.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.host.classes': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.host.cmaps': '&#52964;&#21344;&#49849;&#45840;&#50713;&#54000;&#32;&#21344;&#50137;&#50713;',
    'windows.host.header': '&#52964;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.host.maps': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.host.modes': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.host.preset': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
    'windows.host.preset.load': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
    'windows.host.preset.name': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
    'windows.host.raw': '&#21344;&#49905;&#44260;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.host.settings': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.host.start': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.join.code': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;&#47;&#21344;&#49944;&#46328;&#50713;&#32;&#21344;&#49929;&#47364;&#50713;',
    'windows.join.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
    'windows.loadout.body': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.loadout.class': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.loadout.hat': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.loadout.header': '&#21344;&#49912;&#46328;&#50713;&#21344;&#49891;&#50872;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.loadout.melee': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.loadout.primary': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.loadout.secondary': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.loadout.spray': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.maps.community': '&#21344;&#50137;&#50713;&#32;&#52964;&#21344;&#49849;&#45840;&#50713;&#54000;',
    'windows.maps.editor': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.maps.header': '&#52964;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
    'windows.maps.name': '&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
    'windows.maps.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#33;',
    'windows.maps.publish': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
    'windows.mods.community.fav': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#52286;&#21344;&#50137;&#50713;',
    'windows.mods.community.header': '&#52964;&#21344;&#49849;&#45840;&#50713;&#54000;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.mods.community.hot': '&#21344;&#49912;&#44621;&#50713;',
    'windows.mods.community.name': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
    'windows.mods.community.new': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.mods.community.none': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#33;',
    'windows.mods.drop': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50025;&#50640;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44144;&#45442;&#50713;&#32;&#53364;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'windows.mods.guide': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#46328;&#50713;',
    'windows.mods.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49888;&#45840;&#50713;&#21344;&#50137;&#50713;',
    'windows.mods.list': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.mods.load': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.mods.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'windows.mods.publish': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
    'windows.mods.viewer': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.players.header': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.players.none': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50612;&#44032;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;&#46;&#46;',
    'windows.publish.map.header': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
    'windows.publish.map.login': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49888;&#45442;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'windows.publish.map.paste': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
    'windows.publish.map.thumbnail': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.publish.map.update': '&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;',
    'windows.publish.mod.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
    'windows.publish.mod.login': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49888;&#45442;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#33;',
    'windows.publish.mod.name': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
    'windows.publish.mod.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;',
    'windows.publish.mod.thumbnail': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.publish.mod.update': '&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;',
    'windows.secondary.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#54364;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.secondary.req': '{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#49661;&#50713;',
    'windows.secondary.unlocked': '{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.servers.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.servers.hide': '&#54400;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.servers.host': '&#43;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.servers.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#45840;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;&#46;&#46;',
    'windows.servers.online': '&#21344;&#50137;&#50713;&#32;{0}&#21344;&#50137;&#50713;&#32;&#21344;&#49849;&#46960;&#50713;&#21344;&#50137;&#50713;',
    'windows.settings.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.skin.header': '&#21344;&#50137;&#50713;&#53416;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.spray.default': '&#21344;&#50025;&#48376;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.spray.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.store.agree': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49933;&#46121;&#45768;&#45840;&#50713;&#46;',
    'windows.store.amount': '{0}&#32;&#75;&#82;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
    'windows.store.buy': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49888;&#47756;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'windows.store.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.store.login': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#44;&#32;&#21344;&#49929;&#49661;&#50713;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#33;',
    'windows.store.market': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50137;&#50713;',
    'windows.store.market2': '&#75;&#114;&#117;&#110;&#107;&#101;&#114;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.store.purchase': '&#75;&#82;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.store.purchasing': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
    'windows.store.spin': '{0}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.store.unlock': '&#21344;&#50137;&#50713;&#21344;&#49912;&#50872;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53416;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49929;&#49661;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
    'windows.store.wheels': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50052;&#47131;',
    'windows.theatre.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
    'windows.theatre.key': '&#82;&#101;&#99;&#111;&#114;&#100;&#32;&#75;&#101;&#121;',
    'windows.theatre.record': '&#21344;&#50137;&#50713;&#54868;&#32;&#54876;&#21344;&#50137;&#50713;&#54868;'
  };
}, function(ctj, ctk, ctl) {
  var ctm = ctl(0x7),
    ctn = ctl(0x8),
    cto = ctl(0x57);
  ctj['exports'] = {
    'ahNum': 0x0,
    'nauCnKDJRCEivRMxzNzJflYgovsgNncK': null,
    'connected': !0x1,
    'socketId': -0x1,
    'sendQueue': [],
    'connect': function(ctj, ctk, ctl) {
      if (!this['nauCnKDJRCEivRMxzNzJflYgovsgNncK']) {
        var cto = ctm['enableHttps'] ? 'wss:' : 'ws:',
          ctt = this;
        try {
          var ctu = !0x1;
          this['nauCnKDJRCEivRMxzNzJflYgovsgNncK'] = new WebSocket(cto + ctj), this['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['binaryType'] = 'arraybuffer', this['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['onmessage'] = function(ctj) {
            var ctk = ctn['xYRIoNJbFIZpwfHqptgDbTIwAloYOUAL'](ctj['data'])[0x0],
              ctm = ctk[0x0],
              cto = ctk[0x1];
            'io-init' == ctm ? ctt['socketId'] = cto[0x0] : ctl[ctm] ? ctl[ctm]['apply'](void 0x0, cto) : console['error']('Received\x20unregistered\x20event', ctm);
          }, this['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['onopen'] = function() {
            ctt['connected'] = !0x0, ctk();
            for (let ctj of ctt['sendQueue']) ctt['send'](ctj[0x0], ...ctj[0x1]);
          }, this['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['onclose'] = function() {
            ctt['connected'] = !0x1, ctu || ctk('Disconnected.\x20Try\x20connecting\x20to\x20another\x20server.');
          }, this['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['onerror'] = function() {
            this['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['readyState'] != WebSocket['OPEN'] && (ctu = !0x0, console['error']('Socket\x20error', arguments), ctk('Socket\x20error'));
          };
        } catch (ctA) {
          console['error']('Socket\x20connection\x20error:', ctA), ctk(ctA);
        }
      }
    },
    'send': function(ctj, ...ctk) {
      if (!this['nauCnKDJRCEivRMxzNzJflYgovsgNncK'] || this['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['readyState'] !== WebSocket['OPEN']) return console['warn']('Socket\x20not\x20open\x20yet', ctj, ctk), void this['sendQueue']['push']([ctj, ctk]);
      this['ahNum'] = ctn['EcUdzltDMyOdyPqGjNSRfpIMDFHLqTBi'](this['ahNum'], cto);
      var ctl = ctn['vsPIwICjxHBKSaZMlvxMNuIvvbqmyThN']([ctj, ctk], this['ahNum']);
      this['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['send'](ctl);
    },
    'socketReady': function() {
      return this['nauCnKDJRCEivRMxzNzJflYgovsgNncK'] && this['connected'];
    }
  };
}, function(ctE) {
  ctE['exports'] = 0x128f;
}, function(ctF, ctG, ctH) {
  (function(ctG) {
    var ctJ = ctH(0x37),
      ctK = ctH(0x8),
      ctL = ctH(0x15),
      ctM = ctH(0x7),
      ctN = ctH(0x38),
      ctO = ctH(0x23),
      ctP = 0x0;
    ctF['exports']['validConfig'] = function(ctF) {
      if (ctF['modes'])
        for (var ctG = 0x0; ctG < ctF['modes']['length']; ++ctG)
          if (!ctJ['modes'][ctF['modes'][ctG]]) return 'Invalid\x20Mode\x20in\x20Config.';
      if (ctF['classes'])
        for (ctG = 0x0; ctG < ctF['classes']['length']; ++ctG)
          if (!ctN[ctF['classes'][ctG]]) return 'Invalid\x20Class\x20in\x20Config.';
      if (ctF['settings']) {
        var ctH = 0x0;
        for (var ctL in ctF['settings'])
          if (ctF['settings']['hasOwnProperty'](ctL)) {
            var ctO = ctF['settings'][ctL],
              ctP = -0x1;
            for (ctG = 0x0; ctG < ctM['serverConfig']['length']; ++ctG)
              if (ctM['serverConfig'][ctG]['varN'] == ctL) {
                ctP = ctG;
                break;
              } if (0x0 > ctP) return 'Invalid\x20Setting\x20in\x20Config.';
            var ctW = ctM['serverConfig'][ctP];
            if (!ctW['input'] && !ctW['bool']) {
              if (!ctK['isNumber'](ctO)) return 'Invalid\x20Config\x20Value.';
              if (ctO > (ctW['maxF'] || ctW['max']) || ctO < ctW['min']) return 'Config\x20Value\x20out\x20of\x20Range.';
            }
            if (++ctH > ctM['serverConfig']['length'] + 0x1) return 'Settings\x20Mismatch.';
          }
      }
      return null;
    }, ctF['exports']['validMap'] = function(ctF, ctG) {
      if (!ctK['isString'](ctF['name']) || !ctF['name']['replace'](/\s/g, '')['length']) return 'Missing\x20map\x20name.';
      if (-0x1 !== ctF['name']['indexOf']('<') || -0x1 !== ctF['name']['indexOf']('>')) return 'Illegal\x20characters\x20in\x20map\x20name.';
      if (0x10 < ctF['name']['length']) return 'Map\x20name\x20too\x20long.';
      if (!ctK['isArray'](ctF['spawns']) || !ctF['spawns']['length']) return 'Missing\x20spawn\x20points.';
      if (ctF['spawns']['length'] > ctM['spawnLimit']) return 'Too\x20many\x20spawn\x20points.';
      for (var ctH, ctJ = 0x0; ctJ < ctF['spawns']['length']; ++ctJ) {
        if (ctH = ctF['spawns'][ctJ], !ctK['isArray'](ctH) || !ctH['length'] || 0x3 > ctH['length'] || 0x6 < ctH['length']) return 'Spawn\x20point\x20error.';
        for (var ctL = 0x0; ctL < ctH['length']; ++ctL) {
          if (0x3 > ctL && !ctK['isNumber'](ctH[ctL])) return 'Spawn\x20point\x20error.';
          if (0x3 == ctL && null == ctH[ctL] && 0x1 == ctH[ctL] && 0x2 == ctH[ctL]) return 'Spawn\x20team\x20error.';
        }
      }
      if (!ctK['isArray'](ctF['objects']) || !ctF['objects']['length']) return 'Missing\x20objects.';
      if (ctF['objects']['length'] > (ctG ? ctM['objectLimitF'] : ctM['objectLimit'])) return 'Map\x20exceeds\x20object\x20limit.';
      var ctN, ctO = 0x0;
      for (ctJ = 0x0; ctJ < ctF['objects']['length']; ++ctJ) {
        if (0x1e == (ctN = ctF['objects'][ctJ])['i']) {
          if (ctO++, null != ctN['st'] && 'string' != typeof ctN['st']) return 'Object\x20sign\x20text\x20error.';
          if ((ctN['st'] || '')['length'] > ctM['signTextLimit']) return 'Object\x20sign\x20text\x20to\x20long.';
          if (ctO > ctM['signLimit']) return 'Too\x20many\x20signs.';
          if (ctN['sf'] && ctN['sf'] > ctM['signFontMax'] || ctN['sf'] && ctN['sf'] < ctM['signFontMin']) return 'Object\x20sign\x20font\x20error.';
        }
        if (!ctK['isArray'](ctN['s']) || 0x3 != ctN['s']['length'] || !ctK['arrayInts'](ctN['s'])) return 'Object\x20scale\x20error.';
        if (!ctK['isArray'](ctN['p']) || 0x3 != ctN['p']['length'] || !ctK['arrayInts'](ctN['p'])) return 'Object\x20position\x20error.';
        if (ctK['isArray'](ctN['r'])) {
          if (0x3 != ctN['r']['length'] || !ctK['arrayInts'](ctN['r'])) return 'Object\x20rotation\x20value\x20error.';
        } else if (null != ctN['r']) return 'Object\x20rotation\x20error.';
        if (null != ctN['d'] && !ctK['isNumber'](ctN['d'])) return 'Object\x20direction\x20error.';
        ctN['col'] = !!ctN['col'];
      }
      if (ctF['game']) {
        var ctP = 0x0;
        for (var cu5 in ctF['game'])
          if (ctF['game']['hasOwnProperty'](cu5)) {
            var cu6 = ctF['game'][cu5],
              cu7 = -0x1;
            for (ctJ = 0x0; ctJ < ctM['gameConfig']['length']; ++ctJ)
              if (ctM['gameConfig'][ctJ]['varN'] == cu5) {
                cu7 = ctJ;
                break;
              } if (0x0 > cu7) return 'Invalid\x20Setting\x20in\x20Config.';
            var cu8 = ctM['gameConfig'][cu7];
            if (!cu8['input'] && !cu8['bool']) {
              if (!ctK['isNumber'](cu6)) return 'Invalid\x20Config\x20Value.';
              if (cu6 > (cu8['maxF'] || cu8['max']) || cu6 < cu8['min']) return 'Config\x20Value\x20out\x20of\x20Range.';
            }
            if (++ctP > ctM['gameConfig']['length'] + 0x1) return 'Settings\x20Mismatch.';
          }
      }
      return null;
    }, ctF['exports']['obj'] = function(cu9, cua, cub, cuc, cud, cue, cuf, cug, cuh, cui) {
      this['isCustom'] = cu9, this['isPrimary'] = 0x0 == cua, this['sid'] = ctP++, this['gameInstance'] = null, this['updatedGameInstance'] = !0x1, this['connectedClients'] = 0x0, this['password'] = void 0x0, this['pendingGameId'] = null, this['gameClosed'] = !0x1, this['map'] = new ctJ['manager'](cuc, cue, ctK, ctM), this['store'] = ctH(0x45), this['attach'] = ctH(0x4b), this['weapons'] = ctH(0x17), this['classes'] = ctN, this['streaks'] = ctH(0x4c), this['maxStreak'] = this['streaks']['sort']((ctF, ctG) => ctF['kills'] < ctG['kills'] ? 0x1 : ctG['kills'] < ctF['kills'] ? -0x1 : 0x0)[0x0]['kills'], this['sprays'] = ctH(0x4d), this['triggers'] = ctH(0x25), this['projectiles'] = new(ctH(0x59))(this, cuf), this['controls'] = null, this['players'] = new(ctH(0x46))['manager'](this, cuc, cud, cue, ctK, ctL, ctM, cuf), this['endData'] = {
        'ed': [],
        'vo': null,
        'mts': []
      }, this['endTimer'] = 0x0, this['endIndex'] = null, this['banList'] = [], this['destObjs'] = [], this['hideWeapon'] = [!0x1, !0x1, !0x1], this['voteToKick'] = null, this['voteInitiators'] = [];
      var cul, cum, cun, cuo = this,
        cup = null;
      this['applyConfig'] = function(ctF, ctG, ctH, ctJ) {
        ctF = ctF || {}, this['config'] = {};
        for (var ctL, ctN = 0x0; ctN < ctM['serverConfig']['length']; ++ctN)
          if ((ctL = ctM['serverConfig'][ctN])['bool']) this['config'][ctL['varN']] = null == ctF[ctL['varN']] ? ctL['def'] : !!ctF[ctL['varN']];
          else if (ctL['input']) {
          var ctO = ctF[ctL['varN']];
          ctK['isString'](ctO) || (ctO = ctL['def']), this['config'][ctL['varN']] = ctK['sanitizeStr'](ctO), 0x10 < ctO['length'] && (ctO = ctO['substring'](0x0, 0x10));
        } else {
          ctO = ctF[ctL['varN']];
          ctK['isNumber'](ctO) || (ctO = ctL['def']), this['config'][ctL['varN']] = ctK['limitMM'](ctO, ctL['min'], ctG && ctL['maxF'] || ctL['max']);
        }
        if (this['config']['maps'] = ctF['maps'], !ctK['isArray'](this['config']['maps']) || !this['config']['maps']['length'] || this['config']['maps']['length'] > this['map']['maps']['length']) {
          this['config']['maps'] = [];
          for (ctN = 0x0; ctN < this['map']['maps']['length']; ctN++) this['config']['maps']['push'](ctN);
        } else
          for (ctN = 0x0; ctN < this['config']['maps']['length']; ctN++)
            if (!this['map']['maps'][this['config']['maps'][ctN]]) {
              this['config']['maps'] = [0x0];
              break;
            } if (this['config']['modes'] = ctF['modes'], !ctK['isArray'](this['config']['modes']) || !this['config']['modes']['length'] || this['config']['modes']['length'] > this['map']['modes']['length']) this['config']['modes'] = null;
        else
          for (ctN = 0x0; ctN < this['config']['modes']['length']; ctN++)
            if (!this['map']['modes'][this['config']['modes'][ctN]]) {
              this['config']['modes'] = null;
              break;
            } var ctP = !0x1;
        if (this['config']['classes'] = ctF['classes'], !ctK['isArray'](this['config']['classes']) || !this['config']['classes']['length'] || this['config']['classes']['length'] > this['classes']['length']) ctP = !0x0;
        else
          for (ctN = 0x0; ctN < this['config']['classes']['length']; ctN++)
            if (!this['classes'][this['config']['classes'][ctN]]) {
              ctP = !0x0;
              break;
            } if (ctP) {
          this['config']['classes'] = [];
          for (ctN = 0x0; ctN < this['classes']['length']; ctN++)(!this['classes'][ctN]['hide'] || this['isCustom']) && this['config']['classes']['push'](ctN);
        }
        this['config']['isFromQueue'] = ctF['isFromQueue'] || ctJ;
      }, this['applyConfig'](), this['getInfo'] = function() {
        return this['mode']['alias'] + '_' + this['map']['maps'][this['mapIndex']]['name'];
      }, this['customMap'] = function(ctG, ctH, ctJ, ctK, ctL) {
        if (ctG) try {
          var ctN = JSON['parse'](ctG);
          if (cuf && (this['customMapData'] = {
              'data': ctG,
              'id': ctH,
              'featured': ctK,
              'creator': ctJ
            }), !ctL) {
            var ctO = ctF['exports']['validMap'](ctN, ctK);
            if (ctO) return ctO;
          }
          for (var ctP = 0x0; ctP < ctN['objects']['length']; ++ctP) {
            if (ctN['objects'][ctP]['i'] = ctM['prefabIDS'][ctN['objects'][ctP]['i'] || ctN['objects'][ctP]['id'] || 0x0], !ctN['objects'][ctP]['i']) return 'Object\x20ID\x20error.';
            if (ctN['objects'][ctP]['t'] = ctM['textureIDS'][ctN['objects'][ctP]['t'] || 0x0], !ctN['objects'][ctP]['t']) return 'Object\x20Texture\x20error.';
          }
          ctN['creator'] = ctJ, this['map']['setMaps']([ctN]), this['config']['maps'] = [0x0];
        } catch (cuG) {
          return 'Map\x20error\x20occured.';
        }
      }, this['playSound'] = function(ctF, ctG, ctH, ctJ, ctK) {
        if (ctG)
          if (cud) cud['play'](ctF, ctG, !0x1, ctK);
          else
            for (var ctL = 0x0; ctL < this['players']['list']['length']; ++ctL)((cul = this['players']['list'][ctL])['active'] || cul['spectating']) && (ctH != cul || ctJ) && cuf['send'](cul['id'], 's', ctF, ctH['sid'], ctG);
      }, this['playerSound'] = function(ctF, ctG, ctH, ctJ, ctL, ctM) {
        var ctN = ctJ || this['players']['findBySid'](ctG),
          ctO = Howler['pos']();
        ctN && !(ctM && ctM < ctK['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](ctN['x'], ctN['y'], ctN['z'], ctO[0x0], ctO[0x1], ctO[0x2])) && cud['play3D'](ctF, ctN['x'], ctN['y'], ctN['z'], ctH || 0x1, ctL);
      }, this['triggerImgSound'] = function(ctF, ctG, ctH) {
        cuf ? cuf['send'](ctH['id'], 'is', ctF, ctG) : (ctF && cud['play'](ctF, 0x1), ctG && imgFlash && (imgFlash['style']['display'] = 'block', imgFlash['style']['opacity'] = 0x1, imgFlash['style']['backgroundImage'] = 'url(\x27https://assets.krunker.io/textures/' + ctG + '.png\x27)'));
      }, this['moveObj'] = function(ctF, ctG, ctH, ctJ) {
        ctF['x'] = ctG, ctF['y'] = ctH, ctF['z'] = ctJ, ctF['meshRef'] && ctF['meshRef']['position']['set'](ctG, ctH, ctJ);
      }, this['explosion'] = function(ctF, ctG, ctH, ctJ, ctL, ctM, ctN) {
        for (var ctO = 0x0; ctO < this['players']['list']['length']; ++ctO)
          if (((cul = this['players']['list'][ctO])['active'] || cul['spectating']) && (cuf['send'](cul['id'], 'ex', Math['round'](ctF), Math['round'](ctG), Math['round'](ctH), Math['round'](ctJ)), cul['active'])) {
            var ctP = ctK['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](ctF, ctG, ctH, cul['x'], cul['y'], cul['z']),
              cu9 = 0x1 - ctP / ctJ;
            0x0 < cu9 && this['players']['changeHealth'](cul, ctM, ctL * cu9 * (cul == ctM ? 0.2 : 0x1), ctM == cul) && this['players']['kill'](cul, ctM, {
              'dst': ctP,
              'weaponId': ctN['weaponId'],
              'weapon': ctN['weapon']
            });
          }
      };
      var cvc = [];
      this['getSpawnPoint'] = function(ctF, ctG, ctH) {
        if (ctH) return this['map']['spawns'][0x0];
        cvc['length'] = 0x0;
        for (var ctJ, ctL = 0x0; ctL < this['map']['spawns']['length']; ++ctL) {
          this['map']['spawns'][ctL]['dst'] = 0x0;
          for (var ctN = 0x0; ctN < this['players']['list']['length']; ++ctN)(cul = this['players']['list'][ctN]) && cul['active'] && cul != ctG && (!ctF || cul['team'] != ctF) && !this['RUfCftzxfJbJZoCyHXryEYwgWPZrZNCy'](cul, this['map']['spawns'][ctL]['x'], this['map']['spawns'][ctL]['y'] + ctM['fvcbEmTb'], this['map']['spawns'][ctL]['z']) && (this['map']['spawns'][ctL]['dst']++, 0x0);
        }
        this['map']['spawns']['sort'](ctK['orderByDst']), ctJ = this['map']['spawns'][0x0]['dst'];
        for (ctL = 0x0; ctL < this['map']['spawns']['length']; ++ctL)
          if (this['map']['spawns'][ctL]['dst'] == ctJ) {
            this['map']['spawns'][ctL]['dst'] = 0x0;
            for (ctN = 0x0; ctN < this['players']['list']['length']; ++ctN)(cul = this['players']['list'][ctN])['active'] && cul != ctG && (!ctF || cul['team'] != ctF) && (this['map']['spawns'][ctL]['dst'] += ctK['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](this['map']['spawns'][ctL]['x'], this['map']['spawns'][ctL]['y'], this['map']['spawns'][ctL]['z'], cul['x'], cul['y'], cul['z']));
            (ctF && this['map']['spawns'][ctL]['team'] == ctF || !this['map']['spawns'][ctL]['team']) && cvc['push'](this['map']['spawns'][ctL]);
          } return cvc['sort'](ctK['orderByDst']), cvc['reverse'](), cvc[0x0] || this['map']['spawns'][0x0];
      }, this['RUfCftzxfJbJZoCyHXryEYwgWPZrZNCy'] = function(ctF, ctG, ctH, ctJ, ctL) {
        if (!ctF) return !0x1;
        ctL = ctL || 0x0;
        for (var ctN, ctO = ctK['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](ctF['x'], ctF['y'], ctF['z'], ctG, ctH, ctJ), ctP = ctK['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](ctF['z'], ctF['x'], ctJ, ctG), cu9 = ctK['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](ctK['xBIWCnLLiqfSLgCsDrqJOyoncrZfplTa'](ctF['x'], ctF['z'], ctG, ctJ), ctH, 0x0, ctF['y']), cua = 0x1 / (ctO * Math['sin'](ctP - Math['PI']) * Math['cos'](cu9)), cub = 0x1 / (ctO * Math['cos'](ctP - Math['PI']) * Math['cos'](cu9)), cuc = 0x1 / (ctO * Math['sin'](cu9)), cud = ctF['y'] + ctF['height'] - ctM['cameraHeight'], cue = 0x0; cue < this['map']['manager']['objects']['length']; ++cue)
          if (!(ctN = this['map']['manager']['objects'][cue])['noShoot'] && ctN['active'] && !ctN['transparent']) {
            var cuf = ctK['lineInRect'](ctF['x'], ctF['z'], cud, cua, cub, cuc, ctN['x'] - Math['max'](0x0, ctN['width'] - ctL), ctN['z'] - Math['max'](0x0, ctN['length'] - ctL), ctN['y'] - Math['max'](0x0, ctN['height'] - ctL), ctN['x'] + Math['max'](0x0, ctN['width'] - ctL), ctN['z'] + Math['max'](0x0, ctN['length'] - ctL), ctN['y'] + Math['max'](0x0, ctN['height'] - ctL));
            if (cuf && 0x1 > cuf) return cuf;
          } var cug = this['map']['terrain'];
        if (cug) {
          var cuh = cug['raycast'](ctF['x'], -ctF['z'], cud, 0x1 / cua, -0x1 / cub, 0x1 / cuc);
          if (cuh) return ctK['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](ctF['x'], ctF['y'], ctF['z'], cuh['x'], cuh['z'], -cuh['y']);
        }
        return null;
      }, this['updateAccounts'] = function() {
        for (var ctF = [], ctG = 0x0; ctG < this['players']['list']['length']; ++ctG)(cul = this['players']['list'][ctG])['account'] && !cul['account']['hack'] && (cul['account']['timePlayed'] += cul['playTime'] || 0x0, this['players']['saveClassScores'](cul), null == this['host'] && !(this['mode'] && this['mode']['noReward']) && (cul['account']['games']++, cul['account']['kills'] += cul['kills'], cul['account']['deaths'] += cul['deaths'], cul['account']['score'] += cul['score'], cul['didWin'] && cul['account']['wins']++, ctF['push'](cul)), cuf['send'](cul['id'], 'ua', cul['account']['getData']()));
        ctF['length'] && this['saveRewards'](ctF);
      }, this['updateELO'] = function() {
        var ctF = !0x0;
        for (var ctG of this['players']['list'])
          if (ctG['account'] && ctG['didWin']) {
            ctF = !0x1;
            break;
          } var ctH = {};
        for (var ctG of this['players']['list'])
          if (!(!ctG['account'] || ctG['account']['hack'] || ctG['account']['level'] < ctM['minRankedLevel'])) {
            ctH[ctJ = ctG['team'] || ctG['id']] || (ctH[ctJ] = {
              'eloAvg': 0x0,
              'playerCount': 0x0
            }), ctH[ctJ]['eloAvg'] += ctG['account'][this['queueConfig']['accountKey']], ctH[ctJ]['playerCount'] += 0x1;
          } for (var ctJ in ctH) ctH[ctJ]['eloAvg'] /= ctH[ctJ]['playerCount'];
        var ctK = ctM['eloK'];
        for (var ctG of this['players']['list'])
          if (!(!ctG['account'] || ctG['account']['hack'] || ctG['account']['level'] < ctM['minRankedLevel'])) {
            ctJ = ctG['team'] || ctG['id'];
            var ctL = null;
            for (var ctN in ctH) ctN != ctJ && (ctL = ctH[ctN]['eloAvg']);
            if (null != ctL) {
              var ctO = 0x1 / (0x1 + Math['pow'](0xa, (ctL - ctG['account'][this['queueConfig']['accountKey']]) / 0x14a)),
                ctP = ctG['didWin'] ? 0x1 : 0x0;
              ctG['ELO'] = ctF ? 0x0 : ctK * (ctP - ctO), ctG['account'][this['queueConfig']['accountKey']] += ctG['ELO'] || 0x0, 0x0 > ctG['account'][this['queueConfig']['accountKey']] && (ctG['account'][this['queueConfig']['accountKey']] = 0x0), cub['call'](0x36, [ctG['account']['id'], ctG['account'][this['queueConfig']['accountKey']], this['queueConfig']['teamSize']], function() {});
            }
          }
      }, this['saveRewards'] = function(ctF) {
        for (var ctG = '', ctH = 0x0; ctH < ctF['length']; ++ctH) ctF[ctH] && ctF[ctH]['account'] && ctF[ctH]['reward'] && (ctG += (ctG['length'] ? ',' : '') + ctF[ctH]['account']['id'] + ',' + ctF[ctH]['reward']);
        ctG['length'] && cub['call'](0x14, [ctG], function(ctG, ctH) {
          if (ctH && ctH[0x0] && ctH[0x0][0x0] && (ctH = ctH[0x0][0x0]['result'])) try {
            ctH = ctH['split'](',');
            for (var ctJ, ctK = 0x0; ctK < ctH['length']; ++ctK)(ctJ = parseInt(ctH[ctK])) && ctF[ctK] && (ctF[ctK]['account']['funds'] = ctJ, cuf['send'](ctF[ctK]['id'], 'uf', ctJ));
          } catch (cvU) {}
        });
      }, this['incStat'] = function(ctF, ctG) {
        ctG && ctG['account'] && null == this['host'] && (!ctG['account']['stats'][ctF] && (ctG['account']['stats'][ctF] = 0x0), ctG['account']['stats'][ctF]++);
      }, this['checkLeave'] = function(ctF) {
        !ctF || ctF['account'] && this['mode'] && this['mode']['isRanked'] && !this['endTimer'] && (ctF['account']['stats']['abR'] = Date['now'](), ctF['account'][this['queueConfig']['accountKey']] -= ctM['rankedDeduction'], 0x0 > ctF['account'][this['queueConfig']['accountKey']] && (ctF['account'][this['queueConfig']['accountKey']] = 0x0), cub['call'](0x36, [ctF['account']['id'], ctF['account'][this['queueConfig']['accountKey']], this['queueConfig']['teamSize']], function() {}));
      }, this['savePlayerData'] = function(ctF, ctG) {
        if (cub && ctF['account']) {
          if (null == this['host']) {
            var ctH = 0x0,
              ctJ = 0x0,
              ctK = 0x0;
            for (var ctL in ctM['regionIND'])
              if (ctL == ctG) {
                ctH = ctM['regionIND'][ctL];
                break;
              } if (ctH)
              for (var ctN = 0x1; 0x5 > ctN; ++ctN) ctH == ctN && (!ctF['account']['stats']['r' + ctN] && (ctF['account']['stats']['r' + ctN] = 0x0), ctF['account']['stats']['r' + ctN]++), ctF['account']['stats']['r' + ctN] && ctF['account']['stats']['r' + ctN] >= ctK && (ctK = ctF['account']['stats']['r' + ctN], ctJ = ctN);
            ctJ && (ctF['account']['regionInd'] = ctJ);
          }
          var ctO = ctF['account'];
          ctO && cub['call'](0x2, [ctO['id'], ctO['kills'], ctO['wins'], ctO['games'], ctO['deaths'], ctO['score'], ctO['clan'], ctO['timePlayed'], JSON['stringify'](ctO['stats']), ctO['regionInd']]);
        }
      }, this['lockPlayer'] = function(ctF, ctG) {
        ctF['locked'] = ctG, cuf['send'](ctF['id'], 'lock', ctG);
      }, this['lockMove'] = function(ctF) {
        cuo['moveLock'] = !!ctF, cuf && cuf['broadcast']('game' + cuo['sid'], 'lm', ctF ? 0x1 : 0x0);
      }, this['updateTeam'] = function(ctF, ctG) {
        ctF['team'] = ctG;
        for (var ctH = 0x0; ctH < ctF['sentTo']['length']; ++ctH) cuf['send'](ctF['sentTo'][ctH], 'tm', ctF['sid'], ctG);
        this['players']['syncLeaders']();
      }, this['startNuke'] = function(ctF) {
        this['nukeTimer'] = 0x2710, this['nukePlayer'] = ctF, cuf['broadcast']('game' + this['sid'], 'n', 0x0);
      };
      var cwd = [];
      this['infectRandom'] = function() {
        cwd['length'] = 0x0;
        for (var ctF = 0x0; ctF < this['players']['list']['length']; ++ctF) this['players']['list'][ctF]['active'] && cwd['push'](ctF);
        var ctG = 0x1;
        0xe <= cwd['length'] ? ctG = 0x3 : 0x8 <= cwd['length'] && (ctG = 0x2);
        var ctH;
        for (ctF = 0x0; ctF < ctG; ++ctF) ctH = ctK['randInt'](0x0, cwd['length'] - 0x1), (cul = this['players']['list'][cwd[ctH]]) && (this['updateTeam'](cul, 'inf'), this['players']['kill'](cul, null, null, !0x0), cuf['broadcast']('game' + this['sid'], 'ac', cul['sid'], null, 'got\x20infected')), cwd['splice'](ctH, 0x1);
      }, this['pickSimon'] = function() {
        cwd['length'] = 0x0;
        for (var ctF = null, ctG = 0x0; ctG < this['players']['list']['length']; ++ctG)
          if (this['players']['list'][ctG]['active']) {
            if (this['host'] == this['players']['list'][ctG]['id']) {
              ctF = this['players']['list'][ctG];
              break;
            }
            cwd['push'](ctG);
          } ctF || (ctF = this['players']['list'][cwd[ctK['randInt'](0x0, cwd['length'] - 0x1)]]), ctF && (this['updateTeam'](ctF, 'simon'), ctF['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] = 0x1388, ctF['health'] = ctF['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'], cuf['send'](ctF['id'], 'h', ctF['health']));
      }, this['pickStalker'] = function() {
        cwd['length'] = 0x0;
        for (var ctF = 0x0; ctF < this['players']['list']['length']; ++ctF) this['players']['list'][ctF]['active'] && cwd['push'](ctF);
        (cul = this['players']['list'][cwd[ctK['randInt'](0x0, cwd['length'] - 0x1)]]) && (this['updateTeam'](cul, 'stalk'), cul['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] = 0x190, cul['health'] = cul['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'], cul['regen'] = 0x0, cuf['send'](cul['id'], 'h', cul['health']), cul['updateLoadout'](this, 0x0, !0x0, 0xc), cuf['broadcast']('game' + this['sid'], 'inat', cul['sid'], [0xc], 0x0, void 0x0, void 0x0, !0x1));
      }, this['pickBoss'] = function() {
        cwd['length'] = 0x0;
        for (var ctF = 0x0; ctF < this['players']['list']['length']; ++ctF) this['players']['list'][ctF]['active'] && cwd['push'](ctF);
        (cul = this['players']['list'][cwd[ctK['randInt'](0x0, cwd['length'] - 0x1)]]) && (this['updateTeam'](cul, 'boss'), cul['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] = 0x2710, cul['health'] = cul['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'], cul['regen'] = 0x0, cuf['send'](cul['id'], 'h', cul['health']));
      }, this['lockSeekers'] = function() {
        for (var ctF = 0x0; ctF < this['players']['list']['length']; ++ctF) this['players']['list'][ctF]['active'] && 'seek' == this['players']['list'][ctF]['team'] && this['lockPlayer'](this['players']['list'][ctF], !0x0);
      }, this['pickSeeker'] = function() {
        cwd['length'] = 0x0;
        for (var ctF = 0x0; ctF < this['players']['list']['length']; ++ctF) this['players']['list'][ctF]['active'] && cwd['push'](ctF);
        (cul = this['players']['list'][cwd[ctK['randInt'](0x0, cwd['length'] - 0x1)]]) && (this['updateTeam'](cul, 'seek'), this['lockPlayer'](cul, !0x0));
      }, this['releaseSeeker'] = function() {
        for (var ctF = 0x0; ctF < this['players']['list']['length']; ++ctF) 'seek' == (cul = this['players']['list'][ctF])['team'] && this['lockPlayer'](cul, !0x1);
      }, this['destroyObj'] = function(ctF) {
        for (var ctG = 0x0; ctG < cuo['map']['manager']['objects']['length']; ++ctG)
          if ((cul = cuo['map']['manager']['objects'][ctG])['uid'] == ctF) {
            cul['active'] = !0x1, cul['meshRef'] && (cul['meshRef']['visible'] = !0x1), cuc && cuc['updateShadowMap']();
            break;
          }
      }, this['respawnObj'] = function(ctF) {
        for (var ctG = 0x0; ctG < cuo['map']['manager']['objects']['length']; ++ctG)
          if ((cul = cuo['map']['manager']['objects'][ctG])['uid'] == ctF) {
            cuo['destObjs']['splice'](cuo['destObjs']['indexOf'](cul['uid']), 0x1), cul['active'] = !0x0, null != cul['health'] && (cul['health'] = cul['startHealth']), cul['meshRef'] && (cul['meshRef']['visible'] = !0x0), cuc && cuc['updateShadowMap']();
            break;
          }
      }, this['capFlag'] = function(ctF, ctG) {
        cuf && (ctF['caps']++, ctF['flag'] = null, this['teams'][ctF['team']] ? this['teams'][ctF['team']]++ : this['teams'][ctF['team']] = 0x1, cuf['broadcast']('game' + this['sid'], 'ts', ctF['team'], this['teams'][ctF['team']]), cuf['broadcast']('game' + cuo['sid'], 'ac', ctF['sid'], null, 'captured\x20the\x20Flag'), cuf['send'](ctF['id'], 'am', ['Capture', 0x96]), this['players']['score'](ctF, 0x96), this['resetFlag'](ctG));
      }, this['updateFlagCol'] = function(ctF, ctG) {
        ctG && ctG['team'] && ctF['teamCol'] != ctG['team'] && ctF['meshRef'] && (ctF['teamCol'] = ctG['team'], ctF['meshRef']['material'] = cuc['getMat']('crystal_0', cuo['map']['manager']['getFlagDat'](ctF['team'], ctG)), ctF['meshRef']['zoneMesh']['material'] = cuc['getMat']('zone_r', cuo['map']['manager']['getZoneDat'](ctF['team'], ctG)));
      }, this['updateFlags'] = function(ctF, ctG) {
        if (cuo['mode'] && cuo['mode']['flags']) {
          for (var ctH = !0x1, ctJ = !0x1, ctK = 0x0; ctK < cuo['map']['manager']['flags']['length']; ++ctK)(cul = cuo['map']['manager']['flags'][ctK])['meshRef'] && (ctF && cuo['updateFlagCol'](cul, ctF), cul['carrier'] ? (ctF && cul['team'] == ctF['team'] && (ctJ = !0x0), ctF && cul['carrier'] == ctF['sid'] && (ctH = !0x0), (cum = cuo['players']['findBySid'](cul['carrier'])) && cuc['moveMesh'](cul['meshRef'], cum['x'], cum['y'] + ctM['flagHOff'], cum['z'])) : cuc['moveMesh'](cul['meshRef'], cul['x'], cul['y'], cul['z']), cul['bobAnimY'] = (cul['bobAnimY'] || 0x0) + 0.003 * ctG, cul['meshRef']['position']['y'] += Math['cos'](cul['bobAnimY']), cul['meshRef']['rotation']['y'] += 0.002 * ctG);
          ctJ && ctH ? gameMessage['innerHTML'] != ctM['flagMsgRC'] && (gameMessage['innerHTML'] = ctM['flagMsgRC']) : ctJ ? gameMessage['innerHTML'] != ctM['flagMsgE'] && (gameMessage['innerHTML'] = ctM['flagMsgE']) : ctH ? gameMessage['innerHTML'] != ctM['flagMsg'] && (gameMessage['innerHTML'] = ctM['flagMsg']) : '' != gameMessage['innerHTML'] && (gameMessage['innerHTML'] = ''), specGMessage['innerHTML'] = gameMessage['innerHTML'];
        }
      }, this['updateFlag'] = function(ctF, ctG, ctH, ctJ, ctK) {
        for (var ctL = 0x0; ctL < cuo['map']['manager']['flags']['length']; ++ctL)
          if ((cul = cuo['map']['manager']['flags'][ctL])['uid'] == ctF) {
            cul['carrier'] = ctK, cuo['moveObj'](cul, ctG, ctH, ctJ);
            break;
          }
      }, this['dropFlag'] = function(ctF) {
        if (cuf && ctF && ctF['carrier']) {
          var ctG = this['players']['findBySid'](ctF['carrier']);
          this['updateCarrier'](ctF), ctG ? (cuf['broadcast']('game' + cuo['sid'], 'ac', ctG['sid'], null, 'dropped\x20the\x20Flag'), ctG['flag'] = null, this['updateObjPos'](ctF, ctG['x'], ctG['y'] + ctM['flagOff'], ctG['z'])) : this['updateObjPos'](ctF, ctF['orgX'], ctF['orgY'], ctF['orgZ']);
        }
      }, this['pickupFlag'] = function(ctF, ctG) {
        cuf && cuo['mode'] && cuo['mode']['flags'] && !ctG['carrier'] && (ctF['team'] == ctG['team'] ? (ctG['x'] != ctG['orgX'] || ctG['y'] != ctG['orgY'] || ctG['z'] != ctG['orgZ']) && (cuf['broadcast']('game' + cuo['sid'], 'ac', ctF['sid'], null, 'returned\x20the\x20Flag'), cuf['send'](ctF['id'], 'am', ['Return', 0x32]), this['players']['score'](ctF, 0x32), this['resetFlag'](ctG)) : !ctF['flag'] && (cuf['send'](ctF['id'], 'am', ['Pickup', 0x14]), this['players']['score'](ctF, 0x14), this['updateCarrier'](ctG, ctF), cuf['broadcast']('game' + cuo['sid'], 'ac', ctF['sid'], null, 'got\x20the\x20Flag')));
      }, this['syncFlag'] = function(ctF) {
        cuf['broadcast']('game' + cuo['sid'], 'ufl', ctF['uid'], ctF['x']['round'](0x1), ctF['y']['round'](0x1), ctF['z']['round'](0x1), ctF['carrier'] || 0x0);
      }, this['updateCarrier'] = function(ctF, ctG) {
        ctF['carrier'] = ctG ? ctG['sid'] : 0x0, ctG && (ctG['flag'] = ctF), this['syncFlag'](ctF);
      }, this['resetFlags'] = function() {
        for (var ctF = 0x0; ctF < cuo['map']['manager']['flags']['length']; ++ctF)
          if ((cul = cuo['map']['manager']['flags'][ctF])['carrier'] = 0x0, cul['x'] = cul['orgX'], cul['y'] = cul['orgY'], cul['z'] = cul['orgZ'], cul['meshRef']) {
            var ctG = !(!cuo['mode'] || !cuo['mode']['flags']);
            cul['meshRef']['visible'] = ctG, cul['meshRef']['zoneMesh']['visible'] = ctG;
          }
      }, this['resetFlag'] = function(ctF) {
        this['updateObjPos'](ctF, ctF['orgX'], ctF['orgY'], ctF['orgZ']), this['updateCarrier'](ctF);
      }, this['updatePickup'] = function(ctF, ctG, ctH, ctJ) {
        if (cul = this['map']['manager']['findByUid'](ctF, this['map']['manager']['pickups'])) {
          if (cuc) {
            cum = cul['meshRef'];
            var ctK = ctJ || [cum['position']['x'], cum['position']['y'], cum['position']['z']];
            cuc['scene']['remove'](cul['meshRef']), cul['meshRef'] = cuc['loadMesh']({
              'src': 'weapons/' + this['weapons'][ctG || 0x0]['src'],
              'texSrc': 'weapons/' + this['weapons'][ctG || 0x0]['src'],
              'noGroup': !0x0,
              'noShadow': !0x0,
              'transparent': !0x0,
              'noFog': !0x0
            }, ...ctK, 0x0, this['weapons'][ctG || 0x0]['scale'], cuc['scene']), cul['meshRef']['rotation']['copy'](cum['rotation']['clone']()), cul['meshRef']['visible'] = null != ctG;
          }
          cul['x'] = ctJ ? ctJ[0x0] : cul['orgX'], cul['y'] = ctJ ? ctJ[0x1] : cul['orgY'], cul['z'] = ctJ ? ctJ[0x2] : cul['orgZ'], ctH && (cul['orgPickup'] = ctH), cul['pickup'] = ctG;
        }
      }, this['resetPickups'] = function() {
        for (var ctF = 0x0; ctF < cuo['map']['manager']['pickups']['length']; ++ctF)(cul = cuo['map']['manager']['pickups'][ctF])['pickup'] = cul['orgPickup'], cul['x'] = cul['orgX'], cul['y'] = cul['orgY'], cul['z'] = cul['orgZ'], cuc && (cum = cul['meshRef'], cuc['scene']['remove'](cul['meshRef']), cul['meshRef'] = cuc['loadMesh']({
          'src': 'weapons/' + cuo['weapons'][cul['pickup']]['src'],
          'texSrc': 'weapons/' + cuo['weapons'][cul['pickup']]['src'],
          'noGroup': !0x0,
          'noShadow': !0x0,
          'transparent': !0x0,
          'noFog': !0x0
        }, cul['x'], cul['y'] - ctM['pickupZoneH'] / 0x2 + ctM['pickupOff'], cul['z'], 0x0, cuo['weapons'][cul['pickup']]['scale'], cuc['scene']), cul['meshRef']['rotation']['copy'](cum['rotation']['clone']()), cul['meshRef']['visible'] = !0x0);
      }, this['increaseWeapon'] = function(ctF, ctG) {
        (cul = null == ctG['weaponId'] ? [ctG['weaponId']] : [...ctF['loadout']])['length'] = 0x1, ctF['weaponTier']++, cul[0x0] = ctF['weaponTier'] >= this['mode']['weaponOrder']['length'] ? this['mode']['weaponOrder'][this['mode']['weaponOrder']['length'] - 0x1] : this['mode']['weaponOrder'][ctF['weaponTier']], cuf['broadcast']('game' + this['sid'], 'inat', ctF['sid'], cul, 0x0, void 0x0, void 0x0, !0x1), ctF['updateLoadout'](this, 0x0, !0x0, ...cul);
      }, this['decreaseWeapon'] = function(ctF) {
        (cul = [...ctF['loadout']])['length'] = 0x1, ctF['weaponTier']--, 0x0 > ctF['weaponTier'] ? ctF['weaponTier'] = 0x0 : ctF['setbacks']++, cul[0x0] = this['mode']['weaponOrder'][ctF['weaponTier']], cuf['broadcast']('game' + this['sid'], 'inat', ctF['sid'], cul, 0x0, void 0x0, void 0x0, !0x1), ctF['updateLoadout'](this, 0x0, !0x0, ...cul);
      }, this['updateGate'] = function(ctF, ctG) {
        for (var ctH = 0x0; ctH < cuo['map']['manager']['gates']['length']; ++ctH)
          if ((cul = cuo['map']['manager']['gates'][ctH])['uid'] == ctF) {
            cul['active'] = ctG, cul['meshRef'] && (cul['meshRef']['visible'] = ctG), cuc && cuc['updateShadowMap']();
            break;
          }
      }, this['resetGates'] = function() {
        for (var ctF = 0x0; ctF < cuo['map']['manager']['gates']['length']; ++ctF)(cul = cuo['map']['manager']['gates'][ctF])['active'] = !cul['startClosed'], cul['meshRef'] && (cul['meshRef']['visible'] = cul['active']);
      }, this['updateBank'] = function(ctF, ctG) {
        for (var ctH = 0x0; ctH < cuo['map']['manager']['banks']['length']; ++ctH)
          if ((cul = cuo['map']['manager']['banks'][ctH])['uid'] == ctF) {
            cul['deposited'] = ctG;
            break;
          }
      }, this['resetBanks'] = function() {
        for (var ctF = 0x0; ctF < cuo['map']['manager']['banks']['length']; ++ctF)(cul = cuo['map']['manager']['banks'][ctF])['deposited'] = 0x0;
      }, this['updateObjPos'] = function(ctF, ctG, ctH, ctJ) {
        ctF['x'] = ctG, ctF['y'] = ctH, ctF['z'] = ctJ, this['syncFlag'](ctF);
      }, this['updateZone'] = function(ctF) {
        cuo['map']['zone']['update'](ctF);
      }, this['resetZone'] = function() {
        cuo['map']['zone'] && cuo['map']['zone']['reset']();
      }, this['setObjective'] = function(ctF) {
        try {
          cuo['activeObjective'] = ctF;
          for (var ctG = 0x0; ctG < cuo['map']['manager']['objectives']['length']; ++ctG) cuo['map']['manager']['objectives'][ctG]['mesh']['visible'] = ctF == ctG;
        } catch (cxf) {}
      }, this['nextObjective'] = function(ctF, ctG) {
        if (this['activeObjective']++, this['activeObjective'] >= this['map']['manager']['objectives']['length'] && (this['activeObjective'] = 0x0), cuf['broadcast']('game' + this['sid'], 'obj', this['activeObjective']), 0x1 < this['map']['manager']['objectives']['length']) {
          var ctH = {
            'time': 0xea60 - (ctF || 0x0),
            'contTime': !0x0,
            'canDMG': !0x0,
            'msg': 'next\x20objective\x20',
            'trigger': function(ctF, ctG) {
              ctF['nextObjective'](ctG);
            }
          };
          ctG && this['waitTimers'] ? this['waitTimers']['push'](ctH) : this['waitTimers'] = [ctH];
        }
      }, this['setCheckPoint'] = function(ctF, ctG) {
        if (cul = {
            'x': ctG['x'],
            'y': ctG['y'],
            'z': ctG['z'],
            'dir': ctG['dir']
          }, cum = Object['values'](cul)['join'](','), !ctF['checkPoint'] || Object['entries'](ctF['checkPoint'])['toString']() !== Object['entries'](cul)['toString']()) {
          if (ctG['singleUse']) {
            if (ctF['checkPointList']['includes'](cum)) return;
            ctF['checkPointList']['push'](cum);
          }
          ctF['checkPoint'] = cul, cuf && cuf['send'](ctF['id'], 'chp');
        }
      }, this['checkTeleport'] = function(ctF, ctG) {
        if (!(0x1 == ctG['node'] || 0x0 < ctG['telCooldown'])) {
          for (var ctH = [], ctJ = 0x0; ctJ < this['map']['manager']['teleporters']['length']; ++ctJ)(cul = this['map']['manager']['teleporters'][ctJ])['channel'] == ctG['channel'] && 0x0 < cul['node'] && ctG['uid'] != cul['uid'] && ctH['push'](cul);
          if (ctH['length']) {
            var ctK = ctH[0x0];
            ctK && (0x2 == ctK['node'] && (ctK['telCooldown'] = 0x7d0), cuo['players']['changePosition'](ctF, ctK['x'], ctK['y'] - ctK['height'], ctK['z'], ctK['telStopMo']));
          }
        }
      }, this['updateTeleporters'] = function(ctF) {
        if (cuo['map']['manager']['teleporters']['length'])
          for (var ctG = 0x0; ctG < cuo['map']['manager']['teleporters']['length']; ++ctG)(cul = cuo['map']['manager']['teleporters'][ctG])['telCooldown'] -= ctF, 0x0 >= cul['telCooldown'] && (cul['telCooldown'] = 0x0);
      }, this['updateDetructables'] = function(ctF) {
        if (cuf && this['destObjs']['length'])
          for (var ctG = 0x0; ctG < this['map']['manager']['objects']['length']; ++ctG) cul = this['map']['manager']['objects'][ctG], -0x1 < (cum = cuo['destObjs']['indexOf'](cul['uid'])) && cul['canRespawn'] && (!cul['respawnT'] && cul['respawnR'] && (cul['respawnT'] = ctK['randInt'](0x1, 0x1388)), cul['respawnT'] -= ctF, 0x0 >= cul['respawnT'] && (this['destObjs']['splice'](cum, 0x1), cul['active'] = !0x0, cul['respawnT'] = cul['respawnR'] ? 0x0 : cul['respawnTStart'], null != cul['health'] && (cul['health'] = cul['startHealth']), cuf['broadcast']('game' + this['sid'], 'ro', cul['uid']), cul && cul['onRespawn'] && cul['destroyedBy'] && this['onTrigger'](cul['destroyedBy'], cul), cul['destroyedBy'] = null));
      }, this['updateUI'] = function() {
        killCount['style']['display'] = this['mode']['friendly'] ? 'none' : 'inline-block';
      }, this['instanceConfig'] = function() {}, this['voteMatch'] = function(ctF, ctG) {
        this['endData']['vo'] && (this['endData']['vo'][ctF] = this['endData']['vo'][ctF] == ctG ? null : ctG, cuf['broadcast']('game' + this['sid'], 'mv', this['endData']['vo'], this['endData']['mts']));
      };
      var cxy = [];
      this['init'] = function(ctF, ctL, ctN) {
        this['players']['clear'](), this['teams'] = {}, cxy['length'] = 0x0;
        var ctP = null;
        if (this['endData']['mts']['length']) {
          for (var cu9 = 0x0; cu9 < this['endData']['mts']['length']; ++cu9)
            if (0x0, cxy[cu9] = 0x0, this['endData']['vo'])
              for (var cua in this['endData']['vo']) this['endData']['vo']['hasOwnProperty'](cua) && this['endData']['mts'][cu9] == this['endData']['vo'][cua] && cxy[cu9]++;
          var cub = 0x0;
          for (cu9 = 0x0; cu9 < cxy['length']; ++cu9) cxy[cu9] > cub && (cub = cxy[cu9], ctP = this['endData']['mts'][cu9]);
          0x0 == cub && (ctP = this['endData']['mts'][0x0] || null);
        }
        if (null != ctP) {
          var cuc = ctP['split'](',');
          this['modeIndex'] = parseInt(cuc[0x0]), this['mapIndex'] = parseInt(cuc[0x1]);
        } else this['modeIndex'] = null == ctL ? this['config']['modes'] ? this['config']['modes'][ctK['randInt'](0x0, this['config']['modes']['length'] - 0x1)] : ctK['randInt'](0x0, 0x3) : ctL, this['mapIndex'] = null == ctF ? this['config']['maps'][ctK['randInt'](0x0, this['config']['maps']['length'] - 0x1)] : ctF;
        if (this['destObjs']['length'] = 0x0, this['mode'] = ctJ['modes'][this['modeIndex']], this['map']['generate'](this['mapIndex'], this['mode'], ctN), this['resetFlags'](), this['resetPickups'](), this['resetGates'](), this['resetBanks'](), this['resetZone'](), this['forceSpawn'] = this['config']['forceSpawn'] || this['mode']['forceSpawn'], this['minPlayers'] = this['config']['minPlayers'] || this['mode']['minPlayers'], !this['minPlayers'] && (this['config']['lives'] || this['mode']['lives'] || 0x0) && (this['minPlayers'] = 0x2), this['voteToKick'] = null, this['voteInitiators']['length'] = 0x0, this['needAllTimer'] = 0xc350, this['zoneTimer'] = 0x0, this['nukeTimer'] = 0x0, this['objectiveTimer'] = 0x0, this['activeObjective'] = null, this['gameTimer'] = null == this['mode']['gameTime'] ? 0xea60 * this['config']['gameTime'] : this['mode']['gameTime'], this['lastTimer'] = 0x0, this['lastTimerW'] = 0x0, this['lastTimerNA'] = 0x0, this['waitTimers'] = null, this['mode']['waitTimers']) {
          this['waitTimers'] = [];
          for (cu9 = 0x0; cu9 < this['mode']['waitTimers']['length']; ++cu9) this['waitTimers']['push']({
            'time': this['mode']['waitTimers'][cu9]['time'],
            'trigger': this['mode']['waitTimers'][cu9]['trigger'],
            'noJoin': this['mode']['waitTimers'][cu9]['noJoin'],
            'msg': this['mode']['waitTimers'][cu9]['msg']
          });
        } else(this['config']['lives'] || this['mode']['lives']) && (this['waitTimers'] = [{
          'time': 0x4e20,
          'msg': 'match\x20starts\x20in\x20',
          'trigger': function(ctF) {
            for (var ctG = 0x0; ctG < ctF['players']['list']['length']; ++ctG) ctF['players']['list'][ctG]['spectating'] && (ctF['players']['list'][ctG]['lives'] = 0x0);
          }
        }]);
        if (this['config']['warmupTime'] && (this['lockMove'](!0x0), !this['waitTimers'] && (this['waitTimers'] = []), this['waitTimers']['unshift']({
            'time': 0xea60 * this['config']['warmupTime'],
            'msg': 'warmup\x20ends\x20',
            'trigger': function(ctF) {
              ctF['lockMove'](!0x1);
            }
          })), this['condition'] = this['mode']['condition'] ? [...this['mode']['condition']] : null, (this['config']['lives'] || this['mode']['lives']) && (!this['condition'] && (this['condition'] = [], this['mode']['teams'] ? this['condition']['push'](function(ctF) {
            for (var ctG = 0x0, ctH = 0x0, ctJ = 0x0; ctJ < ctF['players']['list']['length']; ++ctJ) 0x0 < ctF['players']['list'][ctJ]['lives'] && (0x1 == ctF['players']['list'][ctJ]['team'] ? ctG++ : ctH++);
            return 0x1 <= ctG && 0x1 <= ctH;
          }) : this['condition']['push'](function(ctF) {
            for (var ctG = 0x0, ctH = 0x0; ctH < ctF['players']['list']['length']; ++ctH) 0x0 < ctF['players']['list'][ctH]['lives'] && ctG++;
            return 0x1 < ctG;
          })), !this['winCondition'] && (this['mode']['teams'] ? this['winCondition'] = function(ctF) {
            for (var ctG = 0x0; ctG < ctF['players']['list']['length']; ++ctG)
              if (ctF['players']['list'][ctG]['team'] && 0x0 < ctF['players']['list'][ctG]['lives']) return ctF['players']['list'][ctG]['team'];
            return 0x1;
          } : this['winCondition'] = function(ctF) {
            for (var ctG = 0x0; ctG < ctF['players']['list']['length']; ++ctG)
              if (0x0 < ctF['players']['list'][ctG]['lives']) return ctF['players']['list'][ctG];
            return null;
          })), this['scoreLimit'] = this['config']['scoreLimit'] || this['mode']['scoreLimit'] || 0x0, this['scoreLimit'] && (!this['condition'] && (this['condition'] = []), this['mode']['teams'] ? this['condition']['push'](function(ctF) {
            for (var ctG = 0x0; ctG < ctF['teams']; ++ctG)
              if (ctF['teams'][ctG] >= ctF['scoreLimit']) return 0x0;
            return 0x1;
          }) : this['condition']['push'](function(ctF) {
            for (var ctG = 0x0; ctG < ctF['players']['list']['length']; ++ctG)
              if (ctF['players']['list'][ctG]['score'] >= ctF['scoreLimit']) return 0x0;
            return 0x1;
          })), this['kills'] = 0x0, cuf && this['mode']['gameStart'] && this['mode']['gameStart'](this), cud) {
          cud['rate'] = 0x1;
          var cue = this['mode']['ambInd'] || this['map']['maps'][this['mapIndex']]['ambInd'] || 0x1;
          (cue = parseInt(cue)) != cup && (null != cup && cud['stop']('ambient_' + cup), cup = cue, cud['play']('ambient_' + cue, 0.12, !0x0, 0x1));
        }
        if (cug) {
          let ctF = {
            'mC': this['maxPlayers'],
            'pv': this['private'],
            'sk': !this['isCustom'],
            'pgi': this['pendingGameId'],
            'data': {
              'cs': this['isCustom'],
              'i': this['getInfo'](),
              'v': ctO
            }
          };
          if (this['gameInstance']) this['gameInstance']['update'](ctF);
          else if (this['gameInstance'] = cug['createGame'](cuh, ctF), this['gameInstance']['initiationPromise']['then'](() => {
              this['updatedGameInstance'] = !0x0, cuf['broadcast']('game' + this['sid'], 'inst-id', this['gameInstance']['id']);
            }), cuf && !ctM['isProd']) {
            var cui = ctH(0x4f),
              cul = ctH(0x4f),
              cum = cui['join'](ctG['cwd'](), 'version.json');
            cul['watchFile'](cum, {
              'interval': 0x64
            }, () => {
              ctF['data']['v'] = ctO = JSON['parse'](cul['readFileSync'](cum, 'utf8')), this['gameInstance']['update'](ctF);
            });
          }
        }
      }, this['leaveGame'] = function(ctF) {
        var ctG = this['host'] == ctF;
        (this['config']['isFromQueue'] ? 0x0 >= this['connectedClients'] : ctG) ? this['destroyGame'](ctG): this['mode'] && this['mode']['needAll'] && this['endGame'](0x3);
      }, this['startQueuedGame'] = function() {
        this['config']['isFromQueue'];
      }, this['getTeamScores'] = function() {
        var ctF = null;
        return this['mode'] && this['mode']['teams'] && this['teams'] && (ctF = [
          [0x1, this['teams'][0x1] || 0x0],
          [0x2, this['teams'][0x2] || 0x0]
        ]), ctF;
      }, this['getSyncData'] = function() {
        for (var ctF = [], ctG = [], ctH = [], ctJ = [], ctK = 0x0; ctK < this['map']['manager']['flags']['length']; ++ctK) cul = this['map']['manager']['flags'][ctK], ctF['push']([cul['uid'], cul['x']['round'](0x1), cul['y']['round'](0x1), cul['z']['round'](0x1), cul['carrier'] || 0x0]);
        for (ctK = 0x0; ctK < this['map']['manager']['pickups']['length']; ++ctK) cul = this['map']['manager']['pickups'][ctK], ctG['push']([cul['uid'], cul['pickup'], cul['orgPickup'] || 0x0, [cul['x'], cul['y'], cul['z']]]);
        for (ctK = 0x0; ctK < this['map']['manager']['gates']['length']; ++ctK) cul = this['map']['manager']['gates'][ctK], ctH['push']([cul['uid'], cul['active']]);
        for (ctK = 0x0; ctK < this['map']['manager']['banks']['length']; ++ctK) cul = this['map']['manager']['banks'][ctK], ctJ['push']([cul['uid'], cul['deposited']]);
        return {
          'dest': this['destObjs']['length'] ? this['destObjs'] : 0x0,
          'flg': ctF['length'] ? ctF : 0x0,
          'pkups': ctG['length'] ? ctG : 0x0,
          'gates': ctH['length'] ? ctH : 0x0,
          'banks': ctJ['length'] ? ctJ : 0x0,
          'zone': this['map']['zone'] ? this['map']['zone']['scale'] : 0x0,
          'lck': this['moveLock'] ? 0x1 : 0x0
        };
      }, this['onTrigger'] = function(ctF, ctG) {
        cuf && this['triggers']['actions'][ctG['triggerAction']] && this['triggers']['actions'][ctG['triggerAction']]['execute'](this, cuf, ctF, ctG);
      }, this['endGame'] = function(ctF) {
        if (this['endTimer'] = this['mode']['infEndTimer'] ? 'inf' : ctM['endTimer'], this['endIndex'] = null == ctF ? null : ctF, this['waitTimers'] = null, this['mode']['endSort'] ? this['players']['list']['sort'](this['mode']['endSort']) : this['players']['list']['sort'](ctK['orderByScore']), null != this['endIndex']) this['winner'] = null;
        else if (this['mode']['winCondition']) this['winner'] = this['mode']['winCondition'](this);
        else if (this['mode']['teams'] && this['teams']) {
          var ctG = 0x0,
            ctH = null;
          for (var ctJ in this['teams']) this['teams']['hasOwnProperty'](ctJ) && this['teams'][ctJ] >= ctG && (ctG = this['teams'][ctJ], ctH = ctJ);
          this['winner'] = 0x0 == ctG ? null : ctH;
        } else this['winner'] = this['players']['list'][0x0];
        for (var ctL = 0x0; ctL < this['players']['list']['length']; ++ctL)(cul = this['players']['list'][ctL])['didWin'] = cul['team'] && cul['team'] == this['winner'] || cul == this['winner'];
        if (this['mode']['isRanked'] && this['updateELO'](), null == this['host'] && null == this['endIndex'])
          for (ctL = 0x0; ctL < this['players']['list']['length']; ++ctL)
            if ((cul = this['players']['list'][ctL])['reward'] = 0x0, cul['account'] && !cul['account']['hack']) {
              var ctN = cul['score'] * (this['mode']['rewardMlt'] || 0x1);
              cul['reward'] = Math['min'](0x1e, Math['floor'](ctN / 0x64)), cul['challMode'] && (cul['reward'] = Math['floor'](1.5 * cul['reward']));
            } this['endData']['ed']['length'] = 0x0;
        var ctO = this['mode']['endStats'] || ctM['endStats'];
        for (ctL = 0x0; ctL < this['players']['list']['length']; ++ctL)
          for (var ctP = 0x0; ctP < ctO['length']; ++ctP) this['endData']['ed']['push'](ctM['endForm'][ctO[ctP]] ? ctM['endForm'][ctO[ctP]](this['players']['list'][ctL][ctO[ctP]], this, this['players']['list'][ctL]) : this['players']['list'][ctL][ctO[ctP]]);
        this['endData']['vo'] = {}, this['endData']['tms'] = this['getTeamScores']();
        let cu9 = this['config'] ? this['config']['modes'] || this['map']['rotationModes'] : null,
          cua = this['config']['maps'] || this['map']['rotationMaps'];
        this['endData']['mts']['length'] = 0x0;
        for (var cub = 0x0, cuc = -0x1 < cu9['indexOf'](0x0); 0x4 > this['endData']['mts']['length'];) {
          let ctF = 0x0 == cub && cuc ? 0x0 : cu9 ? cu9[ctK['randInt'](0x0, cu9['length'] - 0x1)] : ctK['randInt'](0x0, 0x3),
            ctG = cua[ctK['randInt'](0x0, cua['length'] - 0x1)];
          if (0x0 > this['endData']['mts']['indexOf'](ctF + ',' + ctG) && this['endData']['mts']['push'](ctF + ',' + ctG), 0x14 < ++cub) break;
        }
        for (ctL = 0x0; ctL < this['players']['list']['length']; ++ctL)(cul = this['players']['list'][ctL])['reset'](), cul['account'] && !this['isCustom'] && (cul['account']['playedMatch'] = !0x0), cuf['send'](cul['id'], 'end', !0x1, this['winner'] ? cul['didWin'] : -0x1, this['endData'], cul['account'] && cul['account']['playedMatch']);
        this['updateAccounts'](), this['players']['clear']();
      }, this['update'] = function(ctF, ctG, ctH) {
        if (this['now'] = ctG, cuf) {
          var ctJ = !0x0;
          if (0x0 < this['endTimer'] ? (ctJ = !0x1, this['endTimer'] -= ctF, 0x0 >= this['endTimer'] ? (this['init'](), this['endTimer'] = 0x0, cuf['broadcast']('game' + this['sid'], 'init', this['mapIndex'], this['modeIndex'], this['getTeamScores'](), this['activeObjective'], this['host'], this['config'], 0x0, this['customMapData'] ? 0x1 : null, this['getSyncData']()), this['isPrimary'] && ctK['restartIfNeeded'](cuf)) : (cun = ctK['getTime'](this['endTimer'])) != this['lastTimer'] && (this['lastTimer'] = cun, cuf['broadcast']('game' + this['sid'], 't', cun, 0x1))) : 'inf' == this['endTimer'] ? this['endTimer'] != this['lastTimer'] && (this['lastTimer'] = this['endTimer'], cuf['broadcast']('game' + this['sid'], 't', 'inf', this['endIndex'] || 0x2)) : this['waitTimers'] && (ctJ = !0x1, !this['waitTimers'][0x0]['contTime'] && this['minPlayers'] && this['players']['activeCount']() < this['minPlayers'] ? this['mode']['needAll'] ? (this['needAllTimer'] -= ctF, 0x0 >= this['needAllTimer'] ? this['endGame'](0x3) : (cun = ctK['getTime'](this['needAllTimer'])) != this['lastTimerNA'] && (this['lastTimerNA'] = cun, cuf['broadcast']('game' + this['sid'], 'gmsg', 'wt', cun))) : cuf['broadcast']('game' + this['sid'], 'gmsg', 'wt') : (this['waitTimers'][0x0]['time'] -= ctF, 0x0 >= this['waitTimers'][0x0]['time'] ? (this['waitTimers'][0x0]['trigger'] && this['waitTimers'][0x0]['trigger'](this, -this['waitTimers'][0x0]['time']), 0x0 >= this['waitTimers'][0x0]['time'] && (this['waitTimers']['splice'](0x0, 0x1), !this['waitTimers']['length'] && (this['waitTimers'] = null, cuf['broadcast']('game' + this['sid'], 'gmsg')))) : (cun = ctK['getTime'](this['waitTimers'][0x0]['time'])) != this['lastTimerW'] && (this['lastTimerW'] = cun, cuf['broadcast']('game' + this['sid'], 'gmsg', this['waitTimers'][0x0]['msg'] + cun)))), 0x0 >= this['endTimer'] && (ctJ || this['waitTimers'] && this['waitTimers'][0x0]['contTime'])) {
            if (this['condition'])
              for (var ctL = 0x0; ctL < this['condition']['length']; ctL++)
                if (!this['condition'][ctL](this)) {
                  this['gameTimer'] = 'skip';
                  break;
                }
            'skip' != this['gameTimer'] && this['mode']['timed'] ? (this['gameTimer'] += ctF, (cun = ctK['getTime'](this['gameTimer'], this['mode']['showMS'])) != this['lastTimer'] && (this['lastTimer'] = cun, cuf['broadcast']('game' + this['sid'], 't', cun))) : (0x0 < this['gameTimer'] || 'skip' == this['gameTimer']) && ('skip' != this['gameTimer'] && (this['gameTimer'] -= ctF), 'skip' == this['gameTimer'] || 0x0 >= this['gameTimer'] ? (this['gameTimer'] = 0x0, this['endGame']()) : (cun = ctK['getTime'](this['gameTimer'], this['mode']['showMS'])) != this['lastTimer'] && (this['lastTimer'] = cun, cuf['broadcast']('game' + this['sid'], 't', cun)));
          }
          if (0x0 >= this['endTimer'] && this['nukeTimer'] && (this['nukeTimer'] -= ctF, 0x0 >= this['nukeTimer'] && (this['nukeTimer'] = 0x0, cuf['broadcast']('game' + this['sid'], 'n', 0x1), this['nukePlayer']))) {
            var ctM = 0x0;
            for (ctL = 0x0; ctL < this['players']['list']['length']; ++ctL)(cul = this['players']['list'][ctL])['active'] && cul != this['nukePlayer'] && (!cul['team'] || this['nukePlayer']['team'] != cul['team']) && (ctM += 0x32, this['players']['kill'](cul, this['nukePlayer'], {
              'streak': 0x0
            }, !0x1, !0x0));
            ctM && (cuf['send'](this['nukePlayer']['id'], '6', ['Nuke', ctM], 0x0, this['nukePlayer']['kills'], ctM / 0x32), cuf['send'](this['nukePlayer']['id'], '4'), this['players']['score'](this['nukePlayer'], ctM));
          }
          this['voteToKick'] && (this['voteToKick']['timer'] -= ctF, 0x0 >= this['voteToKick']['timer'] && (this['voteToKick'] = null, cuf['broadcast']('game' + this['sid'], 'vk', null)));
        }
        if (this['players']['update'](ctF * this['config']['deltaMlt']), this['updateTeleporters'](ctF), this['updateDetructables'](ctF), cuf && this['mode']['objective'] && this['map']['manager']['objectives']['length'] && this['waitTimers'] && this['waitTimers'][0x0]['contTime'] && (this['objectiveTimer'] -= ctF, 0x0 >= this['objectiveTimer'])) {
          this['objectiveTimer'] = 0x5dc;
          for (ctL = 0x0; ctL < this['map']['manager']['objectives']['length']; ++ctL)
            if (cul = this['map']['manager']['objectives'][ctL], ctL == this['activeObjective'])
              for (var ctN = 0x0; ctN < this['players']['list']['length']; ++ctN)(cum = this['players']['list'][ctN])['active'] && cum['collides'](cul) && this['players']['score'](cum, 0xa);
        }
        if (this['map']['zone'])
          if (!cuf || this['waitTimers']) this['map']['zone']['animate'](ctF);
          else if (this['zoneTimer'] -= ctF, 0x0 >= this['zoneTimer']) {
          this['zoneTimer'] = 0x3e8, this['map']['zone']['shrink'](), cuf['broadcast']('game' + this['sid'], 'zn', this['map']['zone']['scale']);
          for (ctN = 0x0; ctN < this['players']['list']['length']; ++ctN)(cum = this['players']['list'][ctN])['active'] && 'inf' != cum['team'] && this['map']['zone']['isOutside'](cum) && this['players']['changeHealth'](cum, null, 0xa) && this['players']['kill'](cum, null, {});
        }
        this['projectiles']['update'](ctF * this['config']['deltaMlt']), cue && cue['update'](ctF * this['config']['deltaMlt'], ctH), cuc && cuc['render'](ctF * this['config']['deltaMlt']);
      }, this['destroyGame'] = function() {
        cuf['broadcast']('game' + this['sid'], 'error', 'Host\x20ended\x20game'), cuf['clearRoom']('game' + this['sid']), this['gameInstance']['destroy']();
        var ctF = cui['indexOf'](this);
        0x0 <= ctF && cui['splice'](ctF, 0x1);
      }, this['validateAccountName'] = function(ctF) {
        return !this['validAccountNames'] || !!ctF && -0x1 != this['validAccountNames']['indexOf'](ctF);
      };
    };
  } ['call'](this, ctH(0xe)));
}, function(cyB, cyC, cyD) {
  var cyE = cyD(0x8),
    cyF = cyD(0x7),
    cyG = function() {
      this['init'] = function(cyB, cyC, cyD, cyE, cyF, cyG, cyN, cyO) {
        this['x'] = cyB, this['y'] = cyC, this['z'] = cyD, cyE -= Math['PI'], this['xD'] = cyE, this['yD'] = cyF, this['spd'] = cyG['spd'], this['range'] = cyG['range'], this['dmg'] = cyG['dmg'], this['owner'] = cyN, this['weaponId'] = cyO['weaponId'], this['weapon'] = cyO['weapon'], this['skipMove'] = !0x0, this['expl'] = cyG['explode'], this['xS'] = this['spd'] * Math['sin'](cyE) * Math['cos'](cyF), this['zS'] = this['spd'] * Math['cos'](cyE) * Math['cos'](cyF), this['yS'] = this['spd'] * Math['sin'](cyF), this['active'] = !0x0;
      }, this['update'] = function(cyB) {
        this['active'] && (this['skipMove'] ? this['skipMove'] = !0x1 : (this['x'] += this['xS'] * cyB, this['z'] += this['zS'] * cyB, this['y'] += this['yS'] * cyB, this['range'] -= this['spd'] * cyB, 0x0 >= this['range'] && (this['active'] = !0x1)));
      };
    };
  cyB['exports'] = function(cyB, cyC) {
    var cyS, cyT, cyU = cyC ? {} : cyD(0x4),
      cyV = [];
    this['projectiles'] = [], this['types'] = [{
      'mat': cyU['MeshBasicMaterial'],
      'color': 0xffffdb,
      'explode': 0x23,
      'dmg': 0x3c,
      'spd': 0.5,
      'scale': 1.4,
      'length': 0xa,
      'range': 0x258
    }, {
      'mat': cyU['MeshBasicMaterial'],
      'color': 0xffffdb,
      'dmg': 0xc8,
      'spd': 0.68,
      'scale': 0.7,
      'length': 0xa,
      'range': 0x3e8
    }], this['update'] = function(cyD) {
      for (var cyG = 0x0; cyG < this['projectiles']['length']; ++cyG)
        if ((cyS = this['projectiles'][cyG])['active']) {
          if (cyS['update'](cyD), cyS['active']) {
            cyV['length'] = 0x0;
            for (var cyU = 0x1 / (cyS['spd'] * cyD * Math['sin'](cyS['xD']) * Math['cos'](cyS['yD'])), cyZ = 0x1 / (cyS['spd'] * cyD * Math['cos'](cyS['xD']) * Math['cos'](cyS['yD'])), cz0 = 0x1 / (cyS['spd'] * cyD * Math['sin'](cyS['yD'])), cz1 = 0x0; cz1 < cyB['map']['manager']['objects']['length']; ++cz1) !(cyT = cyB['map']['manager']['objects'][cz1])['noShoot'] && cyT['active'] && (tmpDst = cyE['lineInRect'](cyS['x'], cyS['z'], cyS['y'], cyU, cyZ, cz0, cyT['x'] - cyT['width'], cyT['z'] - cyT['length'], cyT['y'] - cyT['height'], cyT['x'] + cyT['width'], cyT['z'] + cyT['length'], cyT['y'] + cyT['height']), tmpDst && 0x1 >= tmpDst && cyV['push']({
              'obj': cyT,
              'dst': tmpDst
            }));
            for (cz1 = 0x0; cz1 < cyB['players']['list']['length']; ++cz1)(cyT = cyB['players']['list'][cz1])['active'] && cyT != cyS['owner'] && (tmpDst = cyE['lineInRect'](cyS['x'], cyS['z'], cyS['y'], cyU, cyZ, cz0, cyT['x'] - cyT['scale'] - cyF['hitBoxPad'], cyT['z'] - cyT['scale'] - cyF['hitBoxPad'], cyT['y'], cyT['x'] + cyT['scale'] + cyF['hitBoxPad'], cyT['z'] + cyT['scale'] + cyF['hitBoxPad'], cyT['y'] + cyT['height'] + cyF['hitBoxPad']), tmpDst && 0x1 >= tmpDst && cyV['push']({
              'plr': !0x0,
              'obj': cyT,
              'dst': tmpDst
            }));
            var cz2 = cyB['map']['terrain'];
            if (cz2) {
              var cz3 = cz2['raycast'](cyS['x'], -cyS['z'], cyS['y'], 0x1 / cyU, -0x1 / cyZ, 0x1 / cz0);
              if (cz3) {
                let cyB = cyE['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](cyS['x'], cyS['y'], cyS['z'], cz3['x'], cz3['z'], -cz3['y']);
                cyV['push']({
                  'dst': cyB / cyS['range']
                });
              }
            }
            cyV['length'] && (cyV['sort'](cyE['orderByNum']), cyV[0x0] && (cyC && !cyB['waitTimers'] && cyV[0x0]['obj'] && cyV[0x0]['obj']['health'] && !cyV[0x0]['plr'] && (cyV[0x0]['obj']['health'] -= cyS['dmg'], cyC['send'](cyS['owner']['id'], '4'), 0x0 >= cyV[0x0]['obj']['health'] && (cyV[0x0]['obj']['active'] = !0x1, cyV[0x0]['obj']['health'] = 0x0, cyV[0x0]['obj']['destroyedBy'] = cyS['owner'], cyB['destObjs']['push'](cyV[0x0]['obj']['uid']), cyC['broadcast']('game' + cyB['sid'], 'do', cyV[0x0]['obj']['uid']), cyV[0x0]['obj'] && cyV[0x0]['obj']['onDestroy'] && cyB['onTrigger'](cyS['owner'], cyV[0x0]['obj'])), cyV[0x0]['obj'] && (cyV[0x0]['obj']['onShoot'] || cyV[0x0]['obj']['onDamage']) && cyB['onTrigger'](cyS['owner'], cyV[0x0]['obj'])), cyV[0x0]['obj'] && cyV[0x0]['plr'] && cyB['players']['changeHealth'](cyV[0x0]['obj'], cyS['owner'], cyS['dmg']) && cyB['players']['kill'](cyV[0x0]['obj'], cyS['owner'], {
              'weaponId': cyS['weaponId'],
              'weapon': cyS['weapon']
            }), cyS['x'] += cyV[0x0]['dst'] * (cyS['xS'] * cyD), cyS['y'] += cyV[0x0]['dst'] * (cyS['yS'] * cyD), cyS['z'] += cyV[0x0]['dst'] * (cyS['zS'] * cyD)), cyS['active'] = !0x1);
          }
          if (!cyS['active']) {
            cyS['expl'] && cyB['explosion'](cyS['x'], cyS['y'], cyS['z'], cyS['expl'], cyS['dmg'], cyS['owner'], {
              'weaponId': cyS['weaponId'],
              'weapon': cyS['weapon']
            });
            for (cz1 = 0x0; cz1 < cyB['players']['list']['length']; ++cz1) cyC['send'](cyB['players']['list'][cz1]['id'], 'pre', cyS['sid']);
          }
        }
    }, this['init'] = function(cyD, cyE, cyF, cyT, cyU, cyV, czb, czc) {
      cyD = cyD['round'](0x1), cyE = cyE['round'](0x1), cyF = cyF['round'](0x1), cyT = cyT['round'](0x3), cyU = cyU['round'](0x3), cyS = null;
      for (var czd = 0x0; czd < this['projectiles']['length']; ++czd)
        if (!this['projectiles'][czd]['active']) {
          cyS = this['projectiles'][czd];
          break;
        } if (cyS || ((cyS = new cyG())['sid'] = this['projectiles']['length'], this['projectiles']['push'](cyS)), cyS['init'](cyD, cyE, cyF, cyT, cyU, this['types'][cyV], czb, czc), cyC)
        for (czd = 0x0; czd < cyB['players']['list']['length']; ++czd)(cyB['players']['list'][czd]['active'] || cyB['players']['list'][czd]['spectating']) && cyC['send'](cyB['players']['list'][czd]['id'], 'pr', cyD, cyE, cyF, cyT, cyU, cyV, cyS['sid']);
    };
  };
}, function(cze, czf) {
  cze['exports'] = function(cze, czf, czi, czj) {
    czi = czi || {}, this['id'] = cze, this['name'] = czf, this['score'] = czi['player_score'] || 0x0, this['kills'] = czi['player_kills'] || 0x0, this['deaths'] = czi['player_deaths'] || 0x0, this['wins'] = czi['player_wins'] || 0x0, this['hack'] = czi['player_hack'] || 0x0, this['games'] = czi['player_games_played'] || 0x0, this['clan'] = czi['player_clanid'], this['funds'] = czi['player_funds'] || 0x0, this['featured'] = czi['player_featured'] || 0x0, this['clan'] = czi['player_clan'] || null, this['timePlayed'] = czi['player_timeplayed'] || 0x0, this['skins'] = czi['skins'] || [], this['lastReward'] = czi['player_lastreward'] || 0x0, this['developer'] = czi['player_developer'] || 0x0, this['following'] = czi['player_follow'] || 0x0, this['followers'] = czi['player_followed'] || 0x0, this['isFollowing'] = czi['player_following'] || 0x0, this['stats'] = czi['player_stats'] ? JSON['parse'](czi['player_stats']) : {}, this['partnerName'] = czi['partner_name'] || null, this['partnerApp'] = czi['partner_approved'] || 0x0, this['regionInd'] = czi['player_region'], this['moderator'] = czi['player_moderator'] || 0x0, this['elo'] = czi['player_elo'] || 0x0, this['elo2'] = czi['player_elo2'] || 0x0, this['elo4'] = czi['player_elo4'] || 0x0, this['pType'] = czi['player_type'] || 0x0, this['setData'] = function(cze) {
      this['kills'] = cze[0x1], this['wins'] = cze[0x2], this['games'] = cze[0x3], this['deaths'] = cze[0x4], this['funds'] = cze[0x5], this['score'] = cze[0x6], this['updateLevel'](), this['clan'] = cze[0x7], this['timePlayed'] = cze[0x8], this['featured'] = cze[0x9], this['skins'] = cze[0xa], this['lastReward'] = cze[0xb], this['developer'] = cze[0xc], this['following'] = cze[0xd], this['followers'] = cze[0xe], this['isFollowing'] = cze[0xf], this['stats'] = cze[0x10], this['hack'] = cze[0x11], this['partnerName'] = cze[0x12], this['partnerApp'] = cze[0x13], this['regionInd'] = cze[0x14], this['moderator'] = cze[0x15], this['elo'] = cze[0x16], this['elo2'] = cze[0x17], this['elo4'] = cze[0x18];
    }, this['updateLevel'] = function() {
      var cze = czj['rankVar'] * Math['sqrt'](this['score']);
      this['level'] = Math['floor'](cze), this['levelProg'] = Math['round'](0x64 * (cze - this['level'])), this['level'] = Math['max'](0x1, this['level']);
    }, this['updateLevel'](), this['getData'] = function() {
      return [this['id'], this['kills'], this['wins'], this['games'], this['deaths'], this['funds'], this['score'], this['clan'], this['timePlayed'], this['featured'], this['skins'], this['lastReward'], this['developer'], this['following'], this['followers'], this['isFollowing'], this['stats'], this['hack'], this['partnerName'], this['partnerApp'], this['regionInd'], this['moderator'], this['elo'], this['elo2'], this['elo4']];
    };
  };
}, , function(czm, czn, czo) {
  let czp = czo(0x7),
    czq = czo(0x15),
    czr = czo(0x8),
    czs = czo(0x4),
    czt = {};
  var czu;
  let czv = czt['canvas'] = document['getElementById']('game-overlay');

  function czw() {
    czv['width'] = window['innerWidth'], czv['height'] = window['innerHeight'];
  }
  window['addEventListener']('resize', czw), czw();
  let czx = new Image(),
    czy = !0x1;
  czx['onload'] = () => czy = !0x0, czx['src'] = './img/muzflash.png';
  let czz = new Image(),
    czA = !0x1;
  czz['onload'] = () => czA = !0x0, czz['src'] = czr['assetsUrl']('/textures/objective_1.png');
  var czB = null;
  czt['showDMG'] = !0x0, czt['dmgNums'] = [], czt['showFlash'] = !0x1, czt['flashX'] = 0x0, czt['flashY'] = 0x0, czt['crosshairType'] = 0x1, czt['dmgColor'] = 'white', czt['critColor'] = 'white', czt['crosshairColor'] = 'white', czt['crosshairShadow'] = 'black', czt['crosshairUseShadow'] = !0x0, czt['crosshairOpacity'] = 0x0, czt['crosshairScale'] = 0x0, czt['crosshairAlways'] = !0x1, czt['dynamicHP'] = !0x0, czt['dmgScale'] = 0x1e, czt['crosshairStyle'] = 0x1, czt['crosshairThick'] = 0x2, czt['crosshairLen'] = 0x10, czt['crosshairImage'] = new Image(), czt['nametagStyle'] = 0x0, czt['dmgVal'] = function(czm, czn, czo, czp, czq) {
    if (czt['showDMG']) {
      czB = null;
      for (var czs = 0x0; czs < czt['dmgNums']['length']; ++czs)
        if (!czt['dmgNums'][czs]['life']) {
          czB = czt['dmgNums'][czs];
          break;
        } czB || (czB = {}, czt['dmgNums']['push'](czB)), czB['crit'] = czq, czB['life'] = 0x3e8, czB['x'] = czm, czB['y'] = czn + 0x7, czB['z'] = czo, czB['dir'] = czr['randFloat'](-Math['PI'], Math['PI']), czB['val'] = czp;
    }
  };
  var czI = new czs['Vector3'](),
    czJ = czv['getContext']('2d');

  function czK(czm, czn, czo, czp, czq, czr = 0x1, czs = !0x1, czu = !0x0, czv = !0x0) {
    czu && (czm['save'](), czv ? czm['fillStyle'] = czt['crosshairShadow'] : czm['strokeStyle'] = czt['crosshairShadow'], czm['lineWidth'] = czr, czm['globalAlpha'] *= 0.5, czm['beginPath'](), czs ? czm['ellipse'](czn + czp / 0x2, czo + czq / 0x2, czp / 0x2 + 0x2, czq / 0x2 + 0x2, 0x0, 0x0, 0x2 * Math['PI']) : czm['rect'](czn - 0x2, czo - 0x2, czp + 0x4, czq + 0x4), czv ? czm['fill']() : czm['stroke'](), czm['restore']()), czv ? czm['fillStyle'] = czt['crosshairColor'] : czm['strokeStyle'] = czt['crosshairColor'], czm['lineWidth'] = czr, czm['beginPath'](), czs ? czm['ellipse'](czn + czp / 0x2, czo + czq / 0x2, czp / 0x2, czq / 0x2, 0x0, 0x0, 0x2 * Math['PI']) : czm['rect'](czn, czo, czp, czq), czv ? czm['fill']() : czm['stroke']();
  }
  czt['render'] = function(czm, czn, czo, czs, czw) {
    let czB = czt,
      cA0 = czv['width'] / czm,
      cA1 = czv['height'] / czm,
      cA2 = 'none' == menuHolder['style']['display'] && 'none' == endUI['style']['display'] && 'none' == killCardHolder['style']['display'],
      cA3 = czo['camera']['pCrFlzzpYGHaZFbPwRqLxxsSKMxdAdnH']();
    if (czJ['save'](), czJ['scale'](czm, czm), czJ['clearRect'](0x0, 0x0, cA0, cA1), czt['showDMG'])
      for (var cA4 = 0x0; cA4 < czt['dmgNums']['length']; ++cA4)
        if ((czu = czt['dmgNums'][cA4])['life'])
          if (czu['life'] -= czw, 0x0 >= czu['life']) czu['life'] = 0x0;
          else {
            if (czu['y'] += 0.022 * czw, czu['x'] += 0.013 * czw * Math['cos'](czu['dir']), czu['z'] += 0.013 * czw * Math['sin'](czu['dir']), czI['set'](czu['x'], czu['y'], czu['z']), !czo['frustum']['containsPoint'](czI)) continue;
            czJ['save'](), czI['project'](czo['camera']), czI['x'] = (czI['x'] + 0x1) / 0x2, czI['y'] = (czI['y'] + 0x1) / 0x2, czJ['translate'](Math['round'](cA0 * czI['x']), Math['round'](cA1 * (0x1 - czI['y']))), czJ['fillStyle'] = czu['crit'] ? czt['critColor'] : czt['dmgColor'], czJ['strokeStyle'] = '#2e2e2e', czJ['lineWidth'] = 0x5, czJ['font'] = czt['dmgScale'] + 'px\x20GameFont';
            var cA5 = -Math['round'](czJ['measureText'](czu['val'])['width'] / 0x2);
            czJ['strokeText'](czu['val'], cA5 + 0x1, 0x0), czJ['fillText'](czu['val'], cA5, 0x0), czJ['restore']();
          } if ('none' == menuHolder['style']['display'] && 'none' == endUI['style']['display'])
      for (cA4 = 0x0; cA4 < czn['players']['list']['length']; ++cA4) {
        if (!(czu = czn['players']['list'][cA4])['active']) continue;
        if (czu['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'] || !czu['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']) continue;
        if (!czu['BuLLwMAKfmOLWuBvUnENglYISdUKniUf']) continue;
        if ((cAg = czu['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']['position']['clone']())['y'] += czp['fvcbEmTb'] + czp['nameOffset'] - czu['crouchVal'] * czp['crouchDst'], 0x0 <= czu['hatIndex'] && (cAg['y'] += czp['nameOffsetHat']), !(0x1 <= 0x14 * (cAh = Math['max'](0.3, 0x1 - czr['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](cA3['x'], cA3['y'], cA3['z'], cAg['x'], cAg['y'], cAg['z']) / 0x258)) && czo['frustum']['containsPoint'](cAg))) continue;
        czJ['save'](), cAg['project'](czo['camera']), cAg['x'] = (cAg['x'] + 0x1) / 0x2, cAg['y'] = (cAg['y'] + 0x1) / 0x2, czJ['translate'](cA0 * cAg['x'], cA1 * (0x1 - cAg['y'])), czJ['scale'](cAh, cAh);
        let czm = 0x78,
          czv = 0x1 == czt['nametagStyle'] ? 0x6 : 0x10;
        if (0x0 == czt['nametagStyle'] || 0x3 == czt['nametagStyle']) {
          czJ['fillStyle'] = 'rgba(0,\x200,\x200,\x200.4)', czJ['fillRect'](-0x3c, -czv, czm, czv), czB['dynamicHP'] && czu['hpChase'] > czu['health'] / czu['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] && (czJ['fillStyle'] = '#FFFFFF', czJ['fillRect'](-0x3c, -czv, czm * czu['hpChase'], czv));
          var cA8 = czs && czs['team'] ? czs['team'] : window['spectating'] ? 0x1 : 0x0;
          czJ['fillStyle'] = cA8 == czu['team'] ? czq['teams'][0x0] : czq['teams'][0x1], czJ['fillRect'](-0x3c, -czv, czm * (czu['health'] / czu['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn']), czv);
        }
        if (0x3 > czt['nametagStyle']) {
          let czm = czu['name'],
            czn = czu['clan'] ? '[' + czu['clan'] + ']' : null,
            czo = czu['level'];
          czJ['font'] = '30px\x20GameFont';
          let czr = czo && 0x1 != czt['nametagStyle'] ? czJ['measureText'](czo)['width'] + 0xa : 0x0;
          czJ['font'] = '20px\x20GameFont';
          let czs = czJ['measureText'](czm)['width'] + (czn ? 0x5 : 0x0),
            czw = czr + czs + (czn ? czJ['measureText'](czn)['width'] : 0x0);
          czJ['translate'](0x0, -czv - 0xa), czJ['fillStyle'] = 'white', czJ['font'] = '30px\x20GameFont', czo && 0x1 != czt['nametagStyle'] && czJ['fillText'](czo, -czw / 0x2, 0x0), czJ['font'] = '20px\x20GameFont', czJ['globalAlpha'] = 0x1, czJ['fillText'](czm, -czw / 0x2 + czr, 0x0), czJ['globalAlpha'] = 0x0 <= czp['verClans']['indexOf'](czu['clan']) ? 0x1 : 0.4, czJ['fillStyle'] = 0x0 <= czp['verClans']['indexOf'](czu['clan']) ? czq['verified']['clan'] : 'white', czn && czJ['fillText'](czn, -czw / 0x2 + czr + czs, 0x0);
        }
        czJ['restore']();
      }
    if (czn['mode'] && czn['mode']['objective'] && cA2 && 0x0 < czn['map']['manager']['objectives']['length']) {
      var cAf = !0x0,
        cAg = czn['map']['manager']['objectives'][czn['activeObjective']];
      for (cA4 = 0x0; cA4 < czn['map']['manager']['objectives']['length']; ++cA4)
        if (czu = czn['map']['manager']['objectives'][cA4], cA4 == czn['activeObjective'] && czr['pointInBox3D'](cA3['x'], cA3['y'], cA3['z'], czu)) {
          cAf = !0x1;
          break;
        } if (cAg && cAf) {
        czI['set'](cAg['x'], cAg['y'] + 0x7, cAg['z']);
        var cAh, cAi = 0x46 * (cAh = Math['max'](0.3, 0x1 - czr['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](cA3['x'], cA3['y'], cA3['z'], czI['x'], czI['y'], czI['z']) / 0x258));
        if (0x1 <= cAi && czo['frustum']['containsPoint'](czI) && czA) {
          czI['project'](czo['camera']), czI['x'] = (czI['x'] + 0x1) / 0x2, czI['y'] = (czI['y'] + 0x1) / 0x2;
          let czm = cAi / czz['width'];
          czJ['save'](), czJ['translate'](czI['x'] * cA0, (0x1 - czI['y']) * cA1), czJ['scale'](czm, czm), czJ['drawImage'](czz, -czz['width'] / 0x2, -czz['height'] / 0x2), czJ['restore']();
        }
      }
    }
    if (czB['showFlash'] && czy) {
      let czm = 1.6 * cA0;
      czJ['drawImage'](czx, cA0 * czB['flashX'] - czm / 0x2, cA1 * czB['flashY'] - czm / 0x2, czm, czm);
    }
    if (cA2 && 0x0 < czB['crosshairType'] && !window['spectating']) {
      let czm = czB['crosshairScale'],
        czn = cA0 / 0x2,
        czo = cA1 / 0x2,
        czp = czn - czm / 0x2,
        czq = czo - czm / 0x2,
        czr = 0x4,
        czs = 0x15,
        czu = czB['crosshairThick'],
        czv = czB['crosshairLen'],
        czw = czB['crosshairAlways'],
        czx = 0x1 < czB['crosshairType'] && czw ? 0x1 : czB['crosshairOpacity'];
      czx && (czJ['save'](), czJ['globalAlpha'] = czx, 0x4 == czB['crosshairType'] ? (czJ['translate'](0x0, 0x0), czJ['beginPath'](), czJ['drawImage'](czB['crosshairImage'], czn - czB['crosshairImage']['width'] / 0x2, czo - czB['crosshairImage']['height'] / 0x2)) : (0x2 == czB['crosshairType'] || 0x3 == czB['crosshairType']) && (0x0 == czB['crosshairStyle'] ? (czK(czJ, czn - 0.5 * czu, czo - czv, czu, 0x2 * czv, 0x1, !0x1, czt['crosshairUseShadow']), czK(czJ, czn - czv, czo - czu / 0x2, 0x2 * czv, czu, 0x1, !0x1, czt['crosshairUseShadow']), czK(czJ, czn - 0.5 * czu, czo - czv, czu, 0x2 * czv, 0x1, !0x1, !0x1)) : 0x0 < czB['crosshairStyle'] && czK(czJ, czn - 0x2 * czv / 0x2, czo - 0x2 * czv / 0x2, 0x2 * czv, 0x2 * czv, czu / 0x2, 0x1 == czB['crosshairStyle'] || 0x2 == czB['crosshairStyle'], czt['crosshairUseShadow'], 0x2 == czB['crosshairStyle'] || 0x4 == czB['crosshairStyle'])), (0x1 == czB['crosshairType'] || 0x3 == czB['crosshairType']) && (czJ['globalAlpha'] = czB['crosshairOpacity'], czK(czJ, czp, czq + czm / 0x2 - czr / 0x2, czs, czr, 0x1, !0x1, czt['crosshairUseShadow']), czK(czJ, czp + czm - czs, czq + czm / 0x2 - czr / 0x2, czs, czr, 0x1, !0x1, czt['crosshairUseShadow']), czK(czJ, czp + czm / 0x2 - czr / 0x2, czq, czr, czs, 0x1, !0x1, czt['crosshairUseShadow']), czK(czJ, czp + czm / 0x2 - czr / 0x2, czq + czm - czs, czr, czs, 0x1, !0x1, czt['crosshairUseShadow'])), czJ['restore']());
    }
    czJ['restore']();
  }, czm['exports'] = czt;
}, function(cAw, cAx, cAy) {
  cAy(0x3e), 'localhost' == location['hostname'] && (location['hostname'] = '127.0.0.1');
  var cAz = 'undefined' == typeof __LOADER__sharedObj ? {} : __LOADER__sharedObj,
    cAA = cAy(0x7);
  var cAB = (0x0, eval)('typeof\x20require\x20==\x20\x22function\x22') && cAA['isProd'],
    cAC = 'undefined' != typeof Storage;

  function cAD(cAw) {
    cAC && localStorage['removeItem'](cAw);
  }
  window['saveVal'] = function(cAw, cAx) {
    cAC && localStorage['setItem'](cAw, cAx);
  }, window['getSavedVal'] = function(cAw) {
    return cAC ? localStorage['getItem'](cAw) : null;
  };
  var cAI = new(cAy(0x50))();

  function cAJ() {
    for (var cAw = ['Ranked', 'Shop', 'Social', 'Maps', 'Mods', 'Settings', 'Host', 'Browser', 'Join'], cAx = 0x0; cAx < cAw['length']; cAx++) document['getElementById']('menuBtn' + cAw[cAx])['innerHTML'] = cAI['t']('menu.btn.' + cAw[cAx]['toLowerCase']());
    customizeButton['innerHTML'] = cAI['t']('menu.btn.customize'), inviteButton['innerHTML'] = cAI['t']('menu.btn.invite');
  }
  cAJ(), window['openURL'] = function(cAw) {
    window['open'](cAw, '_blank');
  };
  var cAN = new URLSearchParams(window['location']['search'])['has']('autoQueue'),
    cAO = cAy(0x5e)['default'];
  cAO['PING_REGION_CACHE_KEY'] = 'pingRegion4';
  var cAP = new cAO(cAA['matchmakerURL']),
    cAQ = null;

  function cAR(cAw) {
    cAP['switchGame'](cAw);
  }

  function cAT(cAw) {
    if (cBM && !cBm && (!cAP['queueManager'] || 'Queued' == cAP['queueManager']['status'])) {
      var cAx, cAy, cAz = Array['from'](document['getElementsByClassName']('rankedQueueOption'));
      if (cAz['length'] ? cAx = cAz['filter'](cAw => cAw['checked'])['map'](cAw => cAw['dataset']['queueId']) : cAw && localStorage['lastQueues'] && (cAx = JSON['parse'](localStorage['lastQueues'])), 0x0 != cAx['length']) localStorage['lastQueues'] = JSON['stringify'](cAx), cAx, cAy = 'undefined' == typeof queueRegionSelect ? getSavedVal('krunker_rankedRegion') || localStorage[cAO['PING_REGION_CACHE_KEY']] || 'us-ca-sv' : queueRegionSelect['value'], saveVal('krunker_rankedRegion', cAy), cBI['send']('queue', cAx, cAP['hostname'], cAy), cGK('Queuing');
    }
  }

  function cB0(cAw, cAx) {
    try {
      hostGameMsg['innerHTML'] = cAw;
    } catch (cB3) {}
    cAx && function(cAw) {
      var cAx = cAP['generateHref'](cAw);
      window['history']['replaceState']({}, 'Krunker', cAx), windows[0x1]['lastLoadTime'] = 0x0, cAQ = cAw;
    }(cAx), cMF = null, cMG = null;
  }
  window['switchServer'] = cAR, window['checkedSwitchServer'] = function(cAw, cAx) {
    cAx['innerText'] = '...', cAP['fetchGameInfo'](cAw)['then'](cAy => {
      var [cAz, cAA, cAB, cAC, cAD] = cAy;
      cAB >= cAC ? (cAx['innerHTML'] = cAI['t']('matchmaker.full'), setTimeout(() => {
        cAx['innerText'] = Math['min'](cAB, cAC) + '/' + cAC;
      }, 0x3e8)) : cAR(cAw);
    });
  }, window['joinQueue'] = cAT, window['leaveQueue'] = function() {
    cBI['send']('unqueue'), cGK(null), cAP['unqueue']();
  }, Object['defineProperty'](window, 'createPrivateRoom', {
    'writeable': !0x1,
    'value': function() {
      if (cBJ['mode']['isRanked']) hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>Can\x27t\x20host\x20match\x20while\x20in\x20ranked.</span>';
      else {
        for (var cAw, cAx = [], cAy = document['getElementById']('rawMapData'), cAz = 0x0; cAz < cBR['length']; cAz++)(cAw = document['getElementById']('gameMap' + cAz)) && cAw['checked'] && cAx['push'](cAz);
        if (0x0 != cAx['length'] || cMF || '' != rawMapData['value']) {
          var cAB = [];
          for (cAz = 0x0; cAz < cBS['length']; cAz++) cBS[cAz]['preventCustomGames'] || document['getElementById']('gameMode' + cAz)['checked'] && cAB['push'](cAz);
          if (0x0 != cAB['length']) {
            var cAC = [];
            for (cAz = 0x0; cAz < cBJ['classes']['length']; cAz++) document['getElementById']('gameClass' + cAz)['checked'] && cAC['push'](cAz);
            if (0x0 != cAC['length']) {
              var cAD, cAJ = {
                'customMap': cMF,
                'rawMapData': cAy ? cAy['value'] : null,
                'private': makePrivate['checked'],
                'maps': cAx,
                'modes': cAB,
                'classes': cAC
              };
              for (cAz = 0x0; cAz < cAA['serverConfig']['length']; cAz++) cAD = document['getElementById']('customS' + cAA['serverConfig'][cAz]['varN']), tmpV = cAA['serverConfig'][cAz]['bool'] ? cAD ? cAD['checked'] : 0x0 : cAA['serverConfig'][cAz]['input'] ? cAD ? cBA['sanitizeStr'](cAD['value']) : 0x0 : cAD ? parseFloat(cAD['value']) : 0x0, cAJ[cAA['serverConfig'][cAz]['varN']] = tmpV;
              cBI['send']('custom', cAJ), hostGameMsg['innerHTML'] = cAI['t']('generic.wait');
            } else hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cAI['t']('custom.class.missing') + '</span>';
          } else hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cAI['t']('custom.mode.missing') + '</span>';
        } else hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cAI['t']('custom.map.missing') + '</span>';
      }
    }
  });
  var cBm = !0x1,
    cBn = 0x5;

  function cBo(cAw, cAx) {
    if (!cAw) return cGK(null), void('AccountAlreadyPlaying' == cAx && (cGX(cAI['t']('queue.status.already-queued')), setTimeout(function() {
      cGX(null);
    }, 0x7d0)));
    var cAy = null;
    cAP['queue']({
      'clientId': cAw,
      'statusCallback': function(cAw, cAx) {
        cGK(cAw, cAx);
      },
      'hostCallback': function(cAw, cAx, cAz) {
        cAy = setTimeout(function() {
          cBm = !0x0, saveVal('queueHost', cAw), saveVal('queuePort', cAx), saveVal('pgi', cAz), cAP['unqueue'](), cBI['send']('unqueue', !0x0), location = '/', window['reload']();
        }, 0x3e8 * cBn);
      },
      'joinCallback': function(cAw) {
        cAP['unqueue'](), cBI['send']('unqueue', !0x0), cAP['switchGame'](cAw);
      },
      'cancelJoinCallback': function() {
        cGX('Cancelled'), clearTimeout(cAy), clearTimeout(cGS);
      }
    });
  }
  Object['defineProperty'](console, '_commandLineAPI', {
    'get': function() {
      throw '';
    }
  });
  var cBy = cAy(0x15),
    cBz = cAy(0x4);
  cBz['OBJLoader'] = cAy(0x40)(cBz), cBz['Shaders'] = cAy(0x41)(cBz);
  var cBA = cAy(0x8),
    cBB = cAy(0x5c),
    cBC = new(cAy(0x39))(cBz, cBA, cBy, cAA, cBB),
    cBD = window['SOUND'] = new(cAy(0x49))(cBA, cAA),
    cBE = new(cAy(0x4a))(cBC, cAA),
    cBF = cAy(0x62),
    cBG = new(cAy(0x63))(cBC, cAA),
    cBH = cAy(0x64),
    cBI = cAy(0x56),
    cBJ = cAy(0x58)['obj'];
  cBJ = new cBJ(!0x1, 0x0, null, cBC, cBD, cBE);
  var cBK = new(cAy(0x65))(cBC, cBz, cBF, cBA, cBJ, cAA, cBI);
  cBJ['controls'] = cBK;
  var cBL, cBM, cBN, cBO, cBP, cBQ, cBR = cAy(0x37)['maps'],
    cBS = cAy(0x37)['modes'],
    cBT = cAy(0x5a),
    cBU = cAy(0x46)['Player'],
    cBV = new(cAy(0x67))(),
    cBW = cAy(0x23),
    cBX = (new cBz['Vector3'](), !0x1),
    cBY = null;
  window['locked'] = !0x1;
  var cBZ, cC0, cC1, cC2, cC3 = [],
    cC4 = [],
    cC5 = null,
    cC6 = !0x0,
    cC7 = 0x0,
    cC8 = 0x0,
    cC9 = 0x0,
    cCa = 0x1e,
    cCb = 0x0,
    cCc = 0x1,
    cCd = 0x1,
    cCe = -0x1,
    cCf = 0x0,
    cCg = !0x0,
    cCh = !0x0,
    cCi = !0x0,
    cCj = '',
    cCk = !0x1,
    cCl = 0x0,
    cCm = 0x1,
    cCn = !0x0,
    cCo = 0x0,
    cCp = [],
    cCq = !0x1,
    cCr = [],
    cCs = !0x1,
    cCt = 0.2,
    cCu = 0xfa,
    cCv = !0x1,
    cCw = !0x0,
    cCx = !0x0,
    cCy = !0x1,
    cCz = getSavedVal('krk_lastMod') || '';

  function cCA(cAw) {
    cCz = cAw, saveVal('krk_lastMod', cAw);
  }
  cCA(cCz);
  var cCC, cCD = 0x1,
    cCE = 0x1,
    cCF = 0x6a4,
    cCG = 0x384;

  function cCH() {
    var cAw = window['innerWidth'],
      cAx = window['innerHeight'],
      cAy = cCF * cCE,
      cAz = cCG * cCE,
      cAA = cAw / cAy,
      cAB = cAx / cAz;
    cAB < cAA ? (cCD = cAB, uiBase['style']['transform'] = 'scale(' + cAB['toFixed'](0x3) + ')', uiBase['style']['width'] = (cAw / cAB)['toFixed'](0x3) + 'px', uiBase['style']['height'] = cAz + 'px') : (cCD = cAA, uiBase['style']['transform'] = 'scale(' + cAA['toFixed'](0x3) + ')', uiBase['style']['width'] = cAy + 'px', uiBase['style']['height'] = (cAx / cAA)['toFixed'](0x3) + 'px'), cCC = cAx / cCD / 0x2b5, cBC['resize']();
  }
  window['addEventListener']('resize', cCH), cCH(), cAz['r'] = (...cAw) => cBI['send'](...cAw), window['checkTerms'] = function(cAw) {
    cAw ? (consentBlock['style']['display'] = 'none', saveVal('consent', 0x1)) : $('#consentShake')['effect']('shake');
  };
  var cCQ = ['/img/button/button-normal.png', '/img/button/button-hover.png', '/img/button/button-pressed.png', '/img/social-buttons/discord-normal.png', '/img/social-buttons/discord-hover.png', '/img/social-buttons/discord-pressed.png', '/img/social-buttons/reddit-normal.png', '/img/social-buttons/reddit-hover.png', '/img/social-buttons/reddit-pressed.png', '/img/social-buttons/twitter-normal.png', '/img/social-buttons/twitter-hover.png', '/img/social-buttons/twitter-pressed.png', '/img/social-buttons/kr-normal.png', '/img/social-buttons/kr-hover.png', '/img/social-buttons/kr-pressed.png'],
    cCR = [];
  window['addEventListener']('load', function() {
    for (var cAw of cCQ) {
      var cAx = new Image();
      cAx['src'] = cAw, cCR['push'](cAx);
    }
  }), Math['PI2'] = 0x2 * Math['PI'], Math['lerpAngle'] = function(cAw, cAx, cAy) {
    Math['abs'](cAx - cAw) > Math['PI'] && (cAw > cAx ? cAx += Math['PI2'] : cAw += Math['PI2']);
    var cAz = cAx + (cAw - cAx) * cAy;
    return 0x0 <= cAz && cAz <= Math['PI2'] ? cAz : cAz % Math['PI2'];
  }, console['warn'] = function() {}, console['info'] = function() {};
  var cCY = !0x1;
  window['toggleStrm'] = function(cAw, cAx = !0x1) {
    cCY = cAw, cAx || (cAw ? window['history']['pushState'](document['title'], document['title'], '/') : window['history']['pushState'](document['title'], document['title'], cAP['generateHref'](cAQ))), cRA(cRy, cRz);
  };
  var cD1 = !0x1;

  function cD2(cAw) {
    return cAA['apiURL'] + cAw;
  }
  window['loading'] = !0x1, Object['defineProperty'](window, 'enterGame', {
    'writeable': !0x1,
    'value': function() {
      if (cBJ['singlePlayer'] && !cD1) {
        cOv('0:00');
        var cAw = cBJ['getSpawnPoint'](null, !0x0),
          cAx = cBJ['classes'][parseInt(cCl)];
        cQu([cBI['socketId'], 0x1, cAw['x'], cAw['y'], cAw['z'], 'TEST', parseInt(cCl), cAx['health'], cAx['health'], null, 0x64, null, [null == cHG[cAx['loadout'][0x0]] ? -0x1 : cHG[cAx['loadout'][0x0]], null == cHG[cAx['loadout'][0x1]] ? -0x1 : cHG[cAx['loadout'][0x1]]], parseInt(cHE), parseInt(cHD), cAx['secondary'] ? parseInt(cHH) : null, !0x1, null, -((cAw['dir'] || 0x0) + 0x1) * Math['PI'] / 0x2, parseInt(cHC), parseInt(cHA), 0x0, 0x0]), cD1 = !0x0, cRA([0x1, 'TEST', 0x0, 0x0, 0x0, 0x0]), cBF['toggleMenu'](!0x1);
      } else if (cBI['connected'] && (!cD1 || window['spectating'] && !cDr)) {
        bloodDisplay['style']['display'] = 'none', cD1 = !0x0, cBK['idleTimer'] = 0x0, cBF['toggleMenu'](!0x1), instructions['innerHTML'] = cAI['t']('generic.loading'), window['loading'] = !0x0;
        cAx = parseInt(cCl);
        var cAy = cBJ['classes'][cAx]['loadout'],
          cAz = [null == cHG[cAy[0x0]] ? -0x1 : -0x2 == cHG[cAy[0x0]] ? cHJ(cAy[0x0] + 0x1) : cHG[cAy[0x0]], null == cHG[cAy[0x1]] ? -0x1 : cHG[cAy[0x1]]];
        cBI['send']('etg', [cAx, -0x2 == cQg ? cBA['randInt'](0x0, cBJ['sprays']['length'] - 0x1) || 0x0 : parseInt(cQg), cAz, -0x2 == cHE ? cHJ(null, 0x1) : parseInt(cHE), -0x2 == cHD ? cHJ(null, 0x2) : parseInt(cHD), parseInt(cHH), cDr ? 0x1 : 0x0, cDx ? 0x1 : 0x0, cHz, -0x2 == cHC ? cHJ(null, 0x3) : parseInt(cHC), parseInt(cHA), parseFloat(cCd), parseInt(cHB)]);
      }
    }
  }), window['toggleAd'] = function() {};
  var cD8 = 0x0,
    cD9 = !0x1;

  function cDa(cAw) {
    cBM && (cBM['funds'] = cAw), cGI();
  }

  function cDc(cAw, cAx) {
    cBK['idleTimer'] = 0x0, cAw ? purchaseError() : (cBM && (cBM['funds'] = cAx), cGI(), updateWindow(null, !0x0), cBF['toggleMenuHider'](!0x0), purchaseLoad['style']['display'] = 'none');
  }
  window['cancelPurchase'] = function() {
    cD9 && (cBK['idleTimer'] = 0x0, purchaseResponse['style']['display'] = 'none', cD8 = 0x0, purchaseLoad['style']['display'] = 'none', cD9 = !0x1);
  }, window['showPurchase'] = function(cAw) {
    cBJ['store']['purchases'][cAw] && (cBK['idleTimer'] = 0x0), cD8 = cAw, purchaseHolder['style']['display'] = 'block';
    var cAx = document['getElementById']('paypal-button'),
      cAy = document['getElementById']('creatorCodeI') || {};
    cAx && (cAx['innerHTML'] = ''), cBM && paypal['Button']['render']({
      'style': {
        'size': 'large'
      },
      'env': 'production',
      'commit': !0x0,
      'payment': function(cAw, cAx) {
        return purchaseHolder['style']['display'] = 'none', cAx['request']['post'](cD2('/my-api/create-payment/'), {
          'pIndex': cD8,
          'acID': cBM['id'],
          'creID': cAy['value'] || null
        })['then'](function(cAw) {
          return cAw['id'];
        });
      },
      'onAuthorize': function(cAw, cAx) {
        return cAx['request']['post'](cD2('/my-api/execute-payment/'), {
          'pIndex': cD8,
          'acID': cBM['id'],
          'creID': cAy['value'] || null,
          'paymentID': cAw['paymentID'],
          'payerID': cAw['payerID']
        })['then'](function(cAw) {
          cAw && null != cAw['funds'] && null != cAw['funds'] ? (cBM && (cBM['funds'] = cAw['funds']), cGI(), updateWindow(null, !0x0), cBF['toggleMenuHider'](!0x0), purchaseLoad['style']['display'] = 'none') : purchaseError(cAw);
        });
      },
      'onError': function(cAw) {
        purchaseError(cAw);
      }
    }, '#paypal-button');
  }, purchaseHolder['onclick'] = function() {
    purchaseHolder['style']['display'] = 'none';
  }, window['purchaseError'] = function(cAw) {
    cD9 = !0x0;
    var cAx = 'Purchase\x20Error';
    cAw && cAw['err'] && (cAx = cAw['err']), purchaseResponse['style']['display'] = 'block', purchaseRespH['innerHTML'] = cAx + '\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27cancelPurchase()\x27>' + cAI['t']('purchase.error.click') + '</a>';
  }, purchaseResponse['onclick'] = function() {
    purchaseResponse['style']['display'] = 'none';
  };
  var cDr = !0x1,
    cDs = null,
    cDt = !0x1;
  window['noMouseInp'] = !0x1;
  var cDu = !0x1,
    cDv = null;
  window['spectating'] = !0x1, window['toggleSpect'] = function(cAw) {
    cDr = cAw;
  };
  var cDx = !0x1;
  window['toggleChal'] = function(cAw) {
    cDx = cAw;
  }, window['spectFP'] = function(cAw) {
    (cDu = cAw) ? (cDv = !0x0, window['noMouseInp'] = !0x0) : (cDv = null, window['noMouseInp'] = !0x1), cBK['setCamPosOff'](), specIns['innerHTML'] = cDu ? 'Third\x20Person' : 'First\x20Person';
  }, window['spectMode'] = function(cAw) {
    if (cBJ && cBJ['players']) {
      if (cAw) {
        for (var cAx = null, cAy = cDt ? cBJ['map']['manager']['spectateCams'][cBJ['activeObjective'] || 0x0] : cBJ['players']['list'], cAz = Math['max'](0x0, cDs ? cAy['indexOf'](cDs) : 0x0), cAA = 0x0; cAA < cAy['length']; ++cAA)
          if ((cAz += cAw) >= cAy['length'] ? cAz = 0x0 : 0x0 > cAz && (cAz = cAy['length'] - 0x1), (cBN = cAy[cAz]) && cBN['active']) {
            cAx = cBN;
            break;
          } cDs != cAx && (cDs = cAx, !cDt && cBI['send']('fpSp', cAx ? cAx['sid'] : null));
      } else cDt = !0x1, cDs = null, cBK['setCamPosOff'](), cBI['send']('fpSp');
      window['noMouseInp'] = cDt;
    }
  }, window['specStatUpdate'] = function(cAw) {
    if (cAw = cDs) {
      specStats['style']['display'] = 'inline-block';
      for (var cAx = cAw['name'] + (cAw['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAA['verClans']['indexOf'](cAw['clan']) ? cBy['verified']['clan'] : '#353535') + '\x27>\x20[' + cAw['clan'] + ']</span>' : ''), cAy = cBJ['mode']['endStats'] || cAA['endStats'], cAz = 'font-size:11px;color:rgb(255,255,255,0.5)', cAB = 0x2; cAB < cAy['length']; ++cAB) cAx += '<div\x20style=\x27' + cAz + '\x27>' + cBA['capFirst'](cAy[cAB]) + '<span\x20style=\x27float:right;' + cAz + '\x27>' + (cAA['endForm'][cAy[cAB]] ? cAA['endForm'][cAy[cAB]](cAw[cAy[cAB]], cBJ, cAw[cMd]) : cAw[cAy[cAB]]) + '</span></div>';
      specStats['innerHTML'] = cAx;
    } else specStats['style']['display'] = 'none', specStats['innerHTML'] = '';
  };
  const cDK = new FileReader();
  var cDL, cDM, cDN = !0x1,
    cDO = 0x0,
    cDP = !0x0,
    cDQ = {};

  function cDR() {
    cD1 = !0x1, cBK['idleTimer'] = 0x0, cBF['toggleMenu'](!0x0), cBK['toggle'](!0x1), cNF = {
      'states': []
    };
  }

  function cDS() {
    menuMiniProfilePic['src'] = hudClassImg['src'] = cCj['length'] ? cCj : cBA['assetsUrl']('/textures/classes/icon_' + cCl + '.png');
  }

  function cDT(cAw) {
    var cAx = [],
      cAy = 0x1 == cAw;
    0x1 != cEH[cAy ? 'menuSaturation' : 'saturation']['val'] && cAx['push']('saturate(' + 0x64 * cEH[cAy ? 'menuSaturation' : 'saturation']['val'] + '%)'), 0x0 != cEH[cAy ? 'menuHue' : 'hue']['val'] && cAx['push']('hue-rotate(' + 3.6 * cEH[cAy ? 'menuHue' : 'hue']['val'] + 'deg)'), cAy ? cAx['length'] ? uiBase['style']['filter'] = cAx['join']('\x20') : uiBase['style']['removeProperty']('filter') : cAx['length'] ? (cBB['canvas']['style']['filter'] = cAx['join']('\x20'), cBC['renderer']['domElement']['style']['filter'] = cAx['join']('\x20')) : (cBB['canvas']['style']['removeProperty']('filter'), cBC['renderer']['domElement']['style']['removeProperty']('filter'));
  }
  window['addVoiceStream'] = function(cAw, cAx) {
    cDQ[cAw] || (cDQ[cAw] = [], speakerDisplay['innerHTML'] += '<div\x20id=\x27speaker' + cAw + '\x27\x20class=\x27voiceSpeaker\x27>' + cAw + '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px;vertical-align:middle\x27>volume_down</i></div>');
    var cAy = new Howl({
      'src': [cAx],
      'volume': cDO
    });
    cDQ[cAw]['push'](cAy), cAy['on']('load', function() {
      cAy['duration']() <= cAA['voiceChatMaxLength'] ? (cAy['on']('end', function() {
        remSpeaker(cAw);
      }), cAy['isReady'] = !0x0, 0x0 == cDQ[cAw]['indexOf'](cAy) && cAy['play']()) : remSpeaker(cAw);
    });
  }, window['remSpeaker'] = function(cAw, cAx) {
    if (cDQ[cAw] && cDQ[cAw][0x0] && (cDQ[cAw]['splice'](0x0, 0x1), cDQ[cAw][0x0] && cDQ[cAw][0x0]['isReady'] && cDQ[cAw][0x0]['play']()), !cDQ[cAw] || !cDQ[cAw]['length'] || cAx) {
      var cAy = document['getElementById']('speaker' + cAw);
      cAy && cAy['parentElement']['removeChild'](cAy), delete cDQ[cAw];
    }
  }, window['voiceChat'] = function(cAw, cAx) {
    if (cDO) {
      cCY && cBV && (cAx = cBA['scrambleS'](cAx));
      try {
        addVoiceStream(cAx, cAw);
      } catch (cE5) {}
    }
  }, cDK['addEventListener']('load', function() {
    var cAw = cDK['result'];
    cBI['send']('vc', cAw);
  }), window['toggleRecord'] = function(cAw) {
    'INPUT' == document['activeElement']['tagName'] || (cBL || window['spectating']) && (cAw && !cDN && cDP ? navigator['mediaDevices']['getUserMedia']({
      'audio': !0x0,
      'video': !0x1
    })['then'](function(cAw) {
      cDP = !0x1, voiceDisplay['style']['opacity'] = 0.9, cDN = !0x0, cDL = new MediaRecorder(cAw, {
        'mimetype': 'audio/ogg',
        'bitsPerSecond': 0x1770
      });
      const cAx = [];
      cDL['addEventListener']('dataavailable', function(cAw) {
        cAx['push'](cAw['data']);
      }), cDL['addEventListener']('stop', function() {
        var cAw = new Blob(cAx, {
          'type': 'audio/ogg;\x20codecs=opus'
        });
        cDK['readAsDataURL'](cAw), cAx['length'] = 0x0;
      }), cDL['start'](), cDM = setInterval(function() {
        'recording' == cDL['state'] && cDL['stop'](), cDN ? cDL['start']() : (voiceDisplay['style']['opacity'] = 0.5, cDM && clearInterval(cDM), cDP = !0x0);
      }, cAA['voiceRate']);
    })['catch'](function() {
      cDN = !0x1, voiceDisplay['style']['opacity'] = 0.5, cDM && clearInterval(cDM);
    }) : !cAw && cDN && cDL && (cDN = !0x1));
  }, window['updateSliderLabel'] = function(cAw, cAx) {
    var cAy = document['getElementById']('customSet' + cAw);
    cAy && (cAy['innerHTML'] = cAx);
  }, Object['defineProperty'](window, 'setSetting', {
    'writeable': !0x1,
    'value': function(cAw, cAx) {
      cAx = cAx['replace'] ? cAx['replace']('>', '') : cAx, (cEH[cAw]['min'] || cEH[cAw]['max']) && (cAx = Math['min'](cEH[cAw]['max'], Math['max'](cEH[cAw]['min'], cAx))), document['getElementById']('slid_' + cAw) && (document['getElementById']('slid_' + cAw)['value'] = cAx), document['getElementById']('slid_input_' + cAw) && (document['getElementById']('slid_input_' + cAw)['value'] = cAx), cEH[cAw]['val'] = cAx, cEH[cAw]['set'](cAx), saveVal('kro_setngss_' + cAw, cAx);
    }
  }), window['resetSettings'] = function() {
    confirm(cAI['t']('settings.reset.confirm')) && (Object['keys'](localStorage)['filter'](cAw => cAw['includes']('kro_setngss_') || cAw['includes']('cont_'))['forEach'](cAw => localStorage['removeItem'](cAw)), location['reload']());
  }, window['exportSettings'] = function() {
    var cAw = {
      'controls': cBK['export']()
    };
    for (var cAx in cEH) cAw[cAx] = cEH[cAx]['val'];
    downloadFile('settings.txt', cAw);
  }, window['importSettings'] = function() {
    var cAw = prompt('Copy\x20Paste\x20Settings\x20Text\x20Here');
    if (cAw && '' != cAw) try {
      let cAA = JSON['parse'](cAw);
      for (var cAx in cAA)
        if ('controls' == cAx) {
          for (var cAy in cAA['controls'])
            if (cBK[cAy])
              if ('moveKeys' == cAy || 'streakKeys' == cAy)
                for (var cAz = 0x0; cAz < cAA['controls'][cAy]['length']; cAz++) cBK[cAy][cAz] = cAA['controls'][cAy][cAz], saveVal('cont_' + (cAz + ('streakKeys' == cAy ? 0x12 : 0x0)), cAA['controls'][cAy][cAz]);
              else cBK[cAy] = cAA['controls'][cAy], saveVal('cont_' + cAy, cAA['controls'][cAy]);
        } else setSetting(cAx, cAA[cAx]);
      cBK['checkForScroll'](), showWindow(0x1);
    } catch (cEq) {
      alert('Failed\x20to\x20import\x20settings\x20with\x20error:\x0a' + cEq['toString']());
    }
  }, window['aspectSelect'] = function(cAw, cAx) {
    var cAy = cAx['selectedIndex'] - 0x1,
      cAz = document['getElementById']('slid_' + cAw);
    cAz && (cAz['value'] = 0x0 == cAy ? '' : cAA['customRatios'][cAy]), cAx['selectedIndex'] = 0x0, setSetting(cAw, cAz['value']);
  };
  var cEv = {};

  function cEw(cAw, cAx, cAy, cAz) {
    if ('checkbox' == cAw) return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22' + cAx + '\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cAy['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
    if ('slider' == cAw) return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_' + cAx + '\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20min=\x27' + cAy['min'] + '\x27\x20max=\x27' + cAy['max'] + '\x27\x20value=\x27' + cAy['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22' + cAx + '\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_' + cAx + '\x27\x20min=\x27' + cAy['min'] + '\x27\x20max=\x27' + cAy['max'] + '\x27\x20step=\x27' + cAy['step'] + '\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cAy['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22' + cAx + '\x22,\x20this.value)\x27></div>';
    if ('select' == cAw) {
      var cAA = '<select\x20onchange=\x27setSetting(\x22' + cAx + '\x22,\x20this.value)\x27\x20class=\x27inputGrey2\x27>';
      for (var cAB in cAz) cAA += '<option\x20value=\x27' + cAB + '\x27\x20' + (cAB == cAy['val'] ? 'selected' : '') + '>' + cAz[cAB] + '</option>';
      return cAA += '</select>';
    }
    return '<input\x20type=\x27' + cAw + '\x27\x20name=\x27' + cAw + '\x27\x20id=\x27slid_' + cAx + '\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + ('color' == cAw ? 'style=\x27float:right;margin-top:5px\x27' : 'class=\x27inputGrey2\x27\x20placeholder=\x27' + cAz + '\x27') + '\x0a\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cAy['val'] + '\x27\x20oninput=\x27setSetting(\x22' + cAx + '\x22,\x20this.value)\x27/>';
  }
  window['delayExecute'] = function(cAw, cAx, cAy = 0x258) {
    return clearTimeout(cEv[cAw]), cEv[cAw] = setTimeout(function() {
      setSetting(cAw, cAx['value']);
    }, cAy), !0x0;
  };
  var cEG, cEH = {
    'defaultRegion': {
      'name': 'settings.local.region',
      'cat': 'local',
      get 'val'() {
        return localStorage[cAO['PING_REGION_CACHE_KEY']];
      },
      set 'val'(cAw) {},
      'html': function() {
        var cAw = {};
        for (var cAx of cTV) cAw[cAx] = cAA['regionNames'][cAx];
        return cEw('select', 'defaultRegion', this, cAw);
      },
      'set': function(cAw) {
        cAw && cAA['isProd'] && localStorage['setItem'](cAO['PING_REGION_CACHE_KEY'], cAw);
      }
    },
    'lang': {
      'name': 'settings.local.lang',
      'cat': 'local',
      'val': cAI['locale'],
      'html': function() {
        var cAw = {};
        for (var cAx of cAI['supported']) cAw[cAx] = cAA['langNames'][cAx];
        return cEw('select', 'lang', this, cAw);
      },
      'set': function(cAw) {
        cAw && (cAI['setLocale'](cAw), cAJ(), 'block' == windowHolder['style']['display'] && cBF['toggleWindow'](!0x1, cBK['gamepad']['_connected']));
      }
    },
    'resolution': {
      'name': 'settings.quality.res',
      'cat': 'quality',
      'val': 0.6,
      'min': 0.1,
      'max': 0x2,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'resolution', this);
      },
      'set': function(cAw) {
        cBC['setResMlt'](cAw);
      }
    },
    'updateRate': {
      'name': 'settings.quality.updRate',
      'cat': 'quality',
      'val': 0x0,
      'min': 0x0,
      'max': 0x4b0,
      'step': 0xa,
      'html': function() {
        return cEw('slider', 'updateRate', this);
      },
      'set': function(cAw) {
        cC9 = cAw;
      }
    },
    'aspectRatio': {
      'name': 'settings.gameplay.aspectRatio',
      'cat': 'quality',
      'val': '',
      'html': function() {
        var cAw = '<select\x20onchange=\x27aspectSelect(\x22aspectRatio\x22,\x20this)\x27\x20class=\x27inputGrey2\x27>';
        cAw += '<option\x20value=\x27\x27\x20disabled\x20selected>Presets</option>';
        for (var cAx = 0x0; cAx < cAA['customRatios']['length']; cAx++) cAw += '<option>' + cAA['customRatios'][cAx] + '</option>';
        return (cAw += '</select>') + cEw('input', 'aspectRatio', this, window['innerWidth'] + 'x' + window['innerHeight']);
      },
      'set': function(cAw) {
        cBC['aspectRatio'] = cAw, cBC['resize']();
      }
    },
    'lowSpec': {
      'name': 'settings.quality.lowSpec',
      'cat': 'quality',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'lowSpec', this);
      },
      'set': function(cAw) {
        cBC['lowSpec'] = cAw;
      }
    },
    'particles': {
      'name': 'settings.quality.part',
      'cat': 'quality',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'particles', this);
      },
      'set': function(cAw) {
        cBE['active'] = cAw;
      }
    },
    'shadows': {
      'name': 'settings.quality.shadows',
      'cat': 'quality',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'shadows', this);
      },
      'set': function(cAw) {
        cBC['toggleShadowMap'](cAw);
      }
    },
    'ambientShading': {
      'name': 'settings.quality.ambient',
      'cat': 'quality',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'ambientShading', this);
      },
      'set': function(cAw) {
        cBC['toggleMeshGroup']('ambient_0', cAw), cBC['toggleMeshGroup']('ambient_1', cAw);
      }
    },
    'showTrails': {
      'name': 'settings.quality.trails',
      'cat': 'quality',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showTrails', this);
      },
      'set': function(cAw) {
        cBE['showTrails'] = cAw;
      }
    },
    'muzzleFlash': {
      'name': 'settings.quality.mflash',
      'cat': 'quality',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'muzzleFlash', this);
      },
      'set': function(cAw) {
        cBE['showMuzzle'] = cAw;
      }
    },
    'sniperFlap': {
      'name': 'settings.quality.flap',
      'cat': 'quality',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'sniperFlap', this);
      },
      'set': function(cAw) {
        cBC['sniperFlap'] = cAw;
      }
    },
    'scaleUI': {
      'name': 'settings.interface.scale',
      'cat': 'interface',
      'val': 0x1,
      'min': 0.1,
      'max': 0x1,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'scaleUI', this);
      },
      'set': function(cAw) {
        cCE = 0x1 - cAw + 0x1, cCH();
      }
    },
    'showUI': {
      'name': 'settings.interface.ui',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showUI', this);
      },
      'set': function(cAw) {
        for (cBF['hideGameUI'] = !cAw, chatUI['style']['display'] = cAw ? 'block' : 'none'; chatList['scrollHeight'] >= cCu;) chatList['removeChild'](chatList['childNodes'][0x0]);
      }
    },
    'dynamicHP': {
      'name': 'settings.interface.hp',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'dynamicHP', this);
      },
      'set': function(cAw) {
        cBB['dynamicHP'] = cAw;
      }
    },
    'showHitInd': {
      'name': 'settings.interface.hitInd',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showHitInd', this);
      },
      'set': function(cAw) {
        cCw = cAw, cAw || (cSQ && (cSQ['length'] = 0x0), hitHolder['innerHTML'] = '');
      }
    },
    'showDMG': {
      'name': 'settings.interface.dmg',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showDMG', this);
      },
      'set': function(cAw) {
        cBB['showDMG'] = cAw;
      }
    },
    'dmgColor': {
      'name': 'settings.interface.dmgCol',
      'cat': 'interface',
      'val': cBy['damage'],
      'html': function() {
        return cEw('color', 'dmgColor', this);
      },
      'set': function(cAw) {
        cBB['dmgColor'] = cAw;
      }
    },
    'critColor': {
      'name': 'settings.interface.critCol',
      'cat': 'interface',
      'val': cBy['critical'],
      'html': function() {
        return cEw('color', 'critColor', this);
      },
      'set': function(cAw) {
        cBB['critColor'] = cAw;
      }
    },
    'dmgScale': {
      'name': 'settings.interface.dmgScale',
      'cat': 'interface',
      'val': 0x1,
      'min': 0.1,
      'max': 0x2,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'dmgScale', this);
      },
      'set': function(cAw) {
        cBB['dmgScale'] = 0x1e * cAw;
      }
    },
    'showChat': {
      'name': 'settings.interface.chat',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showChat', this);
      },
      'set': function(cAw) {
        chatHolder['style']['display'] = cAw ? 'block' : 'none';
      }
    },
    'showKills': {
      'name': 'settings.interface.killf',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showKills', this);
      },
      'set': function(cAw) {
        cCg = cAw;
      }
    },
    'showKillC': {
      'name': 'settings.interface.kills',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showKillC', this);
      },
      'set': function(cAw) {
        killCount['style']['display'] = cAw ? 'inline-block' : 'none';
      }
    },
    'showDeaths': {
      'name': 'settings.interface.deaths',
      'cat': 'interface',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'showDeaths', this);
      },
      'set': function(cAw) {
        deathCount['style']['display'] = cAw ? 'inline-block' : 'none';
      }
    },
    'showStreak': {
      'name': 'settings.interface.streak',
      'cat': 'interface',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'showStreak', this);
      },
      'set': function(cAw) {
        streakCount['style']['display'] = cAw ? 'inline-block' : 'none';
      }
    },
    'showMessages': {
      'name': 'settings.interface.messages',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showMessages', this);
      },
      'set': function(cAw) {
        cCh = cAw;
      }
    },
    'showUnboxings': {
      'name': 'settings.interface.unboxings',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showUnboxings', this);
      },
      'set': function(cAw) {
        cCi = cAw;
      }
    },
    'showPing': {
      'name': 'settings.interface.ping',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showPing', this);
      },
      'set': function(cAw) {
        pingDisplay['style']['display'] = cAw ? 'block' : 'none';
      }
    },
    'showFPS': {
      'name': 'settings.interface.fps',
      'cat': 'interface',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'showFPS', this);
      },
      'set': function(cAw) {
        fpsDisplay['style']['display'] = menuFPSDisplay['style']['display'] = cAw ? 'block' : 'none';
      }
    },
    'showSpeed': {
      'name': 'settings.interface.speed',
      'cat': 'interface',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'showSpeed', this);
      },
      'set': function(cAw) {
        speedDisplay['style']['display'] = cAw ? 'block' : 'none';
      }
    },
    'speedOffX': {
      'name': 'settings.interface.speedOffX',
      'cat': 'interface',
      'val': 0x5,
      'min': 0x0,
      'max': 0xa,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'speedOffX', this);
      },
      'set': function(cAw) {
        speedDisplay['style']['left'] = 0xa * cAw + '%', speedDisplay['style']['transform'] = 'translate(' + (0xa * cAw - 0x64) + '%,\x20' + (0xa * cEH['speedOffY']['val'] - 0x64) + '%)';
      }
    },
    'speedOffY': {
      'name': 'settings.interface.speedOffY',
      'cat': 'interface',
      'val': 5.4,
      'min': 0x0,
      'max': 0xa,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'speedOffY', this);
      },
      'set': function(cAw) {
        speedDisplay['style']['top'] = 0xa * cAw + '%', speedDisplay['style']['transform'] = 'translate(' + (0xa * cEH['speedOffX']['val'] - 0x64) + '%,\x20' + (0xa * cAw - 0x64) + '%)';
      }
    },
    'showMedals': {
      'name': 'settings.interface.medals',
      'cat': 'interface',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showMedals', this);
      },
      'set': function(cAw) {
        cCn = cAw;
      }
    },
    'hideNames': {
      'name': 'settings.interface.hideNames',
      'cat': 'interface',
      'val': 0x0,
      'html': function() {
        return cEw('select', 'hideNames', this, {
          0: cAI['t']('settings.interface.hideNames.all'),
          1: cAI['t']('settings.interface.hideNames.team'),
          2: cAI['t']('settings.interface.hideNames.enemy'),
          3: cAI['t']('generic.off')
        });
      },
      'set': function() {}
    },
    'nametagStyle': {
      'name': 'settings.interface.nametagStyle',
      'cat': 'interface',
      'val': 0x0,
      'html': function() {
        return cEw('select', 'nametagStyle', this, {
          0: cAI['t']('settings.interface.nametagStyle.all'),
          1: cAI['t']('settings.interface.nametagStyle.name'),
          2: cAI['t']('settings.interface.nametagStyle.nameLvl'),
          3: cAI['t']('settings.interface.nametagStyle.health')
        });
      },
      'set': function(cAw) {
        cBB['nametagStyle'] = cAw;
      }
    },
    'crosshairSho': {
      'name': 'settings.crosshair.type',
      'cat': 'crosshair',
      'val': 0x1,
      'html': function() {
        return cEw('select', 'crosshairSho', this, {
          0: cAI['t']('generic.off'),
          1: cAI['t']('generic.default'),
          2: cAI['t']('settings.crosshair.type.2'),
          3: cAI['t']('settings.crosshair.type.3'),
          4: cAI['t']('settings.crosshair.type.4')
        });
      },
      'set': function(cAw) {
        cBB['crosshairType'] = cAw;
        let cAx = ['crosshairStyle', 'crosshairAlways', 'crosshairLen', 'crosshairThick'];
        for (let cAy of cAx) {
          cEH[cAy]['hide'] = 'crosshairAlways' == cAy ? 0x2 > cAw : 0x4 == cAw || 0x2 > cAw;
          let cAx = document['getElementById'](cAy + '_div');
          cAx && (cAx['style']['display'] = cEH[cAy]['hide'] ? 'none' : 'block');
        }
        for (let cAx of ['crosshairColor', 'crosshairShadow']) {
          cEH[cAx]['hide'] = 0x1 > cAw || 0x4 == cAw;
          let cAy = document['getElementById'](cAx + '_div');
          cAy && (cAy['style']['display'] = cEH[cAx]['hide'] ? 'none' : 'block');
        }
        cEH['crosshairImage']['hide'] = 0x4 != cAw;
        let cAy = document['getElementById']('crosshairImage_div');
        cAy && (cAy['style']['display'] = 0x4 == cAw ? 'block' : 'none');
      }
    },
    'crosshairStyle': {
      'name': 'settings.crosshair.style',
      'cat': 'crosshair',
      'val': 0x0,
      'hide': !0x0,
      'html': function() {
        return cEw('select', 'crosshairStyle', this, {
          0: cAI['t']('settings.crosshair.style.0'),
          1: cAI['t']('settings.crosshair.style.1'),
          2: cAI['t']('settings.crosshair.style.2'),
          3: cAI['t']('settings.crosshair.style.3'),
          4: cAI['t']('settings.crosshair.style.4')
        });
      },
      'set': function(cAw) {
        cBB['crosshairStyle'] = cAw;
      }
    },
    'crosshairImage': {
      'name': 'settings.crosshair.image',
      'cat': 'crosshair',
      'val': '',
      'hide': !0x0,
      'html': function() {
        return cEw('url', 'crosshairImage', this, cAI['t']('settings.crosshair.image.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', cBB['crosshairImage']['src'] != cAw && cAw['length'] && (cBB['crosshairImage']['src'] = cAw);
      }
    },
    'crosshairAlways': {
      'name': 'settings.crosshair.always',
      'cat': 'crosshair',
      'val': !0x1,
      'hide': !0x0,
      'html': function() {
        return cEw('checkbox', 'crosshairAlways', this);
      },
      'set': function(cAw) {
        cBB['crosshairAlways'] = cAw;
      }
    },
    'crosshairColor': {
      'name': 'settings.crosshair.color',
      'cat': 'crosshair',
      'val': cBy['crosshair']['background'],
      'html': function() {
        return cEw('color', 'crosshairColor', this);
      },
      'set': function(cAw) {
        cBB['crosshairColor'] = cAw;
      }
    },
    'crosshairShadow': {
      'name': 'settings.crosshair.shadow',
      'cat': 'crosshair',
      'val': cBy['crosshair']['shadow'],
      'html': function() {
        return cEw('color', 'crosshairShadow', this) + ('<label\x20class=\x27switch\x27\x20style=\x27margin-right:\x2010px;\x27><input\x20type=\x27checkbox\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20onclick=\x27setSetting(\x22crosshairUseShadow\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (cEH['crosshairUseShadow']['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>');
      },
      'set': function(cAw) {
        cBB['crosshairShadow'] = cAw;
      }
    },
    'crosshairUseShadow': {
      'name': 'settings.crosshair.shadow',
      'cat': 'crosshair',
      'hide': !0x0,
      'val': !0x0,
      'html': function() {},
      'set': function(cAw) {
        cBB['crosshairUseShadow'] = cAw;
      }
    },
    'crosshairLen': {
      'name': 'settings.crosshair.size',
      'cat': 'crosshair',
      'val': 0x10,
      'min': 0x2,
      'max': 0x32,
      'step': 0x1,
      'hide': !0x0,
      'html': function() {
        return cEw('slider', 'crosshairLen', this);
      },
      'set': function(cAw) {
        cBB['crosshairLen'] = cAw;
      }
    },
    'crosshairThick': {
      'name': 'settings.crosshair.thickness',
      'cat': 'crosshair',
      'val': 0x2,
      'min': 0x2,
      'max': 0x14,
      'step': 0x1,
      'hide': !0x0,
      'html': function() {
        return cEw('slider', 'crosshairThick', this);
      },
      'set': function(cAw) {
        cBB['crosshairThick'] = cAw;
      }
    },
    'sensitivityX': {
      'name': 'settings.gameplay.sensitivityX',
      'cat': 'gameplay',
      'val': 0x1,
      'min': 0.1,
      'max': 0xf,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'sensitivityX', this);
      },
      'set': function(cAw) {
        cBK['sensMltX'] = cAw;
      }
    },
    'sensitivityY': {
      'name': 'settings.gameplay.sensitivityY',
      'cat': 'gameplay',
      'val': 0x1,
      'min': 0.1,
      'max': 0xf,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'sensitivityY', this);
      },
      'set': function(cAw) {
        cBK['sensMltY'] = cAw;
      }
    },
    'aimSensitivityX': {
      'name': 'settings.gameplay.aimsensX',
      'cat': 'gameplay',
      'val': 0x1,
      'min': 0.1,
      'max': 0xf,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'aimSensitivityX', this);
      },
      'set': function(cAw) {
        cBK['sensAimMltX'] = cAw;
      }
    },
    'aimSensitivityY': {
      'name': 'settings.gameplay.aimsensY',
      'cat': 'gameplay',
      'val': 0x1,
      'min': 0.1,
      'max': 0xf,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'aimSensitivityY', this);
      },
      'set': function(cAw) {
        cBK['sensAimMltY'] = cAw;
      }
    },
    'fov': {
      'name': 'settings.gameplay.fov',
      'cat': 'gameplay',
      'val': cAA['fov'] + 0x14,
      'min': 0x3c,
      'max': 0x78,
      'step': 0x5,
      'html': function() {
        return cEw('slider', 'fov', this);
      },
      'set': function(cAw) {
        cBC['setFov'](cAw);
      }
    },
    'lagComp': {
      'name': 'settings.gameplay.lagComp',
      'cat': 'gameplay',
      'val': 0x1,
      'min': 0x1,
      'max': 1.5,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'lagComp', this);
      },
      'set': function(cAw) {
        cCd = cAw;
      }
    },
    'scrollDir': {
      'name': 'settings.gameplay.scrollDir',
      'cat': 'gameplay',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'scrollDir', this);
      },
      'set': function(cAw) {
        cCc = cAw ? 0x1 : -0x1;
      }
    },
    'streamMode': {
      'name': 'settings.gameplay.streamer',
      'cat': 'gameplay',
      'val': !0x1,
      'dontInit': !0x0,
      'html': function() {
        return cEw('checkbox', 'streamMode', this);
      },
      'set': function(cAw) {
        toggleStrm(cAw);
      }
    },
    'challMode': {
      'name': 'settings.gameplay.challenge',
      'cat': 'gameplay',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'challMode', this);
      },
      'set': function(cAw) {
        toggleChal(cAw);
      }
    },
    'invertY': {
      'name': 'settings.gameplay.invert',
      'cat': 'gameplay',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'invertY', this);
      },
      'set': function(cAw) {
        cBK['invertY'] = cAw;
      }
    },
    'sensitivityXCntrl': {
      'name': 'settings.controller.sensitivityX',
      'cat': 'controller',
      'val': 0x1,
      'min': 0.1,
      'max': 0xf,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'sensitivityXCntrl', this);
      },
      'set': function(cAw) {
        cBK['sensMltXCntrl'] = 0x5 * cAw;
      }
    },
    'sensitivityYCntrl': {
      'name': 'settings.controller.sensitivityY',
      'cat': 'controller',
      'val': 0x1,
      'min': 0.1,
      'max': 0xf,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'sensitivityYCntrl', this);
      },
      'set': function(cAw) {
        cBK['sensMltYCntrl'] = 0x5 * cAw;
      }
    },
    'aimSensitivityXCntrl': {
      'name': 'settings.controller.aimsensX',
      'cat': 'controller',
      'val': 0x1,
      'min': 0.1,
      'max': 0xf,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'aimSensitivityXCntrl', this);
      },
      'set': function(cAw) {
        cBK['sensAimMltXCntrl'] = 0x5 * cAw;
      }
    },
    'aimSensitivityYCntrl': {
      'name': 'settings.controller.aimsensY',
      'cat': 'controller',
      'val': 0x1,
      'min': 0.1,
      'max': 0xf,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'aimSensitivityYCntrl', this);
      },
      'set': function(cAw) {
        cBK['sensAimMltYCntrl'] = 0x5 * cAw;
      }
    },
    'deadZoneL': {
      'name': 'settings.controller.deadZoneL',
      'cat': 'controller',
      'val': 0.3,
      'min': 0x0,
      'max': 0x1,
      'step': 0.05,
      'html': function() {
        return cEw('slider', 'deadZoneL', this);
      },
      'set': function(cAw) {
        cBK['deadZoneL'] = cAw;
      }
    },
    'deadZoneR': {
      'name': 'settings.controller.deadZoneR',
      'cat': 'controller',
      'val': 0.25,
      'min': 0x0,
      'max': 0x1,
      'step': 0.05,
      'html': function() {
        return cEw('slider', 'deadZoneR', this);
      },
      'set': function(cAw) {
        cBK['deadZoneR'] = cAw;
      }
    },
    'triggerThres': {
      'name': 'settings.controller.triggerThres',
      'cat': 'controller',
      'val': 0.1,
      'min': 0x0,
      'max': 0x1,
      'step': 0.05,
      'html': function() {
        return cEw('slider', 'triggerThres', this);
      },
      'set': function(cAw) {
        cBK['triggerThres'] = cAw;
      }
    },
    'invertYCntrl': {
      'name': 'settings.controller.invert',
      'cat': 'controller',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'invertYCntrl', this);
      },
      'set': function(cAw) {
        cBK['invertYCntrl'] = cAw;
      }
    },
    'vibration': {
      'name': 'settings.controller.vibration',
      'cat': 'controller',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'vibration', this);
      },
      'set': function(cAw) {
        cBK['vibration'] = cAw;
      }
    },
    'sound': {
      'name': 'settings.audio.sound',
      'cat': 'audio',
      'val': 0x1,
      'min': 0x0,
      'max': 0x1,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'sound', this);
      },
      'set': function(cAw) {
        cBD['setVolume'](cAw);
      }
    },
    'voiceVolume': {
      'name': 'settings.audio.voice',
      'cat': 'audio',
      'val': 0x1,
      'min': 0x0,
      'max': 0x1,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'voiceVolume', this);
      },
      'set': function(cAw) {
        cDO = cAw;
      }
    },
    'fpsFOV': {
      'name': 'settings.viewmodel.fps',
      'cat': 'viewmodel',
      'val': cAA['fov'],
      'min': 0x3c,
      'max': 0x78,
      'step': 0x5,
      'html': function() {
        return cEw('slider', 'fpsFOV', this);
      },
      'set': function(cAw) {
        cBC['setFPSFov'](cAw);
      }
    },
    'weaponBob': {
      'name': 'settings.viewmodel.bobbing',
      'cat': 'viewmodel',
      'val': 0x1,
      'min': 0x0,
      'max': 0x3,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'weaponBob', this);
      },
      'set': function(cAw) {
        cBC['weaponBob'] = cAw;
      }
    },
    'weaponLean': {
      'name': 'settings.viewmodel.leaning',
      'cat': 'viewmodel',
      'val': 0x1,
      'min': 0x0,
      'max': 0x6,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'weaponLean', this);
      },
      'set': function(cAw) {
        cBC['weaponLean'] = cAw;
      }
    },
    'weaponOffX': {
      'name': 'settings.viewmodel.xOff',
      'cat': 'viewmodel',
      'val': 0x1,
      'min': 0x0,
      'max': 0x2,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'weaponOffX', this);
      },
      'set': function(cAw) {
        cBC['weaponOffX'] = cAw;
      }
    },
    'weaponOffY': {
      'name': 'settings.viewmodel.yOff',
      'cat': 'viewmodel',
      'val': 0x1,
      'min': 0x0,
      'max': 0x2,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'weaponOffY', this);
      },
      'set': function(cAw) {
        cBC['weaponOffY'] = cAw;
      }
    },
    'weaponOffZ': {
      'name': 'settings.viewmodel.zOff',
      'cat': 'viewmodel',
      'val': 0x1,
      'min': 0x0,
      'max': 0x2,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'weaponOffZ', this);
      },
      'set': function(cAw) {
        cBC['weaponOffZ'] = cAw;
      }
    },
    'hideADS': {
      'name': 'settings.viewmodel.show.ads',
      'cat': 'viewmodel',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'hideADS', this);
      },
      'set': function(cAw) {
        cBC['hideADS'] = cAw;
      }
    },
    'showWeapon': {
      'name': 'settings.viewmodel.show.primary',
      'cat': 'viewmodel',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showWeapon', this);
      },
      'set': function(cAw) {
        if (cBJ['hideWeapon'][0x0] = !cAw, cBL)
          for (var cAx, cAy = 0x0; cAy < cBL['loadout']['length']; cAy++) !(cAx = cBJ['weapons'][cBL['loadout'][cAy]])['secondary'] && !cAx['melee'] && cBL['weaponMeshes'][cAy] && cBL['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] == cAy && (cBL['weaponMeshes'][cAy]['visible'] = cAw);
      }
    },
    'showWeaponSec': {
      'name': 'settings.viewmodel.show.secondary',
      'cat': 'viewmodel',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showWeaponSec', this);
      },
      'set': function(cAw) {
        if (cBJ['hideWeapon'][0x1] = !cAw, cBL)
          for (var cAx = 0x0; cAx < cBL['loadout']['length']; cAx++) cBJ['weapons'][cBL['loadout'][cAx]]['secondary'] && cBL['weaponMeshes'][cAx] && cBL['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] == cAx && (cBL['weaponMeshes'][cAx]['visible'] = cAw);
      }
    },
    'showWeaponMel': {
      'name': 'settings.viewmodel.show.melee',
      'cat': 'viewmodel',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'showWeaponMel', this);
      },
      'set': function(cAw) {
        if (cBJ['hideWeapon'][0x2] = !cAw, cBL)
          for (var cAx = 0x0; cAx < cBL['loadout']['length']; cAx++) cBJ['weapons'][cBL['loadout'][cAx]]['melee'] && cBL['weaponMeshes'][cAx] && cBL['JrbzXDfBkotblfmHyhexjyVyqRyeUVij'] == cAx && (cBL['weaponMeshes'][cAx]['visible'] = cAw);
      }
    },
    'hudHealthHigh': {
      'name': 'settings.editing.health.high',
      'cat': 'editing',
      'val': cBy['hudHealth']['high'],
      'html': function() {
        return cEw('color', 'hudHealthHigh', this);
      },
      'set': function() {}
    },
    'hudHealthLow': {
      'name': 'settings.editing.health.low',
      'cat': 'editing',
      'val': cBy['hudHealth']['low'],
      'html': function() {
        return cEw('color', 'hudHealthLow', this);
      },
      'set': function() {}
    },
    'scoreColor': {
      'name': 'settings.editing.score.color',
      'cat': 'editing',
      'val': cBy['popupScore'],
      'html': function() {
        return cEw('color', 'scoreColor', this);
      },
      'set': function(cAw) {
        scoreText['style']['color'] = cAw;
      }
    },
    'scoreShadow': {
      'name': 'settings.editing.score.shadow',
      'cat': 'editing',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'scoreShadow', this);
      },
      'set': function(cAw) {
        scoreText['classList']['remove']('blackShad'), cAw && scoreText['classList']['add']('blackShad');
      }
    },
    'scoreScale': {
      'name': 'settings.editing.score.scale',
      'cat': 'editing',
      'val': 0x1,
      'min': 0.1,
      'max': 0x2,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'scoreScale', this);
      },
      'set': function(cAw) {
        cCm = cAw || 0x1;
      }
    },
    'scoreOffX': {
      'name': 'settings.editing.scoreOffX',
      'cat': 'editing',
      'val': 0x5,
      'min': 0x0,
      'max': 0xa,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'scoreOffX', this);
      },
      'set': function(cAw) {
        scoreText['style']['left'] = 0xa * cAw + '%', scoreText['style']['transform'] = 'translate(' + (0xa * cAw - 0x64) + '%,\x20' + (0xa * cEH['scoreOffY']['val'] - 0x64) + '%)';
      }
    },
    'scoreOffY': {
      'name': 'settings.editing.scoreOffY',
      'cat': 'editing',
      'val': 3.7,
      'min': 0x0,
      'max': 0xa,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'scoreOffY', this);
      },
      'set': function(cAw) {
        scoreText['style']['top'] = 0xa * cAw + '%', scoreText['style']['transform'] = 'translate(' + (0xa * cEH['scoreOffX']['val'] - 0x64) + '%,\x20' + (0xa * cAw - 0x64) + '%)';
      }
    },
    'saturation': {
      'name': 'settings.editing.saturation',
      'cat': 'editing',
      'val': 0x1,
      'min': 0x0,
      'max': 0x3,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'saturation', this);
      },
      'set': function() {
        cDT(0x0);
      }
    },
    'menuSaturation': {
      'name': 'settings.editing.menuSaturation',
      'cat': 'editing',
      'val': 0x1,
      'min': 0x0,
      'max': 0x3,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'menuSaturation', this);
      },
      'set': function() {
        cDT(0x1);
      }
    },
    'hue': {
      'name': 'settings.editing.hue',
      'cat': 'editing',
      'val': 0x0,
      'min': 0x0,
      'max': 0x64,
      'step': 0x5,
      'html': function() {
        return cEw('slider', 'hue', this);
      },
      'set': function() {
        cDT(0x0);
      }
    },
    'menuHue': {
      'name': 'settings.editing.menuHue',
      'cat': 'editing',
      'val': 0x0,
      'min': 0x0,
      'max': 0x64,
      'step': 0x5,
      'html': function() {
        return cEw('slider', 'menuHue', this);
      },
      'set': function() {
        cDT(0x1);
      }
    },
    'vignette': {
      'name': 'settings.editing.vignette',
      'cat': 'editing',
      'val': 0x0,
      'min': 0x0,
      'max': 0x1,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'vignette', this);
      },
      'set': function(cAw) {
        0x1 == cAw ? vignette['style']['removeProperty']('opacity') : vignette['style']['opacity'] = cAw;
      }
    },
    'chatOp': {
      'name': 'settings.editing.chatOp',
      'cat': 'editing',
      'val': 0x1,
      'min': 0x0,
      'max': 0x1,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'chatOp', this);
      },
      'set': function(cAw) {
        chatList['style']['opacity'] = cAw;
      }
    },
    'chatBGOp': {
      'name': 'settings.editing.chatBGOp',
      'cat': 'editing',
      'val': 0.2,
      'min': 0x0,
      'max': 0x1,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'chatBGOp', this);
      },
      'set': function(cAw) {
        cCt = cAw, Array['from'](document['getElementsByClassName']('chatItem'))['forEach'](function(cAx) {
          cAx['style']['backgroundColor'] = 'rgba(0,\x200,\x200,\x20' + cAw + ')';
        });
      }
    },
    'chatTextOutline': {
      'name': 'settings.editing.chatTextOutline',
      'cat': 'editing',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'chatTextOutline', this);
      },
      'set': function(cAw) {
        cCv = cAw, Array['from'](document['getElementsByClassName']('chatItem'))['forEach'](function(cAx) {
          cAx['classList']['toggle']('chatTextOutline', cAw);
        });
      }
    },
    'chatHeight': {
      'name': 'settings.editing.chatHeight',
      'cat': 'editing',
      'val': 2.5,
      'min': 0x0,
      'max': 0x5,
      'step': 0.1,
      'html': function() {
        return cEw('slider', 'chatHeight', this);
      },
      'set': function(cAw) {
        for (cCu = 0x64 * cAw; chatList['scrollHeight'] >= cCu;) chatList['removeChild'](chatList['childNodes'][0x0]);
      }
    },
    'depthMap': {
      'name': 'settings.editing.depth',
      'cat': 'editing',
      'val': 0x0,
      'min': 0x0,
      'max': 0x1f4,
      'step': 0x5,
      'html': function() {
        return cEw('slider', 'depthMap', this);
      },
      'set': function(cAw) {
        cBC['toggleDepthMap'](cAw);
      }
    },
    'greenScreen': {
      'name': 'settings.editing.green',
      'cat': 'editing',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'greenScreen', this);
      },
      'set': function(cAw) {
        cBC['toggleGreenscreen'](cAw);
      }
    },
    'canLoadMods': {
      'name': 'settings.mods.load',
      'cat': 'mods',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'canLoadMods', this);
      },
      'set': function(cAw) {
        cC6 = cAw;
      }
    },
    'autoLoadLast': {
      'name': 'settings.mods.auto',
      'cat': 'mods',
      'val': !0x1,
      'html': function() {
        return cEw('checkbox', 'autoLoadLast', this);
      },
      'set': function() {}
    },
    'scopeBorders': {
      'name': 'settings.mods.borders',
      'cat': 'mods',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'scopeBorders', this);
      },
      'set': function(cAw) {
        Array['from'](document['querySelectorAll']('.black'))['forEach'](cAx => cAx['style']['display'] = cAw ? 'block' : 'none');
      }
    },
    'customScope': {
      'name': 'settings.mods.scope',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customScope', this, cAI['t']('settings.mods.scope.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', recticleImg['src'] = 0x1 < cAw['length'] ? cAw : cBA['assetsUrl']('/textures/recticle.png');
      }
    },
    'customHitmarker': {
      'name': 'settings.mods.hitmarker',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customHitmarker', this, cAI['t']('settings.mods.hitmarker.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', hitmarker['src'] = 0x1 < cAw['length'] ? cAw : cBA['assetsUrl']('/textures/hitmarker_3.png');
      }
    },
    'customADSDot': {
      'name': 'settings.mods.dot',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customADSDot', this, cAI['t']('settings.mods.dot.paste'));
      },
      'set': function(cAw) {
        cBC['customADS'] = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', cBC['customADS']['length'] && (aimDot['src'] = cBC['customADS']);
      }
    },
    'endMessage': {
      'name': 'settings.mods.endmessage',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('text', 'endMessage', this, cAI['t']('settings.mods.endmessage'));
      },
      'set': function() {}
    },
    'customProfile': {
      'name': 'settings.mods.profile',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customProfile', this, cAI['t']('settings.mods.profile.paste'));
      },
      'set': function(cAw) {
        cCj = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', cDS();
      }
    },
    'customAmmo': {
      'name': 'settings.mods.ammo',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customAmmo', this, cAI['t']('settings.mods.ammo.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', ammoIcon['src'] = 0x1 < cAw['length'] ? cAw : cBA['assetsUrl']('/textures/ammo_0.png');
      }
    },
    'customKills': {
      'name': 'settings.mods.kills',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customKills', this, cAI['t']('settings.mods.kills.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', killsIcon['src'] = 0x1 < cAw['length'] ? cAw : location['origin'] + '/img/skull_0.png';
      }
    },
    'customDeaths': {
      'name': 'settings.mods.deaths',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customDeaths', this, cAI['t']('settings.mods.deaths.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', deathsIcon['src'] = 0x1 < cAw['length'] ? cAw : location['origin'] + '/img/skull_1.png';
      }
    },
    'customStreak': {
      'name': 'settings.mods.streak',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customStreak', this, cAI['t']('settings.mods.streak.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', streakIcon['src'] = 0x1 < cAw['length'] ? cAw : location['origin'] + '/img/skull_2.png';
      }
    },
    'useDamageOverlay': {
      'name': 'settings.mods.usedamage',
      'cat': 'mods',
      'val': !0x0,
      'html': function() {
        return cEw('checkbox', 'useDamageOverlay', this);
      },
      'set': function(cAw) {
        cCx = cAw, cAw || (bloodDisplay['style']['display'] = 'none', bloodDisplay['style']['opacity'] = 0x0);
      }
    },
    'customDamage': {
      'name': 'settings.mods.damage',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customDamage', this, cAI['t']('settings.mods.damage.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', bloodDisplay['src'] = 0x1 < cAw['length'] ? cAw : location['origin'] + '/img/blood.png';
      }
    },
    'customTimer': {
      'name': 'settings.mods.timer',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customTimer', this, cAI['t']('settings.mods.timer.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', timerIcon['src'] = 0x1 < cAw['length'] ? cAw : location['origin'] + '/img/timer.png';
      }
    },
    'customGameOverlay': {
      'name': 'settings.mods.overlay',
      'cat': 'mods',
      'val': '',
      'html': function() {
        return cEw('url', 'customGameOverlay', this, cAI['t']('settings.mods.overlay.paste'));
      },
      'set': function(cAw) {
        cAw = cBA['isURL'](cAw) && !/\.svg/ ['test'](cAw) ? cAw : '', overlay['style']['backgroundImage'] = 0x1 < cAw['length'] ? 'url(\x27' + cAw + '\x27)' : '';
      }
    }
  };
  for (var cGE in cEH)
    if (cEH[cGE]['set'] && !cEH[cGE]['dontInit']) {
      var cGF = getSavedVal('kro_setngss_' + cGE);
      cEH[cGE]['val'] = null === cGF ? cEH[cGE]['val'] : cGF, 'false' == cEH[cGE]['val'] && (cEH[cGE]['val'] = !0x1), (cEH[cGE]['min'] || cEH[cGE]['max']) && (cEH[cGE]['val'] = Math['min'](cEH[cGE]['max'], Math['max'](cEH[cGE]['min'], cEH[cGE]['val']))), cEH[cGE]['set'](cEH[cGE]['val'], !0x0);
    }
  function cGG(cAw) {
    cBM && cBM['setData'](cAw), updateWindow(0x5), cGI();
  }

  function cGI() {
    if (cBM) {
      signedOutHeaderBar['style']['display'] = 'none', signedInHeaderBar['style']['display'] = null, cBM['level'] >= cAA['rewardMinLvl'] ? (claimHolder['style']['display'] = 'block', merchHolder['style']['top'] = '205px', cHo()) : merchHolder['style']['top'] = '110px', menuAccountUsername['innerText'] = cBM['name'], menuKRCount['innerHTML'] = cBM['funds'] + '\x20<span\x20style=\x27color:#fff\x27>KR</span>', menuLevelText['innerText'] = 'LVL\x20' + cBM['level'], menuLevelBar['style']['width'] = cBM['levelProg'] + '%';
      var cAw = cBA['levelIconId'](cBM['level']);
      menuLevelIcon['style']['backgroundImage'] = 'url(\x27/img/levels/' + cAw + '.png\x27)';
    } else signedOutHeaderBar['style']['display'] = null, signedInHeaderBar['style']['display'] = 'none', claimHolder['style']['display'] = 'none', merchHolder['style']['top'] = '110px';
  }

  function cGK(cAw, cAx) {
    cBK['idleTimer'] = 0x0, cAw ? 'Queuing' === cAw ? cGX(cAI['t']('queue.status.queuing')) : 'Queued' === cAw ? cGX(cAI['t']('queue.status.queued', cAx['queueSize']), !0x0) : 'CreatingGame' === cAw ? cEG != cAw && 'HostGame' != cEG && cGT(cBn) : 'HostGame' === cAw ? cEG != cAw && cGT(cBn) : 'Join' === cAw ? cGX(cAI['t']('queue.status.join')) : (console['warn']('Unknown\x20status', cAw), cGX('?')) : cGX(null), cEG = cAw;
  }
  window['changeCont'] = function(cAw, cAx) {
    cAx || showWindow(0x7, !0x0), 0x3 >= cAw || 0x12 <= cAw && 0x15 >= cAw ? cBK['inputChanger'] = cAw : 0x4 == cAw ? cBK['inputChanger'] = 'jumpKey' : 0x5 == cAw ? cBK['inputChanger'] = 'crouchKey' : 0x6 == cAw ? cBK['inputChanger'] = 'meleeKey' : 0x7 == cAw ? cBK['inputChanger'] = 'swapKey' : 0x8 == cAw ? cBK['inputChanger'] = 'reloadKey' : 0x9 == cAw ? cBK['inputChanger'] = 'sprayKey' : 0xa == cAw ? cBK['inputChanger'] = 'aimKey' : 0xb == cAw ? cBK['inputChanger'] = 'chatKey' : 0xc == cAw ? cBK['inputChanger'] = 'voiceKey' : 0xd == cAw ? cBK['inputChanger'] = 'primKey' : 0xe == cAw ? cBK['inputChanger'] = 'inspKey' : 0xf == cAw ? cBK['inputChanger'] = 'listKey' : 0x10 == cAw ? cBK['inputChanger'] = 'interactKey' : 0x11 == cAw ? cBK['inputChanger'] = 'dropKey' : 0x16 == cAw ? cBK['inputChanger'] = 'interactSecKey' : 0x17 == cAw ? cBK['inputChanger'] = 'wepVisKey' : 0x18 == cAw && (cBK['inputChanger'] = 'shootKey'), document['getElementById']('cont' + cAw)['innerHTML'] = cAI['t']('settings.controls.press');
  }, window['unbindCont'] = function(cAw, cAx) {
    cBK['inputChanger'] = null, cAx || showWindow(0x7, !0x0);
    let cAy = null;
    0x3 >= cAw || 0x12 <= cAw && 0x15 >= cAw ? cAy = cAw : 0x4 == cAw ? cAy = 'jumpKey' : 0x5 == cAw ? cAy = 'crouchKey' : 0x6 == cAw ? cAy = 'meleeKey' : 0x7 == cAw ? cAy = 'swapKey' : 0x8 == cAw ? cAy = 'reloadKey' : 0x9 == cAw ? cAy = 'sprayKey' : 0xa == cAw ? cAy = 'aimKey' : 0xb == cAw ? cAy = 'chatKey' : 0xc == cAw ? cAy = 'voiceKey' : 0xd == cAw ? cAy = 'primKey' : 0xe == cAw ? cAy = 'inspKey' : 0xf == cAw ? cAy = 'listKey' : 0x10 == cAw ? cAy = 'interactKey' : 0x11 == cAw ? cAy = 'dropKey' : 0x16 == cAw ? cAy = 'interactSecKey' : 0x17 == cAw ? cAy = 'wepVisKey' : 0x18 == cAw && (cAy = 'shootKey'), document['getElementById']('cont' + cAw)['innerHTML'] = 'UNBOUND', cBK['moveKeys'][cAy] ? cBK['moveKeys'][cAy] = -0x1 : cBK['streakKeys'][cAy - 0x12] ? cBK['streakKeys'][cAy - 0x12] = -0x1 : cBK[cAy] = -0x1, cBK['checkForScroll'](), saveVal('cont_' + cAy, -0x1);
  };
  var cGS = null;

  function cGT(cAw) {
    playTick(), cGX('Joining\x20in\x20' + cAw), 0x0 < cAw ? cGS = setTimeout(function() {
      cGT(cAw - 0x1);
    }, 0x3e8) : cGX(cAI['t']('queue.status.join'));
  }
  var cGV = null,
    cGW = !0x1;

  function cGX(cAw, cAx = !0x1) {
    cBI['connected'] && (cAw != cGV || cAx != cGW) && (cGV = cAw, cGW = cAx, cAw ? (queueStatus['style']['display'] = 'inline-block', queueStatusText['innerText'] = cAw, uiBase['classList']['toggle']('isQueued', !0x0)) : (queueStatus['style']['display'] = 'none', uiBase['classList']['toggle']('isQueued', !0x1)), cTt(), 'none' != windowHolder['style']['display'] && updateWindow(0x1b));
  }
  var cH0 = null;

  function cH1(cAw) {
    cBI['connected'] && cAw != cH0 && (cH0 = cD1 || cBK['locked'] || 'inline-block' == endTable['style']['display'] ? null : cAw, cTt());
  }
  const cH3 = [];
  let cH4, cH5 = 0x0;

  function cH6(cAw) {
    try {
      accResp['innerHTML'] = cAw || '', accResp['style']['display'] = cAw ? 'block' : 'none';
    } catch (cH8) {}
  }

  function cH9(cAw, cAx) {
    0x0 <= cAw && cH6(cAI['t']('generic.wait')), cBI['send']('a', cAw, cAx);
  }

  function cHc(cAw, cAx, cAy, cAz, cAB) {
    cAw ? cH6(cAw) : (cBM = new cBT(cAx, cAy, null, cAA), saveVal('krunker_id', cAx), saveVal('krunker_username', cAy), cGG(cAz), cBM['hack'] && (window['activeHacker'] = !0x0), cAB && (saveVal('krunker_token', cAB), loginToken = cAB), updateWindow(null, !0x0), cAN && (cAN = !0x1, cAT(!0x0)));
  }
  window['registerAcc'] = function() {
    cH9(0x0, [accName['value'], accPass['value']]);
  }, window['loginAcc'] = function() {
    cH9(0x1, [accName['value'], accPass['value'], null]);
  }, window['logoutAcc'] = function() {
    cBJ && cBJ['mode']['isRanked'] || (cH9(-0x1), cH6(), cAD('krunker_id'), cAD('krunker_username'), cAD('krunker_token'), cAD('skins'), cAD('hatIndex'), cAD('backIndex'), cAD('meleeIndex'), cAD('skinColIndex'), cHE = -0x1, cHD = -0x1, cHC = -0x1, cHA = -0x1, cHG = {}, selectSecondary(0x2), windows[0xc]['clanData'] = null, windows[0x1a]['cantQueue'] = null, loginToken = null, cBM = null, cGG(), showWindow(0x5), cI4());
  };
  var cHi = !0x1;
  window['newTok'] = function(cAw) {
    cAw && (saveVal('krunker_token', cAw), loginToken = cAw);
  }, window['logoutSessions'] = function(cAw) {
    cAw && (cAw['style']['display'] = 'none'), cHi = !0x0, cBI['send']('las');
  };
  var cHl, cHm = 0x0,
    cHn = !0x1;

  function cHo(cAw) {
    if (cAw || 'block' == claimHolder['style']['display']) {
      cHm = cAA['rewardTime'] - ((cBZ || Date['now']()) - cBM['lastReward']);
      var cAx = cBA['getTimeH'](Math['max'](0x0, cHm));
      (cAw || cHl != cAx) && (cHl = cAx, claimTimer['innerHTML'] = '00:00:00' == cAx ? cHn ? '' : 'Play\x201\x20Game' : cAx, claimTimer['style']['fontSize'] = '00:00:00' == cAx ? cHn ? '18px' : '13px' : '18px', merchHolder['style']['top'] = '00:00:00' == cAx && cHn ? '205px' : '237px');
      var cAy = 0x0 >= cHm && cHn ? './img/claim_0.png' : './img/claim_1.png';
      claimImg['getAttribute']('src') != cAy && (claimImg['src'] = cAy);
    }
  }

  function cHs(cAw, cAx) {
    cDa(cAx), cBM && (cBM['lastReward'] = cAw), cHo();
  }
  window['claimReward'] = function() {
    0x0 < cHm || !cHn || function() {
      if (!cU9) {
        cU9 = !0x0;
        var cAw = document['createElement']('script');
        cAw['src'] = '//cdn.playwire.com/bolt/js/zeus/embed.js', cAw['type'] = 'text/javascript', cAw['setAttribute']('charset', 'utf-8'), cAw['setAttribute']('data-config', '//config.playwire.com/1020124/v2/pre_content.json'), cAw['setAttribute']('data-width', '640px'), cAw['setAttribute']('data-height', '360px'), cAw['setAttribute']('data-id', 'pre-content-player'), cAw['setAttribute']('data-hidden-container', 'my-content'), cAw['setAttribute']('data-onready', 'window.boltEventHandlers'), cBI['send']('sfk');
        var cAx = document['getElementById']('pre-content-container');
        cAx['style']['display'] = 'block', cAx['appendChild'](cAw), cU7 = setTimeout(function() {
          let cAw = 'none' != document['getElementById']('my-content')['style']['display'];
          cAw && cUa(!0x1);
        }, 0x3a98), cU8 = setTimeout(function() {
          cUa(!0x1);
        }, 0x9c40);
      }
    }();
  }, Object['defineProperty'](window, 'setClassIndex', {
    'writeable': !0x1,
    'value': function(cAw) {
      cCl = cAw;
    }
  });
  var cHz = 0x1,
    cHA = getSavedVal('skinColIndex') || -0x1,
    cHB = getSavedVal('attachIndex') || 0x0,
    cHC = getSavedVal('meleeIndex') || -0x1,
    cHD = getSavedVal('backIndex') || -0x1,
    cHE = getSavedVal('hatIndex') || -0x1,
    cHF = getSavedVal('skins'),
    cHG = cHF ? JSON['parse'](cHF) : {};
  setClassIndex(getSavedVal('classindex') || 0x0);
  var cHH = getSavedVal('secondaryInd') || 0x2,
    cHI = 0x0;

  function cHJ(cAw, cAx) {
    if (!cBM) return -0x1;
    var cAy = cBM['skins']['filter'](cAy => cBJ['store']['skins'][cAy['ind']] && (null == cAx ? !cBJ['store']['skins'][cAy['ind']]['type'] && cBJ['store']['skins'][cAy['ind']]['weapon'] == cAw : cBJ['store']['skins'][cAy['ind']]['type'] == cAx));
    return cAy['length'] && cBA['getRandom'](cAy)['ind'] || -0x1;
  }
  Object['defineProperty'](window, 'selectHat', {
    'writeable': !0x1,
    'value': function(cAw) {
      saveVal('hatIndex', cAw), cHE = cAw, cI4(), showWindow(0x3);
    }
  }), Object['defineProperty'](window, 'selectBack', {
    'writeable': !0x1,
    'value': function(cAw) {
      saveVal('backIndex', cAw), cHD = cAw, cI4(), showWindow(0x3);
    }
  }), Object['defineProperty'](window, 'selectMelee', {
    'writeable': !0x1,
    'value': function(cAw) {
      saveVal('meleeIndex', cAw), cHC = cAw, cI4(), showWindow(0x3);
    }
  }), Object['defineProperty'](window, 'selectSecondary', {
    'writeable': !0x1,
    'value': function(cAw) {
      saveVal('secondaryInd', cAw), cHH = cAw, cI4(), showWindow(0x3);
    }
  }), Object['defineProperty'](window, 'selectSkinColor', {
    'writeable': !0x1,
    'value': function(cAw) {
      saveVal('skinColIndex', cAw), cHA = cAw, cI4(), updateWindow(0x3);
    }
  }), Object['defineProperty'](window, 'selectAttachment', {
    'writeable': !0x1,
    'value': function(cAw) {
      saveVal('attachIndex', cAw), cHB = cAw, cI4(), showWindow(0x3);
    }
  }), Object['defineProperty'](window, 'selectClass', {
    'writeable': !0x1,
    'value': function(cAw) {
      saveVal('classindex', cAw), cBJ['classes'][cAw]['txts'] ? cTp(cBJ['classes'][cAw]['txts'][cBA['randInt'](0x0, cBJ['classes'][cAw]['txts']['length'] - 0x1)]) : !cBA['randInt'](0x0, 0x2) && cTp(['Let\x27s\x20Go!', 'Alright!', 'I\x27m\x20Ready!'][cBA['randInt'](0x0, 0x2)]), setClassIndex(cAw), cI4(), showWindow(0x3);
    }
  }), Object['defineProperty'](window, 'skinSelector', {
    'writeable': !0x1,
    'value': function(cAw) {
      cHI = cAw, cI4(), showWindow(0xf);
    }
  }), Object['defineProperty'](window, 'selectSkin', {
    'writeable': !0x1,
    'value': function(cAw, cAx) {
      cBN = cBJ['store']['skins'][cAw], cHG[cAx] = cBN || -0x2 == cAw ? cAw : void 0x0, saveVal('skins', JSON['stringify'](cHG)), cI4(), showWindow(0x3);
    }
  });
  var cHY, cHZ, cI0 = 0x294,
    cI1 = 0x15e,
    cI2 = new cBz['PerspectiveCamera'](0xf, 0x1, 0.1, 0x64),
    cI3 = new cBz['WebGLRenderer']({
      'canvas': classPreviewCanvas,
      'precision': 'mediump',
      'antialias': !0x1,
      'alpha': !0x0
    });

  function cI4() {
    function cAw(cAw, cAx = !0x0) {
      cAy && (cAy += '\x20-\x20');
      var cAz = 'inherit',
        cAA = cBJ['weapons'][cAw]['name'];
      if (null != cHG[cAw]) {
        var cAB = cBJ['store']['skins'][cHG[cAw]];
        cAB && (cAz = cBJ['store']['rarities'][cAB['rarity']]['color'], cAA = cAB['name']);
      }
      cAy += '<span\x20style=\x27color:' + (cAx ? cAz : 'inherit') + '\x27>' + cAA + '</span>';
    }
    var cAx = cBJ['classes'][cCl];
    menuClassName['innerText'] = cAx['name'];
    var cAy = '';
    for (var cAz of cAx['loadout']) cAw(cAz);
    menuClassSubtext['innerHTML'] = cAy, (cHY = new cBz['Scene']())['add'](new cBz['AmbientLight'](0x97a0a8));
    var cAB = new cBz['DirectionalLight'](0xf2f8fc, 0.5);
    cAB['position']['set'](0xa, 0x11, -0xa), cHY['add'](cAB);
    var cAC = [null != cHG[cAx['loadout'][0x0]] || -0x2 != cHG[cAx['loadout'][0x0]] ? cHG[cAx['loadout'][0x0]] : -0x1, null == cHG[cAx['loadout'][0x1]] ? -0x1 : cHG[cAx['loadout'][0x1]]];
    (cHZ = new cBU(-0x1, this, cBA, cBy, cAA, cBJ))['sid'] = -0x1, cHZ['init'](0x0, 0x0, 0x0, 'preview', !0x1), cHZ['skins'] = cAC, cHZ['hatIndex'] = -0x2 == cHE ? -0x1 : cHE, cHZ['backIndex'] = -0x2 == cHD ? -0x1 : cHD, cHZ['meleeIndex'] = -0x2 == cHC ? -0x1 : cHC, cHZ['attachIndex'] = cHB, cHZ['skinColIndex'] = cHA, cHZ['secIndex'] = cHH, cHZ['setClass'](cBJ, cCl, cHH, !0x0), cBJ['players']['swapWeapon'](cHZ, 0x0, !0x0), cHY['add'](cBJ['players']['generateMeshes'](cHZ, !0x1, !0x0)), cHZ['swapTime'] = 0x0, cHZ['weaponMeshes'][0x0]['visible'] = !0x0, cI2['lookAt'](new cBz['Vector3'](0x0, 0.8 * cAA['fvcbEmTb'], 0x0));
  }
  cI2['position']['x'] = -0xa, cI2['position']['y'] = 0x11, cI2['position']['z'] = -0x1d, cI4();
  var cIg = !('true' != getSavedVal('krk_hideFull'));
  window['toggleHF'] = function(cAw) {
    cIg = cAw, saveVal('krk_hideFull', cAw);
  }, toggleHF(cIg);
  var cIi = !('true' != getSavedVal('krk_regionPriority'));
  window['toggleRP'] = function(cAw) {
    cIi = cAw, saveVal('krk_regionPriority', cAw);
  }, toggleRP(cIi);
  var cIk = 0x1f;

  function cIl(cAw, cAx, cAy = 0x0) {
    for (var cAz, cAA = '', cAB = 'map' == cAx ? 'selectHostMap' : 'loadUserMod', cAC = 0x0; cAC < cAw['length']; ++cAC) {
      if (cAz = -0x1, cAw[cAC] && cAw[cAC]['map_date']) {
        var cAD = 0x0,
          cAI = new Date(cAw[cAC]['map_date']);
        cAI && (cAD = cBZ - (cAI['getTime']() || 0x0)), cAz = cAD / 0x5265c00;
      }
      cAA += '<div\x20class=\x27mapListItem\x27>' + (0x0 <= cAz && 0x7 >= cAz ? '<div\x20class=\x27mapAgeD\x27\x20style=\x27background-color:#E040FB\x27>NEW</div>' : '') + '<div\x20class=\x27mapInfoB\x27>?</div><div\x20style=\x27height:100px;width:220px;overflow:\x20hidden;\x27><img\x20class=\x27mapListThumb\x27\x20loading=\x27lazy\x27\x20src=\x27' + (cAw[cAC][cAx + '_image'] ? cAw[cAC][cAx + '_image'] : './img/noimg.png') + '\x27\x20onclick=\x27' + cAB + '(&quot;' + cAw[cAC][cAx + '_name'] + '&quot;,&quot;' + cAw[cAC]['mod_url'] + '&quot;,&quot;' + cAw[cAC]['mod_id'] + '&quot;)\x27/></div><div\x20style=\x27margin-top:1px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27' + cAB + '(&quot;' + cAw[cAC][cAx + '_name'] + '&quot;,&quot;' + cAw[cAC]['mod_url'] + '&quot;,&quot;' + cAw[cAC]['mod_id'] + '&quot;)\x27/>' + cAw[cAC][cAx + '_name'] + '</a></div><div\x20style=\x27display:\x20flex\x27><span\x20style=\x27color:rgba(0,0,0,0.2);font-size:15px\x27>\x20by\x20<a\x20target=\x27_blank\x27\x20class=\x27grey\x27\x20href=\x27/social.html?p=profile&q=' + cAw[cAC]['creatorname'] + '\x27>' + cAw[cAC]['creatorname'] + '</a></span><div\x20style=\x27font-size:15px;text-align:right;flex-grow:1\x27>' + cAw[cAC][cAx + '_votes'] + '</div></div></div>';
    }
    return cAA;
  }

  function cIv(cAw, cAx) {
    var cAy = '<div\x20id=\x27skinList\x27><div\x20class=\x27skinCard\x27>' + (0x3 == cAx ? 'Combat\x20Knife' : cAI['t']('generic.none')) + '<div\x20class=\x27itemOwn\x27>' + cAI['t']('generic.default') + '</div><img\x20class=\x27skinImgC\x27\x20src=\x27' + cBA['assetsUrl']('/textures/previews/cosmetics/' + cAx + '_default.png') + '\x27><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;\x27\x20onclick=\x27' + cAw + '(-1)\x27>' + cAI['t']('generic.select') + '</div></div><div\x20class=\x27skinCard\x27>' + cAI['t']('generic.random') + '<div\x20class=\x27itemOwn\x27\x20style=\x27opacity:0;\x27\x27>by\x20???</div><img\x20class=\x27skinImgC\x20skinSil\x27\x20src=\x27' + cBA['assetsUrl']('/textures/previews/cosmetics/' + cAx + '_default.png') + '\x27><div\x20class=\x27skinRandom\x20blackShad\x27>?</div><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;\x27\x20onclick=\x27' + cAw + '(-2)\x27>' + cAI['t']('generic.select') + '</div></div>';
    if (cBM || cBJ['singlePlayer'])
      for (var cAz = (cBJ['singlePlayer'] ? Object['keys'](cBJ['store']['skins'])['map'](cAw => cAw = {
          'ind': parseInt(cAw),
          'cnt': 0x1
        }) : cBM['skins'])['slice']()['sort'](function(cAw, cAx) {
          return (null != cAx['ind'] && cBJ['store']['skins'][cAx['ind']] ? cBJ['store']['skins'][cAx['ind']]['rarity'] : 0x0) - (null != cAw['ind'] && cBJ['store']['skins'][cAw['ind']] ? cBJ['store']['skins'][cAw['ind']]['rarity'] : 0x0);
        }), cAA = 0x0; cAA < cAz['length']; ++cAA)(cBN = cBJ['store']['skins'][cAz[cAA]['ind']]) && cBN['type'] == cAx && (cAy += '<div\x20class=\x27skinCard\x27\x20style=\x27color:' + cBJ['store']['rarities'][cBN['rarity']]['color'] + '\x27><div\x20class=\x27itemCnt\x27\x20data-badge=\x27x' + cAz[cAA]['cnt'] + '\x27></div>' + cBN['name'] + '<div\x20class=\x27itemOwn\x27>by\x20' + (cBN['creator'] || 'Krunker.io') + '</div><img\x20class=\x27skinImg' + (cBN['type'] ? 'C' : '') + '\x27\x20src=\x27' + cBA['getPreview'](cBN, cBJ['store']) + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27' + cAw + '(' + cAz[cAA]['ind'] + ')\x27>' + cAI['t']('generic.select') + '</div><div\x20class=\x27selctInfoBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27openURL(&quot;/social.html?p=itemsales&i=' + cAz[cAA]['ind'] + '&quot;)\x27>?</div></div>');
    return cAy += '</div>';
  }
  window['windows'] = [{
    'header': cAI['t']('windows.settings.header'),
    'sticky': !0x0,
    'settingSearch': null,
    'searchList': function() {
      var cAw = document['getElementById']('settingSearch');
      this['settingSearch'] = cAw && '' != cAw['value'] ? cAw['value'] : null, (cAw = document['getElementById']('settingHolder')) && (cAw['innerHTML'] = this['getSettings']());
    },
    'getCSettings': function() {
      return '';
    },
    'getSettings': function() {
      var cAw = '',
        cAx = [];
      for (var cAy in cEH) this['settingSearch'] && (!this['searchMatches'](cEH[cAy]) || cEH[cAy]['hide']) || (-0x1 == cAx['indexOf'](cEH[cAy]['cat']) && (cAx['push'](cEH[cAy]['cat']), cAw += '<div\x20class=\x27setHed\x27>' + cAI['t']('settings.' + cEH[cAy]['cat'] + '.header') + '</div>'), cAw += '<div\x20class=\x27settName\x27\x20title=\x27' + (cEH[cAy]['info'] || '') + '\x27' + (null == cEH[cAy]['hide'] ? '' : 'id=\x27' + cAy + '_div\x27\x20style=\x27display:' + (cEH[cAy]['hide'] ? 'none' : 'block') + '\x27') + '>' + cAI['t'](cEH[cAy]['name']) + '\x20' + cEH[cAy]['html']() + '</div>');
      var cAz = cAw + this['getCSettings']();
      return cAz['length'] ? cAz : '<div\x20class=\x27setHed\x27>' + cAI['t']('settings.none') + '</div>';
    },
    'genList': function() {
      var cAw = '<div\x20class=\x27settingsHeader\x27><div\x20style=\x27display:inline-block;width:65%;\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(7);\x27\x20class=\x27+\x27>' + cAI['t']('settings.controls.change') + '</a>\x20|\x20<a\x20onclick=\x27importSettings()\x27\x20class=\x27+\x27>' + cAI['t']('settings.import') + '</a>\x20|\x20<a\x20onclick=\x27exportSettings()\x27\x20class=\x27+\x27>' + cAI['t']('settings.export') + '</a>\x20|\x20<a\x20onclick=\x27resetSettings()\x27\x20class=\x27+\x27>' + cAI['t']('settings.reset') + '</a></div><div\x20style=\x27float:right;display:inline-block;\x27><input\x20id=\x27settingSearch\x27\x20' + (this['settingSearch'] ? 'value=\x27' + this['settingSearch'] + '\x27' : '') + '\x20type=\x27text\x27\x20placeholder=\x27' + cAI['t']('generic.search') + '\x27\x20oninput=\x27windows[0].searchList()\x27></div></div>';
      return cAw += '<div\x20id=\x27settingHolder\x27>' + this['getSettings']() + '</div>';
    },
    'gen': function() {
      return this['genList']();
    },
    'searchMatches': function(cAw) {
      return !!cAw['name'] && 0x0 <= (cAI['t'](cAw['name']) || '')['toLowerCase']()['indexOf']((this['settingSearch'] || '')['toLowerCase']());
    }
  }, {
    'header': cAI['t']('windows.servers.header'),
    'sticky': !0x0,
    'lastLoadTime': 0x0,
    'serverListData': [],
    'gen': function() {
      return Date['now']() - this['lastLoadTime'] < cAA['serverBrowserRate'] ? this['genList']() : (this['lastLoadTime'] = Date['now'](), this['loadData']());
    },
    'loadData': function() {
      return cAP['fetchGameList']()['then'](cAw => {
        this['totalPlayerCount'] = cAw['totalPlayerCount'];
        var cAx = cAw['games'];
        this['serverListData'] = cAx;
        var cAy = !0x1;
        for (var cAz of cAx) {
          var [cAA, cAB, cAC, cAD, cAw] = cAz;
          if (cAA === cAQ) {
            cAy = !0x0;
            break;
          }
        }
        cAy ? window['showWindow'](0x2, !0x0) : cAP['fetchGameInfo'](cAQ)['then'](cAw => {
          this['privateServerData'] = cAw, window['showWindow'](0x2, !0x0);
        });
      }), cAI['t']('generic.loading');
    },
    'expandedRegion': -0x1,
    'totalPlayerCount': 0x0,
    'serverSearch': null,
    'searchList': function() {
      var cAw = document['getElementById']('serverSearch');
      this['serverSearch'] = cAw && '' != cAw['value'] ? cAw['value'] : null, (cAw = document['getElementById']('serverHolder')) && (cAw['innerHTML'] = this['getServers']());
    },
    'getServers': function(cAw) {
      for (var cAx = !!localStorage['debugServerList'], cAy = '', cAz = {
          'custom': {
            'order': 0x1,
            'name': 'Custom\x20Games',
            'players': 0x0,
            'games': []
          }
        }, cAB = cEH['defaultRegion']['val'], cAC = !0x1, cAD = 0x0; cAD < this['serverListData']['length']; cAD++) {
        var cAJ = this['serverListData'][cAD],
          [cAN, cAO, cAP, cAR, cAT] = cAJ;
        if (cAT) {
          cAz[cAO] || (cAz[cAO] = {
            'name': cAA['regionNames'][cAO],
            'players': 0x0,
            'games': []
          }, cAB == cAO && (cAz[cAO]['order'] = 0x1));
          var cB0 = cAT['cs'] ? 'custom' : cAO;
          cAJ[0x2] = Math['min'](cAP, cAR), cAQ === cAN && (cAC = !0x0), (!this['serverSearch'] || this['searchMatches'](cAJ)) && (cAz[cB0]['players'] += cAP), cAz[cB0]['games']['push'](cAJ);
        } else console['warn']('Server\x20doesn\x27t\x20have\x20data\x20yet.');
      }
      cAC || (this['privateServerData'] ? this['privateServerData'][0x4] ? cAz['custom']['games']['push'](this['privateServerData']) : console['warn']('Server\x20doesn\x27t\x20have\x20data\x20yet.') : console['warn']('Missing\x20private\x20server\x20data.'));
      var cBm = [];
      for (var cAO in cAz) cAz['hasOwnProperty'](cAO) && cBm['push'](cAz[cAO]);
      for (var cAO of cBm = cBm['sort']((cAw, cAx) => (cAx['order'] || -0x1) - (cAw['order'] || -0x1))) cAO['games']['sort']((cAw, cAx) => cAx[0x2] - cAw[0x2]), 'Custom\x20Games' == cAO['name'] && cIi && cAO['games']['sort']((cAw, cAx) => cAB == cAw[0x1] && cAB != cAx[0x1] ? -0x1 : cAB == cAx[0x1] && cAB != cAw[0x1] ? 0x1 : 0x0);
      if (cBM && cBM['level'], null != cAw) {
        var cBn = [];
        if (!(cAO = cBm[cAw]) || !cAO['games']) return cBn;
        cAO['games'] = cAO['games']['filter'](cAw => !cIg || cAw[0x2] != cAw[0x3]);
        for (var cBo = 0x0; cBo < cAO['games']['length']; cBo++) {
          var cBy = cAO['games'][cBo],
            [cAN, cBz, cAP, cAR, cAT] = cBy,
            cBA = cAQ && cAQ == cAN;
          (!this['serverSearch'] || this['searchMatches'](cBy)) && !cBA && cAP < cAR && cBn['push'](cAN);
        }
        return cBn;
      }
      for (var cBB = 0x0; cBB < cBm['length']; cBB++) {
        (cAO = cBm[cBB])['games'] = cAO['games']['filter'](cAw => !cIg || cAw[0x2] != cAw[0x3]);
        var cBC = cAO['name'] + '<span\x20style=\x27float:right\x27>' + cAO['players'] + '\x20online</span>',
          cBD = this['expandedRegion'] == cBB;
        if (cAy += '<div\x20class=\x27menuSelectorHeader\x27\x20onclick=\x27setExpandedRegion(' + (cBD ? -0x1 : cBB) + ')\x27\x20style=\x27cursor:\x20pointer;\x27>' + (cBD ? '&#x25BC;' : '&#x25B6;') + '\x20' + cBC + '</div><div\x20class=\x27quickJoin\x27\x20onclick=\x27quickJoinRegion(' + cBB + ')\x27>Quick\x20Join</div>', cBD) {
          cAy += '<div\x20class=\x27menuSelectorHolder\x27>';
          var cBE = 0x0;
          for (cBo = 0x0; cBo < cAO['games']['length']; cBo++) {
            cBy = cAO['games'][cBo];
            var [cAN, cBz, cAP, cAR, cAT] = cBy;
            cBA = cAQ && cAQ == cAN;
            if (!this['serverSearch'] || this['searchMatches'](cBy)) {
              cBE++;
              var cBF = (cAx ? cAN : cAT['i']) + (cAT['earnKR'] ? '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#2196F3;font-size:33px;vertical-align:bottom;\x27>check_circle</i>' : '') + '<div\x20class=\x27serverPCount\x27>' + cAP + '/' + cAR + '</div>' + (cAT['cs'] ? '<div\x20class=\x27serverRegion\x27>' + cAN['split'](':')[0x0] + '\x20-&nbsp;</div>' : '');
              cAy += '<div\x20class=\x27' + ('menuSelector' + (cBA ? '\x20selectedMenuSelector' : '')) + '\x27\x20onclick=\x27' + ('checkedSwitchServer(\x22' + cAN + '\x22,\x20this.querySelector(\x22.serverPCount\x22))') + '\x27>' + cBF + '</div>';
            }
          }
          cAO['games']['length'] && cBE || (cAy += '<div\x20style=\x27margin-left:30px;margin-top:5px\x27>' + cAI['t']('windows.servers.none') + '</div>'), cAy += '</div>';
        }
      }
      return cAy;
    },
    'genList': function() {
      var cAw = this;
      window['setExpandedRegion'] = function(cAx) {
        cAw['expandedRegion'] = cAx, cAw['lastLoadTime'] = Date['now'](), showWindow(0x2, !0x0);
      }, window['quickJoinRegion'] = function(cAx) {
        let cAy = cAw['getServers'](cAx),
          cAz = Math['min'](cAy['length'], 0xa);
        for (let cAw = 0x0; cAw < cAz; cAw++) cAP['fetchGameInfo'](cAy[cAw])['then'](cAw => {
          var [cAx, cAy, cAz, cAA, cAB] = cAw;
          cAz >= cAA || cAR(cAx);
        });
      };
      var cAx = '<div\x20class=\x27serverHeader\x27><div\x20style=\x27font-size:20px\x27><a\x20class=\x27menuLink\x27\x20onclick=\x27openHostWindow()\x27>' + cAI['t']('windows.servers.host') + '</a><div\x20style=\x27float:right;display:inline-block\x27><input\x20id=\x27serverSearch\x27\x20style=\x27width:333px;\x27' + (this['serverSearch'] ? 'value=\x27' + this['serverSearch'] + '\x27' : '') + '\x20type=\x27text\x27\x20placeholder=\x27Search\x20Game\x27\x20oninput=\x27windows[1].searchList()\x27></input></div></div><div\x20id=\x22serverFilters\x22><div\x20id=\x22hideFull\x22\x20style=\x22float:right;align-items:center;display:flex\x22><span\x20class=\x22grey\x22>' + cAI['t']('windows.servers.hide') + '</span><label\x20class=\x22switchsml\x22><input\x20type=\x22checkbox\x22\x20onclick=\x22toggleHF(this.checked);windows[1].searchList()\x22' + (cIg ? '\x20checked' : '') + '><span\x20class=\x22sliderSml\x22></span></label></div><div\x20style=\x22margin-left:10px;margin-right:10px;float:right;align-items:center;display:flex\x22>|</div><div\x20id=\x22regionPriority\x22\x20style=\x22float:right;align-items:center;display:flex\x22><span\x20class=\x22grey\x22>' + cAI['t']('windows.servers.priority') + '</span><label\x20class=\x22switchsml\x22><input\x20type=\x22checkbox\x22\x20onclick=\x22toggleRP(this.checked);windows[1].searchList()\x22' + (cIi ? '\x20checked' : '') + '><span\x20class=\x22sliderSml\x22></span></label></div></div></div><div\x20style=\x27height:10px\x27></div>';
      return cAx += '<div\x20style=\x27font-size:20px\x27>', cAx += '<div\x20id=\x27serverHolder\x27>' + this['getServers']() + '</div>', cAx += '<div\x20style=\x27height:10px\x27></div><b\x20style=\x27color:rgba(0,0,0,0.6)\x27>' + cAI['t']('windows.servers.online', this['totalPlayerCount']) + '</b>', cAx += '</div>';
    },
    'searchMatches'(cAw) {
      var [cAx, cAy, cAz, cAA, cAB] = cAw;
      return !!cAB && 0x0 <= (cAB['i'] || '')['toLowerCase']()['indexOf']((this['serverSearch'] || '')['toLowerCase']());
    }
  }, {
    'header': cAI['t']('windows.loadout.header'),
    'gen': function() {
      var cAw = cBJ['classes'][cCl];
      0x0 > cBJ['config']['classes']['indexOf'](parseInt(cCl)) && (cCl = cBJ['config']['classes'][0x0], cAw = cBJ['classes'][cCl]);
      var cAx = cBJ['weapons'][cAw['loadout'][0x0]]['name'],
        cAy = '#2196F3',
        cAz = cAw['secondary'] ? cBJ['weapons'][cHH]['name'] : cAI['t']('generic.none'),
        cAB = cBJ['store']['skins'][cHC] ? cBJ['store']['skins'][cHC]['name'] : -0x2 == cHC ? 'Random' : 'Combat\x20Knife',
        cAC = cBJ['store']['skins'][cHE] ? cBJ['store']['skins'][cHE]['name'] : -0x2 == cHE ? 'Random' : cAI['t']('generic.none'),
        cAD = cBJ['store']['skins'][cHD] ? cBJ['store']['skins'][cHD]['name'] : -0x2 == cHD ? 'Random' : cAI['t']('generic.none'),
        cAJ = cBJ['sprays'][cQg] ? cBJ['sprays'][cQg]['name'] : -0x2 == cQg ? 'Random' : cAI['t']('generic.none'),
        cAN = null != cBJ['weapons'][cAw['loadout'][0x0]]['attach'],
        cAO = (cAN && cBJ['attach'][cHB] ? cBJ['attach'][cHB]['name'] : cAI['t']('generic.none'), cAw['secondary'] ? '#2196F3' : 'rgba(0,0,0,0.3)'),
        cAP = 'rgba(0,0,0,0.3)',
        cAQ = cAP,
        cAR = 'rgba(0,0,0,0.3)';
      cBM && (null != cHG[cAw['loadout'][0x0]] && ((cAx = cBJ['store']['skins'][cHG[cAw['loadout'][0x0]]]) ? (cAy = cBJ['store']['rarities'][cAx['rarity']]['color'], cAx = cAx['name']) : -0x2 == cHG[cAw['loadout'][0x0]] && (cAx = 'Random')), cAw['loadout'][0x1] && null != cHG[cAw['loadout'][0x1]] && ((cAz = cBJ['store']['skins'][cHG[cAw['loadout'][0x1]]]) && (cAO = cBJ['store']['rarities'][cAz['rarity']]['color'], cAz = cAz['name'])), 0x0 <= cHE && cBJ['store']['skins'][cHE] && (cAP = cBJ['store']['rarities'][cBJ['store']['skins'][cHE]['rarity']]['color']), 0x0 <= cHD && cBJ['store']['skins'][cHD] && (cAQ = cBJ['store']['rarities'][cBJ['store']['skins'][cHD]['rarity']]['color']), 0x0 <= cHC && cBJ['store']['skins'][cHC] && (cAR = cBJ['store']['rarities'][cBJ['store']['skins'][cHC]['rarity']]['color']));
      for (var cAT = cAI['t']('windows.loadout.color.skin'), cB0 = cAA['skinColors']['length'] - 0x1; 0x0 <= cB0; cB0--) cAT += '<div\x20class=\x27skinColorItem' + (cHA == cB0 ? '\x20activeSkin' : '') + '\x27\x20style=\x27background-color:#' + cAA['skinColors'][cB0]['toString'](0x10) + '\x27\x20onclick=\x27selectSkinColor(' + cB0 + ')\x27></div>';
      return '<div\x20class=\x27settName\x27>' + cAI['t']('windows.loadout.class') + '<span\x20class=\x27settText\x20floatR\x27\x20onclick=\x27showWindow(6)\x27>' + cAw['name'] + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('windows.loadout.primary') + '<span\x20class=\x27settLabel\x20wepLink\x27\x20style=\x27color:' + cAy + '\x27\x20onclick=\x27skinSelector(' + cAw['loadout'][0x0] + ')\x27>' + cAx + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('windows.loadout.secondary') + '<span\x20class=\x27settLabel' + (cAw['secondary'] ? '\x20wepLink' : '') + '\x27\x20' + (cAw['secondary'] ? 'onclick=\x27showWindow(20)\x27' : '') + '\x20style=\x27color:' + cAO + '\x27>' + cAz + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('windows.loadout.melee') + '<span\x20onclick=\x27showWindow(26)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cAR + '\x27>' + cAB + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('windows.loadout.hat') + '<span\x20onclick=\x27showWindow(16)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cAP + '\x27>' + cAC + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('windows.loadout.body') + '<span\x20onclick=\x27showWindow(17)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cAQ + '\x27>' + cAD + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('windows.loadout.spray') + '<span\x20onclick=\x27showWindow(9)\x27\x20class=\x27settText\x20floatR\x27>' + cAJ + '</span></div><div\x20class=\x27settName\x27>' + cAT + '</div>';
    }
  }, {
    'header': cAI['t']('windows.mods.header'),
    'tabIndex': 0x0,
    'listData': {},
    'searchMods': function() {
      searchResultsMO['innerHTML'] = 'Loading...', cBH['searchMod'](mdSrch['value'], cNl);
    },
    'searchResp': function(cAw) {
      var cAx = '';
      cAw['length'] ? (cAx += '<div\x20style=\x27height:10px\x27></div>', cAx += cIl(cAw, 'mod')) : cAx = cAI['t']('windows.mods.none'), document['getElementById']('searchResultsMO') && (document['getElementById']('searchResultsMO')['innerHTML'] = cAx);
    },
    'loadMore': function(cAw) {
      this['listData'][this['tabIndex']]['waiting'] || (cAw && (cAw['className'] = 'loadMoreW', cAw['innerHTML'] = 'Loading...'), this['listData'][this['tabIndex']]['waiting'] = !0x0, this['listData'][this['tabIndex']]['loadInd'] += 0x1, cBH['listMods'](this['tabIndex'], this['listData'][this['tabIndex']]['loadInd'], cBM ? cBM['id'] : null, cNf));
    },
    'modsLoaded': function(cAw, cAx, cAy) {
      if (modList)
        if (this['listData'][cAx]['waiting'] = !0x1, cAw && cAw['length'])
          if (cAy) this['listData'][cAx]['dat'] || (modList['innerHTML'] = cAy, this['listData'][cAx] = null);
          else {
            var cAz = cIl(cAw, 'mod', cAx);
            this['listData'][cAx]['dat'] = (this['listData'][cAx]['dat'] || '') + cAz, this['tabIndex'] == cAx && updateWindow(0x4);
          }
      else this['listData'][cAx]['dat'] || (modList['innerHTML'] = cAI['t']('windows.mods.none'), this['listData'][cAx] = null);
    },
    'switchTab': function(cAw) {
      this['tabIndex'] != cAw && (this['tabIndex'] = cAw, updateWindow(0x4));
    },
    'gen': function() {
      for (var cAw = cAA['modTabs'][this['tabIndex']], cAx = '', cAy = 0x0; cAy < cAA['modTabs']['length']; ++cAy) cAx += '<div\x20class=\x27menuTab' + (this['tabIndex'] == cAy ? '\x20tabA' : '') + '\x27\x20onclick=\x27windows[3].switchTab(' + cAy + ')\x27>' + cAA['modTabs'][cAy]['n'] + '</div>';
      var cAz = '';
      return cAw['search'] ? cAz = '<input\x20style=\x27margin-top:10px\x27\x20type=\x27text\x27\x20id=\x27mdSrch\x27\x20class=\x27smlInput\x27\x20placeholder=\x27Mod\x20Name\x27\x20onkeydown=\x27if(window.event.keyCode==13)windows[3].searchMods()\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[3].searchMods()\x27>' + cAI['t']('generic.search') + '</a><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:10px\x27\x20id=\x27searchResultsMO\x27></div>' : this['listData'][this['tabIndex']] ? this['listData'][this['tabIndex']]['dat'] ? (cAz = this['listData'][this['tabIndex']]['dat'], cAz += this['listData'][this['tabIndex']]['waiting'] ? '<div\x20class=\x27loadMoreW\x27>Loading...</div>' : '<div\x20class=\x27loadMoreD\x27\x20onclick=\x27windows[3].loadMore(this)\x27>Load\x20More</div>') : cAz = '<div\x20class=\x27loadMoreW\x27>Loading...</div>' : (cAz = '<div\x20class=\x27loadMoreW\x27>Loading...</div>', this['listData'][this['tabIndex']] = {
        'loadInd': 0x0
      }, cBH['listMods'](this['tabIndex'], 0x0, cBM ? cBM['id'] : null, cNf)), '<a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(18)\x27\x20class=\x27menuLink\x27>Load\x20Mod</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(19)\x27\x20class=\x27menuLink\x27>Upload\x20Mod</a><a\x20style=\x27float:right\x27\x20href=\x27/viewer.html\x27\x20class=\x27menuLink\x27>Model\x20Viewer</a><div\x20style=\x27margin-top:25px;margin-bottom:15px\x27>' + cAx + '</div><div\x20style=\x27color:rgba(0,0,0,0.3)\x27\x20id=\x27modList\x27>' + cAz + '</div>';
    }
  }, {
    'header': cAI['t']('windows.account.header'),
    'getScore': function(cAw) {
      var cAx = 0x1 < cAw['level'] ? Math['pow'](cAw['level'] / cAA['rankVar'], 0x2) : 0x0;
      return parseInt(cAw['score'] - cAx) + '\x20/\x20' + parseInt(Math['pow']((cAw['level'] + 0x1) / cAA['rankVar'], 0x2) - cAx);
    },
    'gen': function() {
      return cBM ? '<div\x20style=\x27font-size:26px;margin-top:0px:font-weight:bold\x27>Profile</div><div\x20class=\x27settName\x27\x20style=\x27width:100%\x27>' + cAI['t']('generic.name') + '<a\x20href=\x27/social.html?p=profile&q=' + cBM['name'] + '\x27\x20class=\x27floatR\x27>' + cBM['name'] + '</a></div><div\x20class=\x27settName\x27\x20style=\x27width:100%\x27>' + cAI['t']('generic.clan') + '<a\x20class=\x27floatR\x27\x20class=\x27menuLink\x27\x20onclick=\x27showWindow(13)\x27>' + (cBM['clan'] ? '[' + cBM['clan'] + ']' : 'None') + '</a></div><div\x20class=\x27settName\x27>' + cAI['t']('generic.level') + '<span\x20class=\x27floatR\x27>' + cBM['level'] + '</span></div><div\x20class=\x27xpBar\x27><div\x20class=\x27xpBarB\x27\x20style=\x27width:' + cBM['levelProg'] + '%\x27></div><span\x20class=\x27xpBarV\x27>' + this['getScore'](cBM) + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('generic.score') + '<span\x20class=\x27floatR\x27>' + cBM['score'] + '</span></div><div\x20class=\x27settName\x27>MMR\x20(1v1)<span\x20class=\x27floatR\x27>' + cBM['elo']['round'](0x1) + '</span></div><div\x20class=\x27settName\x27>MMR\x20(2v2)<span\x20class=\x27floatR\x27>' + cBM['elo2']['round'](0x1) + '</span></div><div\x20class=\x27settName\x27>MMR\x20(4v4)<span\x20class=\x27floatR\x27>' + cBM['elo4']['round'](0x1) + '</span></div><div\x20class=\x27settName\x27>KR<span\x20class=\x27floatR\x27>' + cBM['funds'] + 'KR</span></div><div\x20class=\x27settName\x27>' + cAI['t']('generic.kills') + '<span\x20class=\x27floatR\x27>' + cBM['kills'] + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('generic.deaths') + '<span\x20class=\x27floatR\x27>' + cBM['deaths'] + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('generic.kdr') + '<span\x20class=\x27floatR\x27>' + (cBM['kills'] / Math['max'](cBM['deaths'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>KPG<span\x20class=\x27floatR\x27>' + (cBM['kills'] / Math['max'](cBM['games'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>Nukes<span\x20class=\x27floatR\x27>' + (cBM['stats']['n'] || 0x0) + '</span></div><div\x20class=\x27settName\x27>Melee<span\x20class=\x27floatR\x27>' + (cBM['stats']['mk'] || 0x0) + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('generic.games.played') + '<span\x20class=\x27floatR\x27>' + cBM['games'] + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('generic.games.won') + '<span\x20class=\x27floatR\x27>' + cBM['wins'] + '</span></div><div\x20class=\x27settName\x27>W/L<span\x20class=\x27floatR\x27>' + (cBM['wins'] / Math['max'](cBM['games'] - cBM['wins'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('generic.timep') + '<span\x20class=\x27floatR\x27>' + cBA['getReadableTime'](cBM['timePlayed']) + '</span></div><div\x20style=\x27height:10px\x27></div>' + (cBM['partnerName'] ? cBM['partnerApp'] ? '<div\x20style=\x27font-size:26px;margin-top:20px;font-weight:bold\x27>Creator\x20Code</div><a\x20class=\x27menuLink\x27\x20onclick=\x27showWindow(28)\x27>Creator\x20Dashboard</a>' : '<div\x20style=\x27font-size:26px;margin-top:20px;font-weight:bold\x27>Creator\x20Code\x20Application</div><div\x20style=\x27color:rgba(0,0,0,0.4)\x27>Your\x20application\x20is\x20waiting\x20for\x20approval...</div>' : '<div\x20style=\x27font-size:26px;margin-top:20px;font-weight:bold\x27>Creator\x20Code\x20Application</div><div\x20style=\x27font-size:17px;color:rgba(0,0,0,0.4)\x27>By\x20submitting\x20an\x20Application\x20you\x20agree\x20to\x20the\x20<a\x20href=\x27./docs/partner.txt\x27>Partner\x20Terms</a></div><input\x20type=\x27text\x27\x20id=\x27crtrCode\x27\x20class=\x27smlInput\x27\x20style=\x27width:100%;margin-bottom:8px\x27\x20placeholder=\x27Creator\x20Code\x20Name\x27\x20/><input\x20type=\x27text\x27\x20id=\x27crtrEmail\x27\x20class=\x27smlInput\x27\x20style=\x27width:80%;margin-bottom:8px\x27\x20placeholder=\x27PayPal\x20Email\x20for\x20Payouts\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px;vertical-align:middle\x27\x20onclick=\x27submitCrtrCod()\x27>' + cAI['t']('generic.submit') + '</a><div\x20id=\x27ctrtRes\x27\x20style=\x27color:rgba(0,0,0,0.5)\x27></div>') + '<div\x20style=\x27height:25px\x27></div><a\x20class=\x27menuLink\x27\x20onclick=\x27logoutAcc()\x27>' + cAI['t']('generic.logout') + '</a>' + (cHi ? '' : '<a\x20style=\x27float:right\x27\x20class=\x27menuLink\x27\x20onclick=\x27logoutSessions(this)\x27>' + cAI['t']('generic.logout.sessions') + '</a>') : '<input\x20id=\x27accName\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAI['t']('generic.username') + '\x27\x20class=\x27accountInput\x27\x20style=\x27margin-top:0\x27\x20value=\x27' + (getSavedVal('krunker_username') || '') + '\x27></input><input\x20id=\x27accPass\x27\x20type=\x27password\x27\x20placeholder=\x27' + cAI['t']('generic.password') + '\x27\x20class=\x27accountInput\x27></input><div\x20id=\x27accResp\x27\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.5);display:none\x27></div><div\x20class=\x27accountButton\x27\x20onclick=\x27registerAcc()\x27>' + cAI['t']('generic.register') + '</div><div\x20class=\x27accountButton\x27\x20onclick=\x27loginAcc()\x27\x20style=\x27margin-left:\x2020px\x27>' + cAI['t']('generic.login') + '</div>';
    }
  }, {
    'header': cAI['t']('windows.class.header'),
    'gen': function() {
      for (var cAw = '<div\x20id=\x27skinList\x27>', cAx = 0x0; cAx < cBJ['classes']['length']; ++cAx)
        if (0x0 <= cBJ['config']['classes']['indexOf'](cAx)) {
          var cAy = cBM && cBM['stats'] && cBM['stats']['c' + cAx] ? cBM['stats']['c' + cAx] : 0x0,
            cAz = cAA['rankVar'] * Math['sqrt'](cAy);
          cAy = Math['floor'](cAz);
          var cAB = Math['round'](0x64 * (cAz - cAy));
          cAy = Math['max'](0x1, cAy + 0x1), cAw += '<div\x20class=\x27classCard\x27\x20onclick=\x27selectClass(' + cAx + ')\x27>' + cBJ['classes'][cAx]['name'] + '<div\x20class=\x27classWeap\x27>' + cBJ['weapons'][cBJ['classes'][cAx]['loadout'][0x0]]['name'] + '</div><img\x20style=\x27image-rendering:pixelated\x27\x20class=\x27classImgC\x27\x20src=\x27' + cBA['assetsUrl']('/textures/classes/icon_' + cAx + '.png') + '\x27/><div\x20class=\x27classXPBar\x27><div\x20class=\x27clsXPBarC\x27\x20style=\x27width:' + cAB + '%\x27></div></div><div\x20class=\x27classLvl\x27>lvl\x20' + cAy + '</div></div>';
        } return cAw += '</div>';
    }
  }, {
    'header': cAI['t']('windows.controls.header'),
    'gen': function() {
      for (var cAw = '', cAx = [
          ['forward', 0x0, cBK['moveKeys'][0x0]],
          ['backward', 0x1, cBK['moveKeys'][0x1]],
          ['left', 0x2, cBK['moveKeys'][0x2]],
          ['right', 0x3, cBK['moveKeys'][0x3]],
          ['reload', 0x8, cBK['reloadKey']],
          ['aim', 0xa, cBK['aimKey']],
          ['shoot', 0x18, cBK['shootKey']],
          ['inspect', 0xe, cBK['inspKey']],
          ['spray', 0x9, cBK['sprayKey']],
          ['jump', 0x4, cBK['jumpKey']],
          ['crouch', 0x5, cBK['crouchKey']],
          ['prim', 0xd, cBK['primKey']],
          ['melee', 0x6, cBK['meleeKey']],
          ['swap', 0x7, cBK['swapKey']],
          ['chat', 0xb, cBK['chatKey']],
          ['voice', 0xc, cBK['voiceKey']],
          ['list', 0xf, cBK['listKey']],
          ['interact', 0x10, cBK['interactKey']],
          ['interactSec', 0x16, cBK['interactSecKey']],
          ['drop', 0x11, cBK['dropKey']],
          ['wepVis', 0x17, cBK['wepVisKey']],
          ['streak0', 0x12, cBK['streakKeys'][0x0]],
          ['streak1', 0x13, cBK['streakKeys'][0x1]],
          ['streak2', 0x14, cBK['streakKeys'][0x2]],
          ['streak3', 0x15, cBK['streakKeys'][0x3]]
        ], cAy = 0x0; cAy < cAx['length']; cAy++) cAw += '<div\x20class=\x27settName\x27>' + cAI['t']('windows.controls.' + cAx[cAy][0x0]) + '<span\x20class=\x27unbind\x27\x20onclick=\x27unbindCont(' + cAx[cAy][0x1] + ')\x27><i\x20class=\x27material-icons\x27\x20style=\x27font-size:38px;color:red;\x27>delete_forever</i></span><span\x20class=\x27settText\x20floatRNoC\x27\x20id=\x27cont' + cAx[cAy][0x1] + '\x27\x20onclick=\x27changeCont(' + cAx[cAy][0x1] + ')\x27>' + cBA['getKeyName'](cAx[cAy][0x2]) + '</span></div>';
      return cAw;
    }
  }, {
    'header': cAI['t']('windows.host.header'),
    'presets': {},
    'presetLoaded': function(cAw, cAx) {
      try {
        windows[0x7]['presets'][cAw]['data'] = cAw && windows[0x7]['presets'][cAw] && cAx ? JSON['parse'](cAx) : 'DEFAULT';
      } catch (cKA) {
        windows[0x7]['presets'][cAw]['data'] = 'DEFAULT';
      }
      updateWindow(0x8);
    },
    'gen': function() {
      var cAw = '';
      if (cAw += '<div\x20class=\x27settName\x20b\x27>' + cAI['t']('windows.host.maps') + '</div>', cAw += '<div\x20style=\x27margin-top:10px\x27>', cAw += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-top:10px\x27>' + cAI['t']('windows.host.cmaps') + '\x20<div\x20style=\x27float:right\x27>' + (cMF ? '<span><i\x20style=\x27color:#eb5656;font-size:30px;vertical-align:-3px;cursor:pointer\x27\x20onclick=\x27openHostWindow(true)\x27class=\x27material-icons\x27>delete</i>\x20</span>' : '') + '<a\x20id=\x27commMap\x27\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(10);\x27\x20class=\x27menuLink\x27\x20style=\x27font-size:18px\x27>' + (cMF || cAI['t']('generic.select')) + '</a></div></div><br/>', cMF || (cAw += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-top:-24px;\x27>' + cAI['t']('windows.host.raw') + '<input\x20id=\x27rawMapData\x27\x20type=\x27text\x27\x20class=\x27formInput\x27\x20' + (cMG ? 'value=\x27' + cMG['replace']('\x27', '\x22') + '\x27' : 'placeholder=\x27' + cAI['t']('windows.host.raw') + '\x27') + '\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27></div><br/>'), cAw += '</div>', cAw += '<div\x20style=\x27margin-top:-15px;margin-bottom:20px;\x27>', !cMF)
        for (var cAx, cAy = 0x0; cAy < cBR['length']; cAy++) cAx = cBR[cAy], cAw += '<label\x20class=\x27hostMap\x27><div\x20class=\x27hostMapName\x20blackShad\x27>' + cBA['capFirst'](cAx['name']) + '</div><div\x20class=\x27mapInfoB\x27\x20style=\x27top:54px\x27>?</div><input\x20id=\x27gameMap' + cAy + '\x27\x20type=\x27checkbox\x27><img\x20class=\x27hostMapImg\x27\x20src=\x27/img/maps/map_' + cAy + '.png\x27></label>';
      cAw += '</div>';
      var cAz = windows[0x7]['presets'][cMF],
        cAB = !cMF || cAz && cAz['data'];
      if (cAB) {
        cAz && (cAz = cAz['data']), 'DEFAULT' == cAz && (cAz = null), cAw += '<div\x20class=\x27settName\x20b\x27>' + cAI['t']('windows.host.modes') + '</div>', cAw += '<div\x20style=\x27margin-top:5px\x27>';
        var cAC;
        for (cAy = 0x0; cAy < cBS['length']; cAy++)
          if (!(cAC = cBS[cAy])['preventCustomGames']) {
            var cAD = '<label\x20class=\x27switch\x27><input\x20id=\x27gameMode' + cAy + '\x27\x20type=\x27checkbox\x27\x20' + ((cAO = cAz ? cAz['modes'] && 0x0 <= cAz['modes']['indexOf'](cAy) : 0x0 == cAy) ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            cAw += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cBA['capFirst'](cAC['name']) + cAD + '</div>';
          } cAw += '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:20px\x27>' + cAI['t']('windows.host.classes') + '</div>', cAw += '<div\x20style=\x27margin-top:5px\x27>';
        for (cAy = 0x0; cAy < cBJ['classes']['length']; cAy++) {
          var cAJ = cBJ['classes'][cAy];
          cAD = '<label\x20class=\x27switch\x27><input\x20id=\x27gameClass' + cAy + '\x27\x20type=\x27checkbox\x27\x20' + ((cAO = !cAz || !cAz['classes'] || 0x0 <= cAz['classes']['indexOf'](cAy)) ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
          cAw += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cAJ['name'] + cAD + '</div>';
        }
        cAw += '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:25px\x27>' + cAI['t']('windows.host.settings') + '</div>';
        for (cAy = 0x0; cAy < cAA['serverConfig']['length']; cAy++) {
          cBN = cAA['serverConfig'][cAy];
          var cAN = cAI['t']('server.config.' + cBN['varN']);
          if (cBN['bool']) {
            var cAO = cBN['def'];
            cAz && cAz['settings'] && null != cAz['settings'][cBN['varN']] && (cAO = !!cAz['settings'][cBN['varN']]), cAw += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27>' + cAN + '\x20<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20id=\x27customS' + cBN['varN'] + '\x27\x20' + (cAO ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label></div>';
          } else if (cBN['input']) cAw += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27>' + cAN + '<input\x20id=\x27customS' + cBN['varN'] + '\x27\x20value=\x27' + cBN['def'] + '\x27\x20type=\x27text\x27style=\x27border-radius:12px;border:none;background:#eee;padding:6px;padding-bottom:6px;float:right;margin-top:5px;margin-bottom:5px;\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27></div>';
          else {
            var cAP = cBN['def'],
              cAQ = cBM && cBM['featured'] && cBN['maxF'] || cBN['max'];
            cAz && cAz['settings'] && null != cAz['settings'][cBN['varN']] && ((cAP = cAz['settings'][cBN['varN']]) > cAQ && (cAP = cAQ)), cAw += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin-left:0\x27>' + cAN + '<span\x20class=\x27sliderVal\x27\x20id=\x27customSet' + cAy + '\x27>' + cAP + '</span><div\x20class=\x27slidecontainer\x27><input\x20type=\x27range\x27\x20min=\x27' + cBN['min'] + '\x27\x20max=\x27' + cAQ + '\x27\x20step=\x27' + cBN['step'] + '\x27\x20id=\x27customS' + cBN['varN'] + '\x27\x20value=\x27' + cAP + '\x27\x20oninput=\x27updateSliderLabel(' + cAy + ',this.value)\x27\x20class=\x27sliderM\x27></div></div>';
          }
        }
        cAw += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cAI['t']('server.config.private') + '\x20<label\x20class=\x27switch\x27><input\x20id=\x27makePrivate\x27\x20type=\x27checkbox\x27><span\x20class=\x27slider\x27></span></label></div>', cAw += '<div\x20id=\x27hostGamePreset\x27\x20style=\x27text-align:left;margin-top:30px\x27>' + windows[0x7]['genPresets'](!0x0) + '</div>';
      } else windows[0x7]['presets'][cMF] || (windows[0x7]['presets'][cMF] = {}, cBH['getMapPreset'](cMF, this['presetLoaded'])), cAw += '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27>' + cAI['t']('windows.host.preset.load') + '</div>';
      return cAB && (cAw += '<div\x20style=\x27text-align:left;margin-top:30px\x27>', cAw += '<div\x20style=\x27color:#919191;margin-bottom:5px\x27\x20id=\x27hostGameMsg\x27></div>', cAw += '<a\x20class=\x27menuLink\x27\x20onclick=\x27createPrivateRoom()\x27>' + cAI['t']('windows.host.start') + '</a>', cAw += '</div>'), cAw;
    },
    'presetAction': function(cAw) {
      if (0x0 == cAw && 'Select' == presetSelect['value']) return;
      if (0x2 == cAw && 'Select' == presetSelect['value']) return;
      let cAx = getSavedVal('krk_hostPresets');
      cAx = cAx ? JSON['parse'](cAx) : {};
      var cAy = presetName['value']['length'] ? presetName['value'] : 'Select' == presetSelect['value'] ? 'Preset1' : presetSelect['value'];
      if (0x2 == cAw) cAx[presetSelect['value']] && delete cAx[presetSelect['value']], saveVal('krk_hostPresets', JSON['stringify'](cAx));
      else {
        let cAC = 0x1 == cAw ? {} : cAx[presetSelect['value']];
        for (var cAz, cAB = 0x0; cAB < cBR['length']; cAB++) cBR[cAB], cAz = document['getElementById']('gameMap' + cAB), 0x1 == cAw ? 0x1 != cAz['checked'] && (cAC['gameMap' + cAB] = cAz['checked']) : 'gameMap' + cAB in cAC && (cAz['checked'] = cAC['gameMap' + cAB]);
        for (cAB = 0x0; cAB < cBS['length']; cAB++) cBS[cAB]['preventCustomGames'] || (cAz = document['getElementById']('gameMode' + cAB), 0x1 == cAw ? cAz['checked'] != !cAB && (cAC['gameMode' + cAB] = cAz['checked']) : 'gameMode' + cAB in cAC && (cAz['checked'] = cAC['gameMode' + cAB]));
        for (cAB = 0x0; cAB < cBJ['classes']['length']; cAB++) cBJ['classes'][cAB], cAz = document['getElementById']('gameClass' + cAB), 0x1 == cAw ? 0x1 != cAz['checked'] && (cAC['gameClass' + cAB] = cAz['checked']) : 'gameClass' + cAB in cAC && (cAz['checked'] = cAC['gameClass' + cAB]);
        for (cAB = 0x0; cAB < cAA['serverConfig']['length']; cAB++) cBN = cAA['serverConfig'][cAB], cAz = document['getElementById']('customS' + cBN['varN']), 0x1 == cAw ? cAz[cBN['bool'] ? 'checked' : 'value'] != cBN['def'] && (cAC[cBN['varN']] = cAz[cBN['bool'] ? 'checked' : 'value']) : cBN['varN'] in cAC && (!cBN['bool'] && !cBN['input'] && (document['getElementById']('customSet' + cAB)['innerText'] = cAC[cBN['varN']]), cAz[cBN['bool'] ? 'checked' : 'value'] = cAC[cBN['varN']]);
        0x1 == cAw ? (cMF && (cAC['commMap'] = cMF), '' != (cAz = document['getElementById']('rawMapData'))['value'] && (cAC['rawMapData'] = cAz['value']), 0x0 != (cAz = document['getElementById']('makePrivate'))['checked'] && (cAC['makePrivate'] = cAz['checked']), cAx[cAy] = cAC, saveVal('krk_hostPresets', JSON['stringify'](cAx))) : ('commMap' in cAC && (document['getElementById']('commMap')['innerText'] = cMF = cAC['commMap']), 'rawMapData' in cAC && (document['getElementById']('rawMapData')['value'] = cAC['rawMapData']), 'makePrivate' in cAC && (document['getElementById']('makePrivate')['checked'] = cAC['makePrivate']));
      }
      windows[0x7]['genPresets']();
    },
    'genPresets': function(cAw = !0x1) {
      let cAx = getSavedVal('krk_hostPresets');
      cAx = cAx ? JSON['parse'](cAx) : {};
      var cAy = '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:25px\x27>' + cAI['t']('windows.host.preset') + '</div>';
      for (let cAw in cAy += '<span\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27><input\x20id=\x27presetName\x27\x20type=\x27text\x27\x20class=\x27formInput\x27\x20placeholder=\x27' + cAI['t']('windows.host.preset.name') + '\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27\x20style=\x27border:none;background:#eee;padding:6px;padding-bottom:6px;float:left;margin-top:5px;margin-bottom:5px;\x27><select\x20id=\x27presetSelect\x27\x20style=\x27border-radius:12px;margin-left:10px;border:none;background:#eee;padding:6px;padding-bottom:6px;margin-top:5px;margin-bottom:5px;\x27><option\x20selected>Select</option>', cAx) cAy += '<option>' + cAw + '</option>';
      return cAy += '</select>', cAy += '<div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(2)\x27>' + cAI['t']('generic.delete') + '</div><div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(1)\x27>' + cAI['t']('generic.save') + '</div><div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(0)\x27>' + cAI['t']('generic.load') + '</div></span>', cAw ? cAy : void(hostGamePreset['innerHTML'] = cAy);
    }
  }, {
    'header': cAI['t']('windows.spray.header'),
    'gen': function() {
      for (var cAw = '<div\x20id=\x27skinList\x27><div\x20class=\x27noBtnCard\x27\x20onclick=\x27selectSpray(-2)\x27>' + cAI['t']('generic.random') + '<div\x20class=\x27itemOwn\x27\x20style=\x27opacity:0;\x27\x27>by\x20???</div><img\x20style=\x27margin-top:10px;width:110px;\x27\x20class=\x27noBtnImgC\x20skinSil\x27\x20src=\x27' + cBA['assetsUrl']('/textures/sprays/0.png') + '\x27><div\x20class=\x27skinRandom\x20blackShad\x27\x20style=\x27top:\x2080px;\x27>?</div></div>', cAx = 0x0; cAx < cBJ['sprays']['length']; ++cAx) cAw += '<div\x20class=\x27noBtnCard\x27\x20onclick=\x27selectSpray(' + cAx + ')\x27>' + cBJ['sprays'][cAx]['name'] + '<div\x20class=\x27itemOwn\x27>' + cAI['t']('windows.spray.default') + '</div><img\x20style=\x27margin-top:10px;width:110px;\x27\x20class=\x27noBtnImgC\x27\x20src=\x27' + cBA['assetsUrl']('/textures/sprays/' + cAx + '.png') + '\x27/></div>';
      return cAw += '</div>';
    }
  }, {
    'header': cAI['t']('windows.maps.header'),
    'searchMaps': function() {
      searchResultsMA['innerHTML'] = 'Loading...', cBH['searchMap'](mpSrch['value'], cNl);
    },
    'searchResp': function(cAw) {
      var cAx = '';
      cAw['length'] ? (cAx += '<div\x20style=\x27height:10px\x27></div>', cAx += cIl(cAw, 'map')) : cAx = cAI['t']('windows.maps.none'), document['getElementById']('searchResultsMA') && (document['getElementById']('searchResultsMA')['innerHTML'] = cAx);
    },
    'loadMore': function(cAw) {
      this['listData'][this['tabIndex']]['waiting'] || (cAw && (cAw['className'] = 'loadMoreW', cAw['innerHTML'] = 'Loading...'), this['listData'][this['tabIndex']]['waiting'] = !0x0, this['listData'][this['tabIndex']]['loadInd'] += 0x1, cBH['listMaps'](this['tabIndex'], this['listData'][this['tabIndex']]['loadInd'], cBM ? cBM['id'] : null, cNi));
    },
    'mapsLoaded': function(cAw, cAx, cAy) {
      if (mapList)
        if (this['listData'][cAx]['waiting'] = !0x1, cAw && cAw['length'])
          if (cAy) this['listData'][cAx]['dat'] || (mapList['innerHTML'] = cAy, this['listData'][cAx] = null);
          else {
            var cAz = cIl(cAw, 'map', cAx);
            this['listData'][cAx]['dat'] = (this['listData'][cAx]['dat'] || '') + cAz, this['tabIndex'] == cAx && updateWindow(0xa);
          }
      else this['listData'][cAx]['dat'] || (mapList['innerHTML'] = cAI['t']('windows.maps.none'), this['listData'][cAx] = null);
    },
    'tabIndex': 0x0,
    'listData': {},
    'switchTab': function(cAw) {
      this['tabIndex'] != cAw && (this['tabIndex'] = cAw, updateWindow(0xa));
    },
    'gen': function() {
      for (var cAw = cAA['mapTabs'][this['tabIndex']], cAx = '', cAy = 0x0; cAy < cAA['mapTabs']['length']; ++cAy) cAx += '<div\x20class=\x27menuTab' + (this['tabIndex'] == cAy ? '\x20tabA' : '') + '\x27\x20onclick=\x27windows[9].switchTab(' + cAy + ')\x27>' + cAA['mapTabs'][cAy]['n'] + '</div>';
      var cAz = '';
      return cAw['search'] ? cAz = '<input\x20style=\x27margin-top:10px\x27\x20type=\x27text\x27\x20id=\x27mpSrch\x27\x20class=\x27smlInput\x27\x20placeholder=\x27' + cAI['t']('windows.maps.name') + '\x27\x20onkeydown=\x27if(window.event.keyCode==13)windows[9].searchMaps()\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[9].searchMaps()\x27>' + cAI['t']('generic.search') + '</a><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:10px\x27\x20id=\x27searchResultsMA\x27></div>' : this['listData'][this['tabIndex']] ? this['listData'][this['tabIndex']]['dat'] ? (cAz = this['listData'][this['tabIndex']]['dat'], cAz += this['listData'][this['tabIndex']]['waiting'] ? '<div\x20class=\x27loadMoreW\x27>Loading...</div>' : '<div\x20class=\x27loadMoreD\x27\x20onclick=\x27windows[9].loadMore(this)\x27>Load\x20More</div>') : cAz = '<div\x20class=\x27loadMoreW\x27>Loading...</div>' : (cAz = '<div\x20class=\x27loadMoreW\x27>Loading...</div>', this['listData'][this['tabIndex']] = {
        'loadInd': 0x0
      }, cBH['listMaps'](this['tabIndex'], 0x0, cBM ? cBM['id'] : null, cNi)), '<a\x20href=\x27./editor.html\x27\x20class=\x27menuLink\x27>' + cAI['t']('windows.maps.editor') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(11)\x27\x20class=\x27menuLink\x27>' + cAI['t']('windows.maps.publish') + '</a><a\x20href=\x27https://discord.gg/Kfypyp5\x27\x20class=\x27menuLink\x27\x20style=\x27float:right\x27>' + cAI['t']('windows.maps.community') + '</a><br/><div\x20style=\x27margin-top:25px;margin-bottom:15px\x27>' + cAx + '</div><div\x20style=\x27color:rgba(0,0,0,0.3)\x27\x20id=\x27mapList\x27>' + cAz + '</div>';
    }
  }, {
    'header': cAI['t']('windows.publish.map.header'),
    'gen': function() {
      return cBM ? '<div\x20style=\x27margin-top:-8px;margin-bottom:10px\x27\x20class=\x27setHed\x27>' + cAI['t']('windows.publish.map.header') + '</div><div\x20style=\x27color:rgba(0,0,0,0.4);font-size:18px\x27><input\x20onclick=\x27selectMapThumb()\x27\x20type=\x27button\x27\x20id=\x27thumbBtn\x27\x20style=\x27cursor:pointer\x27\x20value=\x27Select\x27\x20/><input\x20id=\x27mapThumb\x27\x20type=\x27file\x27\x20accept=\x27image/*\x27\x20style=\x27width:1px;visibility:hidden;\x27\x20onchange=\x27updateMapThumb()\x27><span\x20style=\x27color:rgba(0,0,0,0.4);margin-left:10px\x27\x20id=\x27mapThumbName\x27>' + cAI['t']('windows.publish.map.thumbnail') + '</span></div><input\x20id=\x27mapDataNew\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAI['t']('windows.publish.map.paste') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><div\x20id=\x27mapUpResp\x27\x20style=\x27color:rgba(0,0,0,0.3);margin-top:8px;margin-bottom:5px\x27></div><div\x20class=\x27mapLoadButton\x27\x20style=\x27margin-top:6px\x27\x20onclick=\x27uploadCustomMap()\x27>' + cAI['t']('windows.publish.map.update') + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cAI['t']('windows.publish.map.login') + '</div>';
    }
  }, {
    'header': cAI['t']('windows.theatre.header'),
    'gen': function() {
      return '';
    }
  }, {
    'header': cAI['t']('windows.clans.header'),
    'clanData': null,
    'kickReq': function(cAw) {
      if (cBI['send']('cln', 0x5, cAw), this['clanData'] && this['clanData']['members']) {
        for (var cAx = this['clanData']['members']['length'] - 0x1; 0x0 <= cAx; --cAx) this['clanData']['members'][cAx]['player_id'] == cAw && this['clanData']['members']['splice'](cAx, 0x1);
        updateWindow(0xd);
      }
    },
    'sendReq': function(cAw, cAx) {
      var cAy = document['getElementById']('clanErr');
      cAy && (cAy['style']['color'] = 'rgba(0,0,0,0.6)', cAy['innerHTML'] = cAI['t']('generic.loading'));
      var cAz = (cAy = document['getElementById']('clanInp' + cAw)) ? cAy['value'] : null;
      cBI['send']('cln', cAw, cAx || cAz || 0x1);
    },
    'updReq': function(cAw, cAx, cAy) {
      cBI['send']('clnR', cAx, cAy), this['clanData']['members'] && 0x1 == cAy && this['clanData']['members']['push']({
        'player_name': this['clanData']['requests'][cAw]['player_name']
      }), this['clanData']['requests']['splice'](cAw, 0x1), updateWindow(0xd);
    },
    'delReq': function() {
      this['clanData'] = null, cBM && (cBM['clan'] = null), cBI['send']('cln', 0x4, 0x1), showWindow(0x5);
    },
    'resp': function(cAw, cAx, cAy) {
      var cAz = document['getElementById']('clanErr');
      cAw && cAz ? (cAz['style']['color'] = cAy ? 'rgba(0,0,0,0.6)' : 'rgba(255,0,0,0.6)', cAz['innerHTML'] = cAw) : cAx && (cBM && (cBM['clan'] = cAx['clan_name']), this['clanData'] = cAx, updateWindow(0xd));
    },
    'gen': function() {
      var cAw = '',
        cAx = '';
      if (this['clanData'] && this['clanData']['members']) {
        var cAy = cBM && this['clanData']['clan_playerid'] == cBM['id'];
        cAw = '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:10px\x27>' + cAI['t']('windows.clans.members', this['clanData']['members']['length']) + '</div>';
        for (var cAz = 0x0; cAz < this['clanData']['members']['length']; ++cAz) cAw += '<div\x20class=\x27settName\x27><a\x20target=\x27_blank\x27href=\x27/social.html?p=profile&q=' + this['clanData']['members'][cAz]['player_name'] + '\x27>' + this['clanData']['members'][cAz]['player_name'] + '</a>' + (cAy && this['clanData']['clan_playerid'] != this['clanData']['members'][cAz]['player_id'] ? '<i\x20style=\x27font-size:40px;float:right;color:rgba(255,0,0,0.6)\x27\x20\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].kickReq(' + this['clanData']['members'][cAz]['player_id'] + ')\x27>clear</i>' : '') + '</div>';
      }
      if (this['clanData'] && this['clanData']['requests']) {
        cAx = '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:10px\x27>' + cAI['t']('windows.clans.requests') + '</div>';
        for (cAz = 0x0; cAz < this['clanData']['requests']['length']; ++cAz) cAx += '<div\x20class=\x27settName\x27><a\x20target=\x27_blank\x27\x20href=\x27/social.html?p=profile&q=' + this['clanData']['requests'][cAz]['player_name'] + '\x27>' + this['clanData']['requests'][cAz]['player_name'] + '</a><span\x20style=\x27float:right\x27><i\x20style=\x27font-size:40px;color:rgba(255,0,0,0.6)\x27\x20\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].updReq(' + cAz + ',' + this['clanData']['requests'][cAz]['cr_playerid'] + ',\x200)\x27>clear</i><i\x20style=\x27font-size:40px;color:rgba(0,255,0,0.6);margin-left:10px\x27\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].updReq(' + cAz + ',' + this['clanData']['requests'][cAz]['cr_playerid'] + ',\x201)\x27>done</i></span></div>';
        this['clanData']['requests']['length'] || (cAx += '<div\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cAI['t']('windows.clans.requests.none') + '</div>');
      }
      var cAB = cBM ? cBM['clan'] ? '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:0px\x27>' + cAI['t']('windows.clans.page', cBM['clan']) + '<a\x20style=\x27float:right\x27\x20href=\x27javascript:;\x27\x20onclick=\x27windows[12].delReq()\x27\x20class=\x27menuLink\x27>' + (this['clanData'] ? cBM && this['clanData']['clan_playerid'] == cBM['id'] ? cAI['t']('generic.delete') : cAI['t']('generic.leave') : '') + '</a></div><div\x20id=\x27clanErr\x27\x20style=\x27margin-top:0px;color:rgba(0,0,0,0.5)\x27>' + (this['clanData'] ? '<div\x20class=\x27settName\x27>' + cAI['t']('generic.level') + '<span\x20class=\x27floatR\x27>' + Math['max'](0x1, Math['floor'](cAA['rankVar'] * Math['sqrt'](this['clanData']['clan_score'] || 0x0))) + '</span></div><div\x20class=\x27settName\x27>' + cAI['t']('generic.score') + '<span\x20class=\x27floatR\x27>' + (this['clanData']['clan_score'] || 0x0) + '</span></div>' + cAw + cAx : cAI['t']('generic.loading')) + '</div>' : '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:-5px\x27>' + cAI['t']('windows.clans.create') + '</div><input\x20id=\x27clanInp1\x27\x20type=\x27text\x27\x20class=\x27smlInput\x27\x20maxlength=\x274\x27\x20placeholder=\x27' + cAI['t']('windows.clans.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[12].sendReq(1)\x27>' + cAI['t']('generic.create') + '</a><div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27>' + cAI['t']('windows.clans.join') + '\x20<a\x20href=\x27./social.html?q=clan\x27\x20class=\x27menuLink\x27\x20style=\x27margin-top:10px;display:inline-block\x27>' + cAI['t']('windows.clans.view') + '</a></div><input\x20id=\x27clanInp2\x27\x20type=\x27text\x27\x20class=\x27smlInput\x27\x20maxlength=\x275\x27\x20placeholder=\x27' + cAI['t']('windows.clans.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[12].sendReq(2)\x27>' + cAI['t']('generic.submit') + '</a><div\x20id=\x27clanErr\x27\x20style=\x27margin-top:10px\x27></div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);margin-top:20px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cAI['t']('windows.clans.login') + '</div>';
      return cBM && cBM['clan'] && !this['clanData'] && this['sendReq'](0x3), cAB;
    }
  }, {
    'header': cAI['t']('windows.store.header'),
    'gen': function() {
      cBD['play']('store', 0.4);
      for (var cAw = '', cAx = 0x0; cAx < cBJ['store']['wheels']['length']; ++cAx) cBN = cBJ['store']['wheels'][cAx], (cBM && 0x0 == cBM['following'] && cBN['free'] && cBM['level'] >= cBN['minLvl'] || !cBN['free']) && (cAw += '<div><a\x20href=\x27javascript:;\x27\x20class=\x27menuLink\x27\x20onclick=\x27prizeWheel(' + cAx + ')\x27>' + cAI['t']('windows.store.spin', cBN['name']) + '</a>\x20' + (cBN['lab'] ? '<span\x20style=\x27color:#fff;margin-left:5px;background-color:' + cBN['lab']['col'] + ';font-size:15px;padding:3px;padding-left:8px;padding-right:8px\x27>\x20' + cBN['lab']['nm'] + '\x20</span>' : '') + '<span\x20style=\x27float:right;color:rgba(0,0,0,0.3)\x27>' + (cBN['priceT'] || cBN['price']) + '<span\x20style=\x27color:rgba(0,0,0,0.6)\x27>\x20' + (cBN['priceT'] ? '' : 'KR') + '</span></span></div>');
      var cAy = '<div\x20style=\x27color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:-3px\x27>' + cAI['t']('windows.store.agree', '<a\x20href=\x27./docs/terms.txt\x27>') + '</a>.\x20Support\x20your\x20favorite\x20Content\x20Creator\x20by\x20using\x20a\x20Creator\x20Code</div><input\x20type=\x27text\x27\x20id=\x27creatorCodeI\x27\x20class=\x27smlInput\x27\x20style=\x27width:100%;margin-bottom:8px\x27\x20placeholder=\x27Enter\x20Creator\x20Code\x27\x20/>';
      cAy += '<div\x20id=\x27skinList\x27>';
      for (cAx = 0x0; cAx < cBJ['store']['purchases']['length']; ++cAx) cAy += '<div\x20class=\x27shopCard\x27\x20onmouseenter=\x27playTick()\x27\x20onclick=\x27showPurchase(' + cAx + ')\x27\x20style=\x27background-image:\x20url(&quot;./img/shop/' + cAx + '.png&quot;)\x27>' + ((cBN = cBJ['store']['purchases'][cAx])['tag'] ? '<div\x20class=\x27shopSale\x27\x20style=\x27background-color:' + cBN['tagCol'] + '\x27>' + cBN['tag'] + '</div>' : '') + cBN['val'] + '\x20<span\x20style=\x27color:#fff\x27>KR</span><div\x20class=\x27purBtn\x27\x20onmouseenter=\x27playTick()\x27\x20onclick=\x27showPurchase(' + cAx + ')\x27>$' + cBN['price'] + '\x20USD</div></div>';
      cAy += '</div>';
      var cAz = '<div\x20style=\x27height:10px;\x27></div><b\x20style=\x27font-size:26px;margin-bottom:10px\x27>' + cAI['t']('windows.store.purchase') + '</b>' + cAy,
        cAA = '<div\x20style=\x27height:10px;\x27></div><b\x20style=\x27font-size:26px;margin-bottom:10px\x27>' + cAI['t']('windows.store.voucher') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:6px\x27>' + cAI['t']('windows.store.voucherinfo') + '</div><input\x20type=\x27text\x27\x20id=\x27redVouch\x27\x20class=\x27smlInput\x27\x20style=\x27width:80%\x27\x20placeholder=\x27Enter\x20KR\x20Code\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27redeemVoucher()\x27>Redeem</a><div\x20id=\x27vouchRes\x27></div>';
      return cBM ? '<b\x20style=\x27font-size:26px\x27>' + cAI['t']('windows.store.market') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);margin-bottom:10px\x27>' + cAI['t']('windows.store.buy') + '\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27window.open(`/social.html?p=market`)\x27>' + cAI['t']('windows.store.market2') + '</a></div><b\x20style=\x27font-size:26px\x27>' + cAI['t']('windows.store.wheels') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);margin-bottom:10px\x27>' + cAI['t']('windows.store.unlock') + '</div>' + cAw + cAz + cAA + '<div\x20style=\x27float:right;margin-top:20px\x27>' + cAI['t']('windows.store.amount', cBM['funds']) + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cAI['t']('windows.store.login') + '</div>';
    }
  }, {
    'header': cAI['t']('windows.skin.header'),
    'gen': function() {
      var cAw = '<div\x20id=\x27skinList\x27><div\x20class=\x27skinCard\x27>' + cAI['t']('generic.default') + '<div\x20class=\x27itemOwn\x27>by\x20Krunker.io</div><img\x20class=\x27skinImg\x27\x20src=\x27' + cBA['assetsUrl']('/textures/previews/weapons/' + cBJ['weapons'][cHI]['src'] + '.png') + '\x27\x20style=\x27margin-top:-10px\x27><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;margin-top:-40px\x27\x20onclick=\x27selectSkin(-1,' + cHI + ')\x27>' + cAI['t']('generic.select') + '</div></div><div\x20class=\x27skinCard\x27>' + cAI['t']('generic.random') + '<div\x20class=\x27itemOwn\x27\x20style=\x27opacity:0;\x27\x27>by\x20???</div><img\x20class=\x27skinImg\x20skinSil\x27\x20src=\x27' + cBA['assetsUrl']('/textures/previews/weapons/' + cBJ['weapons'][cHI]['src'] + '.png') + '\x27\x20style=\x27margin-top:-10px\x27><div\x20class=\x27skinRandom\x20blackShad\x27>?</div><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;margin-top:-40px\x27\x20onclick=\x27selectSkin(-2,' + cHI + ')\x27>' + cAI['t']('generic.select') + '</div></div>';
      if (cBM || cBJ['singlePlayer'])
        for (var cAx = (cBJ['singlePlayer'] ? Object['keys'](cBJ['store']['skins'])['map'](cAw => cAw = {
            'ind': parseInt(cAw),
            'cnt': 0x1
          }) : cBM['skins'])['slice']()['sort'](function(cAw, cAx) {
            return (null != cAx['ind'] && cBJ['store']['skins'][cAx['ind']] ? cBJ['store']['skins'][cAx['ind']]['rarity'] : 0x0) - (null != cAw['ind'] && cBJ['store']['skins'][cAw['ind']] ? cBJ['store']['skins'][cAw['ind']]['rarity'] : 0x0);
          }), cAy = 0x0; cAy < cAx['length']; ++cAy)(cBN = cBJ['store']['skins'][cAx[cAy]['ind']]) && !cBN['type'] && cBN['weapon'] == cHI + 0x1 && (cAw += '<div\x20class=\x27skinCard\x27\x20style=\x27color:' + cBJ['store']['rarities'][cBN['rarity']]['color'] + '\x27><div\x20class=\x27itemCnt\x27\x20data-badge=\x27x' + cAx[cAy]['cnt'] + '\x27></div>' + cBN['name'] + '<div\x20class=\x27itemOwn\x27>by\x20' + (cBN['creator'] || 'Krunker.io') + '</div><img\x20style=\x27margin-top:-10px\x27\x20class=\x27skinImg' + (cBN['type'] ? 'C' : '') + '\x27\x20src=\x27' + cBA['getPreview'](cBN, cBJ['store']) + '\x27/><div\x20class=\x27selctBtn\x27\x20style=\x27margin-top:-40px\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27selectSkin(' + cAx[cAy]['ind'] + ',' + (cBN['weapon'] - 0x1) + ')\x27>' + cAI['t']('generic.select') + '</div><div\x20class=\x27selctInfoBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27openURL(&quot;/social.html?p=itemsales&i=' + cAx[cAy]['ind'] + '&quot;)\x27>?</div></div>');
      return cAw += '</div>';
    }
  }, {
    'header': cAI['t']('windows.hat.header'),
    'gen': function() {
      return cIv('selectHat', 0x1);
    }
  }, {
    'header': cAI['t']('windows.back.header'),
    'gen': function() {
      return cIv('selectBack', 0x2);
    }
  }, {
    'header': cAI['t']('windows.mods.load.header'),
    'gen': function() {
      return '<div\x20id=\x27modPckHead\x27\x20style=\x27margin-bottom:10px;font-size:22px\x27>Mod\x20Loader</div><form\x20id=\x27modDropper\x27><input\x20onchange=\x27loadMod()\x27\x20id=\x27modInput\x27type=\x27file\x27><p\x20id=\x27modLInfo\x27>' + cAI['t']('windows.mods.drop') + '</p></form><input\x20type=\x27text\x27\x20id=\x27modURL\x27\x20class=\x27accountInput\x27\x20style=\x27width:78%\x27\x20placeholder=\x27' + cAI['t']('windows.mods.paste') + '\x27><a\x20class=\x27menuLink\x27\x20style=\x27display:inline-block;margin-left:10px\x27\x20onclick=\x27loadModURL()\x27>' + cAI['t']('windows.mods.load') + '</a>';
    }
  }, {
    'header': cAI['t']('windows.publish.mod.header'),
    'gen': function() {
      return cBM ? '<div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27>' + cAI['t']('windows.publish.mod.header') + '</div><div\x20style=\x27color:rgba(0,0,0,0.4);font-size:18px\x27><input\x20onclick=\x27selectModThumb()\x27\x20type=\x27button\x27\x20id=\x27thumbBtn\x27\x20style=\x27cursor:pointer\x27\x20value=\x27Select\x27\x20/><input\x20id=\x27modThumb\x27\x20type=\x27file\x27\x20accept=\x27image/*\x27\x20style=\x27width:1px;visibility:hidden;\x27\x20onchange=\x27updateModThumb()\x27><span\x20style=\x27color:rgba(0,0,0,0.4);margin-left:10px\x27\x20id=\x27modThumbName\x27>' + cAI['t']('windows.publish.mod.thumbnail') + '</span></div><input\x20id=\x27pubModName\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAI['t']('windows.publish.mod.name') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><input\x20id=\x27pubModURL\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAI['t']('windows.publish.mod.paste') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><div\x20id=\x27modUpResp\x27\x20style=\x27color:rgba(0,0,0,0.3);margin-top:8px\x27></div><div\x20class=\x27mapLoadButton\x27\x20style=\x27margin-top:6px\x27\x20onclick=\x27uploadCustomMod()\x27>' + cAI['t']('windows.publish.mod.update') + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5)\x27\x20class=\x27menuLink\x27>' + cAI['t']('windows.publish.mod.login') + '</div>';
    }
  }, {
    'header': cAI['t']('windows.secondary.header'),
    'gen': function() {
      for (var cAw = '<div\x20id=\x27skinList\x27>', cAx = 0x0; cAx < cBJ['weapons']['length']; ++cAx)
        if ((cBN = cBJ['weapons'][cAx]) && cBN['secondary']) {
          var cAy = !cBN['minRec'] || cBM && cBM['level'] >= cBN['minRec'] || cBJ['singlePlayer'];
          cAw += '<div\x20class=\x27skinCard\x27>' + cBN['name'] + '<div\x20class=\x27itemOwn\x27>' + (cBN['minRec'] ? cAI['t']('windows.secondary.' + (cAy ? 'unlocked' : 'req'), cBN['minRec']) : cAI['t']('generic.default')) + '</div><img\x20style=\x27margin-top:10px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27/img/prev/' + cBN['src'] + '.png\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;\x27' + (cAy ? 'onclick=\x27selectSecondary(' + cAx + ')' : '') + '\x27>' + cAI['t']('generic.select') + '</div></div>';
        } return cAw += '</div>';
    }
  }, {
    'header': cAI['t']('windows.advertise.header'),
    'gen': function() {
      return '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:0\x27>Advertise\x20in\x20Game</div><div\x20style=\x27color:rgba(0,0,0,0.4)\x27>On\x20krunker.io\x20you\x20have\x20the\x20ability\x20to\x20place\x20advertisements\x20in\x20game.<div\x20style=\x27height:10px\x27></div>\x20The\x20game\x20features\x20several\x20<b>3d\x20Billboards</b>\x20that\x20yield\x20a\x20very\x20high\x20impression\x20rate\x20&\x20that\x20are\x20<b>not\x20affected\x20by\x20ad\x20blockers</b>.</div><img\x20src=\x27/img/ad_1.png\x27\x20style=\x27width:100%;margin-top:10px\x27/><div\x20style=\x27color:rgba(0,0,0,0.4);margin-top:10px\x27><b>Daily\x20Users:</b>\x20~\x202,000,000<br/><b>Registered\x20Accounts:</b>\x20~\x205,000,000<br/><b>Daily\x20Impressions:</b>\x20~\x206,500,000<br/><b>Peak\x20CCU:</b>\x20~\x2028,000<br/><b>Session\x20Time\x20avg:</b>\x2014\x20minutes<br/><div\x20style=\x27height:5px\x27></div><i\x20style=\x27color:rgba(0,0,0,0.2)\x27>as\x20of\x2016/06/2019</i></div><div\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.4)\x27>For\x20inquiries\x20contact\x20<a>info@yendis.ch</a></div>';
    }
  }, {
    'header': 'Social',
    'gen': function() {
      return 'TODO';
    }
  }, {
    'header': cAI['t']('windows.players.header'),
    'gen': function() {
      var cAw = '<div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27><center>' + (cBJ['players']['list']['length'] ? cAI['t']('windows.players.header') + '<hr>' : cAI['t']('windows.players.none')) + '</div>';
      cAw += '<div\x20style=\x27background-color:gainsboro;border-radius:\x2012px;\x27>', cBL && (cAw += '<div><span\x20class=\x27settNameSmall\x27>' + (cBX ? '<i\x20class=\x27material-icons\x27\x20style=\x27font-size:25px\x27>stars</i>' : '') + cBL['name'] + (cBL['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAA['verClans']['indexOf'](cBL['clan']) ? cBy['verified']['clan'] : '#353535') + '\x27>\x20[' + cBL['clan'] + ']</span>' : '') + '</span><span\x20style=\x27float:right\x27>' + (cBM && cBM['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kill\x27\x20onclick=\x27punishPlayer(\x22' + cBL['id'] + '\x22,\x202)\x27>Kill</span>' : '') + (cBM && cBM['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tpall\x27\x20onclick=\x27punishPlayer(null,\x205)\x27>TPAll</span>' : '') + '</span></div>');
      for (let cAy of cBJ['players']['list']['filter'](cAw => !cAw['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW'])) {
        var cAx = (cAy['level'] <= cAA['voteKickMaxLvl'] || !cAy['level']) && cBM && !cBJ['isCustom'] && -0x1 == cCr['indexOf'](cAy['name']) && (cCy == cAy['name'] || !cCy && !cCs);
        cAw += '<div><span\x20class=\x27settNameSmall\x27>' + (cBY == cAy['id'] ? '<i\x20class=\x27material-icons\x27\x20style=\x27font-size:25px\x27>stars</i>' : '') + '<a\x20target=\x27_blank\x27\x20class=\x27' + (cAy['isHacker'] ? 'red' : 'grey') + '\x27\x20href=\x27/social.html?p=profile&q=' + cAy['name'] + '\x27>' + cAy['name'] + (cAy['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAA['verClans']['indexOf'](cAy['clan']) ? cBy['verified']['clan'] : '#353535') + '\x27>\x20[' + cAy['clan'] + ']</span>' : '') + '</a></span><span\x20style=\x27float:right\x27>' + (cAx ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20vote\x27\x20onclick=\x27kickVote(\x22' + cAy['id'] + '\x22)\x27>Votekick</span>' : '') + (cBX || cBM && (cBM['developer'] || cBM['moderator']) ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kick\x27\x20onclick=\x27punishPlayer(\x22' + cAy['id'] + '\x22,\x200)\x27>Kick</span>' : '') + (cBX || cBM && cBM['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20ban\x27\x20onclick=\x27punishPlayer(\x22' + cAy['id'] + '\x22,\x201)\x27>Ban</span>' : '') + (cBM && cBM['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kill\x27\x20onclick=\x27punishPlayer(\x22' + cAy['id'] + '\x22,\x202)\x27>Kill</span>' : '') + (cBM && (cBM['developer'] || cBM['moderator']) ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tp2\x27\x20onclick=\x27punishPlayer(\x22' + cAy['id'] + '\x22,\x203)\x27>TP2</span>' : '') + (cBM && (cBM['developer'] || cBM['moderator']) ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tpme\x27\x20onclick=\x27punishPlayer(\x22' + cAy['id'] + '\x22,\x204)\x27>TPME</span>' : '') + '</span></div>';
      }
      return cAw += '</div>';
    }
  }, {
    'header': cAI['t']('windows.join.header'),
    'gen': function() {
      return '<input\x20id=\x27gameURL\x27\x20type=\x27text\x27\x20placeholder=\x27' + cAI['t']('windows.join.code') + '\x27\x20class=\x27accountInput\x27\x20style=\x27margin-top:0\x27\x20value=\x27\x27></input><div\x20class=\x27accountButton\x27\x20onclick=\x27joinGame()\x27\x20style=\x27width:100%\x27>' + cAI['t']('windows.join.header') + '</div>';
    }
  }, {
    'header': cAI['t']('windows.client.header'),
    'gen': function() {
      return '<div><ul\x20style=\x27padding:0;display:flex;list-style:none;text-align:center;margin:0;margin-top:-10px\x27><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;margin-right:10px\x27><a\x20href=\x27//client2.krunker.io/setup.exe\x27\x20style=\x27display:block;width:100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/windows.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cAI['t']('windows.client.windows') + '</a></li><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;\x27><a\x20href=\x27//client2.krunker.io/setup.dmg\x27\x20style=\x27display:\x20block;width:\x20100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/mac.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cAI['t']('windows.client.mac') + '</a></li><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;\x27><a\x20href=\x27//client2.krunker.io/setup.AppImage\x27\x20style=\x27display:\x20block;width:\x20100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/linux.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cAI['t']('windows.client.linux') + '</a></li></ul></div>';
    }
  }, {
    'header': cAI['t']('windows.melee.header'),
    'gen': function() {
      return cIv('selectMelee', 0x3);
    }
  }, {
    'header': cAI['t']('windows.ranked.header'),
    'hideScroll': !0x0,
    'cantQueue': !0x1,
    'resp': function(cAw, cAx) {
      cAw ? showWindow(0x0) : (this['cantQueue'] = cAx, cGK(null), updateWindow(0x1b));
    },
    'gen': function() {
      if (!cBM) return '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cAI['t']('windows.ranked.login') + '</div>';
      if (this['cantQueue']) return '<span\x20style=\x27font-size:\x2020px\x27>You\x20have\x20abandoned\x20a\x20ranked\x20match\x20in\x20the\x20last\x205\x20hours.\x20Please\x20wait\x20' + cBA['getReadableTime'](this['cantQueue']) + '\x20to\x20requeue.</span>';
      var cAw = '<span\x20class=\x27rankedParty\x27\x20style=\x27width:\x20302px;\x27>Queue\x20with\x20Friends\x20soon...</span>',
        cAx = [];
      if (localStorage['lastQueues']) try {
        cAx = JSON['parse'](localStorage['lastQueues']);
      } catch (cLP) {}
      0x0 == cAx['length'] && (cAx = [cAA['queues'][0x0]['id']]), cAw += '<select\x20id=\x22queueRegionSelect\x22\x20class=\x27inputGrey\x27>';
      var cAy = getSavedVal('krunker_rankedRegion') || localStorage[cAO['PING_REGION_CACHE_KEY']];
      for (var cAz of cTV) cAw += '<option\x20value=\x27' + cAz + '\x27\x20' + (cAz == cAy ? 'selected' : '') + '>', cAw += cAA['regionNames'][cAz];
      for (var cAB of (cAw += '</select>', cAw += '<div\x20style=\x27margin-top:10px;\x27>', cAA['queues'])) {
        var cAC = cBA['eloIconId'](cBM[cAB['key']]);
        cAw += '<label\x20class=\x27rankedSelection\x27\x20onmouseover=\x27SOUND.play(`tick_0`,0.1)\x27><div\x20class=\x27rankedType\x20blackShad\x27>' + cAI['t'](cAB['name']) + '</div><img\x20class=\x27rankedELO\x27\x20src=\x27./img/ranks/icon_' + cBA['eloIconId'](cBM[cAB['key']]) + '.png\x27><div\x20class=\x27rankedELOTxt\x20blackShad\x27>' + (0x0 == cAC ? 'No\x20Rank' : 'Rank\x20' + cAC) + '</div><input\x20type=\x27checkbox\x27\x20class=\x27rankedQueueOption\x27\x20data-queue-id=\x27' + cAB['id'] + '\x27\x20><img\x20class=\x27rankedImg\x27\x20src=\x27/img/ranked/' + cAB['id'] + '.png\x27></label>';
      }
      cAw += '</div>', cAw += '<span\x20class=\x27rankedWarning\x27>Leaving\x20a\x20match\x20will\x20result\x20in\x20a\x202\x20Hour\x20Ban\x20&\x20Loss\x20in\x20Rank</span>';
      var cAD = cBM['level'] >= cAA['minRankedLevel'];
      return cGW ? cAw += '<div\x20class=\x22joinQueue\x20jQR\x22\x20onclick=\x22leaveQueue()\x22>Leave\x20Queue</div>' : cGV ? cAw += '<div\x20class=\x22joinQueue\x20jQR\x22>' + cGV + '</div>' : cBJ['config']['isFromQueue'] ? cAw += '<div\x20class=\x22joinQueue\x20jQR\x22>In\x20Ranked\x20Match</div>' : (cAw += '<div\x20class=\x22joinQueue', !cAD && (cAw += '\x20jQR'), cAw += '\x22\x20', cAD && (cAw += 'onclick=\x22joinQueue()\x22'), cAw += '>', cAw += cAD ? 'Join\x20Queue' : 'Requires\x20lvl\x20' + cAA['minRankedLevel'], cAw += '</div>'), cAw;
    }
  }, {
    'header': 'Creator\x20Dashboard',
    'getData': function(cAw) {
      var cAx = document['getElementById']('creatorDash');
      if (cAx) {
        var cAy = 'Error.\x20Try\x20Again';
        cAw && (cAy = '<div\x20style=\x27margin-bottom:20px;\x27>The\x20following\x20are\x20estimates\x20of\x20your\x20Creator\x20Code\x20earnings</div><div>Earnings\x20this\x20Month:\x20<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cAw['revenuesharethismonth'] + '\x20USD</span></div><div>Earnings\x20last\x20Month:\x20<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cAw['revenuesharelastmonth'] + '\x20USD</span></div><div>Earning\x20all\x20Time:\x20<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cAw['revenuesharetotal'] + '\x20USD</span></div><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:20px\x27>Payouts\x20happen\x20on\x20a\x20monthly\x20basis</div>'), cAx['innerHTML'] = cAy;
      }
    },
    'gen': function() {
      return cBI['send']('crtD'), '<div\x20id=\x27creatorDash\x27>Loading...</div>';
    }
  }, {
    'header': cAI['t']('windows.support.header'),
    'gen': function() {
      return '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:0\x27>Krunker\x20Support</div><div\x20style=\x27color:rgba(0,0,0,0.4)\x27>Contact\x20us\x20on\x20<a>krunker@yendis.ch</a>\x20for\x20support\x20requests\x20relating\x20to\x20your\x20<b>Account</b>.\x20Recovery\x20is\x20only\x20possible\x20if\x20certain\x20information\x20can\x20be\x20provided.<div\x20style=\x27height:10px\x27></div>\x20For\x20<b>Bug\x20Reports,\x20Suggestions</b>\x20or\x20<b>Other\x20Queries</b>\x20join\x20our\x20<a\x20href=\x27https://discord.gg/2hhCVc9\x27>Discord</a>\x20or\x20<a\x20href=\x27https://www.reddit.com/r/KrunkerIO\x27>Reddit</a>\x20communities.<div\x20style=\x27height:10px\x27></div>For\x20Business\x20related\x20matters\x20go\x20to\x20our\x20<a\x20href=\x27https://yendis.io\x27>Website</a>';
    }
  }, {
    'header': cAI['t']('windows.mail.header'),
    'mailData': null,
    'mailCount': function(cAw) {
      mailCount['innerHTML'] = cAw, mailCount['style']['display'] = cAw ? 'block' : 'none';
    },
    'onData': function(cAw) {
      cAw ? this['mailData']['d'] = cAw : windows[0x1d]['mailData'] = null, updateWindow(0x1e);
    },
    'onReadData': function(cAw) {
      var cAx;
      if (cAw) {
        if (cAw = cAw[0x0], cAx = document['getElementById']('mail_' + cAw['km_id'])) {
          cAx['style']['border'] = '', cAx['classList']['remove']('mailUnread');
          var cAy = cAw['km_text']['replace'](/<|>/g, '')['replace']('&', '')['replace'](/[^\x00-\x7F]/g, '');
          cAx['children'][0x2]['innerHTML'] = cAy['length'] ? cAy : 'No\x20message\x20provided';
          for (var cAz = 0x0; cAz < this['mailData']['d']['length']; cAz++)
            if (this['mailData']['d'][cAz]['km_id'] == cAw['km_id']) {
              this['mailData']['d'][cAz]['km_archive'] = 0x1;
              break;
            }
        }
      } else(cAx = document['getElementById']('mail_' + cAw['km_id'])) && (cAx['children'][0x2]['innerHTML'] = 'Failed\x20to\x20load\x20mail');
    },
    'readMail': function(cAw, cAx) {
      cAw['children'][0x2]['innerHTML']['length'] ? cAw['children'][0x2]['innerHTML'] = '' : (cAw['children'][0x2]['innerHTML'] = 'Loading...', cBI['send']('rml', cAx));
    },
    'gen': function() {
      var cAw = '';
      if (this['mailData'])
        if (this['mailData']['d']) {
          for (var cAx, cAy = 0x0; cAy < this['mailData']['d']['length']; ++cAy) cAw += '<div\x20class=\x27mailObj' + ((cAx = this['mailData']['d'][cAy]['km_archive']) ? '' : '\x20mailUnread') + '\x27\x20id=\x27mail_' + this['mailData']['d'][cAy]['km_id'] + '\x27\x20onclick=\x27windows[29].readMail(this,\x20' + this['mailData']['d'][cAy]['km_id'] + ')\x27\x20style=\x27' + (cAx ? '' : 'border:\x202px\x20solid\x20#5699eb;') + '\x27><div\x20style=\x27position:relative;\x27><div\x20class=\x27mailDate\x27>' + cBA['getReadableTime2'](new Date()['getTime']() - new Date(this['mailData']['d'][cAy]['km_datesent'])['getTime']()) + '</div></div><div\x20class=\x27mailFrom\x27>' + this['mailData']['d'][cAy]['km_playerfrom'] + '</div>' + this['mailData']['d'][cAy]['km_subject'] + '<div\x20class=\x27mailText\x27></div></div>';
          this['mailData']['d']['length'] || (cAw = 'Empty\x20Inbox');
        } else cAw = 'Loading...';
      else this['mailData'] = {}, cBI['send']('kml'), cAw = 'Loading...';
      return '<div>Your\x20Inbox\x20[BETA]</div><div\x20id=\x27mailList\x27>' + cAw + '</div>';
    }
  }, {
    'header': cAI['t']('windows.attach.header'),
    'gen': function() {
      var cAw = '<div\x20id=\x27skinList\x27><div\x20class=\x27noBtnCard\x27\x20onclick=\x27selectAttachment(-1)\x27>' + cAI['t']('generic.none') + '<div\x20class=\x27skinRandom\x20blackShad\x27\x20style=\x27top:\x2060px;\x27>X</div></div>';
      if (null != cBJ['weapons'][cBJ['classes'][cCl]['loadout'][0x0]]['attach'])
        for (var cAx = 0x0; cAx < cBJ['attach']['length']; ++cAx)(cBN = cBJ['attach'][cAx]) && (cAw += '<div\x20class=\x27noBtnCard\x27\x20onclick=\x27selectAttachment(' + cAx + ')\x27>' + cBN['name'] + '<div><img\x20class=\x27noBtnImgC\x27\x20src=\x27' + cBA['assetsUrl']('/textures/previews/attach/attach_' + cAx + '.png') + '\x27/></div></div>');
      return cAw += '</div>';
    }
  }], window['advertMapCreator'] = function() {
    var cAw = cBA['randInt'](0x1, 0x3);
    if (cCp['length'] && !cCq && 0x2 == cAw && cBL) {
      var cAx = '<div\x20class=\x27supportRate\x27>Do\x20you\x20enjoy\x20this\x20map?</div><div\x20class=\x27voteHint\x27>Rate</div><i\x20id=\x27mapSupVoteD\x27\x20onclick=\x27voteMapSupport(' + cCp[0x0] + ',-1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_down</i><i\x20id=\x27mapSupVoteU\x27\x20onclick=\x27voteMapSupport(' + cCp[0x0] + ',1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_up</i><div\x20style=\x27font-size:\x2017px;\x27>If\x20you\x20would\x20like\x20to\x20support\x20the\x20creator\x20of\x20this\x20map\x20consider\x20gifting\x20them\x20some\x20KR.<div\x20class=\x27supportGift\x27\x20onclick=\x27openURL(&quot;/social.html?p=profile&q=' + cCp[0x1] + '&autoGift=1&quot;)\x27>GIFT\x20KR</div>';
      supportMapCreator['innerHTML'] = cAx, supportMapCreator['style']['display'] = 'inline-block', cCq = !0x0;
    }
  };
  for (var cMd = 0x0; cMd < windows['length']; ++cMd) windows[cMd]['html'] = '';
  var cMe = 0x0;

  function cMf(cAw, cAx) {
    null == cAw || null == cAw ? (tmpEl = document['getElementById']('vouchRes'), tmpEl && (tmpEl['innerHTML'] = cAx || 'Failed\x20to\x20Redeem')) : (cDa(cAw), updateWindow(null, !0x0));
  }

  function cMi(cAw) {
    windows[0x1d]['onData'](cAw);
  }

  function cMk(cAw) {
    windows[0x1d]['onReadData'](cAw);
  }

  function cMm(cAw) {
    windows[0x1d]['mailCount'](cAw);
  }
  Object['defineProperty'](window, 'updateWindow', {
    'writeable': !0x1,
    'value': function(cAw, cAx) {
      'block' == windowHolder['style']['display'] && (cMe == cAw && null != cAw ? showWindow(cAw, !0x0) : cAx && showWindow(cMe, !0x0));
    }
  }), Object['defineProperty'](window, 'showWindow', {
    'writeable': !0x1,
    'value': function(cAw, cAx) {
      !cBA['isNumber'](cAw) || 0x0 > cAw || (cBK['idleTimer'] = 0x0, function() {
        document['getElementById']('aContainer') || cTx(), windows['length'] > cIk && (windows['length'] = cIk), menuBtnSettings ? 'showWindow(1)' != menuBtnSettings['parentNode']['getAttribute']('onclick') && elm['parentNode']['setAttribute']('onclick', 'showWindow(1)') : cTx();
        var cAw = document['getElementById']('menuBtnHost');
        cAw ? 'openHostWindow()' != cAw['getAttribute']('onclick') && cAw['setAttribute']('onclick', 'openHostWindow()') : cTx(), aHolder['style']['visibility']['length'] && cTx();
      }(), cAx || cAw && ('block' != windowHolder['style']['display'] || cAw != cMe) ? (cBF['toggleMenu'](!0x0), menuWindow['innerHTML'] = windows[cAw - 0x1]['gen'] ? windows[cAw - 0x1]['gen']() : windows[cAw - 0x1]['html'], cMe = cAw, menuWindow['classList']['toggle']('stickyHeader', !!windows[cAw - 0x1]['sticky']), menuWindow['style']['overflowY'] = windows[cAw - 0x1]['hideScroll'] ? 'hidden' : 'auto', windowHeader['innerHTML'] = windows[cAw - 0x1]['header'], cBF['toggleWindow'](!0x0, cBK['gamepad']['_connected'])) : (cBF['toggleWindow'](!0x1, cBK['gamepad']['_connected']), cBK['inputChanger'] = null));
    }
  }), window['playTick'] = function() {
    cBD['play']('tick_0', 0.2);
  }, window['copyInviteLink'] = function() {
    cBJ['mode']['isRanked'] || (cBA['copyToClipboard']('https://' + location['host'] + '/?game=' + cAQ), inviteButton['innerText'] = cAI['t']('menu.btn.invite.clicked'), setTimeout(() => inviteButton['innerText'] = cAI['t']('menu.btn.invite'), 0x4e2));
  }, Object['defineProperty'](window, 'punishPlayer', {
    'writeable': !0x1,
    'value': function(cAw, cAx) {
      if (!(0x2 < cAx || 0x0 > cAx) || cBM && (cBM['developer'] || cBM['moderator']))
        if (0x4 < cAx) cBI['send']('pnh', cAx, null);
        else
          for (var cAy = 0x0; cAy < cBJ['players']['list']['length']; ++cAy)
            if ((cBN = cBJ['players']['list'][cAy])['id'] == cAw) {
              cBI['send']('pnh', cAx, cBN['id']);
              break;
            }
    }
  }), window['submitCrtrCod'] = function() {
    var cAw = document['getElementById']('crtrEmail'),
      cAx = document['getElementById']('crtrCode');
    cAw['value'] && cAx['value'] && (tmpEl = document['getElementById']('ctrtRes'), tmpEl && (tmpEl['innerHTML'] = 'Loading...'), cBI['send']('crtC', cAx['value'], cAw['value']));
  }, window['crtrCodRes'] = function(cAw, cAx) {
    cAw ? (tmpEl = document['getElementById']('ctrtRes'), tmpEl && (tmpEl['innerHTML'] = cAw)) : windows[0x1b]['getData'](cAx);
  }, Object['defineProperty'](window, 'redeemVoucher', {
    'writeable': !0x1,
    'value': function() {
      var cAw = document['getElementById']('redVouch');
      if (cAw && cAw['value']) {
        var cAx = cAw['value'];
        (cAw = document['getElementById']('vouchRes')) && (cAw['innerHTML'] = 'Loading...'), cBI['send']('vo', cAx);
      }
    }
  });
  var cMC, cMD, cME, cMF, cMG, cMH = spinWindow,
    cMI = cMH['getContext']('2d'),
    cMJ = 0.95,
    cMK = 0.6,
    cML = null,
    cMM = !0x1,
    cMN = 0x0,
    cMO = 0x0,
    cMP = 0x0,
    cMQ = 0x0,
    cMR = 0x0,
    cMS = 0x1e,
    cMT = 0x12c,
    cMU = !0x0,
    cMV = !0x1,
    cMW = 0x0,
    cMX = 0x0,
    cMY = new cBz['PerspectiveCamera'](0x2d, 0x1, 0.1, 0x64),
    cMZ = new cBz['WebGLRenderer']({
      'precision': 'mediump',
      'antialias': !0x1,
      'alpha': !0x0
    });

  function cN0(cAw, cAx) {
    if (cCi) {
      var cAy = cBJ['store']['skins'][cAx];
      cAy && cSW(null, '<span\x20style=\x27color:#fff\x27>' + cAI['t']('windows.store.unboxed', cCY && cBV ? cBA['scrambleS'](cAw) : cAw, '</span>') + '\x20<span\x20style=\x27color:' + cBJ['store']['rarities'][cAy['rarity']]['color'] + '\x27>' + cAy['name'] + '</span>', !0x0);
    }
  }

  function cN4(cAw, cAx, cAy, cAz, cAA) {
    if (cMM = !0x1, cAz);
    else {
      if (cML = cBJ['store']['skins'][cAx], spinItemName['innerHTML'] = cML['name'] + '<div\x20style=\x27color:rgba(255,255,255,0.5)\x27>by\x20' + (cML['creator'] || 'Krunker.io') + '</div>', cMO = 0x2 * Math['PI'] * (cAw / 0x64 + 0xd) + Math['PI'] / 0x2, cBM)
        if (cAA && (cBM['following'] = cAA), cBM['funds'] = cAy, cGI(), spinKR['innerHTML'] = cBM['funds'] + '\x20KR', cBM['skins']['some'](cAw => cAw['ind'] === cAx)) {
          var cAB = cBM['skins']['find'](cAw => cAw['ind'] === cAx);
          cAB && cAB['cnt']++;
        } else cBM['skins']['push']({
          'ind': cAx,
          'cnt': 0x1
        });
      spinRotation = 0x0, cMW = 0x0, spinCost['innerHTML'] = '', (cMC = new cBz['Scene']())['add'](new cBz['AmbientLight'](0x4f4f4f));
      var cAC = new cBz['DirectionalLight'](0xffffff, 0.5);
      cAC['position']['set'](0x3, 0x1, 0x0), cMC['add'](cAC);
      var cAD = cML['type'] ? cML : cBJ['store']['previews'][cML['weapon']] || {};
      (cMD = cBC['genObj3D'](0x0, 0x1 + (cAD['yOff'] || 0x0), cAD['xOff'] || 0x0))['rotateX'](-Math['PI'] / 0x7), cMD['rotateY'](Math['PI'] + 0.5 + (cAD['zRota'] || 0x0)), cMD['rotateZ'](-0.5), cMD['orgXR'] = cMD['rotation']['x'], cMD['orgYP'] = cMD['position']['y'], cBC['loadMesh']({
        'src': cBJ['store']['types'][cML['type'] || 0x0] + (cML['type'] ? cML['id'] : cML['weapon']) + (null == cML['mid'] ? '' : '_' + cML['mid']),
        'texSrc': null == cML['mid'] ? cML['type'] && 0x3 == cML['type'] ? 'melee/melee_' + (cML['id'] || 0x0) + (cML['tex'] ? '_' + cML['tex'] : '') : cML['type'] ? cML['tex'] ? (0x1 == cML['type'] ? 'hats/hat_' : 'body/body_') + cML['id'] + '_' + cML['tex'] : null : cML['tex'] ? cML['tex'] : 'weapons/skins/weapon_' + cML['weapon'] + '_' + cML['id'] : cML['midT'],
        'movT': cML['movT'],
        'pulsT': cML['pulsT'],
        'frames': cML['frames'],
        'frameT': cML['frameT'],
        'sameGlow': cML['sameGlow'],
        'glowText': cML['glow'] || cML['sameGlow'],
        'emissive': cML['glow'] || cML['sameGlow'] ? 0xffffff : null,
        'noGreen': !0x0,
        'uv2': !0x0,
        'fillScale': 0x3c,
        'centerZ': !0x0
      }, 0x0, 0x0, 0x0, (cML['type'] && 0x3 != cML['type'] ? Math['PI'] : Math['PI'] / 0x2) + (cAD['xRot'] || 0x0), 2.2 * (cAD['scl'] || 0x1), cMD), cMC['add'](cMD), cMY['lookAt'](cMC['position']);
    }
  }

  function cNf(cAw, cAx) {
    cAx && windows[0x3]['modsLoaded'](cAx['data'], cAx['index'], cAx['error']);
  }

  function cNi(cAw, cAx) {
    cAx && windows[0x9]['mapsLoaded'](cAx['data'], cAx['index'], cAx['error']);
  }

  function cNl(cAw, cAx) {
    cAx && windows[cAx['index']]['searchResp'](cAx['data']);
  }

  function cNo(cAw, cAx, cAy) {
    windows[0xc]['resp'](cAw, cAx, cAy);
  }

  function cNs(cAw, cAx) {
    windows[0x1a]['resp'](cAw, cAx);
  }
  cMZ['setPixelRatio'](0.6 * window['devicePixelRatio']), cMY['position']['y'] = 0xa, spinItemCanvas['appendChild'](cMZ['domElement']), Object['defineProperty'](window, 'prizeWheel', {
    'writeable': !0x1,
    'value': function(cAw, cAx) {
      (cME = cBJ['store']['wheels'][cAw])['openURL'] && window['openURL'](cAA['followURLS'][cBA['randInt'](0x0, cAA['followURLS']['length'] - 0x1)]), cMP = cAw, showWindow(0x0), cMN = 0x0, cMU = !cMM, cMV = !0x1, cMO = 0x0, cMX = 0x0, spinRotation = 0x0, cMQ = cMR = 0x0, cBF['toggleMenuHider'](!0x1), spinItem['style']['display'] = 'none', spinItemName['style']['display'] = 'none', respinUI['style']['display'] = 'none', spinUI['style']['display'] = 'block', cMY['position']['x'] = cMT, spinButton['style']['opacity'] = 0x1, spinText['style']['display'] = 'table-cell', spinHeader['innerHTML'] = 'SPIN', spinCost['innerHTML'] = '-' + cME['price'] + 'KR', spinRespin['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27margin-left:-10px;text-shadow:none;vertical-align:sub;font-size:35px;\x27>refresh</i>\x20' + cME['price'] + '\x20KR';
      for (var cAy = '<div\x20style=\x27font-size:50px;color:#fff\x27>' + cME['name']['toUpperCase']() + '</div>', cAz = 0x0; cAz < cBJ['store']['rarities']['length']; ++cAz)(cBN = cBJ['store']['rarities'][cAz])['noSpin'] || (cAy += '<div\x20style=\x27margin-top:5px;color:#fff\x27>' + cBN['name'] + '<span\x20style=\x27color:rgba(255,255,255,0.5)\x27>&emsp;' + cME['rarities'][cAz] + '%</span><div\x20class=\x27colCub\x27\x20style=\x27background-color:' + cBN['color'] + '\x27></div></div>');
      spinInfo['innerHTML'] = cAy, cBM && (spinKR['innerHTML'] = cBM['funds'] + '\x20KR'), cAx && spinButton['click']();
    }
  }), spinRespin['onclick'] = function() {
    cMV && prizeWheel(cMP, !0x0);
  }, spinRespinInfo['onclick'] = function() {
    cMV && openURL('/social.html?p=itemsales&i=' + cBJ['store']['skins']['findIndex'](cAw => cAw == cML));
  }, spinButton['onclick'] = function(cAw) {
    cAw['stopPropagation'](), cAw['preventDefault'](), cBK['idleTimer'] = 0x0, cBI && !cMM && cMU && cBM && cBM['funds'] >= cME['price'] ? (cMM = !0x0, cMU = !0x1, cBI['send']('spin', cMP), spinHeader['innerHTML'] = '', spinCost['innerHTML'] = cAI['t']('windows.store.purchasing'), cBD['play']('buy_1', 0.1)) : cMV && cAw['shiftKey'] && prizeWheel(cMP, !0x0);
  }, spinUI['onclick'] = function(cAw) {
    showWindow(0xe), cBF['toggleMenuHider'](!0x0), spinUI['style']['display'] = 'none', cBI && cBI['send']('unbx'), cMV && cAw['shiftKey'] && prizeWheel(cMP, !0x0);
  }, Object['defineProperty'](window, 'selectHostMap', {
    'writeable': !0x1,
    'value': function(cAw, cAx = null) {
      cMF = cAw, cMG = 'undefined' == cAx ? null : cAx, showWindow(0x8);
    }
  }), Object['defineProperty'](window, 'openHostWindow', {
    'writeable': !0x1,
    'value': function(cAw) {
      return cBJ['mode']['isRanked'] ? showWindow(0x0) : (cMF = null, cMG = null, void showWindow(0x8, cAw));
    }
  });
  var cNF, cNG = !('true' != getSavedVal('krk_record'));

  function cNH(cAw, cAx) {
    try {
      mapUpResp && !cAx && (mapUpResp['innerHTML'] = cAw);
    } catch (cNK) {}
    try {
      modUpResp && cAx && (modUpResp['innerHTML'] = cAw);
    } catch (cNL) {}
  }
  window['enableRecord'] = function(cAw) {
    cNG = cAw, saveVal('krk_record', cAw);
  }, enableRecord(cNG), window['createClip'] = function() {
    if (cNG && cBL && cBL['active'] && cNF['states']['length']) {
      for (var cAw = Object['assign']({}, cBJ['map']['maps'][cBJ['mapIndex']]), cAx = 0x0; cAx < cAw['objects']['length']; ++cAx) cAw['objects'][cAx]['i'] = cAA['prefabIDS']['indexOf'](cAw['objects'][cAx]['i']), cAw['objects'][cAx]['t'] = cAA['textureIDS']['indexOf'](cAw['objects'][cAx]['t']);
      var cAy = {
        'id': 'clip_' + Date['now'](),
        'mode': cBJ['modeIndex'],
        'map': cAw,
        'states': []
      };
      for (cAx = 0x0; cAx < cNF['states']['length']; ++cAx)
        if (cAx) {
          var cAz = [];
          cAz['push'](cNF['states'][cAx]['input']['data']), cNF['states'][cAx]['players']['length'] && cAz['push'](cNF['states'][cAx]['players']), cAy['states']['push'](cAz);
        } else cAy['states']['push'](cNF['states'][cAx]);
      downloadFile(cAy['id'] + '.txt', cAy);
    }
  }, window['downloadFile'] = function(cAw, cAx) {
    var cAy = document['createElement']('a');
    cAy['setAttribute']('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON['stringify'](cAx))), cAy['setAttribute']('download', cAw), cAy['style']['display'] = 'none', document['body']['appendChild'](cAy), cAy['click'](), document['body']['removeChild'](cAy);
  }, window['updateMapThumb'] = function() {
    var cAw = null;
    try {
      cAw = document['getElementById']('mapThumb')['files'][0x0];
    } catch (cNV) {}
    document['getElementById']('mapThumbName')['innerHTML'] = cAw ? cAw['name'] : cAI['t']('generic.failed');
  }, window['selectMapThumb'] = function() {
    document['getElementById']('mapThumb')['click']();
  }, window['uploadCustomMap'] = function() {
    mapUpResp && (mapUpResp['innerHTML'] = cAI['t']('generic.loading'));
    var cAw = null;
    try {
      cAw = document['getElementById']('mapThumb')['files'][0x0];
    } catch (cNX) {}
    if (cAw) {
      var cAx = new FileReader();
      cAx['readAsDataURL'](cAw), cAx['onload'] = function() {
        return 0x28 < cBA['thumbnailSize'](cAx['result']) ? void cNH(cAI['t']('thumbnail.upload.limit')) : void cBI['send']('uploadM', mapDataNew['value'], cAx['result']);
      }, cAx['onerror'] = function() {
        mapUpResp['innerHTML'] = cAI['t']('thumbnail.upload.error');
      };
    } else cBI['send']('uploadM', mapDataNew['value']);
  }, window['updateModThumb'] = function() {
    var cAw = null;
    try {
      cAw = document['getElementById']('modThumb')['files'][0x0];
    } catch (cO0) {}
    document['getElementById']('modThumbName')['innerHTML'] = cAw ? cAw['name'] : cAI['t']('generic.failed');
  }, window['selectModThumb'] = function() {
    document['getElementById']('modThumb')['click']();
  }, window['uploadCustomMod'] = function() {
    modUpResp && (modUpResp['innerHTML'] = cAI['t']('generic.loading'));
    var cAw = null;
    try {
      cAw = document['getElementById']('modThumb')['files'][0x0];
    } catch (cO2) {}
    if (cAw) {
      var cAx = new FileReader();
      cAx['readAsDataURL'](cAw), cAx['onload'] = function() {
        return 0x28 < cBA['thumbnailSize'](cAx['result']) ? void cNH(cAI['t']('thumbnail.upload.limit'), 0x1) : void cBI['send']('uploadMo', pubModName['value'], pubModURL['value'], cAx['result']);
      }, cAx['onerror'] = function() {
        modUpResp['innerHTML'] = cAI['t']('thumbnail.upload.error');
      };
    } else cBI['send']('uploadMo', pubModName['value'], pubModURL['value']);
  }, zip['workerScriptsPath'] = './libs/';
  var cO4 = new FileReader();

  function cO5(cAw) {
    this['imgAsDataURL'] = '', this['process'] = function(cAx) {
      if (this['imgAsDataURL'] = URL['createObjectURL'](cAx), this['imgAsDataURL'] && cAw) {
        try {
          var cAy = new Image();
          cAy['onload'] = function() {
            cBC['updateTexture'](cAw['replace']('textures/', '')['replace']('.png', ''), this);
          }, cAy['src'] = this['imgAsDataURL'];
        } catch (cO9) {}
        cOs['close']();
      }
    };
  }

  function cOa(cAw) {
    this['filename'] = cAw;
    var cAx = this;
    this['process'] = function(cAw) {
      var cAy = URL['createObjectURL'](cAw);
      if (cAy) {
        try {
          var cAz = cAx['filename']['split']('/')[0x1];
          if (0x0 <= cAz['indexOf']('ambient'))
            for (var cAA = 0x1; 0x4 > cAA; ++cAA) cBD['stop']('ambient_' + cAA);
          cBD['sounds'][cAz] = new Howl({
            'src': [cAy],
            'format': 'mp3'
          }), cBD['sounds'][cAz + '3d'] = new Howl({
            'src': [cAy],
            'format': 'mp3'
          }), 'ambient_1' == cAz && cBD['play']('ambient_1', 0.12, !0x0, 0x1);
        } catch (cOh) {}
        cOs['close']();
      }
    };
  }

  function cOi(cAw) {
    this['process'] = function(cAx) {
      if (cAw) {
        try {
          const cAy = new FileReader();
          cAy['addEventListener']('loadend', cAx => {
            const cAy = cAx['srcElement']['result'];
            cBC['updateMesh'](cAw['replace']('models/', '')['replace']('.obj', ''), cAy);
          }), cAy['readAsText'](cAx);
        } catch (cOo) {}
        cOs['close']();
      }
    };
  }
  cO4['onload'] = function(cAw) {
    var cAx = cAw['target']['result'];
    loadModPack(cAx);
  };
  var cOr, cOs = new function() {
    this['init'] = function(cAw, cAx) {
      this['numFiles'] = cAx, this['progress'] = 0x0, this['reader'] = cAw;
    }, this['close'] = function() {
      this['reader'] && (this['progress']++, document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAI['t']('mod.extracting', this['progress'], this['numFiles'])), this['numFiles'] === this['progress'] && (spriteIndex = 0x0, document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAI['t']('generic.success')), this['reader']['close'](), this['reader'] = void 0x0));
    };
  }();

  function cOv(cAw, cAx, cAy, cAz) {
    cCb = cAx, window['spectating'] = cAy, !cCb && cAy && (cCb = 0x1), cQr(cAw), cBF['toggleMenu'](!0x1), cSj['length'] = 0x0, cSQ['length'] = 0x0, cBF['toggleGameUI'](!0x0), cBG['reset'](), cBK['reset'](), cP0(!0x1), cBJ['players']['forcePos'](), cBJ['players']['resetAim'](), cC3['length'] = 0x0, cC4['length'] = 0x0, cC5 = null, cCa = 0x1e, window['loading'] = !0x1, cBK['idleTimer'] = 0x0, teamName['innerHTML'] = '', hiddenMsg['style']['display'] = 'none', cTt(), cBQ = null, cBF['toggleControlUI'](cBK['enabled']), cBJ['updateUI'](), challIcon['src'] = cAz ? './img/skull_0.png' : './img/hp_0.png';
  }

  function cOA(cAw, cAx, cAy, cAz, cAA, cAB, cAC, cAD, cAI, cAJ) {
    if (cAB['isFromQueue'] && window['history']['replaceState']({}, 'Krunker', '/'), cCk = !0x1, cAD ? cAD['data'] && cBJ['customMap'](cAD['data'], cAD['id'], cAD['creator'], null, !0x0) : cBJ['map']['setMaps'](), cBJ['isCustom'] = !!cAA, cBY = cAA, cBX = cAA && cAA == cBI['socketId'], mapVote['innerHTML'] = '', mapVoteVal = 0x0, cCp['length'] = 0x0, cCq = !0x1, cAA && cAD && null != cAD['id'] && (cCp = [cAD['id'], cAD['creator']], mapVote['innerHTML'] = '<div\x20class=\x27voteHint\x27>Rate</div><i\x20id=\x27mapVoteD\x27\x20onclick=\x27voteMap(' + cAD['id'] + ',-1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_down</i><i\x20id=\x27mapVoteU\x27\x20onclick=\x27voteMap(' + cAD['id'] + ',1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_up</i>'), cBJ['applyConfig'](cAB, cAD && cAD['featured']), cBJ['init'](cAw, cAx, cAJ), cBJ['setObjective'](cAz), loadingBg['style']['display'] = 'none', inviteButton['classList']['toggle']('buttonD', !!cBJ['mode']['isRanked']), menuBtnHost['classList']['toggle']('buttonD', !!cBJ['mode']['isRanked']), cBJ['mode']['isRanked'] && (window['onbeforeunload'] = function() {
        return !0x0;
      }), specContr['children'][0x2]['style']['display'] = cBJ['mode']['objective'] && Object['keys'](cBJ['map']['manager']['spectateCams'])['length'] ? '' : 'none', (cAI = cAI || {})['dest'])
      for (var cAN = 0x0; cAN < cAI['dest']['length']; ++cAN) cBJ['destroyObj'](cAI['dest'][cAN]);
    if (cAI['flg'])
      for (cAN = 0x0; cAN < cAI['flg']['length']; ++cAN) cBJ['updateFlag'](...cAI['flg'][cAN]);
    if (cAI['pkups'])
      for (cAN = 0x0; cAN < cAI['pkups']['length']; ++cAN) cBJ['updatePickup'](...cAI['pkups'][cAN]);
    if (cAI['gates'])
      for (cAN = 0x0; cAN < cAI['gates']['length']; ++cAN) cBJ['updateGate'](...cAI['gates'][cAN]);
    if (cAI['banks'])
      for (cAN = 0x0; cAN < cAI['banks']['length']; ++cAN) cBJ['updateBank'](...cAI['banks'][cAN]);
    if (cAI['zone'] && cBJ['updateZone'](cAI['zone']), null != cAI['lck'] && cBJ['lockMove'](cAI['lck']), specNameTm0['innerHTML'] = teamNm1['innerHTML'] = 0x0 < cBJ['config']['nameTeam1']['replace'](/\s/g, '')['length'] ? cBJ['config']['nameTeam1'] : 'Team\x201', specNameTm1['innerHTML'] = teamNm2['innerHTML'] = 0x0 < cBJ['config']['nameTeam1']['replace'](/\s/g, '')['length'] ? cBJ['config']['nameTeam2'] : 'Team\x202', teamScores['style']['display'] = 'none', spec0['style']['display'] = 'none', spec1['style']['display'] = 'none', cBJ['mode']['teams'] && cAy) {
      teamScores['style']['display'] = 'inline-block', spec0['style']['display'] = 'inline-block', spec1['style']['display'] = 'inline-block';
      var cAO = '';
      for (cAN = 0x0; cAN < cAy['length']; ++cAN) cAO += '<div\x20class=\x27tScore\x27><div\x20id=\x27tScoreC' + cAy[cAN][0x0] + '\x27\x20class=\x27tScoreC\x27></div><span\x20class=\x27tScoreT\x27\x20id=\x27tScoreV' + cAy[cAN][0x0] + '\x27>' + cAy[cAN][0x1] + '</span></div>', document['getElementById']('specScoreTm' + (cAy[cAN][0x0] - 0x1))['innerHTML'] = cAy[cAN][0x1];
      teamScores['innerHTML'] = cAO;
    }
    cAC && '' != cAC && loadModPack(cAC, !0x0);
    var cAP = 0x0,
      cAQ = 0x0;
    for (cAN = 0x0; cAN < cBJ['map']['manager']['objects']['length']; ++cAN) cBJ['map']['manager']['objects'][cAN]['score'] && (cAP++, cAQ += cBJ['map']['manager']['objects'][cAN]['scoreP']);
    cAP ? (scoreZoneCount['style']['display'] = 'inline-block', scoreZoneCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px\x27>flag</i>\x20' + cAQ) : scoreZoneCount['style']['display'] = 'none', cBJ['config']['lives'] || cBJ['mode']['lives'] ? (livesCount['style']['display'] = 'inline-block', livesCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px\x27>favorite</i>\x20<span\x20id=\x27livesDisp\x27\x20style=\x27color:rgba(255,255,255,0.6)\x27>' + (cBJ['config']['lives'] || cBJ['mode']['lives'] || 0x0) + '</span>') : livesCount['style']['display'] = 'none', cBF['setShowSpect'](cBJ['config']['allowSpect']), cBF['setShowSelTeam'](cBJ['config']['selTeam']), cC2 = null, cBK['reset']();
    var cAR = cBJ['map']['maps'][cAw],
      cAT = cAR['camPos'] ? cAR['camPos'] : [0x0, 0x0, 0x0];
    cBK['frQqmsYwdTIjfJYpPkIYuUMQMPIzuRYR'](cAT[0x0] || 0x0, cAT[0x1] || 0x0, cAT[0x2] || 0x0), cBK['cWxXNQhHAKcpjdUGondTNGzFskdKFMog'](0x0, 0x0, 0x0), cBC['clearSprays'](), cBC['scene']['add'](cBK['object']), cBL = null, cBB['showObjective'] = !!cBJ['mode']['objective'] && 0x0 < cBJ['map']['manager']['objectives']['length'], killStreakHolder['innerHTML'] = '', bloodDisplay['style']['display'] = 'none', killsVal['innerHTML'] = 0x0, deathsVal['innerHTML'] = 0x0, cCo = 0x0, streakVal['innerHTML'] = cCo, cC8 = 0x0, cCr['length'] = 0x0, cCy = !0x1, cCs = !0x1, voteToKick['style']['display'] = 'none', cDt = !0x1, cDs = null, window['noMouseInp'] = !0x1, cDR(), cBK['masterLock'] = !0x1, cBK['camOffset'] = cBJ['map']['config'] && (cBJ['map']['config']['camOffX'] || cBJ['map']['config']['camOffY'] || cBJ['map']['config']['camOffZ']), cBK['camRot'] = cBJ['map']['config'] && cBJ['map']['config']['camRot'], cBK['UsePointerLock'] = !(!cBK['camRot'] && cBK['camOffset'] || cBF['isMobile']), cTt();
  }

  function cOR(cAw) {
    cAQ = cAw, cAP['fetchGameInfo'](cAw)['then'](cAw => {
      var [cAx, cAy, cAz, cAB, cAC] = cAw;
      cAy, menuRegionLabel['innerText'] = cAA['regionNames'][cAy];
    })['catch'](cAw => console['error']('Failed\x20to\x20fetch\x20game\x20info', cAw));
  }

  function cP0(cAw) {
    window['locked'] = cAw, blocker['style']['display'] = cAw ? 'block' : 'none';
  }

  function cP2(cAw, cAx, cAy, cAz) {
    window['onbeforeunload'] = null, cH0 = null, cTt(), victoryText['innerHTML'] = -0x1 == cAx ? 'DRAW' : cAx ? 'VICTORY' : 'DEFEAT', victorySub['src'] = './img/' + (-0x1 == cAx ? 'draw' : cAx ? 'sub' : 'defeat') + '.png', cBF['toggleWindow'](!0x1, cBK['gamepad']['_connected']), cEH['endMessage']['val']['length'] && !cCk && (cBI['send']('ct', cEH['endMessage']['val']), cCk = !0x0), cBL && cBL['active'] || window['spectating'] ? (cBF['showEndScreen'](), cC2 = cAA['endAnim'], setTimeout(function() {
      cBI['connected'] && (cBK['disable'](), cP7(cAy));
    }, cAA['endAnim'])) : cAw && (cBK['disable'](), cBF['showEndScreen'](), cP7(cAy)), (cHn = cAz) && cHo(!0x0);
  }

  function cP7(cAw) {
    if (cAw && cAw['ed']['length']) {
      var cAx = '',
        cAy = cAw['mts'],
        cAz = cAw['tms'];
      if (endTable['style']['top'] = cBJ['mode']['isRanked'] ? '205px' : '310px', matchVoteHolder['style']['display'] = 'inline-block', matchVoteHolder['classList']['toggle']('isRanked', !!cBJ['mode']['isRanked']), cBJ['mode']['isRanked']) matchVoteHolder['innerHTML'] += '<div\x20class=\x27button\x20small\x20buttonR\x27\x20style=\x27margin-right:10px\x27\x20onclick=\x27location.reload()\x27>Leave\x20Game</div>', matchVoteHolder['innerHTML'] += '<div\x20class=\x27button\x20small\x27\x20onclick=\x27location\x20=\x20\x22/?autoQueue=true\x22\x27>Requeue</div>', endTable['style']['maxHeight'] = 'calc(100%\x20-\x20450px)';
      else if (0x1 < cAy['length']) {
        for (var cAB = 0x0; cAB < cAy['length']; ++cAB) {
          var cAC = cAy[cAB]['split'](','),
            cAD = cBJ['map']['modes'][parseInt(cAC[0x0])],
            cAI = cBJ['map']['maps'][parseInt(cAC[0x1])];
          cAD && cAI && (cAx += '<label\x20class=\x27matchVote\x27' + (0x0 == cAB ? '\x20style=\x22margin-left:\x208px;\x22\x20' : '') + 'onclick=\x27voteOnMatch(\x22' + cAy[cAB] + '\x22)\x27><img\x20src=\x27/img/' + (0x0 == parseInt(cAC[0x1]) && 'Burg' != cAI['name'] ? 'noimg' : 'maps/map_' + parseInt(cAC[0x1])) + '.png\x27\x20class=\x27matchVoteThumb\x27><div\x20class=\x27matchVoteMap\x27>' + cAI['name'] + '</div><div\x20class=\x27matchVoteMode\x27>' + cAD['id']['toUpperCase']() + '</div><div\x20class=\x27matchVoteTotal\x27\x20id=\x27voteT' + cAy[cAB] + '\x27>0</div></label>');
        }
        matchVoteHolder['innerHTML'] = cAx, cAx['length'] && (endTable['style']['maxHeight'] = 'calc(100%\x20-\x20490px)'), cAw['vo'] && updMatchVote(cAw['vo'], cAw['mts']);
      } else matchVoteHolder['style']['display'] = 'none', endTable['style']['top'] = '205px';
      cAz ? (teamTotal0['innerHTML'] = '<span\x20class=\x22teamTotalN0\x22>' + teamNm1['innerHTML'] + '</span><span\x20class=\x22teamTotalScore\x22>' + (cAz[0x0][0x1] || 0x0) + '</span>', teamTotal1['innerHTML'] = '<span\x20class=\x22teamTotalScore\x22>' + (cAz[0x1][0x1] || 0x0) + '</span><span\x20class=\x22teamTotalN1\x22>' + teamNm2['innerHTML'] + '</span>', teamTotal0['style']['display'] = 'inline-block', teamTotal1['style']['display'] = 'inline-block') : (teamTotal0['style']['display'] = 'none', teamTotal1['style']['display'] = 'none'), endTable['style']['display'] = 'inline-block', cAx = '<tr><th>Rank</th>';
      var cAJ = cBJ['mode']['endStats'] || cAA['endStats'],
        cAN = cAJ['length'];
      for (cAB = 0x1; cAB < cAN; ++cAB) cAx += '<th>' + cBA['capFirst'](cAJ[cAB]) + '</th>';
      cAx += '<th></th></tr>';
      var cAO = 0x1,
        cAP = cBL && cBL['team'] ? cBL['team'] : window['spectating'] ? 0x1 : 0x0;
      for (cAB = 0x0; cAB < cAw['ed']['length'];) {
        cBN = cBJ['players']['findBySid'](cAw['ed'][cAB]), cAx += '<tr\x20style=\x27' + (cAB + cAN >= cAw['ed']['length'] ? 'border-bottom:none' : '') + '\x27><td\x20style=\x27color:#fff\x27>' + cAO + '.</td>';
        for (var cAQ = 0x1; cAQ < cAN; ++cAQ) cAx += '<td>' + (0x1 == cAQ ? '<a\x20class=\x27endTableN\x27\x20href=\x27' + cBA['toSocial'](cAw['ed'][cAB + cAQ] || '') + '\x27\x20target=\x27_blank\x27\x20style=\x27color:' + (cBL && cBN && cBL['sid'] == cBN['sid'] ? '#fff\x27' : cBN && cAP == cBN['team'] ? 'rgba(255,255,255,0.6)\x27' : cBy['teams'][0x1] + '\x27') + '>' : '') + (cCY && 0x1 == cAQ && cBV ? cBA['scrambleS'](cAw['ed'][cAB + cAQ] || 0x0) : cAw['ed'][cAB + cAQ] || 0x0) + (0x1 == cAQ && cBN && cBN['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAA['verClans']['indexOf'](cBN['clan']) ? cBy['verified']['clan'] : '#fff') + '\x27>\x20[' + cBN['clan'] + ']<span>' : '') + (0x1 == cAQ ? '</a>' : '') + '</td>';
        cAx += '<td>' + (cBM && cBN && cBN['level'] && cBN != cBL ? '<div\x20class=\x27reportBut\x27\x20onclick=\x27reportPlayer(`' + cBN['name'] + '`,this)\x27>REPORT</div>' : '') + '</td></tr>', cAO++, cAB += cAN;
      }
      endTable['innerHTML'] = cAx;
    } else endTable['style']['display'] = 'none';
  }

  function cPl(cAw, cAx, cAy, cAz) {
    cAy ? (cAz == cBL['name'] && (cCs = !0x0), cCy = cAw, voteKickInfo['innerHTML'] = cAz + '\x20voted\x20to\x20kick\x20' + cAw, voteKickName['innerHTML'] = 'Kick\x20' + cAw, voteKickNum['innerHTML'] = 'Votes:\x20' + cAx + '/' + cAA['voteKickReq'], voteToKick['style']['display'] = 'block', voteKickName['style']['display'] = cAz == cBL['name'] ? 'none' : 'block', voteKickKeys['style']['display'] = cAz == cBL['name'] ? 'none' : 'block') : cAw ? (cAw == cBL['name'] ? (cSW(null, '<span\x20style=\x27color:#fc03ec\x27>Vote\x20Submitted\x20-\x20' + cAx + '/' + cAA['voteKickReq'] + '</span>', !0x0), voteKickName['style']['display'] = 'none', voteKickKeys['style']['display'] = 'none') : voteToKick['style']['display'] = 'block', voteKickNum['innerHTML'] = 'Votes:\x20' + cAx + '/' + cAA['voteKickReq']) : (cCy = !0x1, voteToKick['style']['display'] = 'none');
  }

  function cPq(cAw, cAx, cAy) {
    cBJ['playerSound'](cAw, cAx, cAy);
  }

  function cPu(cAw, cAx, cAy, cAz, cAA, cAB = !0x0, cAC) {
    (cBN = cBJ['players']['findBySid'](cAw)) && (cBN == cBL && cBD['play']('pick_0', 0.2), cBN['updateLoadout'](cBJ, cAy, !0x0, ...cAx)), cAB && cBJ['updatePickup'](cAz, cAA, null, cAC);
  }
  window['loadUserMod'] = function(cAw, cAx, cAy) {
    showWindow(0x12), document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAI['t']('generic.loading')), loadModPack(cAx, !0x0, cAw, cAy);
  }, window['loadModURL'] = function() {
    modURL['value'] && loadModPack(modURL['value'], !0x0);
  }, window['loadModPack'] = function(cAw, cAx, cAy, cAz) {
    if (cBA['isDropbox'](cAw) && !(-0x1 < cAw['indexOf']('&')) || !cAx) {
      if (!cC6) return void(document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAI['t']('mod.disabled')));
      modVote['innerHTML'] = '', cAx && cCA(cAw), null != cAy && null != cAz && (cOr = 0x0, modVote['innerHTML'] = '<span\x20id=\x27modVoteHold\x27><div\x20class=\x27voteHint\x20vHR\x27>Rate</div><i\x20id=\x27modVoteD\x27\x20onclick=\x27voteMod(' + cAz + ',-1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_down</i><i\x20id=\x27modVoteU\x27\x20onclick=\x27voteMod(' + cAz + ',1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_up</i></br></span>' + cAy + '\x20Mod');
      try {
        cAw = cAw['replace']('dropbox.com', 'dl.dropboxusercontent.com')['replace'](/&/g, 'nope');
        var cAA = '',
          cAB = cAx ? new zip['HttpReader'](cAw) : new zip['Data64URIReader'](cAw);
        zip['createReader'](cAB, function(cAw) {
          cAw['getEntries'](function(cAx) {
            if (cAx['length']) {
              cOs['init'](cAw, cAx['length']);
              for (var cAy, cAz = 0x0; cAz < cAx['length']; cAz++)(cAy = cAx[cAz])['directory'] ? cOs['close']() : 'textures' == (cAA = cAy['filename']['split']('/')[0x0]) ? cAy['getData'](new zip['BlobWriter']('image/png'), new cO5(cAy['filename'])['process'], function() {}) : 'sound' == cAA ? cAy['getData'](new zip['BlobWriter']('audio/mp3'), new cOa(cAy['filename']['replace']('.mp3', ''))['process'], function() {}) : 'models' == cAA && cAy['getData'](new zip['BlobWriter']('application/x-tgif'), new cOi(cAy['filename'])['process'], function() {});
            }
          });
        }, function() {
          document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAI['t']('mod.error'));
        });
      } catch (cPP) {
        document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAI['t']('mod.error'));
      }
    }
  }, cEH['autoLoadLast']['val'] && cCz['length'] && loadModPack(cCz, !0x0), window['loadMod'] = function() {
    if (modInput['files'] && modInput['files'][0x0]) {
      var cAw = modInput['files'][0x0];
      'zip' == cAw['name']['split']('.')['pop']()['toLowerCase']() ? (document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAI['t']('mod.loading')), cO4['readAsDataURL'](cAw)) : document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cAI['t']('mod.invalid'));
    }
  }, window['joinGame'] = function() {
    let cAw = gameURL['value'] || '';
    cAw['match'](/^(https?:\/\/)?(www\.)?(.+)krunker\.io(|\/|\/\?game=.+)$/) ? location = cAw : cAw['match'](/^([A-Z]+):(\w+)$/) ? window['switchServer'](cAw) : navigator['clipboard']['readText']()['then'](function(cAw) {
      cAw['match'](/^(https?:\/\/)?(www\.)?(.+)krunker\.io(|\/|\/\?game=.+)$/) && (location = cAw);
    })['catch'](() => {
      console['log']('Failed\x20to\x20open\x20clipboard\x20link');
    });
  }, window['toggleTeam'] = function(cAw) {
    cHz = cAw ? 0x2 : 0x1, teamNm1['style']['color'] = cAw ? 'rgba(255,255,255,0.5)' : '#fff', teamNm2['style']['color'] = cAw ? '#fff' : 'rgba(255,255,255,0.5)';
  }, Object['defineProperty'](window, 'updMatchVote', {
    'writeable': !0x1,
    'value': function(cAw, cAx) {
      for (var cAy = 0x0; cAy < cAx['length']; ++cAy)
        if (cBN = document['getElementById']('voteT' + cAx[cAy])) {
          var cAz = 0x0;
          if (cAw)
            for (var cAA in cAw) cAw['hasOwnProperty'](cAA) && cAx[cAy] == cAw[cAA] && cAz++;
          cBN['innerHTML'] = cAz;
        }
    }
  }), Object['defineProperty'](window, 'voteOnMatch', {
    'writeable': !0x1,
    'value': function(cAw) {
      document['querySelectorAll']('div[id^=\x22voteT\x22')['forEach'](cAx => {
        cAx['style']['color'] = cAx['id'] == 'voteT' + cAw ? cAx['style']['color'] == cBy['matchVote']['selected'] ? cBy['matchVote']['notSelected'] : cBy['matchVote']['selected'] : cBy['matchVote']['notSelected'];
      }), cBI['send']('maVote', cAw);
    }
  }), window['voteMod'] = function(cAw, cAx) {
    if (cBM) {
      document['getElementById']('modVoteU'), document['getElementById']('modVoteD');
      var cAy = 0x0;
      0x1 == cAx ? (cAy = 0x1, 0x1 == cOr && (cAy = 0x0)) : -0x1 == cAx && (cAy = -0x1, -0x1 == cOr && (cAy = 0x0)), cOr = cAy, cBI['send']('vote', cBM['id'], loginToken, cAw, cAy, 0x1);
    }
    var cAz = document['getElementById']('modVoteHold');
    cAz && (cAz['innerHTML'] = '');
  }, window['voteMap'] = function(cAw, cAx) {
    if (cBM) {
      document['getElementById']('mapVoteU'), document['getElementById']('mapVoteD');
      var cAy = 0x0;
      0x1 == cAx ? (cAy = 0x1, 0x1 == mapVoteVal && (cAy = 0x0)) : -0x1 == cAx && (cAy = -0x1, -0x1 == mapVoteVal && (cAy = 0x0)), mapVoteVal = cAy, cBI['send']('vote', cBM['id'], loginToken, cAw, cAy);
    }
    mapVote['innerHTML'] = '';
  }, window['voteMapSupport'] = function(cAw, cAx) {
    if (cBM) {
      document['getElementById']('mapSupVoteU'), document['getElementById']('mapSupVoteD');
      var cAy = 0x0;
      0x1 == cAx ? (cAy = 0x1, 0x1 == mapVoteVal && (cAy = 0x0)) : -0x1 == cAx && (cAy = -0x1, -0x1 == mapVoteVal && (cAy = 0x0)), mapVoteVal = cAy, cBI['send']('vote', cBM['id'], loginToken, cAw, cAy);
    }
  }, Object['defineProperty'](window, 'followPlayer', {
    'writeable': !0x1,
    'value': function(cAw, cAx) {
      cAx && (cAx['style']['visibility'] = 'hidden'), cBI['send']('fo', cAw);
    }
  }), Object['defineProperty'](window, 'reportPlayer', {
    'writeable': !0x1,
    'value': function(cAw) {
      openURL('/social.html?p=profile&q=' + cAw + '&autoReport=1');
    }
  }), Object['defineProperty'](window, 'kickVote', {
    'writeable': !0x1,
    'value': function(cAw) {
      for (var cAx = 0x0; cAx < cBJ['players']['list']['length']; ++cAx)
        if ((cBN = cBJ['players']['list'][cAx])['id'] == cAw) {
          cBI['send']('v2k', cBN['name']), cCr['push'](cBN['name']), updateWindow(0x17);
          break;
        }
    }
  });
  var cQg = getSavedVal('sprayindex') || 0x0;

  function cQh(cAw, cAx, cAy, cAz, cAA, cAB, cAC) {
    cBC['addSpray'](cAw, cAx, cAy, cAz, cAA, cAB, cAC, cBJ['sprays'][cAx]['opacity']);
  }

  function cQp(cAw) {
    0x0 == cAw ? cBD['play']('siren_0') : 0x1 == cAw && (cBD['play']('nuke_0'), imgFlash['style']['display'] = 'block', imgFlash['style']['opacity'] = 0x1, imgFlash['style']['backgroundImage'] = '', cBC['shake'](0x1));
  }

  function cQr(cAw, cAx) {
    0x1 == cAx ? endTimer['innerHTML'] = cAI['t']('timer.end', cAw) : 0x2 == cAx ? endTimer['innerHTML'] = cAI['t']('generic.matchover') : 0x3 == cAx ? endTimer['innerHTML'] = cAI['t']('generic.matchaband') : (timerVal['innerHTML'] = cAw, specTimer['innerHTML'] = cAw, timerDisplay['style']['display'] = '0:00' == cAw ? 'none' : 'inline-block');
  }

  function cQu(cAw) {
    for (var cAx, cAy = 0x0; cAy < cAw['length'];) {
      if (cAx = cAw[cAy] == cBI['socketId'], (cBN = cBJ['players']['add'](cAw[cAy], cAw[cAy + 0x1], cAw[cAy + 0x2], cAw[cAy + 0x3], cAw[cAy + 0x4], cAw[cAy + 0x5], cAw[cAy + 0x6], cAw[cAy + 0xc], cAw[cAy + 0xd], cAw[cAy + 0xe], cAw[cAy + 0x13], cAw[cAy + 0x14], cAw[cAy + 0x16], cAw[cAy + 0xf], cAw[cAy + 0x15], cAw[cAy + 0x9], cAx, cAw[cAy + 0x10], cAw[cAy + 0x11]))['health'] = null == cAw[cAy + 0x7] ? cBN['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] : cAw[cAy + 0x7], cBN['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] = cAw[cAy + 0x8], cBN['hpChase'] = cBN['health'] / cBN['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'], cBN['team'] = cAw[cAy + 0x9], cBN['level'] = cAw[cAy + 0xa], cBN['clan'] = cAw[cAy + 0xb], cBN['xDire'] = cAw[cAy + 0x12], cAx) {
        if (cBL = cBN, cBJ['mode']['showTeam'] && (teamName['innerHTML'] = cBL['team']), cBL['team']) {
          var cAz = document['getElementById']('tScoreC' + cBL['team']);
          cAz && (cAz['className'] = 'tScoreC\x20you');
        }
        cDS(), botRightHider['style']['display'] = 'prop' == cBL['team'] ? 'none' : 'block', propInstruct['style']['display'] = 'prop' == cBL['team'] ? 'block' : 'none', cBK['object']['rotation']['y'] = cBL['xDire'], cBK['xDr'] = cBK['object']['rotation']['y'] % Math['PI2'];
      } else cBN['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']['visible'] = !0x1;
      cSz(cBN['health'], cBN['sid'], null, null), cAy += 0x17;
    }
    cQz();
  }

  function cQz() {
    if (window['spectating']) {
      for (var cAw = ['', ''], cAx = 0x0; cAx < cBJ['players']['list']['length']; ++cAx)
        if (!(cBN = cBJ['players']['list'][cAx])['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW']) {
          var cAy = cBJ['mode']['teams'] ? cBN['team'] - 0x1 : 0x1 & cAx;
          cAw[cAy] += '<div\x20class=\x27specPlayerHolder' + cAy + '\x27><img\x20src=\x27https://assets.krunker.io/textures/classes/icon_' + (cBN['classIndex'] || 0x0) + '.png\x27\x20class=\x27specPlayerIcon' + (cBN['active'] ? '' : '\x20silhouette') + '\x27><div\x20class=\x27specPlayerName\x27>' + cBN['name'] + '</div></div>';
        } document['getElementById']('specTeam0')['innerHTML'] = cAw[0x0], document['getElementById']('specTeam1')['innerHTML'] = cAw[0x1];
    }
  }

  function cQD(cAw) {
    if (cBI['send']('p'), cBL) {
      if (cBL['x'] = cAw[0x1], cBL['y'] = cAw[0x2], cBL['z'] = cAw[0x3], cBL['xVel'] = cAw[0x4], cBL['yVel'] = cAw[0x5], cBL['zVel'] = cAw[0x6], cBL['onGround'] = cAw[0x7], cBL['ZkZQqRPzcQDgGFDFbfLXKBwAgmjlNSEB'] = cAw[0x8], cBL['onLadder'] = cAw[0x9], cBL['aimVal'] = cAw[0xa], cBL['crouchVal'] = cAw[0xb], cBJ['players']['swapWeapon'](cBL, 0x0, !0x1, cAw[0xc], void 0x0, !0x0), cBL['slideTimer'] = cAw[0xd], cBL['canSlide'] = cAw[0xe], cBL['onTerrain'] = cAw[0xf], cAw[0x10]) {
        var cAx = cCe != cAw[0x10];
        cCe = cAw[0x10], cAx && function() {
          var cAw = cBy['ping']['low'];
          0x96 <= cCe ? cAw = cBy['ping']['high'] : 0x32 <= cCe && (cAw = cBy['ping']['medium']);
          var cAx = -0x1 == cCe ? '-' : cCe;
          pingDisplay['innerHTML'] = cAx + '<i\x20class=\x27material-icons\x27\x20style=\x27color:' + cAw + '\x27>signal_cellular_alt</i>', menuPingDisplay['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:' + cAw + '\x27>signal_cellular_alt</i>\x20' + cAx;
        }();
      }
      for (var cAy = 0x0; cAy < cBK['tmpInpts']['length'];) cBK['tmpInpts'][cAy][0x0] <= cAw[0x0] ? cBK['tmpInpts']['splice'](cAy, 0x1) : (cBL['BwVXohDwkFSKbGKMAdgiBzDuIyQDOdiE'](cBK['tmpInpts'][cAy], cBJ, !0x0), cAy++);
    }
  }

  function cQJ() {
    cBI['send']('po');
  }

  function cQK(cAw) {
    cAw;
  }

  function cQM() {
    if (!cBJ['singlePlayer'] && (cBL && cBL['active'] || spectating))
      for (var cAw = 0x0; cAw < cBJ['players']['list']['length']; ++cAw)(cBN = cBJ['players']['list'][cAw])['active'] && cBN['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] && cBN != cBL && (cBN['BuLLwMAKfmOLWuBvUnENglYISdUKniUf'] = !0x0, !spectating && !(cCb && cCb == cBN['team']) && !(cCb && cCb != cBN['team'] && cBJ['mode']['teamSee'] && cBJ['mode']['teamSee'][0x0] == cCb && cBJ['mode']['teamSee'][0x1] == cBN['team']) && (cBJ['config']['nameTags'] || cBJ['mode']['hideNames'] || null != cBJ['RUfCftzxfJbJZoCyHXryEYwgWPZrZNCy'](cBL, cBN['x'], cBN['y'], cBN['z'])) && (cBN['BuLLwMAKfmOLWuBvUnENglYISdUKniUf'] = !0x1), (0x1 == cEH['hideNames']['val'] && cCb && cCb != cBN['team'] || 0x2 == cEH['hideNames']['val'] && cCb && cCb == cBN['team'] || 0x3 == cEH['hideNames']['val']) && (cBN['BuLLwMAKfmOLWuBvUnENglYISdUKniUf'] = !0x1), cBJ['players']['toggleLOD'](cBN, null == cBJ['RUfCftzxfJbJZoCyHXryEYwgWPZrZNCy'](cBC['camera']['pCrFlzzpYGHaZFbPwRqLxxsSKMxdAdnH'](), cBN['x'], cBN['y'], cBN['z'], 0xa)));
  }

  function cQO(cAw, cAx) {
    'wt' == cAw && (cAw = cAI['t']('player.waiting')), cAw && (cAw += cAx ? '\x20' + cAx : ''), gameMessage['innerHTML'] = cAw || '', specGMessage['innerHTML'] = cAw || '';
  }

  function cQR(cAw, cAx) {
    (cBN = cBJ['players']['findBySid'](cAw)) && (cBN['team'] = cAx, cBN == cBL && (cCb = cAx, cBJ['mode']['showTeam'] && (teamName['innerHTML'] = cCb), 'stalk' == cAx && cBJ['players']['resetAim']()));
  }

  function cQU(cAw) {
    if (cBJ['players']['hideAll'](), cAw)
      for (var cAx = 0x0; cAx < cAw['length'];)(cBN = cBJ['players']['findBySid'](cAw[cAx])) && cBN != cBL && (cBN['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']['visible'] = !cBN['lodActive'], cBN['latestData'] = !0x0, cBN['forcePos'] ? (cBN['x'] = cAw[cAx + 0x1], cBN['y'] = cAw[cAx + 0x2], cBN['z'] = cAw[cAx + 0x3], cBN['xDire'] = cAw[cAx + 0x4], cBN['yDire'] = cAw[cAx + 0x5], cBN['interpolate'] = !0x1, cBN['forcePos'] = !0x1) : (cBN['dt'] = 0x0, cBN['x1'] = cBN['x'], cBN['x2'] = cAw[cAx + 0x1], cBN['y1'] = cBN['y'], cBN['y2'] = cAw[cAx + 0x2], cBN['z1'] = cBN['z'], cBN['z2'] = cAw[cAx + 0x3], cBN['xDir1'] = cBN['xDire'], cBN['xDir2'] = cAw[cAx + 0x4], cBN['yDir1'] = cBN['yDire'], cBN['yDir2'] = cAw[cAx + 0x5], cBN['interpolate'] = !0x0), cBN['onGround'] = cAw[cAx + 0x6], cBN['crouchVal'] = cAw[cAx + 0x7], cBJ['players']['swapWeapon'](cBN, 0x0, !0x1, cAw[cAx + 0x8])), cAx += 0x9;
  }

  function cQX(cAw) {
    cBJ['players']['remove'](cAw);
  }

  function cQZ(cAw, cAx, cAy, cAz, cAB, cAC) {
    cBN = cBJ['players']['findBySid'](cAw), cBO = cBJ['players']['findBySid'](cAy), killCardKick['style']['display'] = 'none';
    var cAD = !0x1;
    if (cBN) {
      if (cBJ['players']['kill'](cBN), cBN['XQmyqXJXryyDVXuLHIsPzsXSplOUdjJW']) {
        deathsVal['innerHTML'] = cAx || 0x0, cCo = 0x0, streakVal['innerHTML'] = cCo;
        var cAI = '';
        if (cBO) {
          cBN != cBO && ((0xa >= cBO['level'] || !cBO['level']) && cBM && !cBJ['isCustom'] && -0x1 == cCr['indexOf'](cBO['name']) && (cAD = !0x0), cBK['lfBPyrNTZKpidKiRDUvCDMZhNTbZOBnu'](cBO['x'], cBO['y'] + cBO['height'] / 1.5, cBO['z']), cBO['interpolate'] = !0x1, cBO['BuLLwMAKfmOLWuBvUnENglYISdUKniUf'] = !0x0, cBO['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn'] && (cBO['qPzRqbyIGaTqGYnCSVJUKcVaZtwZslSn']['visible'] = !0x0)), cAI = '<img\x20id=\x27kCProfile\x27\x20src=\x27https://assets.krunker.io/textures/classes/icon_' + cBO['classIndex'] + '.png\x27\x20/>';
          var cAJ = Math['floor'](cAA['rankVar'] * Math['sqrt'](cAz[0x2] || 0x0));
          cAI += '<div\x20class=\x27kClvl\x27>lvl\x20' + (cAJ = Math['max'](0x1, cAJ + 0x1)) + '</div>', cAI += '<div\x20id=\x27kCName\x27>' + (cBO ? cCY && cBV ? cBA['scrambleS'](cBO['name']) : cBO['name'] : 'You') + (cBO['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAA['verClans']['indexOf'](cBO['clan']) ? cBy['verified']['clan'] : 'rgba(255,255,255,0.3)') + '\x27>\x20[' + cBO['clan'] + ']</span>' : '') + '</div>';
          var cAN = cBO['loadout']['indexOf'](cAz[0x0]),
            cAO = null == cBO['skins'][cAN] ? null : cBO['skins'][cAN];
          null != cAO && (cAO = cBJ['store']['skins'][cAO]);
          var cAP = cAO ? cBJ['store']['rarities'][cAO['rarity']]['color'] : 'rgba(255,255,255,0.7)',
            cAQ = cAO ? cAO['name'] : cBJ['weapons'][cAz[0x0]]['name'];
          'Combat\x20Knife' == cAQ && 0x0 <= cBO['meleeIndex'] && cBJ['store']['skins'][cBO['meleeIndex']] && (cAQ = cBJ['store']['skins'][cBO['meleeIndex']]['name'], cAP = cBJ['store']['rarities'][cBJ['store']['skins'][cBO['meleeIndex']]['rarity']]['color']), cAI += '<br/><div\x20id=\x27kCInfo\x27\x20style=\x27color:' + cAP + '\x27>[' + cAQ + ']</div>';
        }
        cAI += cAz && cAz[0x1] ? '<div\x20id=\x27kCInfoS\x27>+' + cAz[0x1] + '</div>' : '', killCardBy['innerHTML'] = cBO ? 'Killed\x20by' : 'You\x20died', killCard['style']['display'] = cBO ? 'inline-block' : 'none', killCardKick['style']['display'] = cAD ? 'inline-block' : 'none', killCard['innerHTML'] = cAI, cBF['toggleGameUI'](!0x1), setTimeout(function() {
          cDR(), cBJ['forceSpawn'] && function cAw(cAx) {
            playTick(), cH1('Auto\x20Respawning\x20in\x20' + (cAx - 0x1)), 0x1 < cAx && cH0 ? setTimeout(function() {
              cH0 ? cAw(cAx - 0x1) : cH1(null);
            }, 0x3e8) : cH1(null);
          }(cBJ['forceSpawn'] + 0x1);
        }, cAA['deathDelay']);
      }
      if (!cAC && cCg) {
        var cAR = cBN == cBL ? '<span\x20style=\x27color:' + cBy['killFeed']['you'] + '\x27>You</span>' : '<span\x20style=\x27color:' + (cCb && cCb == cBN['team'] ? cBy['killFeed']['ally'] : cBy['killFeed']['enemy']) + '\x27>' + (cCY && cBV ? cBA['scrambleS'](cBN['name']) : cBN['name']) + '</span>',
          cAT = cBO == cBL ? '<span\x20style=\x27color:' + cBy['killFeed']['you'] + '\x27>You</span>' : cBO ? '<span\x20style=\x27color:' + (cCb && cCb == cBO['team'] ? cBy['killFeed']['ally'] : cBy['killFeed']['enemy']) + '\x27>' + (cCY && cBV ? cBA['scrambleS'](cBO['name']) : cBO['name']) + '</span>' : '';
        cBO ? function(cAw, cAx, cAy, cAz) {
          for (cCY && cBV && (cAz = cBV['clean'](cAz)), cT0 = cBJ['weapons'][null == cAx['weaponId'] ? cAw['loadout'][cAw['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']] : cAx['weaponId']], chatList['innerHTML'] += '<div\x20class=\x27chatItem' + (cCv ? '\x20chatTextOutline' : '') + '\x27\x20style=\x27word-break:break-all;overflow-wrap:break-word;' + (0.1 == cCt ? '' : 'background-color:rgba(0,\x200,\x200,\x20' + cCt + ')') + '\x27><span\x20class=\x27chatMsg\x27>' + cAy + (null == cAx['streak'] ? '<img\x20style=\x27opacity:0.7;margin-right:' + (cT0['melee'] ? cT3[cBJ['store']['skins'][cAw['meleeIndex']] && cBJ['store']['skins'][cAw['meleeIndex']]['id'] || 0x0] : cT0['icnPad'] || 0x0) + 'px;' + (cT0['melee'] ? 'margin-bottom:-12px' : '') + '\x27\x20class=\x27weaponChatIcon\x27\x20src=\x27' + cBA['assetsUrl']((cT0['melee'] ? '/textures/melee/icon_' + (cBJ['store']['skins'][cAw['meleeIndex']] && cBJ['store']['skins'][cAw['meleeIndex']]['id'] || 0x0) : '/textures/weapons/' + cT0['icon']) + '.png') : '<img\x20class=\x27streakChatIcon\x27\x20src=\x27./img/streaks/' + cAx['streak'] + '.png') + '\x27\x20/>' + (cAx['headShot'] ? '<img\x20class=\x27headShotChatIcon\x27\x20src=\x27./img/headshot_0.png\x27>' : '') + cAz + '</span></div><br/>'; chatList['scrollHeight'] >= cCu;) chatList['removeChild'](chatList['childNodes'][0x0]);
        }(cBO, cAB, cAT, cAR) : cSW(null, cAR + '\x20committed\x20' + cAA['suicides'][cBA['randInt'](0x0, cAA['suicides']['length'] - 0x1)], !0x0);
      }
      cQz();
    }
  }

  function cRk(cAw, cAx) {
    if (cBL) {
      cAx ? cBL['streaks'][cAw] ? cBL['streaks'][cAw]['cnt'] = cAx : cBL['streaks'][cAw] = {
        'cnt': cAx,
        'streak': cBJ['streaks'][cAw]
      } : cBL['streaks'][cAw] = null;
      for (var cAy = '', cAz = 0x0; cAz < cBJ['streaks']['length']; ++cAz) cBL['streaks'][cAw] && (cAy += '<div\x20class=\x27killStreakItem\x27\x20style=\x27background-image:\x20url(&quot;./img/streaks/' + cAz + '.png&quot;)\x27><span>[' + cBA['getKeyName'](cBK['streakKeys'][cAz]) + ']</span><div\x20class=\x27killStreakCnt\x27>x' + cBL['streaks'][cAw]['cnt'] + '</div></div>');
      killStreakHolder['innerHTML'] = cAy;
    }
  }

  function cRp(cAw, cAx) {
    if (cBN = cBJ['players']['findBySid'](cAw)) {
      var cAy = cBN == cBL ? '<span\x20style=\x27color:' + cBy['killFeed']['you'] + '\x27>You\x27re</span>' : '<span\x20style=\x27color:' + (cCb && cCb == cBN['team'] ? cBy['killFeed']['ally'] : cBy['killFeed']['enemy']) + '\x27>' + (cCY && cBV ? cBA['scrambleS'](cBN['name']) : cBN['name']) + '</span>\x20is';
      cSW(null, cAI['t']('player.killstreak', cAy, cAx), !0x0);
    }
  }

  function cRt(cAw, cAx, cAy) {
    (cBN = cBJ['players']['findBySid'](cAw), cBO = cBJ['players']['findBySid'](cAx), cBN) && cSW(null, (cBN == cBL ? '<span\x20style=\x27color:' + cBy['killFeed']['you'] + '\x27>You</span>' : '<span\x20style=\x27color:' + (cCb && cCb == cBN['team'] ? cBy['killFeed']['ally'] : cBy['killFeed']['enemy']) + '\x27>' + (cCY && cBV ? cBA['scrambleS'](cBN['name']) : cBN['name']) + '</span>') + '\x20' + cAy + '\x20' + (cBO == cBL ? '<span\x20style=\x27color:#fff\x27>You</span>' : cBO ? '<span\x20style=\x27color:' + (cCb && cCb == cBO['team'] ? cBy['killFeed']['ally'] : cBy['killFeed']['enemy']) + '\x27>' + (cCY && cBV ? cBA['scrambleS'](cBO['name']) : cBO['name']) + '</span>' : ''), !0x0);
  }
  Object['defineProperty'](window, 'selectSpray', {
    'writeable': !0x1,
    'value': function(cAw) {
      saveVal('sprayindex', cAw), cQg = cAw, showWindow(0x3);
    }
  });
  var cRy = null,
    cRz = 0x0;

  function cRA(cAw, cAx) {
    if (cRy = cAw, cRz = cAx, cAw) {
      for (var cAy = 0x1, cAz = '', cAB = 0x0; cAB < cAw['length']; cAB += 0x6) cAz += '<div\x20class=\x27leaderItem\x27>', cAz += '<div\x20class=\x27leaderCounter\x27>' + cAy + '.</div>', cAz += cAw[cAB + 0x5] ? '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:' + cBy['verified']['player'] + ';margin-top:4px;font-size:25px\x27>check_circle</i>' : '', cAz += '<div\x20class=\x27leaderName' + (cBL && cAw[cAB] == cBL['sid'] ? 'M' : cCb && cCb == cAw[cAB + 0x2] ? 'F' : '') + '\x27>' + (cCY ? cBA['scrambleS'](cAw[cAB + 0x1]) : cAw[cAB + 0x1]) + (cAw[cAB + 0x4] ? '<span\x20style=\x27color:' + (0x0 <= cAA['verClans']['indexOf'](cAw[cAB + 0x4]) ? cBy['verified']['clan'] : '#fff') + '\x27>\x20[' + cAw[cAB + 0x4] + ']</span>' : '') + '</div>', cAz += '<div\x20class=\x27leaderScore\x27>' + cBA['formatNum'](cAw[cAB + 0x3], 0x2) + '</div>', cAz += '</div>', cAy++;
      leaderContainer && (leaderContainer['innerHTML'] = cAz), 0x1 >= cAy && (leaderContainer['innerHTML'] = cAI['t']('leaderboard.empty')), spectCount['style']['display'] = cAx ? 'inline-block' : 'none', spectCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px;margin-right:8px\x27>visibility</i>' + cAx;
    }
  }

  function cRG(cAw, cAx, cAy, cAz, cAB, cAC, cAD) {
    if (cBL && cBL['active'] || window['spectating']) {
      if (cBN = cBJ['players']['findBySid'](cAw)) {
        var cAI = cBN['y'] + cBN['height'] - cAA['cameraHeight'] - cBN['crouchVal'] * cAA['crouchDst'],
          cAJ = cBA['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](cBN['x'], cAI, cBN['z'], cAx, cAy, cAz),
          cAN = cBA['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](cBN['z'], cBN['x'], cAz, cAx),
          cAO = cBA['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](cBA['xBIWCnLLiqfSLgCsDrqJOyoncrZfplTa'](cBN['x'], cBN['z'], cAx, cAz), cAy, 0x0, cAI);
        cBE['physObj'](cBN['x'], cAI, cBN['z'], cAN, cAO, cAJ, cAD, 0x0);
      }
      null != cAB && null == cBJ['RUfCftzxfJbJZoCyHXryEYwgWPZrZNCy'](cBL, cAx, cAy, cAz) && (cBE['effect'](cAx, cAy, cAz, cAB, cAC, 0x0), cBL && cBD['play3Dv']('rico_' + cBA['randInt'](0x1, 0x2), cAx, cAy, cAz, 0x37, 0.55, cBA['randFloat'](0.7, 1.1), cBL));
    }
  }

  function cRS(cAw, cAx, cAy, cAz, cAA, cAB, cAC) {
    var cAD = cBJ['projectiles']['types'][cAB];
    cBE['physObj'](cAw, cAx, cAy, cAz, cAA, cBJ['projectiles']['types'][cAB]['range'], !0x1, null, null, cAD, cAC);
  }

  function cS1(cAw) {
    cBE['disablePhys'](cAw);
  }

  function cS3(cAw, cAx, cAy, cAz) {
    if (cBL || window['spectating']) {
      cBN = cBC['camera']['pCrFlzzpYGHaZFbPwRqLxxsSKMxdAdnH']();
      var cAB = 0x1 - cBA['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](cAw, cAx, cAy, cBN['x'], cBN['y'], cBN['z']) / cAA['explosionRange'];
      0x0 < cAB && cBC['shake'](0.14 * cAB), cBD['play3D']('explosion', cAw, cAx, cAy, 0x1, cBA['randFloat'](0.9, 1.1)), cBE['ExplosionManager']['explodeAt'](cAw, cAx, cAy, 0.08 * cAz);
    }
  }

  function cS9(cAw, cAx) {
    var cAy = document['getElementById']('tScoreV' + cAw);
    cAy && (cAy['innerHTML'] = cAx);
    var cAz = document['getElementById']('specScoreTm' + (cAw - 0x1));
    cAz && (cAz['innerHTML'] = cAx);
  }

  function cSe(cAw) {
    cAw && (cC8 += cAw, cBG['animateText'](scoreText, (0x0 < cC8 ? '+' : '') + cC8, 0x64 * cCm, 0.38, 0x44c, 0x64, 0x0, function() {
      cC8 = 0x0;
    }), cBL['score'] += cAw);
  }

  function cSg() {
    cCn && cBG['animateText'](checkText, cAI['t']('popup.checkpoint'), 0x4b, 0.38, 0x44c, 0x64, 0x0, null);
  }

  function cSh(cAw) {
    (cBN = document['getElementById']('livesDisp')) && (cBN['innerHTML'] = cAw);
  }
  var cSj = [];

  function cSk(cAw, cAx, cAy, cAz) {
    cCo += cAz || 0x1, cSq(cAw), cAx && cBD['play']('headshot_0'), killsVal['innerHTML'] = cAy, streakVal['innerHTML'] = cCo;
  }

  function cSp() {
    cSq(['Assist', cAA['assistScore']]);
  }

  function cSq(cAw) {
    if (cAw) {
      for (var cAx = 0x0 == cSj['length'], cAy = 0x0; cAy < cAw['length']; ++cAy) '' == cAw[cAy] ? cAy++ : cSj['push'](cAw[cAy]);
      cAx && function cAw(cAx) {
        !cCn || 0x0 < cSj['length'] && cBG['animateText'](chalName, '<span\x20class=\x27cTxt\x27>' + cSj[0x0] + '</span>' + (cSj[0x1] ? '<div\x20id=\x27chalScore\x27\x20style=\x27color:' + cEH['scoreColor']['val'] + '\x27>+' + cSj[0x1] + '</div>' : ''), 0x82, 0.4, cAA['medalAnim'], 0x64, cAx, function() {
          cSj['splice'](0x0, 0x2), cAw(0x0);
        });
      }(cAA['medalDelay']);
    }
  }

  function cSv(cAw, cAx) {
    (cBN = cBJ['players']['findBySid'](cAw)) && cBJ['players']['updateProp'](cBN, cAx, !0x0);
  }
  var cSy = 0x0;

  function cSz(cAw, cAx, cAy, cAz) {
    if ((cBL || spectating) && (cBN = null == cAx || null == cAx ? cBL : cBJ['players']['findBySid'](cAx))) {
      cBN['health'] = cAw, cBN['health'] > cBN['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] && (cBN['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] = cBN['health']);
      var cAB = cAw / cBN['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'];
      if (cBN == cBL && cBL) {
        healthValue['innerHTML'] = cAw + '\x20<span\x20id=\x27maxHP\x27>|\x20' + cBN['cvOMvComzmGFkFjxrFCIosMKLPHhgkvn'] + '</span>';
        for (var cAC = '', cAD = cBJ['classes'][cBL['classIndex']]['segs'], cAI = cAD * cAB, cAJ = cAI, cAN = 0x0; cAN < cAD; ++cAN) cAC += '<div\x20class=\x27healthBarSeg\x27><div\x20class=\x27hpBSeg\x27\x20style=\x27width:' + 0x64 * Math['max'](0x0, Math['min'](0x1, cAJ)) + '%;background-color:' + (0x3 >= cAI ? cEH['hudHealthLow']['val'] : cEH['hudHealthHigh']['val']) + '\x27></div></div>', cAJ -= 0x1;
        healthBar['innerHTML'] = cAC, cCx && (bloodDisplay['style']['display'] = 0.9 >= cAB ? 'block' : 'none', bloodDisplay['style']['opacity'] = 0x1 - cAB / 0.9), cAw < cSy && (null != cAy && null != cAy && function(cAw, cAx) {
          if (cCw) {
            for (var cAy = null, cAz = 0x0; cAz < cSQ['length']; ++cAz)
              if (!cSQ[cAz]['life']) {
                cAy = cSQ[cAz];
                break;
              } cAy || (cAy = {}, cSQ['push'](cAy)), cAy['life'] = cAA['hitLife'], cAy['x'] = cAw, cAy['z'] = cAx;
          }
        }(cAy, cAz), cBD['play']('impact_0', 0.8)), cSy = cAw;
      }
    }
  }
  var cSO, cSP, cSQ = [];

  function cSR(cAw, cAx, cAy) {
    if (cBD['play']('hit_0', 3.1), cBG['animateDiv'](hitmarker, 0x15e, 0x64, 0x69), null != cAw && cAx) {
      var cAz = cBJ['players']['findBySid'](cAw);
      cAz && cBB['dmgVal'](cAz['x'], cAz['y'], cAz['z'], cAx, cAy);
    }
  }

  function cSW(cAw, cAx, cAy) {
    if (cAy || cCh)
      for (cSO = 0.2 == cCt ? '' : '\x20style=\x27background-color:\x20rgba(0,\x200,\x200,\x20' + cCt + ')\x27', cSP = cCv ? '\x20chatTextOutline' : '', cCY && cBV && (cAx = cBV['clean'](cAx), !cAy && (cAw = cBA['scrambleS'](cAw))), chatList['innerHTML'] += cAy ? '<div\x20class=\x27chatItem' + cSP + '\x27' + cSO + '><span\x20class=\x27chatMsg\x27>' + cAx + '</span></div><br/>' : '<div\x20class=\x27chatItem' + cSP + '\x27' + cSO + '>' + (cAw || 'unknown') + ':\x20<span\x20class=\x27chatMsg\x27>' + cAx + '</span></div><br/>'; chatList['scrollHeight'] >= cCu;) chatList['removeChild'](chatList['childNodes'][0x0]);
  }
  var cT0, cT1, cT2, cT3 = [0x5, -0xa, 0x5, -0x7];

  function cT4() {
    if (cBZ = Date['now'](), cC0 = cBZ - cC1, cC9 && Math['ceil'](0x3e8 / cC9) > cC0) setTimeout(cT4, 0x0);
    else {
      if (cC0 = Math['min'](cC0, cAA['dltMx']), cC1 = cBZ, function() {
          if (cEH['showFPS']['val']) {
            for (; 0x0 < cH3['length'] && cH3[0x0] <= cBZ - 0x3e8;) cH3['shift']();
            cH3['push'](cBZ), cH4 = cH3['length'], 0x64 <= cBZ - cH5 && (cH5 = cBZ, ingameFPS['textContent'] = cH4, menuFPS['textContent'] = cH4);
          }
        }(), TWEEN['update'](), 0x0 < cC2 && (0x0 >= (cC2 -= cC0) && (cC2 = 0x0)), cBD['rate'] = cBJ['config']['deltaMlt'], null != cC2 && (cC0 *= cC2 / cAA['endAnim'], cBD['rate'] = cBJ['config']['deltaMlt'] * (cC2 / cAA['endAnim'])), cBL || window['spectating'] || (cC7 += 0.0001 * cC0, cC7 %= 0x2 * Math['PI'], cBK['cWxXNQhHAKcpjdUGondTNGzFskdKFMog'](cC7, 0x0, 0x0)), cHY && 0x0 < classPreviewCanvas['offsetWidth'] && 0x0 < classPreviewCanvas['offsetHeight'] && (cBJ['players']['playerStep'](cHZ, 0.015 * cC0, !0x0), cHZ['idleAnim'] += cAA['idleAnimS'] * cC0, cBJ['players']['updateMsh'](cHZ, !0x0), cI2['aspect'] = cI0 / cI1, cI2['updateProjectionMatrix'](), cI3['setSize'](cI0, cI1), cI3['setPixelRatio'](window['devicePixelRatio'] * cEH['resolution']['val']), cI3['render'](cHY, cI2)), function(cAw) {
          if ('block' == spinUI['style']['display'] && (cMH['width'] = cMH['clientWidth'], cMH['height'] = cMH['clientHeight'], spinItemCanvas['style']['width'] = 2.1 * cMH['clientWidth'] + 'px', spinItemCanvas['style']['height'] = 2.1 * cMH['clientWidth'] + 'px', cMZ['setSize'](2.1 * cMH['clientWidth'], 2.1 * cMH['clientWidth']), 0x0 < cMH['width'])) {
            0x1 > cMN && 0x1 <= (cMN += 0.008 * cAw) && (cMN = 0x1), cMQ < cMR && ((cMQ += 0.4 * cAw) >= cMR && (cMQ = cMR), cMV = !0x0, spinItem['style']['display'] = 'block', spinItemName['style']['display'] = 'inline-block', respinUI['style']['display'] = 'inline-block'), spinRotation != cMO && (spinRotation += 0.024 * (cMO - spinRotation), 0x0 >= (cMX -= 0.024 * (cMO - spinRotation)) && (cMX += Math['PI'] / 1.5, cBD['play']('tick_0', 0.2)), 0.002 >= cMO - spinRotation && (spinRotation = cMO, cMR = 0x64 - cME['rarities'][cML['rarity']], cBD['play']('reward', 0.3), cBI && cBI['send']('unbx'), 0x1 <= cML['rarity'] && cBD['play']('cheer_0', 0.1)));
            var cAx = 0x1 - (cMR ? cMQ / cMR : 0x0);
            cMI['translate'](0x2, 0x2);
            var cAy = cMH['width'] / 0x2 * cMJ * cMN;
            spinButton['style']['opacity'] = cAx;
            var cAz = 0.3 * cAy * (0x1 - cAx);
            spinButton['style']['width'] = 0x2 * cAy * cMK * 0.8 + cAz + 'px', spinButton['style']['height'] = 0x2 * cAy * cMK * 0.8 + cAz + 'px', spinText['style']['fontSize'] = 0x2 * cAy * cMK * 0.15 + cAz + 'px', spinCost['style']['fontSize'] = 0x2 * cAy * cMK * 0.08 + cAz + 'px', cMI['fillStyle'] = '#fff', cMI['beginPath'](), cMI['arc'](cMH['width'] / 0x2, cMH['height'] / 0x2, cAy, 0x0, 0x2 * Math['PI']), cMI['closePath'](), cMI['fill']();
            var cAA = 0x0;
            if (cMI['save'](), cMI['translate'](cMH['width'] / 0x2, cMH['height'] / 0x2), cMR) {
              for (var cAB = 0x0, cAC = 0x0; cAC < cBJ['store']['rarities']['length']; cAC++) {
                if (cML['rarity'] == cAC) {
                  cAB += cME['rarities'][cAC] / 0x2;
                  break;
                }
                cAB += cME['rarities'][cAC];
              }
              cAB /= 0x64, cAB = 0x2 * Math['PI'] * cAB * (cMQ / cMR) % (0x2 * Math['PI']), cMI['rotate'](cAB - Math['PI'] * (cMQ / cMR));
            }
            for (cAC = 0x0; cAC < cBJ['store']['rarities']['length']; cAC++) {
              cBN = cBJ['store']['rarities'][cAC], cMI['fillStyle'] = cBN['color'], cMI['beginPath']();
              var cAD = cME['rarities'][cAC];
              cMR && (cML['rarity'] == cAC ? cAD += cMQ : cAD -= cMQ * (cME['rarities'][cAC] / cMR)), 0x0 < cAD && (cMI['moveTo'](0x0, 0x0), cMI['arc'](0x0, 0x0, 0.95 * cAy, cAA, cAA + 0x2 * Math['PI'] * (cAD / 0x64), !0x1), cMI['lineTo'](0x0, 0x0), cMI['fill']()), cAA += 0x2 * Math['PI'] * (cAD / 0x64);
            }
            cMI['restore'](), cMI['fillStyle'] = '#F44336', cMI['save'](), cMI['translate'](cMH['width'] / 0x2, cMH['height'] / 0x2), cMI['rotate'](spinRotation), cMI['beginPath']();
            var cAI = (spinButton['getBoundingClientRect']()['width'] / spinButton['offsetWidth'] - 0x1) * (cAy * cMK) * 0.3;
            if (cMI['moveTo'](0x0, (cAy * cMK * -1.2 - cAI) * cAx), cMI['lineTo'](cAy * cMK * cAx, 0x0), cMI['lineTo'](-cAy * cMK * cAx, 0x0), cMI['closePath'](), cMI['fill'](), cMI['restore'](), cMI['fillStyle'] = '#fff', cMI['beginPath'](), cMI['arc'](cMH['width'] / 0x2, cMH['height'] / 0x2, cAy * cMK, 0x0, 0x2 * Math['PI']), cMI['closePath'](), cMI['fill'](), 'block' == spinItem['style']['display'] && cMC) {
              var cAJ = 0x1 - Math['abs'](cMY['position']['x'] - cMS) / (cMT - cMS);
              spinItemName['style']['opacity'] = cAJ, spinItemName['style']['marginTop'] = 0.6 * cAy + 'px', spinItemName['style']['fontSize'] = cAy / 6.5 * cAJ + 'px', spinItemName['children'][0x0]['style']['fontSize'] = cAy / 0xc * cAJ + 'px', spinItemName['style']['padding'] = cAy / 0x14 * cAJ + 'px', spinItemName['style']['paddingLeft'] = cAy / 0x2 * cAJ + 'px', spinItemName['style']['paddingRight'] = cAy / 0x2 * cAJ + 'px', cMY['position']['x'] != cMS && (cMY['position']['x'] -= 0.2 * (cMY['position']['x'] - cMS), 0.05 >= Math['abs'](cMS - cMY['position']['x']) && (cMY['position']['x'] = cMS), cMY['lookAt'](cMC['position'])), cMW += 0.0018 * cAw, cMD['position']['y'] = cMD['orgYP'] + 0.55 * Math['sin'](cMW), cMD['rotation']['x'] = cMD['orgXR'] + -0.042 * Math['sin'](0.9 * cMW), cMZ['render'](cMC, cMY);
            }
          }
        }(cC0), cHo(), cBK['update'](cC0 * cBJ['config']['deltaMlt']), cBL && cBL['active'] && !window['locked']) {
        cBJ['config']['thirdPerson'] ? cBC['camera']['position']['set'](cAA['thrdPX'], 0x2, cAA['thrdPZ']) : 'prop' == cBL['team'] ? (cCa += 0x5 * cBK['MfNajsSAoIvKNKASGQqbYpReILXlEmcE'], cCa = Math['min'](Math['max'](0xa, cCa), 0x64), cBC['camera']['position']['set'](0x0, 0x0, cCa)) : cBC['camera']['position']['set'](0x0, 0x0, 0x0);
        var cAw = cBK['xDr'];
        cBC['camera']['position']['x'] += cBJ['map']['config']['camOffX'], cBC['camera']['position']['y'] += cBJ['map']['config']['camOffY'], cBC['camera']['position']['z'] += cBJ['map']['config']['camOffZ'];
        var cAx = !cBK['UsePointerLock'] && !cBF['isMobile'];
        cAx && cBC['camera']['lookAt'](cBL['x'], cBL['y'] + cBL['height'] - cAA['cameraHeight'], cBL['z']), cBK['skipScroll'] = !0x1, cBP = [cBK['getISN'](), Math['round'](cC0 * cBJ['config']['deltaMlt']), cAw['round'](0x3), cBK['yDr']['round'](0x3), cAA['movDirs']['indexOf'](cBK['moveDir']), cBK['CLDmHUyBMgEkwmXbgiwcgYbnxzZttEVm'] || cBK['keys'][cBK['shootKey']] ? 0x1 : 0x0, cBK['DlTaaFfwrOmQfbOcxyFAMyoNpXMyccbl'] || cBK['keys'][cBK['aimKey']] ? 0x1 : 0x0, cBK['keys'][cBK['jumpKey']] ? 0x1 : 0x0, cBK['keys'][cBK['crouchKey']] ? 0x1 : 0x0, cBK['keys'][cBK['reloadKey']] ? 0x1 : 0x0, cBK['ajjZCddsWoycUDCSjWqbqzJBwkGINRzB'] ? cBK['MfNajsSAoIvKNKASGQqbYpReILXlEmcE'] * cCc : 0x0, cBK['WwsIiQndwtAiRAiDZgNxibdKLinxMKfJ']], cBK['MfNajsSAoIvKNKASGQqbYpReILXlEmcE'] && (cBK['skipScroll'] = cBK['ajjZCddsWoycUDCSjWqbqzJBwkGINRzB'], !cBK['ajjZCddsWoycUDCSjWqbqzJBwkGINRzB'] && cBK['OoNXnZVeaTvlrXsqGFUDoUswGgCDzPdX'](0x4e20, 0x1)), cBK['MfNajsSAoIvKNKASGQqbYpReILXlEmcE'] = 0x0, cBK['WwsIiQndwtAiRAiDZgNxibdKLinxMKfJ'] = 0x0, cBJ['moveLock'] || cBK['tmpInpts']['push'](cBP), cBL['BwVXohDwkFSKbGKMAdgiBzDuIyQDOdiE'](cBP, cBJ, !0x1, cBJ['moveLock']), cBK['frQqmsYwdTIjfJYpPkIYuUMQMPIzuRYR'](cBL['x'], cBL['y'] + cBL['height'] - cAA['cameraHeight'], cBL['z']), cAx || cBK['cWxXNQhHAKcpjdUGondTNGzFskdKFMog'](cBC['SzUUSAooUwQAqxugcIkKSbVXkQdBIUDx'], cBC['oGqdQCPMZjxLLkXCcQjVRqfovheiaZMR'] + cBL['IIFXYtgrbBDkLbHBbEEVkUgAeyEpFaGV'] * cAA['YkPPajzKenHiEMtZrKJtjsveozsargTy'] + 0.1 * cBL['landBobY'], 0x0), cBF['JqzpoilovNjNyfwXiNeVftXVaWYybxXh'](Math['max'](0x3a, cBL['spread'] * cCC), !cBJ['config']['thirdPerson'] && !cBK['camOffset'] || cBL['weapon']['scope'] ? cBL['aimVal'] * (cBL['inspecting'] ? 0x0 : 0x1) * ('prop' == cBL['team'] ? 0x0 : 0x1) * (0x0 < cBL['reloadTimer'] ? 0x0 : 0x1) * (cAx ? 0x0 : 0x1) : 0x1), cBJ['singlePlayer'] || cBJ['moveLock'] || function(cAw) {
          if (null === cC5 && (cC5 = cAw[0x0]), cC4['push'](cAw[0x1] - 0xa), cBQ && cBQ[0x2] == cAw[0x2] && cBQ[0x3] == cAw[0x3] && cBQ[0x4] == cAw[0x4] && cBQ[0x5] == cAw[0x5] && cBQ[0x6] == cAw[0x6] && cBQ[0x7] == cAw[0x7] && cBQ[0x8] == cAw[0x8] && cBQ[0x9] == cAw[0x9] && cBQ[0xa] == cAw[0xa] && cBQ[0xb] == cAw[0xb])
            if ('string' == typeof cC3[cC3['length'] - 0x1]) {
              var cAx = parseInt(cC3[cC3['length'] - 0x1]) || 0x0;
              cC3[cC3['length'] - 0x1] = cAx + 0x1 + '';
            } else cC3['push']('1');
          else cC3['push'](cAw[0x2], cAw[0x3], cAw[0x4], cAw[0x5], cAw[0x6], cAw[0x7], cAw[0x8], cAw[0x9], cAw[0xa], cAw[0xb]);
          cBQ = cAw;
        }(cBP), Howler['pos'](cBL['x'], cBL['y'] + cBL['height'] - cAA['cameraHeight'], cBL['z']), Howler['orientation'](Math['sin'](cBK['xDr'] + Math['PI']), cBK['yDr'], Math['cos'](cBK['xDr'] + Math['PI'])), cBJ['singlePlayer'] && cBL['y'] <= cBJ['map']['deathY'] && cQZ(cBL['sid'], cBL['deaths']);
      } else window['spectating'] && (cDs && (cDt ? (cBK['object']['position']['set'](cDs['x'], cDs['y'], cDs['z']), cBK['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['rotation']['x'] = cDs['yR'], cBK['object']['rotation']['y'] = cDs['xR'], cBC['updateFrustum']()) : cDs['active'] ? cDv && cDu ? (cBK['frQqmsYwdTIjfJYpPkIYuUMQMPIzuRYR'](cDs['x'], cDs['y'] + cDs['height'] - cAA['cameraHeight'], cDs['z']), cBK['object']['rotation']['y'] = cDs['xDire'], cBK['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['rotation']['x'] = cDs['yDire']) : cBK['followCam'](cDs, cC0) : spectMode()), cDs || cBK['freeCam'](cC0), Howler['pos'](cBK['object']['position']['x'], cBK['object']['position']['y'], cBK['object']['position']['z']), Howler['orientation'](Math['sin'](cBK['xDr'] + Math['PI']), cBK['yDr'], Math['cos'](cBK['xDr'] + Math['PI'])));
      if (cBJ['update'](cC0, cBZ, cBL), cBJ['updateFlags'](cBL, cC0), function(cAw) {
          if (cCw) {
            var cAx = '';
            if (cBL && cBL['active'])
              for (var cAy = 0x0; cAy < cSQ['length']; ++cAy) cSQ[cAy]['life'] && (cSQ[cAy]['life'] -= cAw, 0x0 >= cSQ[cAy]['life'] && (cSQ[cAy]['life'] = 0x0), cAx += '<div\x20class=\x27hitInd\x27\x20style=\x27transform:\x20translate(0,\x20-50%)\x20rotate(' + (cBA['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](cSQ[cAy]['x'], cSQ[cAy]['z'], cBL['x'], cBL['z']) + cBK['xDr']) + 'rad);opacity:' + cSQ[cAy]['life'] / cAA['hitLife'] + '\x27></div>');
            hitHolder['innerHTML'] = cAx;
          }
        }(cC0), cBG['update'](cC0), cCf -= cC0, 'block' == speedDisplay['style']['display'] && 0x0 >= cCf) {
        var cAy = '';
        cCf = 0x12c, cBL && cBL['active'] && (cAy = cBA['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](cBL['oldX'], cBL['oldY'], cBL['oldZ'], cBL['x'], cBL['y'], cBL['z']));
        var cAz = Math['round'](0x64 * cAy);
        cAz != speedDisplay['textContent'] && (speedDisplay['textContent'] = cAz);
      }
      'block' == imgFlash['style']['display'] && (imgFlash['style']['opacity'] -= 0.002 * cC0, 0x0 >= imgFlash['style']['opacity'] && (imgFlash['style']['opacity'] = 0x0, imgFlash['style']['display'] = 'none')), cBB['render'](cCD, cBJ, cBC, cBL, cC0), window['spectating'] || 'block' != menuHolder['style']['display'] || !cAA['isProd'] || cBX || cBM && cBM['developer'] || cBJ['config'] && cBJ['config']['isFromQueue'] || (cBK['idleTimer'] += cC0, cBK['idleTimer'] >= cAA['kickTimer'] && cTx(cAI['t']('player.inactive'))), requestAnimFrame(cT4);
    }
  }

  function cTo() {
    !cBJ['singlePlayer'] && cBL && cBL['active'] && (cBI['send']('in', cC5, cC3, cC4), cC3['length'] = 0x0, cC4['length'] = 0x0, cC5 = null);
  }

  function cTp(cAw) {
    cAw && (txtBubble['innerHTML'] = cAw, bubbleContainer['style']['transform'] = 'scale(1.0)', cT1 && clearTimeout(cT1), cT1 = setTimeout(function() {
      bubbleContainer['style']['transform'] = 'scale(0.0)';
    }, 0x834));
  }

  function cTr(cAw) {
    console['trace']('Error\x20message', cAw), instructionHolder['style']['display'] = 'block', instructions['innerHTML'] = '<span\x20style=\x27color:\x20rgba(255,\x20255,\x20255,\x200.6)\x27>' + cAw + '</span><br/><span\x20style=\x27color:\x20rgba(255,\x20255,\x20255,\x200.6)\x27>' + cAI['t']('error.seek') + '\x20<a\x20href=\x27/\x27>here</a>.</span><div\x20style=\x27margin-top:10px;font-size:20px;color:rgba(255,255,255,0.4)\x27>' + cAI['t']('error.extentions') + '\x20(Error\x200x' + window['krunkerErrorCode'] + ')</div>', instructionHolder['style']['pointerEvents'] = 'all';
  }

  function cTt() {
    var cAw = cBK['gamepad']['_connected'] ? cAI['t']('app.play.controller') : cBF['isMobile'] ? 'TAP\x20TO\x20PLAY' : cAI['t']('app.play');
    cGV && (cAw += '<div\x20id=\x27instructionsSubtitle\x27>' + cGV['toUpperCase']() + '</div>');
    cAw += cH0 ? '<div\x20id=\x27instructionsSubtitle\x27>' + cH0['toUpperCase']() + '</div>' : '', instructions['innerHTML'] = cAw;
  }

  function cTv(cAw) {
    cT2 = cAw, cBI['connected'] = !0x1, showWindow(0x0), cBK['disable'](), cBF['hideUI'](), cBF['hideDiscon'](), cTr(cAw), cBI['nauCnKDJRCEivRMxzNzJflYgovsgNncK'] && (cBI['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['onclose'] = function() {}), cTx = function() {};
  }

  function cTx(cAw, cAx) {
    cT2 || cBJ['singlePlayer'] || (cBI['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['onclose'] = function() {}, cBI && cBI['nauCnKDJRCEivRMxzNzJflYgovsgNncK'] && cBI['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['close'](), !cAx && (showWindow(0x0), cBK['disable'](), cBF['hideUI'](), cBF['hideDiscon'](), cTr(cAw || cAI['t']('player.disconnect'))));
  }

  function cTA(cAw) {
    var cAx = '';
    if (cAw) {
      0x3 < cAw['length'] && (cAw['length'] = 0x3);
      for (var cAy = 0x0; cAy < cAw['length']; ++cAy) cAx += '<div\x20class=\x27streamItem\x27\x20onclick=\x27openTab(&quot;https://twitch.tv/' + cAw[cAy]['name'] + '&quot;)\x27><div\x20class=\x27streamName\x27>' + (cAw[cAy]['partner'] ? '<div\x20style=\x27display:inline-block;\x27><i\x20class=\x27material-icons\x20streamPartner\x27>check_circle</i></div>' : '') + '<div\x20class=\x27strmLink\x20blackShad\x27>' + cAw[cAy]['name'] + '</div><div\x20class=\x27strmViews\x27>' + cAI['t']('streamers.views', cAw[cAy]['view']) + '</div></div><img\x20class=\x27strmIcn\x27\x20src=\x27' + cAw[cAy]['logo'] + '\x27/></div>';
    } else cAx = '<span\x20style=\x27color:rgba(244,60,60,0.5)\x27>' + cAI['t']('streamers.none') + '</span>';
    streamContainer['innerHTML'] = cAx;
  }

  function cTE(cAw) {
    cBJ['singlePlayer'] = !0x0, cBI && cBI['nauCnKDJRCEivRMxzNzJflYgovsgNncK'] && cBI['nauCnKDJRCEivRMxzNzJflYgovsgNncK']['close'](), cBI['send'] = function() {};
    try {
      cOA(0x0, null, null, null, null, {
        'maps': [0x0]
      }, 0x0, {
        'data': cAw
      }, null, !0x0);
    } catch (cTG) {}
    cAD('custMap'), cDR(), window['history']['replaceState']({}, 'Krunker\x20Offline', 'offline');
  }

  function cTH(cAw) {
    cBI['send']('load', 'undefined' == typeof __LOADER__calcGameValidationCode ? null : __LOADER__calcGameValidationCode(cBI, cAw, '###PVT###')), cAz['k'] && cBI['send']('rt');
  }

  function cTJ(cAw) {
    cBI['send']('strm'),
      function() {
        loginToken = getSavedVal('krunker_token');
        var cAw = getSavedVal('krunker_username');
        loginToken && cAw && cH9(0x1, [cAw, null, loginToken]);
        var cAx = getSavedVal('krunker_last'),
          cAy = Date['now']();
        saveVal('krunker_last', cAy), (!cAx || 0x927c0 <= cAy - cAx) && cBI['send']('sb', 'welc', cAw);
      }(), cAw && cBI['send']('van', getSavedVal('krunker_username'));
  }
  window['pressButton'] = function(cAw) {
    if (cBK['UsePointerLock'] || 0x1b != cAw || (cBK['toggle'](!0x1), cBK['keys'][0x1b] = 0x0), cCy && cBL && cBL['active'] && -0x1 == cCr['indexOf'](cCy) && (0x31 == cAw ? (cBI['send']('v2k', cCy), cCr['push'](cCy)) : 0x32 == cAw && (voteToKick['style']['display'] = 'none', cCr['push'](cCy))), window['spectating']) {
      if (0x46 == cAw && spectMode(), 0x48 == cAw) {
        if (!cBJ['mode']['objective'] || !Object['keys'](cBJ['map']['manager']['spectateCams'])['length']) return;
        cDt = !0x0, spectMode(-0x1);
      }
      var cAx;
      if (0x30 == cAw && cDt)(cAx = cBJ['map']['manager']['spectateCams'][-0x1][0x0]) && cAx['active'] && (cDs = cAx);
      if (0x30 < cAw && 0x3a > cAw)(cAx = (cDt ? cBJ['map']['manager']['spectateCams'][cBJ['activeObjective'] || 0x0] : cBJ['players']['list'])[cAw - 0x31]) && cAx['active'] && (cDs = cAx, !cDt && cBI['send']('fpSp', cAx ? cAx['sid'] : null));
    }
    if (cAw == cBK['chatKey'] && (document['activeElement'] == chatInput ? ('' != chatInput['value'] && (!cAz['disC'] && cBI['send']('ct', chatInput['value']), chatInput['value'] = ''), chatInput['blur']()) : chatInput['focus']()), cAw == cBK['listKey']) {
      if ('INPUT' == document['activeElement']['tagName']) return;
      if (null == endUI['style']['display']) return;
      cBK['keys'][cAw] = 0x0, cBK['hasPointerlock'] && cBK['toggle'](!0x1), showWindow(0x17);
    }
    if (cBL && cBL['active']) {
      cAw == cBK['sprayKey'] && cBI['send']('int', 0x0), cAw == cBK['interactKey'] && cBI['send']('int', 0x1), cAw == cBK['interactSecKey'] && cBI['send']('int', 0x1, !0x0), cAw == cBK['dropKey'] && cBI['send']('int', 0x2), cAw == cBK['inspKey'] && cBJ['players']['wInspect'](cBL);
      var cAy = cBK['streakKeys']['indexOf'](cAw);
      0x0 <= cAy && cBI['send']('k', cAy), cAw == cBK['wepVisKey'] && function(cAw) {
        var cAx = cAw['loadout'][cAw['JrbzXDfBkotblfmHyhexjyVyqRyeUVij']];
        cBJ['weapons'][cAx]['melee'] ? setSetting('showWeaponMel', !cEH['showWeaponMel']['val']) : cBJ['weapons'][cAx]['secondary'] ? setSetting('showWeaponSec', !cEH['showWeaponSec']['val']) : !cBJ['weapons'][cAx]['melee'] && !cBJ['weapons'][cAx]['secondary'] && setSetting('showWeapon', !cEH['showWeapon']['val']);
      }(cBL);
    }
  }, cBF['updatePlayInstructions'] = cTt, window['openTab'] = function(cAw) {
    window['open'](cAw, '_blank');
  }, getSavedVal('consent') || (consentBlock['style']['display'] = 'block');
  var cTU = !0x1;
  var cTV = cAA['isProd'] ? ['de-fra', 'us-ca-sv', 'au-syd', 'jb-hnd', 'us-fl', 'sgp', 'us-nj'] : ['local'];

  function cTW(cAw, cAx, cAy, cAz, cAA) {
    cAw,
    cAx;
    var cAB = [];cAy && cAB['push']('gameId=' + cAy),
    cAz && cAB['push']('clientKey=' + cAz),
    cAA && cAB['push']('pgi=' + cAA);
    var cAC = '//' + cAw + ':' + cAx + '/ws?' + cAB['join']('&');cBI['connect'](cAC, function(cAw) {
      if (cAw) {
        if (console['warn']('IO\x20connect\x20error', cAw), null != cT2) return;
        cTx();
      } else {
        cDR(), aHolder['style']['display'] = null;
        var cAx = getSavedVal('mapToLoad');
        cAD('mapToLoad'), cAx && selectHostMap(cAx);
        var cAy = getSavedVal('custToLoad');
        cAD('custToLoad'), cAy && selectHostMap(!0x1, cAy);
      }
    }, {
      'init': cOA,
      'inst-id': cOR,
      'load': cTH,
      'ready': cTJ,
      'start': cOv,
      'cust': cB0,
      'iq': cBo,
      'qr': cNs,
      'pur': cDc,
      'uf': cDa,
      'clm': cHs,
      'gmsg': cQO,
      'pc': cTE,
      'cln': cNo,
      'upMp': cNH,
      'lock': cP0,
      'spin': cN4,
      'unb': cN0,
      'end': cP2,
      'pErr': purchaseError,
      'error': cTv,
      'strm': cTA,
      'dc': cTx,
      'ts': cS9,
      't': cQr,
      'n': cQp,
      0: cQu,
      1: cQU,
      8: cQD,
      2: cQX,
      3: cQZ,
      'kst': cRp,
      'am': cSq,
      'ac': cRt,
      4: cSR,
      5: cSe,
      6: cSk,
      'lv': cSh,
      'up': cSv,
      7: cRA,
      9: cRG,
      10: cSp,
      'h': cSz,
      's': cPq,
      'sp': cQh,
      'ch': cSW,
      'vc': voiceChat,
      'a': cHc,
      'ua': cGG,
      'ex': cS3,
      'st': cRk,
      'pr': cRS,
      'tm': cQR,
      'pre': cS1,
      'obj': cBJ['setObjective'],
      'do': cBJ['destroyObj'],
      'ro': cBJ['respawnObj'],
      'ufl': cBJ['updateFlag'],
      'gte': cBJ['updateGate'],
      'bnk': cBJ['updateBank'],
      'lm': cBJ['lockMove'],
      'is': cBJ['triggerImgSound'],
      'pi': cQJ,
      'pir': cQK,
      'chp': cSg,
      'mv': updMatchVote,
      'nwT': newTok,
      'inat': cPu,
      'sb': cTp,
      'zn': cBJ['updateZone'],
      'vr': cMf,
      'ctrR': crtrCodRes,
      'kml': cMi,
      'rml': cMk,
      'gmc': cMm,
      'vk': cPl,
      'frs': enterGame
    });
  }
  var cU7, cU8, cU9 = !0x1;

  function cUa(cAw) {
    return clearTimeout(cU7), clearTimeout(cU8), cU9 ? (cU9 = !0x1, document['getElementById']('pre-content-container')['style']['display'] = 'none', document['getElementById']('my-content')['style']['display'] = 'none', void(cAw ? cBI['send']('fkr') : alert(cAI['t']('adblocker')))) : void console['warn']('Attempting\x20to\x20finish\x20when\x20pre\x20ad\x20not\x20showing');
  }
  window['boltEventHandlers'] = function() {
      Bolt['on']('pre-content-player', 'showHiddenContainer', function() {
        console['log']('Ad\x20finished\x20successfully'), cUa(!0x0);
      });
    }, window['debugMatchmaker'] = function(cAw, cAx) {
      return cAx || (cAx = cAQ), Promise['all']([cAP['fetchGameInfo'](cAx), cAP['fetchGameDebugInfo'](cAw, cAx), cAP['fetchAllDebugInfo'](cAw)])['then'](([cAw, cAx, cAy]) => ({
        'gameInfo': cAw,
        'gameDebugInfo': cAx,
        'allDebugInfo': cAy
      }));
    }, window['getGameActivity'] = function() {
      return {
        'id': cBJ['mode']['isRanked'] ? null : cAQ,
        'time': timerVal['innerHTML'] ? timerVal['innerHTML']['split'](':')['reverse']()['reduce']((cAw, cAx, cAy) => cAw + cAx * Math['pow'](0x3c, cAy), 0x0) : null,
        'user': cBM ? cBM['name'] : 'Guest' + (cBL ? '_' + cBL['sid'] : ''),
        'class': {
          'name': cBJ['classes'][cCl]['name'] || null,
          'index': cBL ? cBL['classIndex'] : cCl
        },
        'mode': cBJ['mode'] ? cBJ['mode']['name'] : null,
        'map': cBJ['map']['maps'][cBJ['map']['lastGen']]['name'],
        'custom': cBJ['isCustom']
      };
    },
    function() {
      if (!cAB && (instructions['innerHTML'] = cAI['get']('generic.connecting'), !cTU)) {
        cTU = !0x0;
        var cAw = getSavedVal('custMap');
        cAD('custMap'), cAw ? cTE(cAw) : function() {
          var cAw = getSavedVal('queueHost'),
            cAx = getSavedVal('queuePort'),
            cAy = getSavedVal('pgi');
          cAD('queueHost'), cAD('queuePort'), cAD('pgi'), cAy ? cTW(cAw, cAx, null, null, cAy) : ('undefined' == typeof __LOADER__mmValidationTokenPromise ? Promise['resolve'](null) : __LOADER__mmValidationTokenPromise)['then'](cAw => cAP['seek']({
            'autoChangeGame': !0x1,
            'pgi': cAy,
            'dataQuery': {
              'v': cAA['useLooseClient'] ? void 0x0 : cBW
            },
            'skipReplaceState': cCY,
            'validationToken': cAw
          }))['then'](cAw => {
            cTW(cAw['host'], cAw['port'], cAw['gameId'], cAw['clientId'], null);
          })['catch'](cAw => {
            console['warn']('Matchmaker\x20error:', cAw, cAw['message'], cAw['response']);
            let cAx = cAw['message'];
            cAw['response'] ? 'InvalidGameId' == (cAx = cAw['response']['data'] && cAw['response']['data']['error'] ? cAw['response']['data']['error'] : 'GameFull') ? cAx = cAI['t']('matchmaker.invalid') : 'GameFull' == cAx ? cAx = cAI['t']('matchmaker.full2') : 'NoServersMatchQuery' == cAx ? cAx = cAI['t']('matchmaker.updating') : 'NoAvailableServers' == cAx ? cAx = cAI['t']('matchmaker.none') : console['warn']('Unhandled\x20error\x20message', cAx) : console['warn']('No\x20error\x20response', cAw['response']), cTv(cAx);
          });
        }(), window['requestAnimFrame'] = window['requestAnimationFrame'] || window['webkitRequestAnimationFrame'] || window['mozRequestAnimationFrame'] || function(cAw) {
          window['setTimeout'](cAw, 0x3e8 / 0x3c);
        }, setInterval(cTo, cAA['clientSendRate']), setInterval(cQM, cAA['nameVisRate']), cC1 = Date['now'](), cT4();
      }
    }();
}, function(cUt, cUu, cUv) {
  'use strict';
  var cUw = this && this['__awaiter'] || function(cUt, cUu, cUv, cUw) {
    function cUB(cUt) {
      return cUt instanceof cUv ? cUt : new cUv(function(cUu) {
        cUu(cUt);
      });
    }
    return new(cUv || (cUv = Promise))(function(cUv, cUF) {
      function cUG(cUt) {
        try {
          cUM(cUw['next'](cUt));
        } catch (cUI) {
          cUF(cUI);
        }
      }

      function cUJ(cUt) {
        try {
          cUM(cUw['throw'](cUt));
        } catch (cUL) {
          cUF(cUL);
        }
      }

      function cUM(cUt) {
        cUt['done'] ? cUv(cUt['value']) : cUB(cUt['value'])['then'](cUG, cUJ);
      }
      cUM((cUw = cUw['apply'](cUt, cUu || []))['next']());
    });
  };
  Object['defineProperty'](cUu, '__esModule', {
    'value': !0x0
  });
  const cUO = cUv(0x5f);
  class cUP {
    constructor(cUt, cUu, cUv, cUw, cUO, cUP) {
      this['manager'] = cUt, this['queueClientId'] = cUu, this['statusCallback'] = cUv, this['hostCallback'] = cUw, this['joinCallback'] = cUO, this['cancelJoinCallback'] = cUP, this['status'] = 'Queuing', this['queueSize'] = 0x0, this['newGameId'] = null;
    }
    get['isQueued']() {
      return 'Queuing' != this['status'] && 'CreatingGame' != this['status'] && 'Join' != this['status'];
    }
    get['isActive']() {
      return this['manager']['queueManager'] === this;
    } ['_start']() {
      return cUw(this, void 0x0, void 0x0, function*() {
        this['_poll']();
      });
    } ['_poll']() {
      return cUw(this, void 0x0, void 0x0, function*() {
        let cUt = yield this['manager']['matchmakerRequest']('/queue/poll', {
          'clientId': this['queueClientId']
        });
        this['_handleNewStatus'](cUt['status']);
      });
    } ['_handleNewStatus'](cUt) {
      switch (this['status'] = cUt['t'], cUt['t']) {
        case 'Queued':
          this['queueSize'] = cUt['c']['queueSize'];
          break;
        case 'CreatingGame':
          break;
        case 'HostGame':
          this['hostCallback'](cUt['c']['host'], cUt['c']['port'], cUt['c']['pendingGameId']);
          break;
        case 'Join':
          let cUu = cUt['c']['gameId'];
          cUu != this['newGameId'] && (this['newGameId'] = cUu, this['joinCallback'](cUu));
          break;
        default:
          return void console['error']('Unknown\x20status', cUt);
      }
      setTimeout(() => {
        this['isActive'] && this['_poll']();
      }, 0x3e8), this['newGameId'] && 'Join' != cUt['t'] && 'HostGame' != cUt['t'] && (this['newGameId'] = null, this['cancelJoinCallback']()), this['statusCallback'](cUt['t'], cUt['c']);
    }
  }
  cUu['QueueManager'] = cUP;
  class cUZ {
    constructor(cUt) {
      this['matchmakerAddress'] = cUt, this['cachePingRegion'] = !0x0, this['enableLogging'] = !!localStorage['getItem']('CLIENT_MANAGER_LOGGING');
    }
    get['hostname']() {
      return localStorage['__HOSTNAME__'] || location['hostname'];
    } ['seek'](cUt) {
      return cUw(this, void 0x0, void 0x0, function*() {
        this['log']('Seeking\x20games...');
        let cUu = localStorage['__REGION__'] || cUt['regionId'] || (yield this['getRegion']()),
          cUv = cUt['gameId'] || this['parseQuery'](),
          cUw = yield this['matchmakerSeek'](cUu, cUv, cUt['dataQuery'] || null, cUt['autoChangeGame'], cUt['validationToken'], cUt['captchaToken']);
        return cUt['skipReplaceState'] || window['history']['replaceState'](document['title'], document['title'], this['generateHref'](cUw['gameId'])), cUw;
      });
    } ['getRegion']() {
      return cUw(this, void 0x0, void 0x0, function*() {
        return new Promise((cUt, cUu) => cUw(this, void 0x0, void 0x0, function*() {
          let cUv = localStorage['getItem'](cUZ['PING_REGION_CACHE_KEY']);
          if (cUv) return void cUt(cUv);
          let cUw = yield this['fetchPingList'](), cUO = 0x0, cUP = !0x1;
          for (let cUv in cUw) {
            let cVc = cUw[cUv],
              cVd = cVc['endsWith'](':443') ? 'https:' : 'http:';
            fetch(cVd + '//' + cVc + '/ping')['then'](() => {
              cUP || cUZ['setDefaultRegion'](cUv), cUP = !0x0, cUt(cUv);
            })['catch'](() => {
              ++cUO >= Object['keys'](cUw)['length'] && cUu('All\x20pings\x20failed.');
            });
          }
        }));
      });
    } ['switchGame'](cUt) {
      window['location']['href'] = this['generateHref'](cUt);
    }
    static['setDefaultRegion'](cUt) {
      localStorage['setItem'](cUZ['PING_REGION_CACHE_KEY'], cUt);
    } ['parseQuery']() {
      this['log']('Parsing\x20query...');
      var cUt = cUO(location['href'], !0x0)['query']['game'];
      return 'string' == typeof cUt ? cUt : null;
    } ['fetchPingList']() {
      return cUw(this, void 0x0, void 0x0, function*() {
        return this['log']('Fetching\x20list\x20of\x20servrs\x20to\x20ping...'), yield this['matchmakerRequest']('/ping-list', {
          'hostname': this['hostname']
        });
      });
    } ['fetchGameList']() {
      return cUw(this, void 0x0, void 0x0, function*() {
        return this['log']('Fetching\x20game\x20list...'), yield this['matchmakerRequest']('/game-list', {
          'hostname': this['hostname']
        });
      });
    } ['fetchGameInfo'](cUt) {
      return cUw(this, void 0x0, void 0x0, function*() {
        return this['log']('Fetching\x20game\x20info\x20for\x20' + cUt + '...'), yield this['matchmakerRequest']('/game-info', {
          'game': cUt
        });
      });
    } ['matchmakerSeek'](cUt, cUu = null, cUv, cUO = !0x0, cUP, cUZ = null) {
      return cUw(this, void 0x0, void 0x0, function*() {
        this['log']('Seeking\x20matchmaker\x20with\x20region\x20' + cUt + '...');
        let cUw = {
          'hostname': this['hostname'],
          'region': cUt,
          'autoChangeGame': cUO,
          'validationToken': cUP
        };
        return cUu && (cUw['game'] = cUu), cUv && (cUw['dataQuery'] = JSON['stringify'](cUv)), cUZ && (cUw['captchaToken'] = cUZ), yield this['matchmakerRequest']('/seek-game', cUw);
      });
    } ['fetchAllDebugInfo'](cUt) {
      return cUw(this, void 0x0, void 0x0, function*() {
        return this['log']('Fetching\x20all\x20debug\x20info...'), yield this['matchmakerRequest']('/internal/all-debug-info', {
          'key': cUt
        });
      });
    } ['fetchGameDebugInfo'](cUt, cUu) {
      return cUw(this, void 0x0, void 0x0, function*() {
        return this['log']('Fetching\x20game\x20debug\x20info\x20for\x20' + cUu + '...'), yield this['matchmakerRequest']('/internal/game-debug-info', {
          'key': cUt,
          'gameId': cUu
        });
      });
    } ['queue'](cUt) {
      return cUw(this, void 0x0, void 0x0, function*() {
        this['queueManager'] && this['unqueue']();
        let cUu = new cUP(this, cUt['clientId'], cUt['statusCallback'], cUt['hostCallback'], cUt['joinCallback'], cUt['cancelJoinCallback']);
        return this['queueManager'] = cUu, yield cUu['_start']();
      });
    } ['unqueue']() {
      return cUw(this, void 0x0, void 0x0, function*() {
        this['queueManager'] = void 0x0;
      });
    } ['generateHref'](cUt) {
      return '/?game=' + cUt;
    } ['matchmakerRequest'](cUt, cUu = {}) {
      return cUw(this, void 0x0, void 0x0, function*() {
        for (let cUv in this['log']('Executing\x20matchmaker\x20request\x20' + cUt + '\x20with\x20params\x20' + JSON['stringify'](cUu) + '...'), cUu) null == cUu[cUv] && delete cUu[cUv];
        let cUv = new URLSearchParams(cUu)['toString'](),
          cUw = yield fetch('' + this['matchmakerAddress'] + cUt + (cUv ? '?' + cUv : ''));
        if (cUw['ok']) return yield cUw['json'](); {
          let cUt = null;
          try {
            cUt = yield cUw['json']();
          } catch (cVB) {}
          throw {
            'message': cUw['statusText'],
            'response': {
              'data': cUt
            }
          };
        }
      });
    } ['log'](...cUt) {
      return this['enableLogging'] ? (console['debug'] || console['info'] || console['log'])(...cUt) : void 0x0;
    }
  }
  cUu['default'] = cUZ, cUZ['PING_REGION_CACHE_KEY'] = 'sid-utils:ping-region';
}, function(cVD, cVE, cVF) {
  'use strict';
  (function(cVE) {
    var cVH = cVF(0x60),
      cVI = cVF(0x61),
      cVJ = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i,
      cVK = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//,
      cVL = [
        ['#', 'hash'],
        ['?', 'query'],
        function(cVD) {
          return cVD['replace']('\x5c', '/');
        },
        ['/', 'pathname'],
        ['@', 'auth', 0x1],
        [NaN, 'host', void 0x0, 0x1, 0x1],
        [/:(\d+)$/, 'port', void 0x0, 0x1],
        [NaN, 'hostname', void 0x0, 0x1, 0x1]
      ],
      cVM = {
        'hash': 0x1,
        'query': 0x1
      };

    function cVO(cVD) {
      var cVF, cVH = ('undefined' == typeof window ? void 0x0 === cVE ? 'undefined' == typeof self ? {} : self : cVE : window)['location'] || {},
        cVI = {},
        cVJ = typeof(cVD = cVD || cVH);
      if ('blob:' === cVD['protocol']) cVI = new cVX(unescape(cVD['pathname']), {});
      else if ('string' == cVJ)
        for (cVF in cVI = new cVX(cVD, {}), cVM) delete cVI[cVF];
      else if ('object' == cVJ) {
        for (cVF in cVD) cVF in cVM || (cVI[cVF] = cVD[cVF]);
        void 0x0 === cVI['slashes'] && (cVI['slashes'] = cVK['test'](cVD['href']));
      }
      return cVI;
    }

    function cVU(cVD) {
      var cVE = cVJ['exec'](cVD);
      return {
        'protocol': cVE[0x1] ? cVE[0x1]['toLowerCase']() : '',
        'slashes': !!cVE[0x2],
        'rest': cVE[0x3]
      };
    }

    function cVX(cVD, cVE, cVF) {
      if (!(this instanceof cVX)) return new cVX(cVD, cVE, cVF);
      var cVJ, cVK, cVM, cW4, cW5, cW6, cW7 = cVL['slice'](),
        cW8 = typeof cVE,
        cW9 = this,
        cWa = 0x0;
      for ('object' != cW8 && 'string' != cW8 && (cVF = cVE, cVE = null), cVF && 'function' != typeof cVF && (cVF = cVI['parse']), cVE = cVO(cVE), cVJ = !(cVK = cVU(cVD || ''))['protocol'] && !cVK['slashes'], cW9['slashes'] = cVK['slashes'] || cVJ && cVE['slashes'], cW9['protocol'] = cVK['protocol'] || cVE['protocol'] || '', cVD = cVK['rest'], cVK['slashes'] || (cW7[0x3] = [/(.*)/, 'pathname']); cWa < cW7['length']; cWa++) 'function' != typeof(cW4 = cW7[cWa]) ? (cVM = cW4[0x0], cW6 = cW4[0x1], cVM == cVM ? 'string' == typeof cVM ? ~(cW5 = cVD['indexOf'](cVM)) && ('number' == typeof cW4[0x2] ? (cW9[cW6] = cVD['slice'](0x0, cW5), cVD = cVD['slice'](cW5 + cW4[0x2])) : (cW9[cW6] = cVD['slice'](cW5), cVD = cVD['slice'](0x0, cW5))) : (cW5 = cVM['exec'](cVD)) && (cW9[cW6] = cW5[0x1], cVD = cVD['slice'](0x0, cW5['index'])) : cW9[cW6] = cVD, cW9[cW6] = cW9[cW6] || cVJ && cW4[0x3] && cVE[cW6] || '', cW4[0x4] && (cW9[cW6] = cW9[cW6]['toLowerCase']())) : cVD = cW4(cVD);
      cVF && (cW9['query'] = cVF(cW9['query'])), cVJ && cVE['slashes'] && '/' !== cW9['pathname']['charAt'](0x0) && ('' !== cW9['pathname'] || '' !== cVE['pathname']) && (cW9['pathname'] = function(cVD, cVE) {
        for (var cVF = (cVE || '/')['split']('/')['slice'](0x0, -0x1)['concat'](cVD['split']('/')), cVH = cVF['length'], cVI = cVF[cVH - 0x1], cVJ = !0x1, cVK = 0x0; cVH--;) '.' === cVF[cVH] ? cVF['splice'](cVH, 0x1) : '..' === cVF[cVH] ? (cVF['splice'](cVH, 0x1), cVK++) : cVK && (0x0 === cVH && (cVJ = !0x0), cVF['splice'](cVH, 0x1), cVK--);
        return cVJ && cVF['unshift'](''), ('.' === cVI || '..' === cVI) && cVF['push'](''), cVF['join']('/');
      }(cW9['pathname'], cVE['pathname'])), cVH(cW9['port'], cW9['protocol']) || (cW9['host'] = cW9['hostname'], cW9['port'] = ''), cW9['username'] = cW9['password'] = '', cW9['auth'] && (cW4 = cW9['auth']['split'](':'), cW9['username'] = cW4[0x0] || '', cW9['password'] = cW4[0x1] || ''), cW9['origin'] = cW9['protocol'] && cW9['host'] && 'file:' !== cW9['protocol'] ? cW9['protocol'] + '//' + cW9['host'] : 'null', cW9['href'] = cW9['toString']();
    }
    cVX['prototype'] = {
      'set': function(cVD, cVE, cVF) {
        var cVJ = this;
        switch (cVD) {
          case 'query':
            'string' == typeof cVE && cVE['length'] && (cVE = (cVF || cVI['parse'])(cVE)), cVJ[cVD] = cVE;
            break;
          case 'port':
            cVJ[cVD] = cVE, cVH(cVE, cVJ['protocol']) ? cVE && (cVJ['host'] = cVJ['hostname'] + ':' + cVE) : (cVJ['host'] = cVJ['hostname'], cVJ[cVD] = '');
            break;
          case 'hostname':
            cVJ[cVD] = cVE, cVJ['port'] && (cVE += ':' + cVJ['port']), cVJ['host'] = cVE;
            break;
          case 'host':
            cVJ[cVD] = cVE, /:\d+$/ ['test'](cVE) ? (cVE = cVE['split'](':'), cVJ['port'] = cVE['pop'](), cVJ['hostname'] = cVE['join'](':')) : (cVJ['hostname'] = cVE, cVJ['port'] = '');
            break;
          case 'protocol':
            cVJ['protocol'] = cVE['toLowerCase'](), cVJ['slashes'] = !cVF;
            break;
          case 'pathname':
          case 'hash':
            if (cVE) {
              var cVK = 'pathname' === cVD ? '/' : '#';
              cVJ[cVD] = cVE['charAt'](0x0) === cVK ? cVE : cVK + cVE;
            } else cVJ[cVD] = cVE;
            break;
          default:
            cVJ[cVD] = cVE;
        }
        for (var cVM, cVO = 0x0; cVO < cVL['length']; cVO++)(cVM = cVL[cVO])[0x4] && (cVJ[cVM[0x1]] = cVJ[cVM[0x1]]['toLowerCase']());
        return cVJ['origin'] = cVJ['protocol'] && cVJ['host'] && 'file:' !== cVJ['protocol'] ? cVJ['protocol'] + '//' + cVJ['host'] : 'null', cVJ['href'] = cVJ['toString'](), cVJ;
      },
      'toString': function(cVD) {
        cVD && 'function' == typeof cVD || (cVD = cVI['stringify']);
        var cVE, cVF = this,
          cVH = cVF['protocol'];
        cVH && ':' !== cVH['charAt'](cVH['length'] - 0x1) && (cVH += ':');
        var cVJ = cVH + (cVF['slashes'] ? '//' : '');
        return cVF['username'] && (cVJ += cVF['username'], cVF['password'] && (cVJ += ':' + cVF['password']), cVJ += '@'), cVJ += cVF['host'] + cVF['pathname'], (cVE = 'object' == typeof cVF['query'] ? cVD(cVF['query']) : cVF['query']) && (cVJ += '?' === cVE['charAt'](0x0) ? cVE : '?' + cVE), cVF['hash'] && (cVJ += cVF['hash']), cVJ;
      }
    }, cVX['extractProtocol'] = cVU, cVX['location'] = cVO, cVX['qs'] = cVI, cVD['exports'] = cVX;
  } ['call'](this, cVF(0x16)));
}, function(cWu, cWv, cWw) {
  'use strict';
  cWu['exports'] = function(cWu, cWv) {
    return cWv = cWv['split'](':')[0x0], !!(cWu = +cWu) && ('http' === cWv || 'ws' === cWv ? 0x50 !== cWu : 'https' === cWv || 'wss' === cWv ? 0x1bb !== cWu : 'ftp' === cWv ? 0x15 !== cWu : 'gopher' === cWv ? 0x46 !== cWu : 'file' !== cWv && 0x0 !== cWu);
  };
}, function(cWz, cWA, cWB) {
  'use strict';
  var cWC, cWD = Object['prototype']['hasOwnProperty'];

  function cWE(cWz) {
    return decodeURIComponent(cWz['replace'](/\+/g, '\x20'));
  }
  cWA['stringify'] = function(cWz, cWA) {
    cWA = cWA || '';
    var cWB, cWE, cWK = [];
    for (cWE in 'string' != typeof cWA && (cWA = '?'), cWz) cWD['call'](cWz, cWE) && (!(cWB = cWz[cWE]) && (null === cWB || cWB === cWC || isNaN(cWB)) && (cWB = ''), cWK['push'](encodeURIComponent(cWE) + '=' + encodeURIComponent(cWB)));
    return cWK['length'] ? cWA + cWK['join']('&') : '';
  }, cWA['parse'] = function(cWz) {
    for (var cWA, cWB = /([^=?&]+)=?([^&]*)/g, cWC = {}; cWA = cWB['exec'](cWz);) {
      var cWD = cWE(cWA[0x1]),
        cWQ = cWE(cWA[0x2]);
      cWD in cWC || (cWC[cWD] = cWQ);
    }
    return cWC;
  };
}, function(cWR, cWS, cWT) {
  var cWU = cWT(0x5c),
    cWV = cWR['exports'];
  cWV['active'] = !0x0, cWV['menu2'] = 'rcY';
  var cWW = !0x0;
  cWV['isMobile'] = !0x1, cWV['toggleMenu'] = function(cWR) {
    menuHolder['style']['display'] = cWR ? 'block' : 'none', speakerDisplay['style']['display'] = cWR ? 'none' : 'block', chatHolder['style']['bottom'] = (cWR ? 0x14 : 0x8c) + 'px', voiceDisplay['style']['bottom'] = (cWR ? 0x12 : 0x87) + 'px', supportMapCreator['style']['display'] = 'none', cWV['toggleMenuHider'](cWR), cWR && (endUI['style']['display'] = 'none', instructionHolder['style']['display'] = 'block', 'block' != windowHolder['style']['display'] && (baseLinks['style']['display'] = 'block')), cWV['active'] = !0x0;
  }, cWV['hideUI'] = function() {
    cWV['toggleMenu'](!0x1), inGameUI['style']['display'] = 'none', overlay['style']['display'] = 'none', vignette['style']['display'] = 'none', spectateUI['style']['display'] = 'none', aimRecticle['style']['display'] = 'none', instructionHolder['style']['display'] = 'none', baseLinks['style']['display'] = 'none', chatHolder['style']['bottom'] = '20px', voiceDisplay['style']['bottom'] = '18px', speakerDisplay['style']['right'] = '20px', purchaseHolder['style']['display'] = 'none', consentBlock['style']['display'] = 'none', cWV['active'] = !0x1;
  }, cWV['hideDiscon'] = function() {
    chatHolder['style']['display'] = 'none', voiceDisplay['style']['display'] = 'none', speakerDisplay['style']['display'] = 'none', purchaseHolder['style']['display'] = 'none';
  }, cWV['showEndScreen'] = function() {
    endTable['style']['display'] = 'none', matchVoteHolder['style']['display'] = 'none', teamTotal0['style']['display'] = 'none', teamTotal1['style']['display'] = 'none', endUI['style']['display'] = null, cWV['hideUI']();
  }, cWV['toggleWindow'] = function(cWR) {
    supportMapCreator['style']['display'] = 'none', windowHolder['style']['display'] = cWR ? 'block' : 'none', baseLinks['style']['display'] = cWR ? 'none' : 'block', cWV['updatePlayInstructions']();
  }, cWV['toggleMenuHider'] = function(cWR) {
    menuHider['style']['display'] = cWR ? 'block' : 'none', uiBase['classList']['toggle']('onMenu', cWR), gameNameHolder['style']['display'] = cWR ? null : 'none', spectButton['style']['display'] = cWW && cWR ? null : 'none', supportMapCreator['style']['display'] = 'none', cWR && (spinUI['style']['display'] = 'none', respinUI['style']['display'] = 'none');
  }, cWV['setShowSpect'] = function(cWR) {
    cWW = cWR, spectButton['style']['display'] = cWR ? null : 'none';
  }, cWV['setShowSelTeam'] = function(cWR) {
    teamSelector['style']['display'] = cWR ? 'block' : 'none';
  }, cWV['showError'] = function(cWR) {
    cWV['toggleMenu'](!0x0), instructions['innerHTML'] = cWR;
  }, cWV['toggleGameUI'] = function(cWR) {
    var cWS = cWR && !window['spectating'];
    spectateUI['style']['display'] = window['spectating'] && cWR ? 'block' : 'none', window['spectating'] && (propInstruct['style']['display'] = 'none'), mobileUI['style']['display'] = cWR && cWV['isMobile'] ? 'block' : 'none', gameMessage['style']['display'] = cWS ? 'block' : 'none', topLeftHolder['style']['display'] = cWS ? 'block' : 'none', topRight['style']['display'] = cWR ? 'block' : 'none', reloadMsg['style']['display'] = cWS ? 'block' : 'none', bottomLeftHolder['style']['display'] = cWS ? 'block' : 'none', weaponDisplay['style']['display'] = cWS ? 'block' : 'none', bottomRight['style']['display'] = cWS ? 'block' : 'none', killCardHolder['style']['display'] = cWR ? 'none' : 'block', speakerDisplay['style']['right'] = (cWR ? 0x17c : 0x14) + 'px', chatHolder['style']['bottom'] = (cWS ? 0x8c : 0x14) + 'px', voiceDisplay['style']['bottom'] = (cWS ? 0x87 : 0x12) + 'px', overlay['style']['display'] = cWS ? 'block' : 'none', vignette['style']['display'] = cWS ? 'block' : 'none', uiBase['classList']['toggle']('onGame', cWR);
  }, cWV['toggleControlUI'] = function(cWR) {
    window['loading'] && (cWR = !0x1), spectateUI['style']['display'] = window['spectating'] && cWR && !cWV['hideGameUI'] ? 'block' : 'none', inGameUI['style']['display'] = cWR && cWV['active'] && !cWV['hideGameUI'] ? 'block' : 'none', mobileUI['style']['display'] = cWR && cWV['active'] && cWV['isMobile'] ? 'block' : 'none', overlay['style']['display'] = cWR && cWV['active'] && !cWV['hideGameUI'] ? 'block' : 'none', vignette['style']['display'] = cWR && cWV['active'] && !cWV['hideGameUI'] ? 'block' : 'none', aimRecticle['style']['display'] = cWR && cWV['active'] ? 'block' : 'none', instructionHolder['style']['display'] = !cWR && cWV['active'] ? 'block' : 'none', aHolder['style']['display'] = cWR ? 'none' : 'block', toggleAd(!cWR), infoHolder['style']['display'] = cWR ? 'none' : null, chatHolder['style']['bottom'] = (cWR && !window['spectating'] && 'block' == bottomLeftHolder['style']['display'] ? 0x8c : 0x14) + 'px', voiceDisplay['style']['bottom'] = (cWR && !window['spectating'] && 'block' == bottomLeftHolder['style']['display'] ? 0x87 : 0x12) + 'px', speakerDisplay['style']['display'] = cWR && cWV['active'] ? 'block' : 'none', endUI['style']['display'] && (menuHolder['style']['display'] = cWR ? 'none' : 'block', cWV['toggleMenuHider'](!cWR));
  };
  cWV['JqzpoilovNjNyfwXiNeVftXVaWYybxXh'] = function(cWR, cWS) {
    cWU['crosshairOpacity'] = cWS, cWU['crosshairScale'] = cWR;
  };
}, function(cX8, cX9, cXa) {
  const cXb = cXa(0x8);
  cX8['exports'] = function() {
    var cX8;
    this['divs'] = [], this['update'] = function(cX9) {
      for (var cXa = this['divs']['length'] - 0x1; 0x0 <= cXa; --cXa)
        if (0x0 < (cX8 = this['divs'][cXa])['delay']) cX8['delay'] -= cX9, 0x0 >= cX8['delay'] && (cX8['style']['display'] = 'inline-block');
        else {
          if (cX8['scale'] > cX8['minScale'] && (cX8['scale'] -= cX8['scaleSpeed'] * cX9, cX8['scale'] <= cX8['minScale'] && (cX8['scale'] = cX8['minScale']), cX8['style']['fontSize'] = cX8['scale'] + 'px'), cX8['scaleSpd'] && (cX8['startS'] += cX8['scaleSpd'] * cX9, cX8['style']['width'] = cX8['startS'] + 'px', cX8['style']['height'] = cX8['startS'] + 'px'), cX8['life'] -= cX9, 0x0 >= cX8['life']) {
            cX8['style']['display'] = 'none';
            var cXf = cX8['callback'];
            this['divs']['splice'](cXa, 0x1), cXf && cXf();
          }
          if (cX8['fade'] && cX8['life'] <= cX8['fade'] && (cX8['style']['opacity'] = cX8['life'] / cX8['fade']), cX8['srcA'] && cX8['srcA']['cnt'] && cX8['maxLife'] - cX8['life'] <= cX8['srcA']['tim']) {
            var cXg = Math['floor'](cX8['srcA']['cnt'] * ((cX8['maxLife'] - cX8['life']) / cX8['srcA']['tim']));
            cX8['src'] = cXb['assetsUrl']('/textures/' + cX8['srcA']['src'] + '_' + cXg + '.png');
          }
        }
    }, this['animateText'] = function(cX8, cX9, cXa, cXb, cXl, cXm, cXn, cXo) {
      0x0 > this['divs']['indexOf'](cX8) && this['divs']['push'](cX8), cX8['delay'] = cXn, cXn || (cX8['style']['display'] = 'inline-block'), cX8['style']['fontSize'] = cXa + 'px', cX8['scale'] = cXa, cX8['minScale'] = cXb ? 0.4 * cXa : cXa, cX8['innerHTML'] = cX9, cX8['scaleSpeed'] = cXb, cX8['life'] = cXl, cX8['fade'] = cXm, cX8['style']['opacity'] = 0x1, cX8['callback'] = cXo;
    }, this['animateDiv'] = function(cX8, cX9, cXa, cXs, cXt, cXu) {
      0x0 > this['divs']['indexOf'](cX8) && this['divs']['push'](cX8), cX8['style']['display'] = 'block', cX8['life'] = cX9, cX8['maxLife'] = cX9, cX8['srcA'] = cXu, cXu && (cX8['src'] = cXb['assetsUrl']('/textures/' + cXu['src'] + '_0.png')), cX8['style']['opacity'] = 0x1, cX8['fade'] = cXa, cXs && (cX8['style']['width'] = cXs + 'px', cX8['style']['height'] = cXs + 'px', cX8['startS'] = cXs, cX8['scaleSpd'] = cXt);
    }, this['reset'] = function() {
      for (var cX8 = 0x0; cX8 < this['divs']['length']; ++cX8) this['divs'][cX8]['style']['display'] = 'none';
      this['divs']['length'] = 0x0;
    };
  };
}, function(cXw, cXx, cXy) {
  const cXz = cXy(0x7)['apiURL'],
    cXA = {
      'apiRequest'(cXw, cXx, cXy = {}) {
        for (let cXw in cXy) null == cXy[cXw] && delete cXy[cXw];
        let cXA = new URLSearchParams(cXy)['toString']();
        return fetch('' + cXz + cXx + (cXA ? '?' + cXA : ''))['then'](cXw => cXw['json']())['catch'](cXx => cXw(cXx, null))['then'](cXx => cXw(null, cXx));
      },
      'listMaps'(cXw, cXx, cXy, cXz) {
        this['apiRequest'](cXz, '/maps', {
          'index': cXw,
          'pos': cXx,
          'accountId': cXy
        });
      },
      'listMods'(cXw, cXx, cXy, cXz) {
        this['apiRequest'](cXz, '/mods', {
          'index': cXw,
          'pos': cXx,
          'accountId': cXy
        });
      },
      'searchMap'(cXw, cXx) {
        this['apiRequest'](cXx, '/search', {
          'type': 'map',
          'val': cXw
        });
      },
      'getMapPreset'(cXw, cXx) {
        this['apiRequest'](function(cXy, cXz) {
          cXx(cXw, (cXz || {})['da']);
        }, '/config', {
          'mn': cXw
        });
      },
      'searchMod'(cXw, cXx) {
        this['apiRequest'](cXx, '/search', {
          'type': 'mod',
          'val': cXw
        });
      }
    };
  cXw['exports'] = cXA;
}, function(cXZ, cY0, cY1) {
  cY1(0x4);
  var cY2 = cY1(0x66);
  cXZ['exports'] = function(cXZ, cY0, cY1, cY6, cY7, cY8, cY9) {
    function cYa(cXZ, cY0) {
      return {
        'identifier': cXZ['identifier'],
        'pageX': cXZ['pageX'],
        'pageY': cXZ['pageY'],
        'screenX': cXZ['screenX'],
        'screenY': cXZ['screenY'],
        'callback': cY0
      };
    }

    function cYd(cXZ) {
      for (var cY0 = 0x0; cY0 < cYS['length']; cY0++)
        if (cYS[cY0]['identifier'] == cXZ) return cY0;
      return -0x1;
    }

    function cYg(cXZ, cY0) {
      if (cYp['idleTimer'] = 0x0, cYp['keys'])
        if (cY0 && cYp['keys'][cXZ] !== cY0 && null != cYp['inputChanger']) cYp['moveKeys'][cYp['inputChanger']] ? cYp['moveKeys'][cYp['inputChanger']] = cXZ : cYp['streakKeys'][cYp['inputChanger'] - 0x12] ? cYp['streakKeys'][cYp['inputChanger'] - 0x12] = cXZ : cYp[cYp['inputChanger']] = cXZ, cYp['checkForScroll'](), saveVal('cont_' + cYp['inputChanger'], cXZ), showWindow(0x7, !0x0), cYp['inputChanger'] = null;
        else {
          if (cYp['keys'][cXZ] !== cY0 && cXZ == cYp['voiceKey'] && toggleRecord(cY0), !cYp['enabled']) return;
          cYp['keys'][cXZ] !== cY0 && (cYp['keys'][cXZ] = cY0, 0x0 <= cYp['moveKeys']['indexOf'](cXZ) && cYp['updateMoveDir'](), cY0 && (cXZ == cYp['swapKey'] ? cYp['WwsIiQndwtAiRAiDZgNxibdKLinxMKfJ'] = 0x1 : cXZ == cYp['meleeKey'] ? cYp['WwsIiQndwtAiRAiDZgNxibdKLinxMKfJ'] = 0x2 : cXZ == cYp['primKey'] ? cYp['WwsIiQndwtAiRAiDZgNxibdKLinxMKfJ'] = 0x3 : window['pressButton'](cXZ)));
        }
    }

    function cYj(cXZ, cY0) {
      (cZa = cY0 || cXZ['which'] || cXZ['keyCode']) == cYp['chatKey'] ? window['pressButton'](cZa) : document['activeElement'] != chatInput && (cYp['enabled'] && cXZ && cXZ['preventDefault'] && cXZ['preventDefault'](), cYg(cZa || 0x0, 0x1));
    }

    function cYm(cXZ, cY0) {
      cZa = cY0 || cXZ['which'] || cXZ['keyCode'], cYp['enabled'] && cXZ && cXZ['preventDefault'] && cXZ['preventDefault'](), cYg(cZa || 0x0, 0x0);
    }
    var cYp = this;
    if (this['UsePointerLock'] = !0x0, this['camOffset'] = !0x1, this['camRot'] = !0x0, this['isMobile'] = function() {
        if (navigator['userAgent']['match'](/Android/i) || navigator['userAgent']['match'](/webOS/i) || navigator['userAgent']['match'](/iPhone/i) || navigator['userAgent']['match'](/iPad/i) || navigator['userAgent']['match'](/iPod/i) || navigator['userAgent']['match'](/BlackBerry/i) || navigator['userAgent']['match'](/Windows Phone/i)) return !0x0;
      }, this['isMobile']()) {
      cY1['isMobile'] = !0x0;
      var cYq = nipplejs['create']({
        'zone': document['getElementById']('mobileJoystick'),
        'size': 0x64,
        'mode': 'static',
        'color': 'red'
      });
      cYq['on']('move', function(cXZ, cY0) {
        var cY1 = cY0['direction'];
        cY1 && ('left' == cY1['x'] ? (cYj(null, cYp['moveKeys'][0x2]), cYm(null, cYp['moveKeys'][0x3])) : 'right' == cY1['x'] && (cYj(null, cYp['moveKeys'][0x3]), cYm(null, cYp['moveKeys'][0x2])), 'up' == cY1['y'] ? (cYj(null, cYp['moveKeys'][0x0]), cYm(null, cYp['moveKeys'][0x1])) : 'down' == cY1['y'] && (cYj(null, cYp['moveKeys'][0x1]), cYm(null, cYp['moveKeys'][0x0])));
      }), cYq['on']('end', function() {
        cYm(null, cYp['moveKeys'][0x0]), cYm(null, cYp['moveKeys'][0x1]), cYm(null, cYp['moveKeys'][0x2]), cYm(null, cYp['moveKeys'][0x3]);
      });
    }
    this['locklessChange'] = function(cXZ) {
      cYp['enabled'] = cXZ, (cY9['connected'] || cY7['singlePlayer']) && (cYp['enabled'] && enterGame(), cY1['toggleControlUI'](cYp['enabled']));
    }, this['gamepad'] = new cY2();
    var cYv = cXZ['renderer']['domElement'];
    if (this['hasPointerlock'] = 'pointerLockElement' in document || 'mozPointerLockElement' in document || 'webkitPointerLockElement' in document, this['hasPointerlock']) {
      cYv['requestPointerLock'] = cYv['requestPointerLock'] || cYv['mozRequestPointerLock'] || cYv['webkitRequestPointerLock'];
      var cYw = function() {
        cYp['enabled'] = document['pointerLockElement'] === cYv || document['mozPointerLockElement'] === cYv || document['webkitPointerLockElement'] === cYv, (cY9['connected'] || cY7['singlePlayer']) && (cYp['enabled'] && enterGame(), cY1['toggleControlUI'](cYp['enabled']), !cYp['enabled'] && cYp['resetKeys']());
      };
      document['addEventListener']('pointerlockchange', cYw, !0x1), document['addEventListener']('mozpointerlockchange', cYw, !0x1), document['addEventListener']('webkitpointerlockchange', cYw, !0x1);
    }
    this['isn'] = 0x0, this['tmpInpts'] = [], this['getISN'] = function() {
      return this['isn']++;
    }, this['sensMltXCntrl'] = 0x1, this['sensMltYCntrl'] = 0x1, this['sensAimMltXCntrl'] = 0x1, this['sensAimMltYCntrl'] = 0x1, this['invertYCntrl'] = !0x1, this['deadZoneR'] = 0.25, this['deadZoneL'] = 0.3, this['vibration'] = !0x0, this['triggerThres'] = 0.1, this['masterLock'] = !0x0, this['sensMltX'] = 0x1, this['sensMltY'] = 0x1, this['sensAimMltX'] = 0x1, this['sensAimMltY'] = 0x1, this['invertY'] = !0x1, this['locked'] = !0x1, this['enabled'] = !0x1, this['idleTimer'] = 0x0, cXZ['camera']['rotation']['set'](0x0, 0x0, 0x0), this['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma'] = new cY0['Object3D'](), this['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['add'](cXZ['camera']), this['object'] = new cY0['Object3D'](), this['object']['add'](this['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']), this['mouseX'] = 0x0, this['mouseY'] = 0x0;
    var cYx, cYy, cYz, cYA, cYB, cYC, cYD = Math['PI'] / 0x2,
      cYE = function(cY0, cY1) {
        !cYp['enabled'] || window['locked'] || window['noMouseInp'] || (cY0['preventDefault'] && cY0['preventDefault'](), cYp['idleTimer'] = 0x0, cYB = cY0['movementX'] || cY0['mozMovementX'] || cY0['webkitMovementX'] || 0x0, cYC = cY0['movementY'] || cY0['mozMovementY'] || cY0['webkitMovementY'] || 0x0, cYp['mouseX'] = cY0['clientX'], cYp['mouseY'] = cY0['clientY'], cYx = cYp['DlTaaFfwrOmQfbOcxyFAMyoNpXMyccbl'] ? cY1 ? cYp['sensAimMltXCntrl'] : cYp['sensAimMltX'] : cY1 ? cYp['sensMltXCntrl'] : cYp['sensMltX'], cYy = cY8['mouseSens'] * cYx * (cYp['target'] ? cY8['camChaseSen'] : 0x1) * (cXZ['camera']['fov'] / cXZ['fov']), cYz = cYp['DlTaaFfwrOmQfbOcxyFAMyoNpXMyccbl'] ? cY1 ? cYp['sensAimMltYCntrl'] : cYp['sensAimMltY'] : cY1 ? cYp['sensMltYCntrl'] : cYp['sensMltY'], cYA = cY8['mouseSens'] * cYz * (cYp['target'] ? cY8['camChaseSen'] : 0x1) * (cXZ['camera']['fov'] / cXZ['fov']), (window['spectating'] || cY7['map']['config']['camRot']) && (cYp['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['rotation']['x'] -= cYC * cYA * ((cY1 ? cYp['invertYCntrl'] : cYp['invertY']) ? -0x1 : 0x1), !cYp['unlockView'] && (cYp['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['rotation']['x'] = Math['max'](-cYD, Math['min'](cYD, cYp['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['rotation']['x']))), cYp['object']['rotation']['y'] -= cYB * cYy, cYp['yDr'] = cYp['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['rotation']['x'] % Math['PI2'], cYp['xDr'] = cYp['object']['rotation']['y'] % Math['PI2']));
      };
    cYv['addEventListener']('mousemove', cYE, !0x1);
    var cYH = function(cXZ) {
      if (!cYp['masterLock']) switch (cYp['enabled'] || cYp['toggle'](!0x0), document['activeElement'] == chatInput && chatInput['blur'](), cXZ['which']) {
        case 0x3:
          cYp['DlTaaFfwrOmQfbOcxyFAMyoNpXMyccbl'] = 0x1, window['spectating'] && window['spectMode'](0x1);
          break;
        default:
          0x3 < cXZ['which'] || 0x2 == cXZ['which'] ? (cXZ['preventDefault'] && cXZ['preventDefault'](), cYj(null, 0x2710 + cXZ['which'])) : (cYp['CLDmHUyBMgEkwmXbgiwcgYbnxzZttEVm'] = 0x1, window['spectating'] && window['spectMode'](-0x1));
      }
    };
    cYv['addEventListener']('mousedown', cYH, !0x1), window['addEventListener']('mousedown', function(cXZ) {
      cYp['enabled'] || (0x3 < cXZ['which'] || 0x2 == cXZ['which']) && (cXZ['preventDefault'] && cXZ['preventDefault'](), cYj(null, 0x2710 + cXZ['which']));
    }, !0x1);
    var cYK = function(cXZ) {
      if (!cYp['locked']) switch (cXZ['which']) {
        case 0x3:
          cYp['DlTaaFfwrOmQfbOcxyFAMyoNpXMyccbl'] = 0x0;
          break;
        default:
          0x3 < cXZ['which'] || 0x2 == cXZ['which'] ? (cXZ['preventDefault'] && cXZ['preventDefault'](), cYm(null, 0x2710 + cXZ['which'])) : cYp['CLDmHUyBMgEkwmXbgiwcgYbnxzZttEVm'] = 0x0;
      }
    };
    cYv['addEventListener']('mouseup', cYK, !0x1), window['addEventListener']('mouseup', function(cXZ) {
      cYp['enabled'] || (0x3 < cXZ['which'] || 0x2 == cXZ['which']) && (cXZ['preventDefault'] && cXZ['preventDefault'](), cYm(null, 0x2710 + cXZ['which']));
    }, !0x1), this['specSpeed'] = 0x1;
    var cYN = function(cXZ) {
        cXZ = window['event'] || cXZ;
        var cY0 = -Math['max'](-0x1, Math['min'](0x1, cXZ['wheelDelta'] || -cXZ['detail'])),
          cY1 = 0x0 < cY0 ? -0x1 : 0x1;
        return window['spectating'] && (window['spectTarget'] ? (cYp['followCamD'] -= 0x3 * cY1, cYp['followCamD'] < cY8['specMinD'] && (cYp['followCamD'] = cY8['specMinD']), cYp['followCamD'] > cY8['specMaxD'] && (cYp['followCamD'] = cY8['specMaxD'])) : (cYp['specSpeed'] += cY1, 0x1 > cYp['specSpeed'] && (cYp['specSpeed'] = 0x1), 0xa < cYp['specSpeed'] && (cYp['specSpeed'] = 0xa))), cYp['skipScroll'] ? cYp['skipScroll'] = !0x1 : cYp['MfNajsSAoIvKNKASGQqbYpReILXlEmcE'] = cY0, cYj(null, 0x4e20), !0x1;
      },
      cYO = function() {
        return null != cYp['inputChanger'] && (cYj(null, 0x4e20), cYm(null, 0x4e20)), !0x1;
      };
    cYv['addEventListener'] ? (cYv['addEventListener']('mousewheel', cYN, !0x1), cYv['addEventListener']('DOMMouseScroll', cYN, !0x1)) : myitem['attachEvent']('onmousewheel', cYN), window['addEventListener']('mousewheel', cYO, !0x1), window['addEventListener']('DOMMouseScroll', cYO, !0x1);
    var cYS = [];
    mobileUI['addEventListener']('touchstart', function(cXZ) {
      if (!cYp['masterLock']) {
        cYp['enabled'] || cYp['toggle'](!0x0), document['activeElement'] == chatInput && chatInput['blur'](), cXZ['preventDefault']();
        for (var cY0 = null, cY1 = null, cY2 = cXZ['changedTouches'], cY6 = 0x0; cY6 < cY2['length']; cY6++) 'mobileJump' == (cY0 = document['elementFromPoint'](cY2[cY6]['pageX'], cY2[cY6]['pageY']))['id'] ? (cYj(null, cYp['jumpKey']), cY1 = function() {
          cYm(null, cYp['jumpKey']);
        }) : 'mobileCrouch' == cY0['id'] ? (cYj(null, cYp['crouchKey']), cY1 = function() {
          cYm(null, cYp['crouchKey']);
        }) : 'mobileEsc' == cY0['id'] ? (cYp['toggle'](!0x1), cY1 = function() {}) : 'mobileShoot' == cY0['id'] ? (cYp['CLDmHUyBMgEkwmXbgiwcgYbnxzZttEVm'] = 0x1, window['spectating'] && window['spectMode'](-0x1), cY1 = function() {
          cYp['CLDmHUyBMgEkwmXbgiwcgYbnxzZttEVm'] = 0x0;
        }) : cY1 = cY0['id'], cYS['push'](cYa(cY2[cY6], cY1));
      }
    }, !0x1), mobileUI['addEventListener']('touchmove', function(cXZ) {
      if (!cYp['masterLock']) {
        cYp['enabled'] || cYp['toggle'](!0x0), cXZ['preventDefault']();
        for (var cY0, cY1 = cXZ['changedTouches'], cY2 = 0x0; cY2 < cY1['length']; cY2++) 0x0 <= (cY0 = cYd(cY1[cY2]['identifier'])) && !(cYS[cY0]['callback'] instanceof Function) && 'mobileUI' == cYS[cY0]['callback'] && cYp['fakeMouse'](0x2, 0.2 * (cY1[cY2]['screenX'] - cYS[cY0]['screenX']), 0.2 * (cY1[cY2]['screenY'] - cYS[cY0]['screenY']));
      }
    }, !0x1), mobileUI['addEventListener']('touchend', function(cXZ) {
      if (!cYp['locked'])
        for (var cY0, cY1 = cXZ['changedTouches'], cY2 = 0x0; cY2 < cY1['length']; cY2++) 0x0 <= (cY0 = cYd(cY1[cY2]['identifier'])) && (cYS[cY0]['callback'] instanceof Function && cYS[cY0]['callback'](), cYS['splice'](cY0, 0x1));
    }, !0x1), mobileUI['addEventListener']('touchcancel', function(cXZ) {
      cXZ['preventDefault']();
      for (var cY0, cY1 = cXZ['changedTouches'], cY2 = 0x0; cY2 < cY1['length']; cY2++) cY0 = cYd(cY1[cY2]['identifier']), cYS[cY0]['callback'] instanceof Function && cYS[cY0]['callback'](), cYS['splice'](cY0, 0x1);
    }, !0x1), this['xVel'] = 0x0, this['yVel'] = 0x0, this['zVel'] = 0x0;
    var cZa, cZb = new cY0['Vector3'](0x0, 0x0, 0x0);
    this['freeCam'] = function(cY0) {
      cZb['set'](0x0, 0x0, 0x0), this['keys'][this['moveKeys'][0x0]] && (cZb['z'] -= 0x1), this['keys'][this['moveKeys'][0x1]] && (cZb['z'] += 0x1), this['keys'][this['moveKeys'][0x2]] && (cZb['x'] -= 0x1), this['keys'][this['moveKeys'][0x3]] && (cZb['x'] += 0x1), this['keys'][0x51] && (cZb['y'] -= 0x1), this['keys'][0x45] && (cZb['y'] += 0x1), cZb['applyQuaternion'](cXZ['camera']['getWorldQuaternion']());
      var cY1 = (this['keys'][this['crouchKey']] ? 0.08 : 0.04) * this['specSpeed'] * cY0;
      cYp['object']['position']['add'](cZb['multiplyScalar'](cY1)), cXZ['camera']['position']['set'](0x0, 0x0, 0x0), cXZ['updateFrustum']();
    }, this['followCamD'] = cY8['specMinD'], this['followCam'] = function(cY0) {
      cZb['set'](cY0['x'], cY0['y'] + cY0['height'], cY0['z']), cYp['object']['position']['lerp'](cZb, 0.9), cXZ['camera']['position']['set'](0x0, 0x0, this['followCamD']), cXZ['camera']['updateProjectionMatrix'](), cXZ['updateFrustum']();
    }, this['setCamPosOff'] = function() {
      cXZ['camera']['updateMatrixWorld'](), cYp['object']['position']['setFromMatrixPosition'](cXZ['camera']['matrixWorld']), cXZ['camera']['position']['set'](0x0, 0x0, 0x0), cXZ['camera']['rotation']['set'](0x0, 0x0, 0x0);
    }, this['update'] = function(cY0) {
      if (this['target']) {
        var cY1 = cY6['getAngleDst'](this['object']['rotation']['y'], this['target']['yD']);
        this['object']['rotation']['y'] += cY1 * cY0 * cY8['camChaseTrn'], cY1 = cY6['getAngleDst'](cYp['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['rotation']['x'], this['target']['xD']), this['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['rotation']['x'] += cY1 * cY0 * cY8['camChaseTrn'], cY1 = cY6['qbtoGwrwXefhIwIrDQCoMjsMHMkikmsa'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], this['target']['x'], this['target']['y'], this['target']['z']) * cY0 * cY8['camChaseSpd'];
        var cY2 = cY6['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](this['object']['position']['z'], this['object']['position']['x'], this['target']['z'], this['target']['x']),
          cY7 = cY6['ohNUYdiAZNDsTlmoSykHBfRpQrqNVgqV'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], this['target']['x'], this['target']['y'], this['target']['z']);
        this['object']['position']['x'] -= cY1 * Math['sin'](cY2) * Math['cos'](cY7), this['object']['position']['y'] += cY1 * Math['sin'](cY7), this['object']['position']['z'] -= cY1 * Math['cos'](cY2) * Math['cos'](cY7), cXZ['updateFrustum']();
      }
    }, this['lfBPyrNTZKpidKiRDUvCDMZhNTbZOBnu'] = function(cXZ, cY0, cY1) {
      var cY2 = cY6['ohNUYdiAZNDsTlmoSykHBfRpQrqNVgqV'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], cXZ, cY0, cY1),
        cY7 = cY6['VtMNJNBdTxvDmhzzxfgBVcEoVXBQAUEM'](this['object']['position']['z'], this['object']['position']['x'], cY1, cXZ);
      this['target'] = {
        'xD': cY2,
        'yD': cY7,
        'x': cXZ + cY8['camChaseDst'] * Math['sin'](cY7) * Math['cos'](cY2),
        'y': cY0 - cY8['camChaseDst'] * Math['sin'](cY2),
        'z': cY1 + cY8['camChaseDst'] * Math['cos'](cY7) * Math['cos'](cY2)
      };
    }, this['frQqmsYwdTIjfJYpPkIYuUMQMPIzuRYR'] = function(cY0, cY1, cY2) {
      cYp['object']['position']['set'](cY0, cY1, cY2), cXZ['camera']['updateProjectionMatrix'](), cXZ['updateFrustum']();
    }, this['cWxXNQhHAKcpjdUGondTNGzFskdKFMog'] = function(cY0, cY1, cY2) {
      cXZ['camera']['rotation']['y'] = cY0, cXZ['camera']['rotation']['x'] = cY1, cXZ['camera']['rotation']['z'] = cY2;
    }, this['ajjZCddsWoycUDCSjWqbqzJBwkGINRzB'] = !0x0, this['jumpKey'] = parseInt(getSavedVal('cont_jumpKey') || 0x20), this['crouchKey'] = parseInt(getSavedVal('cont_crouchKey') || 0x10), this['meleeKey'] = parseInt(getSavedVal('cont_meleeKey') || 0x51), this['swapKey'] = parseInt(getSavedVal('cont_swapKey') || 0x45), this['primKey'] = parseInt(getSavedVal('cont_primKey') || 0x54), this['reloadKey'] = parseInt(getSavedVal('cont_reloadKey') || 0x52), this['sprayKey'] = parseInt(getSavedVal('cont_sprayKey') || 0x46), this['inspKey'] = parseInt(getSavedVal('cont_inspKey') || 0x58), this['aimKey'] = parseInt(getSavedVal('cont_aimKey') || 0x43), this['shootKey'] = parseInt(getSavedVal('cont_shootKey') || -0x1), this['chatKey'] = parseInt(getSavedVal('cont_chatKey') || 0xd), this['voiceKey'] = parseInt(getSavedVal('cont_voiceKey') || 0x56), this['listKey'] = parseInt(getSavedVal('cont_listKey') || 0x9), this['interactKey'] = parseInt(getSavedVal('cont_interactKey') || 0x47), this['interactSecKey'] = parseInt(getSavedVal('cont_interactSecKey') || 0x48), this['dropKey'] = parseInt(getSavedVal('cont_dropKey') || 0x5a), this['wepVisKey'] = parseInt(getSavedVal('cont_wepVisKey') || -0x1), this['streakKeys'] = [parseInt(getSavedVal('cont_18') || 0x31), parseInt(getSavedVal('cont_19') || 0x32), parseInt(getSavedVal('cont_20') || 0x33), parseInt(getSavedVal('cont_21') || 0x34)], this['moveKeys'] = [parseInt(getSavedVal('cont_0') || 0x57), parseInt(getSavedVal('cont_1') || 0x53), parseInt(getSavedVal('cont_2') || 0x41), parseInt(getSavedVal('cont_3') || 0x44)], this['moveDirs'] = [
      [0x0, -0x1],
      [0x0, 0x1],
      [-0x1, 0x0],
      [0x1, 0x0]
    ], this['checkForScroll'] = function() {
      for (var cXZ = ['jumpKey', 'crouchKey', 'meleeKey', 'swapKey', 'primKey', 'reloadKey', 'sprayKey', 'inspKey', 'aimKey', 'shootKey', 'chatKey', 'voiceKey', 'listKey', 'interactKey', 'interactSecKey', 'dropKey', 'wepVisKey'], cY0 = 0x0; cY0 < cXZ['length']; cY0++)
        if (0x4e20 == cYp[cXZ[cY0]]) return void(cYp['ajjZCddsWoycUDCSjWqbqzJBwkGINRzB'] = !0x1);
      return 0x0 <= cYp['streakKeys']['indexOf'](0x4e20) || 0x0 <= cYp['moveKeys']['indexOf'](0x4e20) ? void(cYp['ajjZCddsWoycUDCSjWqbqzJBwkGINRzB'] = !0x1) : void(cYp['ajjZCddsWoycUDCSjWqbqzJBwkGINRzB'] = !0x0);
    }, this['checkForScroll'](), this['export'] = function() {
      for (var cXZ = {}, cY0 = ['jumpKey', 'crouchKey', 'meleeKey', 'swapKey', 'primKey', 'reloadKey', 'sprayKey', 'inspKey', 'aimKey', 'shootKey', 'chatKey', 'voiceKey', 'listKey', 'interactKey', 'interactSecKey', 'dropKey', 'wepVisKey', 'streakKeys', 'moveKeys'], cY1 = 0x0; cY1 < cY0['length']; cY1++) cXZ[cY0[cY1]] = cYp[cY0[cY1]];
      return cXZ;
    }, this['updateMoveDir'] = function() {
      for (var cXZ = 0x0, cY0 = 0x0, cY1 = 0x0; cY1 < cYp['moveKeys']['length']; ++cY1) cYp['keys'][cYp['moveKeys'][cY1]] && (cXZ += cYp['moveDirs'][cY1][0x0], cY0 += cYp['moveDirs'][cY1][0x1]);
      this['moveDir'] = 0x0 == cXZ && 0x0 == cY0 ? null : Math['atan2'](cY0, cXZ);
    }, window['addEventListener']('keydown', cYj, !0x1), window['addEventListener']('keyup', cYm, !0x1), this['mapping'] = {
      'button_1': {
        'KEY': 'jumpKey'
      },
      'button_2': {
        'KEY': 'crouchKey'
      },
      'button_3': {
        'KEY': 'reloadKey'
      },
      'shoulder_bottom_left': {
        'KEY': 'aimKey'
      },
      'button_4': {
        'KEY': 'swapKey'
      },
      'shoulder_top_left': {
        'KEY': 'swapKey'
      },
      'shoulder_top_right': {
        'KEY': 'meleeKey'
      },
      'shoulder_bottom_right': {
        'THRES': !0x0,
        'MOUSE': !0x0
      },
      'select': {
        'KEY': 'listKey'
      },
      'd_pad_up': {
        'KEY': 'voiceKey'
      },
      'd_pad_down': {
        'KEY': 'sprayKey'
      },
      'd_pad_left': {
        'KEY': 'interactKey'
      },
      'd_pad_right': {
        'KEY': 'dropKey'
      }
    }, this['gamepad']['on'](['press', 'hold', 'release'], Object['keys'](this['mapping']), function(cXZ) {
      'press' == cXZ['type'] ? cYp['mapping'][cXZ['button']]['MOUSE'] && (cXZ['value'] >= cYp['triggerThres'] || !cYp['mapping'][cXZ['button']]['THRES']) ? cYp['fakeMouse'](0x0) : cYp['mapping'][cXZ['button']]['KEY'] && cYj(null, cYp[cYp['mapping'][cXZ['button']]['KEY']]) : 'release' == cXZ['type'] ? cYp['mapping'][cXZ['button']]['MOUSE'] ? cYp['fakeMouse'](0x1) : cYm(null, cYp[cYp['mapping'][cXZ['button']]['KEY']]) : 'hold' == cXZ['type'] && cYp['mapping'][cXZ['button']]['THRES'] && (cXZ['value'] >= cYp['triggerThres'] ? cYp['fakeMouse'](0x0) : cYp['fakeMouse'](0x1));
    }), this['gamepad']['on']('hold', 'stick_axis_left', function(cXZ) {
      cXZ['value'][0x1] <= -cYp['deadZoneL'] ? (cYm(null, cYp['moveKeys'][0x1]), cYj(null, cYp['moveKeys'][0x0])) : cYm(null, cYp['moveKeys'][0x0]), cXZ['value'][0x1] >= cYp['deadZoneL'] ? (cYm(null, cYp['moveKeys'][0x0]), cYj(null, cYp['moveKeys'][0x1])) : cYm(null, cYp['moveKeys'][0x1]), cXZ['value'][0x0] <= -cYp['deadZoneL'] ? (cYm(null, cYp['moveKeys'][0x3]), cYj(null, cYp['moveKeys'][0x2])) : cYm(null, cYp['moveKeys'][0x2]), cXZ['value'][0x0] >= cYp['deadZoneL'] ? (cYm(null, cYp['moveKeys'][0x2]), cYj(null, cYp['moveKeys'][0x3])) : cYm(null, cYp['moveKeys'][0x3]);
    }), this['gamepad']['on']('release', 'stick_axis_left', function() {
      cYm(null, cYp['moveKeys'][0x0]), cYm(null, cYp['moveKeys'][0x1]), cYm(null, cYp['moveKeys'][0x2]), cYm(null, cYp['moveKeys'][0x3]);
    }), this['gamepad']['on']('hold', 'stick_axis_right', function(cXZ) {
      cYp['fakeMouse'](0x2, cYp['applyDeadzone'](cXZ['value'][0x0], cYp['deadZoneR']), cYp['applyDeadzone'](cXZ['value'][0x1], cYp['deadZoneR']), 0x0, !0x0);
    }), this['gamepad']['on']('press', 'start', function() {
      cYp['toggle'](!cYp['enabled']);
    }), this['applyDeadzone'] = function(cXZ, cY0) {
      let cY1 = (Math['abs'](cXZ) - cY0) / (0x1 - cY0);
      return 0x0 > cY1 && (cY1 = 0x0), cY1 * (0x0 < cXZ ? 0x1 : -0x1);
    }, this['OoNXnZVeaTvlrXsqGFUDoUswGgCDzPdX'] = function(cXZ, cY0 = 0x0) {
      0x0 == cY0 && cYj(null, cXZ), 0x1 == cY0 && cYm(null, cXZ);
    };
    var cZK = {
      'movementX': 0x0,
      'movementY': 0x0,
      'which': 0x0
    };
    this['fakeMouse'] = function(cXZ = 0x0, cY0 = 0x0, cY1 = 0x0, cY2 = 0x0, cY6) {
      cZK['movementX'] = cY0, cZK['movementY'] = cY1, cZK['which'] = cY2, 0x0 == cXZ && cYH(cZK), 0x1 == cXZ && cYK(cZK), 0x2 == cXZ && cYE(cZK, cY6);
    }, this['toggle'] = function(cXZ) {
      this['locked'] || this['masterLock'] || ('block' == windowHolder['style']['display'] ? cXZ && cY1['toggleWindow'](!0x1, this['gamepad']['_connected']) : cYp['UsePointerLock'] ? cXZ ? cYv['requestPointerLock']() : document['exitPointerLock']() : this['locklessChange'](cXZ));
    }, this['disable'] = function() {
      cYp['toggle'](!0x1), cYp['locked'] = !0x0;
    }, this['reset'] = function() {
      this['CLDmHUyBMgEkwmXbgiwcgYbnxzZttEVm'] = 0x0, this['DlTaaFfwrOmQfbOcxyFAMyoNpXMyccbl'] = 0x0, this['keys'] = {}, this['tmpInpts']['length'] = 0x0, this['WwsIiQndwtAiRAiDZgNxibdKLinxMKfJ'] = 0x0, this['MfNajsSAoIvKNKASGQqbYpReILXlEmcE'] = 0x0, this['xDr'] = 0x0, this['yDr'] = 0x0, this['isn'] = 0x0, this['moveDir'] = null, this['skipScroll'] = !0x1, this['inputChanger'] = null, this['target'] = null, this['locked'] = !0x1, cYp['aXUlBRVJkBBXLsekorYVEmtJrNsOdOma']['rotation']['x'] = 0x0, cYp['object']['rotation']['y'] = 0x0, cXZ['camera']['rotation']['set'](0x0, 0x0, 0x0);
    }, this['resetKeys'] = function() {
      cYp['CLDmHUyBMgEkwmXbgiwcgYbnxzZttEVm'] = 0x0, cYp['DlTaaFfwrOmQfbOcxyFAMyoNpXMyccbl'] = 0x0, cYp['keys'] = {}, cYp['updateMoveDir']();
    };
  };
}, function(cZR, cZS) {
  cZR['exports'] = function() {
    void 0x0 !== window['navigator']['getGamepads'] || window['navigator']['webkitGetGamepads'];
    var cZR = window['requestAnimationFrame'] || window['webkitRequestAnimationFrame'] || window['mozRequestAnimationFrame'] || null,
      cZS = window['cancelAnimationFrame'] || window['webkitCancelAnimationFrame'] || window['mozCancelAnimationFrame'] || null;
    this['_connected'] = !0x1, this['_gamepad'] = null, this['_events'] = {
      'gamepad': {},
      'axes': {}
    }, this['_keyMapping'] = {
      'gamepad': {
        'button_1': 0x0,
        'button_2': 0x1,
        'button_3': 0x2,
        'button_4': 0x3,
        'shoulder_top_left': 0x4,
        'shoulder_top_right': 0x5,
        'shoulder_bottom_left': 0x6,
        'shoulder_bottom_right': 0x7,
        'select': 0x8,
        'start': 0x9,
        'stick_button_left': 0xa,
        'stick_button_right': 0xb,
        'd_pad_up': 0xc,
        'd_pad_down': 0xd,
        'd_pad_left': 0xe,
        'd_pad_right': 0xf
      },
      'axes': {
        'stick_axis_left': [0x0, 0x2],
        'stick_axis_right': [0x2, 0x4]
      }
    }, this['_threshold'] = 0.3, this['_listeners'] = [];
    var cZV = this;
    this['_handleGamepadConnected'] = function(cZS) {
      cZV['_connected'] || (cZV['_connected'] = !0x0, cZV['_gamepad'] = cZS['gamepad'], cZV['_events']['gamepad'] = {}, cZV['_events']['axes'] = {}, cZV['_handleGamepadEventListener'](cZS['gamepad']), cZV['_handleGamepadAxisEventListener'](cZS['gamepad']), cZV['_requestAnimation'] = cZR(cZV['_loop']['bind'](cZV)));
    }, this['_handleGamepadDisconnected'] = function() {
      cZS(cZV['_requestAnimation']), cZV['_requestAnimation'] = null, cZV['_connected'] = !0x1, cZV['_events']['gamepad'] = null, cZV['_events']['axes'] = null, cZV['_gamepad'] = null;
    }, this['_handleGamepadEventListener'] = function(cZR) {
      var cZS = cZV;
      cZR && cZR['connected'] && cZR['buttons']['forEach'](function(cZR, cZV) {
        var d01 = function(cZR, cZS) {
          var cZV = [];
          return Object['keys'](cZS)['forEach'](function(d01) {
            cZS[d01] === cZR ? cZV['push'](d01) : Array['isArray'](cZS[d01]) && -0x1 !== cZS[d01]['indexOf'](cZR) && cZV['push'](d01);
          }), cZV;
        }(cZV, cZS['_keyMapping']['gamepad']);
        d01 && d01['forEach'](function(cZV) {
          cZR['pressed'] ? (!cZS['_events']['gamepad'][cZV] && (cZS['_events']['gamepad'][cZV] = {
            'pressed': !0x0,
            'hold': !0x1,
            'released': !0x1
          }), cZS['_events']['gamepad'][cZV]['value'] = cZR['value']) : !cZR['pressed'] && cZS['_events']['gamepad'][cZV] && (cZS['_events']['gamepad'][cZV]['released'] = !0x0, cZS['_events']['gamepad'][cZV]['hold'] = !0x1);
        });
      });
    }, this['_handleGamepadAxisEventListener'] = function(cZR) {
      var cZS = cZV;
      cZR && cZR['connected'] && Object['keys'](cZV['_keyMapping']['axes'])['forEach'](function(cZV) {
        var d0a = Array['prototype']['slice']['apply'](cZR['axes'], cZS['_keyMapping']['axes'][cZV]);
        Math['abs'](d0a[0x0]) > cZS['_threshold'] || Math['abs'](d0a[0x1]) > cZS['_threshold'] ? cZS['_events']['axes'][cZV] = {
          'pressed': !cZS['_events']['axes'][cZV],
          'hold': !!cZS['_events']['axes'][cZV],
          'released': !0x1,
          'value': d0a
        } : cZS['_events']['axes'][cZV] && (cZS['_events']['axes'][cZV] = {
          'pressed': !0x1,
          'hold': !0x1,
          'released': !0x0,
          'value': d0a
        });
      });
    }, this['_handleEvent'] = function(cZR, cZS) {
      cZS[cZR]['pressed'] ? (cZV['trigger']('press', cZR, cZS[cZR]['value']), cZS[cZR]['pressed'] = !0x1, cZS[cZR]['hold'] = !0x0) : cZS[cZR]['hold'] ? cZV['trigger']('hold', cZR, cZS[cZR]['value']) : cZS[cZR]['released'] && (cZV['trigger']('release', cZR, cZS[cZR]['value']), delete cZS[cZR]);
    }, this['_loop'] = function() {
      var cZS = navigator['getGamepads'] ? navigator['getGamepads']() : navigator['webkitGetGamepads'] ? navigator['webkitGetGamepads'] : [];
      if (!cZS) return cZV['_handleGamepadDisconnected']();
      cZV['_gamepad'] = cZS[0x0], cZS[0x0] && cZS[0x0]['connected'] && (cZV['_handleGamepadEventListener'](cZS[0x0]), cZV['_handleGamepadAxisEventListener'](cZS[0x0])), cZV['_events']['gamepad'] && Object['keys'](cZV['_events']['gamepad'])['forEach'](function(cZR) {
        cZV['_handleEvent'](cZR, cZV['_events']['gamepad']);
      }), cZV['_events']['axes'] && Object['keys'](cZV['_events']['axes'])['forEach'](function(cZR) {
        cZV['_handleEvent'](cZR, cZV['_events']['axes']);
      }), cZV['_requestAnimation'] && (cZV['_requestAnimation'] = cZR(cZV['_loop']['bind'](cZV)));
    }, this['on'] = function(cZR, cZS, d0i, d0j) {
      'string' == typeof cZR && cZR['match'](/\s+/) && (cZR = cZR['split'](/\s+/g)), 'string' == typeof cZS && cZS['match'](/\s+/) && (cZS = cZS['split'](/\s+/g)), Array['isArray'](cZR) ? cZR['forEach'](function(cZR) {
        cZV['on'](cZR, cZS, d0i, d0j);
      }) : Array['isArray'](cZS) ? cZS['forEach'](function(cZS) {
        cZV['on'](cZR, cZS, d0i, d0j);
      }) : cZV['_listeners']['push']({
        'type': cZR,
        'button': cZS,
        'callback': d0i,
        'options': d0j,
        'rumble': this['rumble']
      });
    }, this['off'] = function(cZR, cZS) {
      'string' == typeof cZR && cZR['match'](/\s+/) && (cZR = cZR['split'](/\s+/g)), 'string' == typeof cZS && cZS['match'](/\s+/) && (cZS = cZS['split'](/\s+/g)), Array['isArray'](cZR) ? cZR['forEach'](function(cZR) {
        cZV['off'](cZR, cZS);
      }) : Array['isArray'](cZS) ? cZS['forEach'](function(cZS) {
        cZV['off'](cZR, cZS);
      }) : cZV['_listeners'] = cZV['_listeners']['filter'](function(cZV) {
        return cZV['type'] !== cZR && cZV['button'] !== cZS;
      });
    }, this['trigger'] = function(cZR, cZS, d0t) {
      cZV['_listeners'] && cZV['_listeners']['forEach'](function(cZV) {
        cZV['type'] === cZR && cZV['button'] === cZS && cZV['callback']({
          'type': cZV['type'],
          'button': cZV['button'],
          'value': d0t,
          'event': cZV,
          'timestamp': Date['now']()
        });
      });
    }, this['rumble'] = function(cZR, cZS) {
      cZV['_gamepad'] && cZV['_gamepad']['vibrationActuator'] && 'dual-rumble' == cZV['_gamepad']['vibrationActuator']['type'] && cZV['_gamepad']['vibrationActuator']['playEffect'] && cZV['_gamepad']['vibrationActuator']['playEffect']('dual-rumble', {
        'startDelay': 0x0,
        'duration': cZR || 0xc8,
        'weakMagnitude': 0.5 * (cZS || 0.5),
        'strongMagnitude': cZS || 0.5
      });
    }, window['addEventListener']('MozGamepadConnected', this['_handleGamepadConnected'], !0x1), window['addEventListener']('MozGamepadDisconnected', this['_handleGamepadDisconnected'], !0x1), window['addEventListener']('gamepadconnected', this['_handleGamepadConnected'], !0x1), window['addEventListener']('gamepaddisconnected', this['_handleGamepadDisconnected'], !0x1);
  };
}, function(d0x, d0y, d0z) {
  const d0A = d0z(0x68)['words'],
    d0B = d0z(0x69)['array'];
  d0x['exports'] = class {
    constructor(d0x = {}) {
      Object['assign'](this, {
        'list': d0x['emptyList'] && [] || Array['prototype']['concat']['apply'](d0A, [d0B, d0x['list'] || []]),
        'exclude': d0x['exclude'] || [],
        'placeHolder': d0x['placeHolder'] || '*',
        'regex': d0x['regex'] || /[^a-zA-Z0-9|\$|\@]|\^/g,
        'replaceRegex': d0x['replaceRegex'] || /\w/g
      });
    } ['isProfane'](d0x) {
      return 0x0 < this['list']['filter'](d0y => {
        const d0z = new RegExp('\x5cb' + d0y['replace'](/(\W)/g, '\x5c$1') + '\x5cb', 'gi');
        return !this['exclude']['includes'](d0y['toLowerCase']()) && d0z['test'](d0x);
      })['length'] || !0x1;
    } ['replaceWord'](d0x) {
      return d0x['replace'](this['regex'], '')['replace'](this['replaceRegex'], this['placeHolder']);
    } ['clean'](d0x) {
      return d0x['split'](/\b/)['map'](d0x => this['isProfane'](d0x) ? this['replaceWord'](d0x) : d0x)['join']('');
    } ['addWords']() {
      let d0x = Array['from'](arguments);
      this['list']['push'](...d0x), d0x['map'](d0x => d0x['toLowerCase']())['forEach'](d0x => {
        this['exclude']['includes'](d0x) && this['exclude']['splice'](this['exclude']['indexOf'](d0x), 0x1);
      });
    } ['removeWords']() {
      this['exclude']['push'](...Array['from'](arguments)['map'](d0x => d0x['toLowerCase']()));
    }
  };
}, function(d0N) {
  d0N['exports'] = {
    'words': ['ahole', 'anus', 'ash0le', 'ash0les', 'asholes', 'ass', 'Ass\x20Monkey', 'Assface', 'assh0le', 'assh0lez', 'asshole', 'assholes', 'assholz', 'asswipe', 'azzhole', 'bassterds', 'bastard', 'bastards', 'bastardz', 'basterds', 'basterdz', 'Biatch', 'bitch', 'bitches', 'Blow\x20Job', 'boffing', 'butthole', 'buttwipe', 'c0ck', 'c0cks', 'c0k', 'Carpet\x20Muncher', 'cawk', 'cawks', 'Clit', 'cnts', 'cntz', 'cock', 'cockhead', 'cock-head', 'cocks', 'CockSucker', 'cock-sucker', 'crap', 'cum', 'cunt', 'cunts', 'cuntz', 'dick', 'dild0', 'dild0s', 'dildo', 'dildos', 'dilld0', 'dilld0s', 'dominatricks', 'dominatrics', 'dominatrix', 'dyke', 'enema', 'f\x20u\x20c\x20k', 'f\x20u\x20c\x20k\x20e\x20r', 'fag', 'fag1t', 'faget', 'fagg1t', 'faggit', 'faggot', 'fagg0t', 'fagit', 'fags', 'fagz', 'faig', 'faigs', 'fart', 'flipping\x20the\x20bird', 'fuck', 'fucker', 'fuckin', 'fucking', 'fucks', 'Fudge\x20Packer', 'fuk', 'Fukah', 'Fuken', 'fuker', 'Fukin', 'Fukk', 'Fukkah', 'Fukken', 'Fukker', 'Fukkin', 'g00k', 'God-damned', 'h00r', 'h0ar', 'h0re', 'hells', 'hoar', 'hoor', 'hoore', 'jackoff', 'jap', 'japs', 'jerk-off', 'jisim', 'jiss', 'jizm', 'jizz', 'knob', 'knobs', 'knobz', 'kunt', 'kunts', 'kuntz', 'Lezzian', 'Lipshits', 'Lipshitz', 'masochist', 'masokist', 'massterbait', 'masstrbait', 'masstrbate', 'masterbaiter', 'masterbate', 'masterbates', 'Motha\x20Fucker', 'Motha\x20Fuker', 'Motha\x20Fukkah', 'Motha\x20Fukker', 'Mother\x20Fucker', 'Mother\x20Fukah', 'Mother\x20Fuker', 'Mother\x20Fukkah', 'Mother\x20Fukker', 'mother-fucker', 'Mutha\x20Fucker', 'Mutha\x20Fukah', 'Mutha\x20Fuker', 'Mutha\x20Fukkah', 'Mutha\x20Fukker', 'n1gr', 'nastt', 'nigger;', 'nigur;', 'niiger;', 'niigr;', 'orafis', 'orgasim;', 'orgasm', 'orgasum', 'oriface', 'orifice', 'orifiss', 'packi', 'packie', 'packy', 'paki', 'pakie', 'paky', 'pecker', 'peeenus', 'peeenusss', 'peenus', 'peinus', 'pen1s', 'penas', 'penis', 'penis-breath', 'penus', 'penuus', 'Phuc', 'Phuck', 'Phuk', 'Phuker', 'Phukker', 'polac', 'polack', 'polak', 'Poonani', 'pr1c', 'pr1ck', 'pr1k', 'pusse', 'pussee', 'pussy', 'puuke', 'puuker', 'queer', 'queers', 'queerz', 'qweers', 'qweerz', 'qweir', 'recktum', 'rectum', 'retard', 'sadist', 'scank', 'schlong', 'screwing', 'semen', 'sex', 'sexy', 'Sh!t', 'sh1t', 'sh1ter', 'sh1ts', 'sh1tter', 'sh1tz', 'shit', 'shits', 'shitter', 'Shitty', 'Shity', 'shitz', 'Shyt', 'Shyte', 'Shytty', 'Shyty', 'skanck', 'skank', 'skankee', 'skankey', 'skanks', 'Skanky', 'slag', 'slut', 'sluts', 'Slutty', 'slutz', 'son-of-a-bitch', 'tit', 'turd', 'va1jina', 'vag1na', 'vagiina', 'vagina', 'vaj1na', 'vajina', 'vullva', 'vulva', 'w0p', 'wh00r', 'wh0re', 'whore', 'xrated', 'xxx', 'b!+ch', 'bitch', 'blowjob', 'clit', 'arschloch', 'fuck', 'shit', 'ass', 'asshole', 'b!tch', 'b17ch', 'b1tch', 'bastard', 'bi+ch', 'boiolas', 'buceta', 'c0ck', 'cawk', 'chink', 'cipa', 'clits', 'cock', 'cum', 'cunt', 'dildo', 'dirsa', 'ejakulate', 'fatass', 'fcuk', 'fuk', 'fux0r', 'hoer', 'hore', 'jism', 'kawk', 'l3itch', 'l3i+ch', 'lesbian', 'masturbate', 'masterbat*', 'masterbat3', 'motherfucker', 's.o.b.', 'mofo', 'nazi', 'nigga', 'nigger', 'nutsack', 'phuck', 'pimpis', 'pusse', 'pussy', 'scrotum', 'sh!t', 'shemale', 'shi+', 'sh!+', 'slut', 'smut', 'teets', 'tits', 'boobs', 'b00bs', 'teez', 'testical', 'testicle', 'titt', 'w00se', 'jackoff', 'wank', 'whoar', 'whore', '*damn', '*dyke', '*fuck*', '*shit*', '@$$', 'amcik', 'andskota', 'arse*', 'assrammer', 'ayir', 'bi7ch', 'bitch*', 'bollock*', 'breasts', 'butt-pirate', 'cabron', 'cazzo', 'chraa', 'chuj', 'Cock*', 'cunt*', 'd4mn', 'daygo', 'dego', 'dick*', 'dike*', 'dupa', 'dziwka', 'ejackulate', 'Ekrem*', 'Ekto', 'enculer', 'faen', 'fag*', 'fanculo', 'fanny', 'feces', 'feg', 'Felcher', 'ficken', 'fitt*', 'Flikker', 'foreskin', 'Fotze', 'Fu(*', 'fuk*', 'futkretzn', 'gook', 'guiena', 'h0r', 'h4x0r', 'hell', 'helvete', 'hoer*', 'honkey', 'Huevon', 'hui', 'injun', 'jizz', 'kanker*', 'kike', 'klootzak', 'kraut', 'knulle', 'kuk', 'kuksuger', 'Kurac', 'kurwa', 'kusi*', 'kyrpa*', 'lesbo', 'mamhoon', 'masturbat*', 'merd*', 'mibun', 'monkleigh', 'mouliewop', 'muie', 'mulkku', 'muschi', 'nazis', 'nepesaurio', 'nigger*', 'orospu', 'paska*', 'perse', 'picka', 'pierdol*', 'pillu*', 'pimmel', 'piss*', 'pizda', 'poontsee', 'poop', 'porn', 'p0rn', 'pr0n', 'preteen', 'pula', 'pule', 'puta', 'puto', 'qahbeh', 'queef*', 'rautenberg', 'schaffer', 'scheiss*', 'schlampe', 'schmuck', 'screw', 'sh!t*', 'sharmuta', 'sharmute', 'shipal', 'shiz', 'skribz', 'skurwysyn', 'sphencter', 'spic', 'spierdalaj', 'splooge', 'suka', 'b00b*', 'testicle*', 'titt*', 'twat', 'vittu', 'wank*', 'wetback*', 'wichser', 'wop*', 'yed', 'zabourah']
  };
}, function(d0O, d0P, d0Q) {
  d0O['exports'] = {
    'object': d0Q(0x6a),
    'array': d0Q(0x6b),
    'regex': d0Q(0x6c)
  };
}, function(d0R, d0S) {
  d0R['exports'] = {
    '4r5e': 0x1,
    '5h1t': 0x1,
    '5hit': 0x1,
    'a55': 0x1,
    'anal': 0x1,
    'anus': 0x1,
    'ar5e': 0x1,
    'arrse': 0x1,
    'arse': 0x1,
    'ass': 0x1,
    'ass-fucker': 0x1,
    'asses': 0x1,
    'assfucker': 0x1,
    'assfukka': 0x1,
    'asshole': 0x1,
    'assholes': 0x1,
    'asswhole': 0x1,
    'a_s_s': 0x1,
    'b!tch': 0x1,
    'b00bs': 0x1,
    'b17ch': 0x1,
    'b1tch': 0x1,
    'ballbag': 0x1,
    'balls': 0x1,
    'ballsack': 0x1,
    'bastard': 0x1,
    'beastial': 0x1,
    'beastiality': 0x1,
    'bellend': 0x1,
    'bestial': 0x1,
    'bestiality': 0x1,
    'bi+ch': 0x1,
    'biatch': 0x1,
    'bitch': 0x1,
    'bitcher': 0x1,
    'bitchers': 0x1,
    'bitches': 0x1,
    'bitchin': 0x1,
    'bitching': 0x1,
    'bloody': 0x1,
    'blow job': 0x1,
    'blowjob': 0x1,
    'blowjobs': 0x1,
    'boiolas': 0x1,
    'bollock': 0x1,
    'bollok': 0x1,
    'boner': 0x1,
    'boob': 0x1,
    'boobs': 0x1,
    'booobs': 0x1,
    'boooobs': 0x1,
    'booooobs': 0x1,
    'booooooobs': 0x1,
    'breasts': 0x1,
    'buceta': 0x1,
    'bugger': 0x1,
    'bum': 0x1,
    'bunny fucker': 0x1,
    'butt': 0x1,
    'butthole': 0x1,
    'buttmuch': 0x1,
    'buttplug': 0x1,
    'c0ck': 0x1,
    'c0cksucker': 0x1,
    'carpet muncher': 0x1,
    'cawk': 0x1,
    'chink': 0x1,
    'cipa': 0x1,
    'cl1t': 0x1,
    'clit': 0x1,
    'clitoris': 0x1,
    'clits': 0x1,
    'cnut': 0x1,
    'cock': 0x1,
    'cock-sucker': 0x1,
    'cockface': 0x1,
    'cockhead': 0x1,
    'cockmunch': 0x1,
    'cockmuncher': 0x1,
    'cocks': 0x1,
    'cocksuck': 0x1,
    'cocksucked': 0x1,
    'cocksucker': 0x1,
    'cocksucking': 0x1,
    'cocksucks': 0x1,
    'cocksuka': 0x1,
    'cocksukka': 0x1,
    'cok': 0x1,
    'cokmuncher': 0x1,
    'coksucka': 0x1,
    'coon': 0x1,
    'cox': 0x1,
    'crap': 0x1,
    'cum': 0x1,
    'cummer': 0x1,
    'cumming': 0x1,
    'cums': 0x1,
    'cumshot': 0x1,
    'cunilingus': 0x1,
    'cunillingus': 0x1,
    'cunnilingus': 0x1,
    'cunt': 0x1,
    'cuntlick': 0x1,
    'cuntlicker': 0x1,
    'cuntlicking': 0x1,
    'cunts': 0x1,
    'cyalis': 0x1,
    'cyberfuc': 0x1,
    'cyberfuck': 0x1,
    'cyberfucked': 0x1,
    'cyberfucker': 0x1,
    'cyberfuckers': 0x1,
    'cyberfucking': 0x1,
    'd1ck': 0x1,
    'damn': 0x1,
    'dick': 0x1,
    'dickhead': 0x1,
    'dildo': 0x1,
    'dildos': 0x1,
    'dink': 0x1,
    'dinks': 0x1,
    'dirsa': 0x1,
    'dlck': 0x1,
    'dog-fucker': 0x1,
    'doggin': 0x1,
    'dogging': 0x1,
    'donkeyribber': 0x1,
    'doosh': 0x1,
    'duche': 0x1,
    'dyke': 0x1,
    'ejaculate': 0x1,
    'ejaculated': 0x1,
    'ejaculates': 0x1,
    'ejaculating': 0x1,
    'ejaculatings': 0x1,
    'ejaculation': 0x1,
    'ejakulate': 0x1,
    'f u c k': 0x1,
    'f u c k e r': 0x1,
    'f4nny': 0x1,
    'fag': 0x1,
    'fagging': 0x1,
    'faggitt': 0x1,
    'faggot': 0x1,
    'faggs': 0x1,
    'fagot': 0x1,
    'fagots': 0x1,
    'fags': 0x1,
    'fanny': 0x1,
    'fannyflaps': 0x1,
    'fannyfucker': 0x1,
    'fanyy': 0x1,
    'fatass': 0x1,
    'fcuk': 0x1,
    'fcuker': 0x1,
    'fcuking': 0x1,
    'feck': 0x1,
    'fecker': 0x1,
    'felching': 0x1,
    'fellate': 0x1,
    'fellatio': 0x1,
    'fingerfuck': 0x1,
    'fingerfucked': 0x1,
    'fingerfucker': 0x1,
    'fingerfuckers': 0x1,
    'fingerfucking': 0x1,
    'fingerfucks': 0x1,
    'fistfuck': 0x1,
    'fistfucked': 0x1,
    'fistfucker': 0x1,
    'fistfuckers': 0x1,
    'fistfucking': 0x1,
    'fistfuckings': 0x1,
    'fistfucks': 0x1,
    'flange': 0x1,
    'fook': 0x1,
    'fooker': 0x1,
    'fuck': 0x1,
    'fucka': 0x1,
    'fucked': 0x1,
    'fucker': 0x1,
    'fuckers': 0x1,
    'fuckhead': 0x1,
    'fuckheads': 0x1,
    'fuckin': 0x1,
    'fucking': 0x1,
    'fuckings': 0x1,
    'fuckingshitmotherfucker': 0x1,
    'fuckme': 0x1,
    'fucks': 0x1,
    'fuckwhit': 0x1,
    'fuckwit': 0x1,
    'fudge packer': 0x1,
    'fudgepacker': 0x1,
    'fuk': 0x1,
    'fuker': 0x1,
    'fukker': 0x1,
    'fukkin': 0x1,
    'fuks': 0x1,
    'fukwhit': 0x1,
    'fukwit': 0x1,
    'fux': 0x1,
    'fux0r': 0x1,
    'f_u_c_k': 0x1,
    'gangbang': 0x1,
    'gangbanged': 0x1,
    'gangbangs': 0x1,
    'gaylord': 0x1,
    'gaysex': 0x1,
    'goatse': 0x1,
    'God': 0x1,
    'god-dam': 0x1,
    'god-damned': 0x1,
    'goddamn': 0x1,
    'goddamned': 0x1,
    'hardcoresex': 0x1,
    'hell': 0x1,
    'heshe': 0x1,
    'hoar': 0x1,
    'hoare': 0x1,
    'hoer': 0x1,
    'homo': 0x1,
    'hore': 0x1,
    'horniest': 0x1,
    'horny': 0x1,
    'hotsex': 0x1,
    'jack-off': 0x1,
    'jackoff': 0x1,
    'jap': 0x1,
    'jerk-off': 0x1,
    'jism': 0x1,
    'jiz': 0x1,
    'jizm': 0x1,
    'jizz': 0x1,
    'kawk': 0x1,
    'knob': 0x1,
    'knobead': 0x1,
    'knobed': 0x1,
    'knobend': 0x1,
    'knobhead': 0x1,
    'knobjocky': 0x1,
    'knobjokey': 0x1,
    'kock': 0x1,
    'kondum': 0x1,
    'kondums': 0x1,
    'kum': 0x1,
    'kummer': 0x1,
    'kumming': 0x1,
    'kums': 0x1,
    'kunilingus': 0x1,
    'l3i+ch': 0x1,
    'l3itch': 0x1,
    'labia': 0x1,
    'lust': 0x1,
    'lusting': 0x1,
    'm0f0': 0x1,
    'm0fo': 0x1,
    'm45terbate': 0x1,
    'ma5terb8': 0x1,
    'ma5terbate': 0x1,
    'masochist': 0x1,
    'master-bate': 0x1,
    'masterb8': 0x1,
    'masterbat*': 0x1,
    'masterbat3': 0x1,
    'masterbate': 0x1,
    'masterbation': 0x1,
    'masterbations': 0x1,
    'masturbate': 0x1,
    'mo-fo': 0x1,
    'mof0': 0x1,
    'mofo': 0x1,
    'mothafuck': 0x1,
    'mothafucka': 0x1,
    'mothafuckas': 0x1,
    'mothafuckaz': 0x1,
    'mothafucked': 0x1,
    'mothafucker': 0x1,
    'mothafuckers': 0x1,
    'mothafuckin': 0x1,
    'mothafucking': 0x1,
    'mothafuckings': 0x1,
    'mothafucks': 0x1,
    'mother fucker': 0x1,
    'motherfuck': 0x1,
    'motherfucked': 0x1,
    'motherfucker': 0x1,
    'motherfuckers': 0x1,
    'motherfuckin': 0x1,
    'motherfucking': 0x1,
    'motherfuckings': 0x1,
    'motherfuckka': 0x1,
    'motherfucks': 0x1,
    'muff': 0x1,
    'mutha': 0x1,
    'muthafecker': 0x1,
    'muthafuckker': 0x1,
    'muther': 0x1,
    'mutherfucker': 0x1,
    'n1gga': 0x1,
    'n1gger': 0x1,
    'nazi': 0x1,
    'nigg3r': 0x1,
    'nigg4h': 0x1,
    'nigga': 0x1,
    'niggah': 0x1,
    'niggas': 0x1,
    'niggaz': 0x1,
    'nigger': 0x1,
    'niggers': 0x1,
    'nob': 0x1,
    'nob jokey': 0x1,
    'nobhead': 0x1,
    'nobjocky': 0x1,
    'nobjokey': 0x1,
    'numbnuts': 0x1,
    'nutsack': 0x1,
    'orgasim': 0x1,
    'orgasims': 0x1,
    'orgasm': 0x1,
    'orgasms': 0x1,
    'p0rn': 0x1,
    'pawn': 0x1,
    'pecker': 0x1,
    'penis': 0x1,
    'penisfucker': 0x1,
    'phonesex': 0x1,
    'phuck': 0x1,
    'phuk': 0x1,
    'phuked': 0x1,
    'phuking': 0x1,
    'phukked': 0x1,
    'phukking': 0x1,
    'phuks': 0x1,
    'phuq': 0x1,
    'pigfucker': 0x1,
    'pimpis': 0x1,
    'piss': 0x1,
    'pissed': 0x1,
    'pisser': 0x1,
    'pissers': 0x1,
    'pisses': 0x1,
    'pissflaps': 0x1,
    'pissin': 0x1,
    'pissing': 0x1,
    'pissoff': 0x1,
    'poop': 0x1,
    'porn': 0x1,
    'porno': 0x1,
    'pornography': 0x1,
    'pornos': 0x1,
    'prick': 0x1,
    'pricks': 0x1,
    'pron': 0x1,
    'pube': 0x1,
    'pusse': 0x1,
    'pussi': 0x1,
    'pussies': 0x1,
    'pussy': 0x1,
    'pussys': 0x1,
    'rectum': 0x1,
    'retard': 0x1,
    'rimjaw': 0x1,
    'rimming': 0x1,
    's hit': 0x1,
    's.o.b.': 0x1,
    'sadist': 0x1,
    'schlong': 0x1,
    'screwing': 0x1,
    'scroat': 0x1,
    'scrote': 0x1,
    'scrotum': 0x1,
    'semen': 0x1,
    'sex': 0x1,
    'sh!+': 0x1,
    'sh!t': 0x1,
    'sh1t': 0x1,
    'shag': 0x1,
    'shagger': 0x1,
    'shaggin': 0x1,
    'shagging': 0x1,
    'shemale': 0x1,
    'shi+': 0x1,
    'shit': 0x1,
    'shitdick': 0x1,
    'shite': 0x1,
    'shited': 0x1,
    'shitey': 0x1,
    'shitfuck': 0x1,
    'shitfull': 0x1,
    'shithead': 0x1,
    'shiting': 0x1,
    'shitings': 0x1,
    'shits': 0x1,
    'shitted': 0x1,
    'shitter': 0x1,
    'shitters': 0x1,
    'shitting': 0x1,
    'shittings': 0x1,
    'shitty': 0x1,
    'skank': 0x1,
    'slut': 0x1,
    'sluts': 0x1,
    'smegma': 0x1,
    'smut': 0x1,
    'snatch': 0x1,
    'son-of-a-bitch': 0x1,
    'spac': 0x1,
    'spunk': 0x1,
    's_h_i_t': 0x1,
    't1tt1e5': 0x1,
    't1tties': 0x1,
    'teets': 0x1,
    'teez': 0x1,
    'testical': 0x1,
    'testicle': 0x1,
    'tit': 0x1,
    'titfuck': 0x1,
    'tits': 0x1,
    'titt': 0x1,
    'tittie5': 0x1,
    'tittiefucker': 0x1,
    'titties': 0x1,
    'tittyfuck': 0x1,
    'tittywank': 0x1,
    'titwank': 0x1,
    'tosser': 0x1,
    'turd': 0x1,
    'tw4t': 0x1,
    'twat': 0x1,
    'twathead': 0x1,
    'twatty': 0x1,
    'twunt': 0x1,
    'twunter': 0x1,
    'v14gra': 0x1,
    'v1gra': 0x1,
    'vagina': 0x1,
    'viagra': 0x1,
    'vulva': 0x1,
    'w00se': 0x1,
    'wang': 0x1,
    'wank': 0x1,
    'wanker': 0x1,
    'wanky': 0x1,
    'whoar': 0x1,
    'whore': 0x1,
    'willies': 0x1,
    'willy': 0x1,
    'xrated': 0x1,
    'xxx': 0x1
  };
}, function(d0T, d0U) {
  d0T['exports'] = ['4r5e', '5h1t', '5hit', 'a55', 'anal', 'anus', 'ar5e', 'arrse', 'arse', 'ass', 'ass-fucker', 'asses', 'assfucker', 'assfukka', 'asshole', 'assholes', 'asswhole', 'a_s_s', 'b!tch', 'b00bs', 'b17ch', 'b1tch', 'ballbag', 'balls', 'ballsack', 'bastard', 'beastial', 'beastiality', 'bellend', 'bestial', 'bestiality', 'bi+ch', 'biatch', 'bitch', 'bitcher', 'bitchers', 'bitches', 'bitchin', 'bitching', 'bloody', 'blow\x20job', 'blowjob', 'blowjobs', 'boiolas', 'bollock', 'bollok', 'boner', 'boob', 'boobs', 'booobs', 'boooobs', 'booooobs', 'booooooobs', 'breasts', 'buceta', 'bugger', 'bum', 'bunny\x20fucker', 'butt', 'butthole', 'buttmuch', 'buttplug', 'c0ck', 'c0cksucker', 'carpet\x20muncher', 'cawk', 'chink', 'cipa', 'cl1t', 'clit', 'clitoris', 'clits', 'cnut', 'cock', 'cock-sucker', 'cockface', 'cockhead', 'cockmunch', 'cockmuncher', 'cocks', 'cocksuck', 'cocksucked', 'cocksucker', 'cocksucking', 'cocksucks', 'cocksuka', 'cocksukka', 'cok', 'cokmuncher', 'coksucka', 'coon', 'cox', 'crap', 'cum', 'cummer', 'cumming', 'cums', 'cumshot', 'cunilingus', 'cunillingus', 'cunnilingus', 'cunt', 'cuntlick', 'cuntlicker', 'cuntlicking', 'cunts', 'cyalis', 'cyberfuc', 'cyberfuck', 'cyberfucked', 'cyberfucker', 'cyberfuckers', 'cyberfucking', 'd1ck', 'damn', 'dick', 'dickhead', 'dildo', 'dildos', 'dink', 'dinks', 'dirsa', 'dlck', 'dog-fucker', 'doggin', 'dogging', 'donkeyribber', 'doosh', 'duche', 'dyke', 'ejaculate', 'ejaculated', 'ejaculates', 'ejaculating', 'ejaculatings', 'ejaculation', 'ejakulate', 'f\x20u\x20c\x20k', 'f\x20u\x20c\x20k\x20e\x20r', 'f4nny', 'fag', 'fagging', 'faggitt', 'faggot', 'faggs', 'fagot', 'fagots', 'fags', 'fanny', 'fannyflaps', 'fannyfucker', 'fanyy', 'fatass', 'fcuk', 'fcuker', 'fcuking', 'feck', 'fecker', 'felching', 'fellate', 'fellatio', 'fingerfuck', 'fingerfucked', 'fingerfucker', 'fingerfuckers', 'fingerfucking', 'fingerfucks', 'fistfuck', 'fistfucked', 'fistfucker', 'fistfuckers', 'fistfucking', 'fistfuckings', 'fistfucks', 'flange', 'fook', 'fooker', 'fuck', 'fucka', 'fucked', 'fucker', 'fuckers', 'fuckhead', 'fuckheads', 'fuckin', 'fucking', 'fuckings', 'fuckingshitmotherfucker', 'fuckme', 'fucks', 'fuckwhit', 'fuckwit', 'fudge\x20packer', 'fudgepacker', 'fuk', 'fuker', 'fukker', 'fukkin', 'fuks', 'fukwhit', 'fukwit', 'fux', 'fux0r', 'f_u_c_k', 'gangbang', 'gangbanged', 'gangbangs', 'gaylord', 'gaysex', 'goatse', 'God', 'god-dam', 'god-damned', 'goddamn', 'goddamned', 'hardcoresex', 'hell', 'heshe', 'hoar', 'hoare', 'hoer', 'homo', 'hore', 'horniest', 'horny', 'hotsex', 'jack-off', 'jackoff', 'jap', 'jerk-off', 'jism', 'jiz', 'jizm', 'jizz', 'kawk', 'knob', 'knobead', 'knobed', 'knobend', 'knobhead', 'knobjocky', 'knobjokey', 'kock', 'kondum', 'kondums', 'kum', 'kummer', 'kumming', 'kums', 'kunilingus', 'l3i+ch', 'l3itch', 'labia', 'lust', 'lusting', 'm0f0', 'm0fo', 'm45terbate', 'ma5terb8', 'ma5terbate', 'masochist', 'master-bate', 'masterb8', 'masterbat*', 'masterbat3', 'masterbate', 'masterbation', 'masterbations', 'masturbate', 'mo-fo', 'mof0', 'mofo', 'mothafuck', 'mothafucka', 'mothafuckas', 'mothafuckaz', 'mothafucked', 'mothafucker', 'mothafuckers', 'mothafuckin', 'mothafucking', 'mothafuckings', 'mothafucks', 'mother\x20fucker', 'motherfuck', 'motherfucked', 'motherfucker', 'motherfuckers', 'motherfuckin', 'motherfucking', 'motherfuckings', 'motherfuckka', 'motherfucks', 'muff', 'mutha', 'muthafecker', 'muthafuckker', 'muther', 'mutherfucker', 'n1gga', 'n1gger', 'nazi', 'nigg3r', 'nigg4h', 'nigga', 'niggah', 'niggas', 'niggaz', 'nigger', 'niggers', 'nob', 'nob\x20jokey', 'nobhead', 'nobjocky', 'nobjokey', 'numbnuts', 'nutsack', 'orgasim', 'orgasims', 'orgasm', 'orgasms', 'p0rn', 'pawn', 'pecker', 'penis', 'penisfucker', 'phonesex', 'phuck', 'phuk', 'phuked', 'phuking', 'phukked', 'phukking', 'phuks', 'phuq', 'pigfucker', 'pimpis', 'piss', 'pissed', 'pisser', 'pissers', 'pisses', 'pissflaps', 'pissin', 'pissing', 'pissoff', 'poop', 'porn', 'porno', 'pornography', 'pornos', 'prick', 'pricks', 'pron', 'pube', 'pusse', 'pussi', 'pussies', 'pussy', 'pussys', 'rectum', 'retard', 'rimjaw', 'rimming', 's\x20hit', 's.o.b.', 'sadist', 'schlong', 'screwing', 'scroat', 'scrote', 'scrotum', 'semen', 'sex', 'sh!+', 'sh!t', 'sh1t', 'shag', 'shagger', 'shaggin', 'shagging', 'shemale', 'shi+', 'shit', 'shitdick', 'shite', 'shited', 'shitey', 'shitfuck', 'shitfull', 'shithead', 'shiting', 'shitings', 'shits', 'shitted', 'shitter', 'shitters', 'shitting', 'shittings', 'shitty', 'skank', 'slut', 'sluts', 'smegma', 'smut', 'snatch', 'son-of-a-bitch', 'spac', 'spunk', 's_h_i_t', 't1tt1e5', 't1tties', 'teets', 'teez', 'testical', 'testicle', 'tit', 'titfuck', 'tits', 'titt', 'tittie5', 'tittiefucker', 'titties', 'tittyfuck', 'tittywank', 'titwank', 'tosser', 'turd', 'tw4t', 'twat', 'twathead', 'twatty', 'twunt', 'twunter', 'v14gra', 'v1gra', 'vagina', 'viagra', 'vulva', 'w00se', 'wang', 'wank', 'wanker', 'wanky', 'whoar', 'whore', 'willies', 'willy', 'xrated', 'xxx'];
}, function(d0V, d0W) {
  d0V['exports'] = /\b(4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck|cocksucked|cocksucker|cocksucking|cocksucks|cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick|cuntlicker|cuntlicking|cunts|cyalis|cyberfuc|cyberfuck|cyberfucked|cyberfucker|cyberfuckers|cyberfucking|d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates|ejaculating|ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck|fingerfucked|fingerfucker|fingerfuckers|fingerfucking|fingerfucks|fistfuck|fistfucked|fistfucker|fistfuckers|fistfucking|fistfuckings|fistfucks|flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme|fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked|mothafucker|mothafuckers|mothafuckin|mothafucking|mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses|pissflaps|pissin|pissing|pissoff|poop|porn|porno|pornography|pornos|prick|pricks|pron|pube|pusse|pussi|pussies|pussy|pussys|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters|shitting|shittings|shitty|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx)\b/gi;
}]);
